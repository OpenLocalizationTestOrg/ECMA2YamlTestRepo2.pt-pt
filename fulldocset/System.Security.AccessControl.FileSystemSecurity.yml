### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.FileSystemSecurity
  id: FileSystemSecurity
  children:
  - System.Security.AccessControl.FileSystemSecurity.AccessRightType
  - System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.FileSystemSecurity.AccessRuleType
  - System.Security.AccessControl.FileSystemSecurity.AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  - System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.FileSystemSecurity.AuditRuleType
  - System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)
  - System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)
  - System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  - System.Security.AccessControl.FileSystemSecurity.SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  langs:
  - csharp
  name: FileSystemSecurity
  nameWithType: FileSystemSecurity
  fullName: System.Security.AccessControl.FileSystemSecurity
  type: Class
  summary: "Representa o controlo de acesso e auditoria de segurança para um ficheiro ou diretório."
  remarks: "A classe de FileSystemSecurity é a classe base para o <xref:System.Security.AccessControl.FileSecurity>e <xref:System.Security.AccessControl.DirectorySecurity>classes.</xref:System.Security.AccessControl.DirectorySecurity> </xref:System.Security.AccessControl.FileSecurity>  Estas classes representam todos os direitos de acesso para um sistema de ficheiro ou diretório e definem a forma como as tentativas de acesso são auditadas.       A classe de FileSystemSecurity representa direitos de acesso e auditoria como um conjunto de regras. Cada regra de acesso é representada por um <xref:System.Security.AccessControl.FileSystemAccessRule>objeto, enquanto cada regra de auditoria é representada por um <xref:System.Security.AccessControl.FileSystemAuditRule>objeto.</xref:System.Security.AccessControl.FileSystemAuditRule> </xref:System.Security.AccessControl.FileSystemAccessRule>       A classe de FileSystemSecurity é uma abstração do sistema de segurança de ficheiros subjacente do Microsoft Windows. Este sistema, cada ficheiro ou diretório tem uma lista de controlo de acesso discricionário (DACL), que controla o acesso ao ficheiro ou diretório, e uma lista de controlo do acesso system (SACL), que especifica as tentativas de controlo de acesso que são auditadas.  O <xref:System.Security.AccessControl.FileSystemAccessRule>e <xref:System.Security.AccessControl.FileSystemAuditRule>classes são abstrações de entradas de controlo de acesso (ACEs) que compõem o DACL e SACLs.</xref:System.Security.AccessControl.FileSystemAuditRule> </xref:System.Security.AccessControl.FileSystemAccessRule>       A classe de FileSystemSecurity oculta muitos dos detalhes de DACL e SACLs; não dispõe de preocupar com a ordenação de ACE ou DACL nulo.       Para manter as informações de lista (ACL) de controlo de acesso novo ou alterado para um ficheiro, utilize o <xref:System.IO.File.SetAccessControl%2A>ou <xref:System.IO.FileInfo.SetAccessControl%2A>método.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  Para manter as informações de ACL de novas ou alteradas para um diretório, utilize o <xref:System.IO.Directory.SetAccessControl%2A>ou <xref:System.IO.FileInfo.SetAccessControl%2A>método.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       Para obter informações de ACL de um ficheiro, utilize o <xref:System.IO.File.GetAccessControl%2A>ou <xref:System.IO.FileInfo.GetAccessControl%2A>método.</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  Para obter informações de ACL de um diretório, utilize o <xref:System.IO.Directory.GetAccessControl%2A>ou <xref:System.IO.DirectoryInfo.GetAccessControl%2A>método.</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>"
  example:
  - "The following code example uses the <xref:System.Security.AccessControl.FileSecurity> class to add and then remove an access control list (ACL) entry from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cs[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/t-system.security.access_6_1.cs)]\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/t-system.security.access_6_1.vb)]\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/t-system.security.access_6_1.cpp)]"
  syntax:
    content: 'public abstract class FileSystemSecurity : System.Security.AccessControl.NativeObjectSecurity'
  inheritance:
  - System.Object
  - System.Security.AccessControl.ObjectSecurity
  - System.Security.AccessControl.CommonObjectSecurity
  - System.Security.AccessControl.NativeObjectSecurity
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)
  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified
  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.GroupModified
  - System.Security.AccessControl.ObjectSecurity.IsContainer
  - System.Security.AccessControl.ObjectSecurity.IsDS
  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
  - System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.OwnerModified
  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.ReadLock
  - System.Security.AccessControl.ObjectSecurity.ReadUnlock
  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.WriteLock
  - System.Security.AccessControl.ObjectSecurity.WriteUnlock
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRightType
  id: AccessRightType
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AccessRightType
  nameWithType: FileSystemSecurity.AccessRightType
  fullName: System.Security.AccessControl.FileSystemSecurity.AccessRightType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Obtém a enumeração que o <xref href=&quot;System.Security.AccessControl.FileSystemSecurity&quot;> </xref> utiliza para representar os direitos de acesso de classe."
  remarks: "As classes que derivam de <xref:System.Security.AccessControl.FileSystemSecurity>classe substituir a propriedade AccessRightType e devolver o tipo de utilizarem para representar os direitos de acesso.</xref:System.Security.AccessControl.FileSystemSecurity> Quando trabalha com matrizes ou coleções que contenham vários tipos de objetos de segurança, utilize esta propriedade para determinar o tipo de enumeração correto a utilizar com cada objeto de segurança."
  syntax:
    content: public override Type AccessRightType { get; }
    return:
      type: System.Type
      description: "A <xref:System.Type>objeto que representa o <xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;> </xref> enumeração.</xref:System.Type>"
  overload: System.Security.AccessControl.FileSystemSecurity.AccessRightType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  id: AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: FileSystemSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> classe que representa uma nova regra de controlo de acesso para o utilizador especificado, com os direitos de acesso especificado, o controlo de acesso e sinalizadores."
  remarks: "O modo recomendado para criar regras de controlo de acesso está a utilizar os construtores da <xref:System.Security.AccessControl.FileSystemAccessRule>classe.</xref:System.Security.AccessControl.FileSystemAccessRule>       O tipo de retorno do método AccessRuleFactory é a classe base, <xref:System.Security.AccessControl.AccessRule>, mas o valor de retorno pode ser convertido em segurança para a classe derivada</xref:System.Security.AccessControl.AccessRule>"
  syntax:
    content: public override sealed System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: "Um <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> objeto que representa uma conta de utilizador."
    - id: accessMask
      type: System.Int32
      description: "Um número inteiro que especifica um tipo de acesso."
    - id: isInherited
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a regra de acesso é herdada; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "Um do <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref> valores que especifica como a propagação máscaras de acesso para objetos subordinados."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "Um do <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;> </xref> valores que especifica como a propagação de entradas de controlo de acesso (ACEs) para objetos subordinados."
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "Um do <xref href=&quot;System.Security.AccessControl.AccessControlType&quot;> </xref> valores que especifica se o acesso é permitido ou negado."
    return:
      type: System.Security.AccessControl.AccessRule
      description: "Um novo <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> objeto que representa uma nova regra de controlo de acesso para o utilizador especificado, com os direitos de acesso especificado, o controlo de acesso e sinalizadores."
  overload: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The <code>accessMask</code>, <code>inheritanceFlags</code>, <code>propagationFlags</code>, or <code>type</code> parameters specify an invalid value."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>identityReference</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - ou - <code> accessMask </code> parâmetro é zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> identityReference </code> parâmetro é nenhum tipo <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>, nem um tipo como <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref> que pode ser convertido no tipo <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleType
  id: AccessRuleType
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AccessRuleType
  nameWithType: FileSystemSecurity.AccessRuleType
  fullName: System.Security.AccessControl.FileSystemSecurity.AccessRuleType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Obtém a enumeração que o <xref href=&quot;System.Security.AccessControl.FileSystemSecurity&quot;> </xref> utiliza para representar as regras de acesso de classe."
  remarks: "As classes que derivam de <xref:System.Security.AccessControl.FileSystemSecurity>classe substituir a propriedade AccessRuleType e devolver o tipo de utilizarem para representar as regras de acesso.</xref:System.Security.AccessControl.FileSystemSecurity> Quando trabalha com matrizes ou coleções que contenham vários tipos de objetos de segurança, utilize esta propriedade para determinar o tipo de regra de acesso corretas para utilizar com cada objeto de segurança."
  syntax:
    content: public override Type AccessRuleType { get; }
    return:
      type: System.Type
      description: "A <xref:System.Type>objeto que representa o <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> classe</xref:System.Type>"
  overload: System.Security.AccessControl.FileSystemSecurity.AccessRuleType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  id: AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AddAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.AddAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.AddAccessRule(FileSystemAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Adiciona a permissão de lista (ACL) de controlo de acesso especificado para o ficheiro atual ou o diretório."
  remarks: "O método AddAccessRule adiciona uma nova regra à lista de regras contidas dentro de um <xref:System.Security.AccessControl.FileSystemSecurity>objeto.</xref:System.Security.AccessControl.FileSystemSecurity>       Se já existir uma lista de controlo de acesso (ACL) para a regra especificada, o método AddAccessRule ainda irá adicionar a regra, com uma exceção: um <xref:System.Security.AccessControl.FileSystemAccessRule>objeto criado utilizando o <xref:System.Security.AccessControl.AccessControlType>valor de enumeração substitui um objeto criado utilizando o <xref:System.Security.AccessControl.AccessControlType>valor de enumeração.</xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.FileSystemAccessRule>       Para manter as informações de ACL de novas ou alteradas para um ficheiro, utilize o <xref:System.IO.File.SetAccessControl%2A>ou <xref:System.IO.FileInfo.SetAccessControl%2A>método.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  Para manter as informações de ACL de novas ou alteradas para um diretório, utilize o <xref:System.IO.Directory.SetAccessControl%2A>ou <xref:System.IO.FileInfo.SetAccessControl%2A>método.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       Para obter informações de ACL de um ficheiro, utilize o <xref:System.IO.File.GetAccessControl%2A>ou <xref:System.IO.FileInfo.GetAccessControl%2A>método.</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  Para obter informações de ACL de um diretório, utilize o <xref:System.IO.Directory.GetAccessControl%2A>ou <xref:System.IO.DirectoryInfo.GetAccessControl%2A>método.</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>       Ao adicionar uma regra de acesso sem definição de <xref:System.Security.AccessControl.FileSystemRights>Sinalizador o <xref:System.Security.AccessControl.FileSystemRights>Sinalizador será automaticamente adicionado à sua regra.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  Se remover a regra mais tarde sem especificar o <xref:System.Security.AccessControl.FileSystemRights>sinalizador, o sinalizador serão removidos automaticamente.</xref:System.Security.AccessControl.FileSystemRights>"
  example:
  - "The following code example uses the <xref:System.Security.AccessControl.FileSecurity> class to add and then remove an access control list (ACL) entry from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cs[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/92a71f8c-d81d-4955-8014-_1.cs)]\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/92a71f8c-d81d-4955-8014-_1.vb)]\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/92a71f8c-d81d-4955-8014-_1.cpp)]"
  syntax:
    content: public void AddAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAccessRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> objeto que representa uma permissão de lista (ACL) de controlo de acesso para adicionar a um ficheiro ou diretório."
  overload: System.Security.AccessControl.FileSystemSecurity.AddAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  id: AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AddAuditRule(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.AddAuditRule(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.AddAuditRule(FileSystemAuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Adiciona a regra de auditoria especificado para o ficheiro atual ou o diretório."
  remarks: "O método AddAuditRule adiciona uma nova regra de auditoria para a lista de regras contidos um <xref:System.Security.AccessControl.FileSystemSecurity>objeto.</xref:System.Security.AccessControl.FileSystemSecurity>       Se já existe uma regra de auditoria para a regra especificada, o método AddAuditRule ainda irá adicionar a regra."
  example:
  - "The following code example uses the AddAuditRule method to add an audit rule to a file and uses the <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A> method to remove the audit rule from the file.  You must supply a valid user or group account to run this example.  \n  \n [!code-vb[AccessControl.FileSystemAuditRule#1](~/add/codesnippet/visualbasic/a9a5c9f6-a8bf-4ad9-9027-_1.vb)]\n [!code-cs[AccessControl.FileSystemAuditRule#1](~/add/codesnippet/csharp/a9a5c9f6-a8bf-4ad9-9027-_1.cs)]"
  syntax:
    content: public void AddAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAuditRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> objeto que representa uma regra de auditoria para adicionar a um ficheiro ou diretório."
  overload: System.Security.AccessControl.FileSystemSecurity.AddAuditRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  id: AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: FileSystemSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> classe que representa a regra de auditoria especificado para o utilizador especificado."
  remarks: "O modo recomendado para criar regras de auditoria é utilizar os construtores da <xref:System.Security.AccessControl.FileSystemAuditRule>classe.</xref:System.Security.AccessControl.FileSystemAuditRule>       O tipo de retorno do método AuditRuleFactory é a classe base, <xref:System.Security.AccessControl.AuditRule>, mas o valor de retorno pode ser convertido em segurança para a classe derivada</xref:System.Security.AccessControl.AuditRule>"
  syntax:
    content: public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: "Um <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> objeto que representa uma conta de utilizador."
    - id: accessMask
      type: System.Int32
      description: "Um número inteiro que especifica um tipo de acesso."
    - id: isInherited
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a regra de acesso é herdada; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "Um do <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref> valores que especifica como a propagação máscaras de acesso para objetos subordinados."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "Um do <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;> </xref> valores que especifica como a propagação de entradas de controlo de acesso (ACEs) para objetos subordinados."
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "Um do <xref href=&quot;System.Security.AccessControl.AuditFlags&quot;> </xref> valores que especifica o tipo de auditoria para executar."
    return:
      type: System.Security.AccessControl.AuditRule
      description: "Um novo <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> objeto que representa a regra de auditoria especificado para o utilizador especificado."
  overload: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The <code>accessMask</code>, <code>inheritanceFlags</code>, <code>propagationFlags</code>, or <code>flags</code> properties specify an invalid value."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>identityReference</code> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - ou - <code> accessMask </code> propriedade é zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> identityReference </code> propriedade é nenhum tipo <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>, nem um tipo como <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref> que pode ser convertido no tipo <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleType
  id: AuditRuleType
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: AuditRuleType
  nameWithType: FileSystemSecurity.AuditRuleType
  fullName: System.Security.AccessControl.FileSystemSecurity.AuditRuleType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Obtém o tipo que o <xref href=&quot;System.Security.AccessControl.FileSystemSecurity&quot;> </xref> utiliza para representar regras de auditoria de classe."
  remarks: "Classes que derivam de <xref:System.Security.AccessControl.FileSystemSecurity>classe substituir a propriedade AuditRuleType e devolver o tipo de utilizarem para representar os direitos de auditoria.</xref:System.Security.AccessControl.FileSystemSecurity> Quando trabalha com matrizes ou coleções que contenham vários tipos de objetos de segurança, utilize esta propriedade para determinar o tipo de regra de auditoria correta a utilizar com cada objeto de segurança."
  syntax:
    content: public override Type AuditRuleType { get; }
    return:
      type: System.Type
      description: "A <xref:System.Type>objeto que representa o <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> classe</xref:System.Type>"
  overload: System.Security.AccessControl.FileSystemSecurity.AuditRuleType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  id: RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: RemoveAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.RemoveAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(FileSystemAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Remove todos os correspondente permite ou negam o controlo de acesso permissões de lista (ACL) do ficheiro atual ou do diretório."
  remarks: "O método RemoveAccessRule remove todas as correspondentes <xref:System.Security.AccessControl.AccessControlType>as regras de acesso ou a correspondência de todos os <xref:System.Security.AccessControl.AccessControlType>as regras de acesso de atual <xref:System.Security.AccessControl.FileSystemSecurity>objeto.</xref:System.Security.AccessControl.FileSystemSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType>  Por exemplo, pode utilizar este método para remover todos os <xref:System.Security.AccessControl.AccessControlType>as regras para um utilizador de acesso através da transmissão de um <xref:System.Security.AccessControl.FileSystemAccessRule>objeto criado utilizando o <xref:System.Security.AccessControl.AccessControlType>valor, o <xref:System.Security.AccessControl.FileSystemRights>valor e uma conta de utilizador.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.FileSystemAccessRule> </xref:System.Security.AccessControl.AccessControlType>  Ao fazê-lo, o método RemoveAccessRule remove quaisquer regras de negar que especificam o <xref:System.Security.AccessControl.FileSystemRights>valor ou o <xref:System.Security.AccessControl.FileSystemRights>valor.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>       Para manter as informações de lista (ACL) de controlo de acesso novo ou alterado para um ficheiro, utilize o <xref:System.IO.File.SetAccessControl%2A>ou <xref:System.IO.FileInfo.SetAccessControl%2A>método.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  Para manter as informações de ACL de novas ou alteradas para um diretório, utilize o <xref:System.IO.Directory.SetAccessControl%2A>ou <xref:System.IO.FileInfo.SetAccessControl%2A>método.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       Para obter informações de ACL de um ficheiro, utilize o <xref:System.IO.File.GetAccessControl%2A>ou <xref:System.IO.FileInfo.GetAccessControl%2A>método.</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  Para obter informações de ACL de um diretório, utilize o <xref:System.IO.Directory.GetAccessControl%2A>ou <xref:System.IO.DirectoryInfo.GetAccessControl%2A>método.</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>       Ao adicionar uma regra de acesso sem definição de <xref:System.Security.AccessControl.FileSystemRights>Sinalizador o <xref:System.Security.AccessControl.FileSystemRights>Sinalizador será automaticamente adicionado à sua regra.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  Se remover a regra mais tarde sem especificar o <xref:System.Security.AccessControl.FileSystemRights>sinalizador, o sinalizador serão removidos automaticamente.</xref:System.Security.AccessControl.FileSystemRights>"
  example:
  - "The following code example uses the <xref:System.Security.AccessControl.FileSecurity> class to add and then remove an access control list (ACL) entry from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cs[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/8c37102e-50e1-48e9-baeb-_1.cs)]\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/8c37102e-50e1-48e9-baeb-_1.vb)]\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/8c37102e-50e1-48e9-baeb-_1.cpp)]"
  syntax:
    content: public bool RemoveAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAccessRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> objeto que representa uma permissão de lista (ACL) de controlo de acesso para remover um ficheiro ou diretório."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a regra de acesso foi removida; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)
  id: RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: RemoveAccessRuleAll(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.RemoveAccessRuleAll(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(FileSystemAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Remove todas as permissões de lista (ACL) de controlo de acesso para o utilizador especificado o ficheiro atual ou o diretório."
  remarks: "O método RemoveAccessRuleAll remove todas as permissões de lista (ACL) de controlo de acesso para o utilizador especificado.  O método ignora todos os valores do <xref:System.Security.AccessControl.FileSystemAccessRule>objeto, exceto a conta de utilizador.</xref:System.Security.AccessControl.FileSystemAccessRule>       Para manter as informações de ACL de novas ou alteradas para um ficheiro, utilize o <xref:System.IO.File.SetAccessControl%2A>ou <xref:System.IO.FileInfo.SetAccessControl%2A>método.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  Para manter as informações de ACL de novas ou alteradas para um diretório, utilize o <xref:System.IO.Directory.SetAccessControl%2A>ou <xref:System.IO.FileInfo.SetAccessControl%2A>método.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       Para obter informações de ACL de um ficheiro, utilize o <xref:System.IO.File.GetAccessControl%2A>ou <xref:System.IO.FileInfo.GetAccessControl%2A>método.</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  Para obter informações de ACL de um diretório, utilize o <xref:System.IO.Directory.GetAccessControl%2A>ou <xref:System.IO.DirectoryInfo.GetAccessControl%2A>método.</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>       Ao adicionar uma regra de acesso sem definição de <xref:System.Security.AccessControl.FileSystemRights>Sinalizador o <xref:System.Security.AccessControl.FileSystemRights>Sinalizador será automaticamente adicionado à sua regra.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  Se remover a regra mais tarde sem especificar o <xref:System.Security.AccessControl.FileSystemRights>sinalizador, o sinalizador serão removidos automaticamente.</xref:System.Security.AccessControl.FileSystemRights>"
  syntax:
    content: public void RemoveAccessRuleAll (System.Security.AccessControl.FileSystemAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAccessRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> objeto que especifica um utilizador cujo acesso controlar permissões de acesso (ACL) de lista deve ser removido de um ficheiro ou diretório."
  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)
  id: RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: RemoveAccessRuleSpecific(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.RemoveAccessRuleSpecific(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(FileSystemAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Remove um único correspondente permitir ou negar a permissão de lista (ACL) de controlo de acesso do ficheiro atual ou do diretório."
  remarks: "O método RemoveAccessRuleSpecific remove especificado <xref:System.Security.AccessControl.AccessControlType>aceder a regra ou a correspondência especificado <xref:System.Security.AccessControl.AccessControlType>regra de acesso de atual <xref:System.Security.AccessControl.FileSystemSecurity>objeto.</xref:System.Security.AccessControl.FileSystemSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType>  Por exemplo, pode utilizar este método para remover uma determinada <xref:System.Security.AccessControl.AccessControlType>regra de acesso para um utilizador através da transmissão de um <xref:System.Security.AccessControl.FileSystemAccessRule>objeto criado utilizando o <xref:System.Security.AccessControl.AccessControlType>valor, o <xref:System.Security.AccessControl.FileSystemRights>valor e uma conta de utilizador.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.FileSystemAccessRule> </xref:System.Security.AccessControl.AccessControlType>  Ao fazê-lo, o método RemoveAccessRuleSpecific remove apenas a regra de negação que especifica o <xref:System.Security.AccessControl.FileSystemRights>valor.</xref:System.Security.AccessControl.FileSystemRights>  Não remove quaisquer regras de negar que especificam o <xref:System.Security.AccessControl.FileSystemRights>valor.</xref:System.Security.AccessControl.FileSystemRights>       Para manter as informações de lista (ACL) de controlo de acesso novo ou alterado para um ficheiro, utilize o <xref:System.IO.File.SetAccessControl%2A>ou <xref:System.IO.FileInfo.SetAccessControl%2A>método.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  Para manter as informações de ACL de novas ou alteradas para um diretório, utilize o <xref:System.IO.Directory.SetAccessControl%2A>ou <xref:System.IO.FileInfo.SetAccessControl%2A>método.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       Para obter informações de ACL de um ficheiro, utilize o <xref:System.IO.File.GetAccessControl%2A>ou <xref:System.IO.FileInfo.GetAccessControl%2A>método.</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  Para obter informações de ACL de um diretório, utilize o <xref:System.IO.Directory.GetAccessControl%2A>ou <xref:System.IO.DirectoryInfo.GetAccessControl%2A>método.</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>       Ao adicionar uma regra de acesso sem definição de <xref:System.Security.AccessControl.FileSystemRights>Sinalizador o <xref:System.Security.AccessControl.FileSystemRights>Sinalizador será automaticamente adicionado à sua regra.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  Se remover a regra mais tarde sem especificar o <xref:System.Security.AccessControl.FileSystemRights>sinalizador, o sinalizador serão removidos automaticamente.</xref:System.Security.AccessControl.FileSystemRights>"
  syntax:
    content: public void RemoveAccessRuleSpecific (System.Security.AccessControl.FileSystemAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAccessRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> objeto que especifica um utilizador cujo acesso controlar permissões de acesso (ACL) de lista deve ser removido de um ficheiro ou diretório."
  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  id: RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: RemoveAuditRule(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.RemoveAuditRule(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(FileSystemAuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Remove todos os correspondente permite ou negar as regras de auditoria do ficheiro atual ou do diretório."
  remarks: "O método RemoveAuditRule remove todas as correspondentes <xref:System.Security.AccessControl.AccessControlType>regras de auditoria ou a correspondência de todos os <xref:System.Security.AccessControl.AccessControlType>regras da atual de auditoria <xref:System.Security.AccessControl.FileSystemSecurity>objeto.</xref:System.Security.AccessControl.FileSystemSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType>  Por exemplo, pode utilizar este método para remover todos os <xref:System.Security.AccessControl.AccessControlType>regras para um utilizador de auditoria através da transmissão de um <xref:System.Security.AccessControl.FileSystemAuditRule>objeto criado utilizando o <xref:System.Security.AccessControl.AccessControlType>valor, o <xref:System.Security.AccessControl.AuditFlags>valor e uma conta de utilizador.</xref:System.Security.AccessControl.AuditFlags> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.FileSystemAuditRule> </xref:System.Security.AccessControl.AccessControlType>  Ao fazê-lo, o método RemoveAuditRule remove quaisquer regras de negar que especificam o <xref:System.Security.AccessControl.AuditFlags>valor ou o <xref:System.Security.AccessControl.AuditFlags>valor.</xref:System.Security.AccessControl.AuditFlags> </xref:System.Security.AccessControl.AuditFlags>"
  example:
  - "The following code example uses the <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A> method to add an audit rule to a file and uses the RemoveAuditRule method to remove the audit rule from the file.  You must supply a valid user or group account to run this example.  \n  \n [!code-vb[AccessControl.FileSystemAuditRule#1](~/add/codesnippet/visualbasic/e76c77df-35cd-4fcd-bf24-_1.vb)]\n [!code-cs[AccessControl.FileSystemAuditRule#1](~/add/codesnippet/csharp/e76c77df-35cd-4fcd-bf24-_1.cs)]"
  syntax:
    content: public bool RemoveAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAuditRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> objeto que representa uma regra de auditoria para remover um ficheiro ou diretório."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a regra de auditoria foi removida; caso contrário,<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>"
  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)
  id: RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: RemoveAuditRuleAll(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.RemoveAuditRuleAll(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(FileSystemAuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Remove todas as regras de auditoria para o utilizador especificado o ficheiro atual ou o diretório."
  remarks: "O método RemoveAuditRuleAll remove todas as regras de auditoria para o utilizador especificado.  -Ignora todos os valores do <xref:System.Security.AccessControl.FileSystemAuditRule>objeto, exceto a conta de utilizador.</xref:System.Security.AccessControl.FileSystemAuditRule>"
  syntax:
    content: public void RemoveAuditRuleAll (System.Security.AccessControl.FileSystemAuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAuditRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> objeto que especifica um utilizador cujas regras de auditoria devem ser removidas de um ficheiro ou diretório."
  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)
  id: RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: RemoveAuditRuleSpecific(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.RemoveAuditRuleSpecific(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(FileSystemAuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Remove um único correspondente permitir ou negar a regra de auditoria do ficheiro atual ou do diretório."
  remarks: "O método RemoveAuditRuleSpecific remove a correspondência especificado <xref:System.Security.AccessControl.AccessControlType>regra ou especificado de correspondência de auditoria <xref:System.Security.AccessControl.AccessControlType>regra de auditoria da atual <xref:System.Security.AccessControl.FileSystemSecurity>objeto.</xref:System.Security.AccessControl.FileSystemSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType>  Por exemplo, pode utilizar este método para remover uma determinada <xref:System.Security.AccessControl.AccessControlType>regra de auditoria para um utilizador através da transmissão de um <xref:System.Security.AccessControl.FileSystemAuditRule>objeto criado utilizando o <xref:System.Security.AccessControl.AccessControlType>valor, o <xref:System.Security.AccessControl.AuditFlags>valor e uma conta de utilizador.</xref:System.Security.AccessControl.AuditFlags> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.FileSystemAuditRule> </xref:System.Security.AccessControl.AccessControlType>  Ao fazê-lo, o método RemoveAuditRuleSpecific remove apenas uma regra de negação que especifica o <xref:System.Security.AccessControl.AuditFlags>valor.</xref:System.Security.AccessControl.AuditFlags>  Não remove quaisquer regras de negar que especificam o <xref:System.Security.AccessControl.AuditFlags>valor.</xref:System.Security.AccessControl.AuditFlags>"
  syntax:
    content: public void RemoveAuditRuleSpecific (System.Security.AccessControl.FileSystemAuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAuditRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> objeto que representa uma regra de auditoria para remover um ficheiro ou diretório."
  overload: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  id: ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: ResetAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.ResetAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(FileSystemAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Adiciona a permissão de lista (ACL) de controlo de acesso especificado para o ficheiro atual ou o diretório e remove todas as permissões de ACL correspondentes."
  remarks: "O método ResetAccessRule adiciona a regra de lista (ACL) de controlo de acesso especificado ou substitui quaisquer regras ACL idênticas que correspondem a `rule` parâmetro.  Por exemplo, se o `rule` parâmetro especifica um <xref:System.Security.AccessControl.FileSystemRights>valor e o método ResetAccessRule localiza uma regra ACL idêntica que especifica o <xref:System.Security.AccessControl.FileSystemRights>valor, a regra idêntica será substituída.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  Se o método ResetAccessRule localiza uma regra ACL idêntica que especifica o <xref:System.Security.AccessControl.FileSystemRights>valor, a regra idêntica também será substituída.</xref:System.Security.AccessControl.FileSystemRights>       Para manter as informações de ACL de novas ou alteradas para um ficheiro, utilize o <xref:System.IO.File.SetAccessControl%2A>ou <xref:System.IO.FileInfo.SetAccessControl%2A>método.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  Para manter as informações de ACL de novas ou alteradas para um diretório, utilize o <xref:System.IO.Directory.SetAccessControl%2A>ou <xref:System.IO.FileInfo.SetAccessControl%2A>método.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       Para obter informações de ACL de um ficheiro, utilize o <xref:System.IO.File.GetAccessControl%2A>ou <xref:System.IO.FileInfo.GetAccessControl%2A>método.</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  Para obter informações de ACL de um diretório, utilize o <xref:System.IO.Directory.GetAccessControl%2A>ou <xref:System.IO.DirectoryInfo.GetAccessControl%2A>método.</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>"
  syntax:
    content: public void ResetAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAccessRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> objeto que representa uma permissão de lista (ACL) de controlo de acesso para adicionar a um ficheiro ou diretório."
  overload: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  id: SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: SetAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.SetAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.SetAccessRule(FileSystemAccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Define a permissão de lista (ACL) de controlo de acesso especificado para o ficheiro atual ou o diretório."
  remarks: "O método SetAccessRule adiciona a regra de lista (ACL) de controlo de acesso especificado ou substitui quaisquer regras ACL idênticas que correspondem a <xref:System.Security.AccessControl.FileSystemRights>valor o `rule` parâmetro.</xref:System.Security.AccessControl.FileSystemRights>  Por exemplo, se o `rule` parâmetro especifica um <xref:System.Security.AccessControl.FileSystemRights>valor e o método SetAccessRule localiza uma regra ACL idêntica que especifica o <xref:System.Security.AccessControl.FileSystemRights>valor, a regra idêntica será substituída.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  Se o método SetAccessRule localiza uma regra ACL idêntica que especifica o <xref:System.Security.AccessControl.FileSystemRights>valor, a regra idêntica não será substituída.</xref:System.Security.AccessControl.FileSystemRights>       Para manter as informações de ACL de novas ou alteradas para um ficheiro, utilize o <xref:System.IO.File.SetAccessControl%2A>ou <xref:System.IO.FileInfo.SetAccessControl%2A>método.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.File.SetAccessControl%2A>  Para manter as informações de ACL de novas ou alteradas para um diretório, utilize o <xref:System.IO.Directory.SetAccessControl%2A>ou <xref:System.IO.FileInfo.SetAccessControl%2A>método.</xref:System.IO.FileInfo.SetAccessControl%2A> </xref:System.IO.Directory.SetAccessControl%2A>       Para obter informações de ACL de um ficheiro, utilize o <xref:System.IO.File.GetAccessControl%2A>ou <xref:System.IO.FileInfo.GetAccessControl%2A>método.</xref:System.IO.FileInfo.GetAccessControl%2A> </xref:System.IO.File.GetAccessControl%2A>  Para obter informações de ACL de um diretório, utilize o <xref:System.IO.Directory.GetAccessControl%2A>ou <xref:System.IO.DirectoryInfo.GetAccessControl%2A>método.</xref:System.IO.DirectoryInfo.GetAccessControl%2A> </xref:System.IO.Directory.GetAccessControl%2A>"
  syntax:
    content: public void SetAccessRule (System.Security.AccessControl.FileSystemAccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAccessRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref> objeto que representa uma permissão de lista (ACL) de controlo de acesso para definir um ficheiro ou diretório."
  overload: System.Security.AccessControl.FileSystemSecurity.SetAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemSecurity.SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  id: SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  langs:
  - csharp
  name: SetAuditRule(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.SetAuditRule(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.SetAuditRule(FileSystemAuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Define a regra de auditoria especificado para o ficheiro atual ou o diretório."
  remarks: "O método SetAuditRule adiciona a regra de auditoria especificado ou substitui quaisquer regras de auditoria idênticos que correspondem a <xref:System.Security.AccessControl.FileSystemRights>valor o `rule` parâmetro.</xref:System.Security.AccessControl.FileSystemRights>  Por exemplo, se o `rule` parâmetro especifica um <xref:System.Security.AccessControl.FileSystemRights>valor e o método SetAuditRule localiza uma regra de auditoria idênticos que especifica o <xref:System.Security.AccessControl.FileSystemRights>valor, a regra idêntica será substituída.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>  Se o método SetAuditRule localiza uma regra de auditoria idênticos que especifica o <xref:System.Security.AccessControl.FileSystemRights>valor, a regra idêntica não será substituída.</xref:System.Security.AccessControl.FileSystemRights>"
  syntax:
    content: public void SetAuditRule (System.Security.AccessControl.FileSystemAuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.FileSystemAuditRule
      description: "A <xref href=&quot;System.Security.AccessControl.FileSystemAuditRule&quot;> </xref> objeto que representa uma regra de auditoria para definir um ficheiro ou diretório."
  overload: System.Security.AccessControl.FileSystemSecurity.SetAuditRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Security.AccessControl.NativeObjectSecurity
  isExternal: false
  name: System.Security.AccessControl.NativeObjectSecurity
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRightType
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AccessRightType
  nameWithType: FileSystemSecurity.AccessRightType
  fullName: System.Security.AccessControl.FileSystemSecurity.AccessRightType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: FileSystemSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
- uid: System.Security.AccessControl.AccessRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessRule
  nameWithType: AccessRule
  fullName: System.Security.AccessControl.AccessRule
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.AccessControl.InheritanceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: InheritanceFlags
  nameWithType: InheritanceFlags
  fullName: System.Security.AccessControl.InheritanceFlags
- uid: System.Security.AccessControl.PropagationFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: PropagationFlags
  nameWithType: PropagationFlags
  fullName: System.Security.AccessControl.PropagationFlags
- uid: System.Security.AccessControl.AccessControlType
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlType
  nameWithType: AccessControlType
  fullName: System.Security.AccessControl.AccessControlType
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleType
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AccessRuleType
  nameWithType: FileSystemSecurity.AccessRuleType
  fullName: System.Security.AccessControl.FileSystemSecurity.AccessRuleType
- uid: System.Security.AccessControl.FileSystemSecurity.AddAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AddAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.AddAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.AddAccessRule(FileSystemAccessRule)
- uid: System.Security.AccessControl.FileSystemAccessRule
  parent: System.Security.AccessControl
  isExternal: false
  name: FileSystemAccessRule
  nameWithType: FileSystemAccessRule
  fullName: System.Security.AccessControl.FileSystemAccessRule
- uid: System.Security.AccessControl.FileSystemSecurity.AddAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AddAuditRule(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.AddAuditRule(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.AddAuditRule(FileSystemAuditRule)
- uid: System.Security.AccessControl.FileSystemAuditRule
  parent: System.Security.AccessControl
  isExternal: false
  name: FileSystemAuditRule
  nameWithType: FileSystemAuditRule
  fullName: System.Security.AccessControl.FileSystemAuditRule
- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: FileSystemSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
- uid: System.Security.AccessControl.AuditRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditRule
  nameWithType: AuditRule
  fullName: System.Security.AccessControl.AuditRule
- uid: System.Security.AccessControl.AuditFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditFlags
  nameWithType: AuditFlags
  fullName: System.Security.AccessControl.AuditFlags
- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleType
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AuditRuleType
  nameWithType: FileSystemSecurity.AuditRuleType
  fullName: System.Security.AccessControl.FileSystemSecurity.AuditRuleType
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.RemoveAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule(FileSystemAccessRule)
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAccessRuleAll(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.RemoveAccessRuleAll(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll(FileSystemAccessRule)
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAccessRuleSpecific(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.RemoveAccessRuleSpecific(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific(FileSystemAccessRule)
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAuditRule(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.RemoveAuditRule(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule(FileSystemAuditRule)
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAuditRuleAll(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.RemoveAuditRuleAll(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll(FileSystemAuditRule)
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAuditRuleSpecific(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.RemoveAuditRuleSpecific(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific(FileSystemAuditRule)
- uid: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: ResetAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.ResetAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule(FileSystemAccessRule)
- uid: System.Security.AccessControl.FileSystemSecurity.SetAccessRule(System.Security.AccessControl.FileSystemAccessRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: SetAccessRule(FileSystemAccessRule)
  nameWithType: FileSystemSecurity.SetAccessRule(FileSystemAccessRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.SetAccessRule(FileSystemAccessRule)
- uid: System.Security.AccessControl.FileSystemSecurity.SetAuditRule(System.Security.AccessControl.FileSystemAuditRule)
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: SetAuditRule(FileSystemAuditRule)
  nameWithType: FileSystemSecurity.SetAuditRule(FileSystemAuditRule)
  fullName: System.Security.AccessControl.FileSystemSecurity.SetAuditRule(FileSystemAuditRule)
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRightType*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AccessRightType
  nameWithType: FileSystemSecurity.AccessRightType
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleFactory*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AccessRuleFactory
  nameWithType: FileSystemSecurity.AccessRuleFactory
- uid: System.Security.AccessControl.FileSystemSecurity.AccessRuleType*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AccessRuleType
  nameWithType: FileSystemSecurity.AccessRuleType
- uid: System.Security.AccessControl.FileSystemSecurity.AddAccessRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AddAccessRule
  nameWithType: FileSystemSecurity.AddAccessRule
- uid: System.Security.AccessControl.FileSystemSecurity.AddAuditRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AddAuditRule
  nameWithType: FileSystemSecurity.AddAuditRule
- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleFactory*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AuditRuleFactory
  nameWithType: FileSystemSecurity.AuditRuleFactory
- uid: System.Security.AccessControl.FileSystemSecurity.AuditRuleType*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: AuditRuleType
  nameWithType: FileSystemSecurity.AuditRuleType
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAccessRule
  nameWithType: FileSystemSecurity.RemoveAccessRule
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleAll*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAccessRuleAll
  nameWithType: FileSystemSecurity.RemoveAccessRuleAll
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAccessRuleSpecific*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAccessRuleSpecific
  nameWithType: FileSystemSecurity.RemoveAccessRuleSpecific
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAuditRule
  nameWithType: FileSystemSecurity.RemoveAuditRule
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleAll*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAuditRuleAll
  nameWithType: FileSystemSecurity.RemoveAuditRuleAll
- uid: System.Security.AccessControl.FileSystemSecurity.RemoveAuditRuleSpecific*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: RemoveAuditRuleSpecific
  nameWithType: FileSystemSecurity.RemoveAuditRuleSpecific
- uid: System.Security.AccessControl.FileSystemSecurity.ResetAccessRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: ResetAccessRule
  nameWithType: FileSystemSecurity.ResetAccessRule
- uid: System.Security.AccessControl.FileSystemSecurity.SetAccessRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: SetAccessRule
  nameWithType: FileSystemSecurity.SetAccessRule
- uid: System.Security.AccessControl.FileSystemSecurity.SetAuditRule*
  parent: System.Security.AccessControl.FileSystemSecurity
  isExternal: false
  name: SetAuditRule
  nameWithType: FileSystemSecurity.SetAuditRule
