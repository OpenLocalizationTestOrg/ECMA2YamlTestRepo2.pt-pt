### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Selectors.X509CertificateValidator
  id: X509CertificateValidator
  children:
  - System.IdentityModel.Selectors.X509CertificateValidator.#ctor
  - System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust
  - System.IdentityModel.Selectors.X509CertificateValidator.CreateChainTrustValidator(System.Boolean,System.Security.Cryptography.X509Certificates.X509ChainPolicy)
  - System.IdentityModel.Selectors.X509CertificateValidator.CreatePeerOrChainTrustValidator(System.Boolean,System.Security.Cryptography.X509Certificates.X509ChainPolicy)
  - System.IdentityModel.Selectors.X509CertificateValidator.LoadCustomConfiguration(System.Xml.XmlNodeList)
  - System.IdentityModel.Selectors.X509CertificateValidator.None
  - System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust
  - System.IdentityModel.Selectors.X509CertificateValidator.PeerTrust
  - System.IdentityModel.Selectors.X509CertificateValidator.Validate(System.Security.Cryptography.X509Certificates.X509Certificate2)
  langs:
  - csharp
  name: X509CertificateValidator
  nameWithType: X509CertificateValidator
  fullName: System.IdentityModel.Selectors.X509CertificateValidator
  type: Class
  summary: "Validates an X.509 certificate."
  remarks: "Use the X509CertificateValidator class to specify how an X.509 certificate is deemed valid. This can be done using by deriving a class from X509CertificateValidator and overriding the <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%2A> method."
  example:
  - >-
    [!code-cs[c_X509CertificateValidator#1](~/add/codesnippet/csharp/t-system.identitymodel.s_10_1.cs)]
     [!code-vb[c_X509CertificateValidator#1](~/add/codesnippet/visualbasic/t-system.identitymodel.s_10_1.vb)]
  syntax:
    content: 'public abstract class X509CertificateValidator : System.IdentityModel.Configuration.ICustomIdentityConfiguration'
  inheritance:
  - System.Object
  implements:
  - System.IdentityModel.Configuration.ICustomIdentityConfiguration
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509CertificateValidator.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  langs:
  - csharp
  name: X509CertificateValidator()
  nameWithType: X509CertificateValidator.X509CertificateValidator()
  fullName: System.IdentityModel.Selectors.X509CertificateValidator.X509CertificateValidator()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Initializes a new instance of the <xref href=&quot;System.IdentityModel.Selectors.X509CertificateValidator&quot;></xref> class."
  remarks: "By default, this constructor doesn&quot;t initialize any properties."
  example:
  - >-
    [!code-cs[c_X509CertificateValidator#3](~/add/codesnippet/csharp/m-system.identitymodel.s_0_1.cs)]
     [!code-vb[c_X509CertificateValidator#3](~/add/codesnippet/visualbasic/m-system.identitymodel.s_0_1.vb)]
  syntax:
    content: protected X509CertificateValidator ();
    parameters: []
  overload: System.IdentityModel.Selectors.X509CertificateValidator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust
  id: ChainTrust
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  langs:
  - csharp
  name: ChainTrust
  nameWithType: X509CertificateValidator.ChainTrust
  fullName: System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Gets a validator that validates the X.509 certificate using a trust chain."
  remarks: "This validator verifies that the X.509 certificate is valid and issued by a trusted issuer using a certificate chain.       The value of this static property can be supplied as a parameter to one of the constructors for the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator> class."
  syntax:
    content: public static System.IdentityModel.Selectors.X509CertificateValidator ChainTrust { get; }
    return:
      type: System.IdentityModel.Selectors.X509CertificateValidator
      description: "A <xref href=&quot;System.IdentityModel.Selectors.X509CertificateValidator&quot;></xref> that validates the X.509 certificate using a trust chain."
  overload: System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509CertificateValidator.CreateChainTrustValidator(System.Boolean,System.Security.Cryptography.X509Certificates.X509ChainPolicy)
  id: CreateChainTrustValidator(System.Boolean,System.Security.Cryptography.X509Certificates.X509ChainPolicy)
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  langs:
  - csharp
  name: CreateChainTrustValidator(Boolean,X509ChainPolicy)
  nameWithType: X509CertificateValidator.CreateChainTrustValidator(Boolean,X509ChainPolicy)
  fullName: System.IdentityModel.Selectors.X509CertificateValidator.CreateChainTrustValidator(Boolean,X509ChainPolicy)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Gets a validator that verifies the X.509 certificate by specifying the context and chain policy that is used to build and verify a trust chain."
  remarks: "Use the CreateChainTrustValidator method instead of the <xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A> property to specify the context or to set chain policy. Chain policy can be used to specify the Enhanced Key Usage (EKU) for which the chain should be validated, or specify revocation checking.       The return value for this static method can be supplied as a parameter to the constructors for the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator> class that take a validator."
  syntax:
    content: public static System.IdentityModel.Selectors.X509CertificateValidator CreateChainTrustValidator (bool useMachineContext, System.Security.Cryptography.X509Certificates.X509ChainPolicy chainPolicy);
    parameters:
    - id: useMachineContext
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to use the machine context; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to use the current user context."
    - id: chainPolicy
      type: System.Security.Cryptography.X509Certificates.X509ChainPolicy
      description: "An <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ChainPolicy&quot;></xref> that specifies the policy used to build and verify the trust chain."
    return:
      type: System.IdentityModel.Selectors.X509CertificateValidator
      description: "A <xref href=&quot;System.IdentityModel.Selectors.X509CertificateValidator&quot;></xref> that validates the X.509 certificate using a trust chain."
  overload: System.IdentityModel.Selectors.X509CertificateValidator.CreateChainTrustValidator*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509CertificateValidator.CreatePeerOrChainTrustValidator(System.Boolean,System.Security.Cryptography.X509Certificates.X509ChainPolicy)
  id: CreatePeerOrChainTrustValidator(System.Boolean,System.Security.Cryptography.X509Certificates.X509ChainPolicy)
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  langs:
  - csharp
  name: CreatePeerOrChainTrustValidator(Boolean,X509ChainPolicy)
  nameWithType: X509CertificateValidator.CreatePeerOrChainTrustValidator(Boolean,X509ChainPolicy)
  fullName: System.IdentityModel.Selectors.X509CertificateValidator.CreatePeerOrChainTrustValidator(Boolean,X509ChainPolicy)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Gets a validator that verifies the certificate is in the <xref uid=&quot;langword_csharp_TrustedPeople&quot; name=&quot;TrustedPeople&quot; href=&quot;&quot;></xref> certificate store or by specifying the context and chain policy that is used to build a certificate trust chain. The certificate is trusted if it passes either verification method."
  remarks: "Use the CreatePeerOrChainTrustValidator method instead of the <xref:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust%2A> property to specify the context or to set chain policy. Chain policy can be used to specify the Enhanced Key Usage (EKU) for which the chain should be validated, or specify revocation checking.       The value of this static property can be supplied as a parameter to one of the constructors for the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator> class."
  syntax:
    content: public static System.IdentityModel.Selectors.X509CertificateValidator CreatePeerOrChainTrustValidator (bool useMachineContext, System.Security.Cryptography.X509Certificates.X509ChainPolicy chainPolicy);
    parameters:
    - id: useMachineContext
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to use the machine context; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to use the current user context."
    - id: chainPolicy
      type: System.Security.Cryptography.X509Certificates.X509ChainPolicy
      description: "An <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ChainPolicy&quot;></xref> that specifies the policy used to build the trust chain."
    return:
      type: System.IdentityModel.Selectors.X509CertificateValidator
      description: "A <xref href=&quot;System.IdentityModel.Selectors.X509CertificateValidator&quot;></xref> that verifies the certificate is in the <xref uid=&quot;langword_csharp_TrustedPeople&quot; name=&quot;TrustedPeople&quot; href=&quot;&quot;></xref> certificate store or by building a certificate trust chain."
  overload: System.IdentityModel.Selectors.X509CertificateValidator.CreatePeerOrChainTrustValidator*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509CertificateValidator.LoadCustomConfiguration(System.Xml.XmlNodeList)
  id: LoadCustomConfiguration(System.Xml.XmlNodeList)
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  langs:
  - csharp
  name: LoadCustomConfiguration(XmlNodeList)
  nameWithType: X509CertificateValidator.LoadCustomConfiguration(XmlNodeList)
  fullName: System.IdentityModel.Selectors.X509CertificateValidator.LoadCustomConfiguration(XmlNodeList)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "When overridden in a derived class, loads custom configuration from XML."
  remarks: "By default, throws a <xref:System.NotImplementedException>. You can override this method to provide functionality in a derived class."
  syntax:
    content: public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);
    parameters:
    - id: nodelist
      type: System.Xml.XmlNodeList
      description: "The custom configuration elements."
  overload: System.IdentityModel.Selectors.X509CertificateValidator.LoadCustomConfiguration*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509CertificateValidator.None
  id: None
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  langs:
  - csharp
  name: None
  nameWithType: X509CertificateValidator.None
  fullName: System.IdentityModel.Selectors.X509CertificateValidator.None
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Gets a validator that performs no validation on an X.509 certificate. As a result, an X.509 certificate is always considered to be valid."
  remarks: "This validator can be useful when working with a test or development X.509 certificate, such as one generated by the Makecert.exe utility.       The value of this static property can be supplied as a parameter to one of the constructors for the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator> class."
  syntax:
    content: public static System.IdentityModel.Selectors.X509CertificateValidator None { get; }
    return:
      type: System.IdentityModel.Selectors.X509CertificateValidator
      description: "A <xref href=&quot;System.IdentityModel.Selectors.X509CertificateValidator&quot;></xref> that performs no validation on the X.509 certificate."
  overload: System.IdentityModel.Selectors.X509CertificateValidator.None*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust
  id: PeerOrChainTrust
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  langs:
  - csharp
  name: PeerOrChainTrust
  nameWithType: X509CertificateValidator.PeerOrChainTrust
  fullName: System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Gets a validator that verifies the certificate is in the <xref uid=&quot;langword_csharp_TrustedPeople&quot; name=&quot;TrustedPeople&quot; href=&quot;&quot;></xref> certificate store or by building a certificate trust chain. The certificate is trusted if it passes either verification method."
  remarks: "The value of this static property can be supplied as a parameter to one of the constructors for the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator> class."
  syntax:
    content: public static System.IdentityModel.Selectors.X509CertificateValidator PeerOrChainTrust { get; }
    return:
      type: System.IdentityModel.Selectors.X509CertificateValidator
      description: "A <xref href=&quot;System.IdentityModel.Selectors.X509CertificateValidator&quot;></xref> that verifies the certificate is in the <xref uid=&quot;langword_csharp_TrustedPeople&quot; name=&quot;TrustedPeople&quot; href=&quot;&quot;></xref> certificate store or by building a certificate trust chain."
  overload: System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509CertificateValidator.PeerTrust
  id: PeerTrust
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  langs:
  - csharp
  name: PeerTrust
  nameWithType: X509CertificateValidator.PeerTrust
  fullName: System.IdentityModel.Selectors.X509CertificateValidator.PeerTrust
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Gets a validator that verifies the certificate is in the <xref uid=&quot;langword_csharp_TrustedPeople&quot; name=&quot;TrustedPeople&quot; href=&quot;&quot;></xref> certificate store"
  remarks: "The value of this static property can be supplied as a parameter to one of the constructors for the <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator> class."
  syntax:
    content: public static System.IdentityModel.Selectors.X509CertificateValidator PeerTrust { get; }
    return:
      type: System.IdentityModel.Selectors.X509CertificateValidator
      description: "A <xref href=&quot;System.IdentityModel.Selectors.X509CertificateValidator&quot;></xref> that verifies the certificate is in the <xref uid=&quot;langword_csharp_TrustedPeople&quot; name=&quot;TrustedPeople&quot; href=&quot;&quot;></xref> certificate store."
  overload: System.IdentityModel.Selectors.X509CertificateValidator.PeerTrust*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509CertificateValidator.Validate(System.Security.Cryptography.X509Certificates.X509Certificate2)
  id: Validate(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  langs:
  - csharp
  name: Validate(X509Certificate2)
  nameWithType: X509CertificateValidator.Validate(X509Certificate2)
  fullName: System.IdentityModel.Selectors.X509CertificateValidator.Validate(X509Certificate2)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "When overridden in a derived class, validates the X.509 certificate."
  remarks: "Override the Validate method to specify how the X.509 certificate is validated.       When the X.509 certificate that is passed into the `certificate` parameter does not pass validation, throw the <xref:System.IdentityModel.Tokens.SecurityTokenvalidationException>."
  example:
  - >-
    [!code-cs[c_X509CertificateValidator#2](~/add/codesnippet/csharp/1487f60d-20b2-4959-899d-_1.cs)]
     [!code-vb[c_X509CertificateValidator#2](~/add/codesnippet/visualbasic/1487f60d-20b2-4959-899d-_1.vb)]
  syntax:
    content: public abstract void Validate (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "The <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;></xref> that represents the X.509 certificate to validate."
  overload: System.IdentityModel.Selectors.X509CertificateValidator.Validate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.Selectors.X509CertificateValidator.#ctor
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  isExternal: false
  name: X509CertificateValidator()
  nameWithType: X509CertificateValidator.X509CertificateValidator()
  fullName: System.IdentityModel.Selectors.X509CertificateValidator.X509CertificateValidator()
- uid: System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  isExternal: false
  name: ChainTrust
  nameWithType: X509CertificateValidator.ChainTrust
  fullName: System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust
- uid: System.IdentityModel.Selectors.X509CertificateValidator
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: X509CertificateValidator
  nameWithType: X509CertificateValidator
  fullName: System.IdentityModel.Selectors.X509CertificateValidator
- uid: System.IdentityModel.Selectors.X509CertificateValidator.CreateChainTrustValidator(System.Boolean,System.Security.Cryptography.X509Certificates.X509ChainPolicy)
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  isExternal: false
  name: CreateChainTrustValidator(Boolean,X509ChainPolicy)
  nameWithType: X509CertificateValidator.CreateChainTrustValidator(Boolean,X509ChainPolicy)
  fullName: System.IdentityModel.Selectors.X509CertificateValidator.CreateChainTrustValidator(Boolean,X509ChainPolicy)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.X509Certificates.X509ChainPolicy
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509ChainPolicy
  nameWithType: X509ChainPolicy
  fullName: System.Security.Cryptography.X509Certificates.X509ChainPolicy
- uid: System.IdentityModel.Selectors.X509CertificateValidator.CreatePeerOrChainTrustValidator(System.Boolean,System.Security.Cryptography.X509Certificates.X509ChainPolicy)
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  isExternal: false
  name: CreatePeerOrChainTrustValidator(Boolean,X509ChainPolicy)
  nameWithType: X509CertificateValidator.CreatePeerOrChainTrustValidator(Boolean,X509ChainPolicy)
  fullName: System.IdentityModel.Selectors.X509CertificateValidator.CreatePeerOrChainTrustValidator(Boolean,X509ChainPolicy)
- uid: System.IdentityModel.Selectors.X509CertificateValidator.LoadCustomConfiguration(System.Xml.XmlNodeList)
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  isExternal: false
  name: LoadCustomConfiguration(XmlNodeList)
  nameWithType: X509CertificateValidator.LoadCustomConfiguration(XmlNodeList)
  fullName: System.IdentityModel.Selectors.X509CertificateValidator.LoadCustomConfiguration(XmlNodeList)
- uid: System.Xml.XmlNodeList
  parent: System.Xml
  isExternal: false
  name: XmlNodeList
  nameWithType: XmlNodeList
  fullName: System.Xml.XmlNodeList
- uid: System.IdentityModel.Selectors.X509CertificateValidator.None
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  isExternal: false
  name: None
  nameWithType: X509CertificateValidator.None
  fullName: System.IdentityModel.Selectors.X509CertificateValidator.None
- uid: System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  isExternal: false
  name: PeerOrChainTrust
  nameWithType: X509CertificateValidator.PeerOrChainTrust
  fullName: System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust
- uid: System.IdentityModel.Selectors.X509CertificateValidator.PeerTrust
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  isExternal: false
  name: PeerTrust
  nameWithType: X509CertificateValidator.PeerTrust
  fullName: System.IdentityModel.Selectors.X509CertificateValidator.PeerTrust
- uid: System.IdentityModel.Selectors.X509CertificateValidator.Validate(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  isExternal: false
  name: Validate(X509Certificate2)
  nameWithType: X509CertificateValidator.Validate(X509Certificate2)
  fullName: System.IdentityModel.Selectors.X509CertificateValidator.Validate(X509Certificate2)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.IdentityModel.Selectors.X509CertificateValidator.#ctor*
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  isExternal: false
  name: X509CertificateValidator
  nameWithType: X509CertificateValidator.X509CertificateValidator
- uid: System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust*
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  isExternal: false
  name: ChainTrust
  nameWithType: X509CertificateValidator.ChainTrust
- uid: System.IdentityModel.Selectors.X509CertificateValidator.CreateChainTrustValidator*
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  isExternal: false
  name: CreateChainTrustValidator
  nameWithType: X509CertificateValidator.CreateChainTrustValidator
- uid: System.IdentityModel.Selectors.X509CertificateValidator.CreatePeerOrChainTrustValidator*
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  isExternal: false
  name: CreatePeerOrChainTrustValidator
  nameWithType: X509CertificateValidator.CreatePeerOrChainTrustValidator
- uid: System.IdentityModel.Selectors.X509CertificateValidator.LoadCustomConfiguration*
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  isExternal: false
  name: LoadCustomConfiguration
  nameWithType: X509CertificateValidator.LoadCustomConfiguration
- uid: System.IdentityModel.Selectors.X509CertificateValidator.None*
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  isExternal: false
  name: None
  nameWithType: X509CertificateValidator.None
- uid: System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust*
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  isExternal: false
  name: PeerOrChainTrust
  nameWithType: X509CertificateValidator.PeerOrChainTrust
- uid: System.IdentityModel.Selectors.X509CertificateValidator.PeerTrust*
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  isExternal: false
  name: PeerTrust
  nameWithType: X509CertificateValidator.PeerTrust
- uid: System.IdentityModel.Selectors.X509CertificateValidator.Validate*
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  isExternal: false
  name: Validate
  nameWithType: X509CertificateValidator.Validate
