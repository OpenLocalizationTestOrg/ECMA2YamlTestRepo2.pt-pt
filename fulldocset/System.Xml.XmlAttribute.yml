### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlAttribute
  id: XmlAttribute
  children:
  - System.Xml.XmlAttribute.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)
  - System.Xml.XmlAttribute.AppendChild(System.Xml.XmlNode)
  - System.Xml.XmlAttribute.BaseURI
  - System.Xml.XmlAttribute.CloneNode(System.Boolean)
  - System.Xml.XmlAttribute.InnerText
  - System.Xml.XmlAttribute.InnerXml
  - System.Xml.XmlAttribute.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlAttribute.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlAttribute.LocalName
  - System.Xml.XmlAttribute.Name
  - System.Xml.XmlAttribute.NamespaceURI
  - System.Xml.XmlAttribute.NodeType
  - System.Xml.XmlAttribute.OwnerDocument
  - System.Xml.XmlAttribute.OwnerElement
  - System.Xml.XmlAttribute.ParentNode
  - System.Xml.XmlAttribute.Prefix
  - System.Xml.XmlAttribute.PrependChild(System.Xml.XmlNode)
  - System.Xml.XmlAttribute.RemoveChild(System.Xml.XmlNode)
  - System.Xml.XmlAttribute.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlAttribute.SchemaInfo
  - System.Xml.XmlAttribute.Specified
  - System.Xml.XmlAttribute.Value
  - System.Xml.XmlAttribute.WriteContentTo(System.Xml.XmlWriter)
  - System.Xml.XmlAttribute.WriteTo(System.Xml.XmlWriter)
  langs:
  - csharp
  name: XmlAttribute
  nameWithType: XmlAttribute
  fullName: System.Xml.XmlAttribute
  type: Class
  summary: "Representa um atributo. Valores válidos e predefinidos para o atributo são definidos numa definição de tipo de documento (DTD) ou o esquema."
  remarks: "Os atributos podem ser associados um elemento. Utilize o <xref:System.Xml.XmlAttribute.OwnerElement%2A>propriedade para obter o <xref:System.Xml.XmlElement>para que o atributo pertence.</xref:System.Xml.XmlElement> </xref:System.Xml.XmlAttribute.OwnerElement%2A>       O `XmlElement` classe tem vários métodos que permitem aceder a nós de atributo (<xref:System.Xml.XmlElement.GetAttribute%2A?displayProperty=fullName>, <xref:System.Xml.XmlElement.SetAttribute%2A?displayProperty=fullName>, <xref:System.Xml.XmlElement.RemoveAttribute%2A?displayProperty=fullName>, e assim sucessivamente).</xref:System.Xml.XmlElement.RemoveAttribute%2A?displayProperty=fullName> </xref:System.Xml.XmlElement.SetAttribute%2A?displayProperty=fullName> </xref:System.Xml.XmlElement.GetAttribute%2A?displayProperty=fullName> Além disso, pode chamar o <xref:System.Xml.XmlElement.Attributes%2A?displayProperty=fullName>propriedade, o que devolve um <xref:System.Xml.XmlAttributeCollection>permitindo aceder aos atributos por nome ou o índice da coleção.</xref:System.Xml.XmlAttributeCollection> </xref:System.Xml.XmlElement.Attributes%2A?displayProperty=fullName>"
  syntax:
    content: 'public class XmlAttribute : System.Xml.XmlNode'
  inheritance:
  - System.Object
  - System.Xml.XmlNode
  implements: []
  inheritedMembers:
  - System.Xml.XmlNode.Attributes
  - System.Xml.XmlNode.ChildNodes
  - System.Xml.XmlNode.Clone
  - System.Xml.XmlNode.CreateNavigator
  - System.Xml.XmlNode.FirstChild
  - System.Xml.XmlNode.GetEnumerator
  - System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)
  - System.Xml.XmlNode.GetPrefixOfNamespace(System.String)
  - System.Xml.XmlNode.HasChildNodes
  - System.Xml.XmlNode.IsReadOnly
  - System.Xml.XmlNode.Item(System.String)
  - System.Xml.XmlNode.Item(System.String,System.String)
  - System.Xml.XmlNode.LastChild
  - System.Xml.XmlNode.NextSibling
  - System.Xml.XmlNode.Normalize
  - System.Xml.XmlNode.OuterXml
  - System.Xml.XmlNode.PreviousSibling
  - System.Xml.XmlNode.PreviousText
  - System.Xml.XmlNode.RemoveAll
  - System.Xml.XmlNode.SelectNodes(System.String)
  - System.Xml.XmlNode.SelectNodes(System.String,System.Xml.XmlNamespaceManager)
  - System.Xml.XmlNode.SelectSingleNode(System.String)
  - System.Xml.XmlNode.SelectSingleNode(System.String,System.Xml.XmlNamespaceManager)
  - System.Xml.XmlNode.Supports(System.String,System.String)
  - System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator
  - System.Xml.XmlNode.System#ICloneable#Clone
  platform:
  - net462
- uid: System.Xml.XmlAttribute.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)
  id: '#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)'
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: XmlAttribute(String,String,String,XmlDocument)
  nameWithType: XmlAttribute.XmlAttribute(String,String,String,XmlDocument)
  fullName: System.Xml.XmlAttribute.XmlAttribute(String,String,String,XmlDocument)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Xml.XmlAttribute&quot;> </xref> classe."
  remarks: "Não instanciar um <xref:System.Xml.XmlAttribute>diretamente; em vez disso, utilize métodos, tais como <xref:System.Xml.XmlDocument.CreateAttribute%2A>.</xref:System.Xml.XmlDocument.CreateAttribute%2A> </xref:System.Xml.XmlAttribute>"
  syntax:
    content: protected XmlAttribute (string prefix, string localName, string namespaceURI, System.Xml.XmlDocument doc);
    parameters:
    - id: prefix
      type: System.String
      description: "O prefixo de espaço de nomes."
    - id: localName
      type: System.String
      description: "O nome local do atributo."
    - id: namespaceURI
      type: System.String
      description: "O espaço de nomes uniform resource identifier (URI)."
    - id: doc
      type: System.Xml.XmlDocument
      description: "O documento XML principal."
  overload: System.Xml.XmlAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttribute.AppendChild(System.Xml.XmlNode)
  id: AppendChild(System.Xml.XmlNode)
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: AppendChild(XmlNode)
  nameWithType: XmlAttribute.AppendChild(XmlNode)
  fullName: System.Xml.XmlAttribute.AppendChild(XmlNode)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Adiciona o nó especificado ao fim da lista de nós subordinados, deste nó."
  remarks: "Se o `newChild` é já na árvore, primeiro removido.       Se o nó a ser introduzido foi criado a partir de outro documento, pode utilizar <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=fullName>para importar o nó para o documento atual.</xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=fullName> O nó importado, em seguida, pode ser inserido no documento atual."
  example:
  - For an example of the AppendChild method, see the <xref:System.Xml.XmlNode.AppendChild%2A> method.
  syntax:
    content: public override System.Xml.XmlNode AppendChild (System.Xml.XmlNode newChild);
    parameters:
    - id: newChild
      type: System.Xml.XmlNode
      description: "The <xref href=&quot;System.Xml.XmlNode&quot;></xref> to add."
    return:
      type: System.Xml.XmlNode
      description: "O <xref href=&quot;System.Xml.XmlNode&quot;> </xref> adicionado."
  overload: System.Xml.XmlAttribute.AppendChild*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Este nó é um tipo que não permite nós do tipo da subordinada o <code> newChild </code> nós.       O <code> newChild </code> for um predecessor deste nó."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> newChild </code> foi criada a partir de um documento diferente daquela que criou este nó.       Este nó é só de leitura."
  platform:
  - net462
- uid: System.Xml.XmlAttribute.BaseURI
  id: BaseURI
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: BaseURI
  nameWithType: XmlAttribute.BaseURI
  fullName: System.Xml.XmlAttribute.BaseURI
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Obtém o base Uniform Resource Identifier (URI) do nó."
  remarks: "Um documento XML em rede é composta por segmentos de dados agregados utilizando vários mecanismos de inclusão padrão Consortium World Wide Web (W3C) e, pelo que contém nós provenientes de diferentes locais. O `BaseURI` indica onde provém estes nós.       Para obter informações adicionais sobre `BaseURI` e como esta se comporta com outros tipos de nó, consulte <xref:System.Xml.XmlNode.BaseURI%2A?displayProperty=fullName>.</xref:System.Xml.XmlNode.BaseURI%2A?displayProperty=fullName>       Esta propriedade é uma extensão da Microsoft para o documento Object Model (DOM)."
  example:
  - "The following example displays information on the attribute node, including its base URI.  \n  \n [!code-cpp[Classic WebData XmlAttribute.BaseURI Example#1](~/add/codesnippet/cpp/p-system.xml.xmlattribut_7_1.cpp)]\n [!code-vb[Classic WebData XmlAttribute.BaseURI Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlattribut_7_1.vb)]\n [!code-cs[Classic WebData XmlAttribute.BaseURI Example#1](~/add/codesnippet/csharp/p-system.xml.xmlattribut_7_1.cs)]  \n  \n The sample uses the file, `baseuri.xml`, as input.  \n  \n [!code-xml[Classic WebData XmlAttribute.BaseURI Example#2](~/add/codesnippet/xml/p-system.xml.xmlattribut_7_2.xml)]"
  syntax:
    content: public override string BaseURI { get; }
    return:
      type: System.String
      description: "A localização a partir da qual o nó foi carregado ou String.Empty se o nó não tem nenhum URI base. Os nós de atributo têm o mesmo URI base como o respetivo elemento proprietário. Se um nó de atributo não tem um elemento de proprietário, <xref uid=&quot;langword_csharp_BaseURI&quot; name=&quot;BaseURI&quot; href=&quot;&quot;> </xref> devolve String.Empty."
  overload: System.Xml.XmlAttribute.BaseURI*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttribute.CloneNode(System.Boolean)
  id: CloneNode(System.Boolean)
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: CloneNode(Boolean)
  nameWithType: XmlAttribute.CloneNode(Boolean)
  fullName: System.Xml.XmlAttribute.CloneNode(Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Cria um duplicado deste nó."
  remarks: "Este método funciona como um construtor de cópia para nós. O nó clonado não tem um principal (<xref:System.Xml.XmlAttribute.ParentNode%2A> devolve `null`).</xref:System.Xml.XmlAttribute.ParentNode%2A>       A clonagem de um atributo não especificado devolve um atributo especificado (<xref:System.Xml.XmlAttribute.Specified%2A> devolve `true`).</xref:System.Xml.XmlAttribute.Specified%2A>"
  example:
  - "The following example uses `CloneNode` to add an attribute to two different element nodes.  \n  \n [!code-cpp[Classic WebData XmlAttribute.CloneNode Example#1](~/add/codesnippet/cpp/m-system.xml.xmlattribut_1_1.cpp)]\n [!code-cs[Classic WebData XmlAttribute.CloneNode Example#1](~/add/codesnippet/csharp/m-system.xml.xmlattribut_1_1.cs)]\n [!code-vb[Classic WebData XmlAttribute.CloneNode Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlattribut_1_1.vb)]  \n  \n The example uses the file, `2elems.xml`, as input.  \n  \n [!code-xml[Classic WebData XmlAttribute.CloneNode Example#2](~/add/codesnippet/xml/m-system.xml.xmlattribut_1_2.xml)]"
  syntax:
    content: public override System.Xml.XmlNode CloneNode (bool deep);
    parameters:
    - id: deep
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para recursivamente clonar subárvore sob o nó especificado; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para clonar apenas o próprio nó"
    return:
      type: System.Xml.XmlNode
      description: "O nó duplicado."
  overload: System.Xml.XmlAttribute.CloneNode*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttribute.InnerText
  id: InnerText
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: InnerText
  nameWithType: XmlAttribute.InnerText
  fullName: System.Xml.XmlAttribute.InnerText
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Define os valores concatenados o nó e respetivos grupos subordinados."
  remarks: "Definir esta propriedade substitui todos os elementos subordinados com o conteúdo analisar a cadeia especificada.       Esta propriedade é uma extensão da Microsoft para o documento Object Model (DOM)."
  syntax:
    content: public override string InnerText { set; }
    return:
      type: System.String
      description: "Os valores concatenados o nó e respetivos grupos subordinados. Para nós de atributo, esta propriedade tem a mesma funcionalidade que o <xref:System.Xml.XmlAttribute.Value*>propriedade.</xref:System.Xml.XmlAttribute.Value*>"
  overload: System.Xml.XmlAttribute.InnerText*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttribute.InnerXml
  id: InnerXml
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: InnerXml
  nameWithType: XmlAttribute.InnerXml
  fullName: System.Xml.XmlAttribute.InnerXml
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Define o valor do atributo."
  remarks: "Esta propriedade é uma extensão da Microsoft para o documento Object Model (DOM)."
  syntax:
    content: public override string InnerXml { set; }
    return:
      type: System.String
      description: "O valor do atributo."
  overload: System.Xml.XmlAttribute.InnerXml*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "O XML especificado quando a definição desta propriedade não está corretamente formado."
  platform:
  - net462
- uid: System.Xml.XmlAttribute.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
  id: InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: InsertAfter(XmlNode,XmlNode)
  nameWithType: XmlAttribute.InsertAfter(XmlNode,XmlNode)
  fullName: System.Xml.XmlAttribute.InsertAfter(XmlNode,XmlNode)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Insere o nó especificado imediatamente após o nó de referência especificado."
  remarks: "Se `refChild` é `null`, inserir `newChild` no início da lista de nós subordinados. Se `newChild` é um <xref:System.Xml.XmlDocumentFragment>objeto, pela mesma ordem, os nós subordinados são inseridos após `refChild`.</xref:System.Xml.XmlDocumentFragment> Se o `newChild` é já na árvore, primeiro removido.       Se o nó a ser introduzido foi criado a partir de outro documento, pode utilizar <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=fullName>para importar o nó para o documento atual.</xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=fullName> O nó importado, em seguida, pode ser inserido no documento atual.       Este método é uma extensão da Microsoft para o documento Object Model (DOM)."
  example:
  - For an example of the InsertAfter method see the <xref:System.Xml.XmlNode.InsertAfter%2A> method.
  syntax:
    content: public override System.Xml.XmlNode InsertAfter (System.Xml.XmlNode newChild, System.Xml.XmlNode refChild);
    parameters:
    - id: newChild
      type: System.Xml.XmlNode
      description: "O <xref href=&quot;System.Xml.XmlNode&quot;> </xref> para inserir."
    - id: refChild
      type: System.Xml.XmlNode
      description: "O <xref href=&quot;System.Xml.XmlNode&quot;> </xref> que é o nó de referência. O `newChild` é colocado depois do `refChild`."
    return:
      type: System.Xml.XmlNode
      description: "O <xref href=&quot;System.Xml.XmlNode&quot;> </xref> inserir."
  overload: System.Xml.XmlAttribute.InsertAfter*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Este nó é um tipo que não permite nós do tipo da subordinada o <code> newChild </code> nós.       O <code> newChild </code> for um predecessor deste nó."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> newChild </code> foi criada a partir de um documento diferente daquela que criou este nó.       O <code> refChild </code> não é um elemento subordinado deste nó.       Este nó é só de leitura."
  platform:
  - net462
- uid: System.Xml.XmlAttribute.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
  id: InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: InsertBefore(XmlNode,XmlNode)
  nameWithType: XmlAttribute.InsertBefore(XmlNode,XmlNode)
  fullName: System.Xml.XmlAttribute.InsertBefore(XmlNode,XmlNode)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Insere o nó especificado imediatamente antes do nó de referência especificado."
  remarks: "Se `refChild` é `null`, inserir `newChild` no final da lista de nós subordinados. Se `newChild` é um <xref:System.Xml.XmlDocumentFragment>objeto, os nós subordinados são inseridos, pela mesma ordem anteriormente `refChild`.</xref:System.Xml.XmlDocumentFragment> Se o `newChild` é já na árvore, primeiro removido.       Se o nó a ser introduzido foi criado a partir de outro documento, pode utilizar <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=fullName>para importar o nó para o documento atual.</xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=fullName> O nó importado, em seguida, pode ser inserido no documento atual."
  example:
  - For an example of the InsertBefore method, see the <xref:System.Xml.XmlNode.InsertBefore%2A> method.
  syntax:
    content: public override System.Xml.XmlNode InsertBefore (System.Xml.XmlNode newChild, System.Xml.XmlNode refChild);
    parameters:
    - id: newChild
      type: System.Xml.XmlNode
      description: "O <xref href=&quot;System.Xml.XmlNode&quot;> </xref> para inserir."
    - id: refChild
      type: System.Xml.XmlNode
      description: "O <xref href=&quot;System.Xml.XmlNode&quot;> </xref> que é o nó de referência. O `newChild` é colocado antes deste nó."
    return:
      type: System.Xml.XmlNode
      description: "O <xref href=&quot;System.Xml.XmlNode&quot;> </xref> inserir."
  overload: System.Xml.XmlAttribute.InsertBefore*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O nó atual é de um tipo que não permite nós do tipo da subordinada o <code> newChild </code> nós.       O <code> newChild </code> for um predecessor deste nó."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> newChild </code> foi criada a partir de um documento diferente daquela que criou este nó.       O <code> refChild </code> não é um elemento subordinado deste nó.       Este nó é só de leitura."
  platform:
  - net462
- uid: System.Xml.XmlAttribute.LocalName
  id: LocalName
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: LocalName
  nameWithType: XmlAttribute.LocalName
  fullName: System.Xml.XmlAttribute.LocalName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Obtém o nome do local do nó."
  remarks: "Se o nó não tem um prefixo `LocalName` é o mesmo que <xref:System.Xml.XmlAttribute.Name%2A>.</xref:System.Xml.XmlAttribute.Name%2A>"
  example:
  - "The following example displays information on each of the nodes in the attribute collection.  \n  \n [!code-cs[Classic WebData XmlAttribute.NamespaceURI Example#1](~/add/codesnippet/csharp/p-system.xml.xmlattribut_3_1.cs)]\n [!code-cpp[Classic WebData XmlAttribute.NamespaceURI Example#1](~/add/codesnippet/cpp/p-system.xml.xmlattribut_3_1.cpp)]\n [!code-vb[Classic WebData XmlAttribute.NamespaceURI Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlattribut_3_1.vb)]"
  syntax:
    content: public override string LocalName { get; }
    return:
      type: System.String
      description: "O nome do nó de atributo com o prefixo removido. No exemplo seguinte &lt;livro bk:genre = &quot;novel&quot;&gt;, a <xref uid=&quot;langword_csharp_LocalName&quot; name=&quot;LocalName&quot; href=&quot;&quot;> </xref> do atributo é <xref uid=&quot;langword_csharp_genre&quot; name=&quot;genre&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.XmlAttribute.LocalName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttribute.Name
  id: Name
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: Name
  nameWithType: XmlAttribute.Name
  fullName: System.Xml.XmlAttribute.Name
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Obtém o nome qualificado do nó."
  remarks: ''
  example:
  - "The following example displays information on each of the nodes in the attribute collection.  \n  \n [!code-cs[Classic WebData XmlAttribute.Name Example#1](~/add/codesnippet/csharp/p-system.xml.xmlattribut_8_1.cs)]\n [!code-cpp[Classic WebData XmlAttribute.Name Example#1](~/add/codesnippet/cpp/p-system.xml.xmlattribut_8_1.cpp)]\n [!code-vb[Classic WebData XmlAttribute.Name Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlattribut_8_1.vb)]"
  syntax:
    content: public override string Name { get; }
    return:
      type: System.String
      description: "O nome qualificado do nó de atributo."
  overload: System.Xml.XmlAttribute.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttribute.NamespaceURI
  id: NamespaceURI
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: NamespaceURI
  nameWithType: XmlAttribute.NamespaceURI
  fullName: System.Xml.XmlAttribute.NamespaceURI
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Obtém o espaço de nomes URI deste nó."
  remarks: "Um atributo não herda o espaço de nomes do elemento que está ligado a. Se um atributo não é determinado explicitamente um espaço de nomes, o URI do espaço de nomes é considerado String.Empty."
  example:
  - "The following example displays information on each of the nodes in the attribute collection.  \n  \n [!code-cs[Classic WebData XmlAttribute.NamespaceURI Example#1](~/add/codesnippet/csharp/p-system.xml.xmlattribut_1_1.cs)]\n [!code-cpp[Classic WebData XmlAttribute.NamespaceURI Example#1](~/add/codesnippet/cpp/p-system.xml.xmlattribut_1_1.cpp)]\n [!code-vb[Classic WebData XmlAttribute.NamespaceURI Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlattribut_1_1.vb)]"
  syntax:
    content: public override string NamespaceURI { get; }
    return:
      type: System.String
      description: "O espaço de nomes URI deste nó. Se o atributo não é determinado explicitamente um espaço de nomes, esta propriedade devolve String.Empty."
  overload: System.Xml.XmlAttribute.NamespaceURI*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttribute.NodeType
  id: NodeType
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: NodeType
  nameWithType: XmlAttribute.NodeType
  fullName: System.Xml.XmlAttribute.NodeType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Obtém o tipo de nó atual."
  syntax:
    content: public override System.Xml.XmlNodeType NodeType { get; }
    return:
      type: System.Xml.XmlNodeType
      description: "O tipo de nó para <xref uid=&quot;langword_csharp_XmlAttribute&quot; name=&quot;XmlAttribute&quot; href=&quot;&quot;> </xref> nós é XmlNodeType.Attribute."
  overload: System.Xml.XmlAttribute.NodeType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttribute.OwnerDocument
  id: OwnerDocument
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: OwnerDocument
  nameWithType: XmlAttribute.OwnerDocument
  fullName: System.Xml.XmlAttribute.OwnerDocument
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Obtém o <xref href=&quot;System.Xml.XmlDocument&quot;> </xref> a que pertence este nó."
  remarks: ''
  example:
  - "The following example creates an attribute and displays its `OwnerDocument`.  \n  \n [!code-cs[Classic WebData XmlAttribute.OwnerDocument Example#1](~/add/codesnippet/csharp/p-system.xml.xmlattribut_2_1.cs)]\n [!code-cpp[Classic WebData XmlAttribute.OwnerDocument Example#1](~/add/codesnippet/cpp/p-system.xml.xmlattribut_2_1.cpp)]\n [!code-vb[Classic WebData XmlAttribute.OwnerDocument Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlattribut_2_1.vb)]"
  syntax:
    content: public override System.Xml.XmlDocument OwnerDocument { get; }
    return:
      type: System.Xml.XmlDocument
      description: "Um documento XML ao qual pertence este nó."
  overload: System.Xml.XmlAttribute.OwnerDocument*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttribute.OwnerElement
  id: OwnerElement
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: OwnerElement
  nameWithType: XmlAttribute.OwnerElement
  fullName: System.Xml.XmlAttribute.OwnerElement
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Obtém o <xref href=&quot;System.Xml.XmlElement&quot;> </xref> para que o atributo pertence."
  remarks: ''
  example:
  - "The following example creates an attribute and displays the `OwnerElement` of the attribute.  \n  \n [!code-cs[Classic WebData XmlAttribute.OwnerElement Example#1](~/add/codesnippet/csharp/p-system.xml.xmlattribut_4_1.cs)]\n [!code-vb[Classic WebData XmlAttribute.OwnerElement Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlattribut_4_1.vb)]\n [!code-cpp[Classic WebData XmlAttribute.OwnerElement Example#1](~/add/codesnippet/cpp/p-system.xml.xmlattribut_4_1.cpp)]"
  syntax:
    content: public virtual System.Xml.XmlElement OwnerElement { get; }
    return:
      type: System.Xml.XmlElement
      description: "O <xref uid=&quot;langword_csharp_XmlElement&quot; name=&quot;XmlElement&quot; href=&quot;&quot;> </xref> que pertence o atributo ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se este atributo não é parte de um <xref uid=&quot;langword_csharp_XmlElement&quot; name=&quot;XmlElement&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.XmlAttribute.OwnerElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttribute.ParentNode
  id: ParentNode
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: ParentNode
  nameWithType: XmlAttribute.ParentNode
  fullName: System.Xml.XmlAttribute.ParentNode
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Obtém o principal deste nó. Para <xref uid=&quot;langword_csharp_XmlAttribute&quot; name=&quot;XmlAttribute&quot; href=&quot;&quot;> </xref> nós, esta propriedade devolve sempre <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  remarks: "Utilize o <xref:System.Xml.XmlAttribute.OwnerElement%2A>propriedade para obter o <xref:System.Xml.XmlElement>para que o atributo pertence.</xref:System.Xml.XmlElement> </xref:System.Xml.XmlAttribute.OwnerElement%2A>"
  syntax:
    content: public override System.Xml.XmlNode ParentNode { get; }
    return:
      type: System.Xml.XmlNode
      description: "Para <xref uid=&quot;langword_csharp_XmlAttribute&quot; name=&quot;XmlAttribute&quot; href=&quot;&quot;> </xref> nós, esta propriedade devolve sempre <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.XmlAttribute.ParentNode*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttribute.Prefix
  id: Prefix
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: Prefix
  nameWithType: XmlAttribute.Prefix
  fullName: System.Xml.XmlAttribute.Prefix
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Obtém ou define o prefixo de espaço de nomes deste nó."
  remarks: "Porque a alterar o prefixo de um atributo não altera o URI do espaço de nomes, alterar o prefixo de um atributo que é conhecido por ter um valor predefinido não cria um novo atributo com o valor predefinido e o prefixo original."
  example:
  - "The following example displays information on each of the nodes in the attribute collection.  \n  \n [!code-cs[Classic WebData XmlAttribute.NamespaceURI Example#1](~/add/codesnippet/csharp/p-system.xml.xmlattribut_9_1.cs)]\n [!code-cpp[Classic WebData XmlAttribute.NamespaceURI Example#1](~/add/codesnippet/cpp/p-system.xml.xmlattribut_9_1.cpp)]\n [!code-vb[Classic WebData XmlAttribute.NamespaceURI Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlattribut_9_1.vb)]"
  syntax:
    content: public override string Prefix { get; set; }
    return:
      type: System.String
      description: "O prefixo de espaço de nomes deste nó. Se houver um prefixo, esta propriedade devolve String.Empty."
  overload: System.Xml.XmlAttribute.Prefix*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Este nó é só de leitura."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "O prefixo especificado contém um caráter inválido.       O prefixo especificado está incorreto.       O namespaceURI deste nó é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.       O prefixo especificado é &quot;xml&quot; e o namespaceURI deste nó é diferente do &quot;http://www.w3.org/XML/1998/namespace&quot;.       Este nó é um atributo, o prefixo especificado é &quot;xmlns&quot; e o namespaceURI deste nó é diferente do &quot;http://www.w3.org/2000/xmlns/&quot;.       Este nó é um atributo e qualifiedName deste nó é &quot;xmlns&quot; [espaços de nomes]."
  platform:
  - net462
- uid: System.Xml.XmlAttribute.PrependChild(System.Xml.XmlNode)
  id: PrependChild(System.Xml.XmlNode)
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: PrependChild(XmlNode)
  nameWithType: XmlAttribute.PrependChild(XmlNode)
  fullName: System.Xml.XmlAttribute.PrependChild(XmlNode)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Adiciona o nó especificado ao início da lista de nós subordinados para este nó."
  remarks: "Se o `newChild` é já na árvore, primeiro removido.       Se o nó a ser introduzido foi criado a partir de outro documento, pode utilizar <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=fullName>para importar o nó para o documento atual.</xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=fullName> O nó importado, em seguida, pode ser inserido no documento atual.       Este método é uma extensão da Microsoft para o documento Object Model (DOM)."
  example:
  - For an example of the PrependChild method, see the <xref:System.Xml.XmlNode.PrependChild%2A> method.
  syntax:
    content: public override System.Xml.XmlNode PrependChild (System.Xml.XmlNode newChild);
    parameters:
    - id: newChild
      type: System.Xml.XmlNode
      description: "The <xref href=&quot;System.Xml.XmlNode&quot;></xref> to add. Se for um <xref href=&quot;System.Xml.XmlDocumentFragment&quot;> </xref>, todo o conteúdo do fragmento de documento é movido para a lista de subordinado deste nó."
    return:
      type: System.Xml.XmlNode
      description: "O <xref href=&quot;System.Xml.XmlNode&quot;> </xref> adicionado."
  overload: System.Xml.XmlAttribute.PrependChild*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Este nó é um tipo que não permite nós do tipo da subordinada o <code> newChild </code> nós.       O <code> newChild </code> for um predecessor deste nó."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> newChild </code> foi criada a partir de um documento diferente daquela que criou este nó.       Este nó é só de leitura."
  platform:
  - net462
- uid: System.Xml.XmlAttribute.RemoveChild(System.Xml.XmlNode)
  id: RemoveChild(System.Xml.XmlNode)
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: RemoveChild(XmlNode)
  nameWithType: XmlAttribute.RemoveChild(XmlNode)
  fullName: System.Xml.XmlAttribute.RemoveChild(XmlNode)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Remove o nó subordinado especificado."
  remarks: ''
  example:
  - For an example of the RemoveChild method, see the <xref:System.Xml.XmlNode.RemoveChild%2A> method.
  syntax:
    content: public override System.Xml.XmlNode RemoveChild (System.Xml.XmlNode oldChild);
    parameters:
    - id: oldChild
      type: System.Xml.XmlNode
      description: "O <xref href=&quot;System.Xml.XmlNode&quot;> </xref> para remover."
    return:
      type: System.Xml.XmlNode
      description: "O <xref href=&quot;System.Xml.XmlNode&quot;> </xref> removido."
  overload: System.Xml.XmlAttribute.RemoveChild*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> oldChild </code> não é um elemento subordinado deste nó. Ou este nó é só de leitura."
  platform:
  - net462
- uid: System.Xml.XmlAttribute.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
  id: ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: ReplaceChild(XmlNode,XmlNode)
  nameWithType: XmlAttribute.ReplaceChild(XmlNode,XmlNode)
  fullName: System.Xml.XmlAttribute.ReplaceChild(XmlNode,XmlNode)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Substitui o nó subordinado especificado com o novo nó subordinado especificado."
  remarks: "Se o `newChild` é já na árvore, primeiro removido.       Se o `newChild` foi criada a partir de outro documento, pode utilizar <xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=fullName>para importar o nó para o documento atual.</xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=fullName>"
  example:
  - For an example of the ReplaceChild method, see the <xref:System.Xml.XmlNode.ReplaceChild%2A> method.
  syntax:
    content: public override System.Xml.XmlNode ReplaceChild (System.Xml.XmlNode newChild, System.Xml.XmlNode oldChild);
    parameters:
    - id: newChild
      type: System.Xml.XmlNode
      description: "O subordinado novo <xref href=&quot;System.Xml.XmlNode&quot;> </xref>."
    - id: oldChild
      type: System.Xml.XmlNode
      description: "O <xref href=&quot;System.Xml.XmlNode&quot;> </xref> para substituir."
    return:
      type: System.Xml.XmlNode
      description: "O <xref href=&quot;System.Xml.XmlNode&quot;> </xref> substituído."
  overload: System.Xml.XmlAttribute.ReplaceChild*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Este nó é um tipo que não permite nós do tipo da subordinada o <code> newChild </code> nós.       O <code> newChild </code> for um predecessor deste nó."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> newChild </code> foi criada a partir de um documento diferente daquela que criou este nó.       Este nó é só de leitura.       O <code> oldChild </code> não é um elemento subordinado deste nó."
  platform:
  - net462
- uid: System.Xml.XmlAttribute.SchemaInfo
  id: SchemaInfo
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: SchemaInfo
  nameWithType: XmlAttribute.SchemaInfo
  fullName: System.Xml.XmlAttribute.SchemaInfo
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Obtém o post-schema-validação-conjunto de informações que tenha sido atribuído para este nó como resultado da validação de esquema."
  remarks: "A propriedade SchemaInfo é definida quando este nó está validado."
  syntax:
    content: public override System.Xml.Schema.IXmlSchemaInfo SchemaInfo { get; }
    return:
      type: System.Xml.Schema.IXmlSchemaInfo
      description: "Um <xref href=&quot;System.Xml.Schema.IXmlSchemaInfo&quot;> </xref> que contém o post-schema-validação-conjunto de informações deste nó."
  overload: System.Xml.XmlAttribute.SchemaInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttribute.Specified
  id: Specified
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: Specified
  nameWithType: XmlAttribute.Specified
  fullName: System.Xml.XmlAttribute.Specified
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Obtém um valor que indica se o valor do atributo foi definido explicitamente."
  remarks: "A implementação é responsável por esta propriedade, não o utilizador. Se o utilizador altera o valor do atributo (mesmo termina com o mesmo valor que o valor fixo/predefinido), em seguida, o sinalizador especificado é automaticamente flipped para `true`. Para voltar a especificar o atributo como o valor predefinido/fixo do DTD, o utilizador tem de eliminar o atributo. A implementação, em seguida, disponibiliza um novo atributo com o conjunto especificado para `false` e o predefinição/fixo (se existir).       Em Resumo: 1.  Se o atributo tem um valor atribuído no documento, `Specified` é `true`, e o valor é o valor atribuído.      2.  Se o atributo não tem atribuído um valor no documento e tem um valor fixo/predefinido no DTD `Specified` é `false`, e o valor é o valor predefinido/fixo o DTD.      3.  Caso contrário, o atributo não aparece no modelo de estrutura do documento."
  syntax:
    content: public virtual bool Specified { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se este atributo explicitamente foi indicado um valor no documento de instância original; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Um valor de <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> indica que o valor do atributo provém o DTD."
  overload: System.Xml.XmlAttribute.Specified*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttribute.Value
  id: Value
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: Value
  nameWithType: XmlAttribute.Value
  fullName: System.Xml.XmlAttribute.Value
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Obtém ou define o valor do nó."
  remarks: ''
  example:
  - "The following example displays information on each of the nodes in the attribute collection.  \n  \n [!code-cs[Classic WebData XmlAttribute.NamespaceURI Example#1](~/add/codesnippet/csharp/p-system.xml.xmlattribut_6_1.cs)]\n [!code-cpp[Classic WebData XmlAttribute.NamespaceURI Example#1](~/add/codesnippet/cpp/p-system.xml.xmlattribut_6_1.cpp)]\n [!code-vb[Classic WebData XmlAttribute.NamespaceURI Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlattribut_6_1.vb)]"
  syntax:
    content: public override string Value { get; set; }
    return:
      type: System.String
      description: "O valor devolvido depende o <xref:System.Xml.XmlNode.NodeType*>do nó.</xref:System.Xml.XmlNode.NodeType*> Para <xref uid=&quot;langword_csharp_XmlAttribute&quot; name=&quot;XmlAttribute&quot; href=&quot;&quot;> </xref> nós, esta propriedade é o valor do atributo."
  overload: System.Xml.XmlAttribute.Value*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O nó é só de leitura e denomina-se uma operação de definição."
  platform:
  - net462
- uid: System.Xml.XmlAttribute.WriteContentTo(System.Xml.XmlWriter)
  id: WriteContentTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: WriteContentTo(XmlWriter)
  nameWithType: XmlAttribute.WriteContentTo(XmlWriter)
  fullName: System.Xml.XmlAttribute.WriteContentTo(XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Guarda todos os elementos subordinados do nó especificado <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter>"
  remarks: "Este método é uma extensão da Microsoft para o documento Object Model (DOM). É funcionalmente equivalente ao <xref:System.Xml.XmlAttribute.InnerXml%2A>propriedade.</xref:System.Xml.XmlAttribute.InnerXml%2A>"
  syntax:
    content: public override void WriteContentTo (System.Xml.XmlWriter w);
    parameters:
    - id: w
      type: System.Xml.XmlWriter
      description: "O <xref uid=&quot;langword_csharp_XmlWriter&quot; name=&quot;XmlWriter&quot; href=&quot;&quot;> </xref> ao qual pretende guardar."
  overload: System.Xml.XmlAttribute.WriteContentTo*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttribute.WriteTo(System.Xml.XmlWriter)
  id: WriteTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlAttribute
  langs:
  - csharp
  name: WriteTo(XmlWriter)
  nameWithType: XmlAttribute.WriteTo(XmlWriter)
  fullName: System.Xml.XmlAttribute.WriteTo(XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Guarda o nó especificado <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter>"
  remarks: "Este método é uma extensão da Microsoft para o documento Object Model (DOM). É funcionalmente equivalente ao <xref:System.Xml.XmlNode.OuterXml%2A?displayProperty=fullName>propriedade.</xref:System.Xml.XmlNode.OuterXml%2A?displayProperty=fullName>"
  syntax:
    content: public override void WriteTo (System.Xml.XmlWriter w);
    parameters:
    - id: w
      type: System.Xml.XmlWriter
      description: "O <xref uid=&quot;langword_csharp_XmlWriter&quot; name=&quot;XmlWriter&quot; href=&quot;&quot;> </xref> ao qual pretende guardar."
  overload: System.Xml.XmlAttribute.WriteTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Xml.XmlNode
  isExternal: false
  name: System.Xml.XmlNode
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.Xml.XmlAttribute.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: XmlAttribute(String,String,String,XmlDocument)
  nameWithType: XmlAttribute.XmlAttribute(String,String,String,XmlDocument)
  fullName: System.Xml.XmlAttribute.XmlAttribute(String,String,String,XmlDocument)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlDocument
  parent: System.Xml
  isExternal: false
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: System.Xml.XmlAttribute.AppendChild(System.Xml.XmlNode)
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: AppendChild(XmlNode)
  nameWithType: XmlAttribute.AppendChild(XmlNode)
  fullName: System.Xml.XmlAttribute.AppendChild(XmlNode)
- uid: System.Xml.XmlAttribute.BaseURI
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: BaseURI
  nameWithType: XmlAttribute.BaseURI
  fullName: System.Xml.XmlAttribute.BaseURI
- uid: System.Xml.XmlAttribute.CloneNode(System.Boolean)
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: CloneNode(Boolean)
  nameWithType: XmlAttribute.CloneNode(Boolean)
  fullName: System.Xml.XmlAttribute.CloneNode(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlAttribute.InnerText
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: InnerText
  nameWithType: XmlAttribute.InnerText
  fullName: System.Xml.XmlAttribute.InnerText
- uid: System.Xml.XmlAttribute.InnerXml
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: InnerXml
  nameWithType: XmlAttribute.InnerXml
  fullName: System.Xml.XmlAttribute.InnerXml
- uid: System.Xml.XmlAttribute.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: InsertAfter(XmlNode,XmlNode)
  nameWithType: XmlAttribute.InsertAfter(XmlNode,XmlNode)
  fullName: System.Xml.XmlAttribute.InsertAfter(XmlNode,XmlNode)
- uid: System.Xml.XmlAttribute.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: InsertBefore(XmlNode,XmlNode)
  nameWithType: XmlAttribute.InsertBefore(XmlNode,XmlNode)
  fullName: System.Xml.XmlAttribute.InsertBefore(XmlNode,XmlNode)
- uid: System.Xml.XmlAttribute.LocalName
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: LocalName
  nameWithType: XmlAttribute.LocalName
  fullName: System.Xml.XmlAttribute.LocalName
- uid: System.Xml.XmlAttribute.Name
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: Name
  nameWithType: XmlAttribute.Name
  fullName: System.Xml.XmlAttribute.Name
- uid: System.Xml.XmlAttribute.NamespaceURI
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: NamespaceURI
  nameWithType: XmlAttribute.NamespaceURI
  fullName: System.Xml.XmlAttribute.NamespaceURI
- uid: System.Xml.XmlAttribute.NodeType
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: NodeType
  nameWithType: XmlAttribute.NodeType
  fullName: System.Xml.XmlAttribute.NodeType
- uid: System.Xml.XmlNodeType
  parent: System.Xml
  isExternal: true
  name: XmlNodeType
  nameWithType: XmlNodeType
  fullName: System.Xml.XmlNodeType
- uid: System.Xml.XmlAttribute.OwnerDocument
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: OwnerDocument
  nameWithType: XmlAttribute.OwnerDocument
  fullName: System.Xml.XmlAttribute.OwnerDocument
- uid: System.Xml.XmlAttribute.OwnerElement
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: OwnerElement
  nameWithType: XmlAttribute.OwnerElement
  fullName: System.Xml.XmlAttribute.OwnerElement
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Xml.XmlAttribute.ParentNode
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: ParentNode
  nameWithType: XmlAttribute.ParentNode
  fullName: System.Xml.XmlAttribute.ParentNode
- uid: System.Xml.XmlAttribute.Prefix
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: Prefix
  nameWithType: XmlAttribute.Prefix
  fullName: System.Xml.XmlAttribute.Prefix
- uid: System.Xml.XmlAttribute.PrependChild(System.Xml.XmlNode)
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: PrependChild(XmlNode)
  nameWithType: XmlAttribute.PrependChild(XmlNode)
  fullName: System.Xml.XmlAttribute.PrependChild(XmlNode)
- uid: System.Xml.XmlAttribute.RemoveChild(System.Xml.XmlNode)
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: RemoveChild(XmlNode)
  nameWithType: XmlAttribute.RemoveChild(XmlNode)
  fullName: System.Xml.XmlAttribute.RemoveChild(XmlNode)
- uid: System.Xml.XmlAttribute.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: ReplaceChild(XmlNode,XmlNode)
  nameWithType: XmlAttribute.ReplaceChild(XmlNode,XmlNode)
  fullName: System.Xml.XmlAttribute.ReplaceChild(XmlNode,XmlNode)
- uid: System.Xml.XmlAttribute.SchemaInfo
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: SchemaInfo
  nameWithType: XmlAttribute.SchemaInfo
  fullName: System.Xml.XmlAttribute.SchemaInfo
- uid: System.Xml.Schema.IXmlSchemaInfo
  parent: System.Xml.Schema
  isExternal: false
  name: IXmlSchemaInfo
  nameWithType: IXmlSchemaInfo
  fullName: System.Xml.Schema.IXmlSchemaInfo
- uid: System.Xml.XmlAttribute.Specified
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: Specified
  nameWithType: XmlAttribute.Specified
  fullName: System.Xml.XmlAttribute.Specified
- uid: System.Xml.XmlAttribute.Value
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: Value
  nameWithType: XmlAttribute.Value
  fullName: System.Xml.XmlAttribute.Value
- uid: System.Xml.XmlAttribute.WriteContentTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: WriteContentTo(XmlWriter)
  nameWithType: XmlAttribute.WriteContentTo(XmlWriter)
  fullName: System.Xml.XmlAttribute.WriteContentTo(XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml.XmlAttribute.WriteTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: WriteTo(XmlWriter)
  nameWithType: XmlAttribute.WriteTo(XmlWriter)
  fullName: System.Xml.XmlAttribute.WriteTo(XmlWriter)
- uid: System.Xml.XmlAttribute.#ctor*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: XmlAttribute
  nameWithType: XmlAttribute.XmlAttribute
- uid: System.Xml.XmlAttribute.AppendChild*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: AppendChild
  nameWithType: XmlAttribute.AppendChild
- uid: System.Xml.XmlAttribute.BaseURI*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: BaseURI
  nameWithType: XmlAttribute.BaseURI
- uid: System.Xml.XmlAttribute.CloneNode*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: CloneNode
  nameWithType: XmlAttribute.CloneNode
- uid: System.Xml.XmlAttribute.InnerText*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: InnerText
  nameWithType: XmlAttribute.InnerText
- uid: System.Xml.XmlAttribute.InnerXml*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: InnerXml
  nameWithType: XmlAttribute.InnerXml
- uid: System.Xml.XmlAttribute.InsertAfter*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: InsertAfter
  nameWithType: XmlAttribute.InsertAfter
- uid: System.Xml.XmlAttribute.InsertBefore*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: InsertBefore
  nameWithType: XmlAttribute.InsertBefore
- uid: System.Xml.XmlAttribute.LocalName*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: LocalName
  nameWithType: XmlAttribute.LocalName
- uid: System.Xml.XmlAttribute.Name*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: Name
  nameWithType: XmlAttribute.Name
- uid: System.Xml.XmlAttribute.NamespaceURI*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: NamespaceURI
  nameWithType: XmlAttribute.NamespaceURI
- uid: System.Xml.XmlAttribute.NodeType*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: NodeType
  nameWithType: XmlAttribute.NodeType
- uid: System.Xml.XmlAttribute.OwnerDocument*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: OwnerDocument
  nameWithType: XmlAttribute.OwnerDocument
- uid: System.Xml.XmlAttribute.OwnerElement*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: OwnerElement
  nameWithType: XmlAttribute.OwnerElement
- uid: System.Xml.XmlAttribute.ParentNode*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: ParentNode
  nameWithType: XmlAttribute.ParentNode
- uid: System.Xml.XmlAttribute.Prefix*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: Prefix
  nameWithType: XmlAttribute.Prefix
- uid: System.Xml.XmlAttribute.PrependChild*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: PrependChild
  nameWithType: XmlAttribute.PrependChild
- uid: System.Xml.XmlAttribute.RemoveChild*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: RemoveChild
  nameWithType: XmlAttribute.RemoveChild
- uid: System.Xml.XmlAttribute.ReplaceChild*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: ReplaceChild
  nameWithType: XmlAttribute.ReplaceChild
- uid: System.Xml.XmlAttribute.SchemaInfo*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: SchemaInfo
  nameWithType: XmlAttribute.SchemaInfo
- uid: System.Xml.XmlAttribute.Specified*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: Specified
  nameWithType: XmlAttribute.Specified
- uid: System.Xml.XmlAttribute.Value*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: Value
  nameWithType: XmlAttribute.Value
- uid: System.Xml.XmlAttribute.WriteContentTo*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: WriteContentTo
  nameWithType: XmlAttribute.WriteContentTo
- uid: System.Xml.XmlAttribute.WriteTo*
  parent: System.Xml.XmlAttribute
  isExternal: false
  name: WriteTo
  nameWithType: XmlAttribute.WriteTo
