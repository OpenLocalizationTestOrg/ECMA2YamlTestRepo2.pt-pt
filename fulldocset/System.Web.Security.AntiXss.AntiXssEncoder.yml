### YamlMime:ManagedReference
items:
- uid: System.Web.Security.AntiXss.AntiXssEncoder
  id: AntiXssEncoder
  children:
  - System.Web.Security.AntiXss.AntiXssEncoder.#ctor
  - System.Web.Security.AntiXss.AntiXssEncoder.CssEncode(System.String)
  - System.Web.Security.AntiXss.AntiXssEncoder.HtmlAttributeEncode(System.String,System.IO.TextWriter)
  - System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode(System.String,System.Boolean)
  - System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode(System.String,System.IO.TextWriter)
  - System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode(System.String)
  - System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode(System.String,System.Int32)
  - System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode(System.String,System.Text.Encoding)
  - System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe(System.Web.Security.AntiXss.LowerCodeCharts,System.Web.Security.AntiXss.LowerMidCodeCharts,System.Web.Security.AntiXss.MidCodeCharts,System.Web.Security.AntiXss.UpperMidCodeCharts,System.Web.Security.AntiXss.UpperCodeCharts)
  - System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(System.String)
  - System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(System.String,System.Int32)
  - System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(System.String,System.Text.Encoding)
  - System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(System.Byte[],System.Int32,System.Int32)
  - System.Web.Security.AntiXss.AntiXssEncoder.UrlPathEncode(System.String)
  - System.Web.Security.AntiXss.AntiXssEncoder.XmlAttributeEncode(System.String)
  - System.Web.Security.AntiXss.AntiXssEncoder.XmlEncode(System.String)
  langs:
  - csharp
  name: AntiXssEncoder
  nameWithType: AntiXssEncoder
  fullName: System.Web.Security.AntiXss.AntiXssEncoder
  type: Class
  summary: "Encodes a string for use in HTML, XML, CSS, and URL strings."
  remarks: "You can use the AntiXssEncoder class to override the <xref:System.Web.Util.HttpEncoder> class that is used by default to encode and decode strings in methods of classes such as <xref:System.Web.HttpUtility>, <xref:System.Web.HttpServerUtility>, and <xref:System.Net.HttpResponseHeader>.       In the AntiXssEncoder class, all characters that are not found in the safe list are encoded by the <xref:System.Web.Security.AntiXss.AntiXssEncoder.HtmlAttributeEncode%2A> and <xref:System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode%2A> methods.       To replace the <xref:System.Web.Util.HttpEncoder> class with the AntiXssEncoder class, register it using the `encoderType` attribute of the httpRuntime element in the Web.config file, as shown in following example:      ```   <httpRuntime encoderType=&quot;System.Web.Security.AntiXss.AntiXssEncoder&quot; />   ```       A list of default safe characters for different encoding methods can be found in the remarks for the <xref:System.Web.Security.AntiXss.AntiXssEncoder.HtmlAttributeEncode%2A>, <xref:System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode%2A>, <xref:System.Web.Security.AntiXss.AntiXssEncoder.XmlAttributeEncode%2A>, and <xref:System.Web.Security.AntiXss.AntiXssEncoder.XmlEncode%2A> methods. The default safe list can be modified by using the <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> method."
  syntax:
    content: 'public class AntiXssEncoder : System.Web.Util.HttpEncoder'
  inheritance:
  - System.Object
  - System.Web.Util.HttpEncoder
  implements: []
  inheritedMembers:
  - System.Web.Util.HttpEncoder.Current
  - System.Web.Util.HttpEncoder.Default
  - System.Web.Util.HttpEncoder.HeaderNameValueEncode(System.String,System.String,System.String@,System.String@)
  - System.Web.Util.HttpEncoder.HtmlDecode(System.String,System.IO.TextWriter)
  - System.Web.Util.HttpEncoder.JavaScriptStringEncode(System.String)
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Security.AntiXss.AntiXssEncoder.#ctor
  id: '#ctor'
  parent: System.Web.Security.AntiXss.AntiXssEncoder
  langs:
  - csharp
  name: AntiXssEncoder()
  nameWithType: AntiXssEncoder.AntiXssEncoder()
  fullName: System.Web.Security.AntiXss.AntiXssEncoder.AntiXssEncoder()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security.AntiXss
  summary: "Initializes a new instance of the <see cref=&quot;T:System.Web.Security.AntiXss.AntiXssEncoder&quot;></see> class."
  syntax:
    content: public AntiXssEncoder ();
    parameters: []
  overload: System.Web.Security.AntiXss.AntiXssEncoder.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Security.AntiXss.AntiXssEncoder.CssEncode(System.String)
  id: CssEncode(System.String)
  parent: System.Web.Security.AntiXss.AntiXssEncoder
  langs:
  - csharp
  name: CssEncode(String)
  nameWithType: AntiXssEncoder.CssEncode(String)
  fullName: System.Web.Security.AntiXss.AntiXssEncoder.CssEncode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security.AntiXss
  summary: "Encodes the specified string for use in cascading style sheets (CSS)."
  remarks: "This method encodes all characters except those that are in the safe list.  \n  \n> [!NOTE]\n>  Put quotation marks (\" \") around the resulting string before you add it to a cascading style sheet.  \n  \n The following table lists the default safe characters.  \n  \n|Unicode code chart|Character(s)|Description|  \n|------------------------|--------------------|-----------------|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|Uppercase alphabetic characters|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Lowercase alphabetic characters|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Numbers|  \n  \n The following table lists examples of inputs and the corresponding encoded outputs.  \n  \n|||  \n|-|-|  \n|`alert('XSS Attack!');`|`alert\\000028\\000027XSS\\000020Attack\\000021\\000027\\000029\\00003B`|  \n|`user@contoso.com`|`user\\000040contoso\\00002Ecom`|  \n|`Anti-Cross Site Scripting Namespace`|`Anti\\00002DCross\\000020Site\\000020Scripting\\000020Namespace`|  \n  \n The CSS character escape sequence consists of a backslash character (\\\\) followed by up to six hexadecimal digits that represent a character code from the ISO 10646 standard. (The ISO 10646 standard is effectively equivalent to Unicode.) Any character other than a hexadecimal digit terminates the escape sequence. If a character that follows the escape sequence is also a valid hexadecimal digit, it must either include six digits in the escape sequence or use a whitespace character to terminate the escape sequence. For example, `\\000020` denotes a space."
  syntax:
    content: public static string CssEncode (string input);
    parameters:
    - id: input
      type: System.String
      description: "The string to encode."
    return:
      type: System.String
      description: "To be added."
  overload: System.Web.Security.AntiXss.AntiXssEncoder.CssEncode*
  exceptions:
  - type: Microsoft.Security.Application.InvalidUnicodeValueException
    commentId: T:Microsoft.Security.Application.InvalidUnicodeValueException
    description: "\n    input contains a character that has an invalid Unicode value."
  - type: Microsoft.Security.Application.InvalidSurrogatePairException
    commentId: T:Microsoft.Security.Application.InvalidSurrogatePairException
    description: "\n    input contained a high surrogate code point that was not followed by a low surrogate code point.  \n  \n -or-  \n  \n input contained a low surrogate code point that was not preceded by a high surrogate code point."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Security.AntiXss.AntiXssEncoder.HtmlAttributeEncode(System.String,System.IO.TextWriter)
  id: HtmlAttributeEncode(System.String,System.IO.TextWriter)
  parent: System.Web.Security.AntiXss.AntiXssEncoder
  langs:
  - csharp
  name: HtmlAttributeEncode(String,TextWriter)
  nameWithType: AntiXssEncoder.HtmlAttributeEncode(String,TextWriter)
  fullName: System.Web.Security.AntiXss.AntiXssEncoder.HtmlAttributeEncode(String,TextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security.AntiXss
  summary: "Encodes and outputs the specified string for use in an HTML attribute."
  remarks: "This method encodes all characters except those that are in the safe list. Characters are encoded by using `&#DECIMAL;` notation.  \n  \n> [!NOTE]\n>  Put double quotation marks (\" \") or single quotation marks (' ') around the resulting string before you add it to a page.  \n  \n The following table lists the default safe characters.  \n  \n|Unicode code chart|Character(s)|Description|  \n|------------------------|--------------------|-----------------|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|Uppercase Latin alphabetic characters|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Lowercase Latin alphabetic characters|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Numbers|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|!|Exclamation mark|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|#|Number sign, hash|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|$|Dollar sign|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|%|Percent sign|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|( )|Parentheses|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|*|Asterisk|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|+|Plus sign|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|,|Comma|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|-|Hyphen, minus|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|.|Period, dot, full stop|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|/|Slash|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|:|Colon|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|;|Semicolon|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|=|Equals sign|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|?|Question mark|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|@|Commercial at-sign|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|[ ]|Square brackets|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\\|Backslash|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|^|Caret|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|_|Underscore|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|`|Grave accent|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|{ }|Braces, curly brackets|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|&#124;|Vertical line|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|~|Tilde|  \n|[C1 Controls and Latin-1 Supplement](http://www.unicode.org/charts/PDF/U0080.pdf)|0x00A1 - 0x00AC|Special characters between 0x00A1 (161 decimal) and 0x00AC (172 decimal).|  \n|[C1 Controls and Latin-1 Supplement](http://www.unicode.org/charts/PDF/U0080.pdf)|0x00AE - 0x00FF|Special characters between 0x00AE (174 decimal) and 0x00FF (255 decimal).|  \n|[Latin-Extended-A](http://www.unicode.org/charts/PDF/U0100.pdf)|0x0100 - 0x017F|Latin extended characters between 0x0100 (256 decimal) and 0x017F (383 decimal).|  \n|[Latin-Extended-B](http://www.unicode.org/charts/PDF/U0180.pdf)|0x0180 - 0x024F|Latin extended characters between 0x0180 (384 decimal) and 0x024F (591 decimal).|  \n|[IPA Extensions](http://www.unicode.org/charts/PDF/U0250.pdf)|0x0250 - 0x02AF|IPA Extension characters between 0x0250 (592 decimal) and 0x02AF (687 decimal).|  \n|[Spacing Modifier Letters](http://www.unicode.org/charts/PDF/U02B0.pdf)|0x02B0 - 0x02FF|Spacing modifier letter characters between 0x02B0 (688 decimal) and 0x02FF (767 decimal).|  \nCombining Diacritical Marks](http://www.unicode.org/charts/PDF/U0300.pdf)|0x0300 - 0x036F|Combining diacritical mark characters between 0x0300 (768 decimal) and 0x036F (879 decimal).|  \n  \n The following table lists examples of inputs and the corresponding encoded outputs.  \n  \n|||  \n|-|-|  \n|`alert('XSS Attack!');`|`alert('XSS Attack!');`|  \n|`<script>alert('XSS Attack!');</script>`|`<script>alert('XSS Attack!');</script>`|  \n|`alert('XSSあAttack!');`|`alert('XSSあAttack!');`|  \n|`user@contoso.com`|`user@contoso.com`|  \n|`\"Anti-Cross Site Scripting Namespace\"`|`\"Anti-Cross Site Scripting Namespace\"`|  \n  \n To customize the safe list, call the <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> method."
  syntax:
    content: protected override void HtmlAttributeEncode (string value, System.IO.TextWriter output);
    parameters:
    - id: value
      type: System.String
      description: "The string to encode."
    - id: output
      type: System.IO.TextWriter
      description: "The text writer to use to output the string."
  overload: System.Web.Security.AntiXss.AntiXssEncoder.HtmlAttributeEncode*
  exceptions:
  - type: Microsoft.Security.Application.InvalidUnicodeValueException
    commentId: T:Microsoft.Security.Application.InvalidUnicodeValueException
    description: "\n    input contains a character that has an invalid Unicode value."
  - type: Microsoft.Security.Application.InvalidSurrogatePairException
    commentId: T:Microsoft.Security.Application.InvalidSurrogatePairException
    description: "\n    input contained a high surrogate code point that was not followed by a low surrogate code point.  \n  \n -or-  \n  \n input contained a low surrogate code point that was not preceded by a high surrogate code point."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode(System.String,System.Boolean)
  id: HtmlEncode(System.String,System.Boolean)
  parent: System.Web.Security.AntiXss.AntiXssEncoder
  langs:
  - csharp
  name: HtmlEncode(String,Boolean)
  nameWithType: AntiXssEncoder.HtmlEncode(String,Boolean)
  fullName: System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security.AntiXss
  syntax:
    content: public static string HtmlEncode (string input, bool useNamedEntities);
    parameters:
    - id: input
      type: System.String
      description: "The string to encode."
    - id: useNamedEntities
      type: System.Boolean
      description: "\n     to use HTML 4.0 named entities for certain character encodings; "
    return:
      type: System.String
      description: "To be added."
  overload: System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode(System.String,System.IO.TextWriter)
  id: HtmlEncode(System.String,System.IO.TextWriter)
  parent: System.Web.Security.AntiXss.AntiXssEncoder
  langs:
  - csharp
  name: HtmlEncode(String,TextWriter)
  nameWithType: AntiXssEncoder.HtmlEncode(String,TextWriter)
  fullName: System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode(String,TextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security.AntiXss
  summary: "Encodes the specified string for use as text in HTML markup and outputs the string by using the specified text writer."
  remarks: "This method encodes all characters except those that are in the safe list. Characters are encoded by using `&#DECIMAL;` notation.  \n  \n> [!NOTE]\n>  Put double quotation marks (\" \") or single quotation marks (' ') around the resulting string before you add it to a page.  \n  \n The following table lists the default safe characters.  \n  \n|Unicode code chart|Character(s)|Description|  \n|------------------------|--------------------|-----------------|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|Uppercase Latin alphabetic characters|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Lowercase Latin alphabetic characters|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Numbers|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|(Space)|Space|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|!|Exclamation mark|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|#|Number sign, hash|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|$|Dollar sign|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|%|Percent sign|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|( )|Parentheses|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|*|Asterisk|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|+|Plus sign|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|,|Comma|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|-|Hyphen, minus|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|.|Period, dot, full stop|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|/|Slash|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|:|Colon|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|;|Semicolon|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|=|Equals sign|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|?|Question mark|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|@|Commercial at|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|[ ]|Square brackets|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\\|Backslash|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|^|Caret|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|_|Underscore|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|`|Grave accent|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|{ }|Braces, curly brackets|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|&#124;|Vertical line|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|~|Tilde|  \n|[C1 Controls and Latin-1 Supplement](http://www.unicode.org/charts/PDF/U0080.pdf)|0x00A1 - 0x00AC|Special characters between 0x00A1 (161 decimal) and 0x00AC (172 decimal). Characters in this range are encoded when `useNamedEntities` is `true`.|  \n|[C1 Controls and Latin-1 Supplement](http://www.unicode.org/charts/PDF/U0080.pdf)|0x00AE - 0x00FF|Special characters between 0x00AE (174 decimal) and 0x00FF (255 decimal). Characters in this range are encoded when `useNamedEntities` is `true`.|  \n|[Latin Extended-A](http://www.unicode.org/charts/PDF/U0100.pdf)|0x0100 - 0x017F|Latin extended characters between 0x0100 (256 decimal) and 0x017F (383 decimal).|  \n|[Latin Extended-B](http://www.unicode.org/charts/PDF/U0180.pdf)|0x0180 - 0x024F|Latin extended characters between 0x0180 (384 decimal) and 0x024F (591 decimal).|  \n|[IPA Extensions](http://www.unicode.org/charts/PDF/U0250.pdf)|0x0250 - 0x02AF|IPA Extension characters between 0x0250 (592 decimal) and 0x02AF (687 decimal).|  \n|[Spacing Modifier Letters](http://www.unicode.org/charts/PDF/U02B0.pdf)|0x02B0 - 0x02FF|Spacing modifier letter characters between 0x02B0 (688 decimal) and 0x02FF (767 decimal).|  \nCombining Diacritical Marks](http://www.unicode.org/charts/PDF/U0300.pdf)|0x0300 - 0x036F|Combining diacritical mark characters between 0x0300 (768 decimal) and 0x036F (879 decimal).|  \n  \n The following table lists examples of inputs and the corresponding encoded outputs.  \n  \n|||  \n|-|-|  \n|`alert('XSS Attack!');`|`alert('XSS Attack!');`|  \n|`<script>alert('XSS Attack!');</script>`|`<script>alert('XSS Attack!');</script>`|  \n|`alert('XSSあAttack!');`|`alert('XSSあAttack!');`|  \n|`user@contoso.com`|`user@contoso.com`|  \n|`\"Anti-Cross Site Scripting Namespace\"`|`\"Anti-Cross Site Scripting Namespace\"`|  \n  \n To customize the safe list, call the <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> method."
  syntax:
    content: protected override void HtmlEncode (string value, System.IO.TextWriter output);
    parameters:
    - id: value
      type: System.String
      description: "The string to encode."
    - id: output
      type: System.IO.TextWriter
      description: "The text writer to use to output the string."
  overload: System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode*
  exceptions:
  - type: Microsoft.Security.Application.InvalidUnicodeValueException
    commentId: T:Microsoft.Security.Application.InvalidUnicodeValueException
    description: "\n    input contains a character that has an invalid Unicode value."
  - type: Microsoft.Security.Application.InvalidSurrogatePairException
    commentId: T:Microsoft.Security.Application.InvalidSurrogatePairException
    description: "\n    input contained a high surrogate code point that was not followed by a low surrogate code point.  \n  \n -or-  \n  \n input contained a low surrogate code point that was not preceded by a high surrogate code point."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode(System.String)
  id: HtmlFormUrlEncode(System.String)
  parent: System.Web.Security.AntiXss.AntiXssEncoder
  langs:
  - csharp
  name: HtmlFormUrlEncode(String)
  nameWithType: AntiXssEncoder.HtmlFormUrlEncode(String)
  fullName: System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security.AntiXss
  summary: "Encodes the specified string for use in form submissions whose MIME type is &quot;application/x-www-form-urlencoded&quot;."
  remarks: "This method encodes all characters except those that are in the safe list. Characters are encoded by using `%SINGLE_BYTE_HEX` notation.      > [!NOTE] >  Put double quotation marks (&quot; &quot;) or single quotation marks (&quot; &quot;) around the resulting string before you add it to a page.      |Unicode code chart|Character(s)|Description|   |------------------------|--------------------|-----------------|   |[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|Uppercase alphabetic characters|   |[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Lowercase alphabetic characters|   |[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Numbers|   |[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|-|Hyphen, minus|   |[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|.|Period, dot, full stop|   |[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|_|Underscore|   |[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|~|Tilde|       The following table lists examples of inputs and the corresponding encoded outputs.      |||   |-|-|   |`alert(&quot;XSS Attack!&quot;);`|`alert%28%27XSS+Attack%21%27%29%3b`|   |`<script>alert(&quot;XSS Attack!&quot;);</script>`|`%3cscript%3ealert%28%27XSS+Attack%21%27%29%3b%3c%2fscript%3e`|   |`alert(&quot;XSSあAttack!&quot;);`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|   |`user@contoso.com`|`user@contoso.com`|   |`Anti-Cross Site Scripting Namespace`|`Anti-Cross+Site+Scripting+Namespace`|"
  syntax:
    content: public static string HtmlFormUrlEncode (string input);
    parameters:
    - id: input
      type: System.String
      description: "The string to encode."
    return:
      type: System.String
      description: "To be added."
  overload: System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode(System.String,System.Int32)
  id: HtmlFormUrlEncode(System.String,System.Int32)
  parent: System.Web.Security.AntiXss.AntiXssEncoder
  langs:
  - csharp
  name: HtmlFormUrlEncode(String,Int32)
  nameWithType: AntiXssEncoder.HtmlFormUrlEncode(String,Int32)
  fullName: System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode(String,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security.AntiXss
  summary: "Encodes the specified string for use in form submissions whose MIME type is &quot;application/x-www-form-urlencoded&quot; by using the specified code page."
  remarks: "This method encodes all characters except those that are in the safe list. Characters are encoded by using `%SINGLE_BYTE_HEX` notation.      > [!NOTE] >  Put double quotation marks (&quot; &quot;) or single quotation marks (&quot; &quot;) around the resulting string before you add it to a page.       The following table lists the default safe characters.      |Unicode code chart|Character(s)|Description|   |------------------------|--------------------|-----------------|   |[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|Uppercase alphabetic characters|   |[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Lowercase alphabetic characters|   |[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Numbers|   |[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|-|Hyphen, minus|   |[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|.|Period, dot, full stop|   |[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|_|Underscore|   |[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|~|Tilde|       The following table lists examples of inputs and the corresponding encoded outputs.      |||   |-|-|   |`alert(&quot;XSS Attack!&quot;);`|`alert%28%27XSS+Attack%21%27%29%3b`|   |`<script>alert(&quot;XSS Attack!&quot;);</script>`|`%3cscript%3ealert%28%27XSS+Attack%21%27%29%3b%3c%2fscript%3e`|   |`alert(&quot;XSSあAttack!&quot;);`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|   |`user@contoso.com`|`user%40contoso.com`|   |`Anti-Cross Site Scripting Namespace`|`Anti-Cross+Site+Scripting+Namespace`|"
  syntax:
    content: public static string HtmlFormUrlEncode (string input, int codePage);
    parameters:
    - id: input
      type: System.String
      description: "The string to encode."
    - id: codePage
      type: System.Int32
      description: "The code page to use to encode the `input` string."
    return:
      type: System.String
      description: "To be added."
  overload: System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode(System.String,System.Text.Encoding)
  id: HtmlFormUrlEncode(System.String,System.Text.Encoding)
  parent: System.Web.Security.AntiXss.AntiXssEncoder
  langs:
  - csharp
  name: HtmlFormUrlEncode(String,Encoding)
  nameWithType: AntiXssEncoder.HtmlFormUrlEncode(String,Encoding)
  fullName: System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode(String,Encoding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security.AntiXss
  summary: "Encodes the specified string for form submissions whose MIME type is &quot;application/x-www-form-urlencoded&quot; by using the specified character encoding type."
  remarks: "This method encodes all characters except those that are in the safe list. Characters are encoded by using `%SINGLE_BYTE_HEX` notation.      > [!NOTE] >  Put double quotation marks (&quot; &quot;) or single quotation marks (&quot; &quot;) around the resulting string before you add it to a page.       The following table lists the default safe characters.      |Unicode code chart|Character(s)|Description|   |------------------------|--------------------|-----------------|   |[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|Uppercase alphabetic characters|   |[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Lowercase alphabetic characters|   |[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Numbers|   |[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|-|Hyphen, minus|   |[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|.|Period, dot, full stop|   |[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|_|Underscore|   |[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|~|Tilde|       The following table lists examples of inputs and the corresponding encoded outputs.      |||   |-|-|   |`alert(&quot;XSS Attack!&quot;);`|`alert%28%27XSS+Attack%21%27%29%3b`|   |`<script>alert(&quot;XSS Attack!&quot;);</script>`|`%3cscript%3ealert%28%27XSS+Attack%21%27%29%3b%3c%2fscript%3e`|   |`alert(&quot;XSSあAttack!&quot;);`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|   |`user@contoso.com`|`user%40contoso.com`|   |`Anti-Cross Site Scripting Namespace`|`Anti-Cross+Site+Scripting+Namespace`|"
  syntax:
    content: public static string HtmlFormUrlEncode (string input, System.Text.Encoding inputEncoding);
    parameters:
    - id: input
      type: System.String
      description: "The string to encode."
    - id: inputEncoding
      type: System.Text.Encoding
      description: "The input encoding type."
    return:
      type: System.String
      description: "To be added."
  overload: System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe(System.Web.Security.AntiXss.LowerCodeCharts,System.Web.Security.AntiXss.LowerMidCodeCharts,System.Web.Security.AntiXss.MidCodeCharts,System.Web.Security.AntiXss.UpperMidCodeCharts,System.Web.Security.AntiXss.UpperCodeCharts)
  id: MarkAsSafe(System.Web.Security.AntiXss.LowerCodeCharts,System.Web.Security.AntiXss.LowerMidCodeCharts,System.Web.Security.AntiXss.MidCodeCharts,System.Web.Security.AntiXss.UpperMidCodeCharts,System.Web.Security.AntiXss.UpperCodeCharts)
  parent: System.Web.Security.AntiXss.AntiXssEncoder
  langs:
  - csharp
  name: MarkAsSafe(LowerCodeCharts,LowerMidCodeCharts,MidCodeCharts,UpperMidCodeCharts,UpperCodeCharts)
  nameWithType: AntiXssEncoder.MarkAsSafe(LowerCodeCharts,LowerMidCodeCharts,MidCodeCharts,UpperMidCodeCharts,UpperCodeCharts)
  fullName: System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe(LowerCodeCharts,LowerMidCodeCharts,MidCodeCharts,UpperMidCodeCharts,UpperCodeCharts)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security.AntiXss
  summary: "Marks characters from the specified Unicode code charts as safe."
  remarks: "The safe list affects all HTML XML, CSS, and URL encoding methods.       With some exceptions, Unicode code charts do not directly correspond to written languages. To add support for a specific language or set of languages often requires marking multiple code charts as safe.       To add support for the Japanese language while continuing to allow English, use the following syntax:      ```      MarkAsSafe(               LowerCodeCharts.Default,               LowerMidCodeCharts.HangulJamo,               MidCodeCharts.None,               UpperMidCodeCharts.CjkRadicalsSupplement |                UpperMidCodeCharts.CjkSymbolsAndPunctuation |                UpperMidCodeCharts.Hiragana |                UpperMidCodeCharts.Katakana |                UpperMidCodeCharts.KatakanaPhoneticExtensions |                UpperMidCodeCharts.LatinExtendedD |               UpperMidCodeCharts.CjkUnifiedIdeographs,               UpperCodeCharts.None);   ```      > [!NOTE] >  The MarkAsSafe method must be called in the `Application_Start` method in the Global.asax file."
  syntax:
    content: public static void MarkAsSafe (System.Web.Security.AntiXss.LowerCodeCharts lowerCodeCharts, System.Web.Security.AntiXss.LowerMidCodeCharts lowerMidCodeCharts, System.Web.Security.AntiXss.MidCodeCharts midCodeCharts, System.Web.Security.AntiXss.UpperMidCodeCharts upperMidCodeCharts, System.Web.Security.AntiXss.UpperCodeCharts upperCodeCharts);
    parameters:
    - id: lowerCodeCharts
      type: System.Web.Security.AntiXss.LowerCodeCharts
      description: "The combination of lower code charts to mark as safe."
    - id: lowerMidCodeCharts
      type: System.Web.Security.AntiXss.LowerMidCodeCharts
      description: "The combination of lower-middle code charts to mark as safe."
    - id: midCodeCharts
      type: System.Web.Security.AntiXss.MidCodeCharts
      description: "The combination of middle code charts to mark as safe."
    - id: upperMidCodeCharts
      type: System.Web.Security.AntiXss.UpperMidCodeCharts
      description: "The combination of upper-middle code charts to mark as safe."
    - id: upperCodeCharts
      type: System.Web.Security.AntiXss.UpperCodeCharts
      description: "The combination of upper code charts to mark as safe."
  overload: System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The MarkAsSafe method was called outside the  method in the Global.asax file."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(System.String)
  id: UrlEncode(System.String)
  parent: System.Web.Security.AntiXss.AntiXssEncoder
  langs:
  - csharp
  name: UrlEncode(String)
  nameWithType: AntiXssEncoder.UrlEncode(String)
  fullName: System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security.AntiXss
  summary: "Encodes the specified string for use in a URL."
  remarks: "This method encodes all characters except those that are in the safe list. Characters are encoded by using `%SINGLE_BYTE_HEX` notation.       The following table lists the default safe characters.      |Unicode code chart|Character(s)|Description|   |------------------------|--------------------|-----------------|   |[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|Uppercase alphabetic characters|   |[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Lowercase alphabetic characters|   |[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Numbers|   |[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|-|Hyphen, minus|   |[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|.|Period, dot, full stop|   |[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|_|Underscore|   |[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|~|Tilde|       The following table lists examples of inputs and the corresponding encoded outputs.      |||   |-|-|   |`alert(&quot;XSS Attack!&quot;);`|`alert%28%27XSS%20Attack%21%27%29%3b`|   |`<script>alert(&quot;XSS Attack!&quot;);</script>`|`%3cscript%3ealert%28%27XSS%20Attack%21%27%29%3b%3c%2fscript%3e`|   |`alert(&quot;XSSあAttack!&quot;);`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|   |`user@contoso.com`|`user%40contoso.com`|   |`&quot;Anti-Cross Site Scripting Namespace&quot;`|`%22Anti-Cross%20Site%20Scripting%20Namespace%22`|"
  syntax:
    content: public static string UrlEncode (string input);
    parameters:
    - id: input
      type: System.String
      description: "The string to encode."
    return:
      type: System.String
      description: "To be added."
  overload: System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(System.String,System.Int32)
  id: UrlEncode(System.String,System.Int32)
  parent: System.Web.Security.AntiXss.AntiXssEncoder
  langs:
  - csharp
  name: UrlEncode(String,Int32)
  nameWithType: AntiXssEncoder.UrlEncode(String,Int32)
  fullName: System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(String,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security.AntiXss
  summary: "Encodes the specified string for use in a URL by using the specified code page."
  remarks: "This method encodes all characters except those that are in the safe list. Characters are encoded by using `%SINGLE_BYTE_HEX` notation.       The following table lists the default safe characters.      |Unicode code chart|Character(s)|Description|   |------------------------|--------------------|-----------------|   |[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|Uppercase alphabetic characters|   |[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Lowercase alphabetic characters|   |[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Numbers|   |[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|-|Hyphen, minus|   |[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|.|Period, dot, full stop|   |[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|_|Underscore|   |[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|~|Tilde|       The following table lists examples of inputs and the corresponding encoded outputs.      |||   |-|-|   |`alert(&quot;XSS Attack!&quot;);`|`alert%28%27XSS%20Attack%21%27%29%3b`|   |`<script>alert(&quot;XSS Attack!&quot;);</script>`|`%3cscript%3ealert%28%27XSS%20Attack%21%27%29%3b%3c%2fscript%3e`|   |`alert(&quot;XSSあAttack!&quot;);`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|   |`user@contoso.com`|`user%40contoso.com`|   |`&quot;Anti-Cross Site Scripting Namespace&quot;`|`%22Anti-Cross%20Site%20Scripting%20Namespace%22`|"
  syntax:
    content: public static string UrlEncode (string input, int codePage);
    parameters:
    - id: input
      type: System.String
      description: "The string to encode."
    - id: codePage
      type: System.Int32
      description: "The code page to use to encode the `input` string."
    return:
      type: System.String
      description: "To be added."
  overload: System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(System.String,System.Text.Encoding)
  id: UrlEncode(System.String,System.Text.Encoding)
  parent: System.Web.Security.AntiXss.AntiXssEncoder
  langs:
  - csharp
  name: UrlEncode(String,Encoding)
  nameWithType: AntiXssEncoder.UrlEncode(String,Encoding)
  fullName: System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(String,Encoding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security.AntiXss
  summary: "Encodes the specified string for use in a URL by using the specified character encoding type."
  remarks: "This method encodes all characters except those that are in the safe list. Characters are encoded by using `%SINGLE_BYTE_HEX` notation.       The following table lists the default safe characters.      |Unicode code chart|Character(s)|Description|   |------------------------|--------------------|-----------------|   |[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|Uppercase alphabetic characters|   |[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Lowercase alphabetic characters|   |[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Numbers|   |[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|-|Hyphen, minus|   |[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|.|Period, dot, full stop|   |[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|_|Underscore|   |[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|~|Tilde|       The following table lists examples of inputs and the corresponding encoded outputs.      |||   |-|-|   |`alert(&quot;XSS Attack!&quot;);`|`alert%28%27XSS%20Attack%21%27%29%3b`|   |`<script>alert(&quot;XSS Attack!&quot;);</script>`|`%3cscript%3ealert%28%27XSS%20Attack%21%27%29%3b%3c%2fscript%3e`|   |`alert(&quot;XSSあAttack!&quot;);`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|   |`user@contoso.com`|`user%40contoso.com`|   |`&quot;Anti-Cross Site Scripting Namespace&quot;`|`%22Anti-Cross%20Site%20Scripting%20Namespace%22`|"
  syntax:
    content: public static string UrlEncode (string input, System.Text.Encoding inputEncoding);
    parameters:
    - id: input
      type: System.String
      description: "The string to encode."
    - id: inputEncoding
      type: System.Text.Encoding
      description: "The input encoding type."
    return:
      type: System.String
      description: "To be added."
  overload: System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(System.Byte[],System.Int32,System.Int32)
  id: UrlEncode(System.Byte[],System.Int32,System.Int32)
  parent: System.Web.Security.AntiXss.AntiXssEncoder
  langs:
  - csharp
  name: UrlEncode(Byte[],Int32,Int32)
  nameWithType: AntiXssEncoder.UrlEncode(Byte[],Int32,Int32)
  fullName: System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security.AntiXss
  summary: "Encodes the specified byte array for use in a URL, starting at the specified offset in the byte array and encoding the specified number of bytes."
  remarks: "This method encodes all characters except those that are in the safe list. Characters are encoded by using `%SINGLE_BYTE_HEX` notation.       The following table lists the default safe characters.      |Unicode code chart|Character(s)|Description|   |------------------------|--------------------|-----------------|   |[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|Uppercase alphabetic characters|   |[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Lowercase alphabetic characters|   |[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Numbers|   |[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|-|Hyphen, minus|   |[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|.|Period, dot, full stop|   |[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|_|Underscore|   |[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|~|Tilde|       The following table lists examples of inputs and the corresponding encoded outputs.      |||   |-|-|   |`alert(&quot;XSS Attack!&quot;);`|`alert%28%27XSS%20Attack%21%27%29%3b`|   |`<script>alert(&quot;XSS Attack!&quot;);</script>`|`%3cscript%3ealert%28%27XSS%20Attack%21%27%29%3b%3c%2fscript%3e`|   |`alert(&quot;XSSあAttack!&quot;);`|`alert%28%27XSS%e3%81%82Attack%21%27%29%3b`|   |`user@contoso.com`|`user%40contoso.com`|   |`&quot;Anti-Cross Site Scripting Namespace&quot;`|`%22Anti-Cross%20Site%20Scripting%20Namespace%22`|"
  syntax:
    content: protected override byte[] UrlEncode (byte[] bytes, int offset, int count);
    parameters:
    - id: bytes
      type: System.Byte[]
      description: "The byte array to encode."
    - id: offset
      type: System.Int32
      description: "The index of the first byte to encode."
    - id: count
      type: System.Int32
      description: "The number of bytes to encode."
    return:
      type: System.Byte[]
      description: "To be added."
  overload: System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Security.AntiXss.AntiXssEncoder.UrlPathEncode(System.String)
  id: UrlPathEncode(System.String)
  parent: System.Web.Security.AntiXss.AntiXssEncoder
  langs:
  - csharp
  name: UrlPathEncode(String)
  nameWithType: AntiXssEncoder.UrlPathEncode(String)
  fullName: System.Web.Security.AntiXss.AntiXssEncoder.UrlPathEncode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security.AntiXss
  summary: "Encodes path strings for use in a URL."
  remarks: "This method encodes all characters except those that are in the safe list. Characters are encoded by using `%SINGLE_BYTE_HEX` notation.  \n  \n|Unicode code chart|Character(s)|Description|  \n|------------------------|--------------------|-----------------|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|Uppercase alphabetic characters|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Lowercase alphabetic characters|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Numbers|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|#|Number sign, hash|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|%|Percent sign|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|( )|Parentheses|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|-|Hyphen, minus|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|.|Period, dot, full stop|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|/|Slash|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\\|Backslash|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|_|Underscore|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|{ }|Braces, curly brackets|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|&#124;|Vertical line|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|~|Tilde|  \n  \n The following table lists examples of inputs and the corresponding encoded outputs.  \n  \n|||  \n|-|-|  \n|`http://www.contoso.com:8080/<en-us>/[page].htm?v={value1}#x=[amount]`|`http://www.contoso.com:8080/%3cen-us%3e/%5bpage%5d.htm?v={value1}#x=[amount]`|  \n|`alert('XSS Attack!');`|`alert(%27XSS%20Attack%21%27)%3b`|  \n|`<script>alert('XSS Attack!');</script>`|`%3cscript%3ealert(%27XSS%20Attack%21%27)%3b%3c/script%3e`|  \n|`alert('XSSあAttack!');`|`alert(%27XSS%e3%81%82Attack%21%27)%3b`|  \n|`user@contoso.com`|`user%40contoso.com`|  \n|`\"Anti-Cross Site Scripting Namespace\"`|`%22Anti-Cross%20Site%20Scripting%20Namespace%22`|  \n  \n This method encodes only the path of a URL. This method will not encode the scheme (for example, `http:`, `ftp:`, or `file:`), the authority (for example, `www.northwind.com` or `www.contoso.com:8080`), or the query or fragment (for example, `?v=s978dfs9#x=103`). If there is no scheme or authority in the string, the string is assumed to be a relative path, and the path is encoded. In the following URL, only the substring `/default.htm` is encoded:  \n  \n `http://www.contoso.com:8080/default.htm?v=s978dfs9#x=103`"
  syntax:
    content: protected override string UrlPathEncode (string value);
    parameters:
    - id: value
      type: System.String
      description: "The string to encode."
    return:
      type: System.String
      description: "To be added."
  overload: System.Web.Security.AntiXss.AntiXssEncoder.UrlPathEncode*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Security.AntiXss.AntiXssEncoder.XmlAttributeEncode(System.String)
  id: XmlAttributeEncode(System.String)
  parent: System.Web.Security.AntiXss.AntiXssEncoder
  langs:
  - csharp
  name: XmlAttributeEncode(String)
  nameWithType: AntiXssEncoder.XmlAttributeEncode(String)
  fullName: System.Web.Security.AntiXss.AntiXssEncoder.XmlAttributeEncode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security.AntiXss
  summary: "Encodes the specified string for use in XML attributes."
  remarks: "This method encodes all characters except those that are in the safe list. Characters are encoded by using `&#DECIMAL;` notation.  \n  \n> [!NOTE]\n>  Put double quotation marks (\" \") or single quotation marks (' ') around the resulting string before you add it to a page.  \n  \n The following table lists the default safe characters.  \n  \n|Unicode code chart|Character(s)|Description|  \n|------------------------|--------------------|-----------------|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|Uppercase Latin alphabetic characters|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Lowercase Latin alphabetic characters|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Numbers|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|!|Exclamation mark|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|#|Number sign, hash|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|$|Dollar sign|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|%|Percent sign|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|( )|Parentheses|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|*|Asterisk|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|+|Plus sign|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|,|Comma|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|-|Hyphen, minus|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|.|Period, dot, full stop|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|/|Slash|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|:|Colon|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|;|Semicolon|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|=|Equals sign|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|?|Question mark|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|@|Commercial at-sign|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|[ ]|Square brackets|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\\|Backslash|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|^|Caret|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|_|Underscore|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|`|Grave accent|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|{ }|Braces, curly brackets|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|&#124;|Vertical line|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|~|Tilde|  \n|[C1 Controls and Latin-1 Supplement](http://www.unicode.org/charts/PDF/U0080.pdf)|0x00A1 - 0x00AC|Special characters between 0x00A1 (161 decimal) and 0x00AC (172 decimal).|  \n|[C1 Controls and Latin-1 Supplement](http://www.unicode.org/charts/PDF/U0080.pdf)|0x00AE - 0x00FF|Special characters between 0x00AE (174 decimal) and 0x00FF (255 decimal).|  \n|[Latin Extended-A](http://www.unicode.org/charts/PDF/U0100.pdf)|0x0100 - 0x017F|Latin extended characters between 0x0100 (256 decimal) and 0x017F (383 decimal).|  \n|[Latin Extended-B](http://www.unicode.org/charts/PDF/U0180.pdf)|0x0180 - 0x024F|Latin extended characters between 0x0180 (384 decimal) and 0x024F (591 decimal).|  \n|[IPA Extensions](http://www.unicode.org/charts/PDF/U0250.pdf)|0x0250 - 0x02AF|IPA Extension characters between 0x0250 (592 decimal) and 0x02AF (687 decimal).|  \n|[Spacing Modifier Letters](http://www.unicode.org/charts/PDF/U02B0.pdf)|0x02B0 - 0x02FF|Spacing modifier letter characters between 0x02B0 (688 decimal) and 0x02FF (767 decimal).|  \nCombining Diacritical Marks](http://www.unicode.org/charts/PDF/U0300.pdf)|0x0300 - 0x036F|Combining diacritical mark characters between 0x0300 (768 decimal) and 0x036F (879 decimal).|  \n  \n The following table lists examples of inputs and the corresponding encoded outputs.  \n  \n|||  \n|-|-|  \n|`alert('XSS Attack!');`|`alert('XSS Attack!');`|  \n|`<script>alert('XSS Attack!');</script>`|`<script>alert('XSS Attack!');</script>`|  \n|`alert('XSSあAttack!');`|`alert('XSSあAttack!');`|  \n|`user@contoso.com`|`user@contoso.com`|  \n|`\"Anti-Cross Site Scripting Namespace\"`|`\"Anti-Cross Site Scripting Namespace\"`|  \n  \n To customize the safe list, call the <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> method."
  syntax:
    content: public static string XmlAttributeEncode (string input);
    parameters:
    - id: input
      type: System.String
      description: "The string to encode."
    return:
      type: System.String
      description: "To be added."
  overload: System.Web.Security.AntiXss.AntiXssEncoder.XmlAttributeEncode*
  exceptions:
  - type: Microsoft.Security.Application.InvalidUnicodeValueException
    commentId: T:Microsoft.Security.Application.InvalidUnicodeValueException
    description: "\n    input contains a character that has an invalid Unicode value."
  - type: Microsoft.Security.Application.InvalidSurrogatePairException
    commentId: T:Microsoft.Security.Application.InvalidSurrogatePairException
    description: "\n    input contained a high surrogate code point that was not followed by a low surrogate code point.  \n  \n -or-  \n  \n input contained a low surrogate code point that was not preceded by a high surrogate code point."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Security.AntiXss.AntiXssEncoder.XmlEncode(System.String)
  id: XmlEncode(System.String)
  parent: System.Web.Security.AntiXss.AntiXssEncoder
  langs:
  - csharp
  name: XmlEncode(String)
  nameWithType: AntiXssEncoder.XmlEncode(String)
  fullName: System.Web.Security.AntiXss.AntiXssEncoder.XmlEncode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security.AntiXss
  summary: "Encodes the specified string for use in XML attributes."
  remarks: "This method encodes all characters except those that are in the safe list. Characters are encoded by using `&#DECIMAL;` notation.  \n  \n> [!NOTE]\n>  Put double quotation marks (\" \") or single quotation marks (' ') around the resulting string before you add it to a page.  \n  \n The following table lists the default safe characters.  \n  \n|Unicode code chart|Character(s)|Description|  \n|------------------------|--------------------|-----------------|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|A-Z|Uppercase Latin alphabetic characters|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|a-z|Lowercase Latin alphabetic characters|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|0-9|Numbers|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|(Space)|Space|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|!|Exclamation mark|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|#|Number sign, hash|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|$|Dollar sign|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|%|Percent sign|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|( )|Parentheses|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|*|Asterisk|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|+|Plus sign|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|,|Comma|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|-|Hyphen, minus|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|.|Period|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|/|Slash|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|:|Colon|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|;|Semicolon|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|=|Equals sign|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|?|Question mark|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|@|Commercial at|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|[ ]|Square brackets|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|\\|Backslash|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|^|Caret|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|_|Underscore|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|`|Grave accent|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|{ }|Braces, curly brackets|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|&#124;|Vertical line|  \n|[C0 Controls and Basic Latin](http://www.unicode.org/charts/PDF/U0000.pdf)|~|Tilde|  \n|[C1 Controls and Latin-1 Supplement](http://www.unicode.org/charts/PDF/U0080.pdf)|0x00A1 - 0x00AC|Special characters between 0x00A1 (161 decimal) and 0x00AC (172 decimal). Characters in this range are encoded when `useNamedEntities` is `true`.|  \n|[C1 Controls and Latin-1 Supplement](http://www.unicode.org/charts/PDF/U0080.pdf)|0x00AE - 0x00FF|Special characters between 0x00AE (174 decimal) and 0x00FF (255 decimal). Characters in this range are encoded when `useNamedEntities` is `true`.|  \n|[Latin Extended-A](http://www.unicode.org/charts/PDF/U0100.pdf)|0x0100 - 0x017F|Latin extended characters between 0x0100 (256 decimal) and 0x017F (383 decimal).|  \n|[Latin Extended-B](http://www.unicode.org/charts/PDF/U0180.pdf)|0x0180 - 0x024F|Latin extended characters between 0x0180 (384 decimal) and 0x024F (591 decimal).|  \n|[IPA Extensions](http://www.unicode.org/charts/PDF/U0250.pdf)|0x0250 - 0x02AF|IPA Extension characters between 0x0250 (592 decimal) and 0x02AF (687 decimal).|  \n|[Spacing Modifier Letters](http://www.unicode.org/charts/PDF/U02B0.pdf)|0x02B0 - 0x02FF|Spacing modifier letter characters between 0x02B0 (688 decimal) and 0x02FF (767 decimal).|  \nCombining Diacritical Marks](http://www.unicode.org/charts/PDF/U0300.pdf)|0x0300 - 0x036F|Combining diacritical mark characters between 0x0300 (768 decimal) and 0x036F (879 decimal).|  \n  \n The following table lists examples of inputs and the corresponding encoded outputs.  \n  \n|||  \n|-|-|  \n|`alert('XSS Attack!');`|`alert('XSS Attack!');`|  \n|`<script>alert('XSS Attack!');</script>`|`<script>alert('XSS Attack!');</script>`|  \n|`alert('XSSあAttack!');`|`alert('XSSあAttack!');`|  \n|`user@contoso.com`|`user@contoso.com`|  \n|`\"Anti-Cross Site Scripting Namespace\"`|`\"Anti-Cross Site Scripting Namespace\"`|  \n  \n To customize the safe list, call the <xref:System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe%2A> method."
  syntax:
    content: public static string XmlEncode (string input);
    parameters:
    - id: input
      type: System.String
      description: "The string to encode."
    return:
      type: System.String
      description: "To be added."
  overload: System.Web.Security.AntiXss.AntiXssEncoder.XmlEncode*
  exceptions:
  - type: Microsoft.Security.Application.InvalidUnicodeValueException
    commentId: T:Microsoft.Security.Application.InvalidUnicodeValueException
    description: "\n    input contains a character that has an invalid Unicode value."
  - type: Microsoft.Security.Application.InvalidSurrogatePairException
    commentId: T:Microsoft.Security.Application.InvalidSurrogatePairException
    description: "\n    input contained a high surrogate code point that was not followed by a low surrogate code point.  \n  \n -or-  \n  \n input contained a low surrogate code point that was not preceded by a high surrogate code point."
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Web.Util.HttpEncoder
  isExternal: false
  name: System.Web.Util.HttpEncoder
- uid: System.Web.Security.AntiXss.AntiXssEncoder.#ctor
  parent: System.Web.Security.AntiXss.AntiXssEncoder
  isExternal: false
  name: AntiXssEncoder()
  nameWithType: AntiXssEncoder.AntiXssEncoder()
  fullName: System.Web.Security.AntiXss.AntiXssEncoder.AntiXssEncoder()
- uid: System.Web.Security.AntiXss.AntiXssEncoder.CssEncode(System.String)
  parent: System.Web.Security.AntiXss.AntiXssEncoder
  isExternal: false
  name: CssEncode(String)
  nameWithType: AntiXssEncoder.CssEncode(String)
  fullName: System.Web.Security.AntiXss.AntiXssEncoder.CssEncode(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.AntiXss.AntiXssEncoder.HtmlAttributeEncode(System.String,System.IO.TextWriter)
  parent: System.Web.Security.AntiXss.AntiXssEncoder
  isExternal: false
  name: HtmlAttributeEncode(String,TextWriter)
  nameWithType: AntiXssEncoder.HtmlAttributeEncode(String,TextWriter)
  fullName: System.Web.Security.AntiXss.AntiXssEncoder.HtmlAttributeEncode(String,TextWriter)
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode(System.String,System.Boolean)
  parent: System.Web.Security.AntiXss.AntiXssEncoder
  isExternal: false
  name: HtmlEncode(String,Boolean)
  nameWithType: AntiXssEncoder.HtmlEncode(String,Boolean)
  fullName: System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode(System.String,System.IO.TextWriter)
  parent: System.Web.Security.AntiXss.AntiXssEncoder
  isExternal: false
  name: HtmlEncode(String,TextWriter)
  nameWithType: AntiXssEncoder.HtmlEncode(String,TextWriter)
  fullName: System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode(String,TextWriter)
- uid: System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode(System.String)
  parent: System.Web.Security.AntiXss.AntiXssEncoder
  isExternal: false
  name: HtmlFormUrlEncode(String)
  nameWithType: AntiXssEncoder.HtmlFormUrlEncode(String)
  fullName: System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode(String)
- uid: System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode(System.String,System.Int32)
  parent: System.Web.Security.AntiXss.AntiXssEncoder
  isExternal: false
  name: HtmlFormUrlEncode(String,Int32)
  nameWithType: AntiXssEncoder.HtmlFormUrlEncode(String,Int32)
  fullName: System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode(String,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode(System.String,System.Text.Encoding)
  parent: System.Web.Security.AntiXss.AntiXssEncoder
  isExternal: false
  name: HtmlFormUrlEncode(String,Encoding)
  nameWithType: AntiXssEncoder.HtmlFormUrlEncode(String,Encoding)
  fullName: System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode(String,Encoding)
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe(System.Web.Security.AntiXss.LowerCodeCharts,System.Web.Security.AntiXss.LowerMidCodeCharts,System.Web.Security.AntiXss.MidCodeCharts,System.Web.Security.AntiXss.UpperMidCodeCharts,System.Web.Security.AntiXss.UpperCodeCharts)
  parent: System.Web.Security.AntiXss.AntiXssEncoder
  isExternal: false
  name: MarkAsSafe(LowerCodeCharts,LowerMidCodeCharts,MidCodeCharts,UpperMidCodeCharts,UpperCodeCharts)
  nameWithType: AntiXssEncoder.MarkAsSafe(LowerCodeCharts,LowerMidCodeCharts,MidCodeCharts,UpperMidCodeCharts,UpperCodeCharts)
  fullName: System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe(LowerCodeCharts,LowerMidCodeCharts,MidCodeCharts,UpperMidCodeCharts,UpperCodeCharts)
- uid: System.Web.Security.AntiXss.LowerCodeCharts
  parent: System.Web.Security.AntiXss
  isExternal: false
  name: LowerCodeCharts
  nameWithType: LowerCodeCharts
  fullName: System.Web.Security.AntiXss.LowerCodeCharts
- uid: System.Web.Security.AntiXss.LowerMidCodeCharts
  parent: System.Web.Security.AntiXss
  isExternal: false
  name: LowerMidCodeCharts
  nameWithType: LowerMidCodeCharts
  fullName: System.Web.Security.AntiXss.LowerMidCodeCharts
- uid: System.Web.Security.AntiXss.MidCodeCharts
  parent: System.Web.Security.AntiXss
  isExternal: false
  name: MidCodeCharts
  nameWithType: MidCodeCharts
  fullName: System.Web.Security.AntiXss.MidCodeCharts
- uid: System.Web.Security.AntiXss.UpperMidCodeCharts
  parent: System.Web.Security.AntiXss
  isExternal: false
  name: UpperMidCodeCharts
  nameWithType: UpperMidCodeCharts
  fullName: System.Web.Security.AntiXss.UpperMidCodeCharts
- uid: System.Web.Security.AntiXss.UpperCodeCharts
  parent: System.Web.Security.AntiXss
  isExternal: false
  name: UpperCodeCharts
  nameWithType: UpperCodeCharts
  fullName: System.Web.Security.AntiXss.UpperCodeCharts
- uid: System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(System.String)
  parent: System.Web.Security.AntiXss.AntiXssEncoder
  isExternal: false
  name: UrlEncode(String)
  nameWithType: AntiXssEncoder.UrlEncode(String)
  fullName: System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(String)
- uid: System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(System.String,System.Int32)
  parent: System.Web.Security.AntiXss.AntiXssEncoder
  isExternal: false
  name: UrlEncode(String,Int32)
  nameWithType: AntiXssEncoder.UrlEncode(String,Int32)
  fullName: System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(String,Int32)
- uid: System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(System.String,System.Text.Encoding)
  parent: System.Web.Security.AntiXss.AntiXssEncoder
  isExternal: false
  name: UrlEncode(String,Encoding)
  nameWithType: AntiXssEncoder.UrlEncode(String,Encoding)
  fullName: System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(String,Encoding)
- uid: System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(System.Byte[],System.Int32,System.Int32)
  parent: System.Web.Security.AntiXss.AntiXssEncoder
  isExternal: false
  name: UrlEncode(Byte[],Int32,Int32)
  nameWithType: AntiXssEncoder.UrlEncode(Byte[],Int32,Int32)
  fullName: System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode(Byte[],Int32,Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Security.AntiXss.AntiXssEncoder.UrlPathEncode(System.String)
  parent: System.Web.Security.AntiXss.AntiXssEncoder
  isExternal: false
  name: UrlPathEncode(String)
  nameWithType: AntiXssEncoder.UrlPathEncode(String)
  fullName: System.Web.Security.AntiXss.AntiXssEncoder.UrlPathEncode(String)
- uid: System.Web.Security.AntiXss.AntiXssEncoder.XmlAttributeEncode(System.String)
  parent: System.Web.Security.AntiXss.AntiXssEncoder
  isExternal: false
  name: XmlAttributeEncode(String)
  nameWithType: AntiXssEncoder.XmlAttributeEncode(String)
  fullName: System.Web.Security.AntiXss.AntiXssEncoder.XmlAttributeEncode(String)
- uid: System.Web.Security.AntiXss.AntiXssEncoder.XmlEncode(System.String)
  parent: System.Web.Security.AntiXss.AntiXssEncoder
  isExternal: false
  name: XmlEncode(String)
  nameWithType: AntiXssEncoder.XmlEncode(String)
  fullName: System.Web.Security.AntiXss.AntiXssEncoder.XmlEncode(String)
- uid: System.Web.Security.AntiXss.AntiXssEncoder.#ctor*
  parent: System.Web.Security.AntiXss.AntiXssEncoder
  isExternal: false
  name: AntiXssEncoder
  nameWithType: AntiXssEncoder.AntiXssEncoder
- uid: System.Web.Security.AntiXss.AntiXssEncoder.CssEncode*
  parent: System.Web.Security.AntiXss.AntiXssEncoder
  isExternal: false
  name: CssEncode
  nameWithType: AntiXssEncoder.CssEncode
- uid: System.Web.Security.AntiXss.AntiXssEncoder.HtmlAttributeEncode*
  parent: System.Web.Security.AntiXss.AntiXssEncoder
  isExternal: false
  name: HtmlAttributeEncode
  nameWithType: AntiXssEncoder.HtmlAttributeEncode
- uid: System.Web.Security.AntiXss.AntiXssEncoder.HtmlEncode*
  parent: System.Web.Security.AntiXss.AntiXssEncoder
  isExternal: false
  name: HtmlEncode
  nameWithType: AntiXssEncoder.HtmlEncode
- uid: System.Web.Security.AntiXss.AntiXssEncoder.HtmlFormUrlEncode*
  parent: System.Web.Security.AntiXss.AntiXssEncoder
  isExternal: false
  name: HtmlFormUrlEncode
  nameWithType: AntiXssEncoder.HtmlFormUrlEncode
- uid: System.Web.Security.AntiXss.AntiXssEncoder.MarkAsSafe*
  parent: System.Web.Security.AntiXss.AntiXssEncoder
  isExternal: false
  name: MarkAsSafe
  nameWithType: AntiXssEncoder.MarkAsSafe
- uid: System.Web.Security.AntiXss.AntiXssEncoder.UrlEncode*
  parent: System.Web.Security.AntiXss.AntiXssEncoder
  isExternal: false
  name: UrlEncode
  nameWithType: AntiXssEncoder.UrlEncode
- uid: System.Web.Security.AntiXss.AntiXssEncoder.UrlPathEncode*
  parent: System.Web.Security.AntiXss.AntiXssEncoder
  isExternal: false
  name: UrlPathEncode
  nameWithType: AntiXssEncoder.UrlPathEncode
- uid: System.Web.Security.AntiXss.AntiXssEncoder.XmlAttributeEncode*
  parent: System.Web.Security.AntiXss.AntiXssEncoder
  isExternal: false
  name: XmlAttributeEncode
  nameWithType: AntiXssEncoder.XmlAttributeEncode
- uid: System.Web.Security.AntiXss.AntiXssEncoder.XmlEncode*
  parent: System.Web.Security.AntiXss.AntiXssEncoder
  isExternal: false
  name: XmlEncode
  nameWithType: AntiXssEncoder.XmlEncode
