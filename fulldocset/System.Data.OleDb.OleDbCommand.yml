### YamlMime:ManagedReference
items:
- uid: System.Data.OleDb.OleDbCommand
  id: OleDbCommand
  children:
  - System.Data.OleDb.OleDbCommand.#ctor
  - System.Data.OleDb.OleDbCommand.#ctor(System.String)
  - System.Data.OleDb.OleDbCommand.#ctor(System.String,System.Data.OleDb.OleDbConnection)
  - System.Data.OleDb.OleDbCommand.#ctor(System.String,System.Data.OleDb.OleDbConnection,System.Data.OleDb.OleDbTransaction)
  - System.Data.OleDb.OleDbCommand.Cancel
  - System.Data.OleDb.OleDbCommand.Clone
  - System.Data.OleDb.OleDbCommand.CommandText
  - System.Data.OleDb.OleDbCommand.CommandTimeout
  - System.Data.OleDb.OleDbCommand.CommandType
  - System.Data.OleDb.OleDbCommand.Connection
  - System.Data.OleDb.OleDbCommand.CreateDbParameter
  - System.Data.OleDb.OleDbCommand.CreateParameter
  - System.Data.OleDb.OleDbCommand.DbConnection
  - System.Data.OleDb.OleDbCommand.DbParameterCollection
  - System.Data.OleDb.OleDbCommand.DbTransaction
  - System.Data.OleDb.OleDbCommand.DesignTimeVisible
  - System.Data.OleDb.OleDbCommand.Dispose(System.Boolean)
  - System.Data.OleDb.OleDbCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  - System.Data.OleDb.OleDbCommand.ExecuteNonQuery
  - System.Data.OleDb.OleDbCommand.ExecuteReader
  - System.Data.OleDb.OleDbCommand.ExecuteReader(System.Data.CommandBehavior)
  - System.Data.OleDb.OleDbCommand.ExecuteScalar
  - System.Data.OleDb.OleDbCommand.Parameters
  - System.Data.OleDb.OleDbCommand.Prepare
  - System.Data.OleDb.OleDbCommand.ResetCommandTimeout
  - System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader
  - System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)
  - System.Data.OleDb.OleDbCommand.System#ICloneable#Clone
  - System.Data.OleDb.OleDbCommand.Transaction
  - System.Data.OleDb.OleDbCommand.UpdatedRowSource
  langs:
  - csharp
  name: OleDbCommand
  nameWithType: OleDbCommand
  fullName: System.Data.OleDb.OleDbCommand
  type: Class
  summary: "Represents an SQL statement or stored procedure to execute against a data source."
  remarks: "When an instance of OleDbCommand is created, the read/write properties are set to their initial values. For a list of these values, see the OleDbCommand constructor.       OleDbCommand features the following methods executing commands at a data source:      |Item|Description|   |----------|-----------------|   |<xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>|Executes commands that return rows. <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> may not have the effect that you want if used to execute commands such as SQL SET statements.|   |<xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A>|Executes commands such as SQL INSERT, DELETE, UPDATE, and SET statements.|   |<xref:System.Data.OleDb.OleDbCommand.ExecuteScalar%2A>|Retrieves a single value, for example, an aggregate value from a database.|       You can reset the <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> property and reuse the OleDbCommand object. However, you must close the <xref:System.Data.OleDb.OleDbDataReader> before you can execute a new or previous command.       If a fatal <xref:System.Data.OleDb.OleDbException> (for example, a SQL Server severity level of 20 or greater) is generated by the method executing an OleDbCommand, the <xref:System.Data.OleDb.OleDbConnection>, the connection may be closed. However, the user can reopen the connection and continue."
  example:
  - "The following example uses the OleDbCommand, along <xref:System.Data.OleDb.OleDbDataAdapter> and <xref:System.Data.OleDb.OleDbConnection>, to select rows from an Access database. The filled <xref:System.Data.DataSet> is then returned. The example is passed an initialized <xref:System.Data.DataSet>, a connection string, a query string that is an SQL SELECT statement, and a string that is the name of the source database table.  \n  \n [!code-cs[Classic WebData OleDbCommand Example#1](~/add/codesnippet/csharp/t-system.data.oledb.oled_9_1.cs)]\n [!code-vb[Classic WebData OleDbCommand Example#1](~/add/codesnippet/visualbasic/t-system.data.oledb.oled_9_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("RecordsAffected")]

      [System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OleDbCommandDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.ToolboxItem(true)]

      public sealed class OleDbCommand : System.Data.Common.DbCommand, ICloneable, IDisposable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbCommand
  implements:
  - System.ICloneable
  - System.IDisposable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteNonQueryAsync
  - System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteReaderAsync
  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior)
  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteScalarAsync
  - System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Connection
  - System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.#ctor
  id: '#ctor'
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: OleDbCommand()
  nameWithType: OleDbCommand.OleDbCommand()
  fullName: System.Data.OleDb.OleDbCommand.OleDbCommand()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Initializes a new instance of the <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref> class."
  remarks: "The base constructor initializes all fields to their default values. The following table shows initial property values for an instance of <xref:System.Data.OleDb.OleDbCommand>.      |Properties|Initial Value|   |----------------|-------------------|   |<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>|empty string (&quot;&quot;)|   |<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>|30|   |<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>|`Text`|   |<xref:System.Data.OleDb.OleDbCommand.Connection%2A>|null|"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.  \n  \n [!code-cs[Classic WebData OleDbCommand.OleDbCommand Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_21_1.cs)]\n [!code-vb[Classic WebData OleDbCommand.OleDbCommand Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_21_1.vb)]"
  syntax:
    content: public OleDbCommand ();
    parameters: []
  overload: System.Data.OleDb.OleDbCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: OleDbCommand(String)
  nameWithType: OleDbCommand.OleDbCommand(String)
  fullName: System.Data.OleDb.OleDbCommand.OleDbCommand(String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Initializes a new instance of the <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref> class with the text of the query."
  remarks: "The following table shows initial property values for an instance of <xref:System.Data.OleDb.OleDbCommand>.      |Properties|Initial Value|   |----------------|-------------------|   |<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>|`cmdText`|   |<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>|30|   |<xref:System.Data.IDbCommand.CommandType%2A>|`Text`|   |<xref:System.Data.OleDb.OleDbCommand.Connection%2A>|null|"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.  \n  \n [!code-cs[Classic WebData OleDbCommand.OleDbCommand1 Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_19_1.cs)]\n [!code-vb[Classic WebData OleDbCommand.OleDbCommand1 Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_19_1.vb)]"
  syntax:
    content: public OleDbCommand (string cmdText);
    parameters:
    - id: cmdText
      type: System.String
      description: "The text of the query."
  overload: System.Data.OleDb.OleDbCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.#ctor(System.String,System.Data.OleDb.OleDbConnection)
  id: '#ctor(System.String,System.Data.OleDb.OleDbConnection)'
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: OleDbCommand(String,OleDbConnection)
  nameWithType: OleDbCommand.OleDbCommand(String,OleDbConnection)
  fullName: System.Data.OleDb.OleDbCommand.OleDbCommand(String,OleDbConnection)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Initializes a new instance of the <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref> class with the text of the query and an <xref href=&quot;System.Data.OleDb.OleDbConnection&quot;></xref>."
  remarks: "The following table shows initial property values for an instance of <xref:System.Data.OleDb.OleDbCommand>.      |Properties|Initial Value|   |----------------|-------------------|   |<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>|`cmdText`|   |<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>|30|   |<xref:System.Data.IDbCommand.CommandType%2A>|`Text`|   |<xref:System.Data.OleDb.OleDbCommand.Connection%2A>|A new <xref:System.Data.OleDb.OleDbConnection> that is the value for the `connection` parameter.|       You can change the value for any of these parameters by setting the related property."
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OleDbCommand.OleDbCommand2 Example#1](~/add/codesnippet/visualbasic/26f0a1c0-3abd-4fd3-81fd-_1.vb)]\n [!code-cs[Classic WebData OleDbCommand.OleDbCommand2 Example#1](~/add/codesnippet/csharp/26f0a1c0-3abd-4fd3-81fd-_1.cs)]"
  syntax:
    content: public OleDbCommand (string cmdText, System.Data.OleDb.OleDbConnection connection);
    parameters:
    - id: cmdText
      type: System.String
      description: "The text of the query."
    - id: connection
      type: System.Data.OleDb.OleDbConnection
      description: "An <xref href=&quot;System.Data.OleDb.OleDbConnection&quot;></xref> that represents the connection to a data source."
  overload: System.Data.OleDb.OleDbCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.#ctor(System.String,System.Data.OleDb.OleDbConnection,System.Data.OleDb.OleDbTransaction)
  id: '#ctor(System.String,System.Data.OleDb.OleDbConnection,System.Data.OleDb.OleDbTransaction)'
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: OleDbCommand(String,OleDbConnection,OleDbTransaction)
  nameWithType: OleDbCommand.OleDbCommand(String,OleDbConnection,OleDbTransaction)
  fullName: System.Data.OleDb.OleDbCommand.OleDbCommand(String,OleDbConnection,OleDbTransaction)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Initializes a new instance of the <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref> class with the text of the query, an <xref href=&quot;System.Data.OleDb.OleDbConnection&quot;></xref>, and the <xref:System.Data.OleDb.OleDbCommand.Transaction*>."
  remarks: "The following table shows initial property values for an instance of <xref:System.Data.OleDb.OleDbCommand>.      |Properties|Initial Value|   |----------------|-------------------|   |<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>|`cmdText`|   |<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>|30|   |<xref:System.Data.IDbCommand.CommandType%2A>|`Text`|   |<xref:System.Data.OleDb.OleDbCommand.Connection%2A>|A new <xref:System.Data.OleDb.OleDbConnection> that is the value for the `connection` parameter.|       You can change the value for any of these parameters by setting the related property."
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.  \n  \n [!code-cs[Classic WebData OleDbCommand.OleDbCommand3#1](~/add/codesnippet/csharp/e97c7061-6e79-4e9b-b76e-_1.cs)]\n [!code-vb[Classic WebData OleDbCommand.OleDbCommand3#1](~/add/codesnippet/visualbasic/e97c7061-6e79-4e9b-b76e-_1.vb)]"
  syntax:
    content: public OleDbCommand (string cmdText, System.Data.OleDb.OleDbConnection connection, System.Data.OleDb.OleDbTransaction transaction);
    parameters:
    - id: cmdText
      type: System.String
      description: "The text of the query."
    - id: connection
      type: System.Data.OleDb.OleDbConnection
      description: "An <xref href=&quot;System.Data.OleDb.OleDbConnection&quot;></xref> that represents the connection to a data source."
    - id: transaction
      type: System.Data.OleDb.OleDbTransaction
      description: "The transaction in which the <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref> executes."
  overload: System.Data.OleDb.OleDbCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.Cancel
  id: Cancel
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: Cancel()
  nameWithType: OleDbCommand.Cancel()
  fullName: System.Data.OleDb.OleDbCommand.Cancel()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Tries to cancel the execution of an <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>."
  remarks: "If there is nothing to cancel, nothing occurs. However, if there is a command in process, and the attempt to cancel fails, no exception is generated."
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand>, executes it, and then cancels the execution. To accomplish this, the method is passed a string that is an SQL SELECT statement and a string to use to connect to the data source.  \n  \n [!code-cs[Classic WebData OleDbCommand.Cancel Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_0_1.cs)]\n [!code-vb[Classic WebData OleDbCommand.Cancel Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_0_1.vb)]"
  syntax:
    content: public override void Cancel ();
    parameters: []
  overload: System.Data.OleDb.OleDbCommand.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.Clone
  id: Clone
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: Clone()
  nameWithType: OleDbCommand.Clone()
  fullName: System.Data.OleDb.OleDbCommand.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Creates a new <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref> object that is a copy of the current instance."
  syntax:
    content: public System.Data.OleDb.OleDbCommand Clone ();
    parameters: []
    return:
      type: System.Data.OleDb.OleDbCommand
      description: "A new <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref> object that is a copy of this instance."
  overload: System.Data.OleDb.OleDbCommand.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.CommandText
  id: CommandText
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: CommandText
  nameWithType: OleDbCommand.CommandText
  fullName: System.Data.OleDb.OleDbCommand.CommandText
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Gets or sets the SQL statement or stored procedure to execute at the data source."
  remarks: "When the <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> property should be set to the name of the stored procedure. The user may be required to use escape character syntax if the stored procedure name contains any special characters. The command executes this stored procedure when you call one of the `Execute` methods.       When <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> is set to `TableDirect`, the <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> property should be set to the name of the table or tables to be accessed. The user may be required to use escape character syntax if any of the named tables contain any special characters. All rows and columns of the named table or tables will be returned when you call one of the `Execute` methods.       You cannot set the <xref:System.Data.OleDb.OleDbCommand.Connection%2A>, <xref:System.Data.OleDb.OleDbCommand.CommandType%2A>, and CommandText properties if the current connection is performing an execute or fetch operation.       The OLE DB.NET Provider does not support named parameters for passing parameters to an SQL Statement or a stored procedure called by an <xref:System.Data.OleDb.OleDbCommand> when <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> is set to `Text`. In this case, the question mark (?) placeholder must be used. For example:       `SELECT * FROM Customers WHERE CustomerID = ?`       Therefore, the order in which <xref:System.Data.OleDb.OleDbParameter> objects are added to the <xref:System.Data.OleDb.OleDbParameterCollection> must directly correspond to the position of the question mark placeholder for the parameter.       For more information, see [Configuring Parameters and Parameter Data Types](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OleDbCommand.CommandText Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_11_1.vb)]\n [!code-cs[Classic WebData OleDbCommand.CommandText Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_11_1.cs)]"
  syntax:
    content: public override string CommandText { get; set; }
    return:
      type: System.String
      description: "The SQL statement or stored procedure to execute. The default value is an empty string."
  overload: System.Data.OleDb.OleDbCommand.CommandText*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.CommandTimeout
  id: CommandTimeout
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: CommandTimeout
  nameWithType: OleDbCommand.CommandTimeout
  fullName: System.Data.OleDb.OleDbCommand.CommandTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Gets or sets the wait time before terminating an attempt to execute a command and generating an error."
  remarks: "A value of 0 indicates no limit, and should be avoided in a CommandTimeout because an attempt to execute a command will wait indefinitely."
  syntax:
    content: public override int CommandTimeout { get; set; }
    return:
      type: System.Int32
      description: "The time (in seconds) to wait for the command to execute. The default is 30 seconds."
  overload: System.Data.OleDb.OleDbCommand.CommandTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.CommandType
  id: CommandType
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: CommandType
  nameWithType: OleDbCommand.CommandType
  fullName: System.Data.OleDb.OleDbCommand.CommandType
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Gets or sets a value that indicates how the <xref:System.Data.OleDb.OleDbCommand.CommandText*> property is interpreted."
  remarks: "When you set the CommandType property to `StoredProcedure`, you should set the <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> property to the name of the stored procedure. The command executes this stored procedure when you call one of the Execute methods.       The <xref:System.Data.OleDb.OleDbCommand.Connection%2A>, CommandType and <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> properties cannot be set if the current connection is performing an execute or fetch operation.       The OLE DB .NET Provider does not support named parameters for passing parameters to an SQL statement or a stored procedure called by an <xref:System.Data.OleDb.OleDbCommand> when CommandType is set to Text. In this case, the question mark (?) placeholder must be used. For example:       `SELECT * FROM Customers WHERE CustomerID = ?`       Therefore, the order in which <xref:System.Data.OleDb.OleDbParameter> objects are added to the <xref:System.Data.OleDb.OleDbParameterCollection> must directly correspond to the position of the question mark placeholder for the parameter. For more information, see [Configuring Parameters and Parameter Data Types](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override System.Data.CommandType CommandType { get; set; }
    return:
      type: System.Data.CommandType
      description: "One of the CommandType values. The default is Text."
  overload: System.Data.OleDb.OleDbCommand.CommandType*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The value was not a valid CommandType."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.Connection
  id: Connection
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: Connection
  nameWithType: OleDbCommand.Connection
  fullName: System.Data.OleDb.OleDbCommand.Connection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Gets or sets the <xref href=&quot;System.Data.OleDb.OleDbConnection&quot;></xref> used by this instance of the <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>."
  remarks: "You cannot set the Connection, <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> and <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> properties if the current connection is performing an execute or fetch operation.       If you set Connection while a transaction is in progress and the <xref:System.Data.OleDb.OleDbCommand.Transaction%2A> property is not null, an <xref:System.InvalidOperationException> is generated. If the <xref:System.Data.OleDb.OleDbCommand.Transaction%2A> property is not null and the transaction has already been committed or rolled back, <xref:System.Data.OleDb.OleDbCommand.Transaction%2A> is set to null."
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OleDbCommand.Connection Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_0_1.vb)]\n [!code-cs[Classic WebData OleDbCommand.Connection Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_0_1.cs)]"
  syntax:
    content: public System.Data.OleDb.OleDbConnection Connection { get; set; }
    return:
      type: System.Data.OleDb.OleDbConnection
      description: "The connection to a data source. The default value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Data.OleDb.OleDbCommand.Connection*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The Connection property was changed while a transaction was in progress."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.CreateDbParameter
  id: CreateDbParameter
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: CreateDbParameter()
  nameWithType: OleDbCommand.CreateDbParameter()
  fullName: System.Data.OleDb.OleDbCommand.CreateDbParameter()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override System.Data.Common.DbParameter CreateDbParameter ();
    parameters: []
    return:
      type: System.Data.Common.DbParameter
      description: "To be added."
  overload: System.Data.OleDb.OleDbCommand.CreateDbParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.CreateParameter
  id: CreateParameter
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: CreateParameter()
  nameWithType: OleDbCommand.CreateParameter()
  fullName: System.Data.OleDb.OleDbCommand.CreateParameter()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Creates a new instance of an <xref href=&quot;System.Data.OleDb.OleDbParameter&quot;></xref> object."
  remarks: "The CreateParameter method is a strongly typed version of <xref:System.Data.IDbCommand.CreateParameter%2A>."
  syntax:
    content: public System.Data.OleDb.OleDbParameter CreateParameter ();
    parameters: []
    return:
      type: System.Data.OleDb.OleDbParameter
      description: "An <xref href=&quot;System.Data.OleDb.OleDbParameter&quot;></xref> object."
  overload: System.Data.OleDb.OleDbCommand.CreateParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.DbConnection
  id: DbConnection
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: DbConnection
  nameWithType: OleDbCommand.DbConnection
  fullName: System.Data.OleDb.OleDbCommand.DbConnection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override System.Data.Common.DbConnection DbConnection { get; set; }
    return:
      type: System.Data.Common.DbConnection
      description: "To be added."
  overload: System.Data.OleDb.OleDbCommand.DbConnection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.DbParameterCollection
  id: DbParameterCollection
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: DbParameterCollection
  nameWithType: OleDbCommand.DbParameterCollection
  fullName: System.Data.OleDb.OleDbCommand.DbParameterCollection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override System.Data.Common.DbParameterCollection DbParameterCollection { get; }
    return:
      type: System.Data.Common.DbParameterCollection
      description: "To be added."
  overload: System.Data.OleDb.OleDbCommand.DbParameterCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.DbTransaction
  id: DbTransaction
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: DbTransaction
  nameWithType: OleDbCommand.DbTransaction
  fullName: System.Data.OleDb.OleDbCommand.DbTransaction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override System.Data.Common.DbTransaction DbTransaction { get; set; }
    return:
      type: System.Data.Common.DbTransaction
      description: "To be added."
  overload: System.Data.OleDb.OleDbCommand.DbTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.DesignTimeVisible
  id: DesignTimeVisible
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: DesignTimeVisible
  nameWithType: OleDbCommand.DesignTimeVisible
  fullName: System.Data.OleDb.OleDbCommand.DesignTimeVisible
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Gets or sets a value that indicates whether the command object should be visible in a customized Windows Forms Designer control."
  syntax:
    content: public override bool DesignTimeVisible { get; set; }
    return:
      type: System.Boolean
      description: "A value that indicates whether the command object should be visible in a control. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Data.OleDb.OleDbCommand.DesignTimeVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: OleDbCommand.Dispose(Boolean)
  fullName: System.Data.OleDb.OleDbCommand.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "To be added."
  overload: System.Data.OleDb.OleDbCommand.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  id: ExecuteDbDataReader(System.Data.CommandBehavior)
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: ExecuteDbDataReader(CommandBehavior)
  nameWithType: OleDbCommand.ExecuteDbDataReader(CommandBehavior)
  fullName: System.Data.OleDb.OleDbCommand.ExecuteDbDataReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override System.Data.Common.DbDataReader ExecuteDbDataReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "To be added."
    return:
      type: System.Data.Common.DbDataReader
      description: "To be added."
  overload: System.Data.OleDb.OleDbCommand.ExecuteDbDataReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.ExecuteNonQuery
  id: ExecuteNonQuery
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: ExecuteNonQuery()
  nameWithType: OleDbCommand.ExecuteNonQuery()
  fullName: System.Data.OleDb.OleDbCommand.ExecuteNonQuery()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Executes an SQL statement against the <xref:System.Data.OleDb.OleDbCommand.Connection*> and returns the number of rows affected."
  remarks: "You can use the ExecuteNonQuery to perform catalog operations, for example, to query the structure of a database or to create database objects such as tables, or to change the data in a database without using a <xref:System.Data.DataSet> by executing UPDATE, INSERT, or DELETE statements.       Although the ExecuteNonQuery returns no rows, any output parameters or return values mapped to parameters are populated with data.       For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command. For all other types of statements, the return value is -1. If a rollback occurs, the return value is also -1."
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and then executes it using ExecuteNonQuery. The example is passed a string that is an SQL statement such as UPDATE, INSERT, or DELETE, and a string to use to connect to the data source.  \n  \n [!code-cs[Classic WebData OleDbCommand.ExecuteNonQuery Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_5_1.cs)]\n [!code-vb[Classic WebData OleDbCommand.ExecuteNonQuery Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_5_1.vb)]"
  syntax:
    content: public override int ExecuteNonQuery ();
    parameters: []
    return:
      type: System.Int32
      description: "The number of rows affected."
  overload: System.Data.OleDb.OleDbCommand.ExecuteNonQuery*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The connection does not exist.       -or-       The connection is not open.       -or-       Cannot execute a command within a transaction context that differs from the context in which the connection was originally enlisted."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.ExecuteReader
  id: ExecuteReader
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: ExecuteReader()
  nameWithType: OleDbCommand.ExecuteReader()
  fullName: System.Data.OleDb.OleDbCommand.ExecuteReader()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Sends the <xref:System.Data.OleDb.OleDbCommand.CommandText*> to the <xref:System.Data.OleDb.OleDbCommand.Connection*> and builds an <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;></xref>."
  remarks: "When the <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> property should be set to the name of the stored procedure. The command executes this stored procedure when you call ExecuteReader.       Before you close the <xref:System.Data.OleDb.OleDbConnection>, first close the <xref:System.Data.OleDb.OleDbDataReader> object. You must also close the <xref:System.Data.OleDb.OleDbDataReader> object if you plan to reuse an <xref:System.Data.OleDb.OleDbCommand> object."
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand>, and then executes it by passing a string that is an SQL SELECT statement, and a string to use to connect to the data source.  \n  \n [!code-cs[Classic WebData OleDbCommand.ExecuteReader1 Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_11_1.cs)]\n [!code-vb[Classic WebData OleDbCommand.ExecuteReader1 Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_11_1.vb)]"
  syntax:
    content: public System.Data.OleDb.OleDbDataReader ExecuteReader ();
    parameters: []
    return:
      type: System.Data.OleDb.OleDbDataReader
      description: "An <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;></xref> object."
  overload: System.Data.OleDb.OleDbCommand.ExecuteReader*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Cannot execute a command within a transaction context that differs from the context in which the connection was originally enlisted."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.ExecuteReader(System.Data.CommandBehavior)
  id: ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: ExecuteReader(CommandBehavior)
  nameWithType: OleDbCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.OleDb.OleDbCommand.ExecuteReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Sends the <xref:System.Data.OleDb.OleDbCommand.CommandText*> to the <xref:System.Data.OleDb.OleDbCommand.Connection*>, and builds an <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;></xref> using one of the <xref href=&quot;System.Data.CommandBehavior&quot;></xref> values."
  remarks: "When you specify <xref:System.Data.CommandBehavior> with the <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> method of the <xref:System.Data.OleDb.OleDbCommand> object, the .NET Framework Data Provider for OLE DB performs binding using the OLE DB **IRow** interface if it is available. Otherwise, it uses the **IRowset** interface. If your SQL statement is expected to return only a single row, specifying <xref:System.Data.CommandBehavior> can also improve application performance.       When the <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OleDb.OleDbCommand.CommandText%2A> property should be set to the name of the stored procedure. The command executes this stored procedure when you call <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>.       The <xref:System.Data.OleDb.OleDbDataReader> supports a special mode that enables large binary values to be read efficiently. For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>.       Before you close the <xref:System.Data.OleDb.OleDbConnection>, first close the <xref:System.Data.OleDb.OleDbDataReader> object. You must also close the <xref:System.Data.OleDb.OleDbDataReader> object if you plan to reuse an <xref:System.Data.OleDb.OleDbCommand> object. If the <xref:System.Data.OleDb.OleDbDataReader> is created with <xref:System.Data.CommandBehavior> set to `CloseConnection`, closing the <xref:System.Data.OleDb.OleDbDataReader> closes the connection automatically."
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand>, and then executes it by passing a string that is a Transact-SQL SELECT statement, and a string to use to connect to the data source. <xref:System.Data.CommandBehavior> is set to <xref:System.Data.CommandBehavior>.  \n  \n [!code-vb[Classic WebData OleDbCommand.ExecuteReader2#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_2_1.vb)]\n [!code-cs[Classic WebData OleDbCommand.ExecuteReader2#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_2_1.cs)]"
  syntax:
    content: public System.Data.OleDb.OleDbDataReader ExecuteReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "One of the <xref href=&quot;System.Data.CommandBehavior&quot;></xref> values."
    return:
      type: System.Data.OleDb.OleDbDataReader
      description: "An <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;></xref> object."
  overload: System.Data.OleDb.OleDbCommand.ExecuteReader*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Cannot execute a command within a transaction context that differs from the context in which the connection was originally enlisted."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.ExecuteScalar
  id: ExecuteScalar
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: ExecuteScalar()
  nameWithType: OleDbCommand.ExecuteScalar()
  fullName: System.Data.OleDb.OleDbCommand.ExecuteScalar()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Executes the query, and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored."
  remarks: "Use the ExecuteScalar method to retrieve a single value, for example, an aggregate value, from a data source. This requires less code than using the <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> method, and then performing the operations that are required to generate the single value using the data returned by an <xref:System.Data.OleDb.OleDbDataReader>.       A typical ExecuteScalar query can be formatted as in the following C# example:      ```   CommandText = &quot;SELECT COUNT(*) FROM region&quot;;   Int32 count = (int32) ExecuteScalar();   ```"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and then executes it using ExecuteScalar. The example is passed a string that is an SQL statement that returns an aggregate result, and a string to use to connect to the data source.  \n  \n [!code-cs[Classic WebData OleDbCommand.ExecuteScalar#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_8_1.cs)]\n [!code-vb[Classic WebData OleDbCommand.ExecuteScalar#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_8_1.vb)]"
  syntax:
    content: public override object ExecuteScalar ();
    parameters: []
    return:
      type: System.Object
      description: "The first column of the first row in the result set, or a null reference if the result set is empty."
  overload: System.Data.OleDb.OleDbCommand.ExecuteScalar*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Cannot execute a command within a transaction context that differs from the context in which the connection was originally enlisted."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.Parameters
  id: Parameters
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: Parameters
  nameWithType: OleDbCommand.Parameters
  fullName: System.Data.OleDb.OleDbCommand.Parameters
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Gets the <xref href=&quot;System.Data.OleDb.OleDbParameterCollection&quot;></xref>."
  remarks: "The OLE DB .NET Provider does not support named parameters for passing parameters to an SQL statement or a stored procedure called by an <xref:System.Data.OleDb.OleDbCommand> when <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> is set to `Text`. In this case, the question mark (?) placeholder must be used. For example:       `SELECT * FROM Customers WHERE CustomerID = ?`       Therefore, the order in which <xref:System.Data.OleDb.OleDbParameter> objects are added to the <xref:System.Data.OleDb.OleDbParameterCollection> must directly correspond to the position of the question mark placeholder for the parameter in the command text.      > [!NOTE] >  If the parameters in the collection do not match the requirements of the query to be executed, an error may result.       For more information, see [Configuring Parameters and Parameter Data Types](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and displays its parameters. To accomplish this, the method is passed an <xref:System.Data.OleDb.OleDbConnection>, a query string that is an SQL SELECT statement, and an array of <xref:System.Data.OleDb.OleDbParameter> objects.  \n  \n [!code-vb[Classic WebData OleDbCommand.Parameters Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_18_1.vb)]\n [!code-cs[Classic WebData OleDbCommand.Parameters Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_18_1.cs)]"
  syntax:
    content: public System.Data.OleDb.OleDbParameterCollection Parameters { get; }
    return:
      type: System.Data.OleDb.OleDbParameterCollection
      description: "The parameters of the SQL statement or stored procedure. The default is an empty collection."
  overload: System.Data.OleDb.OleDbCommand.Parameters*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.Prepare
  id: Prepare
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: Prepare()
  nameWithType: OleDbCommand.Prepare()
  fullName: System.Data.OleDb.OleDbCommand.Prepare()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Creates a prepared (or compiled) version of the command on the data source."
  remarks: "If the <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> property is set to `TableDirect`, Prepare does nothing. If <xref:System.Data.OleDb.OleDbCommand.CommandType%2A> is set to `StoredProcedure`, the call to Prepare should succeed, although it may cause a no-op.       Before you call Prepare, specify the data type of each parameter in the statement to be prepared. For each parameter that has a variable length data type, you must set the **Size** property to the maximum size needed. Prepare returns an error if these conditions are not met.       If you call an `Execute` method after you call Prepare, any parameter value that is larger than the value specified by the **Size** property is automatically truncated to the original specified size of the parameter, and no truncation errors are returned.       Output parameters (whether prepared or not) must have a user-specified data type. If you specify a variable length data type, you must also specify the maximum **Size**."
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and opens the connection. The example then prepares a stored procedure on the data source by passing a string that is an SQL SELECT statement and a string to use to connect to the data source.  \n  \n [!code-vb[Classic WebData OleDbCommand.Prepare Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_26_1.vb)]\n [!code-cs[Classic WebData OleDbCommand.Prepare Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_26_1.cs)]"
  syntax:
    content: public override void Prepare ();
    parameters: []
  overload: System.Data.OleDb.OleDbCommand.Prepare*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.Data.OleDb.OleDbCommand.Connection*> is not set.       -or-       The <xref:System.Data.OleDb.OleDbCommand.Connection*> is not open."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.ResetCommandTimeout
  id: ResetCommandTimeout
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: ResetCommandTimeout()
  nameWithType: OleDbCommand.ResetCommandTimeout()
  fullName: System.Data.OleDb.OleDbCommand.ResetCommandTimeout()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Resets the <xref:System.Data.OleDb.OleDbCommand.CommandTimeout*> property to the default value."
  remarks: "The default value of the <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> is 30 seconds."
  syntax:
    content: public void ResetCommandTimeout ();
    parameters: []
  overload: System.Data.OleDb.OleDbCommand.ResetCommandTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader
  id: System#Data#IDbCommand#ExecuteReader
  isEii: true
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: System.Data.IDbCommand.ExecuteReader()
  nameWithType: OleDbCommand.System.Data.IDbCommand.ExecuteReader()
  fullName: System.Data.OleDb.OleDbCommand.System.Data.IDbCommand.ExecuteReader()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "For a description of this member, see &lt;xref:System.Data.IDbCommand.ExecuteReader%2A?displayProperty=fullName&gt;."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.OleDb.OleDbCommand> instance is cast to an <xref:System.Data.IDbCommand> interface."
  syntax:
    content: System.Data.IDataReader IDbCommand.ExecuteReader ();
    parameters: []
    return:
      type: System.Data.IDataReader
      description: "An <xref href=&quot;System.Data.IDataReader&quot;></xref> object."
  overload: System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)
  id: System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)
  isEii: true
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: System.Data.IDbCommand.ExecuteReader(CommandBehavior)
  nameWithType: OleDbCommand.System.Data.IDbCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.OleDb.OleDbCommand.System.Data.IDbCommand.ExecuteReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Executes the <xref:System.Data.IDbCommand.CommandText*> against the <xref:System.Data.IDbCommand.Connection*>, and builds an <xref href=&quot;System.Data.IDataReader&quot;></xref> using one of the <xref href=&quot;System.Data.CommandBehavior&quot;></xref> values."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.OleDb.OleDbCommand> instance is cast to an <xref:System.Data.IDbCommand> interface.       For a description of this member, see <xref:System.Data.IDbCommand.ExecuteReader%2A>."
  syntax:
    content: System.Data.IDataReader IDbCommand.ExecuteReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "One of the <xref href=&quot;System.Data.CommandBehavior&quot;></xref> values."
    return:
      type: System.Data.IDataReader
      description: "An <xref href=&quot;System.Data.IDataReader&quot;></xref> built using one of the <xref href=&quot;System.Data.CommandBehavior&quot;></xref> values."
  overload: System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: OleDbCommand.System.ICloneable.Clone()
  fullName: System.Data.OleDb.OleDbCommand.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "For a description of this member, see &lt;xref:System.ICloneable.Clone%2A?displayProperty=fullName&gt;."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.OleDb.OleDbCommand> instance is cast to an <xref:System.ICloneable> interface."
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "A new <xref:System.Object> that is a copy of this instance."
  overload: System.Data.OleDb.OleDbCommand.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.Transaction
  id: Transaction
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: Transaction
  nameWithType: OleDbCommand.Transaction
  fullName: System.Data.OleDb.OleDbCommand.Transaction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Gets or sets the <xref href=&quot;System.Data.OleDb.OleDbTransaction&quot;></xref> within which the <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref> executes."
  remarks: "You cannot set the Transaction property if it is already set to a specific value, and the command is in the process of executing. If you set the transaction property to an <xref:System.Data.OleDb.OleDbTransaction> object that is not connected to the same <xref:System.Data.OleDb.OleDbConnection> as the <xref:System.Data.OleDb.OleDbCommand> object, an exception is thrown the next time that you try to execute a statement."
  syntax:
    content: public System.Data.OleDb.OleDbTransaction Transaction { get; set; }
    return:
      type: System.Data.OleDb.OleDbTransaction
      description: "The <xref href=&quot;System.Data.OleDb.OleDbTransaction&quot;></xref>. The default value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Data.OleDb.OleDbCommand.Transaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.UpdatedRowSource
  id: UpdatedRowSource
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: UpdatedRowSource
  nameWithType: OleDbCommand.UpdatedRowSource
  fullName: System.Data.OleDb.OleDbCommand.UpdatedRowSource
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Gets or sets how command results are applied to the <xref href=&quot;System.Data.DataRow&quot;></xref> when used by the <xref uid=&quot;langword_csharp_Update&quot; name=&quot;Update&quot; href=&quot;&quot;></xref> method of the <xref href=&quot;System.Data.OleDb.OleDbDataAdapter&quot;></xref>."
  remarks: "The default UpdatedRowSource value is Both unless the command is automatically generated (as with the <xref:System.Data.OleDb.OleDbCommandBuilder>), in which case the default is None.       For more information about how to use the UpdatedRowSource property, see [DataAdapter Parameters](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override System.Data.UpdateRowSource UpdatedRowSource { get; set; }
    return:
      type: System.Data.UpdateRowSource
      description: "One of the <xref href=&quot;System.Data.UpdateRowSource&quot;></xref> values."
  overload: System.Data.OleDb.OleDbCommand.UpdatedRowSource*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The value entered was not one of the <xref href=&quot;System.Data.UpdateRowSource&quot;></xref> values."
  platform:
  - net462
references:
- uid: System.Data.Common.DbCommand
  isExternal: false
  name: System.Data.Common.DbCommand
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.OleDb.OleDbCommand.#ctor
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: OleDbCommand()
  nameWithType: OleDbCommand.OleDbCommand()
  fullName: System.Data.OleDb.OleDbCommand.OleDbCommand()
- uid: System.Data.OleDb.OleDbCommand.#ctor(System.String)
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: OleDbCommand(String)
  nameWithType: OleDbCommand.OleDbCommand(String)
  fullName: System.Data.OleDb.OleDbCommand.OleDbCommand(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.OleDb.OleDbCommand.#ctor(System.String,System.Data.OleDb.OleDbConnection)
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: OleDbCommand(String,OleDbConnection)
  nameWithType: OleDbCommand.OleDbCommand(String,OleDbConnection)
  fullName: System.Data.OleDb.OleDbCommand.OleDbCommand(String,OleDbConnection)
- uid: System.Data.OleDb.OleDbConnection
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbConnection
  nameWithType: OleDbConnection
  fullName: System.Data.OleDb.OleDbConnection
- uid: System.Data.OleDb.OleDbCommand.#ctor(System.String,System.Data.OleDb.OleDbConnection,System.Data.OleDb.OleDbTransaction)
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: OleDbCommand(String,OleDbConnection,OleDbTransaction)
  nameWithType: OleDbCommand.OleDbCommand(String,OleDbConnection,OleDbTransaction)
  fullName: System.Data.OleDb.OleDbCommand.OleDbCommand(String,OleDbConnection,OleDbTransaction)
- uid: System.Data.OleDb.OleDbTransaction
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbTransaction
  nameWithType: OleDbTransaction
  fullName: System.Data.OleDb.OleDbTransaction
- uid: System.Data.OleDb.OleDbCommand.Cancel
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Cancel()
  nameWithType: OleDbCommand.Cancel()
  fullName: System.Data.OleDb.OleDbCommand.Cancel()
- uid: System.Data.OleDb.OleDbCommand.Clone
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Clone()
  nameWithType: OleDbCommand.Clone()
  fullName: System.Data.OleDb.OleDbCommand.Clone()
- uid: System.Data.OleDb.OleDbCommand
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbCommand
  nameWithType: OleDbCommand
  fullName: System.Data.OleDb.OleDbCommand
- uid: System.Data.OleDb.OleDbCommand.CommandText
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: CommandText
  nameWithType: OleDbCommand.CommandText
  fullName: System.Data.OleDb.OleDbCommand.CommandText
- uid: System.Data.OleDb.OleDbCommand.CommandTimeout
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: CommandTimeout
  nameWithType: OleDbCommand.CommandTimeout
  fullName: System.Data.OleDb.OleDbCommand.CommandTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.OleDb.OleDbCommand.CommandType
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: CommandType
  nameWithType: OleDbCommand.CommandType
  fullName: System.Data.OleDb.OleDbCommand.CommandType
- uid: System.Data.CommandType
  parent: System.Data
  isExternal: false
  name: CommandType
  nameWithType: CommandType
  fullName: System.Data.CommandType
- uid: System.Data.OleDb.OleDbCommand.Connection
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Connection
  nameWithType: OleDbCommand.Connection
  fullName: System.Data.OleDb.OleDbCommand.Connection
- uid: System.Data.OleDb.OleDbCommand.CreateDbParameter
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: CreateDbParameter()
  nameWithType: OleDbCommand.CreateDbParameter()
  fullName: System.Data.OleDb.OleDbCommand.CreateDbParameter()
- uid: System.Data.Common.DbParameter
  parent: System.Data.Common
  isExternal: false
  name: DbParameter
  nameWithType: DbParameter
  fullName: System.Data.Common.DbParameter
- uid: System.Data.OleDb.OleDbCommand.CreateParameter
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: CreateParameter()
  nameWithType: OleDbCommand.CreateParameter()
  fullName: System.Data.OleDb.OleDbCommand.CreateParameter()
- uid: System.Data.OleDb.OleDbParameter
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbParameter
  nameWithType: OleDbParameter
  fullName: System.Data.OleDb.OleDbParameter
- uid: System.Data.OleDb.OleDbCommand.DbConnection
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: DbConnection
  nameWithType: OleDbCommand.DbConnection
  fullName: System.Data.OleDb.OleDbCommand.DbConnection
- uid: System.Data.Common.DbConnection
  parent: System.Data.Common
  isExternal: false
  name: DbConnection
  nameWithType: DbConnection
  fullName: System.Data.Common.DbConnection
- uid: System.Data.OleDb.OleDbCommand.DbParameterCollection
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: DbParameterCollection
  nameWithType: OleDbCommand.DbParameterCollection
  fullName: System.Data.OleDb.OleDbCommand.DbParameterCollection
- uid: System.Data.Common.DbParameterCollection
  parent: System.Data.Common
  isExternal: false
  name: DbParameterCollection
  nameWithType: DbParameterCollection
  fullName: System.Data.Common.DbParameterCollection
- uid: System.Data.OleDb.OleDbCommand.DbTransaction
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: DbTransaction
  nameWithType: OleDbCommand.DbTransaction
  fullName: System.Data.OleDb.OleDbCommand.DbTransaction
- uid: System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: false
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: System.Data.OleDb.OleDbCommand.DesignTimeVisible
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: DesignTimeVisible
  nameWithType: OleDbCommand.DesignTimeVisible
  fullName: System.Data.OleDb.OleDbCommand.DesignTimeVisible
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.OleDb.OleDbCommand.Dispose(System.Boolean)
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: OleDbCommand.Dispose(Boolean)
  fullName: System.Data.OleDb.OleDbCommand.Dispose(Boolean)
- uid: System.Data.OleDb.OleDbCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ExecuteDbDataReader(CommandBehavior)
  nameWithType: OleDbCommand.ExecuteDbDataReader(CommandBehavior)
  fullName: System.Data.OleDb.OleDbCommand.ExecuteDbDataReader(CommandBehavior)
- uid: System.Data.Common.DbDataReader
  parent: System.Data.Common
  isExternal: false
  name: DbDataReader
  nameWithType: DbDataReader
  fullName: System.Data.Common.DbDataReader
- uid: System.Data.CommandBehavior
  parent: System.Data
  isExternal: false
  name: CommandBehavior
  nameWithType: CommandBehavior
  fullName: System.Data.CommandBehavior
- uid: System.Data.OleDb.OleDbCommand.ExecuteNonQuery
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ExecuteNonQuery()
  nameWithType: OleDbCommand.ExecuteNonQuery()
  fullName: System.Data.OleDb.OleDbCommand.ExecuteNonQuery()
- uid: System.Data.OleDb.OleDbCommand.ExecuteReader
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ExecuteReader()
  nameWithType: OleDbCommand.ExecuteReader()
  fullName: System.Data.OleDb.OleDbCommand.ExecuteReader()
- uid: System.Data.OleDb.OleDbDataReader
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbDataReader
  nameWithType: OleDbDataReader
  fullName: System.Data.OleDb.OleDbDataReader
- uid: System.Data.OleDb.OleDbCommand.ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ExecuteReader(CommandBehavior)
  nameWithType: OleDbCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.OleDb.OleDbCommand.ExecuteReader(CommandBehavior)
- uid: System.Data.OleDb.OleDbCommand.ExecuteScalar
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ExecuteScalar()
  nameWithType: OleDbCommand.ExecuteScalar()
  fullName: System.Data.OleDb.OleDbCommand.ExecuteScalar()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.OleDb.OleDbCommand.Parameters
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Parameters
  nameWithType: OleDbCommand.Parameters
  fullName: System.Data.OleDb.OleDbCommand.Parameters
- uid: System.Data.OleDb.OleDbParameterCollection
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbParameterCollection
  nameWithType: OleDbParameterCollection
  fullName: System.Data.OleDb.OleDbParameterCollection
- uid: System.Data.OleDb.OleDbCommand.Prepare
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Prepare()
  nameWithType: OleDbCommand.Prepare()
  fullName: System.Data.OleDb.OleDbCommand.Prepare()
- uid: System.Data.OleDb.OleDbCommand.ResetCommandTimeout
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ResetCommandTimeout()
  nameWithType: OleDbCommand.ResetCommandTimeout()
  fullName: System.Data.OleDb.OleDbCommand.ResetCommandTimeout()
- uid: System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: System.Data.IDbCommand.ExecuteReader()
  nameWithType: OleDbCommand.System.Data.IDbCommand.ExecuteReader()
  fullName: System.Data.OleDb.OleDbCommand.System.Data.IDbCommand.ExecuteReader()
- uid: System.Data.IDataReader
  parent: System.Data
  isExternal: false
  name: IDataReader
  nameWithType: IDataReader
  fullName: System.Data.IDataReader
- uid: System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: System.Data.IDbCommand.ExecuteReader(CommandBehavior)
  nameWithType: OleDbCommand.System.Data.IDbCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.OleDb.OleDbCommand.System.Data.IDbCommand.ExecuteReader(CommandBehavior)
- uid: System.Data.OleDb.OleDbCommand.System#ICloneable#Clone
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: OleDbCommand.System.ICloneable.Clone()
  fullName: System.Data.OleDb.OleDbCommand.System.ICloneable.Clone()
- uid: System.Data.OleDb.OleDbCommand.Transaction
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Transaction
  nameWithType: OleDbCommand.Transaction
  fullName: System.Data.OleDb.OleDbCommand.Transaction
- uid: System.Data.OleDb.OleDbCommand.UpdatedRowSource
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: UpdatedRowSource
  nameWithType: OleDbCommand.UpdatedRowSource
  fullName: System.Data.OleDb.OleDbCommand.UpdatedRowSource
- uid: System.Data.UpdateRowSource
  parent: System.Data
  isExternal: false
  name: UpdateRowSource
  nameWithType: UpdateRowSource
  fullName: System.Data.UpdateRowSource
- uid: System.Data.OleDb.OleDbCommand.#ctor*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: OleDbCommand
  nameWithType: OleDbCommand.OleDbCommand
- uid: System.Data.OleDb.OleDbCommand.Cancel*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Cancel
  nameWithType: OleDbCommand.Cancel
- uid: System.Data.OleDb.OleDbCommand.Clone*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Clone
  nameWithType: OleDbCommand.Clone
- uid: System.Data.OleDb.OleDbCommand.CommandText*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: CommandText
  nameWithType: OleDbCommand.CommandText
- uid: System.Data.OleDb.OleDbCommand.CommandTimeout*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: CommandTimeout
  nameWithType: OleDbCommand.CommandTimeout
- uid: System.Data.OleDb.OleDbCommand.CommandType*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: CommandType
  nameWithType: OleDbCommand.CommandType
- uid: System.Data.OleDb.OleDbCommand.Connection*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Connection
  nameWithType: OleDbCommand.Connection
- uid: System.Data.OleDb.OleDbCommand.CreateDbParameter*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: CreateDbParameter
  nameWithType: OleDbCommand.CreateDbParameter
- uid: System.Data.OleDb.OleDbCommand.CreateParameter*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: CreateParameter
  nameWithType: OleDbCommand.CreateParameter
- uid: System.Data.OleDb.OleDbCommand.DbConnection*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: DbConnection
  nameWithType: OleDbCommand.DbConnection
- uid: System.Data.OleDb.OleDbCommand.DbParameterCollection*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: DbParameterCollection
  nameWithType: OleDbCommand.DbParameterCollection
- uid: System.Data.OleDb.OleDbCommand.DbTransaction*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: DbTransaction
  nameWithType: OleDbCommand.DbTransaction
- uid: System.Data.OleDb.OleDbCommand.DesignTimeVisible*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: DesignTimeVisible
  nameWithType: OleDbCommand.DesignTimeVisible
- uid: System.Data.OleDb.OleDbCommand.Dispose*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Dispose
  nameWithType: OleDbCommand.Dispose
- uid: System.Data.OleDb.OleDbCommand.ExecuteDbDataReader*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ExecuteDbDataReader
  nameWithType: OleDbCommand.ExecuteDbDataReader
- uid: System.Data.OleDb.OleDbCommand.ExecuteNonQuery*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ExecuteNonQuery
  nameWithType: OleDbCommand.ExecuteNonQuery
- uid: System.Data.OleDb.OleDbCommand.ExecuteReader*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ExecuteReader
  nameWithType: OleDbCommand.ExecuteReader
- uid: System.Data.OleDb.OleDbCommand.ExecuteScalar*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ExecuteScalar
  nameWithType: OleDbCommand.ExecuteScalar
- uid: System.Data.OleDb.OleDbCommand.Parameters*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Parameters
  nameWithType: OleDbCommand.Parameters
- uid: System.Data.OleDb.OleDbCommand.Prepare*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Prepare
  nameWithType: OleDbCommand.Prepare
- uid: System.Data.OleDb.OleDbCommand.ResetCommandTimeout*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ResetCommandTimeout
  nameWithType: OleDbCommand.ResetCommandTimeout
- uid: System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: System.Data.IDbCommand.ExecuteReader
  nameWithType: OleDbCommand.System.Data.IDbCommand.ExecuteReader
- uid: System.Data.OleDb.OleDbCommand.System#ICloneable#Clone*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: OleDbCommand.System.ICloneable.Clone
- uid: System.Data.OleDb.OleDbCommand.Transaction*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Transaction
  nameWithType: OleDbCommand.Transaction
- uid: System.Data.OleDb.OleDbCommand.UpdatedRowSource*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: UpdatedRowSource
  nameWithType: OleDbCommand.UpdatedRowSource
