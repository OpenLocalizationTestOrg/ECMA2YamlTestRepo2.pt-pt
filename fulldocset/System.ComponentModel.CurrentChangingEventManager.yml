### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.CurrentChangingEventManager
  id: CurrentChangingEventManager
  children:
  - System.ComponentModel.CurrentChangingEventManager.AddHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.ComponentModel.CurrentChangingEventArgs})
  - System.ComponentModel.CurrentChangingEventManager.AddListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)
  - System.ComponentModel.CurrentChangingEventManager.NewListenerList
  - System.ComponentModel.CurrentChangingEventManager.RemoveHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.ComponentModel.CurrentChangingEventArgs})
  - System.ComponentModel.CurrentChangingEventManager.RemoveListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)
  - System.ComponentModel.CurrentChangingEventManager.StartListening(System.Object)
  - System.ComponentModel.CurrentChangingEventManager.StopListening(System.Object)
  langs:
  - csharp
  name: CurrentChangingEventManager
  nameWithType: CurrentChangingEventManager
  fullName: System.ComponentModel.CurrentChangingEventManager
  type: Class
  summary: "Fornece um <xref href=&quot;System.Windows.WeakEventManager&quot;> </xref> implementação para que possa utilizar o padrão &quot;serviço de escuta de eventos fracos&quot; para ligar os serviços de escuta para o <xref href=&quot;System.ComponentModel.ICollectionView.CurrentChanging&quot;> </xref> eventos."
  remarks: "Para poder estar escuta neste padrão, os objetos do serviço de escuta tem de implementar <xref:System.Windows.IWeakEventListener>.</xref:System.Windows.IWeakEventListener> Não é necessário implementar <xref:System.Windows.IWeakEventListener>na classe que é a origem dos eventos.</xref:System.Windows.IWeakEventListener>"
  syntax:
    content: 'public class CurrentChangingEventManager : System.Windows.WeakEventManager'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.WeakEventManager
  implements: []
  inheritedMembers:
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  - System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)
  - System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)
  - System.Windows.WeakEventManager.GetCurrentManager(System.Type)
  - System.Windows.WeakEventManager.Item(System.Object)
  - System.Windows.WeakEventManager.ProtectedAddHandler(System.Object,System.Delegate)
  - System.Windows.WeakEventManager.ProtectedAddListener(System.Object,System.Windows.IWeakEventListener)
  - System.Windows.WeakEventManager.ProtectedRemoveHandler(System.Object,System.Delegate)
  - System.Windows.WeakEventManager.ProtectedRemoveListener(System.Object,System.Windows.IWeakEventListener)
  - System.Windows.WeakEventManager.Purge(System.Object,System.Object,System.Boolean)
  - System.Windows.WeakEventManager.ReadLock
  - System.Windows.WeakEventManager.Remove(System.Object)
  - System.Windows.WeakEventManager.ScheduleCleanup
  - System.Windows.WeakEventManager.SetCurrentManager(System.Type,System.Windows.WeakEventManager)
  - System.Windows.WeakEventManager.WriteLock
  platform:
  - net462
- uid: System.ComponentModel.CurrentChangingEventManager.AddHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.ComponentModel.CurrentChangingEventArgs})
  id: AddHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.ComponentModel.CurrentChangingEventArgs})
  parent: System.ComponentModel.CurrentChangingEventManager
  langs:
  - csharp
  name: AddHandler(ICollectionView,EventHandler<CurrentChangingEventArgs>)
  nameWithType: CurrentChangingEventManager.AddHandler(ICollectionView,EventHandler<CurrentChangingEventArgs>)
  fullName: System.ComponentModel.CurrentChangingEventManager.AddHandler(ICollectionView,EventHandler<CurrentChangingEventArgs>)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Adiciona o processador de eventos especificado, o que é chamado quando a origem especificada gera o <xref href=&quot;System.ComponentModel.ICollectionView.CurrentChanging&quot;> </xref> eventos."
  remarks: "Utilize este método para especificar o processador de eventos que pretende utilizar para subscrever o <xref:System.ComponentModel.ICollectionView.CurrentChanging>evento.</xref:System.ComponentModel.ICollectionView.CurrentChanging>  Quando utiliza este método, o objeto de serviço de escuta não necessita de implementar o <xref:System.Windows.IWeakEventListener>interface.</xref:System.Windows.IWeakEventListener>"
  syntax:
    content: public static void AddHandler (System.ComponentModel.ICollectionView source, EventHandler<System.ComponentModel.CurrentChangingEventArgs> handler);
    parameters:
    - id: source
      type: System.ComponentModel.ICollectionView
      description: "O objeto de origem que o gera o <xref href=&quot;System.ComponentModel.ICollectionView.CurrentChanging&quot;> </xref> eventos."
    - id: handler
      type: System.EventHandler{System.ComponentModel.CurrentChangingEventArgs}
      description: "O delegado que processa o <xref href=&quot;System.ComponentModel.ICollectionView.CurrentChanging&quot;> </xref> eventos."
  overload: System.ComponentModel.CurrentChangingEventManager.AddHandler*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>handler</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.CurrentChangingEventManager.AddListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)
  id: AddListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)
  parent: System.ComponentModel.CurrentChangingEventManager
  langs:
  - csharp
  name: AddListener(ICollectionView,IWeakEventListener)
  nameWithType: CurrentChangingEventManager.AddListener(ICollectionView,IWeakEventListener)
  fullName: System.ComponentModel.CurrentChangingEventManager.AddListener(ICollectionView,IWeakEventListener)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Adiciona o serviço de escuta especificado para o <xref href=&quot;System.ComponentModel.ICollectionView.CurrentChanging&quot;> </xref> eventos da origem especificada."
  syntax:
    content: public static void AddListener (System.ComponentModel.ICollectionView source, System.Windows.IWeakEventListener listener);
    parameters:
    - id: source
      type: System.ComponentModel.ICollectionView
      description: "O objeto com o evento."
    - id: listener
      type: System.Windows.IWeakEventListener
      description: "O objeto a adicionar como um serviço de escuta."
  overload: System.ComponentModel.CurrentChangingEventManager.AddListener*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.CurrentChangingEventManager.NewListenerList
  id: NewListenerList
  parent: System.ComponentModel.CurrentChangingEventManager
  langs:
  - csharp
  name: NewListenerList()
  nameWithType: CurrentChangingEventManager.NewListenerList()
  fullName: System.ComponentModel.CurrentChangingEventManager.NewListenerList()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Devolve um novo objeto que contém os serviços de escuta para o <xref href=&quot;System.ComponentModel.ICollectionView.CurrentChanging&quot;> </xref> eventos."
  syntax:
    content: protected override System.Windows.WeakEventManager.ListenerList NewListenerList ();
    parameters: []
    return:
      type: System.Windows.WeakEventManager.ListenerList
      description: "Um novo objeto que contém os serviços de escuta para o <xref href=&quot;System.ComponentModel.ICollectionView.CurrentChanging&quot;> </xref> eventos."
  overload: System.ComponentModel.CurrentChangingEventManager.NewListenerList*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.CurrentChangingEventManager.RemoveHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.ComponentModel.CurrentChangingEventArgs})
  id: RemoveHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.ComponentModel.CurrentChangingEventArgs})
  parent: System.ComponentModel.CurrentChangingEventManager
  langs:
  - csharp
  name: RemoveHandler(ICollectionView,EventHandler<CurrentChangingEventArgs>)
  nameWithType: CurrentChangingEventManager.RemoveHandler(ICollectionView,EventHandler<CurrentChangingEventArgs>)
  fullName: System.ComponentModel.CurrentChangingEventManager.RemoveHandler(ICollectionView,EventHandler<CurrentChangingEventArgs>)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Remove o processador de eventos especificado da origem especificada."
  syntax:
    content: public static void RemoveHandler (System.ComponentModel.ICollectionView source, EventHandler<System.ComponentModel.CurrentChangingEventArgs> handler);
    parameters:
    - id: source
      type: System.ComponentModel.ICollectionView
      description: "O objeto de origem que o gera o <xref href=&quot;System.ComponentModel.ICollectionView.CurrentChanging&quot;> </xref> eventos."
    - id: handler
      type: System.EventHandler{System.ComponentModel.CurrentChangingEventArgs}
      description: "O delegado que processa o <xref href=&quot;System.ComponentModel.ICollectionView.CurrentChanging&quot;> </xref> eventos."
  overload: System.ComponentModel.CurrentChangingEventManager.RemoveHandler*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>handler</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.CurrentChangingEventManager.RemoveListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)
  id: RemoveListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)
  parent: System.ComponentModel.CurrentChangingEventManager
  langs:
  - csharp
  name: RemoveListener(ICollectionView,IWeakEventListener)
  nameWithType: CurrentChangingEventManager.RemoveListener(ICollectionView,IWeakEventListener)
  fullName: System.ComponentModel.CurrentChangingEventManager.RemoveListener(ICollectionView,IWeakEventListener)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Remove o serviço de escuta especificado a partir de <xref href=&quot;System.ComponentModel.ICollectionView.CurrentChanging&quot;> </xref> eventos da origem especificada."
  syntax:
    content: public static void RemoveListener (System.ComponentModel.ICollectionView source, System.Windows.IWeakEventListener listener);
    parameters:
    - id: source
      type: System.ComponentModel.ICollectionView
      description: "O objeto com o evento."
    - id: listener
      type: System.Windows.IWeakEventListener
      description: "O serviço de escuta para remover."
  overload: System.ComponentModel.CurrentChangingEventManager.RemoveListener*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.CurrentChangingEventManager.StartListening(System.Object)
  id: StartListening(System.Object)
  parent: System.ComponentModel.CurrentChangingEventManager
  langs:
  - csharp
  name: StartListening(Object)
  nameWithType: CurrentChangingEventManager.StartListening(Object)
  fullName: System.ComponentModel.CurrentChangingEventManager.StartListening(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Começa a escutar o <xref href=&quot;System.ComponentModel.ICollectionView.CurrentChanging&quot;> </xref> eventos na origem especificada."
  syntax:
    content: protected override void StartListening (object source);
    parameters:
    - id: source
      type: System.Object
      description: "O objeto com o evento."
  overload: System.ComponentModel.CurrentChangingEventManager.StartListening*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.CurrentChangingEventManager.StopListening(System.Object)
  id: StopListening(System.Object)
  parent: System.ComponentModel.CurrentChangingEventManager
  langs:
  - csharp
  name: StopListening(Object)
  nameWithType: CurrentChangingEventManager.StopListening(Object)
  fullName: System.ComponentModel.CurrentChangingEventManager.StopListening(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Interrompe a escutar o <xref href=&quot;System.ComponentModel.ICollectionView.CurrentChanging&quot;> </xref> eventos na origem especificada."
  syntax:
    content: protected override void StopListening (object source);
    parameters:
    - id: source
      type: System.Object
      description: "O objeto com o evento."
  overload: System.ComponentModel.CurrentChangingEventManager.StopListening*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.WeakEventManager
  isExternal: false
  name: System.Windows.WeakEventManager
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.CurrentChangingEventManager.AddHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.ComponentModel.CurrentChangingEventArgs})
  parent: System.ComponentModel.CurrentChangingEventManager
  isExternal: false
  name: AddHandler(ICollectionView,EventHandler<CurrentChangingEventArgs>)
  nameWithType: CurrentChangingEventManager.AddHandler(ICollectionView,EventHandler<CurrentChangingEventArgs>)
  fullName: System.ComponentModel.CurrentChangingEventManager.AddHandler(ICollectionView,EventHandler<CurrentChangingEventArgs>)
- uid: System.ComponentModel.ICollectionView
  parent: System.ComponentModel
  isExternal: false
  name: ICollectionView
  nameWithType: ICollectionView
  fullName: System.ComponentModel.ICollectionView
- uid: System.EventHandler{System.ComponentModel.CurrentChangingEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<CurrentChangingEventArgs>
  nameWithType: EventHandler<CurrentChangingEventArgs>
  fullName: System.EventHandler<System.ComponentModel.CurrentChangingEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.ComponentModel.CurrentChangingEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.CurrentChangingEventArgs
    name: CurrentChangingEventArgs
    nameWithType: CurrentChangingEventArgs
    fullName: CurrentChangingEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.CurrentChangingEventManager.AddListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)
  parent: System.ComponentModel.CurrentChangingEventManager
  isExternal: false
  name: AddListener(ICollectionView,IWeakEventListener)
  nameWithType: CurrentChangingEventManager.AddListener(ICollectionView,IWeakEventListener)
  fullName: System.ComponentModel.CurrentChangingEventManager.AddListener(ICollectionView,IWeakEventListener)
- uid: System.Windows.IWeakEventListener
  parent: System.Windows
  isExternal: false
  name: IWeakEventListener
  nameWithType: IWeakEventListener
  fullName: System.Windows.IWeakEventListener
- uid: System.ComponentModel.CurrentChangingEventManager.NewListenerList
  parent: System.ComponentModel.CurrentChangingEventManager
  isExternal: false
  name: NewListenerList()
  nameWithType: CurrentChangingEventManager.NewListenerList()
  fullName: System.ComponentModel.CurrentChangingEventManager.NewListenerList()
- uid: System.Windows.WeakEventManager.ListenerList
  parent: System.Windows
  isExternal: false
  name: WeakEventManager+ListenerList
  nameWithType: WeakEventManager+ListenerList
  fullName: System.Windows.WeakEventManager+ListenerList
- uid: System.ComponentModel.CurrentChangingEventManager.RemoveHandler(System.ComponentModel.ICollectionView,System.EventHandler{System.ComponentModel.CurrentChangingEventArgs})
  parent: System.ComponentModel.CurrentChangingEventManager
  isExternal: false
  name: RemoveHandler(ICollectionView,EventHandler<CurrentChangingEventArgs>)
  nameWithType: CurrentChangingEventManager.RemoveHandler(ICollectionView,EventHandler<CurrentChangingEventArgs>)
  fullName: System.ComponentModel.CurrentChangingEventManager.RemoveHandler(ICollectionView,EventHandler<CurrentChangingEventArgs>)
- uid: System.ComponentModel.CurrentChangingEventManager.RemoveListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)
  parent: System.ComponentModel.CurrentChangingEventManager
  isExternal: false
  name: RemoveListener(ICollectionView,IWeakEventListener)
  nameWithType: CurrentChangingEventManager.RemoveListener(ICollectionView,IWeakEventListener)
  fullName: System.ComponentModel.CurrentChangingEventManager.RemoveListener(ICollectionView,IWeakEventListener)
- uid: System.ComponentModel.CurrentChangingEventManager.StartListening(System.Object)
  parent: System.ComponentModel.CurrentChangingEventManager
  isExternal: false
  name: StartListening(Object)
  nameWithType: CurrentChangingEventManager.StartListening(Object)
  fullName: System.ComponentModel.CurrentChangingEventManager.StartListening(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.CurrentChangingEventManager.StopListening(System.Object)
  parent: System.ComponentModel.CurrentChangingEventManager
  isExternal: false
  name: StopListening(Object)
  nameWithType: CurrentChangingEventManager.StopListening(Object)
  fullName: System.ComponentModel.CurrentChangingEventManager.StopListening(Object)
- uid: System.ComponentModel.CurrentChangingEventManager.AddHandler*
  parent: System.ComponentModel.CurrentChangingEventManager
  isExternal: false
  name: AddHandler
  nameWithType: CurrentChangingEventManager.AddHandler
- uid: System.ComponentModel.CurrentChangingEventManager.AddListener*
  parent: System.ComponentModel.CurrentChangingEventManager
  isExternal: false
  name: AddListener
  nameWithType: CurrentChangingEventManager.AddListener
- uid: System.ComponentModel.CurrentChangingEventManager.NewListenerList*
  parent: System.ComponentModel.CurrentChangingEventManager
  isExternal: false
  name: NewListenerList
  nameWithType: CurrentChangingEventManager.NewListenerList
- uid: System.ComponentModel.CurrentChangingEventManager.RemoveHandler*
  parent: System.ComponentModel.CurrentChangingEventManager
  isExternal: false
  name: RemoveHandler
  nameWithType: CurrentChangingEventManager.RemoveHandler
- uid: System.ComponentModel.CurrentChangingEventManager.RemoveListener*
  parent: System.ComponentModel.CurrentChangingEventManager
  isExternal: false
  name: RemoveListener
  nameWithType: CurrentChangingEventManager.RemoveListener
- uid: System.ComponentModel.CurrentChangingEventManager.StartListening*
  parent: System.ComponentModel.CurrentChangingEventManager
  isExternal: false
  name: StartListening
  nameWithType: CurrentChangingEventManager.StartListening
- uid: System.ComponentModel.CurrentChangingEventManager.StopListening*
  parent: System.ComponentModel.CurrentChangingEventManager
  isExternal: false
  name: StopListening
  nameWithType: CurrentChangingEventManager.StopListening
