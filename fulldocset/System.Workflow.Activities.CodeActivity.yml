### YamlMime:ManagedReference
items:
- uid: System.Workflow.Activities.CodeActivity
  id: CodeActivity
  children:
  - System.Workflow.Activities.CodeActivity.#ctor
  - System.Workflow.Activities.CodeActivity.#ctor(System.String)
  - System.Workflow.Activities.CodeActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.CodeActivity.ExecuteCode
  - System.Workflow.Activities.CodeActivity.ExecuteCodeEvent
  langs:
  - csharp
  name: CodeActivity
  nameWithType: CodeActivity
  fullName: System.Workflow.Activities.CodeActivity
  type: Class
  summary: "Runs the code-beside method associated with an activity. This class cannot be inherited."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       Code-beside methods invoked by CodeActivity are executed in a synchronous manner; CodeActivity does not yield its thread until the thread is finished. Therefore, the execution of the code-beside method is expected to be performed and should not block with a dependency on some external resource. For example, the code-beside method should typically not invoke a Web service.       The typical use of the CodeActivity is to examine workflow instance state, and change local variables and messages."
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("ExecuteCode")]

      [System.ComponentModel.Designer(typeof(System.Workflow.Activities.CodeDesigner), typeof(System.ComponentModel.Design.IDesigner))]

      [System.ComponentModel.ToolboxItem(typeof(System.Workflow.ComponentModel.Design.ActivityToolboxItem))]

      [System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.CodeActivity), "Resources.code.png")]

      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      [System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.CodeActivity/CodeActivityValidator))]

      public sealed class CodeActivity : System.Workflow.ComponentModel.Activity
  inheritance:
  - System.Object
  - System.Workflow.ComponentModel.DependencyObject
  - System.Workflow.ComponentModel.Activity
  implements: []
  inheritedMembers:
  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty
  - System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.ComponentModel.Activity.Canceling
  - System.Workflow.ComponentModel.Activity.CancelingEvent
  - System.Workflow.ComponentModel.Activity.Clone
  - System.Workflow.ComponentModel.Activity.Closed
  - System.Workflow.ComponentModel.Activity.ClosedEvent
  - System.Workflow.ComponentModel.Activity.Compensating
  - System.Workflow.ComponentModel.Activity.CompensatingEvent
  - System.Workflow.ComponentModel.Activity.Description
  - System.Workflow.ComponentModel.Activity.Enabled
  - System.Workflow.ComponentModel.Activity.Executing
  - System.Workflow.ComponentModel.Activity.ExecutingEvent
  - System.Workflow.ComponentModel.Activity.ExecutionResult
  - System.Workflow.ComponentModel.Activity.ExecutionStatus
  - System.Workflow.ComponentModel.Activity.Faulting
  - System.Workflow.ComponentModel.Activity.FaultingEvent
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)
  - System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  - System.Workflow.ComponentModel.Activity.Initialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)
  - System.Workflow.ComponentModel.Activity.IsDynamicActivity
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.Name
  - System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.Parent
  - System.Workflow.ComponentModel.Activity.QualifiedName
  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)
  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)
  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.StatusChanged
  - System.Workflow.ComponentModel.Activity.StatusChangedEvent
  - System.Workflow.ComponentModel.Activity.ToString
  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)
  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)
  - System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId
  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.DesignMode
  - System.Workflow.ComponentModel.DependencyObject.Dispose
  - System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)
  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.InitializeProperties
  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.Site
  - System.Workflow.ComponentModel.DependencyObject.UserData
  platform:
  - net462
- uid: System.Workflow.Activities.CodeActivity.#ctor
  id: '#ctor'
  parent: System.Workflow.Activities.CodeActivity
  langs:
  - csharp
  name: CodeActivity()
  nameWithType: CodeActivity.CodeActivity()
  fullName: System.Workflow.Activities.CodeActivity.CodeActivity()
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Initializes a new instance of the <xref href=&quot;System.Workflow.Activities.CodeActivity&quot;></xref> class."
  remarks: ''
  example:
  - "The following code example demonstrates how to create a new instance of the <xref:System.Workflow.Activities.CodeActivity> class.  The example code also creates new instances of the <xref:System.Workflow.Activities.CodeCondition> and <xref:System.Workflow.Activities.ConditionedActivityGroup> classes. This code example is part of the ConditionedActivityGroup SDK sample from the SimpleCAGWorkflow.designer.cs file. For more information, see [Using ConditionedActivityGroup](http://msdn.microsoft.com/en-us/5a0b7e9e-def5-46b2-acbb-0005e1aff984).  \n  \n```c#  \nprivate ConditionedActivityGroup BookingCAG;  \nprivate CodeActivity Car;  \nprivate CodeActivity Airline;  \n  \nthis.CanModifyActivities = true;  \nCodeCondition codecondition1 = new CodeCondition();  \nCodeCondition codecondition2 = new CodeCondition();  \nthis.BookingCAG = new ConditionedActivityGroup();  \nthis.Car = new CodeActivity();  \nthis.Airline = new CodeActivity();  \n```"
  syntax:
    content: public CodeActivity ();
    parameters: []
  overload: System.Workflow.Activities.CodeActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.CodeActivity.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Workflow.Activities.CodeActivity
  langs:
  - csharp
  name: CodeActivity(String)
  nameWithType: CodeActivity.CodeActivity(String)
  fullName: System.Workflow.Activities.CodeActivity.CodeActivity(String)
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Initializes a new instance of the <xref href=&quot;System.Workflow.Activities.CodeActivity&quot;></xref> class using the name of the activity."
  syntax:
    content: public CodeActivity (string name);
    parameters:
    - id: name
      type: System.String
      description: "The user-defined name of the activity."
  overload: System.Workflow.Activities.CodeActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.CodeActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.CodeActivity
  langs:
  - csharp
  name: Execute(ActivityExecutionContext)
  nameWithType: CodeActivity.Execute(ActivityExecutionContext)
  fullName: System.Workflow.Activities.CodeActivity.Execute(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  syntax:
    content: protected override sealed System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "To be added."
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "To be added."
  overload: System.Workflow.Activities.CodeActivity.Execute*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.CodeActivity.ExecuteCode
  id: ExecuteCode
  parent: System.Workflow.Activities.CodeActivity
  langs:
  - csharp
  name: ExecuteCode
  nameWithType: CodeActivity.ExecuteCode
  fullName: System.Workflow.Activities.CodeActivity.ExecuteCode
  type: Event
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Occurs when the <xref href=&quot;System.Workflow.Activities.CodeActivity&quot;></xref> starts."
  remarks: ''
  example:
  - "The following code demonstrates how to use the ExecuteCode event. This code example is part of the Compensation SDK sample from the PurchaseOrder.cs file. For more information, see [Using Compensation](http://msdn.microsoft.com/en-us/c847a694-9978-46af-aa80-5bd1833f813b).  \n  \n [!code-cs[WF_Samples#155](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#155)]\n [!code-vb[WF_Samples#155](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#155)]"
  syntax:
    content: public event EventHandler ExecuteCode;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.CodeActivity.ExecuteCodeEvent
  id: ExecuteCodeEvent
  parent: System.Workflow.Activities.CodeActivity
  langs:
  - csharp
  name: ExecuteCodeEvent
  nameWithType: CodeActivity.ExecuteCodeEvent
  fullName: System.Workflow.Activities.CodeActivity.ExecuteCodeEvent
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Represents the <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref> that targets the <xref href=&quot;System.Workflow.Activities.CodeActivity.ExecuteCode&quot;></xref> event."
  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'
  example:
  - "The following code example demonstrates how to create a new instance of the <xref:System.Workflow.Activities.CodeActivity> and specify the handler for the <xref:System.Workflow.Activities.CodeActivity.ExecuteCode> event.  \n  \n [!code-cs[WF_Samples#311](~/add/codesnippet/csharp/wf_snippets/snippets38.cs#311)]"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty ExecuteCodeEvent;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: System.Workflow.ComponentModel.Activity
- uid: System.Workflow.Activities.CodeActivity.#ctor
  parent: System.Workflow.Activities.CodeActivity
  isExternal: false
  name: CodeActivity()
  nameWithType: CodeActivity.CodeActivity()
  fullName: System.Workflow.Activities.CodeActivity.CodeActivity()
- uid: System.Workflow.Activities.CodeActivity.#ctor(System.String)
  parent: System.Workflow.Activities.CodeActivity
  isExternal: false
  name: CodeActivity(String)
  nameWithType: CodeActivity.CodeActivity(String)
  fullName: System.Workflow.Activities.CodeActivity.CodeActivity(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Activities.CodeActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.CodeActivity
  isExternal: false
  name: Execute(ActivityExecutionContext)
  nameWithType: CodeActivity.Execute(ActivityExecutionContext)
  fullName: System.Workflow.Activities.CodeActivity.Execute(ActivityExecutionContext)
- uid: System.Workflow.ComponentModel.ActivityExecutionStatus
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionStatus
  nameWithType: ActivityExecutionStatus
  fullName: System.Workflow.ComponentModel.ActivityExecutionStatus
- uid: System.Workflow.ComponentModel.ActivityExecutionContext
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionContext
  nameWithType: ActivityExecutionContext
  fullName: System.Workflow.ComponentModel.ActivityExecutionContext
- uid: System.Workflow.Activities.CodeActivity.ExecuteCode
  parent: System.Workflow.Activities.CodeActivity
  isExternal: false
  name: ExecuteCode
  nameWithType: CodeActivity.ExecuteCode
  fullName: System.Workflow.Activities.CodeActivity.ExecuteCode
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Workflow.Activities.CodeActivity.ExecuteCodeEvent
  parent: System.Workflow.Activities.CodeActivity
  isExternal: false
  name: ExecuteCodeEvent
  nameWithType: CodeActivity.ExecuteCodeEvent
  fullName: System.Workflow.Activities.CodeActivity.ExecuteCodeEvent
- uid: System.Workflow.ComponentModel.DependencyProperty
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Workflow.ComponentModel.DependencyProperty
- uid: System.Workflow.Activities.CodeActivity.#ctor*
  parent: System.Workflow.Activities.CodeActivity
  isExternal: false
  name: CodeActivity
  nameWithType: CodeActivity.CodeActivity
- uid: System.Workflow.Activities.CodeActivity.Execute*
  parent: System.Workflow.Activities.CodeActivity
  isExternal: false
  name: Execute
  nameWithType: CodeActivity.Execute
