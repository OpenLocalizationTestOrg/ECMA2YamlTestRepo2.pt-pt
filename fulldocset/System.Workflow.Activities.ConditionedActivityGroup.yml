### YamlMime:ManagedReference
items:
- uid: System.Workflow.Activities.ConditionedActivityGroup
  id: ConditionedActivityGroup
  children:
  - System.Workflow.Activities.ConditionedActivityGroup.#ctor
  - System.Workflow.Activities.ConditionedActivityGroup.#ctor(System.String)
  - System.Workflow.Activities.ConditionedActivityGroup.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.ConditionedActivityGroup.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.ConditionedActivityGroup.GetChildActivityExecutedCount(System.Workflow.ComponentModel.Activity)
  - System.Workflow.Activities.ConditionedActivityGroup.GetDynamicActivity(System.String)
  - System.Workflow.Activities.ConditionedActivityGroup.GetWhenCondition(System.Object)
  - System.Workflow.Activities.ConditionedActivityGroup.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  - System.Workflow.Activities.ConditionedActivityGroup.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  - System.Workflow.Activities.ConditionedActivityGroup.OnClosed(System.IServiceProvider)
  - System.Workflow.Activities.ConditionedActivityGroup.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.ConditionedActivityGroup.SetWhenCondition(System.Object,System.Object)
  - System.Workflow.Activities.ConditionedActivityGroup.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)
  - System.Workflow.Activities.ConditionedActivityGroup.UntilCondition
  - System.Workflow.Activities.ConditionedActivityGroup.UntilConditionProperty
  - System.Workflow.Activities.ConditionedActivityGroup.WhenConditionProperty
  langs:
  - csharp
  name: ConditionedActivityGroup
  nameWithType: ConditionedActivityGroup
  fullName: System.Workflow.Activities.ConditionedActivityGroup
  type: Class
  summary: "Provides the definition of a constraint-based execution context for a set of child activities."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       The ConditionedActivityGroup activity is a <xref:System.Workflow.ComponentModel.CompositeActivity>, meaning the ConditionedActivityGroup activity can contain other activities.       The ConditionedActivityGroup activity runs and re-executes child activities based on the evaluation of their `when` conditions. All rules are evaluated whenever required based on their data and state change dependencies.       When the completion rule of the ConditionedActivityGroup evaluates to `true`, it immediately cancels any currently executing child activities and finishes."
  syntax:
    content: >-
      [System.ComponentModel.Designer(typeof(System.Workflow.Activities.ConditionedActivityGroupDesigner), typeof(System.ComponentModel.Design.IDesigner))]

      [System.ComponentModel.ToolboxItem(typeof(System.Workflow.ComponentModel.Design.ActivityToolboxItem))]

      [System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.ConditionedActivityGroup), "Resources.cag.png")]

      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      [System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.ConditionedActivityGroupValidator))]

      [System.Workflow.Runtime.DebugEngine.WorkflowDebuggerStepping(System.Workflow.Runtime.DebugEngine.WorkflowDebuggerSteppingOption.Concurrent)]

      public sealed class ConditionedActivityGroup : System.Workflow.ComponentModel.CompositeActivity, System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>
  inheritance:
  - System.Object
  - System.Workflow.ComponentModel.DependencyObject
  - System.Workflow.ComponentModel.Activity
  - System.Workflow.ComponentModel.CompositeActivity
  implements:
  - System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>
  inheritedMembers:
  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty
  - System.Workflow.ComponentModel.Activity.Canceling
  - System.Workflow.ComponentModel.Activity.CancelingEvent
  - System.Workflow.ComponentModel.Activity.Clone
  - System.Workflow.ComponentModel.Activity.Closed
  - System.Workflow.ComponentModel.Activity.ClosedEvent
  - System.Workflow.ComponentModel.Activity.Compensating
  - System.Workflow.ComponentModel.Activity.CompensatingEvent
  - System.Workflow.ComponentModel.Activity.Description
  - System.Workflow.ComponentModel.Activity.Enabled
  - System.Workflow.ComponentModel.Activity.Executing
  - System.Workflow.ComponentModel.Activity.ExecutingEvent
  - System.Workflow.ComponentModel.Activity.ExecutionResult
  - System.Workflow.ComponentModel.Activity.ExecutionStatus
  - System.Workflow.ComponentModel.Activity.Faulting
  - System.Workflow.ComponentModel.Activity.FaultingEvent
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)
  - System.Workflow.ComponentModel.Activity.IsDynamicActivity
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.Name
  - System.Workflow.ComponentModel.Activity.Parent
  - System.Workflow.ComponentModel.Activity.QualifiedName
  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)
  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)
  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.StatusChanged
  - System.Workflow.ComponentModel.Activity.StatusChangedEvent
  - System.Workflow.ComponentModel.Activity.ToString
  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)
  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)
  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId
  - System.Workflow.ComponentModel.CompositeActivity.Activities
  - System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)
  - System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities
  - System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)
  - System.Workflow.ComponentModel.CompositeActivity.EnabledActivities
  - System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  - System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)
  - System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)
  - System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)
  - System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.DesignMode
  - System.Workflow.ComponentModel.DependencyObject.Dispose
  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.InitializeProperties
  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.Site
  - System.Workflow.ComponentModel.DependencyObject.UserData
  platform:
  - net462
- uid: System.Workflow.Activities.ConditionedActivityGroup.#ctor
  id: '#ctor'
  parent: System.Workflow.Activities.ConditionedActivityGroup
  langs:
  - csharp
  name: ConditionedActivityGroup()
  nameWithType: ConditionedActivityGroup.ConditionedActivityGroup()
  fullName: System.Workflow.Activities.ConditionedActivityGroup.ConditionedActivityGroup()
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Initializes a new instance of the <xref href=&quot;System.Workflow.Activities.ConditionedActivityGroup&quot;></xref> class."
  remarks: ''
  example:
  - "The following code example shows how to use the constructor to create an instance of <xref:System.Workflow.Activities.ConditionedActivityGroup>. The code also creates two <xref:System.Workflow.Activities.CodeCondition> class instances and two <xref:System.Workflow.Activities.CodeActivity> class instances. This code example is part of the ConditionedActivityGroup SDK Sample from the SimpleCAGWorkflow.Designer.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Using ConditionedActivityGroup](http://msdn.microsoft.com/en-us/5a0b7e9e-def5-46b2-acbb-0005e1aff984).  \n  \n [!code-cs[wf_samples#157](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#157)]\n [!code-vb[wf_samples#157](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#157)]"
  syntax:
    content: public ConditionedActivityGroup ();
    parameters: []
  overload: System.Workflow.Activities.ConditionedActivityGroup.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "No children are executing and the <xref:System.Workflow.Activities.ConditionedActivityGroup.UntilCondition*> evaluates to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Workflow.Activities.ConditionedActivityGroup.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Workflow.Activities.ConditionedActivityGroup
  langs:
  - csharp
  name: ConditionedActivityGroup(String)
  nameWithType: ConditionedActivityGroup.ConditionedActivityGroup(String)
  fullName: System.Workflow.Activities.ConditionedActivityGroup.ConditionedActivityGroup(String)
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Initializes a new instance of the <xref href=&quot;System.Workflow.Activities.ConditionedActivityGroup&quot;></xref> class using the name of the activity."
  syntax:
    content: public ConditionedActivityGroup (string name);
    parameters:
    - id: name
      type: System.String
      description: "The user-defined name of the activity."
  overload: System.Workflow.Activities.ConditionedActivityGroup.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ConditionedActivityGroup.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.ConditionedActivityGroup
  langs:
  - csharp
  name: Cancel(ActivityExecutionContext)
  nameWithType: ConditionedActivityGroup.Cancel(ActivityExecutionContext)
  fullName: System.Workflow.Activities.ConditionedActivityGroup.Cancel(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  syntax:
    content: protected override System.Workflow.ComponentModel.ActivityExecutionStatus Cancel (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "To be added."
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "To be added."
  overload: System.Workflow.Activities.ConditionedActivityGroup.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ConditionedActivityGroup.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.ConditionedActivityGroup
  langs:
  - csharp
  name: Execute(ActivityExecutionContext)
  nameWithType: ConditionedActivityGroup.Execute(ActivityExecutionContext)
  fullName: System.Workflow.Activities.ConditionedActivityGroup.Execute(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  syntax:
    content: protected override System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "To be added."
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "To be added."
  overload: System.Workflow.Activities.ConditionedActivityGroup.Execute*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ConditionedActivityGroup.GetChildActivityExecutedCount(System.Workflow.ComponentModel.Activity)
  id: GetChildActivityExecutedCount(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Activities.ConditionedActivityGroup
  langs:
  - csharp
  name: GetChildActivityExecutedCount(Activity)
  nameWithType: ConditionedActivityGroup.GetChildActivityExecutedCount(Activity)
  fullName: System.Workflow.Activities.ConditionedActivityGroup.GetChildActivityExecutedCount(Activity)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Gets the number of times that the specified child activity has been executed."
  syntax:
    content: public int GetChildActivityExecutedCount (System.Workflow.ComponentModel.Activity child);
    parameters:
    - id: child
      type: System.Workflow.ComponentModel.Activity
      description: "The child activity."
    return:
      type: System.Int32
      description: "The number of times that the specified child activity has been executed."
  overload: System.Workflow.Activities.ConditionedActivityGroup.GetChildActivityExecutedCount*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>child</code> parameter is a <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> reference (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> in Visual Basic)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The conditioned activity group state is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The number of times that the child activity has been run cannot be determined."
  platform:
  - net462
- uid: System.Workflow.Activities.ConditionedActivityGroup.GetDynamicActivity(System.String)
  id: GetDynamicActivity(System.String)
  parent: System.Workflow.Activities.ConditionedActivityGroup
  langs:
  - csharp
  name: GetDynamicActivity(String)
  nameWithType: ConditionedActivityGroup.GetDynamicActivity(String)
  fullName: System.Workflow.Activities.ConditionedActivityGroup.GetDynamicActivity(String)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Gets the currently executing instance of the child activity."
  syntax:
    content: public System.Workflow.ComponentModel.Activity GetDynamicActivity (string childActivityName);
    parameters:
    - id: childActivityName
      type: System.String
      description: "The name of the child <xref href=&quot;System.Workflow.Activities.EventDrivenActivity&quot;></xref>."
    return:
      type: System.Workflow.ComponentModel.Activity
      description: "The currently executing instance of the <xref href=&quot;System.Workflow.Activities.EventDrivenActivity&quot;></xref>."
  overload: System.Workflow.Activities.ConditionedActivityGroup.GetDynamicActivity*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>childactivity</code> is a <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> reference (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> in Visual Basic)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The executable activities do not contain the <code>childactivity</code>."
  platform:
  - net462
- uid: System.Workflow.Activities.ConditionedActivityGroup.GetWhenCondition(System.Object)
  id: GetWhenCondition(System.Object)
  parent: System.Workflow.Activities.ConditionedActivityGroup
  langs:
  - csharp
  name: GetWhenCondition(Object)
  nameWithType: ConditionedActivityGroup.GetWhenCondition(Object)
  fullName: System.Workflow.Activities.ConditionedActivityGroup.GetWhenCondition(Object)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Gets the condition associated with the <xref href=&quot;System.Workflow.Activities.ConditionedActivityGroup.WhenConditionProperty&quot;></xref> for the specified dependency object."
  syntax:
    content: public static object GetWhenCondition (object dependencyObject);
    parameters:
    - id: dependencyObject
      type: System.Object
      description: "The underlying data storage object for the activity."
    return:
      type: System.Object
      description: "The <xref uid=&quot;langword_csharp_when&quot; name=&quot;when&quot; href=&quot;&quot;></xref> condition."
  overload: System.Workflow.Activities.ConditionedActivityGroup.GetWhenCondition*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>dependencyObject</code> is a null reference (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> in Visual Basic)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The executable activities do not contain the <code>dependencyObject</code>."
  platform:
  - net462
- uid: System.Workflow.Activities.ConditionedActivityGroup.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  id: OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Activities.ConditionedActivityGroup
  langs:
  - csharp
  name: OnActivityChangeAdd(ActivityExecutionContext,Activity)
  nameWithType: ConditionedActivityGroup.OnActivityChangeAdd(ActivityExecutionContext,Activity)
  fullName: System.Workflow.Activities.ConditionedActivityGroup.OnActivityChangeAdd(ActivityExecutionContext,Activity)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  syntax:
    content: protected override void OnActivityChangeAdd (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, System.Workflow.ComponentModel.Activity addedActivity);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "To be added."
    - id: addedActivity
      type: System.Workflow.ComponentModel.Activity
      description: "To be added."
  overload: System.Workflow.Activities.ConditionedActivityGroup.OnActivityChangeAdd*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ConditionedActivityGroup.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  id: OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Activities.ConditionedActivityGroup
  langs:
  - csharp
  name: OnActivityChangeRemove(ActivityExecutionContext,Activity)
  nameWithType: ConditionedActivityGroup.OnActivityChangeRemove(ActivityExecutionContext,Activity)
  fullName: System.Workflow.Activities.ConditionedActivityGroup.OnActivityChangeRemove(ActivityExecutionContext,Activity)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  syntax:
    content: protected override void OnActivityChangeRemove (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, System.Workflow.ComponentModel.Activity removedActivity);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "To be added."
    - id: removedActivity
      type: System.Workflow.ComponentModel.Activity
      description: "To be added."
  overload: System.Workflow.Activities.ConditionedActivityGroup.OnActivityChangeRemove*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ConditionedActivityGroup.OnClosed(System.IServiceProvider)
  id: OnClosed(System.IServiceProvider)
  parent: System.Workflow.Activities.ConditionedActivityGroup
  langs:
  - csharp
  name: OnClosed(IServiceProvider)
  nameWithType: ConditionedActivityGroup.OnClosed(IServiceProvider)
  fullName: System.Workflow.Activities.ConditionedActivityGroup.OnClosed(IServiceProvider)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  syntax:
    content: protected override void OnClosed (IServiceProvider provider);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "To be added."
  overload: System.Workflow.Activities.ConditionedActivityGroup.OnClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ConditionedActivityGroup.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.ConditionedActivityGroup
  langs:
  - csharp
  name: OnWorkflowChangesCompleted(ActivityExecutionContext)
  nameWithType: ConditionedActivityGroup.OnWorkflowChangesCompleted(ActivityExecutionContext)
  fullName: System.Workflow.Activities.ConditionedActivityGroup.OnWorkflowChangesCompleted(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  syntax:
    content: protected override void OnWorkflowChangesCompleted (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "To be added."
  overload: System.Workflow.Activities.ConditionedActivityGroup.OnWorkflowChangesCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ConditionedActivityGroup.SetWhenCondition(System.Object,System.Object)
  id: SetWhenCondition(System.Object,System.Object)
  parent: System.Workflow.Activities.ConditionedActivityGroup
  langs:
  - csharp
  name: SetWhenCondition(Object,Object)
  nameWithType: ConditionedActivityGroup.SetWhenCondition(Object,Object)
  fullName: System.Workflow.Activities.ConditionedActivityGroup.SetWhenCondition(Object,Object)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Sets the condition associated with the <xref href=&quot;System.Workflow.Activities.ConditionedActivityGroup.WhenConditionProperty&quot;></xref> for the specified dependency object."
  syntax:
    content: public static void SetWhenCondition (object dependencyObject, object value);
    parameters:
    - id: dependencyObject
      type: System.Object
      description: "The underlying data storage object for the activity."
    - id: value
      type: System.Object
      description: "The value of the when condition."
  overload: System.Workflow.Activities.ConditionedActivityGroup.SetWhenCondition*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>dependencyObject</code> is a <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> reference (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> in Visual Basic)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The executable activities do not contain the <code>dependencyObject</code>."
  platform:
  - net462
- uid: System.Workflow.Activities.ConditionedActivityGroup.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)
  id: System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)
  isEii: true
  parent: System.Workflow.Activities.ConditionedActivityGroup
  langs:
  - csharp
  name: System.Workflow.ComponentModel.IActivityEventListener(Object,ActivityExecutionStatusChangedEventArgs)
  nameWithType: ConditionedActivityGroup.System.Workflow.ComponentModel.IActivityEventListener(Object,ActivityExecutionStatusChangedEventArgs)
  fullName: System.Workflow.Activities.ConditionedActivityGroup.System.Workflow.ComponentModel.IActivityEventListener(Object,ActivityExecutionStatusChangedEventArgs)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  syntax:
    content: void IActivityEventListener<ActivityExecutionStatusChangedEventArgs>.OnEvent (object sender, System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "To be added."
    - id: e
      type: System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs
      description: "To be added."
  overload: System.Workflow.Activities.ConditionedActivityGroup.System#Workflow#ComponentModel#IActivityEventListener<System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs>#OnEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ConditionedActivityGroup.UntilCondition
  id: UntilCondition
  parent: System.Workflow.Activities.ConditionedActivityGroup
  langs:
  - csharp
  name: UntilCondition
  nameWithType: ConditionedActivityGroup.UntilCondition
  fullName: System.Workflow.Activities.ConditionedActivityGroup.UntilCondition
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Gets or sets a value that indicates when the <xref href=&quot;System.Workflow.Activities.ConditionedActivityGroup&quot;></xref> should complete."
  remarks: ''
  example:
  - "The following code example shows how to set the UntilCondition to `null`, which means the `BookingCAG`<xref:System.Workflow.Activities.ConditionedActivityGroup> class never completes. This code example is part of the ConditionedActivityGroup SDK Sample from the SimpleCAGWorkflow.Designer.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Using ConditionedActivityGroup](http://msdn.microsoft.com/en-us/5a0b7e9e-def5-46b2-acbb-0005e1aff984).  \n  \n [!code-cs[wf_samples#159](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#159)]\n [!code-vb[wf_samples#159](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#159)]"
  syntax:
    content: public System.Workflow.ComponentModel.ActivityCondition UntilCondition { get; set; }
    return:
      type: System.Workflow.ComponentModel.ActivityCondition
      description: "A condition that determines whether the <xref href=&quot;System.Workflow.Activities.ConditionedActivityGroup&quot;></xref> should complete."
  overload: System.Workflow.Activities.ConditionedActivityGroup.UntilCondition*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ConditionedActivityGroup.UntilConditionProperty
  id: UntilConditionProperty
  parent: System.Workflow.Activities.ConditionedActivityGroup
  langs:
  - csharp
  name: UntilConditionProperty
  nameWithType: ConditionedActivityGroup.UntilConditionProperty
  fullName: System.Workflow.Activities.ConditionedActivityGroup.UntilConditionProperty
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Represents the <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref> that targets the <xref:System.Workflow.Activities.ConditionedActivityGroup.UntilCondition*> property."
  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty UntilConditionProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ConditionedActivityGroup.WhenConditionProperty
  id: WhenConditionProperty
  parent: System.Workflow.Activities.ConditionedActivityGroup
  langs:
  - csharp
  name: WhenConditionProperty
  nameWithType: ConditionedActivityGroup.WhenConditionProperty
  fullName: System.Workflow.Activities.ConditionedActivityGroup.WhenConditionProperty
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Represents the <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;></xref> that targets the WhenConditionProperty property."
  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty WhenConditionProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: System.Workflow.ComponentModel.CompositeActivity
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Workflow.Activities.ConditionedActivityGroup.#ctor
  parent: System.Workflow.Activities.ConditionedActivityGroup
  isExternal: false
  name: ConditionedActivityGroup()
  nameWithType: ConditionedActivityGroup.ConditionedActivityGroup()
  fullName: System.Workflow.Activities.ConditionedActivityGroup.ConditionedActivityGroup()
- uid: System.Workflow.Activities.ConditionedActivityGroup.#ctor(System.String)
  parent: System.Workflow.Activities.ConditionedActivityGroup
  isExternal: false
  name: ConditionedActivityGroup(String)
  nameWithType: ConditionedActivityGroup.ConditionedActivityGroup(String)
  fullName: System.Workflow.Activities.ConditionedActivityGroup.ConditionedActivityGroup(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Activities.ConditionedActivityGroup.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.ConditionedActivityGroup
  isExternal: false
  name: Cancel(ActivityExecutionContext)
  nameWithType: ConditionedActivityGroup.Cancel(ActivityExecutionContext)
  fullName: System.Workflow.Activities.ConditionedActivityGroup.Cancel(ActivityExecutionContext)
- uid: System.Workflow.ComponentModel.ActivityExecutionStatus
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionStatus
  nameWithType: ActivityExecutionStatus
  fullName: System.Workflow.ComponentModel.ActivityExecutionStatus
- uid: System.Workflow.ComponentModel.ActivityExecutionContext
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionContext
  nameWithType: ActivityExecutionContext
  fullName: System.Workflow.ComponentModel.ActivityExecutionContext
- uid: System.Workflow.Activities.ConditionedActivityGroup.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.ConditionedActivityGroup
  isExternal: false
  name: Execute(ActivityExecutionContext)
  nameWithType: ConditionedActivityGroup.Execute(ActivityExecutionContext)
  fullName: System.Workflow.Activities.ConditionedActivityGroup.Execute(ActivityExecutionContext)
- uid: System.Workflow.Activities.ConditionedActivityGroup.GetChildActivityExecutedCount(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Activities.ConditionedActivityGroup
  isExternal: false
  name: GetChildActivityExecutedCount(Activity)
  nameWithType: ConditionedActivityGroup.GetChildActivityExecutedCount(Activity)
  fullName: System.Workflow.Activities.ConditionedActivityGroup.GetChildActivityExecutedCount(Activity)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Workflow.ComponentModel.Activity
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Workflow.ComponentModel.Activity
- uid: System.Workflow.Activities.ConditionedActivityGroup.GetDynamicActivity(System.String)
  parent: System.Workflow.Activities.ConditionedActivityGroup
  isExternal: false
  name: GetDynamicActivity(String)
  nameWithType: ConditionedActivityGroup.GetDynamicActivity(String)
  fullName: System.Workflow.Activities.ConditionedActivityGroup.GetDynamicActivity(String)
- uid: System.Workflow.Activities.ConditionedActivityGroup.GetWhenCondition(System.Object)
  parent: System.Workflow.Activities.ConditionedActivityGroup
  isExternal: false
  name: GetWhenCondition(Object)
  nameWithType: ConditionedActivityGroup.GetWhenCondition(Object)
  fullName: System.Workflow.Activities.ConditionedActivityGroup.GetWhenCondition(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Workflow.Activities.ConditionedActivityGroup.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Activities.ConditionedActivityGroup
  isExternal: false
  name: OnActivityChangeAdd(ActivityExecutionContext,Activity)
  nameWithType: ConditionedActivityGroup.OnActivityChangeAdd(ActivityExecutionContext,Activity)
  fullName: System.Workflow.Activities.ConditionedActivityGroup.OnActivityChangeAdd(ActivityExecutionContext,Activity)
- uid: System.Workflow.Activities.ConditionedActivityGroup.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Activities.ConditionedActivityGroup
  isExternal: false
  name: OnActivityChangeRemove(ActivityExecutionContext,Activity)
  nameWithType: ConditionedActivityGroup.OnActivityChangeRemove(ActivityExecutionContext,Activity)
  fullName: System.Workflow.Activities.ConditionedActivityGroup.OnActivityChangeRemove(ActivityExecutionContext,Activity)
- uid: System.Workflow.Activities.ConditionedActivityGroup.OnClosed(System.IServiceProvider)
  parent: System.Workflow.Activities.ConditionedActivityGroup
  isExternal: false
  name: OnClosed(IServiceProvider)
  nameWithType: ConditionedActivityGroup.OnClosed(IServiceProvider)
  fullName: System.Workflow.Activities.ConditionedActivityGroup.OnClosed(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Workflow.Activities.ConditionedActivityGroup.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.ConditionedActivityGroup
  isExternal: false
  name: OnWorkflowChangesCompleted(ActivityExecutionContext)
  nameWithType: ConditionedActivityGroup.OnWorkflowChangesCompleted(ActivityExecutionContext)
  fullName: System.Workflow.Activities.ConditionedActivityGroup.OnWorkflowChangesCompleted(ActivityExecutionContext)
- uid: System.Workflow.Activities.ConditionedActivityGroup.SetWhenCondition(System.Object,System.Object)
  parent: System.Workflow.Activities.ConditionedActivityGroup
  isExternal: false
  name: SetWhenCondition(Object,Object)
  nameWithType: ConditionedActivityGroup.SetWhenCondition(Object,Object)
  fullName: System.Workflow.Activities.ConditionedActivityGroup.SetWhenCondition(Object,Object)
- uid: System.Workflow.Activities.ConditionedActivityGroup.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)
  parent: System.Workflow.Activities.ConditionedActivityGroup
  isExternal: false
  name: System.Workflow.ComponentModel.IActivityEventListener(Object,ActivityExecutionStatusChangedEventArgs)
  nameWithType: ConditionedActivityGroup.System.Workflow.ComponentModel.IActivityEventListener(Object,ActivityExecutionStatusChangedEventArgs)
  fullName: System.Workflow.Activities.ConditionedActivityGroup.System.Workflow.ComponentModel.IActivityEventListener(Object,ActivityExecutionStatusChangedEventArgs)
- uid: System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionStatusChangedEventArgs
  nameWithType: ActivityExecutionStatusChangedEventArgs
  fullName: System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs
- uid: System.Workflow.Activities.ConditionedActivityGroup.UntilCondition
  parent: System.Workflow.Activities.ConditionedActivityGroup
  isExternal: false
  name: UntilCondition
  nameWithType: ConditionedActivityGroup.UntilCondition
  fullName: System.Workflow.Activities.ConditionedActivityGroup.UntilCondition
- uid: System.Workflow.ComponentModel.ActivityCondition
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityCondition
  nameWithType: ActivityCondition
  fullName: System.Workflow.ComponentModel.ActivityCondition
- uid: System.Workflow.Activities.ConditionedActivityGroup.UntilConditionProperty
  parent: System.Workflow.Activities.ConditionedActivityGroup
  isExternal: false
  name: UntilConditionProperty
  nameWithType: ConditionedActivityGroup.UntilConditionProperty
  fullName: System.Workflow.Activities.ConditionedActivityGroup.UntilConditionProperty
- uid: System.Workflow.ComponentModel.DependencyProperty
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Workflow.ComponentModel.DependencyProperty
- uid: System.Workflow.Activities.ConditionedActivityGroup.WhenConditionProperty
  parent: System.Workflow.Activities.ConditionedActivityGroup
  isExternal: false
  name: WhenConditionProperty
  nameWithType: ConditionedActivityGroup.WhenConditionProperty
  fullName: System.Workflow.Activities.ConditionedActivityGroup.WhenConditionProperty
- uid: System.Workflow.Activities.ConditionedActivityGroup.#ctor*
  parent: System.Workflow.Activities.ConditionedActivityGroup
  isExternal: false
  name: ConditionedActivityGroup
  nameWithType: ConditionedActivityGroup.ConditionedActivityGroup
- uid: System.Workflow.Activities.ConditionedActivityGroup.Cancel*
  parent: System.Workflow.Activities.ConditionedActivityGroup
  isExternal: false
  name: Cancel
  nameWithType: ConditionedActivityGroup.Cancel
- uid: System.Workflow.Activities.ConditionedActivityGroup.Execute*
  parent: System.Workflow.Activities.ConditionedActivityGroup
  isExternal: false
  name: Execute
  nameWithType: ConditionedActivityGroup.Execute
- uid: System.Workflow.Activities.ConditionedActivityGroup.GetChildActivityExecutedCount*
  parent: System.Workflow.Activities.ConditionedActivityGroup
  isExternal: false
  name: GetChildActivityExecutedCount
  nameWithType: ConditionedActivityGroup.GetChildActivityExecutedCount
- uid: System.Workflow.Activities.ConditionedActivityGroup.GetDynamicActivity*
  parent: System.Workflow.Activities.ConditionedActivityGroup
  isExternal: false
  name: GetDynamicActivity
  nameWithType: ConditionedActivityGroup.GetDynamicActivity
- uid: System.Workflow.Activities.ConditionedActivityGroup.GetWhenCondition*
  parent: System.Workflow.Activities.ConditionedActivityGroup
  isExternal: false
  name: GetWhenCondition
  nameWithType: ConditionedActivityGroup.GetWhenCondition
- uid: System.Workflow.Activities.ConditionedActivityGroup.OnActivityChangeAdd*
  parent: System.Workflow.Activities.ConditionedActivityGroup
  isExternal: false
  name: OnActivityChangeAdd
  nameWithType: ConditionedActivityGroup.OnActivityChangeAdd
- uid: System.Workflow.Activities.ConditionedActivityGroup.OnActivityChangeRemove*
  parent: System.Workflow.Activities.ConditionedActivityGroup
  isExternal: false
  name: OnActivityChangeRemove
  nameWithType: ConditionedActivityGroup.OnActivityChangeRemove
- uid: System.Workflow.Activities.ConditionedActivityGroup.OnClosed*
  parent: System.Workflow.Activities.ConditionedActivityGroup
  isExternal: false
  name: OnClosed
  nameWithType: ConditionedActivityGroup.OnClosed
- uid: System.Workflow.Activities.ConditionedActivityGroup.OnWorkflowChangesCompleted*
  parent: System.Workflow.Activities.ConditionedActivityGroup
  isExternal: false
  name: OnWorkflowChangesCompleted
  nameWithType: ConditionedActivityGroup.OnWorkflowChangesCompleted
- uid: System.Workflow.Activities.ConditionedActivityGroup.SetWhenCondition*
  parent: System.Workflow.Activities.ConditionedActivityGroup
  isExternal: false
  name: SetWhenCondition
  nameWithType: ConditionedActivityGroup.SetWhenCondition
- uid: System.Workflow.Activities.ConditionedActivityGroup.System#Workflow#ComponentModel#IActivityEventListener<System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs>#OnEvent*
  parent: System.Workflow.Activities.ConditionedActivityGroup
  isExternal: false
  name: System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>.OnEvent
  nameWithType: ConditionedActivityGroup.System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>.OnEvent
- uid: System.Workflow.Activities.ConditionedActivityGroup.UntilCondition*
  parent: System.Workflow.Activities.ConditionedActivityGroup
  isExternal: false
  name: UntilCondition
  nameWithType: ConditionedActivityGroup.UntilCondition
