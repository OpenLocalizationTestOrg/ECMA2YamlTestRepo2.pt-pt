### YamlMime:ManagedReference
items:
- uid: System.Web.UI.StateBag
  id: StateBag
  children:
  - System.Web.UI.StateBag.#ctor
  - System.Web.UI.StateBag.#ctor(System.Boolean)
  - System.Web.UI.StateBag.Add(System.String,System.Object)
  - System.Web.UI.StateBag.Clear
  - System.Web.UI.StateBag.Count
  - System.Web.UI.StateBag.GetEnumerator
  - System.Web.UI.StateBag.IsItemDirty(System.String)
  - System.Web.UI.StateBag.Item(System.String)
  - System.Web.UI.StateBag.Keys
  - System.Web.UI.StateBag.Remove(System.String)
  - System.Web.UI.StateBag.SetDirty(System.Boolean)
  - System.Web.UI.StateBag.SetItemDirty(System.String,System.Boolean)
  - System.Web.UI.StateBag.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Web.UI.StateBag.System#Collections#ICollection#IsSynchronized
  - System.Web.UI.StateBag.System#Collections#ICollection#SyncRoot
  - System.Web.UI.StateBag.System#Collections#IDictionary#Add(System.Object,System.Object)
  - System.Web.UI.StateBag.System#Collections#IDictionary#Contains(System.Object)
  - System.Web.UI.StateBag.System#Collections#IDictionary#IsFixedSize
  - System.Web.UI.StateBag.System#Collections#IDictionary#IsReadOnly
  - System.Web.UI.StateBag.System#Collections#IDictionary#Item(System.Object)
  - System.Web.UI.StateBag.System#Collections#IDictionary#Remove(System.Object)
  - System.Web.UI.StateBag.System#Collections#IEnumerable#GetEnumerator
  - System.Web.UI.StateBag.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.StateBag.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.StateBag.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.StateBag.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.StateBag.Values
  langs:
  - csharp
  name: StateBag
  nameWithType: StateBag
  fullName: System.Web.UI.StateBag
  type: Class
  summary: "Manages the view state of ASP.NET server controls, including pages. This class cannot be inherited."
  remarks: "View state for a page or control is the cumulative property values, or view, of that page or control. You can access this class through the <xref:System.Web.UI.Control.ViewState%2A?displayProperty=fullName> property. Controls can also store essential state information in control state, but that information is not stored as a StateBag object.       This class is the primary storage mechanism for all HTML and Web server controls. It stores attribute/value pairs as strings associated with the control. It tracks changes to these attributes only after the <xref:System.Web.UI.Control.OnInit%2A> method is executed for a page request, and saves the changes to the page&quot;s or control&quot;s view state.       This class implements a dictionary, and you can add items to it or remove items from it as you would any dictionary object. For more information about data collections, such as dictionaries, see [Collections and Data Structures](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates a composite `Label` control that has `Text` and `FontSize` properties. These properties are saved to and retrieved from view state when the <xref:System.Web.UI.Control.Render%2A?displayProperty=fullName> method is called on the control.  \n  \n [!code-vb[SysWebUIControlViewState#1](~/add/codesnippet/visualbasic/t-system.web.ui.statebag_1.vb)]\n [!code-cs[SysWebUIControlViewState#1](~/add/codesnippet/csharp/t-system.web.ui.statebag_1.cs)]"
  syntax:
    content: 'public sealed class StateBag : System.Collections.IDictionary, System.Web.UI.IStateManager'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IDictionary
  - System.Web.UI.IStateManager
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.StateBag.#ctor
  id: '#ctor'
  parent: System.Web.UI.StateBag
  langs:
  - csharp
  name: StateBag()
  nameWithType: StateBag.StateBag()
  fullName: System.Web.UI.StateBag.StateBag()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.UI.StateBag&quot;></xref> class. This is the default constructor for this class."
  syntax:
    content: public StateBag ();
    parameters: []
  overload: System.Web.UI.StateBag.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateBag.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.Web.UI.StateBag
  langs:
  - csharp
  name: StateBag(Boolean)
  nameWithType: StateBag.StateBag(Boolean)
  fullName: System.Web.UI.StateBag.StateBag(Boolean)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.UI.StateBag&quot;></xref> class that allows stored state values to be case-insensitive."
  syntax:
    content: public StateBag (bool ignoreCase);
    parameters:
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to ignore case; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.StateBag.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateBag.Add(System.String,System.Object)
  id: Add(System.String,System.Object)
  parent: System.Web.UI.StateBag
  langs:
  - csharp
  name: Add(String,Object)
  nameWithType: StateBag.Add(String,Object)
  fullName: System.Web.UI.StateBag.Add(String,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Adds a new <xref href=&quot;System.Web.UI.StateItem&quot;></xref> object to the <xref href=&quot;System.Web.UI.StateBag&quot;></xref> object. If the item already exists in the <xref href=&quot;System.Web.UI.StateBag&quot;></xref> object, this method updates the value of the item."
  remarks: ''
  example:
  - "The following code example demonstrates using the Add method.  \n  \n [!code-cs[Web.UI.StateBag#3](~/add/codesnippet/csharp/m-system.web.ui.statebag_4_1.aspx)]\n [!code-vb[Web.UI.StateBag#3](~/add/codesnippet/visualbasic/m-system.web.ui.statebag_4_1.aspx)]"
  syntax:
    content: public System.Web.UI.StateItem Add (string key, object value);
    parameters:
    - id: key
      type: System.String
      description: "The attribute name for the <xref href=&quot;System.Web.UI.StateItem&quot;></xref>."
    - id: value
      type: System.Object
      description: "The value of the item to add to the <xref href=&quot;System.Web.UI.StateBag&quot;></xref>."
    return:
      type: System.Web.UI.StateItem
      description: "Returns a <xref href=&quot;System.Web.UI.StateItem&quot;></xref> that represents the object added to view state."
  overload: System.Web.UI.StateBag.Add*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>key</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The number of characters in <code>key</code> is 0."
  platform:
  - net462
- uid: System.Web.UI.StateBag.Clear
  id: Clear
  parent: System.Web.UI.StateBag
  langs:
  - csharp
  name: Clear()
  nameWithType: StateBag.Clear()
  fullName: System.Web.UI.StateBag.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Removes all items from the current <xref href=&quot;System.Web.UI.StateBag&quot;></xref> object."
  remarks: ''
  example:
  - "The following code example demonstrates using the Clear method.  \n  \n [!code-vb[StateBag_IStateManager_Sample1#4](~/add/codesnippet/visualbasic/m-system.web.ui.statebag_3_1.vb)]\n [!code-cs[StateBag_IStateManager_Sample1#4](~/add/codesnippet/csharp/m-system.web.ui.statebag_3_1.cs)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.UI.StateBag.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateBag.Count
  id: Count
  parent: System.Web.UI.StateBag
  langs:
  - csharp
  name: Count
  nameWithType: StateBag.Count
  fullName: System.Web.UI.StateBag.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gets the number of <xref href=&quot;System.Web.UI.StateItem&quot;></xref> objects in the <xref href=&quot;System.Web.UI.StateBag&quot;></xref> object."
  remarks: ''
  example:
  - "The following code example demonstrates using the Count property.  \n  \n [!code-vb[Web.UI.StateBag#2](~/add/codesnippet/visualbasic/p-system.web.ui.statebag_2_1.aspx)]\n [!code-cs[Web.UI.StateBag#2](~/add/codesnippet/csharp/p-system.web.ui.statebag_2_1.aspx)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "The number of items in the <xref href=&quot;System.Web.UI.StateBag&quot;></xref>."
  overload: System.Web.UI.StateBag.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateBag.GetEnumerator
  id: GetEnumerator
  parent: System.Web.UI.StateBag
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: StateBag.GetEnumerator()
  fullName: System.Web.UI.StateBag.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Returns an enumerator that iterates over all the key/value pairs of the <xref href=&quot;System.Web.UI.StateItem&quot;></xref> objects stored in the <xref href=&quot;System.Web.UI.StateBag&quot;></xref> object."
  remarks: ''
  example:
  - "The following example demonstrates how to use the GetEnumerator method.  \n  \n [!code-cs[StateItem_Samples1#3](~/add/codesnippet/csharp/m-system.web.ui.statebag_2_1.aspx)]\n [!code-vb[StateItem_Samples1#3](~/add/codesnippet/visualbasic/m-system.web.ui.statebag_2_1.aspx)]"
  syntax:
    content: public System.Collections.IDictionaryEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IDictionaryEnumerator
      description: "The enumerator to iterate through the state bag."
  overload: System.Web.UI.StateBag.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateBag.IsItemDirty(System.String)
  id: IsItemDirty(System.String)
  parent: System.Web.UI.StateBag
  langs:
  - csharp
  name: IsItemDirty(String)
  nameWithType: StateBag.IsItemDirty(String)
  fullName: System.Web.UI.StateBag.IsItemDirty(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Checks a <xref href=&quot;System.Web.UI.StateItem&quot;></xref> object stored in the <xref href=&quot;System.Web.UI.StateBag&quot;></xref> object to evaluate whether it has been modified since the call to &lt;xref:System.Web.UI.Control.TrackViewState%2A?displayProperty=fullName&gt;."
  remarks: "This method also returns `false` if the `key` parameter does not exist in the <xref:System.Web.UI.StateBag> object."
  example:
  - "The following code example demonstrates using the IsItemDirty method.  \n  \n [!code-vb[StateBag_IStateManager_Sample1#4](~/add/codesnippet/visualbasic/m-system.web.ui.statebag_0_1.vb)]\n [!code-cs[StateBag_IStateManager_Sample1#4](~/add/codesnippet/csharp/m-system.web.ui.statebag_0_1.cs)]"
  syntax:
    content: public bool IsItemDirty (string key);
    parameters:
    - id: key
      type: System.String
      description: "The key of the item to check."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the item has been modified; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.StateBag.IsItemDirty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateBag.Item(System.String)
  id: Item(System.String)
  parent: System.Web.UI.StateBag
  langs:
  - csharp
  name: Item(String)
  nameWithType: StateBag.Item(String)
  fullName: System.Web.UI.StateBag.Item(String)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gets or sets the value of an item stored in the <xref href=&quot;System.Web.UI.StateBag&quot;></xref> object."
  remarks: "Using this member is the simplest way to save and retrieve view-state values for a control or a page.       If an item is not already stored in the <xref:System.Web.UI.StateBag> object when you set this property, its key/value pair is added to the collection. If you set this property to `null` before the <xref:System.Web.UI.Control.TrackViewState%2A> method is called on an item, it is removed from the <xref:System.Web.UI.StateBag> object. Otherwise, when you set this property to `null` the key is saved to allow tracking of the item&quot;s view state."
  example:
  - "The following code example demonstrates a property that saves its name and value as a key/value pair to the <xref:System.Web.UI.Control.ViewState%2A?displayProperty=fullName> property. The <xref:System.Web.UI.Control.ViewState%2A> property is an instance of the <xref:System.Web.UI.StateBag> class.  \n  \n [!code-vb[SysWebUIControlViewState#2](~/add/codesnippet/visualbasic/p-system.web.ui.statebag_0_1.vb)]\n [!code-cs[SysWebUIControlViewState#2](~/add/codesnippet/csharp/p-system.web.ui.statebag_0_1.cs)]"
  syntax:
    content: public object this[string key] { get; set; }
    parameters:
    - id: key
      type: System.String
      description: "The key for the item."
    return:
      type: System.Object
      description: "The specified item in the <xref href=&quot;System.Web.UI.StateBag&quot;></xref> object."
  overload: System.Web.UI.StateBag.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateBag.Keys
  id: Keys
  parent: System.Web.UI.StateBag
  langs:
  - csharp
  name: Keys
  nameWithType: StateBag.Keys
  fullName: System.Web.UI.StateBag.Keys
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gets a collection of keys representing the items in the <xref href=&quot;System.Web.UI.StateBag&quot;></xref> object."
  remarks: "These keys are the names of the control properties. For example, if you created a `BGColor` property on a `Table` control that you customized, a `BGColor` entry is created in this collection representing that property on your `Table` control.       These keys correspond to the names of the <xref:System.Web.UI.StateItem> objects stored in the <xref:System.Web.UI.StateBag> collection for the current page or server control.       You can iterate over this collection using the <xref:System.Web.UI.StateBag.GetEnumerator%2A?displayProperty=fullName> method."
  example:
  - "The following code example demonstrates using the Keys property.  \n  \n [!code-vb[Web.UI.StateBag#2](~/add/codesnippet/visualbasic/p-system.web.ui.statebag_3_1.aspx)]\n [!code-cs[Web.UI.StateBag#2](~/add/codesnippet/csharp/p-system.web.ui.statebag_3_1.aspx)]"
  syntax:
    content: public System.Collections.ICollection Keys { get; }
    return:
      type: System.Collections.ICollection
      description: "The collection of keys."
  overload: System.Web.UI.StateBag.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateBag.Remove(System.String)
  id: Remove(System.String)
  parent: System.Web.UI.StateBag
  langs:
  - csharp
  name: Remove(String)
  nameWithType: StateBag.Remove(String)
  fullName: System.Web.UI.StateBag.Remove(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Removes the specified key/value pair from the <xref href=&quot;System.Web.UI.StateBag&quot;></xref> object."
  remarks: ''
  example:
  - "The following code example demonstrates using the Remove method.  \n  \n [!code-cs[Web.UI.StateBag#3](~/add/codesnippet/csharp/m-system.web.ui.statebag_1_1.aspx)]\n [!code-vb[Web.UI.StateBag#3](~/add/codesnippet/visualbasic/m-system.web.ui.statebag_1_1.aspx)]"
  syntax:
    content: public void Remove (string key);
    parameters:
    - id: key
      type: System.String
      description: "The item to remove."
  overload: System.Web.UI.StateBag.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateBag.SetDirty(System.Boolean)
  id: SetDirty(System.Boolean)
  parent: System.Web.UI.StateBag
  langs:
  - csharp
  name: SetDirty(Boolean)
  nameWithType: StateBag.SetDirty(Boolean)
  fullName: System.Web.UI.StateBag.SetDirty(Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Sets the state of the <xref href=&quot;System.Web.UI.StateBag&quot;></xref> object as well as the <xref:System.Web.SessionState.ISessionStateItemCollection.Dirty*> property of each of the <xref href=&quot;System.Web.UI.StateItem&quot;></xref> objects contained by it."
  remarks: "The SetDirty method is used to force the collection and its contents to be serialized during a call to the <xref:System.Web.UI.StateBag.System%23Web%23UI%23IStateManager%23SaveViewState%2A> method."
  syntax:
    content: public void SetDirty (bool dirty);
    parameters:
    - id: dirty
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to mark the state of the collection and its items as modified; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.StateBag.SetDirty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateBag.SetItemDirty(System.String,System.Boolean)
  id: SetItemDirty(System.String,System.Boolean)
  parent: System.Web.UI.StateBag
  langs:
  - csharp
  name: SetItemDirty(String,Boolean)
  nameWithType: StateBag.SetItemDirty(String,Boolean)
  fullName: System.Web.UI.StateBag.SetItemDirty(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Sets the <xref:System.Web.SessionState.ISessionStateItemCollection.Dirty*> property for the specified <xref href=&quot;System.Web.UI.StateItem&quot;></xref> object in the <xref href=&quot;System.Web.UI.StateBag&quot;></xref> object."
  remarks: "The SetItemDirty method is used to prevent or force state management of specific properties, represented by <xref:System.Web.UI.StateItem> objects in the <xref:System.Web.UI.StateBag> collection."
  syntax:
    content: public void SetItemDirty (string key, bool dirty);
    parameters:
    - id: key
      type: System.String
      description: "The key that identifies which <xref href=&quot;System.Web.UI.StateItem&quot;></xref> in the <xref href=&quot;System.Web.UI.StateBag&quot;></xref> to set."
    - id: dirty
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to mark the state of the item as modified; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.StateBag.SetItemDirty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateBag.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Web.UI.StateBag
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: StateBag.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.StateBag.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "For a description of this member, see &lt;xref:System.Collections.ICollection.CopyTo%2A?displayProperty=fullName&gt;."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.StateBag> instance is cast to an <xref:System.Collections.ICollection> interface."
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "The one-dimensional <xref:System.Array> that is the destination of the elements copied from <xref:System.Collections.ICollection>. The <xref:System.Array> must have zero-based indexing."
    - id: index
      type: System.Int32
      description: "The zero-based index in `array` at which copying begins."
  overload: System.Web.UI.StateBag.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateBag.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Web.UI.StateBag
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: StateBag.System.Collections.ICollection.IsSynchronized
  fullName: System.Web.UI.StateBag.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "For a description of this member, see &lt;xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName&gt;."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.StateBag> instance is cast to an <xref:System.Collections.ICollection> interface."
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if access to the <xref:System.Collections.ICollection> is synchronized (thread safe); otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.StateBag.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateBag.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Web.UI.StateBag
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: StateBag.System.Collections.ICollection.SyncRoot
  fullName: System.Web.UI.StateBag.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "For a description of this member, see &lt;xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName&gt;."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.StateBag> instance is cast to an <xref:System.Collections.ICollection> interface."
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "An object that can be used to synchronize access to the <xref:System.Collections.ICollection>."
  overload: System.Web.UI.StateBag.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateBag.System#Collections#IDictionary#Add(System.Object,System.Object)
  id: System#Collections#IDictionary#Add(System.Object,System.Object)
  isEii: true
  parent: System.Web.UI.StateBag
  langs:
  - csharp
  name: System.Collections.IDictionary.Add(Object,Object)
  nameWithType: StateBag.System.Collections.IDictionary.Add(Object,Object)
  fullName: System.Web.UI.StateBag.System.Collections.IDictionary.Add(Object,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "For a description of this member, see &lt;xref:System.Collections.IDictionary.Add%2A?displayProperty=fullName&gt;."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.StateBag> instance is cast to an <xref:System.Collections.IDictionary> interface."
  syntax:
    content: void IDictionary.Add (object key, object value);
    parameters:
    - id: key
      type: System.Object
      description: "The <xref:System.Object> to use as the key of the element to add."
    - id: value
      type: System.Object
      description: "The <xref:System.Object> to use as the value of the element to add."
  overload: System.Web.UI.StateBag.System#Collections#IDictionary#Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateBag.System#Collections#IDictionary#Contains(System.Object)
  id: System#Collections#IDictionary#Contains(System.Object)
  isEii: true
  parent: System.Web.UI.StateBag
  langs:
  - csharp
  name: System.Collections.IDictionary.Contains(Object)
  nameWithType: StateBag.System.Collections.IDictionary.Contains(Object)
  fullName: System.Web.UI.StateBag.System.Collections.IDictionary.Contains(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "For a description of this member, see &lt;xref:System.Collections.IDictionary.Contains%2A?displayProperty=fullName&gt;."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.StateBag> instance is cast to an <xref:System.Collections.IDictionary> interface."
  syntax:
    content: bool IDictionary.Contains (object key);
    parameters:
    - id: key
      type: System.Object
      description: "The key to locate in the <xref:System.Collections.IDictionary> object."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref:System.Collections.IDictionary> contains an element with the key; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.StateBag.System#Collections#IDictionary#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateBag.System#Collections#IDictionary#IsFixedSize
  id: System#Collections#IDictionary#IsFixedSize
  isEii: true
  parent: System.Web.UI.StateBag
  langs:
  - csharp
  name: System.Collections.IDictionary.IsFixedSize
  nameWithType: StateBag.System.Collections.IDictionary.IsFixedSize
  fullName: System.Web.UI.StateBag.System.Collections.IDictionary.IsFixedSize
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "For a description of this member, see &lt;xref:System.Collections.IDictionary.IsFixedSize%2A?displayProperty=fullName&gt;."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.StateBag> instance is cast to an <xref:System.Collections.IDictionary> interface."
  syntax:
    content: bool System.Collections.IDictionary.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref:System.Collections.IDictionary> object has a fixed size; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.StateBag.System#Collections#IDictionary#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateBag.System#Collections#IDictionary#IsReadOnly
  id: System#Collections#IDictionary#IsReadOnly
  isEii: true
  parent: System.Web.UI.StateBag
  langs:
  - csharp
  name: System.Collections.IDictionary.IsReadOnly
  nameWithType: StateBag.System.Collections.IDictionary.IsReadOnly
  fullName: System.Web.UI.StateBag.System.Collections.IDictionary.IsReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "For a description of this member, see &lt;xref:System.Collections.IDictionary.IsReadOnly%2A?displayProperty=fullName&gt;."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.StateBag> instance is cast to an <xref:System.Collections.IDictionary> interface."
  syntax:
    content: bool System.Collections.IDictionary.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref:System.Collections.IDictionary> object is read-only; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.StateBag.System#Collections#IDictionary#IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateBag.System#Collections#IDictionary#Item(System.Object)
  id: System#Collections#IDictionary#Item(System.Object)
  isEii: true
  parent: System.Web.UI.StateBag
  langs:
  - csharp
  name: System.Collections.IDictionary.Item(Object)
  nameWithType: StateBag.System.Collections.IDictionary.Item(Object)
  fullName: System.Web.UI.StateBag.System.Collections.IDictionary.Item(Object)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "For a description of this member, see &lt;xref:System.Collections.IDictionary.Item%2A?displayProperty=fullName&gt;."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.StateBag> instance is cast to an <xref:System.Collections.IDictionary> interface."
  syntax:
    content: object System.Collections.IDictionary.Item[object key] { get; set; }
    parameters:
    - id: key
      type: System.Object
      description: "The key of the element to get."
    return:
      type: System.Object
      description: "The element with the specified <code>key</code>."
  overload: System.Web.UI.StateBag.System#Collections#IDictionary#Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateBag.System#Collections#IDictionary#Remove(System.Object)
  id: System#Collections#IDictionary#Remove(System.Object)
  isEii: true
  parent: System.Web.UI.StateBag
  langs:
  - csharp
  name: System.Collections.IDictionary.Remove(Object)
  nameWithType: StateBag.System.Collections.IDictionary.Remove(Object)
  fullName: System.Web.UI.StateBag.System.Collections.IDictionary.Remove(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "For a description of this member, see <xref:System.Collections.IDictionary.Remove*>."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.StateBag> instance is cast to an <xref:System.Collections.IDictionary> interface."
  syntax:
    content: void IDictionary.Remove (object key);
    parameters:
    - id: key
      type: System.Object
      description: "The key of the element to remove."
  overload: System.Web.UI.StateBag.System#Collections#IDictionary#Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateBag.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Web.UI.StateBag
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: StateBag.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Web.UI.StateBag.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "For a description of this member, see &lt;xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=fullName&gt;."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.StateBag> instance is cast to an <xref:System.Collections.IEnumerable> interface."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "An <xref:System.Collections.IEnumerator> that can be used to iterate through the collection."
  overload: System.Web.UI.StateBag.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateBag.System#Web#UI#IStateManager#IsTrackingViewState
  id: System#Web#UI#IStateManager#IsTrackingViewState
  isEii: true
  parent: System.Web.UI.StateBag
  langs:
  - csharp
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: StateBag.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.StateBag.System.Web.UI.IStateManager.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gets a value indicating whether state changes are being tracked."
  syntax:
    content: bool System.Web.UI.IStateManager.IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref href=&quot;System.Web.UI.StateBag&quot;></xref> is marked to save changes to its state; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.StateBag.System#Web#UI#IStateManager#IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateBag.System#Web#UI#IStateManager#LoadViewState(System.Object)
  id: System#Web#UI#IStateManager#LoadViewState(System.Object)
  isEii: true
  parent: System.Web.UI.StateBag
  langs:
  - csharp
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: StateBag.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.StateBag.System.Web.UI.IStateManager.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Restores the previously saved view state of the <xref href=&quot;System.Web.UI.StateBag&quot;></xref> object."
  remarks: "This method restores view-state information for the <xref:System.Web.UI.StateBag> object from a previous page request that was saved by the <xref:System.Web.UI.StateBag.System%23Web%23UI%23IStateManager%23SaveViewState%2A> method.       This method is primarily used by control developers. You can override this method to control how a custom server control restores its view state. For more information, see [ASP.NET State Management Overview](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: void IStateManager.LoadViewState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "An object that represents the <xref href=&quot;System.Web.UI.StateBag&quot;></xref> state to restore."
  overload: System.Web.UI.StateBag.System#Web#UI#IStateManager#LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateBag.System#Web#UI#IStateManager#SaveViewState
  id: System#Web#UI#IStateManager#SaveViewState
  isEii: true
  parent: System.Web.UI.StateBag
  langs:
  - csharp
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: StateBag.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.StateBag.System.Web.UI.IStateManager.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Saves the changes to the <xref href=&quot;System.Web.UI.StateBag&quot;></xref> object since the time the page was posted back to the server."
  remarks: "This method is primarily used by control developers.       View state is the accumulation of the values of a server control&quot;s properties. These values are automatically placed in the server control&quot;s <xref:System.Web.UI.Control.ViewState%2A> property, which is an instance of the <xref:System.Web.UI.StateBag> class. This property&quot;s value is then persisted to a string object after the save state stage of the server control life cycle. For more information, see [NIB: ASP.NET Web Server Controls](http://msdn.microsoft.com/en-us/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1).       When view state is saved, this string object is returned to the client as a variable that is stored in an HTML `Hidden` element. When you author custom server controls, you can improve efficiency by overriding this method and modifying your server control&quot;s <xref:System.Web.UI.Control.ViewState%2A> property. For more information, see [NIB: ASP.NET Web Server Controls](http://msdn.microsoft.com/en-us/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1) and [ASP.NET State Management Overview](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: object IStateManager.SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "The object that contains the changes to the view state of the <xref href=&quot;System.Web.UI.StateBag&quot;></xref>. If there are no changes, or there are no <xref href=&quot;System.Web.UI.StateItem&quot;></xref> elements in the <xref href=&quot;System.Web.UI.StateBag&quot;></xref>, this method returns <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.StateBag.System#Web#UI#IStateManager#SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateBag.System#Web#UI#IStateManager#TrackViewState
  id: System#Web#UI#IStateManager#TrackViewState
  isEii: true
  parent: System.Web.UI.StateBag
  langs:
  - csharp
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: StateBag.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.StateBag.System.Web.UI.IStateManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Causes the <xref href=&quot;System.Web.UI.StateBag&quot;></xref> object to track changes to its state so that it can be persisted across requests."
  syntax:
    content: void IStateManager.TrackViewState ();
    parameters: []
  overload: System.Web.UI.StateBag.System#Web#UI#IStateManager#TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.StateBag.Values
  id: Values
  parent: System.Web.UI.StateBag
  langs:
  - csharp
  name: Values
  nameWithType: StateBag.Values
  fullName: System.Web.UI.StateBag.Values
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gets a collection of the view-state values stored in the <xref href=&quot;System.Web.UI.StateBag&quot;></xref> object."
  remarks: "This is a collection that contains the values for all the <xref:System.Web.UI.StateItem> objects in the specified page or control. You can iterate through these values by using the <xref:System.Web.UI.StateBag.GetEnumerator%2A?displayProperty=fullName> method."
  example:
  - "The following code example demonstrates using the Values property.  \n  \n [!code-vb[Web.UI.StateBag#2](~/add/codesnippet/visualbasic/p-system.web.ui.statebag_1_1.aspx)]\n [!code-cs[Web.UI.StateBag#2](~/add/codesnippet/csharp/p-system.web.ui.statebag_1_1.aspx)]"
  syntax:
    content: public System.Collections.ICollection Values { get; }
    return:
      type: System.Collections.ICollection
      description: "The collection of view-state values."
  overload: System.Web.UI.StateBag.Values*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.UI.StateBag.#ctor
  parent: System.Web.UI.StateBag
  isExternal: false
  name: StateBag()
  nameWithType: StateBag.StateBag()
  fullName: System.Web.UI.StateBag.StateBag()
- uid: System.Web.UI.StateBag.#ctor(System.Boolean)
  parent: System.Web.UI.StateBag
  isExternal: false
  name: StateBag(Boolean)
  nameWithType: StateBag.StateBag(Boolean)
  fullName: System.Web.UI.StateBag.StateBag(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.StateBag.Add(System.String,System.Object)
  parent: System.Web.UI.StateBag
  isExternal: false
  name: Add(String,Object)
  nameWithType: StateBag.Add(String,Object)
  fullName: System.Web.UI.StateBag.Add(String,Object)
- uid: System.Web.UI.StateItem
  parent: System.Web.UI
  isExternal: false
  name: StateItem
  nameWithType: StateItem
  fullName: System.Web.UI.StateItem
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.StateBag.Clear
  parent: System.Web.UI.StateBag
  isExternal: false
  name: Clear()
  nameWithType: StateBag.Clear()
  fullName: System.Web.UI.StateBag.Clear()
- uid: System.Web.UI.StateBag.Count
  parent: System.Web.UI.StateBag
  isExternal: false
  name: Count
  nameWithType: StateBag.Count
  fullName: System.Web.UI.StateBag.Count
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.StateBag.GetEnumerator
  parent: System.Web.UI.StateBag
  isExternal: false
  name: GetEnumerator()
  nameWithType: StateBag.GetEnumerator()
  fullName: System.Web.UI.StateBag.GetEnumerator()
- uid: System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: true
  name: IDictionaryEnumerator
  nameWithType: IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
- uid: System.Web.UI.StateBag.IsItemDirty(System.String)
  parent: System.Web.UI.StateBag
  isExternal: false
  name: IsItemDirty(String)
  nameWithType: StateBag.IsItemDirty(String)
  fullName: System.Web.UI.StateBag.IsItemDirty(String)
- uid: System.Web.UI.StateBag.Item(System.String)
  parent: System.Web.UI.StateBag
  isExternal: false
  name: Item(String)
  nameWithType: StateBag.Item(String)
  fullName: System.Web.UI.StateBag.Item(String)
- uid: System.Web.UI.StateBag.Keys
  parent: System.Web.UI.StateBag
  isExternal: false
  name: Keys
  nameWithType: StateBag.Keys
  fullName: System.Web.UI.StateBag.Keys
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Web.UI.StateBag.Remove(System.String)
  parent: System.Web.UI.StateBag
  isExternal: false
  name: Remove(String)
  nameWithType: StateBag.Remove(String)
  fullName: System.Web.UI.StateBag.Remove(String)
- uid: System.Web.UI.StateBag.SetDirty(System.Boolean)
  parent: System.Web.UI.StateBag
  isExternal: false
  name: SetDirty(Boolean)
  nameWithType: StateBag.SetDirty(Boolean)
  fullName: System.Web.UI.StateBag.SetDirty(Boolean)
- uid: System.Web.UI.StateBag.SetItemDirty(System.String,System.Boolean)
  parent: System.Web.UI.StateBag
  isExternal: false
  name: SetItemDirty(String,Boolean)
  nameWithType: StateBag.SetItemDirty(String,Boolean)
  fullName: System.Web.UI.StateBag.SetItemDirty(String,Boolean)
- uid: System.Web.UI.StateBag.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.StateBag
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: StateBag.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.StateBag.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Web.UI.StateBag.System#Collections#ICollection#IsSynchronized
  parent: System.Web.UI.StateBag
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: StateBag.System.Collections.ICollection.IsSynchronized
  fullName: System.Web.UI.StateBag.System.Collections.ICollection.IsSynchronized
- uid: System.Web.UI.StateBag.System#Collections#ICollection#SyncRoot
  parent: System.Web.UI.StateBag
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: StateBag.System.Collections.ICollection.SyncRoot
  fullName: System.Web.UI.StateBag.System.Collections.ICollection.SyncRoot
- uid: System.Web.UI.StateBag.System#Collections#IDictionary#Add(System.Object,System.Object)
  parent: System.Web.UI.StateBag
  isExternal: false
  name: System.Collections.IDictionary.Add(Object,Object)
  nameWithType: StateBag.System.Collections.IDictionary.Add(Object,Object)
  fullName: System.Web.UI.StateBag.System.Collections.IDictionary.Add(Object,Object)
- uid: System.Web.UI.StateBag.System#Collections#IDictionary#Contains(System.Object)
  parent: System.Web.UI.StateBag
  isExternal: false
  name: System.Collections.IDictionary.Contains(Object)
  nameWithType: StateBag.System.Collections.IDictionary.Contains(Object)
  fullName: System.Web.UI.StateBag.System.Collections.IDictionary.Contains(Object)
- uid: System.Web.UI.StateBag.System#Collections#IDictionary#IsFixedSize
  parent: System.Web.UI.StateBag
  isExternal: false
  name: System.Collections.IDictionary.IsFixedSize
  nameWithType: StateBag.System.Collections.IDictionary.IsFixedSize
  fullName: System.Web.UI.StateBag.System.Collections.IDictionary.IsFixedSize
- uid: System.Web.UI.StateBag.System#Collections#IDictionary#IsReadOnly
  parent: System.Web.UI.StateBag
  isExternal: false
  name: System.Collections.IDictionary.IsReadOnly
  nameWithType: StateBag.System.Collections.IDictionary.IsReadOnly
  fullName: System.Web.UI.StateBag.System.Collections.IDictionary.IsReadOnly
- uid: System.Web.UI.StateBag.System#Collections#IDictionary#Item(System.Object)
  parent: System.Web.UI.StateBag
  isExternal: false
  name: System.Collections.IDictionary.Item(Object)
  nameWithType: StateBag.System.Collections.IDictionary.Item(Object)
  fullName: System.Web.UI.StateBag.System.Collections.IDictionary.Item(Object)
- uid: System.Web.UI.StateBag.System#Collections#IDictionary#Remove(System.Object)
  parent: System.Web.UI.StateBag
  isExternal: false
  name: System.Collections.IDictionary.Remove(Object)
  nameWithType: StateBag.System.Collections.IDictionary.Remove(Object)
  fullName: System.Web.UI.StateBag.System.Collections.IDictionary.Remove(Object)
- uid: System.Web.UI.StateBag.System#Collections#IEnumerable#GetEnumerator
  parent: System.Web.UI.StateBag
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: StateBag.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Web.UI.StateBag.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.UI.StateBag.System#Web#UI#IStateManager#IsTrackingViewState
  parent: System.Web.UI.StateBag
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: StateBag.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.StateBag.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.StateBag.System#Web#UI#IStateManager#LoadViewState(System.Object)
  parent: System.Web.UI.StateBag
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: StateBag.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.StateBag.System.Web.UI.IStateManager.LoadViewState(Object)
- uid: System.Web.UI.StateBag.System#Web#UI#IStateManager#SaveViewState
  parent: System.Web.UI.StateBag
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: StateBag.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.StateBag.System.Web.UI.IStateManager.SaveViewState()
- uid: System.Web.UI.StateBag.System#Web#UI#IStateManager#TrackViewState
  parent: System.Web.UI.StateBag
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: StateBag.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.StateBag.System.Web.UI.IStateManager.TrackViewState()
- uid: System.Web.UI.StateBag.Values
  parent: System.Web.UI.StateBag
  isExternal: false
  name: Values
  nameWithType: StateBag.Values
  fullName: System.Web.UI.StateBag.Values
- uid: System.Web.UI.StateBag.#ctor*
  parent: System.Web.UI.StateBag
  isExternal: false
  name: StateBag
  nameWithType: StateBag.StateBag
- uid: System.Web.UI.StateBag.Add*
  parent: System.Web.UI.StateBag
  isExternal: false
  name: Add
  nameWithType: StateBag.Add
- uid: System.Web.UI.StateBag.Clear*
  parent: System.Web.UI.StateBag
  isExternal: false
  name: Clear
  nameWithType: StateBag.Clear
- uid: System.Web.UI.StateBag.Count*
  parent: System.Web.UI.StateBag
  isExternal: false
  name: Count
  nameWithType: StateBag.Count
- uid: System.Web.UI.StateBag.GetEnumerator*
  parent: System.Web.UI.StateBag
  isExternal: false
  name: GetEnumerator
  nameWithType: StateBag.GetEnumerator
- uid: System.Web.UI.StateBag.IsItemDirty*
  parent: System.Web.UI.StateBag
  isExternal: false
  name: IsItemDirty
  nameWithType: StateBag.IsItemDirty
- uid: System.Web.UI.StateBag.Item*
  parent: System.Web.UI.StateBag
  isExternal: false
  name: Item
  nameWithType: StateBag.Item
- uid: System.Web.UI.StateBag.Keys*
  parent: System.Web.UI.StateBag
  isExternal: false
  name: Keys
  nameWithType: StateBag.Keys
- uid: System.Web.UI.StateBag.Remove*
  parent: System.Web.UI.StateBag
  isExternal: false
  name: Remove
  nameWithType: StateBag.Remove
- uid: System.Web.UI.StateBag.SetDirty*
  parent: System.Web.UI.StateBag
  isExternal: false
  name: SetDirty
  nameWithType: StateBag.SetDirty
- uid: System.Web.UI.StateBag.SetItemDirty*
  parent: System.Web.UI.StateBag
  isExternal: false
  name: SetItemDirty
  nameWithType: StateBag.SetItemDirty
- uid: System.Web.UI.StateBag.System#Collections#ICollection#CopyTo*
  parent: System.Web.UI.StateBag
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: StateBag.System.Collections.ICollection.CopyTo
- uid: System.Web.UI.StateBag.System#Collections#ICollection#IsSynchronized*
  parent: System.Web.UI.StateBag
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: StateBag.System.Collections.ICollection.IsSynchronized
- uid: System.Web.UI.StateBag.System#Collections#ICollection#SyncRoot*
  parent: System.Web.UI.StateBag
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: StateBag.System.Collections.ICollection.SyncRoot
- uid: System.Web.UI.StateBag.System#Collections#IDictionary#Add*
  parent: System.Web.UI.StateBag
  isExternal: false
  name: System.Collections.IDictionary.Add
  nameWithType: StateBag.System.Collections.IDictionary.Add
- uid: System.Web.UI.StateBag.System#Collections#IDictionary#Contains*
  parent: System.Web.UI.StateBag
  isExternal: false
  name: System.Collections.IDictionary.Contains
  nameWithType: StateBag.System.Collections.IDictionary.Contains
- uid: System.Web.UI.StateBag.System#Collections#IDictionary#IsFixedSize*
  parent: System.Web.UI.StateBag
  isExternal: false
  name: System.Collections.IDictionary.IsFixedSize
  nameWithType: StateBag.System.Collections.IDictionary.IsFixedSize
- uid: System.Web.UI.StateBag.System#Collections#IDictionary#IsReadOnly*
  parent: System.Web.UI.StateBag
  isExternal: false
  name: System.Collections.IDictionary.IsReadOnly
  nameWithType: StateBag.System.Collections.IDictionary.IsReadOnly
- uid: System.Web.UI.StateBag.System#Collections#IDictionary#Item*
  parent: System.Web.UI.StateBag
  isExternal: false
  name: System.Collections.IDictionary.Item
  nameWithType: StateBag.System.Collections.IDictionary.Item
- uid: System.Web.UI.StateBag.System#Collections#IDictionary#Remove*
  parent: System.Web.UI.StateBag
  isExternal: false
  name: System.Collections.IDictionary.Remove
  nameWithType: StateBag.System.Collections.IDictionary.Remove
- uid: System.Web.UI.StateBag.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Web.UI.StateBag
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: StateBag.System.Collections.IEnumerable.GetEnumerator
- uid: System.Web.UI.StateBag.System#Web#UI#IStateManager#IsTrackingViewState*
  parent: System.Web.UI.StateBag
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: StateBag.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.StateBag.System#Web#UI#IStateManager#LoadViewState*
  parent: System.Web.UI.StateBag
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState
  nameWithType: StateBag.System.Web.UI.IStateManager.LoadViewState
- uid: System.Web.UI.StateBag.System#Web#UI#IStateManager#SaveViewState*
  parent: System.Web.UI.StateBag
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState
  nameWithType: StateBag.System.Web.UI.IStateManager.SaveViewState
- uid: System.Web.UI.StateBag.System#Web#UI#IStateManager#TrackViewState*
  parent: System.Web.UI.StateBag
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState
  nameWithType: StateBag.System.Web.UI.IStateManager.TrackViewState
- uid: System.Web.UI.StateBag.Values*
  parent: System.Web.UI.StateBag
  isExternal: false
  name: Values
  nameWithType: StateBag.Values
