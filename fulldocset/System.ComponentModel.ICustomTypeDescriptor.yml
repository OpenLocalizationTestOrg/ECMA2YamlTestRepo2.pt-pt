### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.ICustomTypeDescriptor
  id: ICustomTypeDescriptor
  children:
  - System.ComponentModel.ICustomTypeDescriptor.GetAttributes
  - System.ComponentModel.ICustomTypeDescriptor.GetClassName
  - System.ComponentModel.ICustomTypeDescriptor.GetComponentName
  - System.ComponentModel.ICustomTypeDescriptor.GetConverter
  - System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent
  - System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty
  - System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)
  - System.ComponentModel.ICustomTypeDescriptor.GetEvents
  - System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])
  - System.ComponentModel.ICustomTypeDescriptor.GetProperties
  - System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])
  - System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
  langs:
  - csharp
  name: ICustomTypeDescriptor
  nameWithType: ICustomTypeDescriptor
  fullName: System.ComponentModel.ICustomTypeDescriptor
  type: Interface
  summary: "Fornece uma interface que fornece informações sobre o tipo personalizado dinâmico para um objeto."
  remarks: "A interface ICustomTypeDescriptor permite que um objeto de tipo de informações sobre si próprio. Normalmente, esta interface é utilizada quando um objeto precisa de informações de tipo dinâmico. Em contrapartida, o <xref:System.ComponentModel.TypeDescriptor>classe fornece informações de tipo estático que são obtidas a partir de metadados.</xref:System.ComponentModel.TypeDescriptor>       Por exemplo, ICustomTypeDescriptor é utilizada no [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] para fornecer informações de tipo para objectos COM. Objectos COM não suporta propriedades ou atributos. Por conseguinte, o [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] utiliza ICustomTypeDescriptor para implementar as propriedades e os atributos de objectos COM.       Para fornecer informações de tipo personalizado dinâmico, uma classe pode implementar ICustomTypeDescriptor ou derivar de <xref:System.ComponentModel.CustomTypeDescriptor>classe, que fornece uma implementação simple desta interface.</xref:System.ComponentModel.CustomTypeDescriptor>      > [!NOTE] > Não são suportadas para o enlace de dados para objetos que implementem a interface ICustomTypeDescriptor momento da concepção. Além disso, quando se vincula a uma instância de tempo de execução do ICustomTypeDescriptor, propriedades públicas do tipo subjacente são ignoradas."
  syntax:
    content: public interface ICustomTypeDescriptor
  implements: []
  platform:
  - net462
- uid: System.ComponentModel.ICustomTypeDescriptor.GetAttributes
  id: GetAttributes
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  name: GetAttributes()
  nameWithType: ICustomTypeDescriptor.GetAttributes()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetAttributes()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Devolve um conjunto de atributos personalizados para esta instância de um componente."
  remarks: "O valor de retorno nunca se `null`.       Os implementadores podem devolver vazio <xref:System.ComponentModel.AttributeCollection>se não existem atributos personalizados foram especificados para um objeto.</xref:System.ComponentModel.AttributeCollection>"
  syntax:
    content: public System.ComponentModel.AttributeCollection GetAttributes ();
    parameters: []
    return:
      type: System.ComponentModel.AttributeCollection
      description: "Um <xref href=&quot;System.ComponentModel.AttributeCollection&quot;> </xref> que contém os atributos para este objeto."
  overload: System.ComponentModel.ICustomTypeDescriptor.GetAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ICustomTypeDescriptor.GetClassName
  id: GetClassName
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  name: GetClassName()
  nameWithType: ICustomTypeDescriptor.GetClassName()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetClassName()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Devolve o nome de classe desta instância de um componente."
  remarks: "Se `null` é devolvido, utilize o nome do tipo do <xref:System.ComponentModel.ICustomTypeDescriptor.GetComponentName%2A>método.</xref:System.ComponentModel.ICustomTypeDescriptor.GetComponentName%2A>"
  syntax:
    content: public string GetClassName ();
    parameters: []
    return:
      type: System.String
      description: "O nome da classe do objeto, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se a classe não tem um nome."
  overload: System.ComponentModel.ICustomTypeDescriptor.GetClassName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ICustomTypeDescriptor.GetComponentName
  id: GetComponentName
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  name: GetComponentName()
  nameWithType: ICustomTypeDescriptor.GetComponentName()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetComponentName()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Devolve o nome desta instância de um componente."
  remarks: "Se `null` é devolvido, utilize o nome predefinido."
  syntax:
    content: public string GetComponentName ();
    parameters: []
    return:
      type: System.String
      description: "O nome do objeto, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o objeto não tem um nome."
  overload: System.ComponentModel.ICustomTypeDescriptor.GetComponentName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ICustomTypeDescriptor.GetConverter
  id: GetConverter
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  name: GetConverter()
  nameWithType: ICustomTypeDescriptor.GetConverter()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetConverter()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Devolve um conversor de tipos para esta instância de um componente."
  remarks: "Se `null` é devolvido, utilize a predefinição <xref:System.ComponentModel.TypeConverter>.</xref:System.ComponentModel.TypeConverter>"
  syntax:
    content: public System.ComponentModel.TypeConverter GetConverter ();
    parameters: []
    return:
      type: System.ComponentModel.TypeConverter
      description: "A <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> que é o conversor para este objeto ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se não houver nenhuma <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> para este objeto."
  overload: System.ComponentModel.ICustomTypeDescriptor.GetConverter*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent
  id: GetDefaultEvent
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  name: GetDefaultEvent()
  nameWithType: ICustomTypeDescriptor.GetDefaultEvent()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Devolve o evento de predefinido para esta instância de um componente."
  syntax:
    content: public System.ComponentModel.EventDescriptor GetDefaultEvent ();
    parameters: []
    return:
      type: System.ComponentModel.EventDescriptor
      description: "Um <xref href=&quot;System.ComponentModel.EventDescriptor&quot;> </xref> que representa o evento de predefinido para este objeto ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se este objeto não tem eventos."
  overload: System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty
  id: GetDefaultProperty
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  name: GetDefaultProperty()
  nameWithType: ICustomTypeDescriptor.GetDefaultProperty()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Devolve a propriedade predefinida para esta instância de um componente."
  syntax:
    content: public System.ComponentModel.PropertyDescriptor GetDefaultProperty ();
    parameters: []
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> que representa a propriedade predefinida para este objeto ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se este objeto não tem propriedades."
  overload: System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)
  id: GetEditor(System.Type)
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  name: GetEditor(Type)
  nameWithType: ICustomTypeDescriptor.GetEditor(Type)
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetEditor(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Devolve um editor do tipo especificado para esta instância de um componente."
  remarks: "O tipo do `editorBaseType` parâmetro é normalmente <xref:System.Drawing.Design.UITypeEditor>, mas também pode utilizar outros tipos (por exemplo, <xref:System.ComponentModel.ComponentEditor>e <xref:System.ComponentModel.InstanceCreationEditor>).</xref:System.ComponentModel.InstanceCreationEditor> </xref:System.ComponentModel.ComponentEditor> </xref:System.Drawing.Design.UITypeEditor>"
  syntax:
    content: public object GetEditor (Type editorBaseType);
    parameters:
    - id: editorBaseType
      type: System.Type
      description: "A <xref:System.Type>que representa o editor para este objeto.</xref:System.Type>"
    return:
      type: System.Object
      description: "Um <xref:System.Object>do tipo especificado que é o editor para este objeto ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se não for encontrado o editor.</xref:System.Object>"
  overload: System.ComponentModel.ICustomTypeDescriptor.GetEditor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ICustomTypeDescriptor.GetEvents
  id: GetEvents
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  name: GetEvents()
  nameWithType: ICustomTypeDescriptor.GetEvents()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetEvents()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Devolve os eventos para esta instância de um componente."
  remarks: "Os eventos para esta instância podem ser diferente do conjunto de eventos que fornece a classe. Por exemplo, se o componente é baseado no site, o site pode adicionar ou remover eventos adicionais.       Pode devolver implementors <xref:System.ComponentModel.EventDescriptorCollection?displayProperty=fullName>se não foram especificadas propriedades.</xref:System.ComponentModel.EventDescriptorCollection?displayProperty=fullName> Este método nunca deverá devolver `null`."
  syntax:
    content: public System.ComponentModel.EventDescriptorCollection GetEvents ();
    parameters: []
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: "Um <xref href=&quot;System.ComponentModel.EventDescriptorCollection&quot;> </xref> que representa os eventos para esta instância do componente."
  overload: System.ComponentModel.ICustomTypeDescriptor.GetEvents*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])
  id: GetEvents(System.Attribute[])
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  name: GetEvents(Attribute[])
  nameWithType: ICustomTypeDescriptor.GetEvents(Attribute[])
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetEvents(Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Devolve os eventos para esta instância de um componente com a matriz de atributo especificado como um filtro."
  remarks: "Os eventos para esta instância podem ser diferente do conjunto de eventos que fornece a classe. Por exemplo, se o componente é baseado no site, o site pode adicionar ou remover eventos adicionais.       Se um <xref:System.Attribute>especificado no `attributes` matriz e o evento não tem uma instância de classe para esse atributo, a matriz devolvida inclui o evento se o <xref:System.Attribute>é o evento de predefinição.</xref:System.Attribute> </xref:System.Attribute>"
  syntax:
    content: public System.ComponentModel.EventDescriptorCollection GetEvents (Attribute[] attributes);
    parameters:
    - id: attributes
      type: System.Attribute[]
      description: "Uma matriz do tipo <xref:System.Attribute>que é utilizado como um filtro.</xref:System.Attribute>"
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: "Um <xref href=&quot;System.ComponentModel.EventDescriptorCollection&quot;> </xref> que representa os eventos filtrados para esta instância do componente."
  overload: System.ComponentModel.ICustomTypeDescriptor.GetEvents*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ICustomTypeDescriptor.GetProperties
  id: GetProperties
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  name: GetProperties()
  nameWithType: ICustomTypeDescriptor.GetProperties()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetProperties()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Devolve as propriedades para esta instância de um componente."
  remarks: "As propriedades para esta instância podem ser diferente do conjunto de propriedades que fornece a classe. Por exemplo, se o componente está sited, o site pode adicionar ou remover propriedades adicionais.       Os implementadores podem devolver <xref:System.ComponentModel.PropertyDescriptorCollection?displayProperty=fullName>se não foram especificadas propriedades.</xref:System.ComponentModel.PropertyDescriptorCollection?displayProperty=fullName> Este método nunca deverá devolver `null`."
  syntax:
    content: public System.ComponentModel.PropertyDescriptorCollection GetProperties ();
    parameters: []
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> que representa as propriedades para esta instância do componente."
  overload: System.ComponentModel.ICustomTypeDescriptor.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])
  id: GetProperties(System.Attribute[])
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  name: GetProperties(Attribute[])
  nameWithType: ICustomTypeDescriptor.GetProperties(Attribute[])
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetProperties(Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Devolve as propriedades para esta instância de um componente com a matriz de atributo como um filtro."
  remarks: "As propriedades para esta instância podem ser diferente do conjunto de propriedades que fornece a classe. Por exemplo, se o componente está sited, o site pode adicionar ou remover propriedades adicionais.       Se um <xref:System.Attribute>especificado no `attributes` matriz e a propriedade não tem uma instância de classe para esse atributo, a coleção devolvida incluirá a propriedade se o <xref:System.Attribute>é a propriedade predefinida.</xref:System.Attribute> </xref:System.Attribute>       Para regras de filtragem, consulte <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>.</xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>"
  syntax:
    content: public System.ComponentModel.PropertyDescriptorCollection GetProperties (Attribute[] attributes);
    parameters:
    - id: attributes
      type: System.Attribute[]
      description: "Uma matriz do tipo <xref:System.Attribute>que é utilizado como um filtro.</xref:System.Attribute>"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> que representa as propriedades filtradas para esta instância do componente."
  overload: System.ComponentModel.ICustomTypeDescriptor.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
  id: GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.ICustomTypeDescriptor
  langs:
  - csharp
  name: GetPropertyOwner(PropertyDescriptor)
  nameWithType: ICustomTypeDescriptor.GetPropertyOwner(PropertyDescriptor)
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(PropertyDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Devolve um objeto que contém a propriedade descrita através de descritor de propriedade especificado."
  remarks: "O método GetPropertyOwner obtém o objeto que contém o membro de propriedade que é descrito por <xref:System.ComponentModel.PropertyDescriptor>parâmetro.</xref:System.ComponentModel.PropertyDescriptor> Normalmente, este objeto é necessário para o <xref:System.ComponentModel.PropertyDescriptor.GetValue%2A?displayProperty=fullName>e <xref:System.ComponentModel.PropertyDescriptor.SetValue%2A?displayProperty=fullName>métodos.</xref:System.ComponentModel.PropertyDescriptor.SetValue%2A?displayProperty=fullName> </xref:System.ComponentModel.PropertyDescriptor.GetValue%2A?displayProperty=fullName>       Este método deverá devolver um objeto que pode utilizar o seguinte: ```   pd.GetValue(GetPropertyOwner(myPd));   ``` se `myPd` é `null`, a implementação do <xref:System.ComponentModel.ICustomTypeDescriptor>interface deverá devolver o objecto predefinido (normalmente, o objeto de base que expõe as propriedades e atributos).</xref:System.ComponentModel.ICustomTypeDescriptor>"
  syntax:
    content: public object GetPropertyOwner (System.ComponentModel.PropertyDescriptor pd);
    parameters:
    - id: pd
      type: System.ComponentModel.PropertyDescriptor
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> que representa a propriedade cujo proprietário é possível encontrar."
    return:
      type: System.Object
      description: "Um <xref:System.Object>que representa o proprietário da propriedade especificada.</xref:System.Object>"
  overload: System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.ICustomTypeDescriptor.GetAttributes
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetAttributes()
  nameWithType: ICustomTypeDescriptor.GetAttributes()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetAttributes()
- uid: System.ComponentModel.AttributeCollection
  parent: System.ComponentModel
  isExternal: false
  name: AttributeCollection
  nameWithType: AttributeCollection
  fullName: System.ComponentModel.AttributeCollection
- uid: System.ComponentModel.ICustomTypeDescriptor.GetClassName
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetClassName()
  nameWithType: ICustomTypeDescriptor.GetClassName()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetClassName()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.ICustomTypeDescriptor.GetComponentName
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetComponentName()
  nameWithType: ICustomTypeDescriptor.GetComponentName()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetComponentName()
- uid: System.ComponentModel.ICustomTypeDescriptor.GetConverter
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetConverter()
  nameWithType: ICustomTypeDescriptor.GetConverter()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetConverter()
- uid: System.ComponentModel.TypeConverter
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter
  nameWithType: TypeConverter
  fullName: System.ComponentModel.TypeConverter
- uid: System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetDefaultEvent()
  nameWithType: ICustomTypeDescriptor.GetDefaultEvent()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent()
- uid: System.ComponentModel.EventDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: EventDescriptor
  nameWithType: EventDescriptor
  fullName: System.ComponentModel.EventDescriptor
- uid: System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetDefaultProperty()
  nameWithType: ICustomTypeDescriptor.GetDefaultProperty()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty()
- uid: System.ComponentModel.PropertyDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor
- uid: System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetEditor(Type)
  nameWithType: ICustomTypeDescriptor.GetEditor(Type)
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetEditor(Type)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.ICustomTypeDescriptor.GetEvents
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetEvents()
  nameWithType: ICustomTypeDescriptor.GetEvents()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetEvents()
- uid: System.ComponentModel.EventDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: EventDescriptorCollection
  nameWithType: EventDescriptorCollection
  fullName: System.ComponentModel.EventDescriptorCollection
- uid: System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetEvents(Attribute[])
  nameWithType: ICustomTypeDescriptor.GetEvents(Attribute[])
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetEvents(Attribute[])
- uid: System.Attribute[]
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute[]
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.ICustomTypeDescriptor.GetProperties
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetProperties()
  nameWithType: ICustomTypeDescriptor.GetProperties()
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetProperties()
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetProperties(Attribute[])
  nameWithType: ICustomTypeDescriptor.GetProperties(Attribute[])
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetProperties(Attribute[])
- uid: System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetPropertyOwner(PropertyDescriptor)
  nameWithType: ICustomTypeDescriptor.GetPropertyOwner(PropertyDescriptor)
  fullName: System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(PropertyDescriptor)
- uid: System.ComponentModel.ICustomTypeDescriptor.GetAttributes*
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetAttributes
  nameWithType: ICustomTypeDescriptor.GetAttributes
- uid: System.ComponentModel.ICustomTypeDescriptor.GetClassName*
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetClassName
  nameWithType: ICustomTypeDescriptor.GetClassName
- uid: System.ComponentModel.ICustomTypeDescriptor.GetComponentName*
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetComponentName
  nameWithType: ICustomTypeDescriptor.GetComponentName
- uid: System.ComponentModel.ICustomTypeDescriptor.GetConverter*
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetConverter
  nameWithType: ICustomTypeDescriptor.GetConverter
- uid: System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent*
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetDefaultEvent
  nameWithType: ICustomTypeDescriptor.GetDefaultEvent
- uid: System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty*
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetDefaultProperty
  nameWithType: ICustomTypeDescriptor.GetDefaultProperty
- uid: System.ComponentModel.ICustomTypeDescriptor.GetEditor*
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetEditor
  nameWithType: ICustomTypeDescriptor.GetEditor
- uid: System.ComponentModel.ICustomTypeDescriptor.GetEvents*
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetEvents
  nameWithType: ICustomTypeDescriptor.GetEvents
- uid: System.ComponentModel.ICustomTypeDescriptor.GetProperties*
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetProperties
  nameWithType: ICustomTypeDescriptor.GetProperties
- uid: System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner*
  parent: System.ComponentModel.ICustomTypeDescriptor
  isExternal: false
  name: GetPropertyOwner
  nameWithType: ICustomTypeDescriptor.GetPropertyOwner
