### YamlMime:ManagedReference
items:
- uid: System.IO.Compression.ZipArchive
  id: ZipArchive
  children:
  - System.IO.Compression.ZipArchive.#ctor(System.IO.Stream)
  - System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode)
  - System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean)
  - System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean,System.Text.Encoding)
  - System.IO.Compression.ZipArchive.CreateEntry(System.String)
  - System.IO.Compression.ZipArchive.CreateEntry(System.String,System.IO.Compression.CompressionLevel)
  - System.IO.Compression.ZipArchive.Dispose
  - System.IO.Compression.ZipArchive.Dispose(System.Boolean)
  - System.IO.Compression.ZipArchive.Entries
  - System.IO.Compression.ZipArchive.GetEntry(System.String)
  - System.IO.Compression.ZipArchive.Mode
  langs:
  - csharp
  name: ZipArchive
  nameWithType: ZipArchive
  fullName: System.IO.Compression.ZipArchive
  type: Class
  summary: "Represents a package of compressed files in the zip archive format."
  remarks: "The methods for manipulating zip archives and their file entries are spread across three classes: <xref:System.IO.Compression.ZipFile>, ZipArchive, and <xref:System.IO.Compression.ZipArchiveEntry>.  \n  \n|To|Use|  \n|--------|---------|  \n|Create a zip archive from a directory|<xref:System.IO.Compression.ZipFile.CreateFromDirectory%2A?displayProperty=fullName>|  \n|Extract the contents of a zip archive to a directory|<xref:System.IO.Compression.ZipFile.ExtractToDirectory%2A?displayProperty=fullName>|  \n|Add new files to an existing zip archive|<xref:System.IO.Compression.ZipArchive.CreateEntry%2A?displayProperty=fullName>|  \n|Retrieve a file from a zip archive|<xref:System.IO.Compression.ZipArchive.GetEntry%2A?displayProperty=fullName>|  \n|Retrieve all the files from a zip archive|<xref:System.IO.Compression.ZipArchive.Entries%2A?displayProperty=fullName>|  \n|Open a stream to a single file contained in a zip archive|<xref:System.IO.Compression.ZipArchiveEntry.Open%2A?displayProperty=fullName>|  \n|Delete a file from a zip archive|<xref:System.IO.Compression.ZipArchiveEntry.Delete%2A?displayProperty=fullName>|  \n  \n When you create a new entry, the file is compressed and added to the zip package. The <xref:System.IO.Compression.ZipArchive.CreateEntry%2A> method enables you to specify a directory hierarchy when adding the entry. You include the relative path of the new entry within the zip package. For example, creating a new entry with a relative path of `AddedFolder\\NewFile.txt` creates a compressed text file in a directory named AddedFolder.  \n  \n If you reference the `System.IO.Compression.FileSystem` assembly in your project, you can access three extension methods (from the <xref:System.IO.Compression.ZipFileExtensions> class) for the ZipArchive class: <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A>, <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A>, and <xref:System.IO.Compression.ZipFileExtensions.ExtractToDirectory%2A>. These extension methods enable you to compress and decompress the contents of the entry to a file. The `System.IO.Compression.FileSystem` assembly is not available for [!INCLUDE[win8_appname_long](~/add/includes/win8-appname-long-md.md)] apps. In [!INCLUDE[win8_appname_long](~/add/includes/win8-appname-long-md.md)] apps, you can compress and decompress files by using the <xref:System.IO.Compression.DeflateStream> or <xref:System.IO.Compression.GZipStream> class, or you can use the [!INCLUDE[wrt](~/add/includes/wrt-md.md)] types [Compressor](http://go.microsoft.com/fwlink/p/?LinkID=246357) and [Decompressor](http://go.microsoft.com/fwlink/p/?LinkID=246358)."
  example:
  - "The first example shows how to create a new entry and write to it by using a stream.  \n  \n [!code-cs[System.IO.Compression.ZipArchiveMode#1](~/add/codesnippet/csharp/t-system.io.compression._1_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchiveMode#1](~/add/codesnippet/visualbasic/t-system.io.compression._1_1.vb)]  \n  \n The following example shows how to open a zip archive and iterate through the collection of entries.  \n  \n [!code-cs[System.IO.Compression.ZipArchive#1](~/add/codesnippet/csharp/t-system.io.compression._1_2.cs)]\n [!code-vb[System.IO.Compression.ZipArchive#1](~/add/codesnippet/visualbasic/t-system.io.compression._1_2.vb)]  \n  \n The third example shows how to use extension methods to create a new entry in a zip archive from an existing file and extract the archive contents. You must reference the `System.IO.Compression.FileSystem` assembly to execute the code.  \n  \n [!code-cs[System.IO.Compression.ZipArchive#3](~/add/codesnippet/csharp/t-system.io.compression._1_3.cs)]\n [!code-vb[System.IO.Compression.ZipArchive#3](~/add/codesnippet/visualbasic/t-system.io.compression._1_3.vb)]"
  syntax:
    content: 'public class ZipArchive : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Compression.ZipArchive.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  name: ZipArchive(Stream)
  nameWithType: ZipArchive.ZipArchive(Stream)
  fullName: System.IO.Compression.ZipArchive.ZipArchive(Stream)
  type: Constructor
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "Initializes a new instance of the <xref href=&quot;System.IO.Compression.ZipArchive&quot;></xref> class from the specified stream."
  syntax:
    content: public ZipArchive (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "The stream that contains the archive to be read."
  overload: System.IO.Compression.ZipArchive.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The stream is already closed or does not support reading."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "The contents of the stream are not in the zip archive format."
  platform:
  - net462
- uid: System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode)
  id: '#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode)'
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  name: ZipArchive(Stream,ZipArchiveMode)
  nameWithType: ZipArchive.ZipArchive(Stream,ZipArchiveMode)
  fullName: System.IO.Compression.ZipArchive.ZipArchive(Stream,ZipArchiveMode)
  type: Constructor
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "Initializes a new instance of the <xref href=&quot;System.IO.Compression.ZipArchive&quot;></xref> class from the specified stream and with the specified mode."
  remarks: "If the `mode` parameter is set to <xref:System.IO.Compression.ZipArchiveMode>, the stream must support reading. If the `mode` parameter is set to <xref:System.IO.Compression.ZipArchiveMode>, the stream must support writing. If the `mode` parameter is set to <xref:System.IO.Compression.ZipArchiveMode>, the stream must support reading, writing, and seeking."
  syntax:
    content: public ZipArchive (System.IO.Stream stream, System.IO.Compression.ZipArchiveMode mode);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "The input or output stream."
    - id: mode
      type: System.IO.Compression.ZipArchiveMode
      description: "One of the enumeration values that indicates whether the zip archive is used to read, create, or update entries."
  overload: System.IO.Compression.ZipArchive.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The stream is already closed, or the capabilities of the stream do not match the mode."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>mode</code> is an invalid value."
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "The contents of the stream could not be interpreted as a zip archive.       -or-       <code>mode</code> is <xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;></xref> and an entry is missing from the archive or is corrupt and cannot be read.       -or-       <code>mode</code> is <xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;></xref> and an entry is too large to fit into memory."
  platform:
  - net462
- uid: System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean)
  id: '#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean)'
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  name: ZipArchive(Stream,ZipArchiveMode,Boolean)
  nameWithType: ZipArchive.ZipArchive(Stream,ZipArchiveMode,Boolean)
  fullName: System.IO.Compression.ZipArchive.ZipArchive(Stream,ZipArchiveMode,Boolean)
  type: Constructor
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "Initializes a new instance of the <xref href=&quot;System.IO.Compression.ZipArchive&quot;></xref> class on the specified stream for the specified mode, and optionally leaves the stream open."
  remarks: "If the `mode` parameter is set to <xref:System.IO.Compression.ZipArchiveMode>, the stream must support reading. If the `mode` parameter is set to <xref:System.IO.Compression.ZipArchiveMode>, the stream must support writing. If the `mode` parameter is set to <xref:System.IO.Compression.ZipArchiveMode>, the stream must support reading, writing, and seeking."
  syntax:
    content: public ZipArchive (System.IO.Stream stream, System.IO.Compression.ZipArchiveMode mode, bool leaveOpen);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "The input or output stream."
    - id: mode
      type: System.IO.Compression.ZipArchiveMode
      description: "One of the enumeration values that indicates whether the zip archive is used to read, create, or update entries."
    - id: leaveOpen
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to leave the stream open after the <xref href=&quot;System.IO.Compression.ZipArchive&quot;></xref> object is disposed; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.IO.Compression.ZipArchive.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The stream is already closed, or the capabilities of the stream do not match the mode."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>mode</code> is an invalid value."
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "The contents of the stream could not be interpreted as a zip archive.       -or-       <code>mode</code> is <xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;></xref> and an entry is missing from the archive or is corrupt and cannot be read.       -or-       <code>mode</code> is <xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;></xref> and an entry is too large to fit into memory."
  platform:
  - net462
- uid: System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean,System.Text.Encoding)
  id: '#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean,System.Text.Encoding)'
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  name: ZipArchive(Stream,ZipArchiveMode,Boolean,Encoding)
  nameWithType: ZipArchive.ZipArchive(Stream,ZipArchiveMode,Boolean,Encoding)
  fullName: System.IO.Compression.ZipArchive.ZipArchive(Stream,ZipArchiveMode,Boolean,Encoding)
  type: Constructor
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "Initializes a new instance of the <xref href=&quot;System.IO.Compression.ZipArchive&quot;></xref> class on the specified stream for the specified mode, uses the specified encoding for entry names, and optionally leaves the stream open."
  remarks: "If the `mode` parameter is set to <xref:System.IO.Compression.ZipArchiveMode>, the stream must support reading. If the `mode` parameter is set to <xref:System.IO.Compression.ZipArchiveMode>, the stream must support writing. If the `mode` parameter is set to <xref:System.IO.Compression.ZipArchiveMode>, the stream must support reading, writing, and seeking.       When you open a zip archive file for reading and `entryNameEncoding` is set to `null`, entry names are decoded according to the following rules:      -   When the language encoding flag (in the general-purpose bit flag of the local file header) is not set, the current system default code page is used to decode the entry name.      -   When the language encoding flag is set, UTF-8 is used to decode the entry name.       When you open a zip archive file for reading and `entryNameEncoding` is set to a value other than `null`, entry names are decoded according to the following rules:      -   When the language encoding flag is not set, the specified `entryNameEncoding` is used to decode the entry name.      -   When the language encoding flag is set, UTF-8 is used to decode the entry name.       When you write to archive files and `entryNameEncoding` is set to `null`, entry names are encoded according to the following rules:      -   For entry names that contain characters outside the ASCII range, the language encoding flag is set, and entry names are encoded by using UTF-8.      -   For entry names that contain only ASCII characters, the language encoding flag is not set, and entry names are encoded by using the current system default code page.       When you write to archive files and `entryNameEncoding` is set to a value other than `null`, the specified `entryNameEncoding` is used to encode the entry names into bytes. The language encoding flag (in the general-purpose bit flag of the local file header) is set only when the specified encoding is a UTF-8 encoding."
  syntax:
    content: public ZipArchive (System.IO.Stream stream, System.IO.Compression.ZipArchiveMode mode, bool leaveOpen, System.Text.Encoding entryNameEncoding);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "The input or output stream."
    - id: mode
      type: System.IO.Compression.ZipArchiveMode
      description: "One of the enumeration values that indicates whether the zip archive is used to read, create, or update entries."
    - id: leaveOpen
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to leave the stream open after the <xref href=&quot;System.IO.Compression.ZipArchive&quot;></xref> object is disposed; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: entryNameEncoding
      type: System.Text.Encoding
      description: "The encoding to use when reading or writing entry names in this archive. Specify a value for this parameter only when an encoding is required for interoperability with zip archive tools and libraries that do not support UTF-8 encoding for entry names."
  overload: System.IO.Compression.ZipArchive.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The stream is already closed, or the capabilities of the stream do not match the mode."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>mode</code> is an invalid value."
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "The contents of the stream could not be interpreted as a zip archive.       -or-       <code>mode</code> is <xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;></xref> and an entry is missing from the archive or is corrupt and cannot be read.       -or-       <code>mode</code> is <xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;></xref> and an entry is too large to fit into memory."
  platform:
  - net462
- uid: System.IO.Compression.ZipArchive.CreateEntry(System.String)
  id: CreateEntry(System.String)
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  name: CreateEntry(String)
  nameWithType: ZipArchive.CreateEntry(String)
  fullName: System.IO.Compression.ZipArchive.CreateEntry(String)
  type: Method
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "Creates an empty entry that has the specified path and entry name in the zip archive."
  remarks: "The `entryName` string should reflect the relative path of the entry you want to create within the zip archive. There is no restriction on the string you provide. However, if it is not formatted as a relative path, the entry is created, but you may get an exception when you extract the contents of the zip archive. If an entry with the specified path and name already exists in the archive, a second entry is created with the same path and name.       The value of the <xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A> property for the new entry is set to the current time. The entry is compressed using the default compression level of the underlying compression algorithm. If you want to specify a different compression level, use the <xref:System.IO.Compression.ZipArchive.CreateEntry%2A> method."
  example:
  - "The following example shows how to create an entry and write to it by using a stream.  \n  \n [!code-cs[System.IO.Compression.ZipArchiveMode#1](~/add/codesnippet/csharp/m-system.io.compression._1_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchiveMode#1](~/add/codesnippet/visualbasic/m-system.io.compression._1_1.vb)]"
  syntax:
    content: public System.IO.Compression.ZipArchiveEntry CreateEntry (string entryName);
    parameters:
    - id: entryName
      type: System.String
      description: "A path, relative to the root of the archive, that specifies the name of the entry to be created."
    return:
      type: System.IO.Compression.ZipArchiveEntry
      description: "An empty entry in the zip archive."
  overload: System.IO.Compression.ZipArchive.CreateEntry*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>entryName</code> is <xref:System.String>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>entryName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The zip archive does not support writing."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "The zip archive has been disposed."
  platform:
  - net462
- uid: System.IO.Compression.ZipArchive.CreateEntry(System.String,System.IO.Compression.CompressionLevel)
  id: CreateEntry(System.String,System.IO.Compression.CompressionLevel)
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  name: CreateEntry(String,CompressionLevel)
  nameWithType: ZipArchive.CreateEntry(String,CompressionLevel)
  fullName: System.IO.Compression.ZipArchive.CreateEntry(String,CompressionLevel)
  type: Method
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "Creates an empty entry that has the specified entry name and compression level in the zip archive."
  remarks: "The `entryName` string should reflect the relative path of the entry you want to create within the zip archive. There is no restriction on the string you provide. However, if it is not formatted as a relative path, the entry is created, but you may get an exception when you extract the contents of the zip archive. If an entry with the specified name already exists in the archive, a second entry is created with the same name.       The value of the <xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A> property for the new entry is set to the current time. Set the `compressionLevel` parameter to <xref:System.IO.Compression.CompressionLevel> if you want the file to be compressed as much as possible. Set the `compressionLevel` parameter to <xref:System.IO.Compression.CompressionLevel> only if you are concerned that the compression operation will not complete quickly enough for your scenario."
  example:
  - "The following example shows how to create an entry with the optimal compression level. It also writes to the new entry by using a stream.  \n  \n [!code-cs[System.IO.Compression.ZipArchiveMode#2](~/add/codesnippet/csharp/356fbc42-2094-4738-b1de-_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchiveMode#2](~/add/codesnippet/visualbasic/356fbc42-2094-4738-b1de-_1.vb)]"
  syntax:
    content: public System.IO.Compression.ZipArchiveEntry CreateEntry (string entryName, System.IO.Compression.CompressionLevel compressionLevel);
    parameters:
    - id: entryName
      type: System.String
      description: "A path, relative to the root of the archive, that specifies the name of the entry to be created."
    - id: compressionLevel
      type: System.IO.Compression.CompressionLevel
      description: "One of the enumeration values that indicates whether to emphasize speed or compression effectiveness when creating the entry."
    return:
      type: System.IO.Compression.ZipArchiveEntry
      description: "An empty entry in the zip archive."
  overload: System.IO.Compression.ZipArchive.CreateEntry*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>entryName</code> is <xref:System.String>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>entryName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The zip archive does not support writing."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "The zip archive has been disposed."
  platform:
  - net462
- uid: System.IO.Compression.ZipArchive.Dispose
  id: Dispose
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  name: Dispose()
  nameWithType: ZipArchive.Dispose()
  fullName: System.IO.Compression.ZipArchive.Dispose()
  type: Method
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "Releases the resources used by the current instance of the <xref href=&quot;System.IO.Compression.ZipArchive&quot;></xref> class."
  remarks: "This method finishes writing the archive and releases all resources used by the <xref:System.IO.Compression.ZipArchive> object. Unless you construct the object by using the <xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%2CSystem.Boolean%29> constructor overload and set its `leaveOpen` parameter to `true`, all underlying streams are closed and no longer available for subsequent write operations.       When you are finished using this instance of <xref:System.IO.Compression.ZipArchive>, call Dispose to release all resources used by this instance. You should eliminate further references to this <xref:System.IO.Compression.ZipArchive> instance so that the garbage collector can reclaim the memory of the instance instead of keeping it alive for finalization.       Dispose calls the <xref:System.IO.Compression.ZipArchive.Dispose%28System.Boolean%29> method, which contains the code to release managed and unmanaged resources. For more information, see ."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.IO.Compression.ZipArchive.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Compression.ZipArchive.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ZipArchive.Dispose(Boolean)
  fullName: System.IO.Compression.ZipArchive.Dispose(Boolean)
  type: Method
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "Called by the <xref href=&quot;System.IO.Compression.ZipArchive.Dispose&quot;></xref> and <xref:System.Object.Finalize> methods to release the unmanaged resources used by the current instance of the <xref href=&quot;System.IO.Compression.ZipArchive&quot;></xref> class, and optionally finishes writing the archive and releases the managed resources."
  remarks: "If `disposing` is set to `true`, all underlying streams are closed and no longer available for subsequent write operations, unless you construct the object by using the <xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%2CSystem.Boolean%29> constructor overload and set its `leaveOpen` parameter to `true`.       This method is called only by the public <xref:System.IO.Compression.ZipArchive.Dispose> and <xref:System.Object.Finalize> methods; do not call this method directly.       When you implement the dispose pattern, the Boolean parameter of the Dispose method should be used as follows:      -   The <xref:System.IO.Compression.ZipArchive.Dispose> method of the current object should call Dispose with the Boolean parameter set to `true` to release both managed and unmanaged resources.      -   The <xref:System.Object.Finalize> method of the current object should call Dispose with the Boolean parameter set to `false` to release only unmanaged resources.       For more information, see ."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to finish writing the archive and release unmanaged and managed resources; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to release only unmanaged resources."
  overload: System.IO.Compression.ZipArchive.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Compression.ZipArchive.Entries
  id: Entries
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  name: Entries
  nameWithType: ZipArchive.Entries
  fullName: System.IO.Compression.ZipArchive.Entries
  type: Property
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "Gets the collection of entries that are currently in the zip archive."
  remarks: "Use the Entries property to retrieve the entire collection of entries. Use the <xref:System.IO.Compression.ZipArchive.GetEntry%2A> method to retrieve a single entry by name."
  example:
  - "The following example shows how to open a zip archive and iterate through the collection of entries.  \n  \n [!code-cs[System.IO.Compression.ZipArchive#1](~/add/codesnippet/csharp/p-system.io.compression._5_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchive#1](~/add/codesnippet/visualbasic/p-system.io.compression._5_1.vb)]"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.IO.Compression.ZipArchiveEntry> Entries { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry}
      description: "The collection of entries that are currently in the zip archive."
  overload: System.IO.Compression.ZipArchive.Entries*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The zip archive does not support reading."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "The zip archive has been disposed."
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "The zip archive is corrupt, and its entries cannot be retrieved."
  platform:
  - net462
- uid: System.IO.Compression.ZipArchive.GetEntry(System.String)
  id: GetEntry(System.String)
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  name: GetEntry(String)
  nameWithType: ZipArchive.GetEntry(String)
  fullName: System.IO.Compression.ZipArchive.GetEntry(String)
  type: Method
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "Retrieves a wrapper for the specified entry in the zip archive."
  remarks: "If multiple entries that have the specified name exist in the archive, the first one is returned. The name of the entry is compared to `entryName` using ordinal comparison."
  example:
  - "The following example shows how to use the GetEntry method to retrieve an entry.  \n  \n [!code-cs[System.IO.Compression.ZipArchiveEntry#2](~/add/codesnippet/csharp/m-system.io.compression._4_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchiveEntry#2](~/add/codesnippet/visualbasic/m-system.io.compression._4_1.vb)]"
  syntax:
    content: public System.IO.Compression.ZipArchiveEntry GetEntry (string entryName);
    parameters:
    - id: entryName
      type: System.String
      description: "A path, relative to the root of the archive, that identifies the entry to retrieve."
    return:
      type: System.IO.Compression.ZipArchiveEntry
      description: "A wrapper for the specified entry in the archive; <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the entry does not exist in the archive."
  overload: System.IO.Compression.ZipArchive.GetEntry*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>entryName</code> is <xref:System.String>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>entryName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The zip archive does not support reading."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "The zip archive has been disposed."
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "The zip archive is corrupt, and its entries cannot be retrieved."
  platform:
  - net462
- uid: System.IO.Compression.ZipArchive.Mode
  id: Mode
  parent: System.IO.Compression.ZipArchive
  langs:
  - csharp
  name: Mode
  nameWithType: ZipArchive.Mode
  fullName: System.IO.Compression.ZipArchive.Mode
  type: Property
  assemblies:
  - System.IO.Compression
  namespace: System.IO.Compression
  summary: "Gets a value that describes the type of action the zip archive can perform on entries."
  remarks: "You specify a value for the <xref:System.IO.Compression.ZipArchive> property when you create an instance of the <xref:System.IO.Compression.ZipArchive> class. Use the <xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%29> or <xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%2CSystem.Boolean%29> constructor to provide a value for the Mode property."
  syntax:
    content: public System.IO.Compression.ZipArchiveMode Mode { get; }
    return:
      type: System.IO.Compression.ZipArchiveMode
      description: "One of the enumeration values that describes the type of action (read, create, or update) the zip archive can perform on entries."
  overload: System.IO.Compression.ZipArchive.Mode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IO.InvalidDataException
  isExternal: true
  name: System.IO.InvalidDataException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.IO.Compression.ZipArchive.#ctor(System.IO.Stream)
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: ZipArchive(Stream)
  nameWithType: ZipArchive.ZipArchive(Stream)
  fullName: System.IO.Compression.ZipArchive.ZipArchive(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode)
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: ZipArchive(Stream,ZipArchiveMode)
  nameWithType: ZipArchive.ZipArchive(Stream,ZipArchiveMode)
  fullName: System.IO.Compression.ZipArchive.ZipArchive(Stream,ZipArchiveMode)
- uid: System.IO.Compression.ZipArchiveMode
  parent: System.IO.Compression
  isExternal: false
  name: ZipArchiveMode
  nameWithType: ZipArchiveMode
  fullName: System.IO.Compression.ZipArchiveMode
- uid: System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean)
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: ZipArchive(Stream,ZipArchiveMode,Boolean)
  nameWithType: ZipArchive.ZipArchive(Stream,ZipArchiveMode,Boolean)
  fullName: System.IO.Compression.ZipArchive.ZipArchive(Stream,ZipArchiveMode,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean,System.Text.Encoding)
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: ZipArchive(Stream,ZipArchiveMode,Boolean,Encoding)
  nameWithType: ZipArchive.ZipArchive(Stream,ZipArchiveMode,Boolean,Encoding)
  fullName: System.IO.Compression.ZipArchive.ZipArchive(Stream,ZipArchiveMode,Boolean,Encoding)
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.IO.Compression.ZipArchive.CreateEntry(System.String)
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: CreateEntry(String)
  nameWithType: ZipArchive.CreateEntry(String)
  fullName: System.IO.Compression.ZipArchive.CreateEntry(String)
- uid: System.IO.Compression.ZipArchiveEntry
  parent: System.IO.Compression
  isExternal: false
  name: ZipArchiveEntry
  nameWithType: ZipArchiveEntry
  fullName: System.IO.Compression.ZipArchiveEntry
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Compression.ZipArchive.CreateEntry(System.String,System.IO.Compression.CompressionLevel)
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: CreateEntry(String,CompressionLevel)
  nameWithType: ZipArchive.CreateEntry(String,CompressionLevel)
  fullName: System.IO.Compression.ZipArchive.CreateEntry(String,CompressionLevel)
- uid: System.IO.Compression.CompressionLevel
  parent: System.IO.Compression
  isExternal: true
  name: CompressionLevel
  nameWithType: CompressionLevel
  fullName: System.IO.Compression.CompressionLevel
- uid: System.IO.Compression.ZipArchive.Dispose
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: Dispose()
  nameWithType: ZipArchive.Dispose()
  fullName: System.IO.Compression.ZipArchive.Dispose()
- uid: System.IO.Compression.ZipArchive.Dispose(System.Boolean)
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ZipArchive.Dispose(Boolean)
  fullName: System.IO.Compression.ZipArchive.Dispose(Boolean)
- uid: System.IO.Compression.ZipArchive.Entries
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: Entries
  nameWithType: ZipArchive.Entries
  fullName: System.IO.Compression.ZipArchive.Entries
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Compression.ZipArchiveEntry}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<ZipArchiveEntry>
  nameWithType: ReadOnlyCollection<ZipArchiveEntry>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IO.Compression.ZipArchiveEntry>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IO.Compression.ZipArchiveEntry>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.Compression.ZipArchiveEntry
    name: ZipArchiveEntry
    nameWithType: ZipArchiveEntry
    fullName: ZipArchiveEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IO.Compression.ZipArchive.GetEntry(System.String)
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: GetEntry(String)
  nameWithType: ZipArchive.GetEntry(String)
  fullName: System.IO.Compression.ZipArchive.GetEntry(String)
- uid: System.IO.Compression.ZipArchive.Mode
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: Mode
  nameWithType: ZipArchive.Mode
  fullName: System.IO.Compression.ZipArchive.Mode
- uid: System.IO.Compression.ZipArchive.#ctor*
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: ZipArchive
  nameWithType: ZipArchive.ZipArchive
- uid: System.IO.Compression.ZipArchive.CreateEntry*
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: CreateEntry
  nameWithType: ZipArchive.CreateEntry
- uid: System.IO.Compression.ZipArchive.Dispose*
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: Dispose
  nameWithType: ZipArchive.Dispose
- uid: System.IO.Compression.ZipArchive.Entries*
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: Entries
  nameWithType: ZipArchive.Entries
- uid: System.IO.Compression.ZipArchive.GetEntry*
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: GetEntry
  nameWithType: ZipArchive.GetEntry
- uid: System.IO.Compression.ZipArchive.Mode*
  parent: System.IO.Compression.ZipArchive
  isExternal: false
  name: Mode
  nameWithType: ZipArchive.Mode
