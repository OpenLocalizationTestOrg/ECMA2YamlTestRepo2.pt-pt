### YamlMime:ManagedReference
items:
- uid: System.IO.File
  id: File
  children:
  - System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})
  - System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)
  - System.IO.File.AppendAllText(System.String,System.String)
  - System.IO.File.AppendAllText(System.String,System.String,System.Text.Encoding)
  - System.IO.File.AppendText(System.String)
  - System.IO.File.Copy(System.String,System.String)
  - System.IO.File.Copy(System.String,System.String,System.Boolean)
  - System.IO.File.Create(System.String)
  - System.IO.File.Create(System.String,System.Int32)
  - System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions)
  - System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)
  - System.IO.File.CreateText(System.String)
  - System.IO.File.Decrypt(System.String)
  - System.IO.File.Delete(System.String)
  - System.IO.File.Encrypt(System.String)
  - System.IO.File.Exists(System.String)
  - System.IO.File.GetAccessControl(System.String)
  - System.IO.File.GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)
  - System.IO.File.GetAttributes(System.String)
  - System.IO.File.GetCreationTime(System.String)
  - System.IO.File.GetCreationTimeUtc(System.String)
  - System.IO.File.GetLastAccessTime(System.String)
  - System.IO.File.GetLastAccessTimeUtc(System.String)
  - System.IO.File.GetLastWriteTime(System.String)
  - System.IO.File.GetLastWriteTimeUtc(System.String)
  - System.IO.File.Move(System.String,System.String)
  - System.IO.File.Open(System.String,System.IO.FileMode)
  - System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  - System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  - System.IO.File.OpenRead(System.String)
  - System.IO.File.OpenText(System.String)
  - System.IO.File.OpenWrite(System.String)
  - System.IO.File.ReadAllBytes(System.String)
  - System.IO.File.ReadAllLines(System.String)
  - System.IO.File.ReadAllLines(System.String,System.Text.Encoding)
  - System.IO.File.ReadAllText(System.String)
  - System.IO.File.ReadAllText(System.String,System.Text.Encoding)
  - System.IO.File.ReadLines(System.String)
  - System.IO.File.ReadLines(System.String,System.Text.Encoding)
  - System.IO.File.Replace(System.String,System.String,System.String)
  - System.IO.File.Replace(System.String,System.String,System.String,System.Boolean)
  - System.IO.File.SetAccessControl(System.String,System.Security.AccessControl.FileSecurity)
  - System.IO.File.SetAttributes(System.String,System.IO.FileAttributes)
  - System.IO.File.SetCreationTime(System.String,System.DateTime)
  - System.IO.File.SetCreationTimeUtc(System.String,System.DateTime)
  - System.IO.File.SetLastAccessTime(System.String,System.DateTime)
  - System.IO.File.SetLastAccessTimeUtc(System.String,System.DateTime)
  - System.IO.File.SetLastWriteTime(System.String,System.DateTime)
  - System.IO.File.SetLastWriteTimeUtc(System.String,System.DateTime)
  - System.IO.File.WriteAllBytes(System.String,System.Byte[])
  - System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})
  - System.IO.File.WriteAllLines(System.String,System.String[])
  - System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)
  - System.IO.File.WriteAllLines(System.String,System.String[],System.Text.Encoding)
  - System.IO.File.WriteAllText(System.String,System.String)
  - System.IO.File.WriteAllText(System.String,System.String,System.Text.Encoding)
  langs:
  - csharp
  name: File
  nameWithType: File
  fullName: System.IO.File
  type: Class
  summary: "Fornece métodos estáticos para a criação, copiar, eliminação, mover e abertura de um único ficheiro e ajuda na criação de <xref href=&quot;System.IO.FileStream&quot;> </xref> objetos.       Para procurar o código de origem do .NET Framework para este tipo, consulte o [referência origem](http://referencesource.microsoft.com/#mscorlib/system/io/file.cs#1c7421e464f67b7e)."
  remarks: "> [!NOTE]\n>  To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#mscorlib/system/io/file.cs#1c7421e464f67b7e). You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/).  \n  \n Use the File class for typical operations such as copying, moving, renaming, creating, opening, deleting, and appending to a single file at a time. You can also use the File class to get and set file attributes or <xref:System.DateTime> information related to the creation, access, and writing of a file. If you want to perform operations on multiple files, see <xref:System.IO.Directory.GetFiles%2A?displayProperty=fullName> or <xref:System.IO.DirectoryInfo.GetFiles%2A?displayProperty=fullName>.  \n  \n Many of the File methods return other I/O types when you create or open files. You can use these other types to further manipulate a file. For more information, see specific File members such as <xref:System.IO.File.OpenText%2A>, <xref:System.IO.File.CreateText%2A>, or <xref:System.IO.File.Create%2A>.  \n  \n Because all File methods are static, it might be more efficient to use a File method rather than a corresponding <xref:System.IO.FileInfo> instance method if you want to perform only one action. All File methods require the path to the file that you are manipulating.  \n  \n The static methods of the File class perform security checks on all methods. If you are going to reuse an object several times, consider using the corresponding instance method of <xref:System.IO.FileInfo> instead, because the security check will not always be necessary.  \n  \n By default, full read/write access to new files is granted to all users.  \n  \n The following table describes the enumerations that are used to customize the behavior of various File methods.  \n  \n|Enumeration|Description|  \n|-----------------|-----------------|  \n|<xref:System.IO.FileAccess>|Specifies read and write access to a file.|  \n|<xref:System.IO.FileShare>|Specifies the level of access permitted for a file that is already in use.|  \n|<xref:System.IO.FileMode>|Specifies whether the contents of an existing file are preserved or overwritten, and whether requests to create an existing file cause an exception.|  \n  \n> [!NOTE]\n>  In members that accept a path as an input string, that path must be well-formed or an exception is raised. For example, if a path is fully qualified but begins with a space, the path is not trimmed in methods of the class. Therefore, the path is malformed and an exception is raised. Similarly, a path or a combination of paths cannot be fully qualified twice. For example, \"c:\\temp c:\\windows\" also raises an exception in most cases. Ensure that your paths are well-formed when using methods that accept a path string.  \n  \n In members that accept a path, the path can refer to a file or just a directory. The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name. For example, all the following are acceptable paths:  \n  \n-   \"c:\\\\\\MyDir\\\\\\MyFile.txt\" in C#, or \"c:\\MyDir\\MyFile.txt\" in Visual Basic.  \n  \n-   \"c:\\\\\\MyDir\" in C#, or \"c:\\MyDir\" in Visual Basic.  \n  \n-   \"MyDir\\\\\\MySubdir\" in C#, or \"MyDir\\MySubDir\" in Visual Basic.  \n  \n-   \"\\\\\\\\\\\\\\MyServer\\\\\\MyShare\" in C#, or \"\\\\\\MyServer\\MyShare\" in Visual Basic.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates how to use the File class to check whether a file exists, and depending on the result, either create a new file and write to it, or open the existing file and read from it. Before running the code, create a `c:\\temp` folder.  \n  \n [!code-cpp[File Class Example#1](~/add/codesnippet/cpp/t-system.io.file_1.cpp)]\n [!code-cs[File Class Example#1](~/add/codesnippet/csharp/t-system.io.file_1.cs)]\n [!code-vb[File Class Example#1](~/add/codesnippet/visualbasic/t-system.io.file_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public static class File
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})
  id: AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: System.IO.File
  langs:
  - csharp
  name: AppendAllLines(String,IEnumerable<String>)
  nameWithType: File.AppendAllLines(String,IEnumerable<String>)
  fullName: System.IO.File.AppendAllLines(String,IEnumerable<String>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Acrescenta linhas num ficheiro e, em seguida, fecha o ficheiro. Se o ficheiro especificado não existir, este método cria um ficheiro, escreve as linhas especificadas no ficheiro e, em seguida, fecha o ficheiro."
  remarks: "O método cria o ficheiro se não existir, mas não a criar diretórios de novo. Por conseguinte, o valor da `path` parâmetro tem de conter diretórios existentes."
  example:
  - "The following example writes selected lines from a sample data file to a file, and then appends more lines. The directory named `temp` on drive C must exist for the example to complete successfully.  \n  \n [!code-cs[System.IO.File.WriteAllAppendAll#1](~/add/codesnippet/csharp/d3653703-4b0a-4cbe-b582-_1.cs)]\n [!code-vb[System.IO.File.WriteAllAppendAll#1](~/add/codesnippet/visualbasic/d3653703-4b0a-4cbe-b582-_1.vb)]"
  syntax:
    content: public static void AppendAllLines (string path, System.Collections.Generic.IEnumerable<string> contents);
    parameters:
    - id: path
      type: System.String
      description: "O ficheiro a acrescentar as linhas a. O ficheiro é criado se ainda não existir."
    - id: contents
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "As linhas a acrescentar ao ficheiro."
  overload: System.IO.File.AppendAllLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém carateres inválidos um mais definidos pelo <xref:System.IO.Path.GetInvalidPathChars*> método."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Either<code> path </code>or <code>contents</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>path</code>é inválido (por exemplo, o diretório não existe ou é numa unidade não mapeada)."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro especificado pelo <code> path </code> não foi encontrado."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o ficheiro."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>excede o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>é um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem permissão para escrever no ficheiro."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>Especifica um ficheiro que é só de leitura.       - ou - esta operação não é suportada na plataforma atual.       - ou - <code>path</code> é um diretório."
  platform:
  - net462
- uid: System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)
  id: AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)
  parent: System.IO.File
  langs:
  - csharp
  name: AppendAllLines(String,IEnumerable<String>,Encoding)
  nameWithType: File.AppendAllLines(String,IEnumerable<String>,Encoding)
  fullName: System.IO.File.AppendAllLines(String,IEnumerable<String>,Encoding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Acrescenta linhas para um ficheiro através de uma codificação especificada e, em seguida, fecha o ficheiro. Se o ficheiro especificado não existir, este método cria um ficheiro, escreve as linhas especificadas no ficheiro e, em seguida, fecha o ficheiro."
  remarks: "O método cria o ficheiro se não existir, mas não a criar diretórios de novo. Por conseguinte, o valor da `path` parâmetro tem de conter diretórios existentes.       Pode utilizar este método para criar um ficheiro que contém o seguinte:-os resultados de uma [LINQ para objetos](~/add/includes/ajax-current-ext-md.md) consultar nas linhas de um ficheiro, tal como obtidas utilizando o <xref:System.IO.File.ReadLines%2A>método.</xref:System.IO.File.ReadLines%2A>      -O conteúdo de uma coleção que implementa um <xref:System.Collections.Generic.IEnumerable%601>de cadeias.</xref:System.Collections.Generic.IEnumerable%601>"
  syntax:
    content: public static void AppendAllLines (string path, System.Collections.Generic.IEnumerable<string> contents, System.Text.Encoding encoding);
    parameters:
    - id: path
      type: System.String
      description: "O ficheiro a acrescentar as linhas a. O ficheiro é criado se ainda não existir."
    - id: contents
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "As linhas a acrescentar ao ficheiro."
    - id: encoding
      type: System.Text.Encoding
      description: "O caráter codificação a utilizar."
  overload: System.IO.File.AppendAllLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém carateres inválidos um mais definidos pelo <xref:System.IO.Path.GetInvalidPathChars*> método."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Either<code> path</code>, <code>contents</code>, or <code>encoding</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>path</code>é inválido (por exemplo, o diretório não existe ou é numa unidade não mapeada)."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro especificado pelo <code> path </code> não foi encontrado."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o ficheiro."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>excede o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>é um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>Especifica um ficheiro que é só de leitura.       - ou - esta operação não é suportada na plataforma atual.       - ou - <code>path</code> é um diretório.       - ou - o chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.File.AppendAllText(System.String,System.String)
  id: AppendAllText(System.String,System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: AppendAllText(String,String)
  nameWithType: File.AppendAllText(String,String)
  fullName: System.IO.File.AppendAllText(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Abre um ficheiro, acrescenta a cadeia especificada para o ficheiro e, em seguida, fecha o ficheiro. Se o ficheiro não existir, este método cria um ficheiro, escreve a cadeia especificada no ficheiro, em seguida, fecha o ficheiro."
  remarks: "Recebe uma cadeia e um caminho de ficheiro, este método abre o ficheiro especificado, acrescenta a cadeia para o fim do ficheiro e, em seguida, fecha o ficheiro. O identificador de ficheiro é garantido a ser fechado através deste método, mesmo se exceções são geradas.       O método cria o ficheiro se não existir, mas não a criar diretórios de novo. Por conseguinte, o valor da `path` parâmetro tem de conter diretórios existentes."
  example:
  - "The following code example demonstrates the use of the AppendAllText method to add extra text to the end of a file. In this example, a file is created if it doesn't already exist, and text is added to it. However, the directory named `temp` on drive C must exist for the example to complete successfully.  \n  \n [!code-vb[System.IO.File.AllText#00](~/add/codesnippet/visualbasic/m-system.io.file.appenda_0_1.vb)]\n [!code-cs[System.IO.File.AllText#00](~/add/codesnippet/csharp/m-system.io.file.appenda_0_1.cs)]"
  syntax:
    content: public static void AppendAllText (string path, string contents);
    parameters:
    - id: path
      type: System.String
      description: "O ficheiro a acrescentar a cadeia especificada para."
    - id: contents
      type: System.String
      description: "A cadeia a acrescentar ao ficheiro."
  overload: System.IO.File.AppendAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido (por exemplo, o diretório não existe ou é numa unidade não mapeada)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o ficheiro."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>especificar um ficheiro que é só de leitura.       - ou - esta operação não é suportada na plataforma atual.       - ou - <code>path</code> especificado um diretório.       - ou - o chamador não tem a permissão necessária."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>é um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.File.AppendAllText(System.String,System.String,System.Text.Encoding)
  id: AppendAllText(System.String,System.String,System.Text.Encoding)
  parent: System.IO.File
  langs:
  - csharp
  name: AppendAllText(String,String,Encoding)
  nameWithType: File.AppendAllText(String,String,Encoding)
  fullName: System.IO.File.AppendAllText(String,String,Encoding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Acrescenta a cadeia especificada para o ficheiro, criar o ficheiro se já existir."
  remarks: "Recebe uma cadeia e um caminho de ficheiro, este método abre o ficheiro especificado, acrescenta a cadeia para o fim do ficheiro utilizar à codificação especificada e, em seguida, fecha o ficheiro. O identificador de ficheiro é garantido a ser fechado através deste método, mesmo se exceções são geradas.       O método cria o ficheiro se não existir, mas não a criar diretórios de novo. Por conseguinte, o valor da `path` parâmetro tem de conter diretórios existentes."
  example:
  - "The following code example demonstrates the use of the AppendAllText method to add extra text to the end of a file. In this example, a file is created if it doesn't already exist, and text is added to it. However, the directory named `temp` on drive C must exist for the example to complete successfully.  \n  \n [!code-cs[System.IO.File.AllText_Encoding#00](~/add/codesnippet/csharp/m-system.io.file.appenda_1_1.cs)]\n [!code-vb[System.IO.File.AllText_Encoding#00](~/add/codesnippet/visualbasic/m-system.io.file.appenda_1_1.vb)]"
  syntax:
    content: public static void AppendAllText (string path, string contents, System.Text.Encoding encoding);
    parameters:
    - id: path
      type: System.String
      description: "O ficheiro a acrescentar a cadeia especificada para."
    - id: contents
      type: System.String
      description: "A cadeia a acrescentar ao ficheiro."
    - id: encoding
      type: System.Text.Encoding
      description: "O caráter codificação a utilizar."
  overload: System.IO.File.AppendAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido (por exemplo, o diretório não existe ou é numa unidade não mapeada)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o ficheiro."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>especificar um ficheiro que é só de leitura.       - ou - esta operação não é suportada na plataforma atual.       - ou - <code>path</code> especificado um diretório.       - ou - o chamador não tem a permissão necessária."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>é um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.File.AppendText(System.String)
  id: AppendText(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: AppendText(String)
  nameWithType: File.AppendText(String)
  fullName: System.IO.File.AppendText(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Cria um <xref:System.IO.StreamWriter>que acrescenta texto codificado UTF-8 para um ficheiro existente ou para um novo ficheiro se o ficheiro especificado não existe.</xref:System.IO.StreamWriter>"
  remarks: "Este método é equivalente à <xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%29>sobrecarga de construtor.</xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%29> Se o ficheiro especificado pelo `path` não existir, é criado. Se o ficheiro existe, as operações de escrita de <xref:System.IO.StreamWriter>crescentar texto ao ficheiro.</xref:System.IO.StreamWriter> Threads adicionais têm permissão para ler o ficheiro enquanto estiver aberto.       O `path` parâmetro é permitido para especificar as informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativos ao diretório de trabalho atual. Para obter o atual diretório de trabalho, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       O `path` parâmetro não é sensível.       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example appends text to a file. The method creates a new file if the file doesn’t exist. However, the directory named `temp` on drive C must exist for the example to complete successfully.  \n  \n [!code-cpp[File_AppendText#1](~/add/codesnippet/cpp/m-system.io.file.appendt_1.cpp)]\n [!code-cs[File_AppendText#1](~/add/codesnippet/csharp/m-system.io.file.appendt_1.cs)]\n [!code-vb[File_AppendText#1](~/add/codesnippet/visualbasic/m-system.io.file.appendt_1.vb)]"
  syntax:
    content: public static System.IO.StreamWriter AppendText (string path);
    parameters:
    - id: path
      type: System.String
      description: "O caminho para o ficheiro para acrescentar a."
    return:
      type: System.IO.StreamWriter
      description: "Um escritor de fluxo acrescenta UTF-8 com a codificação de texto para o ficheiro especificado ou para um novo ficheiro."
  overload: System.IO.File.AppendText*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido (por exemplo, o diretório não existe ou é numa unidade não mapeada)."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>é um formato inválido."
  platform:
  - net462
- uid: System.IO.File.Copy(System.String,System.String)
  id: Copy(System.String,System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: Copy(String,String)
  nameWithType: File.Copy(String,String)
  fullName: System.IO.File.Copy(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Copia um ficheiro existente para um novo ficheiro. Não é permitido substituir um ficheiro com o mesmo nome."
  remarks: "Este método é equivalente à <xref:System.IO.File.Copy%28System.String%2CSystem.String%2CSystem.Boolean%29>sobrecarga de método com o `overwrite` parâmetro definido como `false`.</xref:System.IO.File.Copy%28System.String%2CSystem.String%2CSystem.Boolean%29>       O `sourceFileName` e `destFileName` parâmetros podem especificar informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativos ao diretório de trabalho atual. Para obter o atual diretório de trabalho, consulte o <xref:System.IO.Directory.GetCurrentDirectory%2A?displayProperty=fullName>método.</xref:System.IO.Directory.GetCurrentDirectory%2A?displayProperty=fullName> Este método não suporta carateres universais nos parâmetros.       Os atributos do ficheiro original são mantidos no ficheiro copiado."
  example:
  - "The following example copies files to the C:\\archives\\2008 backup folder. It uses the two overloads of the <xref:System.IO.File.Copy%2A> method as follows:  \n  \n-   It first uses the Copymethod overload to copy text (.txt) files. The code demonstrates that this overload does not allow overwriting files that were already copied.  \n  \n-   It then uses the <xref:System.IO.File.Copy%28System.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=fullName> method overload to copy pictures (.jpg files). The code demonstrates that this overload does allow overwriting files that were already copied.  \n  \n [!code-cs[FileCopyDelete#1](~/add/codesnippet/csharp/m-system.io.file.copy-sy_0_1.cs)]\n [!code-vb[FileCopyDelete#1](~/add/codesnippet/visualbasic/m-system.io.file.copy-sy_0_1.vb)]"
  syntax:
    content: public static void Copy (string sourceFileName, string destFileName);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "O ficheiro para copiar."
    - id: destFileName
      type: System.String
      description: "O nome do ficheiro de destino. Não pode ser um diretório ou ficheiro existente."
  overload: System.IO.File.Copy*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sourceFileName</code>ou <code>destFileName</code> é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>.       - ou - <code>sourceFileName</code> ou <code>destFileName</code> Especifica um diretório."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceFileName</code>or <code>destFileName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado na <code> sourceFileName </code> ou <code> destFileName </code> é inválido (por exemplo, é numa unidade não mapeada)."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<code>sourceFileName</code>Não foi encontrado."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>destFileName</code>existe.       - ou - e/s um erro."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>sourceFileName</code>ou <code>destFileName</code> está num formato inválido."
  platform:
  - net462
- uid: System.IO.File.Copy(System.String,System.String,System.Boolean)
  id: Copy(System.String,System.String,System.Boolean)
  parent: System.IO.File
  langs:
  - csharp
  name: Copy(String,String,Boolean)
  nameWithType: File.Copy(String,String,Boolean)
  fullName: System.IO.File.Copy(String,String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Copia um ficheiro existente para um novo ficheiro. É permitido substituir um ficheiro com o mesmo nome."
  remarks: "O `sourceFileName` e `destFileName` parâmetros podem especificar informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativos ao diretório de trabalho atual. Este método não suporta carateres universais nos parâmetros.       Os atributos do ficheiro original são mantidos no ficheiro copiado.       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example copies files to the C:\\archives\\2008 backup folder. It uses the two overloads of the <xref:System.IO.File.Copy%2A> method as follows:  \n  \n-   It first uses the <xref:System.IO.File.Copy%28System.String%2CSystem.String%29?displayProperty=fullName> method overload to copy text (.txt) files. The code demonstrates that this overload does not allow overwriting files that were already copied.  \n  \n It then uses the Copy method overload to copy pictures (.jpg files). The code demonstrates that this overload does allow overwriting files that were already copied.  \n  \n [!code-cs[FileCopyDelete#1](~/add/codesnippet/csharp/m-system.io.file.copy-sy_1_1.cs)]\n [!code-vb[FileCopyDelete#1](~/add/codesnippet/visualbasic/m-system.io.file.copy-sy_1_1.vb)]"
  syntax:
    content: public static void Copy (string sourceFileName, string destFileName, bool overwrite);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "O ficheiro para copiar."
    - id: destFileName
      type: System.String
      description: "O nome do ficheiro de destino. Não pode ser um diretório."
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o ficheiro de destino pode ser substituído; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.File.Copy*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária.       -or-       <code>destFileName</code> is read-only."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sourceFileName</code>ou <code>destFileName</code> é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>.       - ou - <code>sourceFileName</code> ou <code>destFileName</code> Especifica um diretório."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceFileName</code>or <code>destFileName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado na <code> sourceFileName </code> ou <code> destFileName </code> é inválido (por exemplo, é numa unidade não mapeada)."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<code>sourceFileName</code>Não foi encontrado."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>destFileName</code>exists and <code>overwrite</code> is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.       - ou - e/s um erro."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>sourceFileName</code>ou <code>destFileName</code> está num formato inválido."
  platform:
  - net462
- uid: System.IO.File.Create(System.String)
  id: Create(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: Create(String)
  nameWithType: File.Create(String)
  fullName: System.IO.File.Create(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Cria ou substitui um ficheiro no caminho especificado."
  remarks: "O <xref:System.IO.FileStream>objeto criado por este método tem uma predefinição <xref:System.IO.FileShare>valor <xref:System.IO.FileShare>; nenhum outro processo ou código pode aceder ao ficheiro criado enquanto o identificador de ficheiro original for fechado.</xref:System.IO.FileShare> </xref:System.IO.FileShare> </xref:System.IO.FileStream>       Este método é equivalente à <xref:System.IO.File.Create%28System.String%2CSystem.Int32%29>sobrecarga de método com o tamanho de memória intermédia de predefinição.</xref:System.IO.File.Create%28System.String%2CSystem.Int32%29>       O `path` parâmetro é permitido para especificar as informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativos ao diretório de trabalho atual. Para obter o atual diretório de trabalho, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Se o ficheiro especificado não existir, será criado; Se existir e não é só de leitura, os conteúdos são substituídos.       Por predefinição, é concedido acesso de leitura/escrita completa para novos ficheiros para todos os utilizadores. O ficheiro está aberto com acesso de leitura/escrita e tem de ser fechado antes que podem ser aberto por outra aplicação.       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates a file in the specified path, writes some information to the file, and reads from the file.  \n  \n [!code-cs[File Create1#1](~/add/codesnippet/csharp/m-system.io.file.create-_0_1.cs)]\n [!code-cpp[File Create1#1](~/add/codesnippet/cpp/m-system.io.file.create-_0_1.cpp)]\n [!code-vb[File Create1#1](~/add/codesnippet/visualbasic/m-system.io.file.create-_0_1.vb)]"
  syntax:
    content: public static System.IO.FileStream Create (string path);
    parameters:
    - id: path
      type: System.String
      description: "O caminho e nome do ficheiro a criar."
    return:
      type: System.IO.FileStream
      description: "A <xref href=&quot;System.IO.FileStream&quot;> </xref> que fornece acesso de leitura/escrita para o ficheiro especificado no <code> path </code>."
  overload: System.IO.File.Create*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária.       - ou - <code> path </code> especificado um ficheiro que é só de leitura."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido (por exemplo, é numa unidade não mapeada)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao criar o ficheiro."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>é um formato inválido."
  platform:
  - net462
- uid: System.IO.File.Create(System.String,System.Int32)
  id: Create(System.String,System.Int32)
  parent: System.IO.File
  langs:
  - csharp
  name: Create(String,Int32)
  nameWithType: File.Create(String,Int32)
  fullName: System.IO.File.Create(String,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Cria ou substitui o ficheiro especificado."
  remarks: "O <xref:System.IO.FileStream>objeto criado por este método tem uma predefinição <xref:System.IO.FileShare>valor <xref:System.IO.FileShare>; nenhum outro processo ou código pode aceder ao ficheiro criado enquanto o identificador de ficheiro original for fechado.</xref:System.IO.FileShare> </xref:System.IO.FileShare> </xref:System.IO.FileStream>       O `path` parâmetro é permitido para especificar as informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativos ao diretório de trabalho atual. Para obter o atual diretório de trabalho, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Este método é equivalente à <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29>sobrecarga de construtor.</xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29> Se o ficheiro especificado não existir, será criado; Se existir e não é só de leitura, os conteúdos são substituídos.       Por predefinição, é concedido acesso de leitura/escrita completa para novos ficheiros para todos os utilizadores. O ficheiro está aberto com acesso de leitura/escrita e tem de ser fechado antes que podem ser aberto por outra aplicação.       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates a file with the specified buffer size.  \n  \n [!code-cs[File Create2#1](~/add/codesnippet/csharp/m-system.io.file.create-_1_1.cs)]\n [!code-vb[File Create2#1](~/add/codesnippet/visualbasic/m-system.io.file.create-_1_1.vb)]\n [!code-cpp[File Create2#1](~/add/codesnippet/cpp/m-system.io.file.create-_1_1.cpp)]"
  syntax:
    content: public static System.IO.FileStream Create (string path, int bufferSize);
    parameters:
    - id: path
      type: System.String
      description: "O nome do ficheiro."
    - id: bufferSize
      type: System.Int32
      description: "O número de bytes de memória intermédia para lê e escreve no ficheiro."
    return:
      type: System.IO.FileStream
      description: "A <xref href=&quot;System.IO.FileStream&quot;> </xref> com o tamanho da memória intermédia especificado que fornece acesso de leitura/escrita para o ficheiro especificado no <code> path </code>."
  overload: System.IO.File.Create*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária.       - ou - <code> path </code> especificado um ficheiro que é só de leitura."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido (por exemplo, é numa unidade não mapeada)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao criar o ficheiro."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>é um formato inválido."
  platform:
  - net462
- uid: System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions)
  id: Create(System.String,System.Int32,System.IO.FileOptions)
  parent: System.IO.File
  langs:
  - csharp
  name: Create(String,Int32,FileOptions)
  nameWithType: File.Create(String,Int32,FileOptions)
  fullName: System.IO.File.Create(String,Int32,FileOptions)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Cria ou substitui o ficheiro especificado, especificando um tamanho de memória intermédia e um <xref href=&quot;System.IO.FileOptions&quot;> </xref> valor que descreve como criar ou substituir o ficheiro."
  remarks: "O `path` parâmetro é permitido para especificar as informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativos ao diretório de trabalho atual. Para obter o atual diretório de trabalho, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Este método é equivalente à <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29>sobrecarga de construtor.</xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29> Se o ficheiro especificado não existir, será criado; Se existir e não é só de leitura, os conteúdos são substituídos.       Por predefinição, é concedido acesso de leitura/escrita completa para novos ficheiros para todos os utilizadores. O ficheiro está aberto com acesso de leitura/escrita e tem de ser fechado antes que podem ser aberto por outra aplicação.       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static System.IO.FileStream Create (string path, int bufferSize, System.IO.FileOptions options);
    parameters:
    - id: path
      type: System.String
      description: "O nome do ficheiro."
    - id: bufferSize
      type: System.Int32
      description: "O número de bytes de memória intermédia para lê e escreve no ficheiro."
    - id: options
      type: System.IO.FileOptions
      description: "Um do <xref href=&quot;System.IO.FileOptions&quot;> </xref> valores que descreve como criar ou substituir o ficheiro."
    return:
      type: System.IO.FileStream
      description: "Um novo ficheiro com o tamanho da memória intermédia especificado."
  overload: System.IO.File.Create*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária.       - ou - <code> path </code> especificado um ficheiro que é só de leitura."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido (por exemplo, é numa unidade não mapeada."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao criar o ficheiro."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>é um formato inválido."
  platform:
  - net462
- uid: System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)
  id: Create(System.String,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)
  parent: System.IO.File
  langs:
  - csharp
  name: Create(String,Int32,FileOptions,FileSecurity)
  nameWithType: File.Create(String,Int32,FileOptions,FileSecurity)
  fullName: System.IO.File.Create(String,Int32,FileOptions,FileSecurity)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Cria ou substitui o ficheiro especificado com o tamanho da memória intermédia especificado, as opções de ficheiro e segurança do ficheiro."
  remarks: "O `path` parâmetro é permitido para especificar as informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativos ao diretório de trabalho atual. Para obter o atual diretório de trabalho, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Este método é equivalente à <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29>sobrecarga de construtor.</xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.Int32%29> Se o ficheiro especificado não existir, será criado; Se existir e não é só de leitura, os conteúdos são substituídos.       Por predefinição, é concedido acesso de leitura/escrita completa para novos ficheiros para todos os utilizadores. O ficheiro está aberto com acesso de leitura/escrita e tem de ser fechado antes que podem ser aberto por outra aplicação.       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static System.IO.FileStream Create (string path, int bufferSize, System.IO.FileOptions options, System.Security.AccessControl.FileSecurity fileSecurity);
    parameters:
    - id: path
      type: System.String
      description: "O nome do ficheiro."
    - id: bufferSize
      type: System.Int32
      description: "O número de bytes de memória intermédia para lê e escreve no ficheiro."
    - id: options
      type: System.IO.FileOptions
      description: "Um do <xref href=&quot;System.IO.FileOptions&quot;> </xref> valores que descreve como criar ou substituir o ficheiro."
    - id: fileSecurity
      type: System.Security.AccessControl.FileSecurity
      description: "Um do <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> valores que determina o controlo de acesso e auditoria de segurança para o ficheiro."
    return:
      type: System.IO.FileStream
      description: "Um novo ficheiro com o tamanho da memória intermédia especificado, as opções de ficheiro e segurança do ficheiro."
  overload: System.IO.File.Create*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária.       - ou - <code> path </code> especificado um ficheiro que é só de leitura."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido (por exemplo, é numa unidade não mapeada)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao criar o ficheiro."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>é um formato inválido."
  platform:
  - net462
- uid: System.IO.File.CreateText(System.String)
  id: CreateText(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: CreateText(String)
  nameWithType: File.CreateText(String)
  fullName: System.IO.File.CreateText(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Cria ou abre um ficheiro para escrita texto codificado UTF-8."
  remarks: "Este método é equivalente à <xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%29>sobrecarga de construtor com o `append` parâmetro definido como `false`.</xref:System.IO.StreamWriter.%23ctor%28System.String%2CSystem.Boolean%29> Se o ficheiro especificado pelo `path` não existir, é criado. Se o ficheiro existe, o respetivo conteúdo é substituído. Threads adicionais têm permissão para ler o ficheiro enquanto estiver aberto.       O `path` parâmetro é permitido para especificar as informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativos ao diretório de trabalho atual. Para obter o atual diretório de trabalho, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates a file for text writing and reading.  \n  \n [!code-cs[File CreateText#1](~/add/codesnippet/csharp/m-system.io.file.createt_1.cs)]\n [!code-vb[File CreateText#1](~/add/codesnippet/visualbasic/m-system.io.file.createt_1.vb)]\n [!code-cpp[File CreateText#1](~/add/codesnippet/cpp/m-system.io.file.createt_1.cpp)]"
  syntax:
    content: public static System.IO.StreamWriter CreateText (string path);
    parameters:
    - id: path
      type: System.String
      description: "O ficheiro a ser aberta para escrita."
    return:
      type: System.IO.StreamWriter
      description: "A <xref:System.IO.StreamWriter>que escreve para o ficheiro especificado utilizando codificação UTF-8.</xref:System.IO.StreamWriter>"
  overload: System.IO.File.CreateText*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido (por exemplo, é numa unidade não mapeada)."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>é um formato inválido."
  platform:
  - net462
- uid: System.IO.File.Decrypt(System.String)
  id: Decrypt(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: Decrypt(String)
  nameWithType: File.Decrypt(String)
  fullName: System.IO.File.Decrypt(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Desencriptar um ficheiro que foi encriptado utilizando a conta atual o <xref:System.IO.File.Encrypt*>método.</xref:System.IO.File.Encrypt*>"
  remarks: "O método de desencriptação permite-lhe desencriptar um ficheiro que foi encriptado com a <xref:System.IO.File.Encrypt%2A>método.</xref:System.IO.File.Encrypt%2A>  O método de desencriptação pode desencriptar apenas os ficheiros que foram encriptados com a conta de utilizador atual.       O método de desencriptação requer acesso exclusivo ao ficheiro que está a ser desencriptado e irá emitir uma exceção se outro processo está a utilizar o ficheiro. Se o ficheiro não for encriptado, desencriptação irá devolver um valor diferente de zero, o que indica êxito.       Tanto o <xref:System.IO.File.Encrypt%2A>método e o método de desencriptação utilizam o fornecedor de serviços de criptografia (CSP) instalado no computador e as chaves de encriptação de ficheiro do processo de chamar o método.</xref:System.IO.File.Encrypt%2A>       O sistema de ficheiros atual tem de ser formatado como NTFS e o sistema operativo atual devem ser o Windows NT ou posterior."
  example:
  - "The following code example uses the <xref:System.IO.File.Encrypt%2A> method and the Decrypt method to encrypt and then decrypt a file. The file must exist for the example to work.  \n  \n [!code-cs[IO.File.Encrypt-Decrypt#1](~/add/codesnippet/csharp/m-system.io.file.decrypt_1.cs)]\n [!code-cpp[IO.File.Encrypt-Decrypt#1](~/add/codesnippet/cpp/m-system.io.file.decrypt_1.cpp)]\n [!code-vb[IO.File.Encrypt-Decrypt#1](~/add/codesnippet/visualbasic/m-system.io.file.decrypt_1.vb)]"
  syntax:
    content: public static void Decrypt (string path);
    parameters:
    - id: path
      type: System.String
      description: "Um caminho que descreve um ficheiro ao desencriptar."
  overload: System.IO.File.Decrypt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> path </code> parâmetro é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>.</xref:System.IO.Path.InvalidPathChars>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DriveNotFoundException
    commentId: T:System.IO.DriveNotFoundException
    description: "Foi especificada uma unidade inválida."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro descrito através de <code> path </code> não foi possível encontrar o parâmetro."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o ficheiro. Por exemplo, o ficheiro encriptado já está aberto.       - ou - esta operação não é suportada na plataforma atual."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "O sistema operativo atual não é Windows NT ou posterior."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O sistema de ficheiros não é NTFS."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O <code> path </code> parâmetro especificado um ficheiro que é só de leitura.       - ou - esta operação não é suportada na plataforma atual.       - ou - <code> path </code> parâmetro especificado um diretório.       - ou - o chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.File.Delete(System.String)
  id: Delete(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: Delete(String)
  nameWithType: File.Delete(String)
  fullName: System.IO.File.Delete(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Elimina o ficheiro especificado."
  remarks: "Especifique um nome de ficheiro com as informações de caminho relativo ou absoluto para o `path` parâmetro. Carateres universais não podem ser incluídos. Informações de caminho relativo são interpretadas como relativos ao diretório de trabalho atual. Para obter o atual diretório de trabalho, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Se o ficheiro a eliminar não existe, é emitida sem exceção.       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example copies groups of files to the C:\\archives\\2008 backup folder and then deletes them from the source folder.  \n  \n [!code-cs[FileCopyDelete#1](~/add/codesnippet/csharp/m-system.io.file.delete-_1.cs)]\n [!code-vb[FileCopyDelete#1](~/add/codesnippet/visualbasic/m-system.io.file.delete-_1.vb)]"
  syntax:
    content: public static void Delete (string path);
    parameters:
    - id: path
      type: System.String
      description: "O nome do ficheiro a ser eliminada. Carateres universais não são suportados."
  overload: System.IO.File.Delete*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido (por exemplo, é numa unidade não mapeada)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O ficheiro especificado está em utilização.       - ou - existe um identificador aberto no ficheiro e o sistema operativo for o Windows XP ou anteriores. Este identificador aberto poderá resultar de enumerar ficheiros e diretórios. Para obter mais informações, consulte [como: enumerar diretórios e ficheiros](~/add/includes/ajax-current-ext-md.md)."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>é um formato inválido."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária.       - ou - o ficheiro é um ficheiro executável que está a ser utilizado.       - ou - <code> path </code> é um diretório.       - ou - <code> path </code> especificado num ficheiro só de leitura."
  platform:
  - net462
- uid: System.IO.File.Encrypt(System.String)
  id: Encrypt(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: Encrypt(String)
  nameWithType: File.Encrypt(String)
  fullName: System.IO.File.Encrypt(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Encripta um ficheiro para que apenas a conta utilizada para encriptar o ficheiro pode desencriptá-lo."
  remarks: "O método de encriptar permite-lhe encriptar um ficheiro para que apenas a conta utilizada para chamar este método pode desencriptá-lo. Utilize o <xref:System.IO.File.Decrypt%2A>método para desencriptar um ficheiro encriptado pelo método de encriptar.</xref:System.IO.File.Decrypt%2A>       O método de encriptação requer acesso exclusivo ao ficheiro a ser encriptado e irá falhar se outro processo está a utilizar o ficheiro.       O método de encriptação e o <xref:System.IO.File.Decrypt%2A>método utilizam o fornecedor de serviços de criptografia (CSP) instalado no computador e as chaves de encriptação de ficheiro do processo de chamar o método.</xref:System.IO.File.Decrypt%2A>       Este método não está disponível em todas as versões do Windows. Por exemplo, não está disponível em edições de casa.       O sistema de ficheiros atual tem de ser formatado como NTFS."
  example:
  - "The following code example uses the Encrypt method and the <xref:System.IO.File.Decrypt%2A> method to encrypt and then decrypt a file. The file must exist for the example to work.  \n  \n [!code-cs[IO.File.Encrypt-Decrypt#1](~/add/codesnippet/csharp/m-system.io.file.encrypt_1.cs)]\n [!code-cpp[IO.File.Encrypt-Decrypt#1](~/add/codesnippet/cpp/m-system.io.file.encrypt_1.cpp)]\n [!code-vb[IO.File.Encrypt-Decrypt#1](~/add/codesnippet/visualbasic/m-system.io.file.encrypt_1.vb)]"
  syntax:
    content: public static void Encrypt (string path);
    parameters:
    - id: path
      type: System.String
      description: "Um caminho que descreve um ficheiro para encriptar."
  overload: System.IO.File.Encrypt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> path </code> parâmetro é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>.</xref:System.IO.Path.InvalidPathChars>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DriveNotFoundException
    commentId: T:System.IO.DriveNotFoundException
    description: "Foi especificada uma unidade inválida."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro descrito através de <code> path </code> não foi possível encontrar o parâmetro."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o ficheiro.       - ou - esta operação não é suportada na plataforma atual."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "O sistema operativo atual não é Windows NT ou posterior."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O sistema de ficheiros não é NTFS."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O <code> path </code> parâmetro especificado um ficheiro que é só de leitura.       - ou - esta operação não é suportada na plataforma atual.       - ou - <code> path </code> parâmetro especificado um diretório.       - ou - o chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.File.Exists(System.String)
  id: Exists(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: Exists(String)
  nameWithType: File.Exists(String)
  fullName: System.IO.File.Exists(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Determina se o ficheiro especificado existe."
  remarks: "O método Exists não deve ser utilizado para validação do caminho, este método simplesmente verifica se o ficheiro especificado na `path` existe. Transmissão de um caminho inválido para Exists devolve `false`. Para verificar se o caminho contém carateres inválidos, pode chamar o <xref:System.IO.Path.GetInvalidPathChars%2A>método para obter os carateres que são inválidos para o sistema de ficheiros.</xref:System.IO.Path.GetInvalidPathChars%2A> Também pode criar uma expressão regular para testar o se o caminho é válido para o seu ambiente. Para obter exemplos de caminhos aceitáveis, consulte <xref:System.IO.File>.</xref:System.IO.File>       Para verificar se existe um diretório, consulte <xref:System.IO.Directory.Exists%2A?displayProperty=fullName>.</xref:System.IO.Directory.Exists%2A?displayProperty=fullName>       Estar ciente de que outro processo pode potencialmente fazer algo com o ficheiro entre a hora que chame o método Exists e efetuar outra operação no ficheiro, tal como <xref:System.IO.File.Delete%2A>.</xref:System.IO.File.Delete%2A>       O `path` parâmetro é permitido para especificar as informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativos ao diretório de trabalho atual. Para obter o atual diretório de trabalho, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Se `path` descreve um diretório, este método devolve `false`. Espaços à direita são removidos a `path` parâmetro antes de determinar se o ficheiro existe.       O método Exists devolve `false` se qualquer erro ocorrer ao tentar determinar se o ficheiro especificado existe. Isto pode ocorrer em situações em que as exceções, tais como a passagem de um nome de ficheiro com carateres inválidos ou demasiados carateres, um disco falhar ou em falta, ou se o autor da chamada não tem permissão para ler o ficheiro."
  example:
  - "The following example determines if a file exists.  \n  \n [!code-vb[File Exists#1](~/add/codesnippet/visualbasic/m-system.io.file.exists-_1.vb)]\n [!code-cs[File Exists#1](~/add/codesnippet/csharp/m-system.io.file.exists-_1.cs)]"
  syntax:
    content: public static bool Exists (string path);
    parameters:
    - id: path
      type: System.String
      description: "O ficheiro para verificar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o autor da chamada tem as permissões necessárias e <code> path </code> contém o nome de um ficheiro existente; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Este método devolve também <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se <code> path </code> é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, um caminho inválido ou uma cadeia de comprimento zero. Se o autor da chamada não tem permissões suficientes para ler o ficheiro especificado, é emitida sem exceção e o método devolve <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> independentemente a existência de <code> path </code>."
  overload: System.IO.File.Exists*
  exceptions: []
  platform:
  - net462
- uid: System.IO.File.GetAccessControl(System.String)
  id: GetAccessControl(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: GetAccessControl(String)
  nameWithType: File.GetAccessControl(String)
  fullName: System.IO.File.GetAccessControl(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Obtém um <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> objecto que encapsula as entradas de lista (ACL) de controlo de acesso de um ficheiro especificado."
  remarks: "Utilize o método GetAccessControl para obter as entradas de lista (ACL) de controlo de acesso para um ficheiro.       Uma ACL descreve indivíduos e/ou grupos de utilizadores que tenham ou não tem, direitos para as ações específicas sobre o ficheiro. Para obter mais informações, consulte [como: Adicionar ou remover entradas de lista de controlo de acesso](~/add/includes/ajax-current-ext-md.md).       Em ambientes de NTFS, <xref:System.Security.AccessControl.FileSystemRights>e <xref:System.Security.AccessControl.FileSystemRights>concedidas ao utilizador se o utilizador tiver <xref:System.Security.AccessControl.FileSystemRights>direitos na pasta principal.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> Para negar <xref:System.Security.AccessControl.FileSystemRights>e <xref:System.Security.AccessControl.FileSystemRights>, negar <xref:System.Security.AccessControl.FileSystemRights>no diretório principal.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>"
  example:
  - "The following code example uses the <xref:System.IO.File.GetAccessControl%2A> and the <xref:System.IO.File.SetAccessControl%2A> methods to add and then remove an access control list (ACL) entry from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cs[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/m-system.io.file.getacce_1.cs)]\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/m-system.io.file.getacce_1.vb)]\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/m-system.io.file.getacce_1.cpp)]"
  syntax:
    content: public static System.Security.AccessControl.FileSecurity GetAccessControl (string path);
    parameters:
    - id: path
      type: System.String
      description: "O caminho para um ficheiro que contém um <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> objeto que descreve informações de lista (ACL) de controlo de acesso do ficheiro."
    return:
      type: System.Security.AccessControl.FileSecurity
      description: "A <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> regras de objecto que encapsula o controlo de acesso para o ficheiro descrito através de <code> path </code> parâmetro."
  overload: System.IO.File.GetAccessControl*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o ficheiro."
  - type: System.Runtime.InteropServices.SEHException
    commentId: T:System.Runtime.InteropServices.SEHException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "Não foi possível encontrar o ficheiro."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O <code> path </code> parâmetro especificado um ficheiro que é só de leitura.       - ou - esta operação não é suportada na plataforma atual.       - ou - <code> path </code> parâmetro especificado um diretório.       - ou - o chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.File.GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)
  id: GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)
  parent: System.IO.File
  langs:
  - csharp
  name: GetAccessControl(String,AccessControlSections)
  nameWithType: File.GetAccessControl(String,AccessControlSections)
  fullName: System.IO.File.GetAccessControl(String,AccessControlSections)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Obtém um <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> objecto que encapsula o tipo especificado de entradas de lista (ACL) de controlo de acesso para um ficheiro específico."
  remarks: "Utilize o método GetAccessControl para obter as entradas de lista (ACL) de controlo de acesso para um ficheiro.       Uma ACL descreve indivíduos e/ou grupos de utilizadores que tenham ou não tem, direitos para as ações específicas sobre o ficheiro. Para obter mais informações, consulte [como: Adicionar ou remover entradas de lista de controlo de acesso](~/add/includes/ajax-current-ext-md.md).       Em ambientes de NTFS, <xref:System.Security.AccessControl.FileSystemRights>e <xref:System.Security.AccessControl.FileSystemRights>concedidas ao utilizador se o utilizador tiver <xref:System.Security.AccessControl.FileSystemRights>direitos na pasta principal.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> Para negar <xref:System.Security.AccessControl.FileSystemRights>e <xref:System.Security.AccessControl.FileSystemRights>, negar <xref:System.Security.AccessControl.FileSystemRights>no diretório principal.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>"
  syntax:
    content: public static System.Security.AccessControl.FileSecurity GetAccessControl (string path, System.Security.AccessControl.AccessControlSections includeSections);
    parameters:
    - id: path
      type: System.String
      description: "O caminho para um ficheiro que contém um <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> objeto que descreve informações de lista (ACL) de controlo de acesso do ficheiro."
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: "Um do <xref href=&quot;System.Security.AccessControl.AccessControlSections&quot;> </xref> valores que especifica o tipo de acesso controlam informações de lista (ACL) para receber."
    return:
      type: System.Security.AccessControl.FileSecurity
      description: "A <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> regras de objecto que encapsula o controlo de acesso para o ficheiro descrito através de <code> path </code> parâmetro."
  overload: System.IO.File.GetAccessControl*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o ficheiro."
  - type: System.Runtime.InteropServices.SEHException
    commentId: T:System.Runtime.InteropServices.SEHException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "Não foi possível encontrar o ficheiro."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O <code> path </code> parâmetro especificado um ficheiro que é só de leitura.       - ou - esta operação não é suportada na plataforma atual.       - ou - <code> path </code> parâmetro especificado um diretório.       - ou - o chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.File.GetAttributes(System.String)
  id: GetAttributes(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: GetAttributes(String)
  nameWithType: File.GetAttributes(String)
  fullName: System.IO.File.GetAttributes(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Obtém o <xref href=&quot;System.IO.FileAttributes&quot;> </xref> do ficheiro no caminho."
  remarks: "O `path` parâmetro é permitido para especificar as informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativos ao diretório de trabalho atual. Para obter o atual diretório de trabalho, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates the `GetAttributes` and `SetAttributes` methods by applying the `Archive` and `Hidden` attributes to a file.  \n  \n [!code-cs[File GetAttributes#1](~/add/codesnippet/csharp/m-system.io.file.getattr_1.cs)]\n [!code-cpp[File GetAttributes#1](~/add/codesnippet/cpp/m-system.io.file.getattr_1.cpp)]\n [!code-vb[File GetAttributes#1](~/add/codesnippet/visualbasic/m-system.io.file.getattr_1.vb)]"
  syntax:
    content: public static System.IO.FileAttributes GetAttributes (string path);
    parameters:
    - id: path
      type: System.String
      description: "O caminho para o ficheiro."
    return:
      type: System.IO.FileAttributes
      description: "O <xref href=&quot;System.IO.FileAttributes&quot;> </xref> do ficheiro no caminho."
  overload: System.IO.File.GetAttributes*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>está vazia, contém apenas por espaços em branco ou contém carateres inválidos."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>é um formato inválido."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<code>path</code>representa um ficheiro e é inválido, tais como estando numa unidade não mapeada, ou o ficheiro não é possível encontrar."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>path</code>representa um diretório e é inválido, tais como estando numa unidade não mapeada, ou o diretório não encontrado."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Este ficheiro está a ser utilizado por outro processo."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.File.GetCreationTime(System.String)
  id: GetCreationTime(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: GetCreationTime(String)
  nameWithType: File.GetCreationTime(String)
  fullName: System.IO.File.GetCreationTime(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Devolve a data de criação e a hora do ficheiro especificado ou diretório."
  remarks: "> [!NOTE]> Este método pode devolver um valor de incorreta, porque utiliza as funções nativas cujos valores não podem ser atualizados continuamente pelo sistema operativo.       O `path` parâmetro é permitido para especificar as informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativos ao diretório de trabalho atual. Para obter o atual diretório de trabalho, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Se o ficheiro descrito a `path` parâmetro não existe, este método devolve 12:00, 1 de Janeiro de 1601 a.d. (E.C.) Hora Universal Coordenada (UTC), tendo em conta a hora local.       Unidades formatadas com o NTFS podem colocar em cache as informações sobre um ficheiro, tal como o tempo de criação do ficheiro, durante um curto período de tempo. Como resultado, poderá ser necessário definir explicitamente a hora de criação de um ficheiro se estiver a substituir o ou substituir um ficheiro existente.       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates `GetCreationTime`.  \n  \n [!code-vb[System.IO.File.GetCreationTime#1](~/add/codesnippet/visualbasic/m-system.io.file.getcrea_0_1.vb)]"
  syntax:
    content: public static DateTime GetCreationTime (string path);
    parameters:
    - id: path
      type: System.String
      description: "O ficheiro ou diretório no qual pretende obter informações de data e hora de criação."
    return:
      type: System.DateTime
      description: "A <xref:System.DateTime>estrutura definido para a data de criação e a hora para o diretório ou ficheiro especificados.</xref:System.DateTime> Este valor é expresso em hora local."
  overload: System.IO.File.GetCreationTime*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>é um formato inválido."
  platform:
  - net462
- uid: System.IO.File.GetCreationTimeUtc(System.String)
  id: GetCreationTimeUtc(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: GetCreationTimeUtc(String)
  nameWithType: File.GetCreationTimeUtc(String)
  fullName: System.IO.File.GetCreationTimeUtc(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Devolve a data de criação e a hora, na hora de universal coordenada (UTC), do diretório ou ficheiro especificado."
  remarks: "> [!NOTE]> Este método pode devolver um valor de incorreta, porque utiliza as funções nativas cujos valores não podem ser atualizados continuamente pelo sistema operativo.       Se o ficheiro descrito a `path` parâmetro não existe, este método devolve 12:00, 1 de Janeiro de 1601 a.d. (E.C.) Hora de Universal Coordenada (UTC).       Unidades formatadas com o NTFS podem colocar em cache as informações sobre um ficheiro, tal como o tempo de criação do ficheiro, durante um curto período de tempo. Como resultado, poderá ser necessário definir explicitamente a hora de criação de um ficheiro se estiver a substituir o ou substituir um ficheiro existente.       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates the GetCreationTimeUtc method.  \n  \n [!code-vb[System.IO.File.GetCreationTime#2](~/add/codesnippet/visualbasic/m-system.io.file.getcrea_1_1.vb)]"
  syntax:
    content: public static DateTime GetCreationTimeUtc (string path);
    parameters:
    - id: path
      type: System.String
      description: "O ficheiro ou diretório no qual pretende obter informações de data e hora de criação."
    return:
      type: System.DateTime
      description: "A <xref:System.DateTime>estrutura definido para a data de criação e a hora para o diretório ou ficheiro especificados.</xref:System.DateTime> Este valor é expresso na hora UTC."
  overload: System.IO.File.GetCreationTimeUtc*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>é um formato inválido."
  platform:
  - net462
- uid: System.IO.File.GetLastAccessTime(System.String)
  id: GetLastAccessTime(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: GetLastAccessTime(String)
  nameWithType: File.GetLastAccessTime(String)
  fullName: System.IO.File.GetLastAccessTime(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Devolve a data e hora especificadas ficheiro ou diretório foi acedida pela última vez."
  remarks: "> [!NOTE]> Este método pode devolver um valor de incorreta, porque utiliza as funções nativas cujos valores não podem ser atualizados continuamente pelo sistema operativo.       Se o ficheiro descrito a `path` parâmetro não existe, este método devolve 12:00, 1 de Janeiro de 1601 a.d. (E.C.) Hora Universal Coordenada (UTC), tendo em conta a hora local.       O `path` parâmetro é permitido para especificar as informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativos ao diretório de trabalho atual. Para obter o atual diretório de trabalho, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates `GetLastAccessTime`.  \n  \n [!code-vb[File GetLastAccess#1](~/add/codesnippet/visualbasic/m-system.io.file.getlast_1_1.vb)]\n [!code-cs[File GetLastAccess#1](~/add/codesnippet/csharp/m-system.io.file.getlast_1_1.cs)]\n [!code-cpp[File GetLastAccess#1](~/add/codesnippet/cpp/m-system.io.file.getlast_1_1.cpp)]"
  syntax:
    content: public static DateTime GetLastAccessTime (string path);
    parameters:
    - id: path
      type: System.String
      description: "O ficheiro ou diretório no qual pretende obter acesso a informações de data e hora."
    return:
      type: System.DateTime
      description: "A <xref:System.DateTime>estrutura definido como a data e hora em que o ficheiro especificado ou diretório foi acedida pela última vez.</xref:System.DateTime> Este valor é expresso em hora local."
  overload: System.IO.File.GetLastAccessTime*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>é um formato inválido."
  platform:
  - net462
- uid: System.IO.File.GetLastAccessTimeUtc(System.String)
  id: GetLastAccessTimeUtc(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: GetLastAccessTimeUtc(String)
  nameWithType: File.GetLastAccessTimeUtc(String)
  fullName: System.IO.File.GetLastAccessTimeUtc(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Devolve a data e hora, na hora universal coordenada (UTC), que o ficheiro especificado ou diretório foi acedida pela última vez."
  remarks: "> [!NOTE]> Este método pode devolver um valor de incorreta, porque utiliza as funções nativas cujos valores não podem ser atualizados continuamente pelo sistema operativo.       Se o ficheiro descrito a `path` parâmetro não existe, este método devolve 12:00, 1 de Janeiro de 1601 a.d. (E.C.) Hora de Universal Coordenada (UTC).       O `path` parâmetro é permitido para especificar as informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativos ao diretório de trabalho atual. Para obter o atual diretório de trabalho, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static DateTime GetLastAccessTimeUtc (string path);
    parameters:
    - id: path
      type: System.String
      description: "O ficheiro ou diretório no qual pretende obter acesso a informações de data e hora."
    return:
      type: System.DateTime
      description: "A <xref:System.DateTime>estrutura definido como a data e hora em que o ficheiro especificado ou diretório foi acedida pela última vez.</xref:System.DateTime> Este valor é expresso na hora UTC."
  overload: System.IO.File.GetLastAccessTimeUtc*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>é um formato inválido."
  platform:
  - net462
- uid: System.IO.File.GetLastWriteTime(System.String)
  id: GetLastWriteTime(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: GetLastWriteTime(String)
  nameWithType: File.GetLastWriteTime(String)
  fullName: System.IO.File.GetLastWriteTime(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Devolve a data e hora especificadas ficheiro ou diretório pela última vez foi escrito."
  remarks: "> [!NOTE]> Este método pode devolver um valor de incorreta, porque utiliza as funções nativas cujos valores não podem ser atualizados continuamente pelo sistema operativo. Cada sistema operativo gere a hora da última escrita, de acordo com as suas próprias regras. Para melhorar o desempenho, um sistema operativo não pode definir o valor de hora do último escrita à hora exata da última operação de escrita, mas pode configurá-lo para uma aproximação em vez disso.       Se o ficheiro descrito a `path` parâmetro não existe, este método devolve 12:00, 1 de Janeiro de 1601 a.d. (E.C.) Hora Universal Coordenada (UTC), tendo em conta a hora local.       O `path` parâmetro é permitido para especificar as informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativos ao diretório de trabalho atual. Para obter o atual diretório de trabalho, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates `GetLastWriteTime`.  \n  \n [!code-cpp[File GetLastWrite#1](~/add/codesnippet/cpp/m-system.io.file.getlast_0_1.cpp)]\n [!code-vb[File GetLastWrite#1](~/add/codesnippet/visualbasic/m-system.io.file.getlast_0_1.vb)]\n [!code-cs[File GetLastWrite#1](~/add/codesnippet/csharp/m-system.io.file.getlast_0_1.cs)]"
  syntax:
    content: public static DateTime GetLastWriteTime (string path);
    parameters:
    - id: path
      type: System.String
      description: "O ficheiro ou diretório no qual pretende obter informações de data e hora de escrita."
    return:
      type: System.DateTime
      description: "A <xref:System.DateTime>estrutura definido para a data e hora em que o ficheiro especificado ou o diretório pela última vez foi escrito.</xref:System.DateTime> Este valor é expresso em hora local."
  overload: System.IO.File.GetLastWriteTime*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>é um formato inválido."
  platform:
  - net462
- uid: System.IO.File.GetLastWriteTimeUtc(System.String)
  id: GetLastWriteTimeUtc(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: GetLastWriteTimeUtc(String)
  nameWithType: File.GetLastWriteTimeUtc(String)
  fullName: System.IO.File.GetLastWriteTimeUtc(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Devolve a data e hora, na hora de universal coordenada (UTC), o ficheiro especificado ou o diretório última escrita."
  remarks: "> [!NOTE]> Este método pode devolver um valor de incorreta, porque utiliza as funções nativas cujos valores não podem ser atualizados continuamente pelo sistema operativo. Cada sistema operativo gere a hora da última escrita, de acordo com as suas próprias regras. Para melhorar o desempenho, um sistema operativo não pode definir o valor de hora do último escrita à hora exata da última operação de escrita, mas pode configurá-lo para uma aproximação em vez disso.       Se o ficheiro descrito a `path` parâmetro não existe, este método devolve 12:00, 1 de Janeiro de 1601 a.d. (E.C.) Hora de Universal Coordenada (UTC).       O `path` parâmetro é permitido para especificar as informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativos ao diretório de trabalho atual. Para obter o atual diretório de trabalho, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static DateTime GetLastWriteTimeUtc (string path);
    parameters:
    - id: path
      type: System.String
      description: "O ficheiro ou diretório no qual pretende obter informações de data e hora de escrita."
    return:
      type: System.DateTime
      description: "A <xref:System.DateTime>estrutura definido para a data e hora em que o ficheiro especificado ou o diretório pela última vez foi escrito.</xref:System.DateTime> Este valor é expresso na hora UTC."
  overload: System.IO.File.GetLastWriteTimeUtc*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>é um formato inválido."
  platform:
  - net462
- uid: System.IO.File.Move(System.String,System.String)
  id: Move(System.String,System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: Move(String,String)
  nameWithType: File.Move(String,String)
  fullName: System.IO.File.Move(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Move um ficheiro especificado para uma nova localização, fornecendo a opção de especificar um novo nome de ficheiro."
  remarks: "Este método funciona entre volumes de disco e não gerar uma exceção se a origem e de destino são os mesmos. Tenha em atenção que se tentar substituir um ficheiro ao mover um ficheiro com o mesmo nome no diretório, receberá um <xref:System.IO.IOException>.</xref:System.IO.IOException> Não é possível utilizar o método Move para substituir um ficheiro existente.       O `sourceFileName` e `destFileName` argumentos podem incluir informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativos ao diretório de trabalho atual. Para obter o atual diretório de trabalho, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Se tentar mover um ficheiro entre volumes de disco e se o ficheiro está em utilização, o ficheiro é copiado para o destino, mas não é eliminado da origem.       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example moves a file.  \n  \n [!code-cpp[File Move#1](~/add/codesnippet/cpp/m-system.io.file.move-sy_1.cpp)]\n [!code-cs[File Move#1](~/add/codesnippet/csharp/m-system.io.file.move-sy_1.cs)]\n [!code-vb[File Move#1](~/add/codesnippet/visualbasic/m-system.io.file.move-sy_1.vb)]"
  syntax:
    content: public static void Move (string sourceFileName, string destFileName);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "O nome do ficheiro para mover. Pode incluir um caminho relativo ou absoluto."
    - id: destFileName
      type: System.String
      description: "O novo caminho e nome do ficheiro."
  overload: System.IO.File.Move*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O ficheiro de destino já existe.       -or-       <code>sourceFileName</code> was not found."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceFileName</code>or <code>destFileName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sourceFileName</code>ou <code>destFileName</code> é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém carateres inválidos, tal como definido no <xref:System.IO.Path.InvalidPathChars>."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado na <code> sourceFileName </code> ou <code> destFileName </code> é inválido, (por exemplo, é numa unidade não mapeada)."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>sourceFileName</code>ou <code>destFileName</code> está num formato inválido."
  platform:
  - net462
- uid: System.IO.File.Open(System.String,System.IO.FileMode)
  id: Open(System.String,System.IO.FileMode)
  parent: System.IO.File
  langs:
  - csharp
  name: Open(String,FileMode)
  nameWithType: File.Open(String,FileMode)
  fullName: System.IO.File.Open(String,FileMode)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Abre uma <xref href=&quot;System.IO.FileStream&quot;> </xref> no caminho especificado com acesso de leitura/escrita."
  remarks: "O `path` parâmetro é permitido para especificar as informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativos ao diretório de trabalho atual. Para obter o atual diretório de trabalho, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example creates a temporary file and writes some text to it. The example then opens the file, using T:System.IO.FileMode.Open; that is, if the file did not already exist, it would not be created.  \n  \n [!code-cpp[File Open1#1](~/add/codesnippet/cpp/m-system.io.file.open-sy_0_1.cpp)]\n [!code-cs[File Open1#1](~/add/codesnippet/csharp/m-system.io.file.open-sy_0_1.cs)]\n [!code-vb[File Open1#1](~/add/codesnippet/visualbasic/m-system.io.file.open-sy_0_1.vb)]"
  syntax:
    content: public static System.IO.FileStream Open (string path, System.IO.FileMode mode);
    parameters:
    - id: path
      type: System.String
      description: "O ficheiro para o abrir."
    - id: mode
      type: System.IO.FileMode
      description: "A <xref href=&quot;System.IO.FileMode&quot;> </xref> valor que especifica se é criado um ficheiro se não existir e determina se o conteúdo dos ficheiros existentes é mantido ou substituído."
    return:
      type: System.IO.FileStream
      description: "A <xref href=&quot;System.IO.FileStream&quot;> </xref> aberta no modo especificado e do caminho, com acesso de leitura/escrita e não partilhada."
  overload: System.IO.File.Open*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido, (por exemplo, é numa unidade não mapeada)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o ficheiro."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>especificar um ficheiro que é só de leitura.       - ou - esta operação não é suportada na plataforma atual.       - ou - <code>path</code> especificado um diretório.       - ou - o chamador não tem a permissão necessária.       - ou - <code>mode</code> é <xref href=&quot;System.IO.FileMode&quot;> </xref> e o ficheiro especificado é um ficheiro oculto."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>mode</code>especificar um valor inválido."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro especificado no <code> path </code> não foi encontrado."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>é um formato inválido."
  platform:
  - net462
- uid: System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  id: Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.File
  langs:
  - csharp
  name: Open(String,FileMode,FileAccess)
  nameWithType: File.Open(String,FileMode,FileAccess)
  fullName: System.IO.File.Open(String,FileMode,FileAccess)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Abre uma <xref href=&quot;System.IO.FileStream&quot;> </xref> no caminho especificado, com o modo especificado e o acesso."
  remarks: "O `path` parâmetro é permitido para especificar as informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativos ao diretório de trabalho atual. Para obter o atual diretório de trabalho, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>"
  example:
  - "The following example opens a file with read-only access.  \n  \n [!code-cs[file open2#1](~/add/codesnippet/csharp/m-system.io.file.open-sy_1_1.cs)]\n [!code-cpp[file open2#1](~/add/codesnippet/cpp/m-system.io.file.open-sy_1_1.cpp)]\n [!code-vb[file open2#1](~/add/codesnippet/visualbasic/m-system.io.file.open-sy_1_1.vb)]"
  syntax:
    content: public static System.IO.FileStream Open (string path, System.IO.FileMode mode, System.IO.FileAccess access);
    parameters:
    - id: path
      type: System.String
      description: "O ficheiro para o abrir."
    - id: mode
      type: System.IO.FileMode
      description: "A <xref href=&quot;System.IO.FileMode&quot;> </xref> valor que especifica se é criado um ficheiro se não existir e determina se o conteúdo dos ficheiros existentes é mantido ou substituído."
    - id: access
      type: System.IO.FileAccess
      description: "A <xref href=&quot;System.IO.FileAccess&quot;> </xref> valor que especifica as operações que podem ser efetuadas no ficheiro."
    return:
      type: System.IO.FileStream
      description: "Um sem <xref href=&quot;System.IO.FileStream&quot;> </xref> que fornece acesso ao ficheiro especificado, com o modo especificado e o acesso."
  overload: System.IO.File.Open*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>.       -or-       <code>access</code> specified <xref uid=&quot;langword_csharp_Read&quot; name=&quot;Read&quot; href=&quot;&quot;></xref> and <code>mode</code> specified <xref uid=&quot;langword_csharp_Create&quot; name=&quot;Create&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_CreateNew&quot; name=&quot;CreateNew&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Truncate&quot; name=&quot;Truncate&quot; href=&quot;&quot;></xref>, or <xref uid=&quot;langword_csharp_Append&quot; name=&quot;Append&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido, (por exemplo, é numa unidade não mapeada)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o ficheiro."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>especificar um ficheiro que é só de leitura e <code>access</code> não é <xref uid=&quot;langword_csharp_Read&quot; name=&quot;Read&quot; href=&quot;&quot;> </xref>.       - ou - <code>path</code> especificado um diretório.       - ou - o chamador não tem a permissão necessária.       - ou - <code>mode</code> é <xref href=&quot;System.IO.FileMode&quot;> </xref> e o ficheiro especificado é um ficheiro oculto."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>mode</code>ou <code>access</code> especificado um valor inválido."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro especificado no <code> path </code> não foi encontrado."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>é um formato inválido."
  platform:
  - net462
- uid: System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  id: Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  parent: System.IO.File
  langs:
  - csharp
  name: Open(String,FileMode,FileAccess,FileShare)
  nameWithType: File.Open(String,FileMode,FileAccess,FileShare)
  fullName: System.IO.File.Open(String,FileMode,FileAccess,FileShare)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Abre uma <xref href=&quot;System.IO.FileStream&quot;> </xref> no caminho especificado, ter o modo especificado com leitura, escrita ou leitura/escrita acesso e a opção de partilha especificada."
  remarks: "O `path` parâmetro é permitido para especificar as informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativos ao diretório de trabalho atual. Para obter o atual diretório de trabalho, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example opens a file with read-only access and with file sharing disallowed.  \n  \n [!code-cs[file open3#1](~/add/codesnippet/csharp/da5a0cfa-1b45-4d75-942d-_1.cs)]\n [!code-cpp[file open3#1](~/add/codesnippet/cpp/da5a0cfa-1b45-4d75-942d-_1.cpp)]\n [!code-vb[file open3#1](~/add/codesnippet/visualbasic/da5a0cfa-1b45-4d75-942d-_1.vb)]"
  syntax:
    content: public static System.IO.FileStream Open (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share);
    parameters:
    - id: path
      type: System.String
      description: "O ficheiro para o abrir."
    - id: mode
      type: System.IO.FileMode
      description: "A <xref href=&quot;System.IO.FileMode&quot;> </xref> valor que especifica se é criado um ficheiro se não existir e determina se o conteúdo dos ficheiros existentes é mantido ou substituído."
    - id: access
      type: System.IO.FileAccess
      description: "A <xref href=&quot;System.IO.FileAccess&quot;> </xref> valor que especifica as operações que podem ser efetuadas no ficheiro."
    - id: share
      type: System.IO.FileShare
      description: "A <xref href=&quot;System.IO.FileShare&quot;> </xref> valor especificar o tipo de acesso a outros threads de ter o ficheiro."
    return:
      type: System.IO.FileStream
      description: "A <xref href=&quot;System.IO.FileStream&quot;> </xref> no caminho especificado, ter o modo especificado com leitura, escrita ou leitura/escrita acesso e a opção de partilha especificada."
  overload: System.IO.File.Open*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>.       -or-       <code>access</code> specified <xref uid=&quot;langword_csharp_Read&quot; name=&quot;Read&quot; href=&quot;&quot;></xref> and <code>mode</code> specified <xref uid=&quot;langword_csharp_Create&quot; name=&quot;Create&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_CreateNew&quot; name=&quot;CreateNew&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Truncate&quot; name=&quot;Truncate&quot; href=&quot;&quot;></xref>, or <xref uid=&quot;langword_csharp_Append&quot; name=&quot;Append&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido, (por exemplo, é numa unidade não mapeada)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o ficheiro."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>especificar um ficheiro que é só de leitura e <code>access</code> não é <xref uid=&quot;langword_csharp_Read&quot; name=&quot;Read&quot; href=&quot;&quot;> </xref>.       - ou - <code>path</code> especificado um diretório.       - ou - o chamador não tem a permissão necessária.       - ou - <code>mode</code> é <xref href=&quot;System.IO.FileMode&quot;> </xref> e o ficheiro especificado é um ficheiro oculto."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>mode</code>, <code>access</code>, ou <code>share</code> especificado um valor inválido."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro especificado no <code> path </code> não foi encontrado."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>é um formato inválido."
  platform:
  - net462
- uid: System.IO.File.OpenRead(System.String)
  id: OpenRead(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: OpenRead(String)
  nameWithType: File.OpenRead(String)
  fullName: System.IO.File.OpenRead(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Abre um ficheiro existente para leitura."
  remarks: "Este método é equivalente ao <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%29>construtor sobrecarga com um <xref:System.IO.FileMode>valor de <xref:System.IO.FileMode>um <xref:System.IO.FileAccess>valor de <xref:System.IO.FileAccess>um <xref:System.IO.FileShare>valor de <xref:System.IO.FileShare>.</xref:System.IO.FileShare> </xref:System.IO.FileShare> e</xref:System.IO.FileAccess> </xref:System.IO.FileAccess> </xref:System.IO.FileMode> </xref:System.IO.FileMode> </xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%29>       O `path` parâmetro é permitido para especificar as informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativos ao diretório de trabalho atual. Para obter o atual diretório de trabalho, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example opens a file for reading.  \n  \n [!code-cs[file openread#1](~/add/codesnippet/csharp/m-system.io.file.openrea_1.cs)]\n [!code-vb[file openread#1](~/add/codesnippet/visualbasic/m-system.io.file.openrea_1.vb)]\n [!code-cpp[file openread#1](~/add/codesnippet/cpp/m-system.io.file.openrea_1.cpp)]"
  syntax:
    content: public static System.IO.FileStream OpenRead (string path);
    parameters:
    - id: path
      type: System.String
      description: "O ficheiro a ser aberto para leitura."
    return:
      type: System.IO.FileStream
      description: "Um só de leitura <xref href=&quot;System.IO.FileStream&quot;> </xref> no caminho especificado."
  overload: System.IO.File.OpenRead*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido, (por exemplo, é numa unidade não mapeada)."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>especificar um diretório.       - ou - o chamador não tem a permissão necessária."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro especificado no <code> path </code> não foi encontrado."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>é um formato inválido."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o ficheiro."
  platform:
  - net462
- uid: System.IO.File.OpenText(System.String)
  id: OpenText(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: OpenText(String)
  nameWithType: File.OpenText(String)
  fullName: System.IO.File.OpenText(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Abre um ficheiro de texto codificado UTF-8 existente para leitura."
  remarks: "Este método é equivalente à <xref:System.IO.StreamReader.%23ctor%28System.String%29>sobrecarga de construtor.</xref:System.IO.StreamReader.%23ctor%28System.String%29>       O `path` parâmetro é permitido para especificar as informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativos ao diretório de trabalho atual. Para obter o atual diretório de trabalho, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example opens a text file for reading.  \n  \n [!code-vb[file opentext#1](~/add/codesnippet/visualbasic/m-system.io.file.opentex_1.vb)]\n [!code-cs[file opentext#1](~/add/codesnippet/csharp/m-system.io.file.opentex_1.cs)]\n [!code-cpp[file opentext#1](~/add/codesnippet/cpp/m-system.io.file.opentex_1.cpp)]"
  syntax:
    content: public static System.IO.StreamReader OpenText (string path);
    parameters:
    - id: path
      type: System.String
      description: "O ficheiro a ser aberto para leitura."
    return:
      type: System.IO.StreamReader
      description: "Um <xref:System.IO.StreamReader>no caminho especificado.</xref:System.IO.StreamReader>"
  overload: System.IO.File.OpenText*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido, (por exemplo, é numa unidade não mapeada)."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro especificado no <code> path </code> não foi encontrado."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>é um formato inválido."
  platform:
  - net462
- uid: System.IO.File.OpenWrite(System.String)
  id: OpenWrite(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: OpenWrite(String)
  nameWithType: File.OpenWrite(String)
  fullName: System.IO.File.OpenWrite(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Abre um ficheiro existente ou cria um novo ficheiro para escrita."
  remarks: "Este método é equivalente à <xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%29>sobrecarga de construtor com o modo de ficheiro definido como <xref:System.IO.FileMode>, o acesso definido como <xref:System.IO.FileAccess>e o modo de partilha definida para <xref:System.IO.FileShare>.</xref:System.IO.FileShare> </xref:System.IO.FileAccess> </xref:System.IO.FileMode> </xref:System.IO.FileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%29>       O método OpenWrite abre um ficheiro, se um já existe para o caminho do ficheiro ou cria um novo ficheiro, se não existir. Para um ficheiro existente, não-acrescentar o novo texto para o texto existente. Em vez disso, substitui os carateres existentes com os carateres de novo. Se substituir uma cadeia de tempo (tais como &quot;Este é um teste do método OpenWrite&quot;) com uma cadeia mais curta (como &quot;executar segundo&quot;), o ficheiro irá conter uma combinação das cadeias (&quot;segundo runtest do método OpenWrite&quot;).       O `path` parâmetro pode especificar informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativos ao diretório de trabalho atual. Para obter o diretório de trabalho atual, utilize o <xref:System.IO.Directory.GetCurrentDirectory%2A>método.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example opens a file for reading and writing.  \n  \n [!code-cpp[file openwrite#1](~/add/codesnippet/cpp/m-system.io.file.openwri_1.cpp)]\n [!code-cs[file openwrite#1](~/add/codesnippet/csharp/m-system.io.file.openwri_1.cs)]\n [!code-vb[file openwrite#1](~/add/codesnippet/visualbasic/m-system.io.file.openwri_1.vb)]"
  syntax:
    content: public static System.IO.FileStream OpenWrite (string path);
    parameters:
    - id: path
      type: System.String
      description: "O ficheiro a ser aberta para escrita."
    return:
      type: System.IO.FileStream
      description: "Um sem <xref href=&quot;System.IO.FileStream&quot;> </xref> objeto no caminho especificado com <xref href=&quot;System.IO.FileAccess&quot;> </xref> acesso."
  overload: System.IO.File.OpenWrite*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária.       - ou - <code> path </code> especificado um ficheiro só de leitura ou diretório."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido, (por exemplo, é numa unidade não mapeada)."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>é um formato inválido."
  platform:
  - net462
- uid: System.IO.File.ReadAllBytes(System.String)
  id: ReadAllBytes(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: ReadAllBytes(String)
  nameWithType: File.ReadAllBytes(String)
  fullName: System.IO.File.ReadAllBytes(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Abre um ficheiro binário, lê o conteúdo do ficheiro para uma matriz de bytes e, em seguida, fecha o ficheiro."
  remarks: "Fornecido um caminho de ficheiro, este método abre o ficheiro, lê o conteúdo do ficheiro para uma matriz de bytes e, em seguida, fecha o ficheiro."
  syntax:
    content: public static byte[] ReadAllBytes (string path);
    parameters:
    - id: path
      type: System.String
      description: "O ficheiro a abrir para leitura."
    return:
      type: System.Byte[]
      description: "Uma matriz de bytes que contém o conteúdo do ficheiro."
  overload: System.IO.File.ReadAllBytes*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido (por exemplo, é numa unidade não mapeada)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o ficheiro."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Esta operação não é suportada na plataforma atual.       - ou - <code> path </code> especificado um diretório.       - ou - o chamador não tem a permissão necessária."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro especificado no <code> path </code> não foi encontrado."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>é um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.File.ReadAllLines(System.String)
  id: ReadAllLines(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: ReadAllLines(String)
  nameWithType: File.ReadAllLines(String)
  fullName: System.IO.File.ReadAllLines(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Abre um ficheiro de texto, lê todas as linhas do ficheiro e, em seguida, fecha o ficheiro."
  remarks: "This method opens a file, reads each line of the file, then adds each line as an element of a string array. It then closes the file. A line is defined as a sequence of characters followed by a carriage return ('\\r'), a line feed ('\\n'), or a carriage return immediately followed by a line feed. The resulting string does not contain the terminating carriage return and/or line feed.  \n  \n This method attempts to automatically detect the encoding of a file based on the presence of byte order marks. Encoding formats UTF-8 and UTF-32 (both big-endian and little-endian) can be detected."
  example:
  - "The following code example demonstrates the use of the ReadAllLines method to display the contents of a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \n  \n [!code-vb[System.IO.File.AllLines#00](~/add/codesnippet/visualbasic/m-system.io.file.readall_1_1.vb)]\n [!code-cs[System.IO.File.AllLines#00](~/add/codesnippet/csharp/m-system.io.file.readall_1_1.cs)]"
  syntax:
    content: public static string[] ReadAllLines (string path);
    parameters:
    - id: path
      type: System.String
      description: "O ficheiro a abrir para leitura."
    return:
      type: System.String[]
      description: "Uma matriz de cadeia que contém todas as linhas do ficheiro."
  overload: System.IO.File.ReadAllLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido (por exemplo, é numa unidade não mapeada)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o ficheiro."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>especificar um ficheiro que é só de leitura.       - ou - esta operação não é suportada na plataforma atual.       - ou - <code>path</code> especificado um diretório.       - ou - o chamador não tem a permissão necessária."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro especificado no <code> path </code> não foi encontrado."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>é um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.File.ReadAllLines(System.String,System.Text.Encoding)
  id: ReadAllLines(System.String,System.Text.Encoding)
  parent: System.IO.File
  langs:
  - csharp
  name: ReadAllLines(String,Encoding)
  nameWithType: File.ReadAllLines(String,Encoding)
  fullName: System.IO.File.ReadAllLines(String,Encoding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Abre um ficheiro, lê todas as linhas do ficheiro com a codificação especificada e, em seguida, fecha o ficheiro."
  remarks: "This method opens a file, reads each line of the file, and then adds each line as an element of a string array. It then closes the file. A line is defined as a sequence of characters followed by a carriage return ('\\r'), a line feed ('\\n'), or a carriage return immediately followed by a line feed. The resulting string does not contain the terminating carriage return and/or line feed.  \n  \n This method attempts to automatically detect the encoding of a file based on the presence of byte order marks. Encoding formats UTF-8 and UTF-32 (both big-endian and little-endian) can be detected."
  example:
  - "The following code example demonstrates the use of the ReadAllLines method to display the contents of a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \n  \n [!code-vb[System.IO.File.AllLines_Encoding#00](~/add/codesnippet/visualbasic/m-system.io.file.readall_0_1.vb)]\n [!code-cs[System.IO.File.AllLines_Encoding#00](~/add/codesnippet/csharp/m-system.io.file.readall_0_1.cs)]"
  syntax:
    content: public static string[] ReadAllLines (string path, System.Text.Encoding encoding);
    parameters:
    - id: path
      type: System.String
      description: "O ficheiro a abrir para leitura."
    - id: encoding
      type: System.Text.Encoding
      description: "A codificação aplicada aos conteúdos do ficheiro."
    return:
      type: System.String[]
      description: "Uma matriz de cadeia que contém todas as linhas do ficheiro."
  overload: System.IO.File.ReadAllLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido (por exemplo, é numa unidade não mapeada)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o ficheiro."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>especificar um ficheiro que é só de leitura.       - ou - esta operação não é suportada na plataforma atual.       - ou - <code>path</code> especificado um diretório.       - ou - o chamador não tem a permissão necessária."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro especificado no <code> path </code> não foi encontrado."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>é um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.File.ReadAllText(System.String)
  id: ReadAllText(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: ReadAllText(String)
  nameWithType: File.ReadAllText(String)
  fullName: System.IO.File.ReadAllText(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Abre um ficheiro de texto, lê todas as linhas do ficheiro e, em seguida, fecha o ficheiro."
  remarks: "This method opens a file, reads each line of the file, and then adds each line as an element of a string. It then closes the file. A line is defined as a sequence of characters followed by a carriage return ('\\r'), a line feed ('\\n'), or a carriage return immediately followed by a line feed. The resulting string does not contain the terminating carriage return and/or line feed.  \n  \n This method attempts to automatically detect the encoding of a file based on the presence of byte order marks. Encoding formats UTF-8 and UTF-32 (both big-endian and little-endian) can be detected.  \n  \n Use the <xref:System.IO.File.ReadAllText%28System.String%2CSystem.Text.Encoding%29> method overload when reading files that might contain imported text, because unrecognized characters may not be read correctly.  \n  \n The file handle is guaranteed to be closed by this method, even if exceptions are raised."
  example:
  - "The following code example demonstrates the use of the ReadAllText method to display the contents of a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \n  \n [!code-vb[System.IO.File.AllText#00](~/add/codesnippet/visualbasic/m-system.io.file.readall_3_1.vb)]\n [!code-cs[System.IO.File.AllText#00](~/add/codesnippet/csharp/m-system.io.file.readall_3_1.cs)]"
  syntax:
    content: public static string ReadAllText (string path);
    parameters:
    - id: path
      type: System.String
      description: "O ficheiro a abrir para leitura."
    return:
      type: System.String
      description: "Uma cadeia que contém todas as linhas do ficheiro."
  overload: System.IO.File.ReadAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido (por exemplo, é numa unidade não mapeada)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o ficheiro."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>especificar um ficheiro que é só de leitura.       - ou - esta operação não é suportada na plataforma atual.       - ou - <code>path</code> especificado um diretório.       - ou - o chamador não tem a permissão necessária."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro especificado no <code> path </code> não foi encontrado."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>é um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.File.ReadAllText(System.String,System.Text.Encoding)
  id: ReadAllText(System.String,System.Text.Encoding)
  parent: System.IO.File
  langs:
  - csharp
  name: ReadAllText(String,Encoding)
  nameWithType: File.ReadAllText(String,Encoding)
  fullName: System.IO.File.ReadAllText(String,Encoding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Abre um ficheiro, lê todas as linhas do ficheiro com a codificação especificada e, em seguida, fecha o ficheiro."
  remarks: "This method opens a file, reads each line of the file, and then adds each line as an element of a string. It then closes the file. A line is defined as a sequence of characters followed by a carriage return ('\\r'), a line feed ('\\n'), or a carriage return immediately followed by a line feed. The resulting string does not contain the terminating carriage return and/or line feed.  \n  \n This method attempts to automatically detect the encoding of a file based on the presence of byte order marks. Encoding formats UTF-8 and UTF-32 (both big-endian and little-endian) can be detected.  \n  \n The file handle is guaranteed to be closed by this method, even if exceptions are raised.  \n  \n To use the encoding settings as configured for your operating system, specify the <xref:System.Text.Encoding.Default%2A?displayProperty=fullName> property for the `encoding` parameter."
  example:
  - "The following code example demonstrates the use of the ReadAllText method to display the contents of a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \n  \n [!code-cs[System.IO.File.AllText_Encoding#00](~/add/codesnippet/csharp/m-system.io.file.readall_2_1.cs)]\n [!code-vb[System.IO.File.AllText_Encoding#00](~/add/codesnippet/visualbasic/m-system.io.file.readall_2_1.vb)]"
  syntax:
    content: public static string ReadAllText (string path, System.Text.Encoding encoding);
    parameters:
    - id: path
      type: System.String
      description: "O ficheiro a abrir para leitura."
    - id: encoding
      type: System.Text.Encoding
      description: "A codificação aplicada aos conteúdos do ficheiro."
    return:
      type: System.String
      description: "Uma cadeia que contém todas as linhas do ficheiro."
  overload: System.IO.File.ReadAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido (por exemplo, é numa unidade não mapeada)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o ficheiro."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>especificar um ficheiro que é só de leitura.       - ou - esta operação não é suportada na plataforma atual.       - ou - <code>path</code> especificado um diretório.       - ou - o chamador não tem a permissão necessária."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro especificado no <code> path </code> não foi encontrado."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>é um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.File.ReadLines(System.String)
  id: ReadLines(System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: ReadLines(String)
  nameWithType: File.ReadLines(String)
  fullName: System.IO.File.ReadLines(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Lê as linhas de um ficheiro."
  remarks: "O ReadLines e <xref:System.IO.File.ReadAllLines%2A>métodos diferem da seguinte forma: ao utilizar ReadLines, pode começar a enumerar a coleção de cadeias antes de toda a coleção é devolvida; se utilizar <xref:System.IO.File.ReadAllLines%2A>, tem de aguardar para a matriz de cadeias todo devolvido antes de poder aceder a matriz.</xref:System.IO.File.ReadAllLines%2A> </xref:System.IO.File.ReadAllLines%2A> Por conseguinte, quando estiver a trabalhar com ficheiros muito grandes, ReadLines pode ser mais eficiente.       Pode utilizar o método de ReadLines fazer o seguinte:-efetuar [LINQ para objetos](~/add/includes/ajax-current-ext-md.md) consultas num ficheiro para obter um conjunto filtrado de respetivos linhas.      -Escrever a coleção de linhas devolvida para um ficheiro com o <xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29?displayProperty=fullName>método, ou de acréscimo-los para um ficheiro existente com o <xref:System.IO.File.AppendAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29?displayProperty=fullName>método.</xref:System.IO.File.AppendAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29?displayProperty=fullName> </xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29?displayProperty=fullName>      -Criar uma instância de uma coleção que recebe uma <xref:System.Collections.Generic.IEnumerable%601>coleção de cadeias para o respetivo construtor, tal como um <xref:System.Collections.Generic.IList%601>ou um <xref:System.Collections.Generic.Queue%601>.</xref:System.Collections.Generic.Queue%601> </xref:System.Collections.Generic.IList%601> </xref:System.Collections.Generic.IEnumerable%601> imediatamente preenchida       Este método utiliza <xref:System.Text.Encoding.UTF8%2A>para o valor de codificação.</xref:System.Text.Encoding.UTF8%2A>"
  example:
  - "The following example reads the lines of a file to find lines that contain specified strings.  \n  \n [!code-vb[System.IO.File.ReadLines#1](~/add/codesnippet/visualbasic/m-system.io.file.readlin_1.vb)]\n [!code-cs[System.IO.File.ReadLines#1](~/add/codesnippet/csharp/m-system.io.file.readlin_1.cs)]  \n  \n The following example uses the ReadLines method in a LINQ query that enumerates all directories for files that have a .txt extension, reads each line of the file, and displays the line if it contains the string \"Microsoft\".  \n  \n [!code-cs[System.IO.Directory.EnumerateFiles#1](~/add/codesnippet/csharp/m-system.io.file.readlin_2.cs)]\n [!code-vb[System.IO.Directory.EnumerateFiles#1](~/add/codesnippet/visualbasic/m-system.io.file.readlin_2.vb)]"
  syntax:
    content: public static System.Collections.Generic.IEnumerable<string> ReadLines (string path);
    parameters:
    - id: path
      type: System.String
      description: "O ficheiro para leitura."
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "Todas as linhas do ficheiro ou as linhas que são o resultado de uma consulta."
  overload: System.IO.File.ReadLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos definidos pelo <xref:System.IO.Path.GetInvalidPathChars*> método."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>path</code>é inválido (por exemplo, é numa unidade não mapeada)."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro especificado pelo <code> path </code> não foi encontrado."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o ficheiro."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>excede o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>Especifica um ficheiro que é só de leitura.       - ou - esta operação não é suportada na plataforma atual.       - ou - <code>path</code> é um diretório.       - ou - o chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.File.ReadLines(System.String,System.Text.Encoding)
  id: ReadLines(System.String,System.Text.Encoding)
  parent: System.IO.File
  langs:
  - csharp
  name: ReadLines(String,Encoding)
  nameWithType: File.ReadLines(String,Encoding)
  fullName: System.IO.File.ReadLines(String,Encoding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Ler as linhas de um ficheiro com uma codificação especificada."
  remarks: "Utilize este método para especificar uma codificação a utilizar ler o ficheiro.       O ReadLines e <xref:System.IO.File.ReadAllLines%2A>métodos diferem da seguinte forma: ao utilizar ReadLines, pode começar a enumerar a coleção de cadeias antes de toda a coleção é devolvida.</xref:System.IO.File.ReadAllLines%2A> Quando utiliza <xref:System.IO.File.ReadAllLines%2A>, tem de aguardar para a matriz de cadeias todo devolvido antes de poder aceder a matriz.</xref:System.IO.File.ReadAllLines%2A> Por conseguinte, quando estiver a trabalhar com ficheiros muito grandes, ReadLines pode ser mais eficiente.       Pode utilizar o método de ReadLines fazer o seguinte:-efetuar [LINQ para objetos](~/add/includes/ajax-current-ext-md.md) consultas num ficheiro para obter um conjunto filtrado de respetivos linhas.      -Escrever a coleção de linhas devolvida para um ficheiro com o <xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29?displayProperty=fullName>método, ou de acréscimo-los para um ficheiro existente com o <xref:System.IO.File.AppendAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29?displayProperty=fullName>método.</xref:System.IO.File.AppendAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29?displayProperty=fullName> </xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29?displayProperty=fullName>      -Criar uma instância de uma coleção que recebe uma <xref:System.Collections.Generic.IEnumerable%601>coleção de cadeias para o respetivo construtor, tal como um <xref:System.Collections.Generic.IList%601>ou um <xref:System.Collections.Generic.Queue%601>.</xref:System.Collections.Generic.Queue%601> </xref:System.Collections.Generic.IList%601> </xref:System.Collections.Generic.IEnumerable%601> imediatamente preenchida"
  syntax:
    content: public static System.Collections.Generic.IEnumerable<string> ReadLines (string path, System.Text.Encoding encoding);
    parameters:
    - id: path
      type: System.String
      description: "O ficheiro para leitura."
    - id: encoding
      type: System.Text.Encoding
      description: "A codificação que é aplicada aos conteúdos do ficheiro."
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "Todas as linhas do ficheiro ou as linhas que são o resultado de uma consulta."
  overload: System.IO.File.ReadLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos, tal como definido pelo <xref:System.IO.Path.GetInvalidPathChars*> método."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>path</code>é inválido (por exemplo, é numa unidade não mapeada)."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro especificado pelo <code> path </code> não foi encontrado."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o ficheiro."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>excede o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>Especifica um ficheiro que é só de leitura.       - ou - esta operação não é suportada na plataforma atual.       - ou - <code>path</code> é um diretório.       - ou - o chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.File.Replace(System.String,System.String,System.String)
  id: Replace(System.String,System.String,System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: Replace(String,String,String)
  nameWithType: File.Replace(String,String,String)
  fullName: System.IO.File.Replace(String,String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Substitui o conteúdo de um ficheiro especificado com o conteúdo de outro ficheiro, a eliminação do ficheiro original e criar uma cópia de segurança do ficheiro substituído."
  remarks: "O método de substituição substitui o conteúdo de um ficheiro especificado com o conteúdo do ficheiro noutro.  Também cria uma cópia de segurança do ficheiro que foi substituído.       Se o `sourceFileName` e `destinationFileName` estão em volumes diferentes, este método irá gerar uma exceção. Se o `destinationBackupFileName` está num volume diferente no ficheiro de origem, o ficheiro de cópia de segurança será eliminado.       Passar `null` para o `destinationBackupFileName` parâmetro se não pretender criar uma cópia de segurança do ficheiro a ser substituído."
  example:
  - "The following code example uses the <xref:System.IO.File.Replace%2A> method to replace a file with another file and create a backup of the replaced file.  \n  \n [!code-vb[IO.File.Replace#1](~/add/codesnippet/visualbasic/m-system.io.file.replace_1.vb)]\n [!code-cs[IO.File.Replace#1](~/add/codesnippet/csharp/m-system.io.file.replace_1.cs)]\n [!code-cpp[IO.File.Replace#1](~/add/codesnippet/cpp/m-system.io.file.replace_1.cpp)]"
  syntax:
    content: public static void Replace (string sourceFileName, string destinationFileName, string destinationBackupFileName);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "O nome de um ficheiro que substitui o ficheiro especificado pelo `destinationFileName`."
    - id: destinationFileName
      type: System.String
      description: "O nome do ficheiro a ser substituído."
    - id: destinationBackupFileName
      type: System.String
      description: "O nome do ficheiro de cópia de segurança."
  overload: System.IO.File.Replace*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O caminho descrito através de <code> destinationFileName </code> parâmetro não era um formato legal.       - ou - o caminho descrita através de <code> destinationBackupFileName </code> parâmetro não era um formato legal."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>destinationFileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DriveNotFoundException
    commentId: T:System.IO.DriveNotFoundException
    description: "Foi especificada uma unidade inválida."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro descrito através de atual <xref href=&quot;System.IO.FileInfo&quot;> </xref> não foi possível encontrar o objeto.       - ou - o ficheiro descrita através de <code> destinationBackupFileName </code> não foi possível encontrar o parâmetro."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "An I/O error occurred while opening the file.  \n  \n \\- or -  \n  \n The <code>sourceFileName</code> and <code>destinationFileName</code> parameters specify the same file."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "O sistema operativo é Windows 98 segundo Edition ou anterior e não se encontra o sistema de ficheiros NTFS."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O <code> sourceFileName </code> ou <code> destinationFileName </code> parâmetro especifica um ficheiro que é só de leitura.       - ou - esta operação não é suportada na plataforma atual.       - ou - os parâmetros de origem ou destino especificar um diretório em vez de um ficheiro.       - ou - o chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.File.Replace(System.String,System.String,System.String,System.Boolean)
  id: Replace(System.String,System.String,System.String,System.Boolean)
  parent: System.IO.File
  langs:
  - csharp
  name: Replace(String,String,String,Boolean)
  nameWithType: File.Replace(String,String,String,Boolean)
  fullName: System.IO.File.Replace(String,String,String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Substitui o conteúdo de um ficheiro especificado com o conteúdo de outro ficheiro, a eliminação do ficheiro original e criar uma cópia de segurança do ficheiro substituído e, opcionalmente, ignora os erros de intercalação."
  remarks: "O método de substituição substitui o conteúdo de um ficheiro especificado com o conteúdo do ficheiro noutro.  Também cria uma cópia de segurança do ficheiro que foi substituído.       Se o `sourceFileName` e `destinationFileName` estão em volumes diferentes, este método irá gerar uma exceção. Se o `destinationBackupFileName` está num volume diferente no ficheiro de origem, o ficheiro de cópia de segurança será eliminado.       Passar `null` para o `destinationBackupFileName` parâmetro se não pretender criar uma cópia de segurança do ficheiro a ser substituído."
  example:
  - "The following code example uses the Replace method to replace a file with another file and create a backup of the replaced file.  \n  \n [!code-vb[IO.File.Replace#1](~/add/codesnippet/visualbasic/be01e0a6-2a02-46ff-8d10-_1.vb)]\n [!code-cs[IO.File.Replace#1](~/add/codesnippet/csharp/be01e0a6-2a02-46ff-8d10-_1.cs)]\n [!code-cpp[IO.File.Replace#1](~/add/codesnippet/cpp/be01e0a6-2a02-46ff-8d10-_1.cpp)]"
  syntax:
    content: public static void Replace (string sourceFileName, string destinationFileName, string destinationBackupFileName, bool ignoreMetadataErrors);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "O nome de um ficheiro que substitui o ficheiro especificado pelo `destinationFileName`."
    - id: destinationFileName
      type: System.String
      description: "O nome do ficheiro a ser substituído."
    - id: destinationBackupFileName
      type: System.String
      description: "O nome do ficheiro de cópia de segurança."
    - id: ignoreMetadataErrors
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para ignorar erros de intercalação (por exemplo, atributos e listas de controlo de acesso (ACLs)) do ficheiro substituído para o ficheiro de substituição; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.File.Replace*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O caminho descrito através de <code> destinationFileName </code> parâmetro não era um formato legal.       - ou - o caminho descrita através de <code> destinationBackupFileName </code> parâmetro não era um formato legal."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>destinationFileName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DriveNotFoundException
    commentId: T:System.IO.DriveNotFoundException
    description: "Foi especificada uma unidade inválida."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro descrito através de atual <xref href=&quot;System.IO.FileInfo&quot;> </xref> não foi possível encontrar o objeto.       - ou - o ficheiro descrita através de <code> destinationBackupFileName </code> não foi possível encontrar o parâmetro."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "An I/O error occurred while opening the file.  \n  \n \\- or -  \n  \n The <code>sourceFileName</code> and <code>destinationFileName</code> parameters specify the same file."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "O sistema operativo é Windows 98 segundo Edition ou anterior e não se encontra o sistema de ficheiros NTFS."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O <code> sourceFileName </code> ou <code> destinationFileName </code> parâmetro especifica um ficheiro que é só de leitura.       - ou - esta operação não é suportada na plataforma atual.       - ou - os parâmetros de origem ou destino especificar um diretório em vez de um ficheiro.       - ou - o chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.File.SetAccessControl(System.String,System.Security.AccessControl.FileSecurity)
  id: SetAccessControl(System.String,System.Security.AccessControl.FileSecurity)
  parent: System.IO.File
  langs:
  - csharp
  name: SetAccessControl(String,FileSecurity)
  nameWithType: File.SetAccessControl(String,FileSecurity)
  fullName: System.IO.File.SetAccessControl(String,FileSecurity)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Aplica-se entradas de lista (ACL) de controlo de acesso descritas através de um <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> objeto para o ficheiro especificado."
  remarks: "O método SetAccessControl aplica-se entradas de lista (ACL) de controlo de acesso a um ficheiro que representa a lista ACL noninherited.      > [!CAUTION] > A ACL especificado para o `fileSecurity` parâmetro substitui a ACL existente para o ficheiro. Para adicionar permissões para um novo utilizador, utilize o <xref:System.IO.File.GetAccessControl%2A>método para obter a ACL existente, modificá-lo e, em seguida, utilize SetAccessControl para aplicá-la novamente para o ficheiro.</xref:System.IO.File.GetAccessControl%2A>       Uma ACL descreve indivíduos e/ou grupos de utilizadores que tenham ou não tem, direitos para as ações específicas sobre o ficheiro. Para obter mais informações, consulte [como: Adicionar ou remover entradas de lista de controlo de acesso](~/add/includes/ajax-current-ext-md.md).       O método SetAccessControl persistir apenas <xref:System.Security.AccessControl.FileSecurity>objetos que foram modificados após a criação do objeto.</xref:System.Security.AccessControl.FileSecurity>  Se um <xref:System.Security.AccessControl.FileSecurity>objeto não foi modificado, não será transferido para um ficheiro.</xref:System.Security.AccessControl.FileSecurity>  Por conseguinte, não é possível obter um <xref:System.Security.AccessControl.FileSecurity>de objeto de um ficheiro e volte a aplicar o mesmo objeto para outro ficheiro.</xref:System.Security.AccessControl.FileSecurity>       Para copiar as informações de ACL de um ficheiro para outro: 1.  Utilize o <xref:System.IO.File.GetAccessControl%2A>método para obter o <xref:System.Security.AccessControl.FileSecurity>objeto a partir do ficheiro de origem.</xref:System.Security.AccessControl.FileSecurity> </xref:System.IO.File.GetAccessControl%2A>      2.  Crie um novo <xref:System.Security.AccessControl.FileSecurity>objeto para o ficheiro de destino.</xref:System.Security.AccessControl.FileSecurity>      3.  Utilize o <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A>ou <xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A>método da origem de <xref:System.Security.AccessControl.FileSecurity>objeto para obter as informações de ACL.</xref:System.Security.AccessControl.FileSecurity> </xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A> </xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A>      4.  Utilize o <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A>ou <xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A>método para copiar as informações obtido no passo 3 para o destino <xref:System.Security.AccessControl.FileSecurity>objeto.</xref:System.Security.AccessControl.FileSecurity> </xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A> </xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A>      5.  Definir o destino <xref:System.Security.AccessControl.FileSecurity>objeto para o ficheiro de destino utilizando o método SetAccessControl.</xref:System.Security.AccessControl.FileSecurity>       Em ambientes de NTFS, <xref:System.Security.AccessControl.FileSystemRights>e <xref:System.Security.AccessControl.FileSystemRights>concedidas ao utilizador se o utilizador tiver <xref:System.Security.AccessControl.FileSystemRights>direitos na pasta principal.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> Para negar <xref:System.Security.AccessControl.FileSystemRights>e <xref:System.Security.AccessControl.FileSystemRights>, negar <xref:System.Security.AccessControl.FileSystemRights>no diretório principal.</xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights> </xref:System.Security.AccessControl.FileSystemRights>"
  example:
  - "The following code example uses the <xref:System.IO.File.GetAccessControl%2A> and SetAccessControl methods to add and then remove an access control list (ACL) entry from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cs[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/4f792c56-f52f-4b2d-89e4-_1.cs)]\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/4f792c56-f52f-4b2d-89e4-_1.vb)]\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/4f792c56-f52f-4b2d-89e4-_1.cpp)]"
  syntax:
    content: public static void SetAccessControl (string path, System.Security.AccessControl.FileSecurity fileSecurity);
    parameters:
    - id: path
      type: System.String
      description: "Um ficheiro para adicionar ou remover entradas de lista (ACL) de controlo de acesso."
    - id: fileSecurity
      type: System.Security.AccessControl.FileSecurity
      description: "A <xref href=&quot;System.Security.AccessControl.FileSecurity&quot;> </xref> objeto que descreve uma entrada ACL para aplicar ao ficheiro descrito através de `path` parâmetro."
  overload: System.IO.File.SetAccessControl*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o ficheiro."
  - type: System.Runtime.InteropServices.SEHException
    commentId: T:System.Runtime.InteropServices.SEHException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "Não foi possível encontrar o ficheiro."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O <code> path </code> parâmetro especificado um ficheiro que é só de leitura.       - ou - esta operação não é suportada na plataforma atual.       - ou - <code> path </code> parâmetro especificado um diretório.       - ou - o chamador não tem a permissão necessária."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>fileSecurity</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.File.SetAttributes(System.String,System.IO.FileAttributes)
  id: SetAttributes(System.String,System.IO.FileAttributes)
  parent: System.IO.File
  langs:
  - csharp
  name: SetAttributes(String,FileAttributes)
  nameWithType: File.SetAttributes(String,FileAttributes)
  fullName: System.IO.File.SetAttributes(String,FileAttributes)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Define o especificado <xref href=&quot;System.IO.FileAttributes&quot;> </xref> do ficheiro no caminho especificado."
  remarks: "O `path` parâmetro é permitido para especificar as informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativos ao diretório de trabalho atual. Para obter o atual diretório de trabalho, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Determinados ficheiros atributos, tal como <xref:System.IO.FileAttributes>e <xref:System.IO.FileAttributes>, podem ser combinados.</xref:System.IO.FileAttributes> </xref:System.IO.FileAttributes> Outros atributos, tais como <xref:System.IO.FileAttributes>, devem ser utilizadas individualmente.</xref:System.IO.FileAttributes>       Não é possível alterar o estado de compressão de um <xref:System.IO.File>objeto utilizando o método SetAttributes.</xref:System.IO.File>       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates the `GetAttributes` and `SetAttributes` methods by applying the `Archive` and `Hidden` attributes to a file.  \n  \n [!code-cs[File GetAttributes#1](~/add/codesnippet/csharp/m-system.io.file.setattr_1.cs)]\n [!code-cpp[File GetAttributes#1](~/add/codesnippet/cpp/m-system.io.file.setattr_1.cpp)]\n [!code-vb[File GetAttributes#1](~/add/codesnippet/visualbasic/m-system.io.file.setattr_1.vb)]"
  syntax:
    content: public static void SetAttributes (string path, System.IO.FileAttributes fileAttributes);
    parameters:
    - id: path
      type: System.String
      description: "O caminho para o ficheiro."
    - id: fileAttributes
      type: System.IO.FileAttributes
      description: "Uma combinação bit a bit dos valores de enumeração."
  overload: System.IO.File.SetAttributes*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>está vazia, contém apenas por espaços em branco, contém carateres inválidos, ou o atributo de ficheiro é inválido."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>é um formato inválido."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido, (por exemplo, é numa unidade não mapeada)."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Não é possível localizar o ficheiro."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>especificar um ficheiro que é só de leitura.       - ou - esta operação não é suportada na plataforma atual.       - ou - <code>path</code> especificado um diretório.       - ou - o chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.File.SetCreationTime(System.String,System.DateTime)
  id: SetCreationTime(System.String,System.DateTime)
  parent: System.IO.File
  langs:
  - csharp
  name: SetCreationTime(String,DateTime)
  nameWithType: File.SetCreationTime(String,DateTime)
  fullName: System.IO.File.SetCreationTime(String,DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Define a data e hora em que o ficheiro foi criado."
  remarks: "O `path` parâmetro é permitido para especificar as informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativos ao diretório de trabalho atual. Para obter o atual diretório de trabalho, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Unidades formatadas com o NTFS podem colocar em cache meta-as informações de ficheiro, tal como o tempo de criação do ficheiro, durante um curto período de tempo. Como resultado, poderá ser necessário definir explicitamente a hora de criação de um ficheiro se estiver a substituir o ou substituir um ficheiro existente.       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static void SetCreationTime (string path, DateTime creationTime);
    parameters:
    - id: path
      type: System.String
      description: "O ficheiro para o qual pretende definir as informações de data e hora de criação."
    - id: creationTime
      type: System.DateTime
      description: "A <xref:System.DateTime>que contém o valor para definir a data de criação e a hora de `path`.</xref:System.DateTime> Este valor é expresso em hora local."
  overload: System.IO.File.SetCreationTime*
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O caminho especificado não foi encontrado."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao executar a operação."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>creationTime</code>Especifica um valor fora do intervalo de datas, horas ou ambos permitido para esta operação."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>é um formato inválido."
  platform:
  - net462
- uid: System.IO.File.SetCreationTimeUtc(System.String,System.DateTime)
  id: SetCreationTimeUtc(System.String,System.DateTime)
  parent: System.IO.File
  langs:
  - csharp
  name: SetCreationTimeUtc(String,DateTime)
  nameWithType: File.SetCreationTimeUtc(String,DateTime)
  fullName: System.IO.File.SetCreationTimeUtc(String,DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Define a data e hora, na hora universal coordenada (UTC), que o ficheiro foi criado."
  remarks: "O `path` parâmetro é permitido para especificar as informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativos ao diretório de trabalho atual. Para obter o atual diretório de trabalho, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Unidades formatadas com o NTFS podem colocar em cache meta-as informações de ficheiro, tal como o tempo de criação do ficheiro, durante um curto período de tempo. Como resultado, poderá ser necessário definir explicitamente a hora de criação de um ficheiro se estiver a substituir o ou substituir um ficheiro existente.       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static void SetCreationTimeUtc (string path, DateTime creationTimeUtc);
    parameters:
    - id: path
      type: System.String
      description: "O ficheiro para o qual pretende definir as informações de data e hora de criação."
    - id: creationTimeUtc
      type: System.DateTime
      description: "A <xref:System.DateTime>que contém o valor para definir a data de criação e a hora de `path`.</xref:System.DateTime> Este valor é expresso na hora UTC."
  overload: System.IO.File.SetCreationTimeUtc*
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O caminho especificado não foi encontrado."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao executar a operação."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>creationTime</code>Especifica um valor fora do intervalo de datas, horas ou ambos permitido para esta operação."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>é um formato inválido."
  platform:
  - net462
- uid: System.IO.File.SetLastAccessTime(System.String,System.DateTime)
  id: SetLastAccessTime(System.String,System.DateTime)
  parent: System.IO.File
  langs:
  - csharp
  name: SetLastAccessTime(String,DateTime)
  nameWithType: File.SetLastAccessTime(String,DateTime)
  fullName: System.IO.File.SetLastAccessTime(String,DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Define a data e hora que de ficheiro especificado foi acedida pela última vez."
  remarks: "O `path` parâmetro é permitido para especificar as informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativos ao diretório de trabalho atual. Para obter o atual diretório de trabalho, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example checks the file system for the specified file, creating it if necessary, and then sets and gets the last access time.  \n  \n [!code-cpp[file setlastaccess#1](~/add/codesnippet/cpp/m-system.io.file.setlast_0_1.cpp)]\n [!code-vb[file setlastaccess#1](~/add/codesnippet/visualbasic/m-system.io.file.setlast_0_1.vb)]\n [!code-cs[file setlastaccess#1](~/add/codesnippet/csharp/m-system.io.file.setlast_0_1.cs)]"
  syntax:
    content: public static void SetLastAccessTime (string path, DateTime lastAccessTime);
    parameters:
    - id: path
      type: System.String
      description: "O ficheiro para o qual pretende definir as informações de data e hora de acesso."
    - id: lastAccessTime
      type: System.DateTime
      description: "A <xref:System.DateTime>que contém o valor para definir para o acesso data e hora da última `path`.</xref:System.DateTime> Este valor é expresso em hora local."
  overload: System.IO.File.SetLastAccessTime*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O caminho especificado não foi encontrado."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>é um formato inválido."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>lastAccessTime</code>Especifica um valor fora do intervalo de datas ou horas permitidas para esta operação."
  platform:
  - net462
- uid: System.IO.File.SetLastAccessTimeUtc(System.String,System.DateTime)
  id: SetLastAccessTimeUtc(System.String,System.DateTime)
  parent: System.IO.File
  langs:
  - csharp
  name: SetLastAccessTimeUtc(String,DateTime)
  nameWithType: File.SetLastAccessTimeUtc(String,DateTime)
  fullName: System.IO.File.SetLastAccessTimeUtc(String,DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Define a data e hora, na hora universal coordenada (UTC), que o ficheiro especificado foi acedida pela última vez."
  remarks: "O `path` parâmetro é permitido para especificar as informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativos ao diretório de trabalho atual. Para obter o atual diretório de trabalho, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static void SetLastAccessTimeUtc (string path, DateTime lastAccessTimeUtc);
    parameters:
    - id: path
      type: System.String
      description: "O ficheiro para o qual pretende definir as informações de data e hora de acesso."
    - id: lastAccessTimeUtc
      type: System.DateTime
      description: "A <xref:System.DateTime>que contém o valor para definir para o acesso data e hora da última `path`.</xref:System.DateTime> Este valor é expresso na hora UTC."
  overload: System.IO.File.SetLastAccessTimeUtc*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O caminho especificado não foi encontrado."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>é um formato inválido."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>lastAccessTimeUtc</code>Especifica um valor fora do intervalo de datas ou horas permitidas para esta operação."
  platform:
  - net462
- uid: System.IO.File.SetLastWriteTime(System.String,System.DateTime)
  id: SetLastWriteTime(System.String,System.DateTime)
  parent: System.IO.File
  langs:
  - csharp
  name: SetLastWriteTime(String,DateTime)
  nameWithType: File.SetLastWriteTime(String,DateTime)
  fullName: System.IO.File.SetLastWriteTime(String,DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Define a data e hora em que o ficheiro especificado pela última vez foi escrito."
  remarks: "O `path` parâmetro é permitido para especificar as informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativos ao diretório de trabalho atual. Para obter o atual diretório de trabalho, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example checks the file system for the specified file, creating the file if necessary, and then sets and gets the last write time of the file.  \n  \n [!code-cs[file setlastwrite#1](~/add/codesnippet/csharp/m-system.io.file.setlast_1_1.cs)]\n [!code-vb[file setlastwrite#1](~/add/codesnippet/visualbasic/m-system.io.file.setlast_1_1.vb)]\n [!code-cpp[file setlastwrite#1](~/add/codesnippet/cpp/m-system.io.file.setlast_1_1.cpp)]"
  syntax:
    content: public static void SetLastWriteTime (string path, DateTime lastWriteTime);
    parameters:
    - id: path
      type: System.String
      description: "O ficheiro para o qual pretende definir as informações de data e hora."
    - id: lastWriteTime
      type: System.DateTime
      description: "A <xref:System.DateTime>que contém o valor definido para a escrita data e hora da última `path`.</xref:System.DateTime> Este valor é expresso em hora local."
  overload: System.IO.File.SetLastWriteTime*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O caminho especificado não foi encontrado."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>é um formato inválido."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>lastWriteTime</code>Especifica um valor fora do intervalo de datas ou horas permitidas para esta operação."
  platform:
  - net462
- uid: System.IO.File.SetLastWriteTimeUtc(System.String,System.DateTime)
  id: SetLastWriteTimeUtc(System.String,System.DateTime)
  parent: System.IO.File
  langs:
  - csharp
  name: SetLastWriteTimeUtc(String,DateTime)
  nameWithType: File.SetLastWriteTimeUtc(String,DateTime)
  fullName: System.IO.File.SetLastWriteTimeUtc(String,DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Define a data e hora, na hora de universal coordenada (UTC), o ficheiro especificado foi escrita pela última vez."
  remarks: "O `path` parâmetro é permitido para especificar as informações de caminho relativo ou absoluto. Informações de caminho relativo são interpretadas como relativos ao diretório de trabalho atual. Para obter o atual diretório de trabalho, consulte <xref:System.IO.Directory.GetCurrentDirectory%2A>.</xref:System.IO.Directory.GetCurrentDirectory%2A>       Para obter uma lista de tarefas comuns de e/s, consulte [tarefas comuns de e/s](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static void SetLastWriteTimeUtc (string path, DateTime lastWriteTimeUtc);
    parameters:
    - id: path
      type: System.String
      description: "O ficheiro para o qual pretende definir as informações de data e hora."
    - id: lastWriteTimeUtc
      type: System.DateTime
      description: "A <xref:System.DateTime>que contém o valor definido para a escrita data e hora da última `path`.</xref:System.DateTime> Este valor é expresso na hora UTC."
  overload: System.IO.File.SetLastWriteTimeUtc*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O caminho especificado não foi encontrado."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>é um formato inválido."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>lastWriteTimeUtc</code>Especifica um valor fora do intervalo de datas ou horas permitidas para esta operação."
  platform:
  - net462
- uid: System.IO.File.WriteAllBytes(System.String,System.Byte[])
  id: WriteAllBytes(System.String,System.Byte[])
  parent: System.IO.File
  langs:
  - csharp
  name: WriteAllBytes(String,Byte[])
  nameWithType: File.WriteAllBytes(String,Byte[])
  fullName: System.IO.File.WriteAllBytes(String,Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Cria um novo ficheiro, escreve a matriz de bytes especificada no ficheiro e, em seguida, fecha o ficheiro. Se o ficheiro de destino já existir, será substituído."
  remarks: "Recebe uma matriz de bytes e um caminho de ficheiro, este método abre o ficheiro especificado, escreve o conteúdo da matriz de bytes ao ficheiro e, em seguida, fecha o ficheiro."
  syntax:
    content: public static void WriteAllBytes (string path, byte[] bytes);
    parameters:
    - id: path
      type: System.String
      description: "O ficheiro para escrita."
    - id: bytes
      type: System.Byte[]
      description: "Os bytes a escrever o ficheiro."
  overload: System.IO.File.WriteAllBytes*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou a matriz de bytes está vazia."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido (por exemplo, é numa unidade não mapeada)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o ficheiro."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>especificar um ficheiro que é só de leitura.       - ou - esta operação não é suportada na plataforma atual.       - ou - <code>path</code> especificado um diretório.       - ou - o chamador não tem a permissão necessária."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>é um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})
  id: WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: System.IO.File
  langs:
  - csharp
  name: WriteAllLines(String,IEnumerable<String>)
  nameWithType: File.WriteAllLines(String,IEnumerable<String>)
  fullName: System.IO.File.WriteAllLines(String,IEnumerable<String>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Cria um novo ficheiro, escreve uma coleção de cadeias para o ficheiro e, em seguida, fecha o ficheiro."
  remarks: "O comportamento predefinido do método WriteAllLines é escrever dados utilizando a codificação UTF-8 sem uma marca de ordem de bytes (LM). Se for necessário incluir um identificador de UTF-8, por exemplo, uma marca de ordem de bytes, no início de um ficheiro, utilize o <xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29>sobrecarga de método com <xref:System.Text.Encoding.UTF8%2A>codificação.</xref:System.Text.Encoding.UTF8%2A> </xref:System.IO.File.WriteAllLines%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.Text.Encoding%29>       Se o ficheiro de destino já existir, será substituído.       Pode utilizar este método para criar o conteúdo de uma classe de coleção que assume um <xref:System.Collections.Generic.IEnumerable%601>no respetivo construtor, tal como um <xref:System.Collections.Generic.List%601.%23ctor%2A>, <xref:System.Collections.Generic.HashSet%601.%23ctor%2A>, ou uma <xref:System.Collections.Generic.SortedSet%601.%23ctor%2A>classe.</xref:System.Collections.Generic.SortedSet%601.%23ctor%2A> </xref:System.Collections.Generic.HashSet%601.%23ctor%2A> </xref:System.Collections.Generic.List%601.%23ctor%2A> </xref:System.Collections.Generic.IEnumerable%601>"
  example:
  - "The following example writes selected lines from a sample data file to a file.  \n  \n [!code-cs[System.IO.File.WriteAllAppendAll#1](~/add/codesnippet/csharp/f09e9593-445c-47ad-bb1b-_1.cs)]\n [!code-vb[System.IO.File.WriteAllAppendAll#1](~/add/codesnippet/visualbasic/f09e9593-445c-47ad-bb1b-_1.vb)]"
  syntax:
    content: public static void WriteAllLines (string path, System.Collections.Generic.IEnumerable<string> contents);
    parameters:
    - id: path
      type: System.String
      description: "O ficheiro para escrita."
    - id: contents
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "As linhas a escrever no ficheiro."
  overload: System.IO.File.WriteAllLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos definidos pelo <xref:System.IO.Path.GetInvalidPathChars*> método."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Either<code> path </code>or <code>contents</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>path</code>é inválido (por exemplo, é numa unidade não mapeada)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o ficheiro."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>excede o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>é um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>Especifica um ficheiro que é só de leitura.       - ou - esta operação não é suportada na plataforma atual.       - ou - <code>path</code> é um diretório.       - ou - o chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.File.WriteAllLines(System.String,System.String[])
  id: WriteAllLines(System.String,System.String[])
  parent: System.IO.File
  langs:
  - csharp
  name: WriteAllLines(String,String[])
  nameWithType: File.WriteAllLines(String,String[])
  fullName: System.IO.File.WriteAllLines(String,String[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Cria um novo ficheiro, escrever matriz da cadeia especificado para o ficheiro e, em seguida, fecha o ficheiro."
  remarks: "If the target file already exists, it is overwritten.  \n  \n The default behavior of the WriteAllLines method is to write out data using UTF-8 encoding without a byte order mark (BOM). If it is necessary to include a UTF-8 identifier, such as a byte order mark, at the beginning of a file, use the [WriteAllLines(String, String\\[\\], Encoding)](assetId:///M:System.IO.File.WriteAllLines(System.String,System.String[],System.Text.Encoding)?qualifyHint=False&autoUpgrade=False) method overload with <xref:System.Text.Encoding.UTF8%2A> encoding.  \n  \n Given a string array and a file path, this method opens the specified file, writes the string array to the file, and then closes the file."
  example:
  - "The following code example demonstrates the use of the WriteAllLines method to write text to a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \n  \n [!code-vb[System.IO.File.AllLines#00](~/add/codesnippet/visualbasic/m-system.io.file.writeal_1_1.vb)]\n [!code-cs[System.IO.File.AllLines#00](~/add/codesnippet/csharp/m-system.io.file.writeal_1_1.cs)]"
  syntax:
    content: public static void WriteAllLines (string path, string[] contents);
    parameters:
    - id: path
      type: System.String
      description: "O ficheiro para escrita."
    - id: contents
      type: System.String[]
      description: "A matriz de cadeia para escrever no ficheiro."
  overload: System.IO.File.WriteAllLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Either <code>path</code> or <code>contents</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido (por exemplo, é numa unidade não mapeada)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o ficheiro."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>especificar um ficheiro que é só de leitura.       - ou - esta operação não é suportada na plataforma atual.       - ou - <code>path</code> especificado um diretório.       - ou - o chamador não tem a permissão necessária."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>é um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)
  id: WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)
  parent: System.IO.File
  langs:
  - csharp
  name: WriteAllLines(String,IEnumerable<String>,Encoding)
  nameWithType: File.WriteAllLines(String,IEnumerable<String>,Encoding)
  fullName: System.IO.File.WriteAllLines(String,IEnumerable<String>,Encoding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Cria um novo ficheiro utilizando a codificação especificada, escreve uma coleção de cadeias para o ficheiro e, em seguida, fecha o ficheiro."
  remarks: "Se o ficheiro de destino já existir, será substituído.       Pode utilizar este método para criar um ficheiro que contém o seguinte:-os resultados de uma [LINQ para objetos](~/add/includes/ajax-current-ext-md.md) consultar nas linhas de um ficheiro, tal como obtidas utilizando o <xref:System.IO.File.ReadLines%2A>método.</xref:System.IO.File.ReadLines%2A>      -O conteúdo de uma coleção que implementa um <xref:System.Collections.Generic.IEnumerable%601>de cadeias.</xref:System.Collections.Generic.IEnumerable%601>"
  syntax:
    content: public static void WriteAllLines (string path, System.Collections.Generic.IEnumerable<string> contents, System.Text.Encoding encoding);
    parameters:
    - id: path
      type: System.String
      description: "O ficheiro para escrita."
    - id: contents
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "As linhas a escrever no ficheiro."
    - id: encoding
      type: System.Text.Encoding
      description: "O caráter codificação a utilizar."
  overload: System.IO.File.WriteAllLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos definidos pelo <xref:System.IO.Path.GetInvalidPathChars*> método."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Either<code> path</code>,<code> contents</code>, or <code>encoding</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>path</code>é inválido (por exemplo, é numa unidade não mapeada)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o ficheiro."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code>path</code>excede o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>é um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>Especifica um ficheiro que é só de leitura.       - ou - esta operação não é suportada na plataforma atual.       - ou - <code>path</code> é um diretório.       - ou - o chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.File.WriteAllLines(System.String,System.String[],System.Text.Encoding)
  id: WriteAllLines(System.String,System.String[],System.Text.Encoding)
  parent: System.IO.File
  langs:
  - csharp
  name: WriteAllLines(String,String[],Encoding)
  nameWithType: File.WriteAllLines(String,String[],Encoding)
  fullName: System.IO.File.WriteAllLines(String,String[],Encoding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Cria um novo ficheiro, escreve matriz da cadeia especificado para o ficheiro utilizando a codificação especificada e, em seguida, fecha o ficheiro."
  remarks: "Se o ficheiro de destino já existir, será substituído.       Com uma matriz de cadeia e um caminho de ficheiro, este método abre o ficheiro especificado, grava matriz da cadeia para o ficheiro utilizando a codificação especificada e, em seguida, fecha o ficheiro."
  example:
  - "The following code example demonstrates the use of the WriteAllLines method to write text to a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \n  \n [!code-vb[System.IO.File.AllLines_Encoding#00](~/add/codesnippet/visualbasic/3d8070ff-3246-4c2d-a728-_1.vb)]\n [!code-cs[System.IO.File.AllLines_Encoding#00](~/add/codesnippet/csharp/3d8070ff-3246-4c2d-a728-_1.cs)]"
  syntax:
    content: public static void WriteAllLines (string path, string[] contents, System.Text.Encoding encoding);
    parameters:
    - id: path
      type: System.String
      description: "O ficheiro para escrita."
    - id: contents
      type: System.String[]
      description: "A matriz de cadeia para escrever no ficheiro."
    - id: encoding
      type: System.Text.Encoding
      description: "Um <xref:System.Text.Encoding>objeto que representa a codificação de caráter aplicada para a matriz de cadeia.</xref:System.Text.Encoding>"
  overload: System.IO.File.WriteAllLines*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Either <code>path</code> or <code>contents</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido (por exemplo, é numa unidade não mapeada)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o ficheiro."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>especificar um ficheiro que é só de leitura.       - ou - esta operação não é suportada na plataforma atual.       - ou - <code>path</code> especificado um diretório.       - ou - o chamador não tem a permissão necessária."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>é um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.File.WriteAllText(System.String,System.String)
  id: WriteAllText(System.String,System.String)
  parent: System.IO.File
  langs:
  - csharp
  name: WriteAllText(String,String)
  nameWithType: File.WriteAllText(String,String)
  fullName: System.IO.File.WriteAllText(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Cria um novo ficheiro, escreve a cadeia especificada no ficheiro e, em seguida, fecha o ficheiro. Se o ficheiro de destino já existir, será substituído."
  remarks: "Este método utiliza UTF-8 codificação sem uma marca de ordem de bytes (LM), por isso, utilizando o <xref:System.Text.Encoding.GetPreamble%2A>método irá devolver uma matriz de bytes em branco.</xref:System.Text.Encoding.GetPreamble%2A> Se for necessário incluir um identificador de UTF-8, por exemplo, uma marca de ordem de bytes, no início de um ficheiro, utilize o <xref:System.IO.File.WriteAllText%28System.String%2CSystem.String%2CSystem.Text.Encoding%29>sobrecarga de método com <xref:System.Text.Encoding.UTF8%2A>codificação.</xref:System.Text.Encoding.UTF8%2A> </xref:System.IO.File.WriteAllText%28System.String%2CSystem.String%2CSystem.Text.Encoding%29>       Fornecida uma cadeia e um caminho de ficheiro, este método abre o ficheiro especificado, escreve a cadeia para o ficheiro e, em seguida, fecha o ficheiro."
  example:
  - "The following code example demonstrates the use of the WriteAllText method to write text to a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \n  \n [!code-vb[System.IO.File.AllText#00](~/add/codesnippet/visualbasic/m-system.io.file.writeal_0_1.vb)]\n [!code-cs[System.IO.File.AllText#00](~/add/codesnippet/csharp/m-system.io.file.writeal_0_1.cs)]"
  syntax:
    content: public static void WriteAllText (string path, string contents);
    parameters:
    - id: path
      type: System.String
      description: "O ficheiro para escrita."
    - id: contents
      type: System.String
      description: "A cadeia a escrever no ficheiro."
  overload: System.IO.File.WriteAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or <code>contents</code> is empty."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido (por exemplo, é numa unidade não mapeada)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o ficheiro."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>especificar um ficheiro que é só de leitura.       - ou - esta operação não é suportada na plataforma atual.       - ou - <code>path</code> especificado um diretório.       - ou - o chamador não tem a permissão necessária."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>é um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária."
  platform:
  - net462
- uid: System.IO.File.WriteAllText(System.String,System.String,System.Text.Encoding)
  id: WriteAllText(System.String,System.String,System.Text.Encoding)
  parent: System.IO.File
  langs:
  - csharp
  name: WriteAllText(String,String,Encoding)
  nameWithType: File.WriteAllText(String,String,Encoding)
  fullName: System.IO.File.WriteAllText(String,String,Encoding)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Cria um novo ficheiro, escreve a cadeia especificada para o ficheiro utilizando a codificação especificada e, em seguida, fecha o ficheiro. Se o ficheiro de destino já existir, será substituído."
  remarks: "Recebe uma cadeia e um caminho de ficheiro, este método abre o ficheiro especificado, escreve a cadeia para o ficheiro utilizando a codificação especificada e, em seguida, fecha o ficheiro. O identificador de ficheiro é garantido a ser fechado através deste método, mesmo se exceções são geradas."
  example:
  - "The following code example demonstrates the use of the WriteAllText method to write text to a file. In this example a file is created, if it doesn't already exist, and text is added to it.  \n  \n [!code-cs[System.IO.File.AllText_Encoding#00](~/add/codesnippet/csharp/m-system.io.file.writeal_2_1.cs)]\n [!code-vb[System.IO.File.AllText_Encoding#00](~/add/codesnippet/visualbasic/m-system.io.file.writeal_2_1.vb)]"
  syntax:
    content: public static void WriteAllText (string path, string contents, System.Text.Encoding encoding);
    parameters:
    - id: path
      type: System.String
      description: "O ficheiro para escrita."
    - id: contents
      type: System.String
      description: "A cadeia a escrever no ficheiro."
    - id: encoding
      type: System.Text.Encoding
      description: "A codificação para aplicar a cadeia."
  overload: System.IO.File.WriteAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos, conforme definido pelo <xref:System.IO.Path.InvalidPathChars>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or <code>contents</code> is empty."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho especificado, o nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em plataformas com Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho especificado é inválido (por exemplo, é numa unidade não mapeada)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao abrir o ficheiro."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>path</code>especificar um ficheiro que é só de leitura.       - ou - esta operação não é suportada na plataforma atual.       - ou - <code>path</code> especificado um diretório.       - ou - o chamador não tem a permissão necessária."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>path</code>é um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IO.DirectoryNotFoundException
  isExternal: true
  name: System.IO.DirectoryNotFoundException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.IO.PathTooLongException
  isExternal: true
  name: System.IO.PathTooLongException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.IO.DriveNotFoundException
  parent: System.IO
  isExternal: false
  name: DriveNotFoundException
  nameWithType: DriveNotFoundException
  fullName: System.IO.DriveNotFoundException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.Runtime.InteropServices.SEHException
  isExternal: true
  name: System.Runtime.InteropServices.SEHException
- uid: System.SystemException
  parent: System
  isExternal: false
  name: SystemException
  nameWithType: SystemException
  fullName: System.SystemException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: System.IO.File
  isExternal: false
  name: AppendAllLines(String,IEnumerable<String>)
  nameWithType: File.AppendAllLines(String,IEnumerable<String>)
  fullName: System.IO.File.AppendAllLines(String,IEnumerable<String>)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)
  parent: System.IO.File
  isExternal: false
  name: AppendAllLines(String,IEnumerable<String>,Encoding)
  nameWithType: File.AppendAllLines(String,IEnumerable<String>,Encoding)
  fullName: System.IO.File.AppendAllLines(String,IEnumerable<String>,Encoding)
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.IO.File.AppendAllText(System.String,System.String)
  parent: System.IO.File
  isExternal: false
  name: AppendAllText(String,String)
  nameWithType: File.AppendAllText(String,String)
  fullName: System.IO.File.AppendAllText(String,String)
- uid: System.IO.File.AppendAllText(System.String,System.String,System.Text.Encoding)
  parent: System.IO.File
  isExternal: false
  name: AppendAllText(String,String,Encoding)
  nameWithType: File.AppendAllText(String,String,Encoding)
  fullName: System.IO.File.AppendAllText(String,String,Encoding)
- uid: System.IO.File.AppendText(System.String)
  parent: System.IO.File
  isExternal: false
  name: AppendText(String)
  nameWithType: File.AppendText(String)
  fullName: System.IO.File.AppendText(String)
- uid: System.IO.StreamWriter
  parent: System.IO
  isExternal: true
  name: StreamWriter
  nameWithType: StreamWriter
  fullName: System.IO.StreamWriter
- uid: System.IO.File.Copy(System.String,System.String)
  parent: System.IO.File
  isExternal: false
  name: Copy(String,String)
  nameWithType: File.Copy(String,String)
  fullName: System.IO.File.Copy(String,String)
- uid: System.IO.File.Copy(System.String,System.String,System.Boolean)
  parent: System.IO.File
  isExternal: false
  name: Copy(String,String,Boolean)
  nameWithType: File.Copy(String,String,Boolean)
  fullName: System.IO.File.Copy(String,String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.File.Create(System.String)
  parent: System.IO.File
  isExternal: false
  name: Create(String)
  nameWithType: File.Create(String)
  fullName: System.IO.File.Create(String)
- uid: System.IO.FileStream
  parent: System.IO
  isExternal: false
  name: FileStream
  nameWithType: FileStream
  fullName: System.IO.FileStream
- uid: System.IO.File.Create(System.String,System.Int32)
  parent: System.IO.File
  isExternal: false
  name: Create(String,Int32)
  nameWithType: File.Create(String,Int32)
  fullName: System.IO.File.Create(String,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions)
  parent: System.IO.File
  isExternal: false
  name: Create(String,Int32,FileOptions)
  nameWithType: File.Create(String,Int32,FileOptions)
  fullName: System.IO.File.Create(String,Int32,FileOptions)
- uid: System.IO.FileOptions
  parent: System.IO
  isExternal: false
  name: FileOptions
  nameWithType: FileOptions
  fullName: System.IO.FileOptions
- uid: System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)
  parent: System.IO.File
  isExternal: false
  name: Create(String,Int32,FileOptions,FileSecurity)
  nameWithType: File.Create(String,Int32,FileOptions,FileSecurity)
  fullName: System.IO.File.Create(String,Int32,FileOptions,FileSecurity)
- uid: System.Security.AccessControl.FileSecurity
  parent: System.Security.AccessControl
  isExternal: false
  name: FileSecurity
  nameWithType: FileSecurity
  fullName: System.Security.AccessControl.FileSecurity
- uid: System.IO.File.CreateText(System.String)
  parent: System.IO.File
  isExternal: false
  name: CreateText(String)
  nameWithType: File.CreateText(String)
  fullName: System.IO.File.CreateText(String)
- uid: System.IO.File.Decrypt(System.String)
  parent: System.IO.File
  isExternal: false
  name: Decrypt(String)
  nameWithType: File.Decrypt(String)
  fullName: System.IO.File.Decrypt(String)
- uid: System.IO.File.Delete(System.String)
  parent: System.IO.File
  isExternal: false
  name: Delete(String)
  nameWithType: File.Delete(String)
  fullName: System.IO.File.Delete(String)
- uid: System.IO.File.Encrypt(System.String)
  parent: System.IO.File
  isExternal: false
  name: Encrypt(String)
  nameWithType: File.Encrypt(String)
  fullName: System.IO.File.Encrypt(String)
- uid: System.IO.File.Exists(System.String)
  parent: System.IO.File
  isExternal: false
  name: Exists(String)
  nameWithType: File.Exists(String)
  fullName: System.IO.File.Exists(String)
- uid: System.IO.File.GetAccessControl(System.String)
  parent: System.IO.File
  isExternal: false
  name: GetAccessControl(String)
  nameWithType: File.GetAccessControl(String)
  fullName: System.IO.File.GetAccessControl(String)
- uid: System.IO.File.GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)
  parent: System.IO.File
  isExternal: false
  name: GetAccessControl(String,AccessControlSections)
  nameWithType: File.GetAccessControl(String,AccessControlSections)
  fullName: System.IO.File.GetAccessControl(String,AccessControlSections)
- uid: System.Security.AccessControl.AccessControlSections
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlSections
  nameWithType: AccessControlSections
  fullName: System.Security.AccessControl.AccessControlSections
- uid: System.IO.File.GetAttributes(System.String)
  parent: System.IO.File
  isExternal: false
  name: GetAttributes(String)
  nameWithType: File.GetAttributes(String)
  fullName: System.IO.File.GetAttributes(String)
- uid: System.IO.FileAttributes
  parent: System.IO
  isExternal: false
  name: FileAttributes
  nameWithType: FileAttributes
  fullName: System.IO.FileAttributes
- uid: System.IO.File.GetCreationTime(System.String)
  parent: System.IO.File
  isExternal: false
  name: GetCreationTime(String)
  nameWithType: File.GetCreationTime(String)
  fullName: System.IO.File.GetCreationTime(String)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.IO.File.GetCreationTimeUtc(System.String)
  parent: System.IO.File
  isExternal: false
  name: GetCreationTimeUtc(String)
  nameWithType: File.GetCreationTimeUtc(String)
  fullName: System.IO.File.GetCreationTimeUtc(String)
- uid: System.IO.File.GetLastAccessTime(System.String)
  parent: System.IO.File
  isExternal: false
  name: GetLastAccessTime(String)
  nameWithType: File.GetLastAccessTime(String)
  fullName: System.IO.File.GetLastAccessTime(String)
- uid: System.IO.File.GetLastAccessTimeUtc(System.String)
  parent: System.IO.File
  isExternal: false
  name: GetLastAccessTimeUtc(String)
  nameWithType: File.GetLastAccessTimeUtc(String)
  fullName: System.IO.File.GetLastAccessTimeUtc(String)
- uid: System.IO.File.GetLastWriteTime(System.String)
  parent: System.IO.File
  isExternal: false
  name: GetLastWriteTime(String)
  nameWithType: File.GetLastWriteTime(String)
  fullName: System.IO.File.GetLastWriteTime(String)
- uid: System.IO.File.GetLastWriteTimeUtc(System.String)
  parent: System.IO.File
  isExternal: false
  name: GetLastWriteTimeUtc(String)
  nameWithType: File.GetLastWriteTimeUtc(String)
  fullName: System.IO.File.GetLastWriteTimeUtc(String)
- uid: System.IO.File.Move(System.String,System.String)
  parent: System.IO.File
  isExternal: false
  name: Move(String,String)
  nameWithType: File.Move(String,String)
  fullName: System.IO.File.Move(String,String)
- uid: System.IO.File.Open(System.String,System.IO.FileMode)
  parent: System.IO.File
  isExternal: false
  name: Open(String,FileMode)
  nameWithType: File.Open(String,FileMode)
  fullName: System.IO.File.Open(String,FileMode)
- uid: System.IO.FileMode
  parent: System.IO
  isExternal: false
  name: FileMode
  nameWithType: FileMode
  fullName: System.IO.FileMode
- uid: System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.File
  isExternal: false
  name: Open(String,FileMode,FileAccess)
  nameWithType: File.Open(String,FileMode,FileAccess)
  fullName: System.IO.File.Open(String,FileMode,FileAccess)
- uid: System.IO.FileAccess
  parent: System.IO
  isExternal: false
  name: FileAccess
  nameWithType: FileAccess
  fullName: System.IO.FileAccess
- uid: System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  parent: System.IO.File
  isExternal: false
  name: Open(String,FileMode,FileAccess,FileShare)
  nameWithType: File.Open(String,FileMode,FileAccess,FileShare)
  fullName: System.IO.File.Open(String,FileMode,FileAccess,FileShare)
- uid: System.IO.FileShare
  parent: System.IO
  isExternal: false
  name: FileShare
  nameWithType: FileShare
  fullName: System.IO.FileShare
- uid: System.IO.File.OpenRead(System.String)
  parent: System.IO.File
  isExternal: false
  name: OpenRead(String)
  nameWithType: File.OpenRead(String)
  fullName: System.IO.File.OpenRead(String)
- uid: System.IO.File.OpenText(System.String)
  parent: System.IO.File
  isExternal: false
  name: OpenText(String)
  nameWithType: File.OpenText(String)
  fullName: System.IO.File.OpenText(String)
- uid: System.IO.StreamReader
  parent: System.IO
  isExternal: true
  name: StreamReader
  nameWithType: StreamReader
  fullName: System.IO.StreamReader
- uid: System.IO.File.OpenWrite(System.String)
  parent: System.IO.File
  isExternal: false
  name: OpenWrite(String)
  nameWithType: File.OpenWrite(String)
  fullName: System.IO.File.OpenWrite(String)
- uid: System.IO.File.ReadAllBytes(System.String)
  parent: System.IO.File
  isExternal: false
  name: ReadAllBytes(String)
  nameWithType: File.ReadAllBytes(String)
  fullName: System.IO.File.ReadAllBytes(String)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.File.ReadAllLines(System.String)
  parent: System.IO.File
  isExternal: false
  name: ReadAllLines(String)
  nameWithType: File.ReadAllLines(String)
  fullName: System.IO.File.ReadAllLines(String)
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.File.ReadAllLines(System.String,System.Text.Encoding)
  parent: System.IO.File
  isExternal: false
  name: ReadAllLines(String,Encoding)
  nameWithType: File.ReadAllLines(String,Encoding)
  fullName: System.IO.File.ReadAllLines(String,Encoding)
- uid: System.IO.File.ReadAllText(System.String)
  parent: System.IO.File
  isExternal: false
  name: ReadAllText(String)
  nameWithType: File.ReadAllText(String)
  fullName: System.IO.File.ReadAllText(String)
- uid: System.IO.File.ReadAllText(System.String,System.Text.Encoding)
  parent: System.IO.File
  isExternal: false
  name: ReadAllText(String,Encoding)
  nameWithType: File.ReadAllText(String,Encoding)
  fullName: System.IO.File.ReadAllText(String,Encoding)
- uid: System.IO.File.ReadLines(System.String)
  parent: System.IO.File
  isExternal: false
  name: ReadLines(String)
  nameWithType: File.ReadLines(String)
  fullName: System.IO.File.ReadLines(String)
- uid: System.IO.File.ReadLines(System.String,System.Text.Encoding)
  parent: System.IO.File
  isExternal: false
  name: ReadLines(String,Encoding)
  nameWithType: File.ReadLines(String,Encoding)
  fullName: System.IO.File.ReadLines(String,Encoding)
- uid: System.IO.File.Replace(System.String,System.String,System.String)
  parent: System.IO.File
  isExternal: false
  name: Replace(String,String,String)
  nameWithType: File.Replace(String,String,String)
  fullName: System.IO.File.Replace(String,String,String)
- uid: System.IO.File.Replace(System.String,System.String,System.String,System.Boolean)
  parent: System.IO.File
  isExternal: false
  name: Replace(String,String,String,Boolean)
  nameWithType: File.Replace(String,String,String,Boolean)
  fullName: System.IO.File.Replace(String,String,String,Boolean)
- uid: System.IO.File.SetAccessControl(System.String,System.Security.AccessControl.FileSecurity)
  parent: System.IO.File
  isExternal: false
  name: SetAccessControl(String,FileSecurity)
  nameWithType: File.SetAccessControl(String,FileSecurity)
  fullName: System.IO.File.SetAccessControl(String,FileSecurity)
- uid: System.IO.File.SetAttributes(System.String,System.IO.FileAttributes)
  parent: System.IO.File
  isExternal: false
  name: SetAttributes(String,FileAttributes)
  nameWithType: File.SetAttributes(String,FileAttributes)
  fullName: System.IO.File.SetAttributes(String,FileAttributes)
- uid: System.IO.File.SetCreationTime(System.String,System.DateTime)
  parent: System.IO.File
  isExternal: false
  name: SetCreationTime(String,DateTime)
  nameWithType: File.SetCreationTime(String,DateTime)
  fullName: System.IO.File.SetCreationTime(String,DateTime)
- uid: System.IO.File.SetCreationTimeUtc(System.String,System.DateTime)
  parent: System.IO.File
  isExternal: false
  name: SetCreationTimeUtc(String,DateTime)
  nameWithType: File.SetCreationTimeUtc(String,DateTime)
  fullName: System.IO.File.SetCreationTimeUtc(String,DateTime)
- uid: System.IO.File.SetLastAccessTime(System.String,System.DateTime)
  parent: System.IO.File
  isExternal: false
  name: SetLastAccessTime(String,DateTime)
  nameWithType: File.SetLastAccessTime(String,DateTime)
  fullName: System.IO.File.SetLastAccessTime(String,DateTime)
- uid: System.IO.File.SetLastAccessTimeUtc(System.String,System.DateTime)
  parent: System.IO.File
  isExternal: false
  name: SetLastAccessTimeUtc(String,DateTime)
  nameWithType: File.SetLastAccessTimeUtc(String,DateTime)
  fullName: System.IO.File.SetLastAccessTimeUtc(String,DateTime)
- uid: System.IO.File.SetLastWriteTime(System.String,System.DateTime)
  parent: System.IO.File
  isExternal: false
  name: SetLastWriteTime(String,DateTime)
  nameWithType: File.SetLastWriteTime(String,DateTime)
  fullName: System.IO.File.SetLastWriteTime(String,DateTime)
- uid: System.IO.File.SetLastWriteTimeUtc(System.String,System.DateTime)
  parent: System.IO.File
  isExternal: false
  name: SetLastWriteTimeUtc(String,DateTime)
  nameWithType: File.SetLastWriteTimeUtc(String,DateTime)
  fullName: System.IO.File.SetLastWriteTimeUtc(String,DateTime)
- uid: System.IO.File.WriteAllBytes(System.String,System.Byte[])
  parent: System.IO.File
  isExternal: false
  name: WriteAllBytes(String,Byte[])
  nameWithType: File.WriteAllBytes(String,Byte[])
  fullName: System.IO.File.WriteAllBytes(String,Byte[])
- uid: System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: System.IO.File
  isExternal: false
  name: WriteAllLines(String,IEnumerable<String>)
  nameWithType: File.WriteAllLines(String,IEnumerable<String>)
  fullName: System.IO.File.WriteAllLines(String,IEnumerable<String>)
- uid: System.IO.File.WriteAllLines(System.String,System.String[])
  parent: System.IO.File
  isExternal: false
  name: WriteAllLines(String,String[])
  nameWithType: File.WriteAllLines(String,String[])
  fullName: System.IO.File.WriteAllLines(String,String[])
- uid: System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)
  parent: System.IO.File
  isExternal: false
  name: WriteAllLines(String,IEnumerable<String>,Encoding)
  nameWithType: File.WriteAllLines(String,IEnumerable<String>,Encoding)
  fullName: System.IO.File.WriteAllLines(String,IEnumerable<String>,Encoding)
- uid: System.IO.File.WriteAllLines(System.String,System.String[],System.Text.Encoding)
  parent: System.IO.File
  isExternal: false
  name: WriteAllLines(String,String[],Encoding)
  nameWithType: File.WriteAllLines(String,String[],Encoding)
  fullName: System.IO.File.WriteAllLines(String,String[],Encoding)
- uid: System.IO.File.WriteAllText(System.String,System.String)
  parent: System.IO.File
  isExternal: false
  name: WriteAllText(String,String)
  nameWithType: File.WriteAllText(String,String)
  fullName: System.IO.File.WriteAllText(String,String)
- uid: System.IO.File.WriteAllText(System.String,System.String,System.Text.Encoding)
  parent: System.IO.File
  isExternal: false
  name: WriteAllText(String,String,Encoding)
  nameWithType: File.WriteAllText(String,String,Encoding)
  fullName: System.IO.File.WriteAllText(String,String,Encoding)
- uid: System.IO.File.AppendAllLines*
  parent: System.IO.File
  isExternal: false
  name: AppendAllLines
  nameWithType: File.AppendAllLines
- uid: System.IO.File.AppendAllText*
  parent: System.IO.File
  isExternal: false
  name: AppendAllText
  nameWithType: File.AppendAllText
- uid: System.IO.File.AppendText*
  parent: System.IO.File
  isExternal: false
  name: AppendText
  nameWithType: File.AppendText
- uid: System.IO.File.Copy*
  parent: System.IO.File
  isExternal: false
  name: Copy
  nameWithType: File.Copy
- uid: System.IO.File.Create*
  parent: System.IO.File
  isExternal: false
  name: Create
  nameWithType: File.Create
- uid: System.IO.File.CreateText*
  parent: System.IO.File
  isExternal: false
  name: CreateText
  nameWithType: File.CreateText
- uid: System.IO.File.Decrypt*
  parent: System.IO.File
  isExternal: false
  name: Decrypt
  nameWithType: File.Decrypt
- uid: System.IO.File.Delete*
  parent: System.IO.File
  isExternal: false
  name: Delete
  nameWithType: File.Delete
- uid: System.IO.File.Encrypt*
  parent: System.IO.File
  isExternal: false
  name: Encrypt
  nameWithType: File.Encrypt
- uid: System.IO.File.Exists*
  parent: System.IO.File
  isExternal: false
  name: Exists
  nameWithType: File.Exists
- uid: System.IO.File.GetAccessControl*
  parent: System.IO.File
  isExternal: false
  name: GetAccessControl
  nameWithType: File.GetAccessControl
- uid: System.IO.File.GetAttributes*
  parent: System.IO.File
  isExternal: false
  name: GetAttributes
  nameWithType: File.GetAttributes
- uid: System.IO.File.GetCreationTime*
  parent: System.IO.File
  isExternal: false
  name: GetCreationTime
  nameWithType: File.GetCreationTime
- uid: System.IO.File.GetCreationTimeUtc*
  parent: System.IO.File
  isExternal: false
  name: GetCreationTimeUtc
  nameWithType: File.GetCreationTimeUtc
- uid: System.IO.File.GetLastAccessTime*
  parent: System.IO.File
  isExternal: false
  name: GetLastAccessTime
  nameWithType: File.GetLastAccessTime
- uid: System.IO.File.GetLastAccessTimeUtc*
  parent: System.IO.File
  isExternal: false
  name: GetLastAccessTimeUtc
  nameWithType: File.GetLastAccessTimeUtc
- uid: System.IO.File.GetLastWriteTime*
  parent: System.IO.File
  isExternal: false
  name: GetLastWriteTime
  nameWithType: File.GetLastWriteTime
- uid: System.IO.File.GetLastWriteTimeUtc*
  parent: System.IO.File
  isExternal: false
  name: GetLastWriteTimeUtc
  nameWithType: File.GetLastWriteTimeUtc
- uid: System.IO.File.Move*
  parent: System.IO.File
  isExternal: false
  name: Move
  nameWithType: File.Move
- uid: System.IO.File.Open*
  parent: System.IO.File
  isExternal: false
  name: Open
  nameWithType: File.Open
- uid: System.IO.File.OpenRead*
  parent: System.IO.File
  isExternal: false
  name: OpenRead
  nameWithType: File.OpenRead
- uid: System.IO.File.OpenText*
  parent: System.IO.File
  isExternal: false
  name: OpenText
  nameWithType: File.OpenText
- uid: System.IO.File.OpenWrite*
  parent: System.IO.File
  isExternal: false
  name: OpenWrite
  nameWithType: File.OpenWrite
- uid: System.IO.File.ReadAllBytes*
  parent: System.IO.File
  isExternal: false
  name: ReadAllBytes
  nameWithType: File.ReadAllBytes
- uid: System.IO.File.ReadAllLines*
  parent: System.IO.File
  isExternal: false
  name: ReadAllLines
  nameWithType: File.ReadAllLines
- uid: System.IO.File.ReadAllText*
  parent: System.IO.File
  isExternal: false
  name: ReadAllText
  nameWithType: File.ReadAllText
- uid: System.IO.File.ReadLines*
  parent: System.IO.File
  isExternal: false
  name: ReadLines
  nameWithType: File.ReadLines
- uid: System.IO.File.Replace*
  parent: System.IO.File
  isExternal: false
  name: Replace
  nameWithType: File.Replace
- uid: System.IO.File.SetAccessControl*
  parent: System.IO.File
  isExternal: false
  name: SetAccessControl
  nameWithType: File.SetAccessControl
- uid: System.IO.File.SetAttributes*
  parent: System.IO.File
  isExternal: false
  name: SetAttributes
  nameWithType: File.SetAttributes
- uid: System.IO.File.SetCreationTime*
  parent: System.IO.File
  isExternal: false
  name: SetCreationTime
  nameWithType: File.SetCreationTime
- uid: System.IO.File.SetCreationTimeUtc*
  parent: System.IO.File
  isExternal: false
  name: SetCreationTimeUtc
  nameWithType: File.SetCreationTimeUtc
- uid: System.IO.File.SetLastAccessTime*
  parent: System.IO.File
  isExternal: false
  name: SetLastAccessTime
  nameWithType: File.SetLastAccessTime
- uid: System.IO.File.SetLastAccessTimeUtc*
  parent: System.IO.File
  isExternal: false
  name: SetLastAccessTimeUtc
  nameWithType: File.SetLastAccessTimeUtc
- uid: System.IO.File.SetLastWriteTime*
  parent: System.IO.File
  isExternal: false
  name: SetLastWriteTime
  nameWithType: File.SetLastWriteTime
- uid: System.IO.File.SetLastWriteTimeUtc*
  parent: System.IO.File
  isExternal: false
  name: SetLastWriteTimeUtc
  nameWithType: File.SetLastWriteTimeUtc
- uid: System.IO.File.WriteAllBytes*
  parent: System.IO.File
  isExternal: false
  name: WriteAllBytes
  nameWithType: File.WriteAllBytes
- uid: System.IO.File.WriteAllLines*
  parent: System.IO.File
  isExternal: false
  name: WriteAllLines
  nameWithType: File.WriteAllLines
- uid: System.IO.File.WriteAllText*
  parent: System.IO.File
  isExternal: false
  name: WriteAllText
  nameWithType: File.WriteAllText
