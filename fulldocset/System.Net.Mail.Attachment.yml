### YamlMime:ManagedReference
items:
- uid: System.Net.Mail.Attachment
  id: Attachment
  children:
  - System.Net.Mail.Attachment.#ctor(System.String)
  - System.Net.Mail.Attachment.#ctor(System.IO.Stream,System.Net.Mime.ContentType)
  - System.Net.Mail.Attachment.#ctor(System.IO.Stream,System.String)
  - System.Net.Mail.Attachment.#ctor(System.String,System.Net.Mime.ContentType)
  - System.Net.Mail.Attachment.#ctor(System.String,System.String)
  - System.Net.Mail.Attachment.#ctor(System.IO.Stream,System.String,System.String)
  - System.Net.Mail.Attachment.ContentDisposition
  - System.Net.Mail.Attachment.CreateAttachmentFromString(System.String,System.Net.Mime.ContentType)
  - System.Net.Mail.Attachment.CreateAttachmentFromString(System.String,System.String)
  - System.Net.Mail.Attachment.CreateAttachmentFromString(System.String,System.String,System.Text.Encoding,System.String)
  - System.Net.Mail.Attachment.Name
  - System.Net.Mail.Attachment.NameEncoding
  langs:
  - csharp
  name: Attachment
  nameWithType: Attachment
  fullName: System.Net.Mail.Attachment
  type: Class
  summary: "Represents an attachment to an e-mail."
  remarks: "The Attachment class is used with the <xref:System.Net.Mail.MailMessage> class. All messages include a <xref:System.Net.Mail.MailMessage.Body%2A>, which contains the content of the message. In addition to the body, you might want to send additional files. These are sent as attachments and are represented as Attachment instances. To add an attachment to a mail message, add it to the <xref:System.Net.Mail.MailMessage.Attachments?displayProperty=fullName> collection.       Attachment content can be a <xref:System.String>, <xref:System.IO.Stream>, or file name. You can specify the content in an attachment by using any of the <xref:System.Net.Mail.Attachment.%23ctor%2A> constructors.       The MIME Content-Type header information for the attachment is represented by the <xref:System.Net.Mail.AttachmentBase.ContentType%2A> property. The Content-Type header specifies the media type and subtype and any associated parameters. Use <xref:System.Net.Mail.AttachmentBase.ContentType%2A> to get the instance associated with an attachment.       The MIME Content-Disposition header is represented by the <xref:System.Net.Mail.Attachment.ContentDisposition%2A> property. The Content-Disposition header specifies the presentation and file time stamps for an attachment. A Content-Disposition header is sent only if the attachment is a file. Use the <xref:System.Net.Mail.Attachment.ContentDisposition%2A> property to get the instance associated with an attachment.       The MIME Content-Transfer-Encoding header is represented by the <xref:System.Net.Mail.AttachmentBase.TransferEncoding%2A> property."
  example:
  - "The following code example demonstrates attaching a file to an e-mail message.  \n  \n [!code-cpp[NclMailSync#6](~/add/codesnippet/cpp/t-system.net.mail.attach_0_1.cpp)]\n [!code-cs[NclMailSync#6](~/add/codesnippet/csharp/t-system.net.mail.attach_0_1.cs)]"
  syntax:
    content: 'public class Attachment : System.Net.Mail.AttachmentBase'
  inheritance:
  - System.Object
  - System.Net.Mail.AttachmentBase
  implements: []
  inheritedMembers:
  - System.Net.Mail.AttachmentBase.ContentId
  - System.Net.Mail.AttachmentBase.ContentStream
  - System.Net.Mail.AttachmentBase.ContentType
  - System.Net.Mail.AttachmentBase.Dispose
  - System.Net.Mail.AttachmentBase.Dispose(System.Boolean)
  - System.Net.Mail.AttachmentBase.TransferEncoding
  platform:
  - net462
- uid: System.Net.Mail.Attachment.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Net.Mail.Attachment
  langs:
  - csharp
  name: Attachment(String)
  nameWithType: Attachment.Attachment(String)
  fullName: System.Net.Mail.Attachment.Attachment(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Initializes a new instance of the <xref href=&quot;System.Net.Mail.Attachment&quot;></xref> class with the specified content string."
  remarks: "The properties are set as follows:      |Property|Value|   |--------------|-----------|   |<xref:System.Net.Mime.ContentType.MediaType%2A>|<xref:System.Net.Mime.MediaTypeNames.Text.Plain>.|   |<xref:System.Net.Mail.AttachmentBase.TransferEncoding%2A>|<xref:System.Net.Mime.TransferEncoding>.|"
  example:
  - "The following code example demonstrates how to call this constructor.  \n  \n [!code-cpp[NclMailSync#13](~/add/codesnippet/cpp/m-system.net.mail.attach_0_1.cpp)]\n [!code-cs[NclMailSync#13](~/add/codesnippet/csharp/m-system.net.mail.attach_0_1.cs)]"
  syntax:
    content: public Attachment (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "A <xref:System.String> that contains a file path to use to create this attachment."
  overload: System.Net.Mail.Attachment.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>fileName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>fileName</code> is empty."
  platform:
  - net462
- uid: System.Net.Mail.Attachment.#ctor(System.IO.Stream,System.Net.Mime.ContentType)
  id: '#ctor(System.IO.Stream,System.Net.Mime.ContentType)'
  parent: System.Net.Mail.Attachment
  langs:
  - csharp
  name: Attachment(Stream,ContentType)
  nameWithType: Attachment.Attachment(Stream,ContentType)
  fullName: System.Net.Mail.Attachment.Attachment(Stream,ContentType)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Initializes a new instance of the <xref href=&quot;System.Net.Mail.Attachment&quot;></xref> class with the specified stream and content type."
  remarks: "The <xref:System.Net.Mail.AttachmentBase.TransferEncoding%2A> property is set to <xref:System.Net.Mime.TransferEncoding>.       If the stream&quot;s <xref:System.IO.Stream.CanSeek%2A> property is `false`, the attachment and the <xref:System.Net.Mail.MailMessage> that contains it are not reusable. You must supply a stream that can be searched to reuse an attachment."
  example:
  - "The following code example demonstrates how to call this constructor.  \n  \n [!code-cpp[NclMailSync#14](~/add/codesnippet/cpp/9dd26de9-cfde-476d-9208-_1.cpp)]\n [!code-cs[NclMailSync#14](~/add/codesnippet/csharp/9dd26de9-cfde-476d-9208-_1.cs)]"
  syntax:
    content: public Attachment (System.IO.Stream contentStream, System.Net.Mime.ContentType contentType);
    parameters:
    - id: contentStream
      type: System.IO.Stream
      description: "A readable <xref:System.IO.Stream> that contains the content for this attachment."
    - id: contentType
      type: System.Net.Mime.ContentType
      description: "A <xref href=&quot;System.Net.Mime.ContentType&quot;></xref> that describes the data in `stream`."
  overload: System.Net.Mail.Attachment.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>contentType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>contentStream</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.Mail.Attachment.#ctor(System.IO.Stream,System.String)
  id: '#ctor(System.IO.Stream,System.String)'
  parent: System.Net.Mail.Attachment
  langs:
  - csharp
  name: Attachment(Stream,String)
  nameWithType: Attachment.Attachment(Stream,String)
  fullName: System.Net.Mail.Attachment.Attachment(Stream,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Initializes a new instance of the <xref href=&quot;System.Net.Mail.Attachment&quot;></xref> class with the specified stream and name."
  remarks: "If `name` is not `null` or equal to <xref:System.String.Empty?displayProperty=fullName> (&quot;&quot;), the <xref:System.Net.Mime.ContentType> for this attachment is constructed with the <xref:System.Net.Mime.ContentType.Name%2A> property set to `name`. The <xref:System.Net.Mail.AttachmentBase.TransferEncoding%2A> property is set to <xref:System.Net.Mime.TransferEncoding>.       If the stream&quot;s <xref:System.IO.Stream.CanSeek%2A> property is `false`, the attachment and the <xref:System.Net.Mail.MailMessage> that contains it are not reusable. You must supply a stream that can be searched in order to reuse an attachment."
  example:
  - "The following code example demonstrates how to call this constructor.  \n  \n [!code-cpp[NclMailSync#15](~/add/codesnippet/cpp/m-system.net.mail.attach_1_1.cpp)]\n [!code-cs[NclMailSync#15](~/add/codesnippet/csharp/m-system.net.mail.attach_1_1.cs)]"
  syntax:
    content: public Attachment (System.IO.Stream contentStream, string name);
    parameters:
    - id: contentStream
      type: System.IO.Stream
      description: "A readable <xref:System.IO.Stream> that contains the content for this attachment."
    - id: name
      type: System.String
      description: "A <xref:System.String> that contains the value for the <xref:System.Net.Mime.ContentType.Name*> property of the <xref href=&quot;System.Net.Mime.ContentType&quot;></xref> associated with this attachment. This value can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Net.Mail.Attachment.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>contentStream</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.Mail.Attachment.#ctor(System.String,System.Net.Mime.ContentType)
  id: '#ctor(System.String,System.Net.Mime.ContentType)'
  parent: System.Net.Mail.Attachment
  langs:
  - csharp
  name: Attachment(String,ContentType)
  nameWithType: Attachment.Attachment(String,ContentType)
  fullName: System.Net.Mail.Attachment.Attachment(String,ContentType)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Initializes a new instance of the <xref href=&quot;System.Net.Mail.Attachment&quot;></xref> class with the specified content string and <xref href=&quot;System.Net.Mime.ContentType&quot;></xref>."
  syntax:
    content: public Attachment (string fileName, System.Net.Mime.ContentType contentType);
    parameters:
    - id: fileName
      type: System.String
      description: "A <xref:System.String> that contains a file path to use to create this attachment."
    - id: contentType
      type: System.Net.Mime.ContentType
      description: "A <xref href=&quot;System.Net.Mime.ContentType&quot;></xref> that describes the data in `string`."
  overload: System.Net.Mail.Attachment.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>fileName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>mediaType</code> is not in the correct format."
  platform:
  - net462
- uid: System.Net.Mail.Attachment.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Net.Mail.Attachment
  langs:
  - csharp
  name: Attachment(String,String)
  nameWithType: Attachment.Attachment(String,String)
  fullName: System.Net.Mail.Attachment.Attachment(String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Initializes a new instance of the <xref href=&quot;System.Net.Mail.Attachment&quot;></xref> class with the specified content string and MIME type information."
  remarks: "If `mediaType` is `null` or equal to <xref:System.String?displayProperty=fullName> (&quot;&quot;), the <xref:System.Net.Mime.ContentType.MediaType%2A> property for this attachment is set to <xref:System.Net.Mime.MediaTypeNames.Text.Plain>. If `mediaType` is not `null` and is not a zero-length string, it is used to construct the <xref:System.Net.Mime.ContentType> associated with this attachment."
  example:
  - "The following code example demonstrates how to call this constructor.  \n  \n [!code-cpp[NclMailSync#12](~/add/codesnippet/cpp/m-system.net.mail.attach_2_1.cpp)]\n [!code-cs[NclMailSync#12](~/add/codesnippet/csharp/m-system.net.mail.attach_2_1.cs)]"
  syntax:
    content: public Attachment (string fileName, string mediaType);
    parameters:
    - id: fileName
      type: System.String
      description: "A <xref:System.String> that contains the content for this attachment."
    - id: mediaType
      type: System.String
      description: "A <xref:System.String> that contains the MIME Content-Header information for this attachment. This value can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Net.Mail.Attachment.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>fileName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>mediaType</code> is not in the correct format."
  platform:
  - net462
- uid: System.Net.Mail.Attachment.#ctor(System.IO.Stream,System.String,System.String)
  id: '#ctor(System.IO.Stream,System.String,System.String)'
  parent: System.Net.Mail.Attachment
  langs:
  - csharp
  name: Attachment(Stream,String,String)
  nameWithType: Attachment.Attachment(Stream,String,String)
  fullName: System.Net.Mail.Attachment.Attachment(Stream,String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Initializes a new instance of the <xref href=&quot;System.Net.Mail.Attachment&quot;></xref> class with the specified stream, name, and MIME type information."
  remarks: "If `mediaType` is not `null` or equal to <xref:System.String?displayProperty=fullName> (&quot;&quot;), it is used to construct the <xref:System.Net.Mime.ContentType> class associated with this attachment.       If `mediaType` and `name` both contain <xref:System.Net.Mime.ContentType.Name%2A> information, the value specified in `name` is used. The <xref:System.Net.Mail.AttachmentBase.TransferEncoding%2A> property is set to <xref:System.Net.Mime.TransferEncoding>.       If the stream&quot;s <xref:System.IO.Stream.CanSeek%2A> property is `false`, the attachment and the <xref:System.Net.Mail.MailMessage> that contains it are not reusable. You must supply a stream that can be searched in order to reuse an attachment."
  example:
  - "The following code example demonstrates how to call this constructor.  \n  \n [!code-cpp[NclMailSync#16](~/add/codesnippet/cpp/468cf040-98ca-4d45-ae2a-_1.cpp)]\n [!code-cs[NclMailSync#16](~/add/codesnippet/csharp/468cf040-98ca-4d45-ae2a-_1.cs)]"
  syntax:
    content: public Attachment (System.IO.Stream contentStream, string name, string mediaType);
    parameters:
    - id: contentStream
      type: System.IO.Stream
      description: "A readable <xref:System.IO.Stream> that contains the content for this attachment."
    - id: name
      type: System.String
      description: "A <xref:System.String> that contains the value for the <xref:System.Net.Mime.ContentType.Name*> property of the <xref href=&quot;System.Net.Mime.ContentType&quot;></xref> associated with this attachment. This value can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: mediaType
      type: System.String
      description: "A <xref:System.String> that contains the MIME Content-Header information for this attachment. This value can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Net.Mail.Attachment.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>mediaType</code> is not in the correct format."
  platform:
  - net462
- uid: System.Net.Mail.Attachment.ContentDisposition
  id: ContentDisposition
  parent: System.Net.Mail.Attachment
  langs:
  - csharp
  name: ContentDisposition
  nameWithType: Attachment.ContentDisposition
  fullName: System.Net.Mail.Attachment.ContentDisposition
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Gets the MIME content disposition for this attachment."
  remarks: "The information in the <xref:System.Net.Mime.ContentDisposition> class represents the MIME Content-Disposition header. This header is described in RFC 2183, available at [http://www.ietf.org](http://www.ietf.org/)."
  example:
  - "The following code example gets the <xref:System.Net.Mime.ContentDisposition> for an attachment and displays its properties.  \n  \n [!code-cpp[NclMailSync#11](~/add/codesnippet/cpp/p-system.net.mail.attach_1_1.cpp)]\n [!code-cs[NclMailSync#11](~/add/codesnippet/csharp/p-system.net.mail.attach_1_1.cs)]"
  syntax:
    content: public System.Net.Mime.ContentDisposition ContentDisposition { get; }
    return:
      type: System.Net.Mime.ContentDisposition
      description: "A <xref href=&quot;System.Net.Mime.ContentDisposition&quot;></xref> that provides the presentation information for this attachment."
  overload: System.Net.Mail.Attachment.ContentDisposition*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.Attachment.CreateAttachmentFromString(System.String,System.Net.Mime.ContentType)
  id: CreateAttachmentFromString(System.String,System.Net.Mime.ContentType)
  parent: System.Net.Mail.Attachment
  langs:
  - csharp
  name: CreateAttachmentFromString(String,ContentType)
  nameWithType: Attachment.CreateAttachmentFromString(String,ContentType)
  fullName: System.Net.Mail.Attachment.CreateAttachmentFromString(String,ContentType)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Creates a mail attachment using the content from the specified string, and the specified <xref href=&quot;System.Net.Mime.ContentType&quot;></xref>."
  syntax:
    content: public static System.Net.Mail.Attachment CreateAttachmentFromString (string content, System.Net.Mime.ContentType contentType);
    parameters:
    - id: content
      type: System.String
      description: "A <xref:System.String> that contains the content for this attachment."
    - id: contentType
      type: System.Net.Mime.ContentType
      description: "A <xref href=&quot;System.Net.Mime.ContentType&quot;></xref> object that represents the Multipurpose Internet Mail Exchange (MIME) protocol Content-Type header to be used."
    return:
      type: System.Net.Mail.Attachment
      description: "An object of type <xref href=&quot;System.Net.Mail.Attachment&quot;></xref>."
  overload: System.Net.Mail.Attachment.CreateAttachmentFromString*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.Attachment.CreateAttachmentFromString(System.String,System.String)
  id: CreateAttachmentFromString(System.String,System.String)
  parent: System.Net.Mail.Attachment
  langs:
  - csharp
  name: CreateAttachmentFromString(String,String)
  nameWithType: Attachment.CreateAttachmentFromString(String,String)
  fullName: System.Net.Mail.Attachment.CreateAttachmentFromString(String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Creates a mail attachment using the content from the specified string, and the specified MIME content type name."
  remarks: "If the content is in ASCII format then the character encoding is set to ASCII. For all other formats, the character encoding is set to utf-8. The default media type is plain text.       If the content is not in ASCII format and the encoding is null, utf-8 encoding is used."
  syntax:
    content: public static System.Net.Mail.Attachment CreateAttachmentFromString (string content, string name);
    parameters:
    - id: content
      type: System.String
      description: "A <xref:System.String> that contains the content for this attachment."
    - id: name
      type: System.String
      description: "The MIME content type name value in the content type associated with this attachment."
    return:
      type: System.Net.Mail.Attachment
      description: "An object of type <xref href=&quot;System.Net.Mail.Attachment&quot;></xref>."
  overload: System.Net.Mail.Attachment.CreateAttachmentFromString*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.Attachment.CreateAttachmentFromString(System.String,System.String,System.Text.Encoding,System.String)
  id: CreateAttachmentFromString(System.String,System.String,System.Text.Encoding,System.String)
  parent: System.Net.Mail.Attachment
  langs:
  - csharp
  name: CreateAttachmentFromString(String,String,Encoding,String)
  nameWithType: Attachment.CreateAttachmentFromString(String,String,Encoding,String)
  fullName: System.Net.Mail.Attachment.CreateAttachmentFromString(String,String,Encoding,String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Creates a mail attachment using the content from the specified string, the specified MIME content type name, character encoding, and MIME header information for the attachment."
  syntax:
    content: public static System.Net.Mail.Attachment CreateAttachmentFromString (string content, string name, System.Text.Encoding contentEncoding, string mediaType);
    parameters:
    - id: content
      type: System.String
      description: "A <xref:System.String> that contains the content for this attachment."
    - id: name
      type: System.String
      description: "The MIME content type name value in the content type associated with this attachment."
    - id: contentEncoding
      type: System.Text.Encoding
      description: "An <xref:System.Text.Encoding>. This value can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: mediaType
      type: System.String
      description: "A <xref:System.String> that contains the MIME Content-Header information for this attachment. This value can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Net.Mail.Attachment
      description: "An object of type <xref href=&quot;System.Net.Mail.Attachment&quot;></xref>."
  overload: System.Net.Mail.Attachment.CreateAttachmentFromString*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.Attachment.Name
  id: Name
  parent: System.Net.Mail.Attachment
  langs:
  - csharp
  name: Name
  nameWithType: Attachment.Name
  fullName: System.Net.Mail.Attachment.Name
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Gets or sets the MIME content type name value in the content type associated with this attachment."
  remarks: "The Name property is used in the Content-Type header generated for this attachment. The Name is displayed as the attachment’s name when the email with the attachment is received. A grammar that details the syntax of the Content-Type header is described in RFC 2045 Section 5.1. RFC 2046 provides detailed information about MIME media types and their parameters. These RFCs are available at [http://www.ietf.org](http://www.ietf.org/)."
  example:
  - "The following code example demonstrates how to display information about an attachment.  \n  \n [!code-cpp[NclMailSync#19](~/add/codesnippet/cpp/p-system.net.mail.attach_0_1.cpp)]\n [!code-cs[NclMailSync#19](~/add/codesnippet/csharp/p-system.net.mail.attach_0_1.cs)]"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String> that contains the value for the content type <code>name</code> represented by the <xref href=&quot;System.Net.Mime.ContentType.Name&quot;></xref> property."
  overload: System.Net.Mail.Attachment.Name*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The value specified for a set operation is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The value specified for a set operation is <xref:System.String.Empty> (&quot;&quot;)."
  platform:
  - net462
- uid: System.Net.Mail.Attachment.NameEncoding
  id: NameEncoding
  parent: System.Net.Mail.Attachment
  langs:
  - csharp
  name: NameEncoding
  nameWithType: Attachment.NameEncoding
  fullName: System.Net.Mail.Attachment.NameEncoding
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Specifies the encoding for the <xref href=&quot;System.Net.Mail.Attachment&quot;></xref><xref:System.Net.Mail.Attachment.Name*>."
  syntax:
    content: public System.Text.Encoding NameEncoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "An <xref:System.Text.Encoding> value that specifies the type of name encoding. The default value is determined from the name of the attachment."
  overload: System.Net.Mail.Attachment.NameEncoding*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Net.Mail.AttachmentBase
  isExternal: false
  name: System.Net.Mail.AttachmentBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.Net.Mail.Attachment.#ctor(System.String)
  parent: System.Net.Mail.Attachment
  isExternal: false
  name: Attachment(String)
  nameWithType: Attachment.Attachment(String)
  fullName: System.Net.Mail.Attachment.Attachment(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Mail.Attachment.#ctor(System.IO.Stream,System.Net.Mime.ContentType)
  parent: System.Net.Mail.Attachment
  isExternal: false
  name: Attachment(Stream,ContentType)
  nameWithType: Attachment.Attachment(Stream,ContentType)
  fullName: System.Net.Mail.Attachment.Attachment(Stream,ContentType)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Net.Mime.ContentType
  parent: System.Net.Mime
  isExternal: false
  name: ContentType
  nameWithType: ContentType
  fullName: System.Net.Mime.ContentType
- uid: System.Net.Mail.Attachment.#ctor(System.IO.Stream,System.String)
  parent: System.Net.Mail.Attachment
  isExternal: false
  name: Attachment(Stream,String)
  nameWithType: Attachment.Attachment(Stream,String)
  fullName: System.Net.Mail.Attachment.Attachment(Stream,String)
- uid: System.Net.Mail.Attachment.#ctor(System.String,System.Net.Mime.ContentType)
  parent: System.Net.Mail.Attachment
  isExternal: false
  name: Attachment(String,ContentType)
  nameWithType: Attachment.Attachment(String,ContentType)
  fullName: System.Net.Mail.Attachment.Attachment(String,ContentType)
- uid: System.Net.Mail.Attachment.#ctor(System.String,System.String)
  parent: System.Net.Mail.Attachment
  isExternal: false
  name: Attachment(String,String)
  nameWithType: Attachment.Attachment(String,String)
  fullName: System.Net.Mail.Attachment.Attachment(String,String)
- uid: System.Net.Mail.Attachment.#ctor(System.IO.Stream,System.String,System.String)
  parent: System.Net.Mail.Attachment
  isExternal: false
  name: Attachment(Stream,String,String)
  nameWithType: Attachment.Attachment(Stream,String,String)
  fullName: System.Net.Mail.Attachment.Attachment(Stream,String,String)
- uid: System.Net.Mail.Attachment.ContentDisposition
  parent: System.Net.Mail.Attachment
  isExternal: false
  name: ContentDisposition
  nameWithType: Attachment.ContentDisposition
  fullName: System.Net.Mail.Attachment.ContentDisposition
- uid: System.Net.Mime.ContentDisposition
  parent: System.Net.Mime
  isExternal: false
  name: ContentDisposition
  nameWithType: ContentDisposition
  fullName: System.Net.Mime.ContentDisposition
- uid: System.Net.Mail.Attachment.CreateAttachmentFromString(System.String,System.Net.Mime.ContentType)
  parent: System.Net.Mail.Attachment
  isExternal: false
  name: CreateAttachmentFromString(String,ContentType)
  nameWithType: Attachment.CreateAttachmentFromString(String,ContentType)
  fullName: System.Net.Mail.Attachment.CreateAttachmentFromString(String,ContentType)
- uid: System.Net.Mail.Attachment
  parent: System.Net.Mail
  isExternal: false
  name: Attachment
  nameWithType: Attachment
  fullName: System.Net.Mail.Attachment
- uid: System.Net.Mail.Attachment.CreateAttachmentFromString(System.String,System.String)
  parent: System.Net.Mail.Attachment
  isExternal: false
  name: CreateAttachmentFromString(String,String)
  nameWithType: Attachment.CreateAttachmentFromString(String,String)
  fullName: System.Net.Mail.Attachment.CreateAttachmentFromString(String,String)
- uid: System.Net.Mail.Attachment.CreateAttachmentFromString(System.String,System.String,System.Text.Encoding,System.String)
  parent: System.Net.Mail.Attachment
  isExternal: false
  name: CreateAttachmentFromString(String,String,Encoding,String)
  nameWithType: Attachment.CreateAttachmentFromString(String,String,Encoding,String)
  fullName: System.Net.Mail.Attachment.CreateAttachmentFromString(String,String,Encoding,String)
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Net.Mail.Attachment.Name
  parent: System.Net.Mail.Attachment
  isExternal: false
  name: Name
  nameWithType: Attachment.Name
  fullName: System.Net.Mail.Attachment.Name
- uid: System.Net.Mail.Attachment.NameEncoding
  parent: System.Net.Mail.Attachment
  isExternal: false
  name: NameEncoding
  nameWithType: Attachment.NameEncoding
  fullName: System.Net.Mail.Attachment.NameEncoding
- uid: System.Net.Mail.Attachment.#ctor*
  parent: System.Net.Mail.Attachment
  isExternal: false
  name: Attachment
  nameWithType: Attachment.Attachment
- uid: System.Net.Mail.Attachment.ContentDisposition*
  parent: System.Net.Mail.Attachment
  isExternal: false
  name: ContentDisposition
  nameWithType: Attachment.ContentDisposition
- uid: System.Net.Mail.Attachment.CreateAttachmentFromString*
  parent: System.Net.Mail.Attachment
  isExternal: false
  name: CreateAttachmentFromString
  nameWithType: Attachment.CreateAttachmentFromString
- uid: System.Net.Mail.Attachment.Name*
  parent: System.Net.Mail.Attachment
  isExternal: false
  name: Name
  nameWithType: Attachment.Name
- uid: System.Net.Mail.Attachment.NameEncoding*
  parent: System.Net.Mail.Attachment
  isExternal: false
  name: NameEncoding
  nameWithType: Attachment.NameEncoding
