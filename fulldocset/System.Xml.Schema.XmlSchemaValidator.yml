### YamlMime:ManagedReference
items:
- uid: System.Xml.Schema.XmlSchemaValidator
  id: XmlSchemaValidator
  children:
  - System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)
  - System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)
  - System.Xml.Schema.XmlSchemaValidator.EndValidation
  - System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes
  - System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles
  - System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)
  - System.Xml.Schema.XmlSchemaValidator.Initialize
  - System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)
  - System.Xml.Schema.XmlSchemaValidator.LineInfoProvider
  - System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)
  - System.Xml.Schema.XmlSchemaValidator.SourceUri
  - System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)
  - System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)
  - System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)
  - System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)
  - System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)
  - System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)
  - System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)
  - System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)
  - System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)
  - System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)
  - System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)
  - System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler
  - System.Xml.Schema.XmlSchemaValidator.ValidationEventSender
  - System.Xml.Schema.XmlSchemaValidator.XmlResolver
  langs:
  - csharp
  name: XmlSchemaValidator
  nameWithType: XmlSchemaValidator
  fullName: System.Xml.Schema.XmlSchemaValidator
  type: Class
  summary: "Representa um motor de validação de esquema de linguagem de definição de esquema de XML (XSD). A classe de XmlSchemaValidator não pode ser herdada."
  remarks: "> [!IMPORTANT]>-Não utilize esquemas de origens de desconhecido ou não fidedignas ou localizações. Se o fizer, irá comprometer a segurança do seu código.   >-Esquemas XML (incluindo esquemas inline) são inerentemente vulneráveis a ataques denial of service; não os aceite em cenários não fidedignos.   >-Mensagens de erro de validação de esquema e exceções podem expor as informações confidenciais sobre os caminhos URI para o ficheiro de esquema ou modelo de conteúdo. Seja cuidadoso não para expor estas informações para os chamadores não fidedignos.       A classe de XmlSchemaValidator fornece um mecanismo eficiente e de elevado desempenho para validar dados XML em relação a esquemas XML de forma baseado em push. Por exemplo, a classe de XmlSchemaValidator permite-lhe validar um XML conjunto de informações no local, sem ter de serializá-lo como um documento XML e, em seguida, o documento com um leitor XML validação de reanálise. A classe de XmlSchemaValidator também pode ser utilizada para criar os motores de validação ao longo de origens de dados XML personalizadas ou como uma forma para criar um escritor XML a validar.       Para obter mais informações sobre a classe de XmlSchemaValidator, consulte o [XmlSchemaValidator baseado em Push validação](~/add/includes/ajax-current-ext-md.md) tópico.      > [!IMPORTANT] > O <xref:System.Xml.Schema.XmlSchemaValidationFlags>e <xref:System.Xml.Schema.XmlSchemaValidationFlags>validação não estão definidos sinalizadores de um objeto de XmlSchemaValidator ser predefinido.</xref:System.Xml.Schema.XmlSchemaValidationFlags> </xref:System.Xml.Schema.XmlSchemaValidationFlags> Além disso, o <xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A>é propriedade de um objeto de XmlSchemaValidator `null` por predefinição.</xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A> Como resultado, esquemas externas referenciadas no incluem, importa ou redefine elementos não estão resolvidos por predefinição."
  example:
  - "The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema. The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the XmlSchemaValidator class.  \n  \n [!code-cs[XmlSchemaValidatorExamples#1](~/add/codesnippet/csharp/t-system.xml.schema.xmls_19_1.cs)]\n [!code-vb[XmlSchemaValidatorExamples#1](~/add/codesnippet/visualbasic/t-system.xml.schema.xmls_19_1.vb)]  \n  \n The example takes the `contosoBooks.xml` file as input.  \n  \n [!code-xml[XPathXMLExamples#2](~/add/codesnippet/xml/t-system.xml.schema.xmls_19_2.xml)]  \n  \n The example also takes the `contosoBooks.xsd` as an input.  \n  \n [!code-xml[XPathXMLExamples#3](~/add/codesnippet/xml/t-system.xml.schema.xmls_19_3.xsd)]"
  syntax:
    content: public sealed class XmlSchemaValidator
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)
  id: '#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)'
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: XmlSchemaValidator(XmlNameTable,XmlSchemaSet,IXmlNamespaceResolver,XmlSchemaValidationFlags)
  nameWithType: XmlSchemaValidator.XmlSchemaValidator(XmlNameTable,XmlSchemaSet,IXmlNamespaceResolver,XmlSchemaValidationFlags)
  fullName: System.Xml.Schema.XmlSchemaValidator.XmlSchemaValidator(XmlNameTable,XmlSchemaSet,IXmlNamespaceResolver,XmlSchemaValidationFlags)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;> </xref> classe."
  remarks: "Seguem-se notas importantes a ter em consideração ao utilizar o construtor de XmlSchemaValidator.      -O conteúdo do <xref:System.Xml.Schema.XmlSchemaSet>parâmetro são copiados para uma interno <xref:System.Xml.Schema.XmlSchemaSet>objeto quando o <xref:System.Xml.Schema.XmlSchemaValidationFlags>ou <xref:System.Xml.Schema.XmlSchemaValidationFlags>Opções de validação estão definidas.</xref:System.Xml.Schema.XmlSchemaValidationFlags> </xref:System.Xml.Schema.XmlSchemaValidationFlags> </xref:System.Xml.Schema.XmlSchemaSet> </xref:System.Xml.Schema.XmlSchemaSet> Como resultado, as alterações para a entrada <xref:System.Xml.Schema.XmlSchemaSet>objeto durante a validação não afetam o resultado da validação.</xref:System.Xml.Schema.XmlSchemaSet>      -Se a <xref:System.Xml.Schema.XmlSchemaSet>parâmetro especificado não é compilado, o <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A>método é chamado.</xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> </xref:System.Xml.Schema.XmlSchemaSet>      -O <xref:System.Xml.IXmlNamespaceResolver>é especialmente importante para validar o parâmetro `xs:QName` tipos.</xref:System.Xml.IXmlNamespaceResolver> A <xref:System.Xml.Schema.XmlSchemaValidator>classe não copia os espaços de nomes no âmbito do <xref:System.Xml.IXmlNamespaceResolver>objeto, mas em vez disso, contém uma referência ao mesmo.</xref:System.Xml.IXmlNamespaceResolver> </xref:System.Xml.Schema.XmlSchemaValidator> Isto permite que novos espaços de nomes a ser adicionado à <xref:System.Xml.IXmlNamespaceResolver>objeto durante o processo de validação.</xref:System.Xml.IXmlNamespaceResolver>      > [!IMPORTANT] > O <xref:System.Xml.Schema.XmlSchemaValidationFlags>e <xref:System.Xml.Schema.XmlSchemaValidationFlags>sinalizadores de validação de um <xref:System.Xml.Schema.XmlSchemaValidator>objeto não são conjunto predefinido de ser.</xref:System.Xml.Schema.XmlSchemaValidator> </xref:System.Xml.Schema.XmlSchemaValidationFlags> </xref:System.Xml.Schema.XmlSchemaValidationFlags> Além disso, o <xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A>propriedade de um <xref:System.Xml.Schema.XmlSchemaValidator>objeto é `null` por predefinição.</xref:System.Xml.Schema.XmlSchemaValidator> </xref:System.Xml.Schema.XmlSchemaValidator.XmlResolver%2A> Como resultado, esquemas externas referenciadas no incluem, importa ou redefine elementos não estão resolvidos por predefinição."
  example:
  - For an example of the XmlSchemaValidator constructor, see the <xref:System.Xml.Schema.XmlSchemaValidator> class reference topic.
  syntax:
    content: public XmlSchemaValidator (System.Xml.XmlNameTable nameTable, System.Xml.Schema.XmlSchemaSet schemas, System.Xml.IXmlNamespaceResolver namespaceResolver, System.Xml.Schema.XmlSchemaValidationFlags validationFlags);
    parameters:
    - id: nameTable
      type: System.Xml.XmlNameTable
      description: "Um <xref:System.Xml.XmlNameTable>objeto que contém nomes de elemento e atributo como cadeias atomizados.</xref:System.Xml.XmlNameTable>"
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "Um <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> objeto que contém os esquemas de linguagem de definição de esquema de XML (XSD) utilizados para a validação."
    - id: namespaceResolver
      type: System.Xml.IXmlNamespaceResolver
      description: "Um <xref:System.Xml.IXmlNamespaceResolver>objecto utilizado para resolver os espaços de nomes encontrados durante a validação.</xref:System.Xml.IXmlNamespaceResolver>"
    - id: validationFlags
      type: System.Xml.Schema.XmlSchemaValidationFlags
      description: "Um <xref href=&quot;System.Xml.Schema.XmlSchemaValidationFlags&quot;> </xref> valor especificar opções de validação de esquema."
  overload: System.Xml.Schema.XmlSchemaValidator.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Um ou mais dos parâmetros especificados são <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.Xml.Schema.XmlSchemaException
    commentId: T:System.Xml.Schema.XmlSchemaException
    description: "Ocorreu um erro ao compilar os esquemas no <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref> parâmetro."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)
  id: AddSchema(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: AddSchema(XmlSchema)
  nameWithType: XmlSchemaValidator.AddSchema(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaValidator.AddSchema(XmlSchema)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Adiciona um esquema de linguagem de definição de esquema de XML (XSD) para o conjunto de esquemas utilizado para a validação."
  remarks: "Seguem-se notas importantes a considerar ao utilizar o método AddSchema.      -O método de AddSchema pode ser utilizado para simular o efeito de encontrar um esquema XML inline no documento XML a ser validado.      -O espaço de nomes de destino do <xref:System.Xml.Schema.XmlSchema>parâmetro não pode corresponder ao de qualquer elemento ou atributo já encontrados pelo <xref:System.Xml.Schema.XmlSchemaValidator>objeto.</xref:System.Xml.Schema.XmlSchemaValidator> </xref:System.Xml.Schema.XmlSchema>      -Se a <xref:System.Xml.Schema.XmlSchemaValidationFlags>opção de validação não está definida, o método AddSchema não produz qualquer efeito.</xref:System.Xml.Schema.XmlSchemaValidationFlags>"
  syntax:
    content: public void AddSchema (System.Xml.Schema.XmlSchema schema);
    parameters:
    - id: schema
      type: System.Xml.Schema.XmlSchema
      description: "Um <xref:System.Xml.Schema.XmlSchema>o objeto a adicionar ao conjunto de esquemas utilizado para a validação.</xref:System.Xml.Schema.XmlSchema>"
  overload: System.Xml.Schema.XmlSchemaValidator.AddSchema*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O <xref:System.Xml.Schema.XmlSchema>é especificado um parâmetro <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.Schema.XmlSchema>"
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "O espaço de nomes de destino do <xref:System.Xml.Schema.XmlSchema>parâmetro corresponde ao de qualquer elemento ou atributo já encontrados pelo <xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;> </xref> objeto.</xref:System.Xml.Schema.XmlSchema>"
  - type: System.Xml.Schema.XmlSchemaException
    commentId: T:System.Xml.Schema.XmlSchemaException
    description: "O <xref:System.Xml.Schema.XmlSchema>parâmetro é inválido.</xref:System.Xml.Schema.XmlSchema>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.EndValidation
  id: EndValidation
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: EndValidation()
  nameWithType: XmlSchemaValidator.EndValidation()
  fullName: System.Xml.Schema.XmlSchemaValidator.EndValidation()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Termina a validação e verifica as restrições de identidade para todo o documento XML."
  remarks: "O método &quot; EndValidation termina de validação e verifica se a restrições de identidade para todo o documento XML a <xref:System.Xml.Schema.XmlSchemaValidationFlags>opção de validação está definida.</xref:System.Xml.Schema.XmlSchemaValidationFlags>"
  syntax:
    content: public void EndValidation ();
    parameters: []
  overload: System.Xml.Schema.XmlSchemaValidator.EndValidation*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "Foi encontrado um erro de restrição de identidade no documento XML."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes
  id: GetExpectedAttributes
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: GetExpectedAttributes()
  nameWithType: XmlSchemaValidator.GetExpectedAttributes()
  fullName: System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Devolve os atributos esperados para o contexto do elemento actual."
  remarks: "Seguem-se notas importantes a considerar ao utilizar o método GetExpectedAttributes.      -Se o método de GetExpectedAttributes é chamado imediatamente após o <xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A>todos os atributos que foi apresentado no documento XML do método, são devolvidos.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateElement%2A>      -Se o método de GetExpectedAttributes é chamado depois de um ou mais chamadas para o <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A>método, os atributos que ainda não foi validados para o elemento atual são devolvidos.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A>"
  syntax:
    content: public System.Xml.Schema.XmlSchemaAttribute[] GetExpectedAttributes ();
    parameters: []
    return:
      type: System.Xml.Schema.XmlSchemaAttribute[]
      description: "Uma matriz de <xref href=&quot;System.Xml.Schema.XmlSchemaAttribute&quot;> </xref> objetos ou uma matriz vazia se não houver nenhuma atributos esperados."
  overload: System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles
  id: GetExpectedParticles
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: GetExpectedParticles()
  nameWithType: XmlSchemaValidator.GetExpectedParticles()
  fullName: System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Devolve as partículas esperadas no contexto atual do elemento."
  remarks: "Partículas válidas que podem ser devolvidas pelo método GetExpectedParticles são instâncias do <xref:System.Xml.Schema.XmlSchemaElement>e <xref:System.Xml.Schema.XmlSchemaAny>classes.</xref:System.Xml.Schema.XmlSchemaAny> </xref:System.Xml.Schema.XmlSchemaElement>       Quando o compositor para o modelo de conteúdo for uma `xs:sequence`, é devolvida apenas a partícula seguinte na sequência. Se o compositor para o modelo de conteúdo é um `xs:all` ou um `xs:choice`, em seguida, são devolvidas todas as partículas válidas que podem seguir no contexto atual do elemento.       Por exemplo, no idioma de definição de esquema de XML (XSD) esquema e XML de documentos que se seguem, depois de confirmar a `book` elemento, o `book` elemento é o contexto do elemento actual. O método GetExpectedParticles devolve uma matriz que contém um único <xref:System.Xml.Schema.XmlSchemaElement>objeto que representa o `title` elemento.</xref:System.Xml.Schema.XmlSchemaElement> Quando o contexto de validação é o `title` elemento, o método de GetExpectedParticles devolve uma matriz vazia. Se o método GetExpectedParticles denomina-se após o `title` elemento foi validado, mas antes o `description` elemento foi validado, devolve uma matriz que contém um único <xref:System.Xml.Schema.XmlSchemaElement>objeto que representa o `description` elemento.</xref:System.Xml.Schema.XmlSchemaElement> Se o método GetExpectedParticles denomina-se após o `description` elemento foi validado, em seguida, devolve uma matriz que contém um único <xref:System.Xml.Schema.XmlSchemaAny>objeto que representa o caráter universal.</xref:System.Xml.Schema.XmlSchemaAny>      ```vb#   Dim reader As XmlReader =  XmlReader.Create(&quot;input.xml&quot;)       Dim schemaSet As XmlSchemaSet =  New XmlSchemaSet()    schemaSet.Add(Nothing, &quot;schema.xsd&quot;)   Dim manager As XmlNamespaceManager =  New XmlNamespaceManager(reader.NameTable)       Dim validator As XmlSchemaValidator =  New XmlSchemaValidator(reader.NameTable,schemaSet,manager,XmlSchemaValidationFlags.None)   validator.Initialize()      validator.ValidateElement(&quot;book&quot;, &quot;&quot;, Nothing)   validator.GetUnspecifiedDefaultAttributes(New ArrayList())   validator.ValidateEndOfAttributes(Nothing)   For Each element As XmlSchemaElement In validator.GetExpectedParticles()       Console.WriteLine(element.Name)   Next      validator.ValidateElement(&quot;title&quot;, &quot;&quot;, Nothing)   validator.GetUnspecifiedDefaultAttributes(New ArrayList())   validator.ValidateEndOfAttributes(Nothing)   For Each element As XmlSchemaElement In validator.GetExpectedParticles()       Console.WriteLine(element.Name)   Next   validator.ValidateEndElement(Nothing)      For Each element As XmlSchemaElement In validator.GetExpectedParticles()       Console.WriteLine(element.Name)   Next      validator.ValidateElement(&quot;description&quot;, &quot;&quot;, Nothing)   validator.GetUnspecifiedDefaultAttributes(New ArrayList())   validator.ValidateEndOfAttributes(Nothing)   validator.ValidateEndElement(Nothing)      For Each particle As XmlSchemaParticle In validator.GetExpectedParticles()       Console.WriteLine(particle.GetType())   Next      validator.ValidateElement(&quot;namespace&quot;, &quot;&quot;, Nothing)   validator.GetUnspecifiedDefaultAttributes(New ArrayList())   validator.ValidateEndOfAttributes(Nothing)   validator.ValidateEndElement(Nothing)      validator.ValidateEndElement(Nothing)   ```      ```c#   XmlReader reader = XmlReader.Create(&quot;input.xml&quot;);      XmlSchemaSet schemaSet = new XmlSchemaSet();   schemaSet.Add(null, &quot;schema.xsd&quot;);   XmlNamespaceManager manager = new XmlNamespaceManager(reader.NameTable);      XmlSchemaValidator validator = new XmlSchemaValidator(reader.NameTable, schemaSet, manager, XmlSchemaValidationFlags.None);   validator.Initialize();      validator.ValidateElement(&quot;book&quot;, &quot;&quot;, null);      validator.GetUnspecifiedDefaultAttributes(new ArrayList());   validator.ValidateEndOfAttributes(null);   foreach (XmlSchemaElement element in validator.GetExpectedParticles())   {       Console.WriteLine(element.Name);   }      validator.ValidateElement(&quot;title&quot;, &quot;&quot;, null);   validator.GetUnspecifiedDefaultAttributes(new ArrayList());   validator.ValidateEndOfAttributes(null);   foreach (XmlSchemaElement element in validator.GetExpectedParticles())   {       Console.WriteLine(element.Name);   }   validator.ValidateEndElement(null);      foreach (XmlSchemaElement element in validator.GetExpectedParticles())   {       Console.WriteLine(element.Name);   }      validator.ValidateElement(&quot;description&quot;, &quot;&quot;, null);   validator.GetUnspecifiedDefaultAttributes(new ArrayList());   validator.ValidateEndOfAttributes(null);   validator.ValidateEndElement(null);      foreach (XmlSchemaParticle particle in validator.GetExpectedParticles())   {       Console.WriteLine(particle.GetType());   }      validator.ValidateElement(&quot;namespace&quot;, &quot;&quot;, null);   validator.GetUnspecifiedDefaultAttributes(new ArrayList());   validator.ValidateEndOfAttributes(null);   validator.ValidateEndElement(null);      validator.ValidateEndElement(null);   ```O exemplo aceita o XML seguinte como entrada.       `<xs:schema xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;>`       `<xs:element name=&quot;book&quot;>`       `<xs:complexType>`       `<xs:sequence>`       `<xs:element name=&quot;title&quot; type=&quot;xs:string&quot; />`       `<xs:element name=&quot;description&quot; type=&quot;xs:string&quot; />`       `<xs:any processContents =&quot;lax&quot;/>`       `</xs:sequence>`       `</xs:complexType>`       `</xs:element>`       `</xs:schema>`O exemplo assume o esquema XSD seguinte como entrada.       `<book>`       `<title>My Book</title>`       `<description>My Book&quot;s Description</description>`       `<namespace>System.Xml.Schema</namespace>`       `</book>`"
  syntax:
    content: public System.Xml.Schema.XmlSchemaParticle[] GetExpectedParticles ();
    parameters: []
    return:
      type: System.Xml.Schema.XmlSchemaParticle[]
      description: "Uma matriz de <xref href=&quot;System.Xml.Schema.XmlSchemaParticle&quot;> </xref> objetos ou uma matriz vazia se não houver nenhuma partículas esperadas."
  overload: System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)
  id: GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: GetUnspecifiedDefaultAttributes(ArrayList)
  nameWithType: XmlSchemaValidator.GetUnspecifiedDefaultAttributes(ArrayList)
  fullName: System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(ArrayList)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Valida as restrições de identidade nos atributos de predefinido e preenche o <xref href=&quot;System.Collections.ArrayList&quot;> </xref> especificado com <xref href=&quot;System.Xml.Schema.XmlSchemaAttribute&quot;> </xref> objetos para atributos com valores predefinidos que não tiverem sido anteriormente validados com o <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>método no contexto de elemento.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>"
  remarks: "O método GetUnspecifiedDefaultAttributes tem de ser chamado depois de confirmar a todos os atributos para o elemento atual com o <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A>método.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> O método de GetUnspecifiedDefaultAttributes deve ser utilizado para determinar quais atributos predefinidos são inseridos no documento XML a ser validado."
  syntax:
    content: public void GetUnspecifiedDefaultAttributes (System.Collections.ArrayList defaultAttributes);
    parameters:
    - id: defaultAttributes
      type: System.Collections.ArrayList
      description: "Um <xref href=&quot;System.Collections.ArrayList&quot;> </xref> para preencher com <xref href=&quot;System.Xml.Schema.XmlSchemaAttribute&quot;> </xref> objetos para atributos ainda não foi encontrados durante a validação no contexto de elemento."
  overload: System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.Initialize
  id: Initialize
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: Initialize()
  nameWithType: XmlSchemaValidator.Initialize()
  fullName: System.Xml.Schema.XmlSchemaValidator.Initialize()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Inicializa o estado do <xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;> </xref> objeto."
  remarks: "O método de inicialização só é válido se chamado imediatamente após a construção de uma <xref:System.Xml.Schema.XmlSchemaValidator>objeto ou após uma chamada para <xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A>.</xref:System.Xml.Schema.XmlSchemaValidator.EndValidation%2A> </xref:System.Xml.Schema.XmlSchemaValidator>"
  example:
  - "The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema. The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.  \n  \n [!code-cs[XmlSchemaValidatorExamples#1](~/add/codesnippet/csharp/m-system.xml.schema.xmls_4_1.cs)]\n [!code-vb[XmlSchemaValidatorExamples#1](~/add/codesnippet/visualbasic/m-system.xml.schema.xmls_4_1.vb)]  \n  \n The example takes the `contosoBooks.xml` file as input.  \n  \n [!code-xml[XPathXMLExamples#2](~/add/codesnippet/xml/m-system.xml.schema.xmls_4_2.xml)]  \n  \n The example also takes the `contosoBooks.xsd` as an input.  \n  \n [!code-xml[XPathXMLExamples#3](~/add/codesnippet/xml/m-system.xml.schema.xmls_4_3.xsd)]"
  syntax:
    content: public void Initialize ();
    parameters: []
  overload: System.Xml.Schema.XmlSchemaValidator.Initialize*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Chamar o <> </> *> método é válido imediatamente após a construção de uma <xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;> </xref> objeto ou após uma chamada para <> </> *> apenas."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)
  id: Initialize(System.Xml.Schema.XmlSchemaObject)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: Initialize(XmlSchemaObject)
  nameWithType: XmlSchemaValidator.Initialize(XmlSchemaObject)
  fullName: System.Xml.Schema.XmlSchemaValidator.Initialize(XmlSchemaObject)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Inicializa o estado do <xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;> </xref> objeto utilizando o <xref href=&quot;System.Xml.Schema.XmlSchemaObject&quot;> </xref> especificado para a validação parcial."
  remarks: "O método de inicialização que assume um <xref:System.Xml.Schema.XmlSchemaObject>como um parâmetro inicializa um <xref:System.Xml.Schema.XmlSchemaValidator>objeto para o estado inicial de validação parcial.</xref:System.Xml.Schema.XmlSchemaValidator> </xref:System.Xml.Schema.XmlSchemaObject>"
  example:
  - "In the following example, an <xref:System.Xml.Schema.XmlSchemaObject> is initialized for partial validation using the Initialize method. The `orderNumber` schema element is passed by selecting the schema element by <xref:System.Xml.XmlQualifiedName> in the <xref:System.Xml.Schema.XmlSchemaObjectTable> collection returned by the <xref:System.Xml.Schema.XmlSchemaSet.GlobalElements%2A> property of the <xref:System.Xml.Schema.XmlSchemaSet> object. The <xref:System.Xml.Schema.XmlSchemaValidator> object then validates this specific element.  \n  \n```vb#  \nDim schemaSet As XmlSchemaSet = New XmlSchemaSet()  \nschemaSet.Add(Nothing, \"schema.xsd\")  \nschemaSet.Compile()  \nDim nameTable As NameTable = New NameTable()  \nDim manager As XmlNamespaceManager = New XmlNamespaceManager(nameTable)  \n  \nDim validator As XmlSchemaValidator = New XmlSchemaValidator(nameTable, schemaSet, manager, XmlSchemaValidationFlags.None)  \nvalidator.Initialize(schemaSet.GlobalElements.Item(New XmlQualifiedName(\"orderNumber\")))  \n  \nvalidator.ValidateElement(\"orderNumber\", \"\", Nothing)  \nvalidator.GetUnspecifiedDefaultAttributes(New ArrayList())  \nvalidator.ValidateEndOfAttributes(Nothing)  \nvalidator.ValidateText(\"123\")  \nvalidator.ValidateEndElement(Nothing)  \n```  \n  \n```c#  \nXmlSchemaSet schemaSet = new XmlSchemaSet();  \nschemaSet.Add(null, \"schema.xsd\");  \nschemaSet.Compile();  \nNameTable nameTable = new NameTable();  \nXmlNamespaceManager manager = new XmlNamespaceManager(nameTable);  \n  \nXmlSchemaValidator validator = new XmlSchemaValidator(nameTable, schemaSet, manager, XmlSchemaValidationFlags.None);  \nvalidator.Initialize(schemaSet.GlobalElements[new XmlQualifiedName(\"orderNumber\")]);  \n  \nvalidator.ValidateElement(\"orderNumber\", \"\", null);  \nvalidator.GetUnspecifiedDefaultAttributes(new ArrayList());  \nvalidator.ValidateEndOfAttributes(null);  \nvalidator.ValidateText(\"123\");  \nvalidator.ValidateEndElement(null);  \n```  \n  \n The example takes the following XML schema as input.  \n  \n `<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\">`  \n  \n `<xs:element name=\"orderNumber\" type=\"xs:int\" />`  \n  \n `</xs:schema>`"
  syntax:
    content: public void Initialize (System.Xml.Schema.XmlSchemaObject partialValidationType);
    parameters:
    - id: partialValidationType
      type: System.Xml.Schema.XmlSchemaObject
      description: "Um <xref href=&quot;System.Xml.Schema.XmlSchemaElement&quot;> </xref>, <xref href=&quot;System.Xml.Schema.XmlSchemaAttribute&quot;> </xref>, ou <xref href=&quot;System.Xml.Schema.XmlSchemaType&quot;> </xref> objeto utilizado para inicializar o contexto de validação do <xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;> </xref> objeto de validação parcial."
  overload: System.Xml.Schema.XmlSchemaValidator.Initialize*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Chamar o <> </> *> método é válido imediatamente após a construção de uma <xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;> </xref> objeto ou após uma chamada para <> </> *> apenas."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref href=&quot;System.Xml.Schema.XmlSchemaObject&quot;></xref> parameter is not an <xref href=&quot;System.Xml.Schema.XmlSchemaElement&quot;></xref>, <xref href=&quot;System.Xml.Schema.XmlSchemaAttribute&quot;></xref>, or <xref href=&quot;System.Xml.Schema.XmlSchemaType&quot;></xref> object."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O <xref href=&quot;System.Xml.Schema.XmlSchemaObject&quot;> </xref> parâmetro não pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.LineInfoProvider
  id: LineInfoProvider
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: LineInfoProvider
  nameWithType: XmlSchemaValidator.LineInfoProvider
  fullName: System.Xml.Schema.XmlSchemaValidator.LineInfoProvider
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Obtém ou define as informações de número de linha para o nó XML a ser validado."
  remarks: "-   Informações de linha são comunicadas por qualquer <xref:System.Xml.Schema.XmlSchemaValidationException>iniciada durante o processo de validação.</xref:System.Xml.Schema.XmlSchemaValidationException>      -Predefinição <xref:System.Xml.IXmlLineInfo>objecto devolvido por LineInfoProvider propriedade devolve 0 para o <xref:System.Xml.IXmlLineInfo.LineNumber%2A>e <xref:System.Xml.IXmlLineInfo.LinePosition%2A>Propriedades.</xref:System.Xml.IXmlLineInfo.LinePosition%2A> </xref:System.Xml.IXmlLineInfo.LineNumber%2A> </xref:System.Xml.IXmlLineInfo>"
  syntax:
    content: public System.Xml.IXmlLineInfo LineInfoProvider { get; set; }
    return:
      type: System.Xml.IXmlLineInfo
      description: "Um <xref:System.Xml.IXmlLineInfo>objeto.</xref:System.Xml.IXmlLineInfo>"
  overload: System.Xml.Schema.XmlSchemaValidator.LineInfoProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)
  id: SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: SkipToEndElement(XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.SkipToEndElement(XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(XmlSchemaInfo)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Ignora a validação do conteúdo de elemento atual e prepara a <xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;> </xref> objeto a validar conteúdo no contexto do elemento principal."
  remarks: "Seguem-se notas importantes a considerar ao utilizar o método SkipToEndElement.      -O método de SkipToEndElement ignora a validação do conteúdo de elemento atual e prepara a <xref:System.Xml.Schema.XmlSchemaValidator>objeto a validar conteúdo no contexto do elemento principal; é equivalente a ignorar a validação para todos os elementos subordinados do elemento atual e, em seguida, ao chamar o <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A>método.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> </xref:System.Xml.Schema.XmlSchemaValidator>      -Se o conteúdo do elemento actual é ignorado com êxito, o <xref:System.Xml.Schema.XmlSchemaInfo>objeto do (se especificada) <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>propriedade está definida como <xref:System.Xml.Schema.XmlSchemaValidity>.</xref:System.Xml.Schema.XmlSchemaValidity> </xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> </xref:System.Xml.Schema.XmlSchemaInfo>      > [!NOTE] > São reportados erros de validação do conteúdo ignorado."
  syntax:
    content: public void SkipToEndElement (System.Xml.Schema.XmlSchemaInfo schemaInfo);
    parameters:
    - id: schemaInfo
      type: System.Xml.Schema.XmlSchemaInfo
      description: "Um <xref href=&quot;System.Xml.Schema.XmlSchemaInfo&quot;> </xref> objeto cujas propriedades estão definidas se o conteúdo do elemento actual é ignorado com êxito. Este parâmetro pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O método de SkipToEndElement não foi chamado na sequência correta. Por exemplo, ao chamar SkipToEndElement depois de chamar SkipToEndElement."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.SourceUri
  id: SourceUri
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: SourceUri
  nameWithType: XmlSchemaValidator.SourceUri
  fullName: System.Xml.Schema.XmlSchemaValidator.SourceUri
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Obtém ou define a origem de URI para o nó XML a ser validado."
  remarks: "-   A origem de URI é comunicado por qualquer <xref:System.Xml.Schema.XmlSchemaValidationException>iniciada durante o processo de validação.</xref:System.Xml.Schema.XmlSchemaValidationException>      -Se a propriedade SourceUri não estiver definida, o nome de ficheiro para o documento XML é <xref:System.String.Empty>em mensagens de erro de validação.</xref:System.String.Empty>"
  syntax:
    content: public Uri SourceUri { get; set; }
    return:
      type: System.Uri
      description: "A <xref:System.Uri>objeto que representa a origem de URI para o nó XML a ser validado; a predefinição é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Uri>"
  overload: System.Xml.Schema.XmlSchemaValidator.SourceUri*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)
  id: ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateAttribute(String,String,String,XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.ValidateAttribute(String,String,String,XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(String,String,String,XmlSchemaInfo)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Valida o nome de atributo, o espaço de nomes URI e o valor no contexto atual do elemento."
  remarks: "Seguem-se notas importantes a considerar ao utilizar o método &quot; ValidateAttribute.      -O <xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A>método tem de ser chamado depois de confirmar a todos os atributos para o elemento atual com o <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A>método.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> </xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A>      -Se um <xref:System.Xml.Schema.XmlSchemaAttribute>foi transmitido um objeto para o <xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A>método, o método &quot; ValidateAttribute valida o atributo contra o <xref:System.Xml.Schema.XmlSchemaAttribute>objeto.</xref:System.Xml.Schema.XmlSchemaAttribute> </xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A> </xref:System.Xml.Schema.XmlSchemaAttribute>      -Se o atributo é validado com êxito no contexto atual do elemento, o <xref:System.Xml.Schema.XmlSchemaInfo>objeto do (se especificada) <xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>, e <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>propriedades forem definidas com os resultados da validação de.</xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> </xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A> </xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A> </xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A> </xref:System.Xml.Schema.XmlSchemaInfo>"
  example:
  - "The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema. The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.  \n  \n [!code-cs[XmlSchemaValidatorExamples#1](~/add/codesnippet/csharp/a1f6d4e1-a580-41fa-b406-_1.cs)]\n [!code-vb[XmlSchemaValidatorExamples#1](~/add/codesnippet/visualbasic/a1f6d4e1-a580-41fa-b406-_1.vb)]  \n  \n The example takes the `contosoBooks.xml` file as input.  \n  \n [!code-xml[XPathXMLExamples#2](~/add/codesnippet/xml/a1f6d4e1-a580-41fa-b406-_2.xml)]  \n  \n The example also takes the `contosoBooks.xsd` as an input.  \n  \n [!code-xml[XPathXMLExamples#3](~/add/codesnippet/xml/a1f6d4e1-a580-41fa-b406-_3.xsd)]"
  syntax:
    content: public object ValidateAttribute (string localName, string namespaceUri, string attributeValue, System.Xml.Schema.XmlSchemaInfo schemaInfo);
    parameters:
    - id: localName
      type: System.String
      description: "O nome local de atributo para validar."
    - id: namespaceUri
      type: System.String
      description: "O espaço de nomes URI do atributo a validar."
    - id: attributeValue
      type: System.String
      description: "O valor do atributo para validar."
    - id: schemaInfo
      type: System.Xml.Schema.XmlSchemaInfo
      description: "Um <xref href=&quot;System.Xml.Schema.XmlSchemaInfo&quot;> </xref> objeto cujas propriedades estão definidas no validação com êxito do atributo. Este parâmetro pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object
      description: "Valor do atributo validado."
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "O atributo não é válido no contexto atual do elemento."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <> </> *> método não foi chamado na sequência correta. Por exemplo, ao chamar <> </> *> depois de chamar <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*>.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Um ou mais dos parâmetros especificados são <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)
  id: ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateAttribute(String,String,XmlValueGetter,XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.ValidateAttribute(String,String,XmlValueGetter,XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(String,String,XmlValueGetter,XmlSchemaInfo)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Valida o nome de atributo, o espaço de nomes URI e o valor no contexto atual do elemento."
  remarks: "Seguem-se notas importantes a considerar ao utilizar o método &quot; ValidateAttribute.      -O <xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A>método tem de ser chamado depois de confirmar a todos os atributos para o elemento atual com o <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A>método.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute%2A> </xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A>      -Se um <xref:System.Xml.Schema.XmlSchemaAttribute>foi transmitido um objeto para o <xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A>método, o método &quot; ValidateAttribute valida o atributo contra o <xref:System.Xml.Schema.XmlSchemaAttribute>objeto.</xref:System.Xml.Schema.XmlSchemaAttribute> </xref:System.Xml.Schema.XmlSchemaValidator.Initialize%2A> </xref:System.Xml.Schema.XmlSchemaAttribute>      -Se o atributo é validado com êxito no contexto atual do elemento, o <xref:System.Xml.Schema.XmlSchemaInfo>objeto do (se especificada) <xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>, e <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>propriedades forem definidas com os resultados da validação de.</xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> </xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A> </xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A> </xref:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute%2A> </xref:System.Xml.Schema.XmlSchemaInfo>"
  example:
  - "The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema. The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.  \n  \n [!code-cs[XmlSchemaValidatorExamples#1](~/add/codesnippet/csharp/bdf9cba1-e5e2-4a4d-8a5a-_1.cs)]\n [!code-vb[XmlSchemaValidatorExamples#1](~/add/codesnippet/visualbasic/bdf9cba1-e5e2-4a4d-8a5a-_1.vb)]  \n  \n The example takes the `contosoBooks.xml` file as input.  \n  \n [!code-xml[XPathXMLExamples#2](~/add/codesnippet/xml/bdf9cba1-e5e2-4a4d-8a5a-_2.xml)]  \n  \n The example also takes the `contosoBooks.xsd` as an input.  \n  \n [!code-xml[XPathXMLExamples#3](~/add/codesnippet/xml/bdf9cba1-e5e2-4a4d-8a5a-_3.xsd)]"
  syntax:
    content: public object ValidateAttribute (string localName, string namespaceUri, System.Xml.Schema.XmlValueGetter attributeValue, System.Xml.Schema.XmlSchemaInfo schemaInfo);
    parameters:
    - id: localName
      type: System.String
      description: "O nome local de atributo para validar."
    - id: namespaceUri
      type: System.String
      description: "O espaço de nomes URI do atributo a validar."
    - id: attributeValue
      type: System.Xml.Schema.XmlValueGetter
      description: "Um <xref href=&quot;System.Xml.Schema.XmlValueGetter&quot;> </xref> <xref uid=&quot;langword_csharp_delegate&quot; name=&quot;delegate&quot; href=&quot;&quot;> </xref> utilizado para transmitir o valor do atributo como um tipo de Common Language Runtime (CLR) compatível com o tipo de linguagem de definição de esquema de XML (XSD) do atributo."
    - id: schemaInfo
      type: System.Xml.Schema.XmlSchemaInfo
      description: "Um <xref href=&quot;System.Xml.Schema.XmlSchemaInfo&quot;> </xref> objeto cujas propriedades estão definidas no validação com êxito do atributo. Este parâmetro pode ficar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object
      description: "Valor do atributo validado."
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "O atributo não é válido no contexto atual do elemento."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <> </> *> método não foi chamado na sequência correta. Por exemplo, ao chamar <> </> *> depois de chamar <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*>.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Um ou mais dos parâmetros especificados são <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)
  id: ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateElement(String,String,XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.ValidateElement(String,String,XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateElement(String,String,XmlSchemaInfo)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Valida o elemento no contexto atual."
  remarks: "Seguem-se notas importantes a considerar ao utilizar o método &quot; ValidateElement.      -Se o nome do elemento é validado com êxito no contexto atual, o <xref:System.Xml.Schema.XmlSchemaInfo>objeto do (se especificada) <xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A>, e <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>propriedades forem definidas com os resultados da validação de.</xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> </xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A> </xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A> </xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A> </xref:System.Xml.Schema.XmlSchemaInfo>      -Se o nome do elemento ou qualquer um dos respetivos atributos são inválidas contexto atual, o <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>propriedade está definida como <xref:System.Xml.Schema.XmlSchemaValidity>; caso contrário, a <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>propriedade está definida como <xref:System.Xml.Schema.XmlSchemaValidity>.</xref:System.Xml.Schema.XmlSchemaValidity> </xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> </xref:System.Xml.Schema.XmlSchemaValidity> </xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>"
  example:
  - "The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema. The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.  \n  \n [!code-cs[XmlSchemaValidatorExamples#1](~/add/codesnippet/csharp/0c1583e7-54af-4d75-b62c-_1.cs)]\n [!code-vb[XmlSchemaValidatorExamples#1](~/add/codesnippet/visualbasic/0c1583e7-54af-4d75-b62c-_1.vb)]  \n  \n The example takes the `contosoBooks.xml` file as input.  \n  \n [!code-xml[XPathXMLExamples#2](~/add/codesnippet/xml/0c1583e7-54af-4d75-b62c-_2.xml)]  \n  \n The example also takes the `contosoBooks.xsd` as an input.  \n  \n [!code-xml[XPathXMLExamples#3](~/add/codesnippet/xml/0c1583e7-54af-4d75-b62c-_3.xsd)]"
  syntax:
    content: public void ValidateElement (string localName, string namespaceUri, System.Xml.Schema.XmlSchemaInfo schemaInfo);
    parameters:
    - id: localName
      type: System.String
      description: "O nome local do elemento para validar."
    - id: namespaceUri
      type: System.String
      description: "O espaço de nomes URI do elemento para validar."
    - id: schemaInfo
      type: System.Xml.Schema.XmlSchemaInfo
      description: "Um <xref href=&quot;System.Xml.Schema.XmlSchemaInfo&quot;> </xref> objeto cujas propriedades estão definidas no validação com êxito do nome do elemento. Este parâmetro pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateElement*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "O nome do elemento não é válido no contexto atual."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <> </> *> método não foi chamado na sequência correta. Por exemplo, o <> </> *> método for chamado depois de chamar <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)
  id: ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateElement(String,String,XmlSchemaInfo,String,String,String,String)
  nameWithType: XmlSchemaValidator.ValidateElement(String,String,XmlSchemaInfo,String,String,String,String)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateElement(String,String,XmlSchemaInfo,String,String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Valida o elemento no contexto atual com o `xsi:Type`, `xsi:Nil`, `xsi:SchemaLocation`, e `xsi:NoNamespaceSchemaLocation` atributo valores especificados."
  remarks: "Seguem-se notas importantes a considerar ao utilizar o método &quot; ValidateElement.      -Se o nome do elemento é validado com êxito no contexto atual, o <xref:System.Xml.Schema.XmlSchemaInfo>objeto do (se especificada) <xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A>, e <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>propriedades forem definidas com os resultados da validação de.</xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> </xref:System.Xml.Schema.XmlSchemaInfo.SchemaElement%2A> </xref:System.Xml.Schema.XmlSchemaInfo.SchemaType%2A> </xref:System.Xml.Schema.XmlSchemaInfo.IsNil%2A> </xref:System.Xml.Schema.XmlSchemaInfo>      -Se o nome do elemento ou qualquer um dos respetivos atributos são inválidas no contexto atual, o <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>propriedade está definida como <xref:System.Xml.Schema.XmlSchemaValidity>; caso contrário, a <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>propriedade está definida como <xref:System.Xml.Schema.XmlSchemaValidity>.</xref:System.Xml.Schema.XmlSchemaValidity> </xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> </xref:System.Xml.Schema.XmlSchemaValidity> </xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>      -Se a <xref:System.Xml.Schema.XmlSchemaValidationFlags>valor não foi transmitido como parâmetro para o <xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A>construtor, `xsi:SchemaLocation` e `xsi:NoNamespaceSchemaLocation` valores de atributo são ignorados.</xref:System.Xml.Schema.XmlSchemaValidator.%23ctor%2A> </xref:System.Xml.Schema.XmlSchemaValidationFlags>"
  syntax:
    content: public void ValidateElement (string localName, string namespaceUri, System.Xml.Schema.XmlSchemaInfo schemaInfo, string xsiType, string xsiNil, string xsiSchemaLocation, string xsiNoNamespaceSchemaLocation);
    parameters:
    - id: localName
      type: System.String
      description: "O nome local do elemento para validar."
    - id: namespaceUri
      type: System.String
      description: "O espaço de nomes URI do elemento para validar."
    - id: schemaInfo
      type: System.Xml.Schema.XmlSchemaInfo
      description: "Um <xref href=&quot;System.Xml.Schema.XmlSchemaInfo&quot;> </xref> objeto cujas propriedades estão definidas no validação com êxito do nome do elemento. Este parâmetro pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: xsiType
      type: System.String
      description: "O `xsi:Type` valor do elemento de atributo. Este parâmetro pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: xsiNil
      type: System.String
      description: "O `xsi:Nil` valor do elemento de atributo. Este parâmetro pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: xsiSchemaLocation
      type: System.String
      description: "O `xsi:SchemaLocation` valor do elemento de atributo. Este parâmetro pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: xsiNoNamespaceSchemaLocation
      type: System.String
      description: "O `xsi:NoNamespaceSchemaLocation` valor do elemento de atributo. Este parâmetro pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateElement*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "O nome do elemento não é válido no contexto atual."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <> </> *> método não foi chamado na sequência correta. Por exemplo, o <> </> *> método for chamado depois de chamar <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)
  id: ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateEndElement(XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Verifica se o conteúdo de texto do elemento é válido de acordo com o respetivo tipo de dados para os elementos com conteúdo simples e verifica se o conteúdo do elemento actual é concluído para elementos com conteúdo complexo."
  remarks: "Seguem-se notas importantes a considerar ao utilizar o método ValidateEndElement.      -Para os elementos com conteúdo simples, ValidateEndElement método verifica se o conteúdo de texto do elemento é válido de acordo com o respetivo tipo de dados e devolve o analisados valor de tipo. O conteúdo de texto do elemento é obtido a partir de resultados de chamadas anteriores para <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A>.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A>      -Para elementos com conteúdo complexo, o método ValidateEndElement verifica se o conteúdo do elemento actual foi concluído.      -Se o elemento tem um valor predefinido, o valor devolvido do método ValidateEndElement é o valor predefinido para o elemento.      -Se a <xref:System.Xml.Schema.XmlSchemaValidator>objeto foi construído com o <xref:System.Xml.Schema.XmlSchemaValidationFlags>valor como um parâmetro, as verificações de método ValidateEndElement a restrição de identidade regras (se aplicável) que se aplicam ao elemento.</xref:System.Xml.Schema.XmlSchemaValidationFlags> </xref:System.Xml.Schema.XmlSchemaValidator>      -Se o elemento é validado com êxito no contexto atual, o <xref:System.Xml.Schema.XmlSchemaInfo>objeto do (se especificada) <xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>, e <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>propriedades forem definidas com os resultados da validação de.</xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> </xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A> </xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A> </xref:System.Xml.Schema.XmlSchemaInfo>"
  syntax:
    content: public object ValidateEndElement (System.Xml.Schema.XmlSchemaInfo schemaInfo);
    parameters:
    - id: schemaInfo
      type: System.Xml.Schema.XmlSchemaInfo
      description: "Um <xref href=&quot;System.Xml.Schema.XmlSchemaInfo&quot;> </xref> objeto cujas propriedades estão definidas no validação com êxito do elemento. Este parâmetro pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object
      description: "Analisar, escritas valor de texto do elemento se o elemento tem conteúdo simples."
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "O conteúdo do elemento não é válido."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <> </> *> método não foi chamado na sequência correta. Por exemplo, se o <> </> *> método for chamado depois de chamar <xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*>.</xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)
  id: ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateEndElement(XmlSchemaInfo,Object)
  nameWithType: XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo,Object)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo,Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Verifica se o conteúdo de texto do elemento especificado é válido de acordo com o respetivo tipo de dados."
  remarks: "> [!IMPORTANT]> Se estão a validar contra o `xs:key`, `xs:keyref`, ou `xs:unique` as restrições de identidade, não utilize a sobrecarga de método ValidateEndElement. Em vez disso, chame o <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A>método e transmita-o valor do elemento.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A> Em seguida, chame o <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A>sobrecarga de método, demora <xref:System.Xml.Schema.XmlSchemaInfo>como um argumento, certifique-se de que o conteúdo de texto do elemento válido de acordo com o respetivo tipo de dados.</xref:System.Xml.Schema.XmlSchemaInfo> </xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A>       Seguem-se notas importantes a considerar ao utilizar o método ValidateEndElement.      -Para os elementos com conteúdo simples, ValidateEndElement método verifica se o conteúdo de texto do elemento é válido de acordo com o respetivo tipo de dados e devolve o analisados valor de tipo. O conteúdo de texto do elemento é obtido a partir do conteúdo escrito transmitido como um parâmetro.      -Se as chamadas para o <xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A>método ter sido feitas anteriormente, um <xref:System.InvalidOperationException>é emitida.</xref:System.InvalidOperationException> </xref:System.Xml.Schema.XmlSchemaValidator.ValidateText%2A>      -Se o elemento tem conteúdo complexo um <xref:System.InvalidOperationException>é emitida.</xref:System.InvalidOperationException>      -Se a <xref:System.Xml.Schema.XmlSchemaValidator>objeto foi construído com o <xref:System.Xml.Schema.XmlSchemaValidationFlags>valor como um parâmetro, as verificações de método ValidateEndElement a restrição de identidade regras (se aplicável) que se aplicam ao elemento.</xref:System.Xml.Schema.XmlSchemaValidationFlags> </xref:System.Xml.Schema.XmlSchemaValidator>      -Se o elemento é validado com êxito no contexto atual, o <xref:System.Xml.Schema.XmlSchemaInfo>objeto do (se especificada) <xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A>, <xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A>, e <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>propriedades forem definidas com os resultados da validação de.</xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> </xref:System.Xml.Schema.XmlSchemaInfo.MemberType%2A> </xref:System.Xml.Schema.XmlSchemaInfo.IsDefault%2A> </xref:System.Xml.Schema.XmlSchemaInfo>"
  example:
  - "The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema. The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.  \n  \n [!code-cs[XmlSchemaValidatorExamples#1](~/add/codesnippet/csharp/2cd331b9-caa2-4647-acb8-_1.cs)]\n [!code-vb[XmlSchemaValidatorExamples#1](~/add/codesnippet/visualbasic/2cd331b9-caa2-4647-acb8-_1.vb)]  \n  \n The example takes the `contosoBooks.xml` file as input.  \n  \n [!code-xml[XPathXMLExamples#2](~/add/codesnippet/xml/2cd331b9-caa2-4647-acb8-_2.xml)]  \n  \n The example also takes the `contosoBooks.xsd` as an input.  \n  \n [!code-xml[XPathXMLExamples#3](~/add/codesnippet/xml/2cd331b9-caa2-4647-acb8-_3.xsd)]"
  syntax:
    content: public object ValidateEndElement (System.Xml.Schema.XmlSchemaInfo schemaInfo, object typedValue);
    parameters:
    - id: schemaInfo
      type: System.Xml.Schema.XmlSchemaInfo
      description: "Um <xref href=&quot;System.Xml.Schema.XmlSchemaInfo&quot;> </xref> objeto cujas propriedades estão definidas no validação com êxito o conteúdo de texto do elemento. Este parâmetro pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: typedValue
      type: System.Object
      description: "O conteúdo de texto com tipo do elemento."
    return:
      type: System.Object
      description: "Analisar, escritas conteúdo simples do elemento."
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "O conteúdo de texto do elemento não é válido."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <> </> *> método não foi chamado na sequência correta (por exemplo, se o <> </> *> método for chamado após chamar <> </> *>), chama para o <> </> *> método foram feitas anteriormente ou o elemento tem conteúdo complexo."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O parâmetro de conteúdo de texto com tipo não pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)
  id: ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateEndOfAttributes(XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.ValidateEndOfAttributes(XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(XmlSchemaInfo)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Verifica se todos os atributos necessários no contexto de elemento estão presentes e prepara a <xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;> </xref> objeto para validar o conteúdo subordinado do elemento."
  remarks: "Seguem-se notas importantes a considerar ao utilizar o método ValidateEndOfAttributes.      -O <xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A>método sempre deve ser chamado antes de ValidateEndOfAttributes.</xref:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes%2A>      -O método ValidateEndOfAttributes tem de ser chamado antes de prosseguir com a validação de conteúdo de um elemento.      -Se todos os atributos necessários no contexto de elemento não estiverem presentes, o <xref:System.Xml.Schema.XmlSchemaInfo>objeto do (se especificada) <xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A>propriedade está definida como <xref:System.Xml.Schema.XmlSchemaValidity>.</xref:System.Xml.Schema.XmlSchemaValidity> </xref:System.Xml.Schema.XmlSchemaInfo.Validity%2A> </xref:System.Xml.Schema.XmlSchemaInfo>"
  example:
  - "The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema. The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.  \n  \n [!code-cs[XmlSchemaValidatorExamples#1](~/add/codesnippet/csharp/2739ac73-0581-4d83-ad9c-_1.cs)]\n [!code-vb[XmlSchemaValidatorExamples#1](~/add/codesnippet/visualbasic/2739ac73-0581-4d83-ad9c-_1.vb)]  \n  \n The example takes the `contosoBooks.xml` file as input.  \n  \n [!code-xml[XPathXMLExamples#2](~/add/codesnippet/xml/2739ac73-0581-4d83-ad9c-_2.xml)]  \n  \n The example also takes the `contosoBooks.xsd` as an input.  \n  \n [!code-xml[XPathXMLExamples#3](~/add/codesnippet/xml/2739ac73-0581-4d83-ad9c-_3.xsd)]"
  syntax:
    content: public void ValidateEndOfAttributes (System.Xml.Schema.XmlSchemaInfo schemaInfo);
    parameters:
    - id: schemaInfo
      type: System.Xml.Schema.XmlSchemaInfo
      description: "Um <xref href=&quot;System.Xml.Schema.XmlSchemaInfo&quot;> </xref> objeto cujas propriedades estão definidas no verificação com êxito se estão presentes todos os atributos necessários no contexto de elemento. Este parâmetro pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "Não foram encontrados um ou mais dos atributos necessários no contexto atual do elemento."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O método de ValidateEndOfAttributes não foi chamado na sequência correta. Por exemplo, ao chamar ValidateEndOfAttributes depois de chamar <xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*>.</xref:System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Um ou mais dos parâmetros especificados são <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)
  id: ValidateText(System.String)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateText(String)
  nameWithType: XmlSchemaValidator.ValidateText(String)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateText(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Valida se o texto <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> especificado é permitida no contexto atual do elemento e acumula o texto de validação, se o elemento actual tiver conteúdo simple."
  remarks: "Seguem-se notas importantes a considerar ao utilizar o método ValidateText.      -Se o elemento tem conteúdo simples, o texto `string` especificado é concatenado em cada chamada do método ValidateText até o <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A>método é chamado.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> Quando o <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A>método é denominado, todo o texto é validado.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A>      -Não se o elemento tem conteúdo complexo, ocorre nenhum concatenação de texto."
  syntax:
    content: public void ValidateText (string elementValue);
    parameters:
    - id: elementValue
      type: System.String
      description: "Um texto <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> validar no contexto atual do elemento."
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateText*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "O texto <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> especificado não é permitida no contexto atual do elemento."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <> </> *> método não foi chamado na sequência correta. Por exemplo, o <> </> *> método for chamado depois de chamar <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O texto <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> parâmetro não pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)
  id: ValidateText(System.Xml.Schema.XmlValueGetter)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateText(XmlValueGetter)
  nameWithType: XmlSchemaValidator.ValidateText(XmlValueGetter)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateText(XmlValueGetter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Valida se o texto devolvido pelo <xref href=&quot;System.Xml.Schema.XmlValueGetter&quot;> </xref> objeto especificado é permitido no contexto atual do elemento e acumula o texto de validação, se o elemento actual tiver conteúdo simple."
  remarks: "Seguem-se notas importantes a considerar ao utilizar o método ValidateText.      -Se o elemento tem conteúdo simples, o texto `string` especificado é concatenado em cada chamada do método ValidateText até o <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A>método é chamado.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A> Quando o <xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A>método é denominado, todo o texto é validado.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement%2A>      -Não se o elemento tem conteúdo complexo, ocorre nenhum concatenação de texto."
  syntax:
    content: public void ValidateText (System.Xml.Schema.XmlValueGetter elementValue);
    parameters:
    - id: elementValue
      type: System.Xml.Schema.XmlValueGetter
      description: "Um <xref href=&quot;System.Xml.Schema.XmlValueGetter&quot;> </xref> <xref uid=&quot;langword_csharp_delegate&quot; name=&quot;delegate&quot; href=&quot;&quot;> </xref> utilizado para transmitir o valor de texto como um tipo de Common Language Runtime (CLR) compatível com o tipo de linguagem de definição de esquema de XML (XSD) do atributo."
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateText*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "O texto <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> especificado não é permitida no contexto atual do elemento."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <> </> *> método não foi chamado na sequência correta. Por exemplo, o <> </> *> método for chamado depois de chamar <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O texto <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> parâmetro não pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)
  id: ValidateWhitespace(System.String)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateWhitespace(String)
  nameWithType: XmlSchemaValidator.ValidateWhitespace(String)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Valida se o técnico de espaço no <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> especificado é permitida no contexto atual do elemento e acumula o espaço em branco para a validação, se o elemento actual tiver conteúdo simple."
  syntax:
    content: public void ValidateWhitespace (string elementValue);
    parameters:
    - id: elementValue
      type: System.String
      description: "Um espaço em branco <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> validar no contexto atual do elemento."
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "Espaço em branco não é permitido no contexto atual do elemento."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <> </> *> método não foi chamado na sequência correta. Por exemplo, se o <> </> *> método for chamado depois de chamar <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)
  id: ValidateWhitespace(System.Xml.Schema.XmlValueGetter)
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidateWhitespace(XmlValueGetter)
  nameWithType: XmlSchemaValidator.ValidateWhitespace(XmlValueGetter)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(XmlValueGetter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Valida se o espaço em branco devolvido pelo <xref href=&quot;System.Xml.Schema.XmlValueGetter&quot;> </xref> objeto especificado é permitido no contexto atual do elemento e acumula o espaço em branco para a validação, se o elemento actual tiver conteúdo simple."
  syntax:
    content: public void ValidateWhitespace (System.Xml.Schema.XmlValueGetter elementValue);
    parameters:
    - id: elementValue
      type: System.Xml.Schema.XmlValueGetter
      description: "Um <xref href=&quot;System.Xml.Schema.XmlValueGetter&quot;> </xref> <xref uid=&quot;langword_csharp_delegate&quot; name=&quot;delegate&quot; href=&quot;&quot;> </xref> utilizado para transmitir o valor de espaço em branco como um tipo de Common Language Runtime (CLR) compatível com o tipo de linguagem de definição de esquema de XML (XSD) do atributo."
  overload: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "Espaço em branco não é permitido no contexto atual do elemento."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <> </> *> método não foi chamado na sequência correta. Por exemplo, se o <> </> *> método for chamado depois de chamar <xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>.</xref:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*>"
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler
  id: ValidationEventHandler
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidationEventHandler
  nameWithType: XmlSchemaValidator.ValidationEventHandler
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler
  type: Event
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "O <xref href=&quot;System.Xml.Schema.ValidationEventHandler&quot;> </xref> que recebe avisos de validação de esquema e erros encontrados durante a validação de esquema."
  remarks: "Se não <xref:System.Xml.Schema.ValidationEventHandler>for especificado, uma <xref:System.Xml.Schema.XmlSchemaValidationException>é emitida para todos os erros de validação de esquema com um <xref:System.Xml.Schema.XmlSeverityType>valor de <xref:System.Xml.Schema.XmlSeverityType>.</xref:System.Xml.Schema.XmlSeverityType> </xref:System.Xml.Schema.XmlSeverityType> </xref:System.Xml.Schema.XmlSchemaValidationException> </xref:System.Xml.Schema.ValidationEventHandler> Uma <xref:System.Xml.Schema.XmlSchemaValidationException>é emitida não para avisos de validação com um <xref:System.Xml.Schema.XmlSeverityType>valor de <xref:System.Xml.Schema.XmlSeverityType>.</xref:System.Xml.Schema.XmlSeverityType> </xref:System.Xml.Schema.XmlSeverityType> </xref:System.Xml.Schema.XmlSchemaValidationException>"
  example:
  - "The following example validates the `contosoBooks.xml` file against the `contosoBooks.xsd` schema. The example uses the <xref:System.Xml.Serialization.XmlSerializer> class to deserialize the `contosoBooks.xml` file and pass the value of the nodes to the methods of the <xref:System.Xml.Schema.XmlSchemaValidator> class.  \n  \n [!code-cs[XmlSchemaValidatorExamples#1](~/add/codesnippet/csharp/e-system.xml.schema.xmls_0_1.cs)]\n [!code-vb[XmlSchemaValidatorExamples#1](~/add/codesnippet/visualbasic/e-system.xml.schema.xmls_0_1.vb)]  \n  \n The example takes the `contosoBooks.xml` file as input.  \n  \n [!code-xml[XPathXMLExamples#2](~/add/codesnippet/xml/e-system.xml.schema.xmls_0_2.xml)]  \n  \n The example also takes the `contosoBooks.xsd` as an input.  \n  \n [!code-xml[XPathXMLExamples#3](~/add/codesnippet/xml/e-system.xml.schema.xmls_0_3.xsd)]"
  syntax:
    content: public event System.Xml.Schema.ValidationEventHandler ValidationEventHandler;
    return:
      type: System.Xml.Schema.ValidationEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.ValidationEventSender
  id: ValidationEventSender
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: ValidationEventSender
  nameWithType: XmlSchemaValidator.ValidationEventSender
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidationEventSender
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Obtém ou define o objecto enviado como o objeto do remetente de um evento de validação."
  remarks: ''
  example:
  - For an example of a validation event, see the <xref:System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler> event.
  syntax:
    content: public object ValidationEventSender { get; set; }
    return:
      type: System.Object
      description: "Um <xref:System.Object>; a predefinição é isto <xref href=&quot;System.Xml.Schema.XmlSchemaValidator&quot;> </xref> objeto.</xref:System.Object>"
  overload: System.Xml.Schema.XmlSchemaValidator.ValidationEventSender*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaValidator.XmlResolver
  id: XmlResolver
  parent: System.Xml.Schema.XmlSchemaValidator
  langs:
  - csharp
  name: XmlResolver
  nameWithType: XmlSchemaValidator.XmlResolver
  fullName: System.Xml.Schema.XmlSchemaValidator.XmlResolver
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Define o <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> objecto utilizado para resolver `xs:import` e `xs:include` elementos, bem como `xsi:schemaLocation` e `xsi:noNamespaceSchemaLocation` atributos."
  remarks: >-
    > [!IMPORTANT]

    >  The <xref:System.Xml.Schema.XmlSchemaValidationFlags> and <xref:System.Xml.Schema.XmlSchemaValidationFlags> validation flags of an <xref:System.Xml.Schema.XmlSchemaValidator> object are not set be default. Additionally, the XmlResolver property of an <xref:System.Xml.Schema.XmlSchemaValidator> object is `null` by default. As a result, external schemas referenced in include, imports, or redefine elements are not resolved by default.
  syntax:
    content: public System.Xml.XmlResolver XmlResolver { set; }
    return:
      type: System.Xml.XmlResolver
      description: "Um <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> objeto; a predefinição é um <xref href=&quot;System.Xml.XmlUrlResolver&quot;> </xref> objeto."
  overload: System.Xml.Schema.XmlSchemaValidator.XmlResolver*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Xml.Schema.XmlSchemaException
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaException
  nameWithType: XmlSchemaException
  fullName: System.Xml.Schema.XmlSchemaException
- uid: System.Xml.Schema.XmlSchemaValidationException
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaValidationException
  nameWithType: XmlSchemaValidationException
  fullName: System.Xml.Schema.XmlSchemaValidationException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: XmlSchemaValidator(XmlNameTable,XmlSchemaSet,IXmlNamespaceResolver,XmlSchemaValidationFlags)
  nameWithType: XmlSchemaValidator.XmlSchemaValidator(XmlNameTable,XmlSchemaSet,IXmlNamespaceResolver,XmlSchemaValidationFlags)
  fullName: System.Xml.Schema.XmlSchemaValidator.XmlSchemaValidator(XmlNameTable,XmlSchemaSet,IXmlNamespaceResolver,XmlSchemaValidationFlags)
- uid: System.Xml.XmlNameTable
  parent: System.Xml
  isExternal: true
  name: XmlNameTable
  nameWithType: XmlNameTable
  fullName: System.Xml.XmlNameTable
- uid: System.Xml.Schema.XmlSchemaSet
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
- uid: System.Xml.IXmlNamespaceResolver
  parent: System.Xml
  isExternal: true
  name: IXmlNamespaceResolver
  nameWithType: IXmlNamespaceResolver
  fullName: System.Xml.IXmlNamespaceResolver
- uid: System.Xml.Schema.XmlSchemaValidationFlags
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaValidationFlags
  nameWithType: XmlSchemaValidationFlags
  fullName: System.Xml.Schema.XmlSchemaValidationFlags
- uid: System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: AddSchema(XmlSchema)
  nameWithType: XmlSchemaValidator.AddSchema(XmlSchema)
  fullName: System.Xml.Schema.XmlSchemaValidator.AddSchema(XmlSchema)
- uid: System.Xml.Schema.XmlSchema
  parent: System.Xml.Schema
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema
- uid: System.Xml.Schema.XmlSchemaValidator.EndValidation
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: EndValidation()
  nameWithType: XmlSchemaValidator.EndValidation()
  fullName: System.Xml.Schema.XmlSchemaValidator.EndValidation()
- uid: System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: GetExpectedAttributes()
  nameWithType: XmlSchemaValidator.GetExpectedAttributes()
  fullName: System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes()
- uid: System.Xml.Schema.XmlSchemaAttribute[]
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaAttribute
  nameWithType: XmlSchemaAttribute
  fullName: System.Xml.Schema.XmlSchemaAttribute[]
  spec.csharp:
  - uid: System.Xml.Schema.XmlSchemaAttribute
    name: XmlSchemaAttribute
    nameWithType: XmlSchemaAttribute
    fullName: XmlSchemaAttribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: GetExpectedParticles()
  nameWithType: XmlSchemaValidator.GetExpectedParticles()
  fullName: System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles()
- uid: System.Xml.Schema.XmlSchemaParticle[]
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaParticle
  nameWithType: XmlSchemaParticle
  fullName: System.Xml.Schema.XmlSchemaParticle[]
  spec.csharp:
  - uid: System.Xml.Schema.XmlSchemaParticle
    name: XmlSchemaParticle
    nameWithType: XmlSchemaParticle
    fullName: XmlSchemaParticle[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: GetUnspecifiedDefaultAttributes(ArrayList)
  nameWithType: XmlSchemaValidator.GetUnspecifiedDefaultAttributes(ArrayList)
  fullName: System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(ArrayList)
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Xml.Schema.XmlSchemaValidator.Initialize
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: Initialize()
  nameWithType: XmlSchemaValidator.Initialize()
  fullName: System.Xml.Schema.XmlSchemaValidator.Initialize()
- uid: System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: Initialize(XmlSchemaObject)
  nameWithType: XmlSchemaValidator.Initialize(XmlSchemaObject)
  fullName: System.Xml.Schema.XmlSchemaValidator.Initialize(XmlSchemaObject)
- uid: System.Xml.Schema.XmlSchemaObject
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaObject
  nameWithType: XmlSchemaObject
  fullName: System.Xml.Schema.XmlSchemaObject
- uid: System.Xml.Schema.XmlSchemaValidator.LineInfoProvider
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: LineInfoProvider
  nameWithType: XmlSchemaValidator.LineInfoProvider
  fullName: System.Xml.Schema.XmlSchemaValidator.LineInfoProvider
- uid: System.Xml.IXmlLineInfo
  parent: System.Xml
  isExternal: true
  name: IXmlLineInfo
  nameWithType: IXmlLineInfo
  fullName: System.Xml.IXmlLineInfo
- uid: System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: SkipToEndElement(XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.SkipToEndElement(XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.SkipToEndElement(XmlSchemaInfo)
- uid: System.Xml.Schema.XmlSchemaInfo
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaInfo
  nameWithType: XmlSchemaInfo
  fullName: System.Xml.Schema.XmlSchemaInfo
- uid: System.Xml.Schema.XmlSchemaValidator.SourceUri
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: SourceUri
  nameWithType: XmlSchemaValidator.SourceUri
  fullName: System.Xml.Schema.XmlSchemaValidator.SourceUri
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateAttribute(String,String,String,XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.ValidateAttribute(String,String,String,XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(String,String,String,XmlSchemaInfo)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateAttribute(String,String,XmlValueGetter,XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.ValidateAttribute(String,String,XmlValueGetter,XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(String,String,XmlValueGetter,XmlSchemaInfo)
- uid: System.Xml.Schema.XmlValueGetter
  parent: System.Xml.Schema
  isExternal: false
  name: XmlValueGetter
  nameWithType: XmlValueGetter
  fullName: System.Xml.Schema.XmlValueGetter
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateElement(String,String,XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.ValidateElement(String,String,XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateElement(String,String,XmlSchemaInfo)
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateElement(String,String,XmlSchemaInfo,String,String,String,String)
  nameWithType: XmlSchemaValidator.ValidateElement(String,String,XmlSchemaInfo,String,String,String,String)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateElement(String,String,XmlSchemaInfo,String,String,String,String)
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateEndElement(XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo)
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateEndElement(XmlSchemaInfo,Object)
  nameWithType: XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo,Object)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(XmlSchemaInfo,Object)
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(System.Xml.Schema.XmlSchemaInfo)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateEndOfAttributes(XmlSchemaInfo)
  nameWithType: XmlSchemaValidator.ValidateEndOfAttributes(XmlSchemaInfo)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes(XmlSchemaInfo)
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateText(String)
  nameWithType: XmlSchemaValidator.ValidateText(String)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateText(String)
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateText(XmlValueGetter)
  nameWithType: XmlSchemaValidator.ValidateText(XmlValueGetter)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateText(XmlValueGetter)
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateWhitespace(String)
  nameWithType: XmlSchemaValidator.ValidateWhitespace(String)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(String)
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateWhitespace(XmlValueGetter)
  nameWithType: XmlSchemaValidator.ValidateWhitespace(XmlValueGetter)
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(XmlValueGetter)
- uid: System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidationEventHandler
  nameWithType: XmlSchemaValidator.ValidationEventHandler
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidationEventHandler
- uid: System.Xml.Schema.ValidationEventHandler
  parent: System.Xml.Schema
  isExternal: false
  name: ValidationEventHandler
  nameWithType: ValidationEventHandler
  fullName: System.Xml.Schema.ValidationEventHandler
- uid: System.Xml.Schema.XmlSchemaValidator.ValidationEventSender
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidationEventSender
  nameWithType: XmlSchemaValidator.ValidationEventSender
  fullName: System.Xml.Schema.XmlSchemaValidator.ValidationEventSender
- uid: System.Xml.Schema.XmlSchemaValidator.XmlResolver
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: XmlResolver
  nameWithType: XmlSchemaValidator.XmlResolver
  fullName: System.Xml.Schema.XmlSchemaValidator.XmlResolver
- uid: System.Xml.XmlResolver
  parent: System.Xml
  isExternal: false
  name: XmlResolver
  nameWithType: XmlResolver
  fullName: System.Xml.XmlResolver
- uid: System.Xml.Schema.XmlSchemaValidator.#ctor*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: XmlSchemaValidator
  nameWithType: XmlSchemaValidator.XmlSchemaValidator
- uid: System.Xml.Schema.XmlSchemaValidator.AddSchema*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: AddSchema
  nameWithType: XmlSchemaValidator.AddSchema
- uid: System.Xml.Schema.XmlSchemaValidator.EndValidation*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: EndValidation
  nameWithType: XmlSchemaValidator.EndValidation
- uid: System.Xml.Schema.XmlSchemaValidator.GetExpectedAttributes*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: GetExpectedAttributes
  nameWithType: XmlSchemaValidator.GetExpectedAttributes
- uid: System.Xml.Schema.XmlSchemaValidator.GetExpectedParticles*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: GetExpectedParticles
  nameWithType: XmlSchemaValidator.GetExpectedParticles
- uid: System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: GetUnspecifiedDefaultAttributes
  nameWithType: XmlSchemaValidator.GetUnspecifiedDefaultAttributes
- uid: System.Xml.Schema.XmlSchemaValidator.Initialize*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: Initialize
  nameWithType: XmlSchemaValidator.Initialize
- uid: System.Xml.Schema.XmlSchemaValidator.LineInfoProvider*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: LineInfoProvider
  nameWithType: XmlSchemaValidator.LineInfoProvider
- uid: System.Xml.Schema.XmlSchemaValidator.SkipToEndElement*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: SkipToEndElement
  nameWithType: XmlSchemaValidator.SkipToEndElement
- uid: System.Xml.Schema.XmlSchemaValidator.SourceUri*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: SourceUri
  nameWithType: XmlSchemaValidator.SourceUri
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateAttribute*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateAttribute
  nameWithType: XmlSchemaValidator.ValidateAttribute
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateElement*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateElement
  nameWithType: XmlSchemaValidator.ValidateElement
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateEndElement*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateEndElement
  nameWithType: XmlSchemaValidator.ValidateEndElement
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateEndOfAttributes*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateEndOfAttributes
  nameWithType: XmlSchemaValidator.ValidateEndOfAttributes
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateText*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateText
  nameWithType: XmlSchemaValidator.ValidateText
- uid: System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidateWhitespace
  nameWithType: XmlSchemaValidator.ValidateWhitespace
- uid: System.Xml.Schema.XmlSchemaValidator.ValidationEventSender*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: ValidationEventSender
  nameWithType: XmlSchemaValidator.ValidationEventSender
- uid: System.Xml.Schema.XmlSchemaValidator.XmlResolver*
  parent: System.Xml.Schema.XmlSchemaValidator
  isExternal: false
  name: XmlResolver
  nameWithType: XmlSchemaValidator.XmlResolver
