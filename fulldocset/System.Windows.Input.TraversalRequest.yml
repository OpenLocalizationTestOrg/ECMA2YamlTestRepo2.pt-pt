### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.TraversalRequest
  id: TraversalRequest
  children:
  - System.Windows.Input.TraversalRequest.#ctor(System.Windows.Input.FocusNavigationDirection)
  - System.Windows.Input.TraversalRequest.FocusNavigationDirection
  - System.Windows.Input.TraversalRequest.Wrapped
  langs:
  - csharp
  name: TraversalRequest
  nameWithType: TraversalRequest
  fullName: System.Windows.Input.TraversalRequest
  type: Class
  summary: "Represents a request to move focus to another control."
  remarks: "This class is used as an input parameter for the <xref:System.Windows.UIElement.MoveFocus%2A?displayProperty=fullName> method. The <xref:System.Windows.UIElement.MoveFocus%2A> method has a WPF framework-level override that provides a more practical implementation (<xref:System.Windows.FrameworkElement.MoveFocus%2A?displayProperty=fullName>), as well as a parallel implementation on <xref:System.Windows.ContentElement> and <xref:System.Windows.FrameworkContentElement>. You typically will set properties on TraversalRequest in order to customize the focusing behavior when you request that the focus be moved to another element.       This class is also used as input parameters for the following methods:      -   <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A>, and implementations of that method that are used for interoperation (<xref:System.Windows.Forms.Integration.WindowsFormsHost.TabInto%2A>).      -   <xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A>."
  example:
  - "The following example creates a TraversalRequest instance as input for a <xref:System.Windows.FrameworkElement.MoveFocus%2A?displayProperty=fullName> call.  \n  \n [!code-cs[FocusSample#FocusSampleMoveFocus](~/add/codesnippet/csharp/FocusSample/Window1.xaml.cs#focussamplemovefocus)]\n [!code-vb[FocusSample#FocusSampleMoveFocus](~/add/codesnippet/visualbasic/focussample/window1.xaml.vb#focussamplemovefocus)]"
  syntax:
    content: public class TraversalRequest
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Input.TraversalRequest.#ctor(System.Windows.Input.FocusNavigationDirection)
  id: '#ctor(System.Windows.Input.FocusNavigationDirection)'
  parent: System.Windows.Input.TraversalRequest
  langs:
  - csharp
  name: TraversalRequest(FocusNavigationDirection)
  nameWithType: TraversalRequest.TraversalRequest(FocusNavigationDirection)
  fullName: System.Windows.Input.TraversalRequest.TraversalRequest(FocusNavigationDirection)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Windows.Input
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Input.TraversalRequest&quot;></xref> class."
  remarks: ''
  example:
  - "The following example creates a <xref:System.Windows.Input.TraversalRequest> instance as input for a <xref:System.Windows.FrameworkElement.MoveFocus%2A?displayProperty=fullName> call.  \n  \n [!code-cs[FocusSample#FocusSampleMoveFocus](~/add/codesnippet/csharp/FocusSample/Window1.xaml.cs#focussamplemovefocus)]\n [!code-vb[FocusSample#FocusSampleMoveFocus](~/add/codesnippet/visualbasic/focussample/window1.xaml.vb#focussamplemovefocus)]"
  syntax:
    content: public TraversalRequest (System.Windows.Input.FocusNavigationDirection focusNavigationDirection);
    parameters:
    - id: focusNavigationDirection
      type: System.Windows.Input.FocusNavigationDirection
      description: "The intended direction of the focus traversal, as a value of the enumeration."
  overload: System.Windows.Input.TraversalRequest.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.TraversalRequest.FocusNavigationDirection
  id: FocusNavigationDirection
  parent: System.Windows.Input.TraversalRequest
  langs:
  - csharp
  name: FocusNavigationDirection
  nameWithType: TraversalRequest.FocusNavigationDirection
  fullName: System.Windows.Input.TraversalRequest.FocusNavigationDirection
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Input
  summary: "Gets the traversal direction."
  remarks: "This property is read-only because the <xref:System.Windows.Input.FocusNavigationDirection> is a required input parameter of the <xref:System.Windows.Input.TraversalRequest> class constructor."
  syntax:
    content: public System.Windows.Input.FocusNavigationDirection FocusNavigationDirection { get; }
    return:
      type: System.Windows.Input.FocusNavigationDirection
      description: "One of the traversal direction enumeration values."
  overload: System.Windows.Input.TraversalRequest.FocusNavigationDirection*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.TraversalRequest.Wrapped
  id: Wrapped
  parent: System.Windows.Input.TraversalRequest
  langs:
  - csharp
  name: Wrapped
  nameWithType: TraversalRequest.Wrapped
  fullName: System.Windows.Input.TraversalRequest.Wrapped
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Input
  summary: "Gets or sets a value that indicates whether focus traversal has reached the end of child elements that can have focus."
  remarks: "Focusable elements are those elements where the <xref:System.Windows.UIElement.Focusable%2A> property is `true`.       This parameter is primarily intended to communicate whether traversal using tab stops should wrap when calling the methods <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A>, <xref:System.Windows.Forms.Integration.WindowsFormsHost.TabInto%2A>,or.<xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A>. If you are passing focus to an object that implements <xref:System.Windows.Interop.IKeyboardInputSink>, then specifying true for Wrapped will result in that `true` value being passed to the <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A> implementation."
  syntax:
    content: public bool Wrapped { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if this traversal has reached the end of child elements that can have focus; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Input.TraversalRequest.Wrapped*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Input.TraversalRequest.#ctor(System.Windows.Input.FocusNavigationDirection)
  parent: System.Windows.Input.TraversalRequest
  isExternal: false
  name: TraversalRequest(FocusNavigationDirection)
  nameWithType: TraversalRequest.TraversalRequest(FocusNavigationDirection)
  fullName: System.Windows.Input.TraversalRequest.TraversalRequest(FocusNavigationDirection)
- uid: System.Windows.Input.FocusNavigationDirection
  parent: System.Windows.Input
  isExternal: false
  name: FocusNavigationDirection
  nameWithType: FocusNavigationDirection
  fullName: System.Windows.Input.FocusNavigationDirection
- uid: System.Windows.Input.TraversalRequest.FocusNavigationDirection
  parent: System.Windows.Input.TraversalRequest
  isExternal: false
  name: FocusNavigationDirection
  nameWithType: TraversalRequest.FocusNavigationDirection
  fullName: System.Windows.Input.TraversalRequest.FocusNavigationDirection
- uid: System.Windows.Input.TraversalRequest.Wrapped
  parent: System.Windows.Input.TraversalRequest
  isExternal: false
  name: Wrapped
  nameWithType: TraversalRequest.Wrapped
  fullName: System.Windows.Input.TraversalRequest.Wrapped
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Input.TraversalRequest.#ctor*
  parent: System.Windows.Input.TraversalRequest
  isExternal: false
  name: TraversalRequest
  nameWithType: TraversalRequest.TraversalRequest
- uid: System.Windows.Input.TraversalRequest.FocusNavigationDirection*
  parent: System.Windows.Input.TraversalRequest
  isExternal: false
  name: FocusNavigationDirection
  nameWithType: TraversalRequest.FocusNavigationDirection
- uid: System.Windows.Input.TraversalRequest.Wrapped*
  parent: System.Windows.Input.TraversalRequest
  isExternal: false
  name: Wrapped
  nameWithType: TraversalRequest.Wrapped
