### YamlMime:ManagedReference
items:
- uid: System.Web.UI.DataSourceControl
  id: DataSourceControl
  children:
  - System.Web.UI.DataSourceControl.#ctor
  - System.Web.UI.DataSourceControl.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.DataSourceControl.ClientID
  - System.Web.UI.DataSourceControl.ClientIDMode
  - System.Web.UI.DataSourceControl.Controls
  - System.Web.UI.DataSourceControl.CreateControlCollection
  - System.Web.UI.DataSourceControl.EnableTheming
  - System.Web.UI.DataSourceControl.FindControl(System.String)
  - System.Web.UI.DataSourceControl.Focus
  - System.Web.UI.DataSourceControl.GetView(System.String)
  - System.Web.UI.DataSourceControl.GetViewNames
  - System.Web.UI.DataSourceControl.HasControls
  - System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent(System.EventArgs)
  - System.Web.UI.DataSourceControl.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.DataSourceControl.SkinID
  - System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#ContainsListCollection
  - System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#GetList
  - System.Web.UI.DataSourceControl.System#Web#UI#IDataSource#GetView(System.String)
  - System.Web.UI.DataSourceControl.System#Web#UI#IDataSource#GetViewNames
  - System.Web.UI.DataSourceControl.Visible
  langs:
  - csharp
  name: DataSourceControl
  nameWithType: DataSourceControl
  fullName: System.Web.UI.DataSourceControl
  type: Class
  summary: "Serves as the base class for controls that represent data sources to data-bound controls."
  remarks: "ASP.NET supports a control data-binding architecture that enables Web server controls to bind to data in a consistent fashion. Web server controls that bind to data are referred to as data-bound controls, and the classes that facilitate that binding are called data source controls. Data source controls can represent any data source: a relational database, a file, a stream, a business object, and so on. Data source controls present data in a consistent way to data-bound controls, regardless of the source or format of the underlying data.       You use the data source controls that are provided with ASP.NET, including <xref:System.Web.UI.WebControls.SqlDataSource>, <xref:System.Web.UI.WebControls.AccessDataSource>, and <xref:System.Web.UI.WebControls.XmlDataSource>, to perform most Web development tasks. You use the base DataSourceControl class when you want to implement your own custom data source control.       While any class that implements the <xref:System.Web.UI.IDataSource> interface is a data source control, most ASP.NET data source controls extend the abstract DataSourceControl class, which provides a base implementation of the <xref:System.Web.UI.IDataSource> interface. The DataSourceControl class also provides an implementation of the <xref:System.ComponentModel.IListSource> interface, which enables you to programmatically assign the data source control to the `DataSource` property of a data-bound control and return data to the control as a basic list.       Any ASP.NET control that derives from the <xref:System.Web.UI.WebControls.DataBoundControl> class can bind to a data source control. When a <xref:System.Web.UI.WebControls.DataBoundControl> is bound to a data source control, data binding is performed automatically at run time. You can also use data source controls with ASP.NET controls that expose a `DataSource` or `DataSourceID` property and support basic data binding, but are not derived from <xref:System.Web.UI.WebControls.DataBoundControl>. When using these data-bound controls, you must explicitly call the `DataBind` method. For more information on data binding, see [ASP.NET Data Access Content Map](http://msdn.microsoft.com/en-us/f9219396-a0fa-481f-894d-e3d9c67d64f2).       You can think of a data source control as the combination of the DataSourceControl object and its associated lists of data, called data source views. Each list of data is represented by a <xref:System.Web.UI.DataSourceView> object. Because the underlying data storage contains one or more lists of data, a DataSourceControl is always associated with one or more named <xref:System.Web.UI.DataSourceView> objects. The <xref:System.Web.UI.IDataSource> interface defines the methods that all data source controls use to interact with data source views: the <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> method is used to enumerate the data source views currently associated with the data source control, and the <xref:System.Web.UI.DataSourceControl.GetView%2A> method is used to retrieve a specific data source view instance by name.       You can also think of the data source control as two distinct interfaces that callers use to access data. The DataSourceControl class is the interface that page developers interact with directly when developing a Web Forms page, and the <xref:System.Web.UI.DataSourceView> class is the interface that data-bound controls and data-bound control authors interact with. Because the <xref:System.Web.UI.DataSourceView> object is available only at run time, any state persisted for the data source control or data source view must be exposed directly by the data source control.       There is no visual rendering of ASP.NET data source controls; they are implemented as controls so you can create them declaratively, and to optionally allow them to participate in state management. As a result, data source controls do not support visual features such as <xref:System.Web.UI.DataSourceControl.EnableTheming%2A> or <xref:System.Web.UI.DataSourceControl.SkinID%2A>."
  example:
  - "The following code example demonstrates how a class can extend the DataSourceControl class. The `CsvDataSource` control represents comma-separated file data stored in a .csv file. The `CsvDataSource` class provides its own implementations of the <xref:System.Web.UI.DataSourceControl.GetView%2A>, <xref:System.Web.UI.DataSourceControl.GetViewNames%2A>, and other methods, because the base class implementations are not functional.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/add/codesnippet/csharp/t-system.web.ui.datasour_0_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/add/codesnippet/visualbasic/t-system.web.ui.datasour_0_1.vb)]  \n  \n The following code example demonstrates how to use the `CsvDataSource` control in a Web form.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1_webform#50](~/add/codesnippet/csharp/t-system.web.ui.datasour_0_2.aspx)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1_webform#50](~/add/codesnippet/visualbasic/t-system.web.ui.datasour_0_2.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.Bindable(false)]

      [System.ComponentModel.Designer("System.Web.UI.Design.DataSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.ControlBuilder(typeof(System.Web.UI.DataSourceControlBuilder))]

      [System.Web.UI.NonVisualControl]

      public abstract class DataSourceControl : System.Web.UI.Control, System.ComponentModel.IListSource, System.Web.UI.IDataSource
  inheritance:
  - System.Object
  - System.Web.UI.Control
  implements:
  - System.ComponentModel.IListSource
  - System.Web.UI.IDataSource
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnInit(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.TrackViewState
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  platform:
  - net462
- uid: System.Web.UI.DataSourceControl.#ctor
  id: '#ctor'
  parent: System.Web.UI.DataSourceControl
  langs:
  - csharp
  name: DataSourceControl()
  nameWithType: DataSourceControl.DataSourceControl()
  fullName: System.Web.UI.DataSourceControl.DataSourceControl()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.UI.DataSourceControl&quot;></xref> class."
  syntax:
    content: protected DataSourceControl ();
    parameters: []
  overload: System.Web.UI.DataSourceControl.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceControl.ApplyStyleSheetSkin(System.Web.UI.Page)
  id: ApplyStyleSheetSkin(System.Web.UI.Page)
  parent: System.Web.UI.DataSourceControl
  langs:
  - csharp
  name: ApplyStyleSheetSkin(Page)
  nameWithType: DataSourceControl.ApplyStyleSheetSkin(Page)
  fullName: System.Web.UI.DataSourceControl.ApplyStyleSheetSkin(Page)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Applies the style properties that are defined in the page style sheet to the control."
  syntax:
    content: public override void ApplyStyleSheetSkin (System.Web.UI.Page page);
    parameters:
    - id: page
      type: System.Web.UI.Page
      description: "The <xref href=&quot;System.Web.UI.Page&quot;></xref> containing the control."
  overload: System.Web.UI.DataSourceControl.ApplyStyleSheetSkin*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceControl.ClientID
  id: ClientID
  parent: System.Web.UI.DataSourceControl
  langs:
  - csharp
  name: ClientID
  nameWithType: DataSourceControl.ClientID
  fullName: System.Web.UI.DataSourceControl.ClientID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gets the server control identifier generated by ASP.NET."
  syntax:
    content: public override string ClientID { get; }
    return:
      type: System.String
      description: "The server control identifier generated by ASP.NET."
  overload: System.Web.UI.DataSourceControl.ClientID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceControl.ClientIDMode
  id: ClientIDMode
  parent: System.Web.UI.DataSourceControl
  langs:
  - csharp
  name: ClientIDMode
  nameWithType: DataSourceControl.ClientIDMode
  fullName: System.Web.UI.DataSourceControl.ClientIDMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "This property is not used for data source controls."
  remarks: "This property of the <xref:System.Web.UI.Control> base class is not used for data source controls because data source controls do not render markup."
  syntax:
    content: public override System.Web.UI.ClientIDMode ClientIDMode { get; set; }
    return:
      type: System.Web.UI.ClientIDMode
      description: "This property is not used for data source controls."
  overload: System.Web.UI.DataSourceControl.ClientIDMode*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "An attempt was made to set this property."
  platform:
  - net462
- uid: System.Web.UI.DataSourceControl.Controls
  id: Controls
  parent: System.Web.UI.DataSourceControl
  langs:
  - csharp
  name: Controls
  nameWithType: DataSourceControl.Controls
  fullName: System.Web.UI.DataSourceControl.Controls
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gets a <xref href=&quot;System.Web.UI.ControlCollection&quot;></xref> object that represents the child controls for a specified server control in the UI hierarchy."
  syntax:
    content: public override System.Web.UI.ControlCollection Controls { get; }
    return:
      type: System.Web.UI.ControlCollection
      description: "The collection of child controls for the specified server control."
  overload: System.Web.UI.DataSourceControl.Controls*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceControl.CreateControlCollection
  id: CreateControlCollection
  parent: System.Web.UI.DataSourceControl
  langs:
  - csharp
  name: CreateControlCollection()
  nameWithType: DataSourceControl.CreateControlCollection()
  fullName: System.Web.UI.DataSourceControl.CreateControlCollection()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Creates a collection to store child controls."
  remarks: >-
    > [!NOTE]

    >  Because data source controls do not allow child controls, the <xref:System.Web.UI.DataSourceControl> class's default implementation does not support the embedding of child controls.
  syntax:
    content: protected override System.Web.UI.ControlCollection CreateControlCollection ();
    parameters: []
    return:
      type: System.Web.UI.ControlCollection
      description: "Returns a <xref href=&quot;System.Web.UI.EmptyControlCollection&quot;></xref>."
  overload: System.Web.UI.DataSourceControl.CreateControlCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceControl.EnableTheming
  id: EnableTheming
  parent: System.Web.UI.DataSourceControl
  langs:
  - csharp
  name: EnableTheming
  nameWithType: DataSourceControl.EnableTheming
  fullName: System.Web.UI.DataSourceControl.EnableTheming
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gets a value indicating whether this control supports themes."
  remarks: "Because the <xref:System.Web.UI.DataSourceControl> control has no visual rendering, it does not support themes."
  syntax:
    content: public override bool EnableTheming { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> in all cases."
  overload: System.Web.UI.DataSourceControl.EnableTheming*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "An attempt was made to set the value of the EnableTheming property."
  platform:
  - net462
- uid: System.Web.UI.DataSourceControl.FindControl(System.String)
  id: FindControl(System.String)
  parent: System.Web.UI.DataSourceControl
  langs:
  - csharp
  name: FindControl(String)
  nameWithType: DataSourceControl.FindControl(String)
  fullName: System.Web.UI.DataSourceControl.FindControl(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Searches the current naming container for a server control with the specified <code>id</code> parameter."
  syntax:
    content: public override System.Web.UI.Control FindControl (string id);
    parameters:
    - id: id
      type: System.String
      description: "The identifier for the control to be found."
    return:
      type: System.Web.UI.Control
      description: "The specified control, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the specified control does not exist."
  overload: System.Web.UI.DataSourceControl.FindControl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceControl.Focus
  id: Focus
  parent: System.Web.UI.DataSourceControl
  langs:
  - csharp
  name: Focus()
  nameWithType: DataSourceControl.Focus()
  fullName: System.Web.UI.DataSourceControl.Focus()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Sets input focus to the control."
  remarks: "Because the <xref:System.Web.UI.DataSourceControl> control has no visual rendering, calling the Focus method on it throws a <xref:System.NotSupportedException> exception."
  syntax:
    content: public override void Focus ();
    parameters: []
  overload: System.Web.UI.DataSourceControl.Focus*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "An attempt was made to call the Focus method."
  platform:
  - net462
- uid: System.Web.UI.DataSourceControl.GetView(System.String)
  id: GetView(System.String)
  parent: System.Web.UI.DataSourceControl
  langs:
  - csharp
  name: GetView(String)
  nameWithType: DataSourceControl.GetView(String)
  fullName: System.Web.UI.DataSourceControl.GetView(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gets the named data source view associated with the data source control."
  remarks: "You can enumerate through the set of views currently associated with the data source control by calling the <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> method.       Data source control classes can support one or more views on their underlying data. These views are represented by instances of the <xref:System.Web.UI.DataSourceView> class. The data source view defines the capabilities of a data source control, does all the work necessary to retrieve data from the underlying data store, and performs operations such as sorting, inserting, deleting, and updating.      > [!NOTE] >  The <xref:System.Web.UI.DataSourceControl> class&quot;s default implementation returns `null`. If you extend the <xref:System.Web.UI.DataSourceControl> class, override the GetView method to return the specified <xref:System.Web.UI.DataSourceView> object."
  example:
  - "The following code example demonstrates how a data source control class that extends the <xref:System.Web.UI.DataSourceControl> class implements the <xref:System.Web.UI.IDataSource.GetView%2A> method, returning a strongly typed instance of the <xref:System.Web.UI.DataSourceView> class. Because the data source control supports only one view, it ignores the name and returns a view named with the default view name. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceControl> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/add/codesnippet/csharp/m-system.web.ui.datasour_3_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/add/codesnippet/visualbasic/m-system.web.ui.datasour_3_1.vb)]"
  syntax:
    content: protected abstract System.Web.UI.DataSourceView GetView (string viewName);
    parameters:
    - id: viewName
      type: System.String
      description: "The name of the <xref href=&quot;System.Web.UI.DataSourceView&quot;></xref> to retrieve. In data source controls that support only one view, such as <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;></xref>, this parameter is ignored."
    return:
      type: System.Web.UI.DataSourceView
      description: "Returns the named <xref href=&quot;System.Web.UI.DataSourceView&quot;></xref> associated with the <xref href=&quot;System.Web.UI.DataSourceControl&quot;></xref>."
  overload: System.Web.UI.DataSourceControl.GetView*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceControl.GetViewNames
  id: GetViewNames
  parent: System.Web.UI.DataSourceControl
  langs:
  - csharp
  name: GetViewNames()
  nameWithType: DataSourceControl.GetViewNames()
  fullName: System.Web.UI.DataSourceControl.GetViewNames()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gets a collection of names, representing the list of <xref href=&quot;System.Web.UI.DataSourceView&quot;></xref> objects associated with the <xref href=&quot;System.Web.UI.DataSourceControl&quot;></xref> control."
  remarks: "The <xref:System.Collections.ICollection> collection of names is the allowable set of values that can be passed to the <xref:System.Web.UI.DataSourceControl.GetView%2A> method.       The <xref:System.Web.UI.ListSourceHelper> class, which is used for the <xref:System.Web.UI.DataSourceControl> class&quot;s <xref:System.ComponentModel.IListSource> implementation, checks the GetViewNames method for both the <xref:System.Web.UI.DataSourceControl.System%23ComponentModel%23IListSource%23ContainsListCollection%2A> and <xref:System.Web.UI.DataSourceControl.System%23ComponentModel%23IListSource%23GetList%2A> calls to determine whether the data source control is associated with one or more data source views. If GetViewNames returns `null`, which is the default implementation of the method, <xref:System.Web.UI.DataSourceControl.System%23ComponentModel%23IListSource%23ContainsListCollection%2A> returns `false` and <xref:System.Web.UI.DataSourceControl.System%23ComponentModel%23IListSource%23GetList%2A> returns `null`.      > [!NOTE] >  The <xref:System.Web.UI.DataSourceControl> class&quot;s default implementation returns `null`. If you extend the <xref:System.Web.UI.DataSourceControl> class, override the GetViewNames method to return a collection of view names."
  example:
  - "The following code example demonstrates how a class that extends the <xref:System.Web.UI.DataSourceControl> class can override the default implementation, which returns `null`, to provide a collection of view names. The `CsvDataSource` class only supports one view; therefore, a collection of one element with the default view name is returned. This code example is part of a larger example provided for the <xref:System.Web.UI.DataSourceControl> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/add/codesnippet/csharp/m-system.web.ui.datasour_2_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/add/codesnippet/visualbasic/m-system.web.ui.datasour_2_1.vb)]"
  syntax:
    content: protected virtual System.Collections.ICollection GetViewNames ();
    parameters: []
    return:
      type: System.Collections.ICollection
      description: "An <xref:System.Collections.ICollection> that contains the names of the <xref href=&quot;System.Web.UI.DataSourceView&quot;></xref> objects associated with the <xref href=&quot;System.Web.UI.DataSourceControl&quot;></xref>."
  overload: System.Web.UI.DataSourceControl.GetViewNames*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceControl.HasControls
  id: HasControls
  parent: System.Web.UI.DataSourceControl
  langs:
  - csharp
  name: HasControls()
  nameWithType: DataSourceControl.HasControls()
  fullName: System.Web.UI.DataSourceControl.HasControls()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Determines if the server control contains any child controls."
  syntax:
    content: public override bool HasControls ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the control contains other controls; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.DataSourceControl.HasControls*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent(System.EventArgs)
  id: RaiseDataSourceChangedEvent(System.EventArgs)
  parent: System.Web.UI.DataSourceControl
  langs:
  - csharp
  name: RaiseDataSourceChangedEvent(EventArgs)
  nameWithType: DataSourceControl.RaiseDataSourceChangedEvent(EventArgs)
  fullName: System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Raises the <xref href=&quot;System.Web.UI.IDataSource.DataSourceChanged&quot;></xref> event."
  remarks: "The RaiseDataSourceChangedEvent method notifies a data-bound control that the underlying data source or the data cached in memory has changed, and that the control should rebind and perform any necessary additional work. Typically, the RaiseDataSourceChangedEvent method is called when a property of the data source control or a parameter value has changed.       Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)."
  example:
  - "The following code example demonstrates how to call the RaiseDataSourceChangedEvent method when a data source or its underlying data has changed in a way that might affect any bound controls. In this example, a file-based data source control that extends the <xref:System.Web.UI.DataSourceControl> class raises the <xref:System.Web.UI.IDataSource.DataSourceChanged> event by calling RaiseDataSourceChangedEvent any time the `FileName` property is changed.  \n  \n [!code-cs[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/add/codesnippet/csharp/m-system.web.ui.datasour_1_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/add/codesnippet/visualbasic/m-system.web.ui.datasour_1_1.vb)]"
  syntax:
    content: protected virtual void RaiseDataSourceChangedEvent (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains event data."
  overload: System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceControl.RenderControl(System.Web.UI.HtmlTextWriter)
  id: RenderControl(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.DataSourceControl
  langs:
  - csharp
  name: RenderControl(HtmlTextWriter)
  nameWithType: DataSourceControl.RenderControl(HtmlTextWriter)
  fullName: System.Web.UI.DataSourceControl.RenderControl(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Outputs server control content to a provided <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref> object and stores tracing information about the control if tracing is enabled."
  syntax:
    content: public override void RenderControl (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "The <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref> object that receives the control content."
  overload: System.Web.UI.DataSourceControl.RenderControl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceControl.SkinID
  id: SkinID
  parent: System.Web.UI.DataSourceControl
  langs:
  - csharp
  name: SkinID
  nameWithType: DataSourceControl.SkinID
  fullName: System.Web.UI.DataSourceControl.SkinID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gets the skin to apply to the <xref href=&quot;System.Web.UI.DataSourceControl&quot;></xref> control."
  remarks: "Because the <xref:System.Web.UI.DataSourceControl> control has no visual rendering, you cannot set the SkinID property."
  syntax:
    content: public override string SkinID { get; set; }
    return:
      type: System.String
      description: '&lt;xref:System.String?displayProperty=fullName&gt;.'
  overload: System.Web.UI.DataSourceControl.SkinID*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "An attempt was made to set the value of the SkinID property."
  platform:
  - net462
- uid: System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#ContainsListCollection
  id: System#ComponentModel#IListSource#ContainsListCollection
  isEii: true
  parent: System.Web.UI.DataSourceControl
  langs:
  - csharp
  name: System.ComponentModel.IListSource.ContainsListCollection
  nameWithType: DataSourceControl.System.ComponentModel.IListSource.ContainsListCollection
  fullName: System.Web.UI.DataSourceControl.System.ComponentModel.IListSource.ContainsListCollection
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Indicates whether the data source control is associated with one or more lists of data."
  remarks: "This property is used to determine whether the current object can be used as a source of one or more lists of data. Data source controls encapsulate their lists of data as <xref:System.Web.UI.DataSourceView> objects; therefore, when associated with one or more <xref:System.Web.UI.DataSourceView> objects, a <xref:System.Web.UI.DataSourceControl> control represents a list source object and the property returns `true`.       This property calls the static <xref:System.Web.UI.ListSourceHelper.ContainsListCollection%2A?displayProperty=fullName> method to determine whether the current data source control can be used as a source of data. The <xref:System.Web.UI.ListSourceHelper> class determines whether the <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> method returns a valid collection of view names. If it does, this property returns `true`. If <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> returns `null`, which is the default implementation of the <xref:System.Web.UI.DataSourceControl> class, the method returns `false`."
  syntax:
    content: bool System.ComponentModel.IListSource.ContainsListCollection { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref href=&quot;System.Web.UI.DataSourceControl&quot;></xref> is associated with one or more <xref href=&quot;System.Web.UI.DataSourceView&quot;></xref> objects; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#ContainsListCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#GetList
  id: System#ComponentModel#IListSource#GetList
  isEii: true
  parent: System.Web.UI.DataSourceControl
  langs:
  - csharp
  name: System.ComponentModel.IListSource.GetList()
  nameWithType: DataSourceControl.System.ComponentModel.IListSource.GetList()
  fullName: System.Web.UI.DataSourceControl.System.ComponentModel.IListSource.GetList()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gets a list of data source controls that can be used as sources of lists of data."
  remarks: "This method is used to retrieve a set of objects that can be used as sources of data. Data source controls encapsulate their lists of data as <xref:System.Web.UI.DataSourceView> objects; therefore, when associated with one or more <xref:System.Web.UI.DataSourceView> objects, a <xref:System.Web.UI.DataSourceControl> control represents a list source object and the method returns an <xref:System.Collections.IList> collection of one element, the <xref:System.Web.UI.DataSourceControl> itself.       This method calls the static <xref:System.Web.UI.ListSourceHelper.GetList%2A?displayProperty=fullName> method to retrieve an <xref:System.Collections.IList> collection of objects that can be used as sources of data. The <xref:System.Web.UI.ListSourceHelper> class determines whether <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> returns a valid collection of view names. If it does, the <xref:System.Web.UI.ListSourceHelper> class returns an <xref:System.Collections.IList> collection of one element, the <xref:System.Web.UI.DataSourceControl> control. If <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> returns `null`, which is the default implementation of the <xref:System.Web.UI.DataSourceControl> class, the <xref:System.Web.UI.ListSourceHelper> class also returns `null`."
  syntax:
    content: System.Collections.IList IListSource.GetList ();
    parameters: []
    return:
      type: System.Collections.IList
      description: "An <xref:System.Collections.IList> of data source controls that can be used as sources of lists of data."
  overload: System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#GetList*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceControl.System#Web#UI#IDataSource#GetView(System.String)
  id: System#Web#UI#IDataSource#GetView(System.String)
  isEii: true
  parent: System.Web.UI.DataSourceControl
  langs:
  - csharp
  name: System.Web.UI.IDataSource.GetView(String)
  nameWithType: DataSourceControl.System.Web.UI.IDataSource.GetView(String)
  fullName: System.Web.UI.DataSourceControl.System.Web.UI.IDataSource.GetView(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gets the named <xref href=&quot;System.Web.UI.DataSourceView&quot;></xref> object associated with the <xref href=&quot;System.Web.UI.DataSourceControl&quot;></xref> control. Some data source controls support only one view, while others support more than one."
  remarks: "The `viewName` parameter is ignored when this method is called on data source controls that support only one view, such as the <xref:System.Web.UI.WebControls.SqlDataSource> and <xref:System.Web.UI.WebControls.AccessDataSource> controls.      > [!NOTE] >  The <xref:System.Web.UI.DataSourceControl> class&quot;s default implementation, which is called by this interface method, returns `null`. If you extend the <xref:System.Web.UI.DataSourceControl> class, override the <xref:System.Web.UI.DataSourceControl.GetView%2A> method to return the specified <xref:System.Web.UI.DataSourceView> object."
  syntax:
    content: System.Web.UI.DataSourceView IDataSource.GetView (string viewName);
    parameters:
    - id: viewName
      type: System.String
      description: "The name of the <xref href=&quot;System.Web.UI.DataSourceView&quot;></xref> to retrieve. In data source controls that support only one view, such as <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;></xref>, this parameter is ignored."
    return:
      type: System.Web.UI.DataSourceView
      description: "Returns the named <xref href=&quot;System.Web.UI.DataSourceView&quot;></xref> associated with the <xref href=&quot;System.Web.UI.DataSourceControl&quot;></xref>."
  overload: System.Web.UI.DataSourceControl.System#Web#UI#IDataSource#GetView*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>viewName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.DataSourceControl.System#Web#UI#IDataSource#GetViewNames
  id: System#Web#UI#IDataSource#GetViewNames
  isEii: true
  parent: System.Web.UI.DataSourceControl
  langs:
  - csharp
  name: System.Web.UI.IDataSource.GetViewNames()
  nameWithType: DataSourceControl.System.Web.UI.IDataSource.GetViewNames()
  fullName: System.Web.UI.DataSourceControl.System.Web.UI.IDataSource.GetViewNames()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gets a collection of names, representing the list of <xref href=&quot;System.Web.UI.DataSourceView&quot;></xref> objects associated with the <xref href=&quot;System.Web.UI.DataSourceControl&quot;></xref> control."
  remarks: >-
    > [!NOTE]

    >  The <xref:System.Web.UI.DataSourceControl> class's default implementation, which is called by this interface method, returns `null`, which indicates that only one view is supported. If you extend the <xref:System.Web.UI.DataSourceControl> class, override the <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> method to return a collection of view names. A name can be passed to the <xref:System.Web.UI.DataSourceControl.GetView%2A> method to return a <xref:System.Web.UI.DataSourceView> object.
  syntax:
    content: System.Collections.ICollection IDataSource.GetViewNames ();
    parameters: []
    return:
      type: System.Collections.ICollection
      description: "An <xref:System.Collections.ICollection> that contains the names of the <xref href=&quot;System.Web.UI.DataSourceView&quot;></xref> objects associated with the <xref href=&quot;System.Web.UI.DataSourceControl&quot;></xref>."
  overload: System.Web.UI.DataSourceControl.System#Web#UI#IDataSource#GetViewNames*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataSourceControl.Visible
  id: Visible
  parent: System.Web.UI.DataSourceControl
  langs:
  - csharp
  name: Visible
  nameWithType: DataSourceControl.Visible
  fullName: System.Web.UI.DataSourceControl.Visible
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gets or sets a value indicating whether the control is visually displayed."
  remarks: "Because the <xref:System.Web.UI.DataSourceControl> control has no visual rendering, the Visible property always returns `false`."
  syntax:
    content: public override bool Visible { get; set; }
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.DataSourceControl.Visible*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "An attempt was made to set the value of the Visible property."
  platform:
  - net462
references:
- uid: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.Control
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.UI.DataSourceControl.#ctor
  parent: System.Web.UI.DataSourceControl
  isExternal: false
  name: DataSourceControl()
  nameWithType: DataSourceControl.DataSourceControl()
  fullName: System.Web.UI.DataSourceControl.DataSourceControl()
- uid: System.Web.UI.DataSourceControl.ApplyStyleSheetSkin(System.Web.UI.Page)
  parent: System.Web.UI.DataSourceControl
  isExternal: false
  name: ApplyStyleSheetSkin(Page)
  nameWithType: DataSourceControl.ApplyStyleSheetSkin(Page)
  fullName: System.Web.UI.DataSourceControl.ApplyStyleSheetSkin(Page)
- uid: System.Web.UI.Page
  parent: System.Web.UI
  isExternal: false
  name: Page
  nameWithType: Page
  fullName: System.Web.UI.Page
- uid: System.Web.UI.DataSourceControl.ClientID
  parent: System.Web.UI.DataSourceControl
  isExternal: false
  name: ClientID
  nameWithType: DataSourceControl.ClientID
  fullName: System.Web.UI.DataSourceControl.ClientID
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.DataSourceControl.ClientIDMode
  parent: System.Web.UI.DataSourceControl
  isExternal: false
  name: ClientIDMode
  nameWithType: DataSourceControl.ClientIDMode
  fullName: System.Web.UI.DataSourceControl.ClientIDMode
- uid: System.Web.UI.ClientIDMode
  parent: System.Web.UI
  isExternal: false
  name: ClientIDMode
  nameWithType: ClientIDMode
  fullName: System.Web.UI.ClientIDMode
- uid: System.Web.UI.DataSourceControl.Controls
  parent: System.Web.UI.DataSourceControl
  isExternal: false
  name: Controls
  nameWithType: DataSourceControl.Controls
  fullName: System.Web.UI.DataSourceControl.Controls
- uid: System.Web.UI.ControlCollection
  parent: System.Web.UI
  isExternal: false
  name: ControlCollection
  nameWithType: ControlCollection
  fullName: System.Web.UI.ControlCollection
- uid: System.Web.UI.DataSourceControl.CreateControlCollection
  parent: System.Web.UI.DataSourceControl
  isExternal: false
  name: CreateControlCollection()
  nameWithType: DataSourceControl.CreateControlCollection()
  fullName: System.Web.UI.DataSourceControl.CreateControlCollection()
- uid: System.Web.UI.DataSourceControl.EnableTheming
  parent: System.Web.UI.DataSourceControl
  isExternal: false
  name: EnableTheming
  nameWithType: DataSourceControl.EnableTheming
  fullName: System.Web.UI.DataSourceControl.EnableTheming
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.DataSourceControl.FindControl(System.String)
  parent: System.Web.UI.DataSourceControl
  isExternal: false
  name: FindControl(String)
  nameWithType: DataSourceControl.FindControl(String)
  fullName: System.Web.UI.DataSourceControl.FindControl(String)
- uid: System.Web.UI.DataSourceControl.Focus
  parent: System.Web.UI.DataSourceControl
  isExternal: false
  name: Focus()
  nameWithType: DataSourceControl.Focus()
  fullName: System.Web.UI.DataSourceControl.Focus()
- uid: System.Web.UI.DataSourceControl.GetView(System.String)
  parent: System.Web.UI.DataSourceControl
  isExternal: false
  name: GetView(String)
  nameWithType: DataSourceControl.GetView(String)
  fullName: System.Web.UI.DataSourceControl.GetView(String)
- uid: System.Web.UI.DataSourceView
  parent: System.Web.UI
  isExternal: false
  name: DataSourceView
  nameWithType: DataSourceView
  fullName: System.Web.UI.DataSourceView
- uid: System.Web.UI.DataSourceControl.GetViewNames
  parent: System.Web.UI.DataSourceControl
  isExternal: false
  name: GetViewNames()
  nameWithType: DataSourceControl.GetViewNames()
  fullName: System.Web.UI.DataSourceControl.GetViewNames()
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Web.UI.DataSourceControl.HasControls
  parent: System.Web.UI.DataSourceControl
  isExternal: false
  name: HasControls()
  nameWithType: DataSourceControl.HasControls()
  fullName: System.Web.UI.DataSourceControl.HasControls()
- uid: System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent(System.EventArgs)
  parent: System.Web.UI.DataSourceControl
  isExternal: false
  name: RaiseDataSourceChangedEvent(EventArgs)
  nameWithType: DataSourceControl.RaiseDataSourceChangedEvent(EventArgs)
  fullName: System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.DataSourceControl.RenderControl(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.DataSourceControl
  isExternal: false
  name: RenderControl(HtmlTextWriter)
  nameWithType: DataSourceControl.RenderControl(HtmlTextWriter)
  fullName: System.Web.UI.DataSourceControl.RenderControl(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.DataSourceControl.SkinID
  parent: System.Web.UI.DataSourceControl
  isExternal: false
  name: SkinID
  nameWithType: DataSourceControl.SkinID
  fullName: System.Web.UI.DataSourceControl.SkinID
- uid: System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#ContainsListCollection
  parent: System.Web.UI.DataSourceControl
  isExternal: false
  name: System.ComponentModel.IListSource.ContainsListCollection
  nameWithType: DataSourceControl.System.ComponentModel.IListSource.ContainsListCollection
  fullName: System.Web.UI.DataSourceControl.System.ComponentModel.IListSource.ContainsListCollection
- uid: System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#GetList
  parent: System.Web.UI.DataSourceControl
  isExternal: false
  name: System.ComponentModel.IListSource.GetList()
  nameWithType: DataSourceControl.System.ComponentModel.IListSource.GetList()
  fullName: System.Web.UI.DataSourceControl.System.ComponentModel.IListSource.GetList()
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Web.UI.DataSourceControl.System#Web#UI#IDataSource#GetView(System.String)
  parent: System.Web.UI.DataSourceControl
  isExternal: false
  name: System.Web.UI.IDataSource.GetView(String)
  nameWithType: DataSourceControl.System.Web.UI.IDataSource.GetView(String)
  fullName: System.Web.UI.DataSourceControl.System.Web.UI.IDataSource.GetView(String)
- uid: System.Web.UI.DataSourceControl.System#Web#UI#IDataSource#GetViewNames
  parent: System.Web.UI.DataSourceControl
  isExternal: false
  name: System.Web.UI.IDataSource.GetViewNames()
  nameWithType: DataSourceControl.System.Web.UI.IDataSource.GetViewNames()
  fullName: System.Web.UI.DataSourceControl.System.Web.UI.IDataSource.GetViewNames()
- uid: System.Web.UI.DataSourceControl.Visible
  parent: System.Web.UI.DataSourceControl
  isExternal: false
  name: Visible
  nameWithType: DataSourceControl.Visible
  fullName: System.Web.UI.DataSourceControl.Visible
- uid: System.Web.UI.DataSourceControl.#ctor*
  parent: System.Web.UI.DataSourceControl
  isExternal: false
  name: DataSourceControl
  nameWithType: DataSourceControl.DataSourceControl
- uid: System.Web.UI.DataSourceControl.ApplyStyleSheetSkin*
  parent: System.Web.UI.DataSourceControl
  isExternal: false
  name: ApplyStyleSheetSkin
  nameWithType: DataSourceControl.ApplyStyleSheetSkin
- uid: System.Web.UI.DataSourceControl.ClientID*
  parent: System.Web.UI.DataSourceControl
  isExternal: false
  name: ClientID
  nameWithType: DataSourceControl.ClientID
- uid: System.Web.UI.DataSourceControl.ClientIDMode*
  parent: System.Web.UI.DataSourceControl
  isExternal: false
  name: ClientIDMode
  nameWithType: DataSourceControl.ClientIDMode
- uid: System.Web.UI.DataSourceControl.Controls*
  parent: System.Web.UI.DataSourceControl
  isExternal: false
  name: Controls
  nameWithType: DataSourceControl.Controls
- uid: System.Web.UI.DataSourceControl.CreateControlCollection*
  parent: System.Web.UI.DataSourceControl
  isExternal: false
  name: CreateControlCollection
  nameWithType: DataSourceControl.CreateControlCollection
- uid: System.Web.UI.DataSourceControl.EnableTheming*
  parent: System.Web.UI.DataSourceControl
  isExternal: false
  name: EnableTheming
  nameWithType: DataSourceControl.EnableTheming
- uid: System.Web.UI.DataSourceControl.FindControl*
  parent: System.Web.UI.DataSourceControl
  isExternal: false
  name: FindControl
  nameWithType: DataSourceControl.FindControl
- uid: System.Web.UI.DataSourceControl.Focus*
  parent: System.Web.UI.DataSourceControl
  isExternal: false
  name: Focus
  nameWithType: DataSourceControl.Focus
- uid: System.Web.UI.DataSourceControl.GetView*
  parent: System.Web.UI.DataSourceControl
  isExternal: false
  name: GetView
  nameWithType: DataSourceControl.GetView
- uid: System.Web.UI.DataSourceControl.GetViewNames*
  parent: System.Web.UI.DataSourceControl
  isExternal: false
  name: GetViewNames
  nameWithType: DataSourceControl.GetViewNames
- uid: System.Web.UI.DataSourceControl.HasControls*
  parent: System.Web.UI.DataSourceControl
  isExternal: false
  name: HasControls
  nameWithType: DataSourceControl.HasControls
- uid: System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent*
  parent: System.Web.UI.DataSourceControl
  isExternal: false
  name: RaiseDataSourceChangedEvent
  nameWithType: DataSourceControl.RaiseDataSourceChangedEvent
- uid: System.Web.UI.DataSourceControl.RenderControl*
  parent: System.Web.UI.DataSourceControl
  isExternal: false
  name: RenderControl
  nameWithType: DataSourceControl.RenderControl
- uid: System.Web.UI.DataSourceControl.SkinID*
  parent: System.Web.UI.DataSourceControl
  isExternal: false
  name: SkinID
  nameWithType: DataSourceControl.SkinID
- uid: System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#ContainsListCollection*
  parent: System.Web.UI.DataSourceControl
  isExternal: false
  name: System.ComponentModel.IListSource.ContainsListCollection
  nameWithType: DataSourceControl.System.ComponentModel.IListSource.ContainsListCollection
- uid: System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#GetList*
  parent: System.Web.UI.DataSourceControl
  isExternal: false
  name: System.ComponentModel.IListSource.GetList
  nameWithType: DataSourceControl.System.ComponentModel.IListSource.GetList
- uid: System.Web.UI.DataSourceControl.System#Web#UI#IDataSource#GetView*
  parent: System.Web.UI.DataSourceControl
  isExternal: false
  name: System.Web.UI.IDataSource.GetView
  nameWithType: DataSourceControl.System.Web.UI.IDataSource.GetView
- uid: System.Web.UI.DataSourceControl.System#Web#UI#IDataSource#GetViewNames*
  parent: System.Web.UI.DataSourceControl
  isExternal: false
  name: System.Web.UI.IDataSource.GetViewNames
  nameWithType: DataSourceControl.System.Web.UI.IDataSource.GetViewNames
- uid: System.Web.UI.DataSourceControl.Visible*
  parent: System.Web.UI.DataSourceControl
  isExternal: false
  name: Visible
  nameWithType: DataSourceControl.Visible
