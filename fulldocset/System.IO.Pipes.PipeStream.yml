### YamlMime:ManagedReference
items:
- uid: System.IO.Pipes.PipeStream
  id: PipeStream
  children:
  - System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)
  - System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)
  - System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Pipes.PipeStream.CanRead
  - System.IO.Pipes.PipeStream.CanSeek
  - System.IO.Pipes.PipeStream.CanWrite
  - System.IO.Pipes.PipeStream.CheckPipePropertyOperations
  - System.IO.Pipes.PipeStream.CheckReadOperations
  - System.IO.Pipes.PipeStream.CheckWriteOperations
  - System.IO.Pipes.PipeStream.Dispose(System.Boolean)
  - System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)
  - System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)
  - System.IO.Pipes.PipeStream.Flush
  - System.IO.Pipes.PipeStream.GetAccessControl
  - System.IO.Pipes.PipeStream.InBufferSize
  - System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)
  - System.IO.Pipes.PipeStream.IsAsync
  - System.IO.Pipes.PipeStream.IsConnected
  - System.IO.Pipes.PipeStream.IsHandleExposed
  - System.IO.Pipes.PipeStream.IsMessageComplete
  - System.IO.Pipes.PipeStream.Length
  - System.IO.Pipes.PipeStream.OutBufferSize
  - System.IO.Pipes.PipeStream.Position
  - System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.IO.Pipes.PipeStream.ReadByte
  - System.IO.Pipes.PipeStream.ReadMode
  - System.IO.Pipes.PipeStream.SafePipeHandle
  - System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)
  - System.IO.Pipes.PipeStream.SetLength(System.Int64)
  - System.IO.Pipes.PipeStream.TransmissionMode
  - System.IO.Pipes.PipeStream.WaitForPipeDrain
  - System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.IO.Pipes.PipeStream.WriteByte(System.Byte)
  langs:
  - csharp
  name: PipeStream
  nameWithType: PipeStream
  fullName: System.IO.Pipes.PipeStream
  type: Class
  summary: "Expõe um <xref:System.IO.Stream>objeto em torno de um pipe que suporte de pipes nomeados e anónimos.</xref:System.IO.Stream>"
  remarks: "A classe de PipeStream fornece a classe base para operações de pipes nomeados e anónimo no .NET Framework. Utilize o <xref:System.IO.Pipes.NamedPipeServerStream>e <xref:System.IO.Pipes.NamedPipeClientStream>classes para operações de pipe nomeado.</xref:System.IO.Pipes.NamedPipeClientStream> </xref:System.IO.Pipes.NamedPipeServerStream> Utilize o <xref:System.IO.Pipes.AnonymousPipeServerStream>e <xref:System.IO.Pipes.AnonymousPipeClientStream>classes para operações de pipe anónimo.</xref:System.IO.Pipes.AnonymousPipeClientStream> </xref:System.IO.Pipes.AnonymousPipeServerStream>       Para obter mais informações sobre como pipes, consulte [Pipes](~/add/includes/ajax-current-ext-md.md). Para obter um exemplo de pipes anónimos, consulte [como: utilizar Pipes anónimos para a comunicação de Interprocess Local](~/add/includes/ajax-current-ext-md.md). Para obter um exemplo de pipes nomeados, consulte [como: utilizar Pipes nomeados para a comunicação de rede de Interprocess](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: 'public abstract class PipeStream : System.IO.Stream'
  inheritance:
  - System.IO.Stream
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)
  id: '#ctor(System.IO.Pipes.PipeDirection,System.Int32)'
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: PipeStream(PipeDirection,Int32)
  nameWithType: PipeStream.PipeStream(PipeDirection,Int32)
  fullName: System.IO.Pipes.PipeStream.PipeStream(PipeDirection,Int32)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Inicializa uma nova instância do <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> classe utilizando especificado <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref> valor e a memória intermédia de tamanho."
  remarks: "Este construtor utiliza um modo de transmissão de pipe de <xref:System.IO.Pipes.PipeTransmissionMode>.</xref:System.IO.Pipes.PipeTransmissionMode>"
  syntax:
    content: protected PipeStream (System.IO.Pipes.PipeDirection direction, int bufferSize);
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "Um do <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref> valores que indica a direcção do objeto de pipe."
    - id: bufferSize
      type: System.Int32
      description: "Um positivos <xref:System.Int32>valor maior que ou igual a 0 indica o tamanho de memória intermédia.</xref:System.Int32>"
  overload: System.IO.Pipes.PipeStream.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>direction</code>Não é um <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref> valor.       - ou - <code>bufferSize</code> é inferior a 0."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)
  id: '#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)'
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: PipeStream(PipeDirection,PipeTransmissionMode,Int32)
  nameWithType: PipeStream.PipeStream(PipeDirection,PipeTransmissionMode,Int32)
  fullName: System.IO.Pipes.PipeStream.PipeStream(PipeDirection,PipeTransmissionMode,Int32)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Inicializa uma nova instância do <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> classe utilizando especificado <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref>, <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref>e a memória intermédia de tamanho."
  syntax:
    content: protected PipeStream (System.IO.Pipes.PipeDirection direction, System.IO.Pipes.PipeTransmissionMode transmissionMode, int outBufferSize);
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "Um do <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref> valores que indica a direcção do objeto de pipe."
    - id: transmissionMode
      type: System.IO.Pipes.PipeTransmissionMode
      description: "Um do <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref> valores que indica o modo de transmissão do objeto de pipe."
    - id: outBufferSize
      type: System.Int32
      description: "Um positivos <xref:System.Int32>valor maior que ou igual a 0 indica o tamanho de memória intermédia.</xref:System.Int32>"
  overload: System.IO.Pipes.PipeStream.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>direction</code>Não é um <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref> valor.       - ou - <code>transmissionMode</code> não é um <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref> valor.       - ou - <code>bufferSize</code> é inferior a 0."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: PipeStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.IO.Pipes.PipeStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Começa uma operação de leitura assíncrona."
  remarks: "Transmita o devolvido <xref:System.IAsyncResult>de objeto para o <xref:System.IO.Pipes.PipeStream.EndRead%2A>método para determinar o número de bytes foram lidos e para libertar recursos do sistema operativo utilizados para ler.</xref:System.IO.Pipes.PipeStream.EndRead%2A> </xref:System.IAsyncResult> <xref:System.IO.Pipes.PipeStream.EndRead%2A>tem de ser chamado uma vez para cada chamada BeginRead.</xref:System.IO.Pipes.PipeStream.EndRead%2A> Isto pode ser feito no mesmo código chamado BeginRead ou numa chamada de retorno que é transmitida ao BeginRead.       Utilize o <xref:System.IO.Pipes.PipeStream.CanRead%2A>propriedade para determinar se atual <xref:System.IO.Pipes.PipeStream>objeto suporta operações de leitura.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.PipeStream.CanRead%2A>       Se o pipe está fechado ou um argumento inválido foi transmitido para BeginRead, as exceções adequadas são geradas imediatamente. Ocorrem erros ocorridos durante um pedido de leitura assíncrono no thread de conjunto de threads que está a efetuar o pedido. As exceções são geradas quando o código chama o <xref:System.IO.Pipes.PipeStream.EndRead%2A>método.</xref:System.IO.Pipes.PipeStream.EndRead%2A>"
  syntax:
    content: public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "A memória intermédia para ler os dados em."
    - id: offset
      type: System.Int32
      description: "O deslocamento de byte no `buffer` no qual pretende começar a ler."
    - id: count
      type: System.Int32
      description: "O número máximo de bytes a ler."
    - id: callback
      type: System.AsyncCallback
      description: "O método a chamar quando a operação de leitura a assíncrona está concluído."
    - id: state
      type: System.Object
      description: "Um objeto de fornecidos pelo utilizador que distingue este pedido de leitura assíncrono específico de outros pedidos."
    return:
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>objecto que faça referência a assíncrona de leitura.</xref:System.IAsyncResult>"
  overload: System.IO.Pipes.PipeStream.BeginRead*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>é menor que 0.       - ou - <code>count</code> é inferior a 0."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>count</code>é maior do que o número de bytes disponíveis no <code>buffer</code>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O pipe está fechado."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O pipe não suporta operações de leitura."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O pipe está desligado, a aguardar para estabelecer ligação ou o identificador não foi definido."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O pipe está danificado ou Ocorreu um erro de e/s outro."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: PipeStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.IO.Pipes.PipeStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Começa uma operação de escrita assíncrona."
  remarks: "<xref:System.IO.Pipes.PipeStream.EndWrite%2A>tem de ser chamado uma vez para cada chamada BeginWrite.</xref:System.IO.Pipes.PipeStream.EndWrite%2A> Isto pode ser feito no mesmo código chamado BeginWrite ou numa chamada de retorno que é transmitida ao BeginWrite.       Utilize o <xref:System.IO.Pipes.PipeStream.CanWrite%2A>propriedade para determinar se atual <xref:System.IO.Pipes.PipeStream>objeto suporta operações de escrita.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.PipeStream.CanWrite%2A>       Se o pipe está fechado ou um argumento inválido foi transmitido para BeginWrite, as exceções adequadas são geradas imediatamente. Ocorrem erros ocorridos durante um pedido de escrita assíncrona no thread de conjunto de threads que está a efetuar o pedido. As exceções são geradas quando o código chama o <xref:System.IO.Pipes.PipeStream.EndWrite%2A>método.</xref:System.IO.Pipes.PipeStream.EndWrite%2A>"
  syntax:
    content: public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "A memória intermédia que contém os dados a escrever o fluxo actual."
    - id: offset
      type: System.Int32
      description: "O deslocamento de byte baseado em zero no `buffer` no qual pretende começar a copiar bytes no fluxo atual."
    - id: count
      type: System.Int32
      description: "O número máximo de bytes para escrita."
    - id: callback
      type: System.AsyncCallback
      description: "O método a chamar quando a operação de escrita assíncrona foi concluída."
    - id: state
      type: System.Object
      description: "Um objeto de fornecidos pelo utilizador que distingue este pedido de escrita assíncrona específico de outros pedidos."
    return:
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>objeto que faça referência a operação de escrita assíncrona.</xref:System.IAsyncResult>"
  overload: System.IO.Pipes.PipeStream.BeginWrite*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>é menor que 0.       - ou - <code>count</code> é inferior a 0."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>count</code>é maior do que o número de bytes disponíveis no <code>buffer</code>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O pipe está fechado."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O pipe não suporta operações de escrita."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O pipe está desligado, a aguardar para estabelecer ligação ou o identificador não foi definido."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O pipe está danificado ou Ocorreu um erro de e/s outro."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.CanRead
  id: CanRead
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: CanRead
  nameWithType: PipeStream.CanRead
  fullName: System.IO.Pipes.PipeStream.CanRead
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Obtém um valor que indica se o fluxo actual suporta operações de leitura."
  remarks: "Se o <xref:System.IO.Pipes.PipeStream>objeto está fechado, esta propriedade devolve `false`.</xref:System.IO.Pipes.PipeStream>"
  syntax:
    content: public override bool CanRead { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o fluxo suporta operações; de leitura caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Pipes.PipeStream.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.CanSeek
  id: CanSeek
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: CanSeek
  nameWithType: PipeStream.CanSeek
  fullName: System.IO.Pipes.PipeStream.CanSeek
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Obtém um valor que indica se o fluxo de atual suporta operações de pesquisa."
  remarks: "Se o <xref:System.IO.Pipes.PipeStream>objeto está fechado, esta propriedade devolve `false`.</xref:System.IO.Pipes.PipeStream>"
  syntax:
    content: public override bool CanSeek { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>em todos os casos."
  overload: System.IO.Pipes.PipeStream.CanSeek*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.CanWrite
  id: CanWrite
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: CanWrite
  nameWithType: PipeStream.CanWrite
  fullName: System.IO.Pipes.PipeStream.CanWrite
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Obtém um valor que indica se o fluxo actual suporta operações de escrita."
  remarks: "Se o <xref:System.IO.Pipes.PipeStream>objeto está fechado, esta propriedade devolve `false`.</xref:System.IO.Pipes.PipeStream>"
  syntax:
    content: public override bool CanWrite { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o fluxo de suporte operações de escrita; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Pipes.PipeStream.CanWrite*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.CheckPipePropertyOperations
  id: CheckPipePropertyOperations
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: CheckPipePropertyOperations()
  nameWithType: PipeStream.CheckPipePropertyOperations()
  fullName: System.IO.Pipes.PipeStream.CheckPipePropertyOperations()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Verifica se o pipe está num Estado adequado para obter ou definir as propriedades."
  syntax:
    content: protected virtual void CheckPipePropertyOperations ();
    parameters: []
  overload: System.IO.Pipes.PipeStream.CheckPipePropertyOperations*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.CheckReadOperations
  id: CheckReadOperations
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: CheckReadOperations()
  nameWithType: PipeStream.CheckReadOperations()
  fullName: System.IO.Pipes.PipeStream.CheckReadOperations()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Verifica se o pipe está num estado ligado para operações de leitura."
  syntax:
    content: protected void CheckReadOperations ();
    parameters: []
  overload: System.IO.Pipes.PipeStream.CheckReadOperations*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.CheckWriteOperations
  id: CheckWriteOperations
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: CheckWriteOperations()
  nameWithType: PipeStream.CheckWriteOperations()
  fullName: System.IO.Pipes.PipeStream.CheckWriteOperations()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Verifica se o pipe está num estado ligado para operações de escrita."
  syntax:
    content: protected void CheckWriteOperations ();
    parameters: []
  overload: System.IO.Pipes.PipeStream.CheckWriteOperations*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: PipeStream.Dispose(Boolean)
  fullName: System.IO.Pipes.PipeStream.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Liberta os recursos não geridos utilizados pelo <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> classe e opcionalmente liberta os recursos geridos."
  remarks: "Este método é denominado pelo público <xref:System.ComponentModel.Component.Dispose%2A>método e o <xref:System.Object.Finalize%2A>método.</xref:System.Object.Finalize%2A> </xref:System.ComponentModel.Component.Dispose%2A> <xref:System.ComponentModel.Component.Dispose%2A>Invoca o método de Dispose protegido com o `disposing` parâmetro definido como `true`.</xref:System.ComponentModel.Component.Dispose%2A> <xref:System.Object.Finalize%2A>invoca Dispose com `disposing` definido como `false`.</xref:System.Object.Finalize%2A> Quando é o parâmetro disposing `true`, este método versões retidos por quaisquer objetos geridos de todos os recursos que este <xref:System.IO.Pipes.PipeStream>referências de objeto.</xref:System.IO.Pipes.PipeStream> Este método invoca o método de Dispose de cada objeto referenciado."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para libertar recursos geridos e; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para libertar recursos apenas não geridos."
  overload: System.IO.Pipes.PipeStream.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)
  id: EndRead(System.IAsyncResult)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: EndRead(IAsyncResult)
  nameWithType: PipeStream.EndRead(IAsyncResult)
  fullName: System.IO.Pipes.PipeStream.EndRead(IAsyncResult)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Termina um pedido de leitura assíncrono pendente."
  remarks: "Este método devolve o número de bytes de leitura para a matriz de bytes especificada pela chamada anterior para <xref:System.IO.Pipes.PipeStream.BeginRead%2A>.</xref:System.IO.Pipes.PipeStream.BeginRead%2A>       Transmita o devolvido <xref:System.IAsyncResult>objeto para o método de EndRead para determinar o número de bytes foram lidos e para libertar recursos do sistema operativo utilizados para ler.</xref:System.IAsyncResult> EndRead tem de ser chamado uma vez para cada chamada <xref:System.IO.Pipes.PipeStream.BeginRead%2A>.</xref:System.IO.Pipes.PipeStream.BeginRead%2A> Isto pode ser feito tem o mesmo código chamado <xref:System.IO.Pipes.PipeStream.BeginRead%2A>ou numa chamada de retorno que é transferida para <xref:System.IO.Pipes.PipeStream.BeginRead%2A>.</xref:System.IO.Pipes.PipeStream.BeginRead%2A> </xref:System.IO.Pipes.PipeStream.BeginRead%2A>       Utilize o <xref:System.IO.Pipes.PipeStream.CanRead%2A>propriedade para determinar se atual <xref:System.IO.Pipes.PipeStream>objeto suporta operações de leitura.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.PipeStream.CanRead%2A>       Se o pipe está fechado ou um argumento inválido foi transmitido para <xref:System.IO.Pipes.PipeStream.BeginRead%2A>, as exceções adequadas são geradas imediatamente.</xref:System.IO.Pipes.PipeStream.BeginRead%2A> Ocorrem erros ocorridos durante um pedido de leitura assíncrono no thread de conjunto de threads que está a efetuar o pedido. As exceções são geradas quando o código chama o método EndRead."
  syntax:
    content: public override int EndRead (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "A referência ao pedido assíncrono pendente."
    return:
      type: System.Int32
      description: "O número de bytes que foram lidos. Um valor de retorno de 0 indica que o fim da sequência (pipe foi fechado)."
  overload: System.IO.Pipes.PipeStream.EndRead*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>não teve um <xref:System.IO.Pipes.PipeStream.BeginRead*> método no fluxo atual."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O fluxo está fechado ou Ocorreu um erro interno."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)
  id: EndWrite(System.IAsyncResult)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: EndWrite(IAsyncResult)
  nameWithType: PipeStream.EndWrite(IAsyncResult)
  fullName: System.IO.Pipes.PipeStream.EndWrite(IAsyncResult)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Termina um pedido de escrita assíncrona pendente."
  remarks: "EndWrite tem de ser chamado uma vez para cada chamada <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>.</xref:System.IO.Pipes.PipeStream.BeginWrite%2A> Isto pode ser feito tem o mesmo código chamado <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>ou numa chamada de retorno que é transferida para <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>.</xref:System.IO.Pipes.PipeStream.BeginWrite%2A> </xref:System.IO.Pipes.PipeStream.BeginWrite%2A>       Utilize o <xref:System.IO.Pipes.PipeStream.CanWrite%2A>propriedade para determinar se atual <xref:System.IO.Pipes.PipeStream>objeto suporta operações de escrita.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.PipeStream.CanWrite%2A>       Se o pipe está fechado ou um argumento inválido foi transmitido para <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>, as exceções adequadas são geradas imediatamente.</xref:System.IO.Pipes.PipeStream.BeginWrite%2A> Ocorrem erros ocorridos durante um pedido de escrita assíncrona no thread de conjunto de threads que está a efetuar o pedido. As exceções são geradas quando o código EndWrite de chamadas de método."
  syntax:
    content: public override void EndWrite (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "A referência ao pedido assíncrono pendente."
  overload: System.IO.Pipes.PipeStream.EndWrite*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>não teve um <xref:System.IO.Pipes.PipeStream.BeginWrite*> método no fluxo atual."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O fluxo está fechado ou Ocorreu um erro interno."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.Flush
  id: Flush
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Flush()
  nameWithType: PipeStream.Flush()
  fullName: System.IO.Pipes.PipeStream.Flush()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Limpa a memória intermédia para o fluxo actual e faz com que todos os dados colocados em memória intermédia para serem escritos para o dispositivo subjacente."
  remarks: "O método de remoção não é suportado a <xref:System.IO.Pipes.PipeStream>classe e não nothing quando é chamado.</xref:System.IO.Pipes.PipeStream>"
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.IO.Pipes.PipeStream.Flush*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O pipe está fechado."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O pipe não suporta operações de escrita."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O pipe está danificado ou Ocorreu um erro de e/s outro."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.GetAccessControl
  id: GetAccessControl
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: GetAccessControl()
  nameWithType: PipeStream.GetAccessControl()
  fullName: System.IO.Pipes.PipeStream.GetAccessControl()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Obtém um <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> objecto que encapsula as entradas de lista (ACL) de controlo de acesso para o pipe descrita através de atual <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> objeto."
  remarks: 'Uma lista de controlo de acesso (ACL) descreve indivíduos e/ou grupos que tenham ou não tem, direitos para executar as ações específicas num ficheiro especificado. Para obter mais informações, consulte [como: Adicionar ou remover entradas de lista de controlo de acesso](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: public System.IO.Pipes.PipeSecurity GetAccessControl ();
    parameters: []
    return:
      type: System.IO.Pipes.PipeSecurity
      description: "A <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> objecto que encapsula as entradas de lista (ACL) de controlo de acesso para o pipe descrita através de atual <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> objeto."
  overload: System.IO.Pipes.PipeStream.GetAccessControl*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O pipe está fechado."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Falha ao chamar subjacente para definir as informações de segurança."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Falha ao chamar subjacente para definir as informações de segurança."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Falha ao chamar subjacente para definir as informações de segurança."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.InBufferSize
  id: InBufferSize
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: InBufferSize
  nameWithType: PipeStream.InBufferSize
  fullName: System.IO.Pipes.PipeStream.InBufferSize
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Obtém o tamanho, em bytes, da memória intermédia entrada para um pipe."
  remarks: "Se InBufferSize for 0, o tamanho da memória intermédia é atribuído conforme necessário."
  syntax:
    content: public virtual int InBufferSize { get; }
    return:
      type: System.Int32
      description: "Um valor de número inteiro que representa o tamanho de memória intermédia de entrada, em bytes."
  overload: System.IO.Pipes.PipeStream.InBufferSize*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O fluxo é ilegível."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O pipe está a aguardar para estabelecer a ligação."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O pipe está danificado ou Ocorreu um erro de e/s outro."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)
  id: InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: InitializeHandle(SafePipeHandle,Boolean,Boolean)
  nameWithType: PipeStream.InitializeHandle(SafePipeHandle,Boolean,Boolean)
  fullName: System.IO.Pipes.PipeStream.InitializeHandle(SafePipeHandle,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Inicializa uma <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> objeto a partir do especificado <xref href=&quot;Microsoft.Win32.SafeHandles.SafePipeHandle&quot;> </xref> objeto."
  remarks: "Se o pipe está num estado ligado, este método também define o <xref:System.IO.Pipes.PipeStream.IsConnected%2A>propriedade `true`.</xref:System.IO.Pipes.PipeStream.IsConnected%2A>"
  syntax:
    content: protected void InitializeHandle (Microsoft.Win32.SafeHandles.SafePipeHandle handle, bool isExposed, bool isAsync);
    parameters:
    - id: handle
      type: Microsoft.Win32.SafeHandles.SafePipeHandle
      description: "O <xref href=&quot;Microsoft.Win32.SafeHandles.SafePipeHandle&quot;> </xref> objeto do pipe ao inicializar."
    - id: isExposed
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para expor o identificador; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: isAsync
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para indicar que o identificador foi aberto de forma assíncrona; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Pipes.PipeStream.InitializeHandle*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Não é possível vincular um identificador de pipe."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.IsAsync
  id: IsAsync
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: IsAsync
  nameWithType: PipeStream.IsAsync
  fullName: System.IO.Pipes.PipeStream.IsAsync
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Obtém um valor que indica se um <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> objeto foi aberto de forma assíncrona ou síncrona."
  remarks: "Esta propriedade permite que o código utilizar o <xref:System.IO.Pipes.PipeStream.SafePipeHandle%2A>propriedade corretamente.</xref:System.IO.Pipes.PipeStream.SafePipeHandle%2A>"
  syntax:
    content: public bool IsAsync { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> objeto foi aberto no modo assíncrono; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Pipes.PipeStream.IsAsync*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.IsConnected
  id: IsConnected
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: IsConnected
  nameWithType: PipeStream.IsConnected
  fullName: System.IO.Pipes.PipeStream.IsConnected
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Obtém ou define um valor que indica se um <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> objecto está ligado."
  remarks: "Devolve de propriedade IsConnected `true` apenas se o <xref:System.IO.Pipes.PipeStream>objecto está ligado.</xref:System.IO.Pipes.PipeStream> Se esta propriedade devolve `false`, o pipe pode ser a aguardar para ligar, ou pode ser desligado, fechado ou quebrado."
  syntax:
    content: public bool IsConnected { get; protected set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> objeto é ligado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Pipes.PipeStream.IsConnected*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.IsHandleExposed
  id: IsHandleExposed
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: IsHandleExposed
  nameWithType: PipeStream.IsHandleExposed
  fullName: System.IO.Pipes.PipeStream.IsHandleExposed
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Obtém um valor que indica se um identificador um <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> objeto está exposto."
  remarks: "O valor desta propriedade é definido quando obter um identificador de pipe que é encapsulado por atual <xref:System.IO.Pipes.PipeStream>objeto.</xref:System.IO.Pipes.PipeStream>"
  syntax:
    content: protected bool IsHandleExposed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se um identificador de <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> objeto é exposto; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Pipes.PipeStream.IsHandleExposed*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.IsMessageComplete
  id: IsMessageComplete
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: IsMessageComplete
  nameWithType: PipeStream.IsMessageComplete
  fullName: System.IO.Pipes.PipeStream.IsMessageComplete
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Obtém um valor que indica se há mais dados na mensagem devolvida pela operação de leitura mais recente."
  remarks: "Esta propriedade é relevante se <xref:System.IO.Pipes.PipeStream.ReadMode%2A>propriedade foi definida para <xref:System.IO.Pipes.PipeTransmissionMode>a chamada mais recente ou <xref:System.IO.Pipes.PipeStream.Read%2A> <xref:System.IO.Pipes.PipeStream.EndRead%2A>.</xref:System.IO.Pipes.PipeStream.EndRead%2A> o pipe</xref:System.IO.Pipes.PipeStream.Read%2A> </xref:System.IO.Pipes.PipeTransmissionMode> </xref:System.IO.Pipes.PipeStream.ReadMode%2A>"
  syntax:
    content: public bool IsMessageComplete { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>não se existirem mais nenhum carateres ler na mensagem; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Pipes.PipeStream.IsMessageComplete*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O pipe não está ligado.       - ou - o identificador de pipe não foi definido.       - ou - o pipe <xref:System.IO.Pipes.PipeStream.ReadMode*>valor da propriedade não é <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref>.</xref:System.IO.Pipes.PipeStream.ReadMode*>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O pipe está fechado."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.Length
  id: Length
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Length
  nameWithType: PipeStream.Length
  fullName: System.IO.Pipes.PipeStream.Length
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Obtém o comprimento de um fluxo, em bytes."
  remarks: "O <xref:System.IO.Pipes.PipeStream>classe não suporta a propriedade Length.</xref:System.IO.Pipes.PipeStream>"
  syntax:
    content: public override long Length { get; }
    return:
      type: System.Int64
      description: "0 em todos os casos."
  overload: System.IO.Pipes.PipeStream.Length*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Sempre emitida."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.OutBufferSize
  id: OutBufferSize
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: OutBufferSize
  nameWithType: PipeStream.OutBufferSize
  fullName: System.IO.Pipes.PipeStream.OutBufferSize
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Obtém o tamanho, em bytes, da memória intermédia saída para um pipe."
  remarks: "Se OutBufferSize for 0, o tamanho da memória intermédia é atribuído conforme necessário."
  syntax:
    content: public virtual int OutBufferSize { get; }
    return:
      type: System.Int32
      description: "O tamanho de memória intermédia de saída, em bytes."
  overload: System.IO.Pipes.PipeStream.OutBufferSize*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O fluxo é unwriteable."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O pipe está a aguardar para estabelecer a ligação."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O pipe está danificado ou Ocorreu um erro de e/s outro."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.Position
  id: Position
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Position
  nameWithType: PipeStream.Position
  fullName: System.IO.Pipes.PipeStream.Position
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Obtém ou define a posição atual do fluxo de atual."
  remarks: "O <xref:System.IO.Pipes.PipeStream>classe não suporta a propriedade Position.</xref:System.IO.Pipes.PipeStream>"
  syntax:
    content: public override long Position { get; set; }
    return:
      type: System.Int64
      description: "0 em todos os casos."
  overload: System.IO.Pipes.PipeStream.Position*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Sempre emitida."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Read(Byte[],Int32,Int32)
  nameWithType: PipeStream.Read(Byte[],Int32,Int32)
  fullName: System.IO.Pipes.PipeStream.Read(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Lê um bloco de bytes a partir de um fluxo e escreve os dados de uma memória intermédia especificada."
  remarks: "Utilize o <xref:System.IO.Pipes.PipeStream.CanRead%2A>propriedade para determinar se atual <xref:System.IO.Pipes.PipeStream>objeto suporta operações de leitura.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.PipeStream.CanRead%2A>       Chamar o método de leitura bloqueia até `count` bytes são lidas ou é atingido o fim do fluxo. Para operações de leitura assíncrona, consulte <xref:System.IO.Pipes.PipeStream.BeginRead%2A>e <xref:System.IO.Pipes.PipeStream.EndRead%2A>.</xref:System.IO.Pipes.PipeStream.EndRead%2A> </xref:System.IO.Pipes.PipeStream.BeginRead%2A>"
  example:
  - "The following example creates an anonymous pipe client and pipe server. The pipe server uses the Read method to read a series of bytes from the pipe client as a validation code. Both the pipe client and the pipe server are part of the same example. The server portion of the example creates a client process and passes it an anonymous pipe handle as an argument.  \n  \n [!code-cs[System.IO.Pipes.PipeStream#1](~/add/codesnippet/csharp/m-system.io.pipes.pipest_1.cs)]\n [!code-vb[System.IO.Pipes.PipeStream#1](~/add/codesnippet/visualbasic/m-system.io.pipes.pipest_1.vb)]\n [!code-cpp[System.IO.Pipes.PipeStream#1](~/add/codesnippet/cpp/m-system.io.pipes.pipest_1.cpp)]"
  syntax:
    content: public override int Read (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Quando este método devolve, contém a matriz de bytes especificado com os valores entre `offset` e (`offset`  +  `count` - 1) substituído pelos bytes de leitura de origem atual."
    - id: offset
      type: System.Int32
      description: "O deslocamento de byte no `buffer` em que os bytes que são lidos devem ser colocados de matriz."
    - id: count
      type: System.Int32
      description: "O número máximo de bytes a ler."
    return:
      type: System.Int32
      description: "O número total de bytes que são lidos para <code> buffer </code>. Esta situação pode ser inferior ao número de bytes pedido se esse número de bytes não está atualmente disponível, ou 0 se for atingido o fim da sequência."
  overload: System.IO.Pipes.PipeStream.Read*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>é menor que 0.       - ou - <code>count</code> é inferior a 0."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>count</code>é maior do que o número de bytes disponíveis no <code>buffer</code>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O pipe está fechado."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O pipe não suporta operações de leitura."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O pipe está desligado, a aguardar para estabelecer ligação ou o identificador não foi definido."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu a qualquer erro de e/s."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.ReadByte
  id: ReadByte
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: ReadByte()
  nameWithType: PipeStream.ReadByte()
  fullName: System.IO.Pipes.PipeStream.ReadByte()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Lê um byte de um pipe."
  remarks: "Utilize o <xref:System.IO.Pipes.PipeStream.CanRead%2A>propriedade para determinar se atual <xref:System.IO.Pipes.PipeStream>objeto suporta operações de leitura.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.PipeStream.CanRead%2A>"
  syntax:
    content: public override int ReadByte ();
    parameters: []
    return:
      type: System.Int32
      description: "O byte convertido <xref:System.Int32>, ou -1 indica o fim da sequência (pipe foi fechado).</xref:System.Int32>"
  overload: System.IO.Pipes.PipeStream.ReadByte*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O pipe está fechado."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O pipe não suporta operações de leitura."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O pipe está desligado, a aguardar para estabelecer ligação ou o identificador não foi definido."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu a qualquer erro de e/s."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.ReadMode
  id: ReadMode
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: ReadMode
  nameWithType: PipeStream.ReadMode
  fullName: System.IO.Pipes.PipeStream.ReadMode
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Obtém ou define o modo de leitura para um <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> objeto."
  remarks: "Os pipes anónimos não suportam <xref:System.IO.Pipes.PipeTransmissionMode>transmissão de mensagens de modo.</xref:System.IO.Pipes.PipeTransmissionMode>"
  syntax:
    content: public virtual System.IO.Pipes.PipeTransmissionMode ReadMode { get; set; }
    return:
      type: System.IO.Pipes.PipeTransmissionMode
      description: "Um do <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref> valores que indica como o <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> objeto lê a partir do pipe."
  overload: System.IO.Pipes.PipeStream.ReadMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor fornecido não é um <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref> valor."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O valor fornecido não é suportado <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref> valor para este fluxo de pipe."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O identificador não foi definido.       - ou - o pipe está a aguardar para estabelecer ligação com um cliente com nome."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O pipe está danificado ou Ocorreu um erro de e/s com um cliente com nome."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.SafePipeHandle
  id: SafePipeHandle
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: SafePipeHandle
  nameWithType: PipeStream.SafePipeHandle
  fullName: System.IO.Pipes.PipeStream.SafePipeHandle
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Obtém o parâmetro identificador seguro para a extremidade do pipe local que atual <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> encapsula do objeto."
  syntax:
    content: public Microsoft.Win32.SafeHandles.SafePipeHandle SafePipeHandle { get; }
    return:
      type: Microsoft.Win32.SafeHandles.SafePipeHandle
      description: "A <xref href=&quot;Microsoft.Win32.SafeHandles.SafePipeHandle&quot;> </xref> objeto para o pipe é encapsulado por atual <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> objeto."
  overload: System.IO.Pipes.PipeStream.SafePipeHandle*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O identificador de pipe não foi definido."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O pipe está fechado."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Seek(Int64,SeekOrigin)
  nameWithType: PipeStream.Seek(Int64,SeekOrigin)
  fullName: System.IO.Pipes.PipeStream.Seek(Int64,SeekOrigin)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Define a posição atual do fluxo de atual para o valor especificado."
  remarks: "O método de procura não é suportado no pipes e gera um <xref:System.NotSupportedException>quando é chamado.</xref:System.NotSupportedException>"
  syntax:
    content: public override long Seek (long offset, System.IO.SeekOrigin origin);
    parameters:
    - id: offset
      type: System.Int64
      description: "O ponto de relativo ao `origin`, para iniciar a pesquisa do."
    - id: origin
      type: System.IO.SeekOrigin
      description: "Especifica o início, final ou a posição atual como um ponto de referência para `offset`, utilizando um valor de tipo <xref:System.IO.SeekOrigin>.</xref:System.IO.SeekOrigin>"
    return:
      type: System.Int64
      description: "Nova posição na sequência."
  overload: System.IO.Pipes.PipeStream.Seek*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)
  id: SetAccessControl(System.IO.Pipes.PipeSecurity)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: SetAccessControl(PipeSecurity)
  nameWithType: PipeStream.SetAccessControl(PipeSecurity)
  fullName: System.IO.Pipes.PipeStream.SetAccessControl(PipeSecurity)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Aplica-se as entradas de lista (ACL) de controlo de acesso especificadas por uma <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> objeto para o pipe especificado pelo atual <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref> objeto."
  remarks: 'Uma lista de controlo de acesso (ACL) descreve indivíduos e/ou grupos que tenham ou não tem, direitos para executar as ações específicas num ficheiro especificado. Para obter mais informações, consulte [como: Adicionar ou remover entradas de lista de controlo de acesso](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: public void SetAccessControl (System.IO.Pipes.PipeSecurity pipeSecurity);
    parameters:
    - id: pipeSecurity
      type: System.IO.Pipes.PipeSecurity
      description: "A <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> objeto que especifica uma entrada de lista (ACL) de controlo de acesso para aplicar no pipe atual."
  overload: System.IO.Pipes.PipeStream.SetAccessControl*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O pipe está fechado."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pipeSecurity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Falha ao chamar subjacente para definir as informações de segurança."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Falha ao chamar subjacente para definir as informações de segurança."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Falha ao chamar subjacente para definir as informações de segurança."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: SetLength(Int64)
  nameWithType: PipeStream.SetLength(Int64)
  fullName: System.IO.Pipes.PipeStream.SetLength(Int64)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Define o comprimento do fluxo de atual para o valor especificado."
  remarks: "O <xref:System.IO.Pipes.PipeStream>classe não suporta o método SetLength.</xref:System.IO.Pipes.PipeStream>"
  syntax:
    content: public override void SetLength (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "O comprimento do novo da transmissão em fluxo."
  overload: System.IO.Pipes.PipeStream.SetLength*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.TransmissionMode
  id: TransmissionMode
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: TransmissionMode
  nameWithType: PipeStream.TransmissionMode
  fullName: System.IO.Pipes.PipeStream.TransmissionMode
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Obtém o modo de transmissão de pipe suportado pelo pipe atual."
  remarks: "Os pipes anónimos não suportam <xref:System.IO.Pipes.PipeTransmissionMode>transmissão de mensagens de modo.</xref:System.IO.Pipes.PipeTransmissionMode>"
  syntax:
    content: public virtual System.IO.Pipes.PipeTransmissionMode TransmissionMode { get; }
    return:
      type: System.IO.Pipes.PipeTransmissionMode
      description: "Um do <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref> valores que indica o modo de transmissão suportado pelo pipe atual."
  overload: System.IO.Pipes.PipeStream.TransmissionMode*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O pipe está fechado."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O identificador não foi definido.       - ou - o pipe está a aguardar para ligar uma operação de cliente/servidor anónima ou com um cliente com nome."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O pipe está danificado ou Ocorreu um erro de e/s outro."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.WaitForPipeDrain
  id: WaitForPipeDrain
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: WaitForPipeDrain()
  nameWithType: PipeStream.WaitForPipeDrain()
  fullName: System.IO.Pipes.PipeStream.WaitForPipeDrain()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Aguarda outra extremidade do pipe para enviar todos os bytes de leitura."
  remarks: "Os blocos de método WaitForPipeDrain, enquanto outra extremidade do pipe tem leitura enviados todos os bytes."
  syntax:
    content: public void WaitForPipeDrain ();
    parameters: []
  overload: System.IO.Pipes.PipeStream.WaitForPipeDrain*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O pipe está fechado."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O pipe não suporta operações de escrita."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O pipe está danificado ou Ocorreu um erro de e/s outro."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Write(Byte[],Int32,Int32)
  nameWithType: PipeStream.Write(Byte[],Int32,Int32)
  fullName: System.IO.Pipes.PipeStream.Write(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Escreve um bloco de bytes no fluxo atual com a dados a partir de uma memória intermédia."
  remarks: "Utilize o <xref:System.IO.Pipes.PipeStream.CanWrite%2A>propriedade para determinar se atual <xref:System.IO.Pipes.PipeStream>objeto suporta operações de escrita.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.PipeStream.CanWrite%2A>       Chamar o método de escrita bloqueia até `count` bytes são lidas ou é atingido o fim do fluxo. Para operações de leitura assíncrona, consulte <xref:System.IO.Pipes.PipeStream.BeginWrite%2A>e <xref:System.IO.Pipes.PipeStream.EndWrite%2A>.</xref:System.IO.Pipes.PipeStream.EndWrite%2A> </xref:System.IO.Pipes.PipeStream.BeginWrite%2A>"
  syntax:
    content: public override void Write (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "A memória intermédia que contém dados para escrever o pipe."
    - id: offset
      type: System.Int32
      description: "O deslocamento de byte baseado em zero no `buffer` no qual pretende começar a copiar bytes no fluxo atual."
    - id: count
      type: System.Int32
      description: "O número máximo de bytes a escrever o fluxo actual."
  overload: System.IO.Pipes.PipeStream.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>é menor que 0.       - ou - <code>count</code> é inferior a 0."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>count</code>é maior do que o número de bytes disponíveis no <code>buffer</code>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O pipe está fechado."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O pipe não suporta operações de escrita."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O pipe está danificado ou Ocorreu um erro de e/s outro."
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.WriteByte(System.Byte)
  id: WriteByte(System.Byte)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: WriteByte(Byte)
  nameWithType: PipeStream.WriteByte(Byte)
  fullName: System.IO.Pipes.PipeStream.WriteByte(Byte)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Escreve um byte para o fluxo actual."
  remarks: "Utilize o <xref:System.IO.Pipes.PipeStream.CanWrite%2A>propriedade para determinar se atual <xref:System.IO.Pipes.PipeStream>objeto suporta operações de escrita.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.PipeStream.CanWrite%2A>"
  syntax:
    content: public override void WriteByte (byte value);
    parameters:
    - id: value
      type: System.Byte
      description: "O byte para escrever no fluxo."
  overload: System.IO.Pipes.PipeStream.WriteByte*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O pipe está fechado."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O pipe não suporta operações de escrita."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O pipe está desligado, a aguardar para estabelecer ligação ou o identificador não foi definido."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O pipe está danificado ou Ocorreu um erro de e/s outro."
  platform:
  - net462
references:
- uid: System.IO.Stream
  isExternal: false
  name: System.IO.Stream
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: PipeStream(PipeDirection,Int32)
  nameWithType: PipeStream.PipeStream(PipeDirection,Int32)
  fullName: System.IO.Pipes.PipeStream.PipeStream(PipeDirection,Int32)
- uid: System.IO.Pipes.PipeDirection
  parent: System.IO.Pipes
  isExternal: false
  name: PipeDirection
  nameWithType: PipeDirection
  fullName: System.IO.Pipes.PipeDirection
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: PipeStream(PipeDirection,PipeTransmissionMode,Int32)
  nameWithType: PipeStream.PipeStream(PipeDirection,PipeTransmissionMode,Int32)
  fullName: System.IO.Pipes.PipeStream.PipeStream(PipeDirection,PipeTransmissionMode,Int32)
- uid: System.IO.Pipes.PipeTransmissionMode
  parent: System.IO.Pipes
  isExternal: false
  name: PipeTransmissionMode
  nameWithType: PipeTransmissionMode
  fullName: System.IO.Pipes.PipeTransmissionMode
- uid: System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: PipeStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.IO.Pipes.PipeStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: PipeStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.IO.Pipes.PipeStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.IO.Pipes.PipeStream.CanRead
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanRead
  nameWithType: PipeStream.CanRead
  fullName: System.IO.Pipes.PipeStream.CanRead
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Pipes.PipeStream.CanSeek
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanSeek
  nameWithType: PipeStream.CanSeek
  fullName: System.IO.Pipes.PipeStream.CanSeek
- uid: System.IO.Pipes.PipeStream.CanWrite
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanWrite
  nameWithType: PipeStream.CanWrite
  fullName: System.IO.Pipes.PipeStream.CanWrite
- uid: System.IO.Pipes.PipeStream.CheckPipePropertyOperations
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckPipePropertyOperations()
  nameWithType: PipeStream.CheckPipePropertyOperations()
  fullName: System.IO.Pipes.PipeStream.CheckPipePropertyOperations()
- uid: System.IO.Pipes.PipeStream.CheckReadOperations
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckReadOperations()
  nameWithType: PipeStream.CheckReadOperations()
  fullName: System.IO.Pipes.PipeStream.CheckReadOperations()
- uid: System.IO.Pipes.PipeStream.CheckWriteOperations
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckWriteOperations()
  nameWithType: PipeStream.CheckWriteOperations()
  fullName: System.IO.Pipes.PipeStream.CheckWriteOperations()
- uid: System.IO.Pipes.PipeStream.Dispose(System.Boolean)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: PipeStream.Dispose(Boolean)
  fullName: System.IO.Pipes.PipeStream.Dispose(Boolean)
- uid: System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: EndRead(IAsyncResult)
  nameWithType: PipeStream.EndRead(IAsyncResult)
  fullName: System.IO.Pipes.PipeStream.EndRead(IAsyncResult)
- uid: System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: EndWrite(IAsyncResult)
  nameWithType: PipeStream.EndWrite(IAsyncResult)
  fullName: System.IO.Pipes.PipeStream.EndWrite(IAsyncResult)
- uid: System.IO.Pipes.PipeStream.Flush
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Flush()
  nameWithType: PipeStream.Flush()
  fullName: System.IO.Pipes.PipeStream.Flush()
- uid: System.IO.Pipes.PipeStream.GetAccessControl
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: GetAccessControl()
  nameWithType: PipeStream.GetAccessControl()
  fullName: System.IO.Pipes.PipeStream.GetAccessControl()
- uid: System.IO.Pipes.PipeSecurity
  parent: System.IO.Pipes
  isExternal: false
  name: PipeSecurity
  nameWithType: PipeSecurity
  fullName: System.IO.Pipes.PipeSecurity
- uid: System.IO.Pipes.PipeStream.InBufferSize
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: InBufferSize
  nameWithType: PipeStream.InBufferSize
  fullName: System.IO.Pipes.PipeStream.InBufferSize
- uid: System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: InitializeHandle(SafePipeHandle,Boolean,Boolean)
  nameWithType: PipeStream.InitializeHandle(SafePipeHandle,Boolean,Boolean)
  fullName: System.IO.Pipes.PipeStream.InitializeHandle(SafePipeHandle,Boolean,Boolean)
- uid: Microsoft.Win32.SafeHandles.SafePipeHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafePipeHandle
  nameWithType: SafePipeHandle
  fullName: Microsoft.Win32.SafeHandles.SafePipeHandle
- uid: System.IO.Pipes.PipeStream.IsAsync
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsAsync
  nameWithType: PipeStream.IsAsync
  fullName: System.IO.Pipes.PipeStream.IsAsync
- uid: System.IO.Pipes.PipeStream.IsConnected
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsConnected
  nameWithType: PipeStream.IsConnected
  fullName: System.IO.Pipes.PipeStream.IsConnected
- uid: System.IO.Pipes.PipeStream.IsHandleExposed
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsHandleExposed
  nameWithType: PipeStream.IsHandleExposed
  fullName: System.IO.Pipes.PipeStream.IsHandleExposed
- uid: System.IO.Pipes.PipeStream.IsMessageComplete
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsMessageComplete
  nameWithType: PipeStream.IsMessageComplete
  fullName: System.IO.Pipes.PipeStream.IsMessageComplete
- uid: System.IO.Pipes.PipeStream.Length
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Length
  nameWithType: PipeStream.Length
  fullName: System.IO.Pipes.PipeStream.Length
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.Pipes.PipeStream.OutBufferSize
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: OutBufferSize
  nameWithType: PipeStream.OutBufferSize
  fullName: System.IO.Pipes.PipeStream.OutBufferSize
- uid: System.IO.Pipes.PipeStream.Position
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Position
  nameWithType: PipeStream.Position
  fullName: System.IO.Pipes.PipeStream.Position
- uid: System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Read(Byte[],Int32,Int32)
  nameWithType: PipeStream.Read(Byte[],Int32,Int32)
  fullName: System.IO.Pipes.PipeStream.Read(Byte[],Int32,Int32)
- uid: System.IO.Pipes.PipeStream.ReadByte
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: ReadByte()
  nameWithType: PipeStream.ReadByte()
  fullName: System.IO.Pipes.PipeStream.ReadByte()
- uid: System.IO.Pipes.PipeStream.ReadMode
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: ReadMode
  nameWithType: PipeStream.ReadMode
  fullName: System.IO.Pipes.PipeStream.ReadMode
- uid: System.IO.Pipes.PipeStream.SafePipeHandle
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SafePipeHandle
  nameWithType: PipeStream.SafePipeHandle
  fullName: System.IO.Pipes.PipeStream.SafePipeHandle
- uid: System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Seek(Int64,SeekOrigin)
  nameWithType: PipeStream.Seek(Int64,SeekOrigin)
  fullName: System.IO.Pipes.PipeStream.Seek(Int64,SeekOrigin)
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SetAccessControl(PipeSecurity)
  nameWithType: PipeStream.SetAccessControl(PipeSecurity)
  fullName: System.IO.Pipes.PipeStream.SetAccessControl(PipeSecurity)
- uid: System.IO.Pipes.PipeStream.SetLength(System.Int64)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SetLength(Int64)
  nameWithType: PipeStream.SetLength(Int64)
  fullName: System.IO.Pipes.PipeStream.SetLength(Int64)
- uid: System.IO.Pipes.PipeStream.TransmissionMode
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: TransmissionMode
  nameWithType: PipeStream.TransmissionMode
  fullName: System.IO.Pipes.PipeStream.TransmissionMode
- uid: System.IO.Pipes.PipeStream.WaitForPipeDrain
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: WaitForPipeDrain()
  nameWithType: PipeStream.WaitForPipeDrain()
  fullName: System.IO.Pipes.PipeStream.WaitForPipeDrain()
- uid: System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Write(Byte[],Int32,Int32)
  nameWithType: PipeStream.Write(Byte[],Int32,Int32)
  fullName: System.IO.Pipes.PipeStream.Write(Byte[],Int32,Int32)
- uid: System.IO.Pipes.PipeStream.WriteByte(System.Byte)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: WriteByte(Byte)
  nameWithType: PipeStream.WriteByte(Byte)
  fullName: System.IO.Pipes.PipeStream.WriteByte(Byte)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.IO.Pipes.PipeStream.#ctor*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: PipeStream
  nameWithType: PipeStream.PipeStream
- uid: System.IO.Pipes.PipeStream.BeginRead*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: BeginRead
  nameWithType: PipeStream.BeginRead
- uid: System.IO.Pipes.PipeStream.BeginWrite*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: BeginWrite
  nameWithType: PipeStream.BeginWrite
- uid: System.IO.Pipes.PipeStream.CanRead*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanRead
  nameWithType: PipeStream.CanRead
- uid: System.IO.Pipes.PipeStream.CanSeek*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanSeek
  nameWithType: PipeStream.CanSeek
- uid: System.IO.Pipes.PipeStream.CanWrite*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanWrite
  nameWithType: PipeStream.CanWrite
- uid: System.IO.Pipes.PipeStream.CheckPipePropertyOperations*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckPipePropertyOperations
  nameWithType: PipeStream.CheckPipePropertyOperations
- uid: System.IO.Pipes.PipeStream.CheckReadOperations*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckReadOperations
  nameWithType: PipeStream.CheckReadOperations
- uid: System.IO.Pipes.PipeStream.CheckWriteOperations*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckWriteOperations
  nameWithType: PipeStream.CheckWriteOperations
- uid: System.IO.Pipes.PipeStream.Dispose*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Dispose
  nameWithType: PipeStream.Dispose
- uid: System.IO.Pipes.PipeStream.EndRead*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: EndRead
  nameWithType: PipeStream.EndRead
- uid: System.IO.Pipes.PipeStream.EndWrite*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: EndWrite
  nameWithType: PipeStream.EndWrite
- uid: System.IO.Pipes.PipeStream.Flush*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Flush
  nameWithType: PipeStream.Flush
- uid: System.IO.Pipes.PipeStream.GetAccessControl*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: GetAccessControl
  nameWithType: PipeStream.GetAccessControl
- uid: System.IO.Pipes.PipeStream.InBufferSize*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: InBufferSize
  nameWithType: PipeStream.InBufferSize
- uid: System.IO.Pipes.PipeStream.InitializeHandle*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: InitializeHandle
  nameWithType: PipeStream.InitializeHandle
- uid: System.IO.Pipes.PipeStream.IsAsync*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsAsync
  nameWithType: PipeStream.IsAsync
- uid: System.IO.Pipes.PipeStream.IsConnected*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsConnected
  nameWithType: PipeStream.IsConnected
- uid: System.IO.Pipes.PipeStream.IsHandleExposed*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsHandleExposed
  nameWithType: PipeStream.IsHandleExposed
- uid: System.IO.Pipes.PipeStream.IsMessageComplete*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsMessageComplete
  nameWithType: PipeStream.IsMessageComplete
- uid: System.IO.Pipes.PipeStream.Length*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Length
  nameWithType: PipeStream.Length
- uid: System.IO.Pipes.PipeStream.OutBufferSize*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: OutBufferSize
  nameWithType: PipeStream.OutBufferSize
- uid: System.IO.Pipes.PipeStream.Position*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Position
  nameWithType: PipeStream.Position
- uid: System.IO.Pipes.PipeStream.Read*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Read
  nameWithType: PipeStream.Read
- uid: System.IO.Pipes.PipeStream.ReadByte*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: ReadByte
  nameWithType: PipeStream.ReadByte
- uid: System.IO.Pipes.PipeStream.ReadMode*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: ReadMode
  nameWithType: PipeStream.ReadMode
- uid: System.IO.Pipes.PipeStream.SafePipeHandle*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SafePipeHandle
  nameWithType: PipeStream.SafePipeHandle
- uid: System.IO.Pipes.PipeStream.Seek*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Seek
  nameWithType: PipeStream.Seek
- uid: System.IO.Pipes.PipeStream.SetAccessControl*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SetAccessControl
  nameWithType: PipeStream.SetAccessControl
- uid: System.IO.Pipes.PipeStream.SetLength*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SetLength
  nameWithType: PipeStream.SetLength
- uid: System.IO.Pipes.PipeStream.TransmissionMode*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: TransmissionMode
  nameWithType: PipeStream.TransmissionMode
- uid: System.IO.Pipes.PipeStream.WaitForPipeDrain*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: WaitForPipeDrain
  nameWithType: PipeStream.WaitForPipeDrain
- uid: System.IO.Pipes.PipeStream.Write*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Write
  nameWithType: PipeStream.Write
- uid: System.IO.Pipes.PipeStream.WriteByte*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: WriteByte
  nameWithType: PipeStream.WriteByte
