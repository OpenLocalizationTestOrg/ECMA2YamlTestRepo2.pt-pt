### YamlMime:ManagedReference
items:
- uid: System.Data.Odbc.OdbcConnectionStringBuilder
  id: OdbcConnectionStringBuilder
  children:
  - System.Data.Odbc.OdbcConnectionStringBuilder.#ctor
  - System.Data.Odbc.OdbcConnectionStringBuilder.#ctor(System.String)
  - System.Data.Odbc.OdbcConnectionStringBuilder.Clear
  - System.Data.Odbc.OdbcConnectionStringBuilder.ContainsKey(System.String)
  - System.Data.Odbc.OdbcConnectionStringBuilder.Driver
  - System.Data.Odbc.OdbcConnectionStringBuilder.Dsn
  - System.Data.Odbc.OdbcConnectionStringBuilder.Item(System.String)
  - System.Data.Odbc.OdbcConnectionStringBuilder.Keys
  - System.Data.Odbc.OdbcConnectionStringBuilder.Remove(System.String)
  - System.Data.Odbc.OdbcConnectionStringBuilder.TryGetValue(System.String,System.Object@)
  langs:
  - csharp
  name: OdbcConnectionStringBuilder
  nameWithType: OdbcConnectionStringBuilder
  fullName: System.Data.Odbc.OdbcConnectionStringBuilder
  type: Class
  summary: "Provides a simple way to create and manage the contents of connection strings used by the <xref href=&quot;System.Data.Odbc.OdbcConnection&quot;></xref> class."
  remarks: "The connection string builders let developers programmatically create syntactically correct connection strings, and parse and rebuild existing connection strings, using properties and methods of the class. The connection string builder provides strongly typed properties corresponding to the known key/value pairs allowed by ODBC connections, and developers can add arbitrary key/value pairs for any other connection string values.       Developers needing to create connection strings as part of applications can use the OdbcConnectionStringBuilder class to build and modify connection strings. The class also makes it easy to manage connection strings stored in an application configuration file. OdbcConnectionStringBuilder performs checks only for the limited set of known key/value pairs. Therefore, this class can be used to create invalid connection strings. The following table lists the specific known keys together with their corresponding properties within the OdbcConnectionStringBuilder class, and their default values. Besides these specific values, developers can add any key/value pairs to the collection that is contained within the OdbcConnectionStringBuilder instance.      |Key|Property|Comment|Default value|   |---------|--------------|-------------|-------------------|   |Driver|<xref:System.Data.Odbc.OdbcConnectionStringBuilder.Driver%2A>|Developers should not include the braces surrounding the driver name when they set the <xref:System.Data.Odbc.OdbcConnectionStringBuilder.Driver%2A> property. The OdbcConnectionStringBuilder instance adds braces as needed.|Empty string|   |DSN|<xref:System.Data.Odbc.OdbcConnectionStringBuilder.Dsn%2A>||Empty string|       If any value (other than the <xref:System.Data.Odbc.OdbcConnectionStringBuilder.Driver%2A> value) within the connection string contains a semicolon (;), the OdbcConnectionStringBuilder surrounds the value with quotation marks in the connection string. In order to avoid this issue with the <xref:System.Data.Odbc.OdbcConnectionStringBuilder.Driver%2A> value that frequently contains a semicolon, the OdbcConnectionStringBuilder class always surrounds this value with braces. The ODBC specification indicates that driver values that contain semicolons must be surrounded with braces, and this class handles this for you.       The <xref:System.Data.Odbc.OdbcConnectionStringBuilder.Item%2A> property handles attempts to insert malicious code. For example, the following code, using the default <xref:System.Data.Odbc.OdbcConnectionStringBuilder.Item%2A> property (the indexer, in C#) correctly escapes the nested key/value pair.       [Visual Basic]      ```   Dim builder As _    New System.Data.Odbc.OdbcConnectionStringBuilder   &quot; Take advantage of the Driver property.    builder.Driver = &quot;SQL Server&quot;   builder(&quot;Server&quot;) = &quot;MyServer;NewValue=Bad&quot;   Console.WriteLine(builder.ConnectionString)   ```       [C#]      ```   System.Data.Odbc.OdbcConnectionStringBuilder builder =      new System.Data.Odbc.OdbcConnectionStringBuilder();   // Take advantage of the Driver property.    builder.Driver = &quot;SQL Server&quot;;   builder[&quot;Server&quot;] = &quot;MyServer;NewValue=Bad&quot;;   Console.WriteLine(builder.ConnectionString);   ```       The result is the following connection string that handles the invalid value in a safe manner:      ```   Driver={SQL Server};Server=&quot;MyServer;NewValue=Bad&quot;   ```"
  example:
  - "The following console application builds connection strings for several ODBC databases. First, the example creates a connection string for a Microsoft Access database. It then creates a connection string for an IBM DB2 database. The example also parses an existing connection string, and demonstrates various ways of manipulating the contents of the connection string.  \n  \n> [!NOTE]\n>  This example includes a password to demonstrate how OdbcConnectionStringBuilder works with connection strings. In your applications, we recommend that you use Windows Authentication. If you must use a password, do not include a hard-coded password in your application.  \n  \n [!code-cs[DataWorks OdbcConnectionStringBuilder#1](~/add/codesnippet/csharp/t-system.data.odbc.odbcc_2_1.cs)]\n [!code-vb[DataWorks OdbcConnectionStringBuilder#1](~/add/codesnippet/visualbasic/t-system.data.odbc.odbcc_2_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("Driver")]

      [System.ComponentModel.TypeConverter(typeof(System.Data.Odbc.OdbcConnectionStringBuilder/OdbcConnectionStringBuilderConverter))]

      public sealed class OdbcConnectionStringBuilder : System.Data.Common.DbConnectionStringBuilder
  inheritance:
  - System.Object
  - System.Data.Common.DbConnectionStringBuilder
  implements: []
  inheritedMembers:
  - System.Data.Common.DbConnectionStringBuilder.Add(System.String,System.Object)
  - System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String)
  - System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String,System.Boolean)
  - System.Data.Common.DbConnectionStringBuilder.BrowsableConnectionString
  - System.Data.Common.DbConnectionStringBuilder.ClearPropertyDescriptors
  - System.Data.Common.DbConnectionStringBuilder.ConnectionString
  - System.Data.Common.DbConnectionStringBuilder.Count
  - System.Data.Common.DbConnectionStringBuilder.EquivalentTo(System.Data.Common.DbConnectionStringBuilder)
  - System.Data.Common.DbConnectionStringBuilder.GetProperties(System.Collections.Hashtable)
  - System.Data.Common.DbConnectionStringBuilder.IsFixedSize
  - System.Data.Common.DbConnectionStringBuilder.IsReadOnly
  - System.Data.Common.DbConnectionStringBuilder.ShouldSerialize(System.String)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#IsSynchronized
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#SyncRoot
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Add(System.Object,System.Object)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Contains(System.Object)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#GetEnumerator
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Item(System.Object)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Remove(System.Object)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IEnumerable#GetEnumerator
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetAttributes
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetClassName
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetComponentName
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetConverter
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
  - System.Data.Common.DbConnectionStringBuilder.ToString
  - System.Data.Common.DbConnectionStringBuilder.Values
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.#ctor
  id: '#ctor'
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  langs:
  - csharp
  name: OdbcConnectionStringBuilder()
  nameWithType: OdbcConnectionStringBuilder.OdbcConnectionStringBuilder()
  fullName: System.Data.Odbc.OdbcConnectionStringBuilder.OdbcConnectionStringBuilder()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Initializes a new instance of the <xref href=&quot;System.Data.Odbc.OdbcConnectionStringBuilder&quot;></xref> class."
  syntax:
    content: public OdbcConnectionStringBuilder ();
    parameters: []
  overload: System.Data.Odbc.OdbcConnectionStringBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  langs:
  - csharp
  name: OdbcConnectionStringBuilder(String)
  nameWithType: OdbcConnectionStringBuilder.OdbcConnectionStringBuilder(String)
  fullName: System.Data.Odbc.OdbcConnectionStringBuilder.OdbcConnectionStringBuilder(String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Initializes a new instance of the <xref href=&quot;System.Data.Odbc.OdbcConnectionStringBuilder&quot;></xref> class. The provided connection string provides the data for the instance&quot;s internal connection information."
  remarks: "You can pass a connection string in the constructor, or you can set the <xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A> property explicitly. The behavior is the same either way."
  example:
  - "The following example creates multiple <xref:System.Data.Odbc.OdbcConnectionStringBuilder> instances, passing a different connection string to the constructor in each case. Note that the ordering of elements within the connection string may be modified when you retrieve the <xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A> property. Also note that keys other than the predefined \"Dsn\" and \"Driver\" keys are converted to lowercase by the <xref:System.Data.Odbc.OdbcConnectionStringBuilder> class.  \n  \n> [!NOTE]\n>  This example includes a password to demonstrate how <xref:System.Data.Odbc.OdbcConnectionStringBuilder> works with connection strings. In your applications, we recommend that you use Windows Authentication. If you must use a password, do not include a hard-coded password in your application.  \n  \n [!code-cs[DataWorks OdbcConnectionStringBuilder.Multiple#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcc_5_1.cs)]\n [!code-vb[DataWorks OdbcConnectionStringBuilder.Multiple#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcc_5_1.vb)]"
  syntax:
    content: public OdbcConnectionStringBuilder (string connectionString);
    parameters:
    - id: connectionString
      type: System.String
      description: "The basis for the object&quot;s internal connection information. Parsed into key/value pairs."
  overload: System.Data.Odbc.OdbcConnectionStringBuilder.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The connection string is incorrectly formatted (perhaps missing the required &quot;=&quot; within a key/value pair)."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.Clear
  id: Clear
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  langs:
  - csharp
  name: Clear()
  nameWithType: OdbcConnectionStringBuilder.Clear()
  fullName: System.Data.Odbc.OdbcConnectionStringBuilder.Clear()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Clears the contents of the <xref href=&quot;System.Data.Odbc.OdbcConnectionStringBuilder&quot;></xref> instance."
  remarks: "The Clear method removes all key/value pairs from the <xref:System.Data.Odbc.OdbcConnectionStringBuilder> and resets the <xref:System.Data.Odbc.OdbcConnectionStringBuilder.Driver%2A> and <xref:System.Data.Odbc.OdbcConnectionStringBuilder.Dsn%2A> properties to their default values. The Clear method also sets the <xref:System.Data.Common.DbConnectionStringBuilder.Count%2A> property to 0 and the <xref:System.Data.Odbc.OdbcConnectionStringBuilder.ConnectionString> property to an empty string."
  example:
  - >-
    [!code-vb[DataWorks OdbcConnectionStringBuilder.Clear#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcc_8_1.vb)]
     [!code-cs[DataWorks OdbcConnectionStringBuilder.Clear#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcc_8_1.cs)]
  syntax:
    content: public override void Clear ();
    parameters: []
  overload: System.Data.Odbc.OdbcConnectionStringBuilder.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.ContainsKey(System.String)
  id: ContainsKey(System.String)
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  langs:
  - csharp
  name: ContainsKey(String)
  nameWithType: OdbcConnectionStringBuilder.ContainsKey(String)
  fullName: System.Data.Odbc.OdbcConnectionStringBuilder.ContainsKey(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Determines whether the <xref href=&quot;System.Data.Odbc.OdbcConnectionStringBuilder&quot;></xref> contains a specific key."
  remarks: ''
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcConnectionStringBuilder> instance, sets some of its properties, and then tries to determine whether various keys exist within the object by calling the ContainsKey method.  \n  \n [!code-vb[DataWorks OdbcConnectionStringBuilder.ContainsKey#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcc_2_1.vb)]\n [!code-cs[DataWorks OdbcConnectionStringBuilder.ContainsKey#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcc_2_1.cs)]"
  syntax:
    content: public override bool ContainsKey (string keyword);
    parameters:
    - id: keyword
      type: System.String
      description: "The key to locate in the <xref href=&quot;System.Data.Odbc.OdbcConnectionStringBuilder&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref href=&quot;System.Data.Odbc.OdbcConnectionStringBuilder&quot;></xref> contains an element that has the specified key; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.Odbc.OdbcConnectionStringBuilder.ContainsKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyword</code> is null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> in Visual Basic)."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.Driver
  id: Driver
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  langs:
  - csharp
  name: Driver
  nameWithType: OdbcConnectionStringBuilder.Driver
  fullName: System.Data.Odbc.OdbcConnectionStringBuilder.Driver
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Gets or sets the name of the ODBC driver associated with the connection."
  remarks: "If the value passed in is null when you try to set the property, the Driver property is reset. If the value has not been set and the developer tries to retrieve the property, the return value is `String.Empty`. This property corresponds to the &quot;Driver&quot; key within the connection string."
  syntax:
    content: public string Driver { get; set; }
    return:
      type: System.String
      description: "The value of the Driver property, or <xref uid=&quot;langword_csharp_String.Empty&quot; name=&quot;String.Empty&quot; href=&quot;&quot;></xref> if none has been supplied."
  overload: System.Data.Odbc.OdbcConnectionStringBuilder.Driver*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.Dsn
  id: Dsn
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  langs:
  - csharp
  name: Dsn
  nameWithType: OdbcConnectionStringBuilder.Dsn
  fullName: System.Data.Odbc.OdbcConnectionStringBuilder.Dsn
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Gets or sets the name of the data source name (DSN) associated with the connection."
  remarks: "If the value passed in is null when you try to set the property, the Dsn property is reset. If the value has not been set and the developer tries to retrieve the property, the return value is `String.Empty`. This property corresponds to the &quot;Dsn&quot; key within the connection string."
  syntax:
    content: public string Dsn { get; set; }
    return:
      type: System.String
      description: "The value of the Dsn property, or <xref uid=&quot;langword_csharp_String.Empty&quot; name=&quot;String.Empty&quot; href=&quot;&quot;></xref> if none has been supplied."
  overload: System.Data.Odbc.OdbcConnectionStringBuilder.Dsn*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.Item(System.String)
  id: Item(System.String)
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  langs:
  - csharp
  name: Item(String)
  nameWithType: OdbcConnectionStringBuilder.Item(String)
  fullName: System.Data.Odbc.OdbcConnectionStringBuilder.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Gets or sets the value associated with the specified key. In C#, this property is the indexer."
  remarks: "When you set this property, if the specified key already exists in the dictionary, the value is replaced; otherwise, a new element is created."
  example:
  - "The following code, in a console application, creates a new <xref:System.Data.Odbc.OdbcConnectionStringBuilder> and adds key/value pairs to its connection string, using the Item property.  \n  \n [!code-vb[DataWorks OdbcConnectionStringBuilder.Item#1](~/add/codesnippet/visualbasic/p-system.data.odbc.odbcc_2_1.vb)]\n [!code-cs[DataWorks OdbcConnectionStringBuilder.Item#1](~/add/codesnippet/csharp/p-system.data.odbc.odbcc_2_1.cs)]"
  syntax:
    content: public override object this[string keyword] { get; set; }
    parameters:
    - id: keyword
      type: System.String
      description: "The key of the item to get or set."
    return:
      type: System.Object
      description: "The value associated with the specified key."
  overload: System.Data.Odbc.OdbcConnectionStringBuilder.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The connection string is incorrectly formatted (perhaps missing the required &quot;=&quot; within a key/value pair)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyword</code> is a null reference (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> in Visual Basic)."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.Keys
  id: Keys
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  langs:
  - csharp
  name: Keys
  nameWithType: OdbcConnectionStringBuilder.Keys
  fullName: System.Data.Odbc.OdbcConnectionStringBuilder.Keys
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Gets an <xref:System.Collections.ICollection> that contains the keys in the <xref href=&quot;System.Data.Odbc.OdbcConnectionStringBuilder&quot;></xref>."
  remarks: "The order of the values in the <xref:System.Collections.ICollection> is the same order as the associated values in the <xref:System.Collections.ICollection> returned by the <xref:System.Data.Common.DbConnectionStringBuilder.Values%2A> property."
  example:
  - "The following console application example creates a new <xref:System.Data.Odbc.OdbcConnectionStringBuilder>. The code loops through the <xref:System.Collections.ICollection> returned by the Keys property displaying the key/value pairs.  \n  \n> [!NOTE]\n>  This example includes a password to demonstrate how <xref:System.Data.Odbc.OdbcConnectionStringBuilder> works with connection strings. In your applications, we recommend that you use Windows Authentication. If you must use a password, do not include a hard-coded password in your application.  \n  \n [!code-vb[DataWorks OdbcConnectionStringBuilder.Keys#1](~/add/codesnippet/visualbasic/p-system.data.odbc.odbcc_0_1.vb)]\n [!code-cs[DataWorks OdbcConnectionStringBuilder.Keys#1](~/add/codesnippet/csharp/p-system.data.odbc.odbcc_0_1.cs)]"
  syntax:
    content: public override System.Collections.ICollection Keys { get; }
    return:
      type: System.Collections.ICollection
      description: "An <xref:System.Collections.ICollection> that contains the keys in the <xref href=&quot;System.Data.Odbc.OdbcConnectionStringBuilder&quot;></xref>."
  overload: System.Data.Odbc.OdbcConnectionStringBuilder.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.Remove(System.String)
  id: Remove(System.String)
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  langs:
  - csharp
  name: Remove(String)
  nameWithType: OdbcConnectionStringBuilder.Remove(String)
  fullName: System.Data.Odbc.OdbcConnectionStringBuilder.Remove(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Removes the entry with the specified key from the <xref href=&quot;System.Data.Odbc.OdbcConnectionStringBuilder&quot;></xref> instance."
  remarks: "Because the Remove method returns a value that indicates its success, it is not required to look for the existence of a key before trying to remove the key/value pair from the <xref:System.Data.Odbc.OdbcConnectionStringBuilder> instance."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcConnectionStringBuilder> instance and demonstrates the behavior of the Remove method.  \n  \n [!code-cs[DataWorks OdbcConnectionStringBuilder.Remove#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcc_7_1.cs)]\n [!code-vb[DataWorks OdbcConnectionStringBuilder.Remove#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcc_7_1.vb)]"
  syntax:
    content: public override bool Remove (string keyword);
    parameters:
    - id: keyword
      type: System.String
      description: "The key of the key/value pair to be removed from the connection string in this <xref href=&quot;System.Data.Odbc.OdbcConnectionStringBuilder&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the key existed within the connection string and was removed; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if the key did not exist."
  overload: System.Data.Odbc.OdbcConnectionStringBuilder.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyword</code> is null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> in Visual Basic)."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.TryGetValue(System.String,System.Object@)
  id: TryGetValue(System.String,System.Object@)
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  langs:
  - csharp
  name: TryGetValue(String,Object)
  nameWithType: OdbcConnectionStringBuilder.TryGetValue(String,Object)
  fullName: System.Data.Odbc.OdbcConnectionStringBuilder.TryGetValue(String,Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Retrieves a value corresponding to the supplied key from this <xref href=&quot;System.Data.Odbc.OdbcConnectionStringBuilder&quot;></xref>."
  remarks: "The TryGetValue method lets developers safely retrieve a value from a <xref:System.Data.Odbc.OdbcConnectionStringBuilder> without needing to verify that the supplied key name is a valid key name. Because TryGetValue does not raise an exception when you pass in a nonexistent key, you do not have to look for a key before retrieving its value. Calling TryGetValue with a nonexistent key places the value null (`Nothing` in Visual Basic) in the `value` parameter."
  example:
  - "The following example demonstrates the behavior of the TryGetValue method.  \n  \n [!code-vb[DataWorks OdbcConnectionStringBuilder.TryGetValue#1](~/add/codesnippet/visualbasic/43cb7fd0-7a9f-4e91-821e-_1.vb)]\n [!code-cs[DataWorks OdbcConnectionStringBuilder.TryGetValue#1](~/add/codesnippet/csharp/43cb7fd0-7a9f-4e91-821e-_1.cs)]"
  syntax:
    content: public override bool TryGetValue (string keyword, out object value);
    parameters:
    - id: keyword
      type: System.String
      description: "The key of the item to retrieve."
    - id: value
      type: System.Object
      description: "The value corresponding to `keyword.`"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <code>keyword</code> was found within the connection string; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.Odbc.OdbcConnectionStringBuilder.TryGetValue*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbConnectionStringBuilder
  isExternal: false
  name: System.Data.Common.DbConnectionStringBuilder
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.#ctor
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  isExternal: false
  name: OdbcConnectionStringBuilder()
  nameWithType: OdbcConnectionStringBuilder.OdbcConnectionStringBuilder()
  fullName: System.Data.Odbc.OdbcConnectionStringBuilder.OdbcConnectionStringBuilder()
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.#ctor(System.String)
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  isExternal: false
  name: OdbcConnectionStringBuilder(String)
  nameWithType: OdbcConnectionStringBuilder.OdbcConnectionStringBuilder(String)
  fullName: System.Data.Odbc.OdbcConnectionStringBuilder.OdbcConnectionStringBuilder(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.Clear
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  isExternal: false
  name: Clear()
  nameWithType: OdbcConnectionStringBuilder.Clear()
  fullName: System.Data.Odbc.OdbcConnectionStringBuilder.Clear()
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.ContainsKey(System.String)
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  isExternal: false
  name: ContainsKey(String)
  nameWithType: OdbcConnectionStringBuilder.ContainsKey(String)
  fullName: System.Data.Odbc.OdbcConnectionStringBuilder.ContainsKey(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.Driver
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  isExternal: false
  name: Driver
  nameWithType: OdbcConnectionStringBuilder.Driver
  fullName: System.Data.Odbc.OdbcConnectionStringBuilder.Driver
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.Dsn
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  isExternal: false
  name: Dsn
  nameWithType: OdbcConnectionStringBuilder.Dsn
  fullName: System.Data.Odbc.OdbcConnectionStringBuilder.Dsn
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.Item(System.String)
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  isExternal: false
  name: Item(String)
  nameWithType: OdbcConnectionStringBuilder.Item(String)
  fullName: System.Data.Odbc.OdbcConnectionStringBuilder.Item(String)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.Keys
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  isExternal: false
  name: Keys
  nameWithType: OdbcConnectionStringBuilder.Keys
  fullName: System.Data.Odbc.OdbcConnectionStringBuilder.Keys
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.Remove(System.String)
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  isExternal: false
  name: Remove(String)
  nameWithType: OdbcConnectionStringBuilder.Remove(String)
  fullName: System.Data.Odbc.OdbcConnectionStringBuilder.Remove(String)
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.TryGetValue(System.String,System.Object@)
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  isExternal: false
  name: TryGetValue(String,Object)
  nameWithType: OdbcConnectionStringBuilder.TryGetValue(String,Object)
  fullName: System.Data.Odbc.OdbcConnectionStringBuilder.TryGetValue(String,Object)
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.#ctor*
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  isExternal: false
  name: OdbcConnectionStringBuilder
  nameWithType: OdbcConnectionStringBuilder.OdbcConnectionStringBuilder
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.Clear*
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  isExternal: false
  name: Clear
  nameWithType: OdbcConnectionStringBuilder.Clear
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.ContainsKey*
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  isExternal: false
  name: ContainsKey
  nameWithType: OdbcConnectionStringBuilder.ContainsKey
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.Driver*
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  isExternal: false
  name: Driver
  nameWithType: OdbcConnectionStringBuilder.Driver
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.Dsn*
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  isExternal: false
  name: Dsn
  nameWithType: OdbcConnectionStringBuilder.Dsn
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.Item*
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  isExternal: false
  name: Item
  nameWithType: OdbcConnectionStringBuilder.Item
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.Keys*
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  isExternal: false
  name: Keys
  nameWithType: OdbcConnectionStringBuilder.Keys
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.Remove*
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  isExternal: false
  name: Remove
  nameWithType: OdbcConnectionStringBuilder.Remove
- uid: System.Data.Odbc.OdbcConnectionStringBuilder.TryGetValue*
  parent: System.Data.Odbc.OdbcConnectionStringBuilder
  isExternal: false
  name: TryGetValue
  nameWithType: OdbcConnectionStringBuilder.TryGetValue
