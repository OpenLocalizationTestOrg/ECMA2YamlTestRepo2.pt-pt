### YamlMime:ManagedReference
items:
- uid: System.Windows.Documents.Serialization.SerializerWriter
  id: SerializerWriter
  children:
  - System.Windows.Documents.Serialization.SerializerWriter.#ctor
  - System.Windows.Documents.Serialization.SerializerWriter.CancelAsync
  - System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator
  - System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator(System.Printing.PrintTicket,System.Printing.PrintTicket)
  - System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator)
  - System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument)
  - System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence)
  - System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage)
  - System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual)
  - System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)
  - System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)
  - System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)
  - System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)
  - System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual,System.Printing.PrintTicket)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Object)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Object)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Object)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Object)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Object)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket,System.Object)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket,System.Object)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket,System.Object)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket,System.Object)
  - System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket,System.Object)
  - System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled
  - System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted
  - System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired
  - System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged
  langs:
  - csharp
  name: SerializerWriter
  nameWithType: SerializerWriter
  fullName: System.Windows.Documents.Serialization.SerializerWriter
  type: Class
  summary: "Define os eventos que são necessários para implementar um serializador de saída de plug-in do documento e métodos abstract."
  remarks: ''
  example:
  - "The following example illustrates the use of SerializerWriter.  \n  \n [!code-cs[DocumentSerialize#DocSerializePlugIn](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserializeplugin)]  \n  \n [!code-cs[DocumentSerialize#DocSerializeFileFilter](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserializefilefilter)]"
  syntax:
    content: public abstract class SerializerWriter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.#ctor
  id: '#ctor'
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: SerializerWriter()
  nameWithType: SerializerWriter.SerializerWriter()
  fullName: System.Windows.Documents.Serialization.SerializerWriter.SerializerWriter()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.Documents.Serialization.SerializerWriter&quot;> </xref> classe."
  remarks: "Instâncias de <xref:System.Windows.Documents.Serialization.SerializerWriter>devem ser criados utilizando o <xref:System.Windows.Documents.Serialization.SerializerProvider.CreateSerializerWriter%2A>método de um <xref:System.Windows.Documents.Serialization.SerializerProvider>objeto, não o <xref:System.Windows.Documents.Serialization.ISerializerFactory.CreateSerializerWriter%2A>método de um <xref:System.Windows.Documents.Serialization.ISerializerFactory>objeto.</xref:System.Windows.Documents.Serialization.ISerializerFactory> </xref:System.Windows.Documents.Serialization.ISerializerFactory.CreateSerializerWriter%2A> </xref:System.Windows.Documents.Serialization.SerializerProvider> </xref:System.Windows.Documents.Serialization.SerializerProvider.CreateSerializerWriter%2A> </xref:System.Windows.Documents.Serialization.SerializerWriter>"
  example:
  - "The following example shows how to create a <xref:System.Windows.Documents.Serialization.SerializerWriter> using the <xref:System.Windows.Documents.Serialization.SerializerProvider>.<xref:System.Windows.Documents.Serialization.SerializerProvider.CreateSerializerWriter%2A> method.  \n  \n [!code-cs[DocumentSerialize#DocSerializePlugIn](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserializeplugin)]"
  syntax:
    content: protected SerializerWriter ();
    parameters: []
  overload: System.Windows.Documents.Serialization.SerializerWriter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.CancelAsync
  id: CancelAsync
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: CancelAsync()
  nameWithType: SerializerWriter.CancelAsync()
  fullName: System.Windows.Documents.Serialization.SerializerWriter.CancelAsync()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Quando substituí-lo de uma classe derivada, cancela uma operação de escrita assíncrona."
  syntax:
    content: public abstract void CancelAsync ();
    parameters: []
  overload: System.Windows.Documents.Serialization.SerializerWriter.CancelAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator
  id: CreateVisualsCollator
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: CreateVisualsCollator()
  nameWithType: SerializerWriter.CreateVisualsCollator()
  fullName: System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Quando substituí-lo de uma classe derivada, devolve uma <xref href=&quot;System.Windows.Documents.Serialization.SerializerWriterCollator&quot;> </xref> que escritas agrupado <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> elementos."
  remarks: ''
  example:
  - "The following example shows the use of the CreateVisualsCollator method.  \n  \n [!code-cs[XpsSave#CreateAndWriteToVisualsCollator](~/add/codesnippet/csharp/XpsSave/XpsSaveHelper.cs#createandwritetovisualscollator)]\n [!code-vb[XpsSave#CreateAndWriteToVisualsCollator](~/add/codesnippet/visualbasic/xpssave/xpssavehelper.vb#createandwritetovisualscollator)]"
  syntax:
    content: public abstract System.Windows.Documents.Serialization.SerializerWriterCollator CreateVisualsCollator ();
    parameters: []
    return:
      type: System.Windows.Documents.Serialization.SerializerWriterCollator
      description: "A <xref href=&quot;System.Windows.Documents.Serialization.SerializerWriterCollator&quot;> </xref> que escritas agrupado <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> serialização <xref:System.IO.Stream>.</xref:System.IO.Stream> de saída de elementos ao documento"
  overload: System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator(System.Printing.PrintTicket,System.Printing.PrintTicket)
  id: CreateVisualsCollator(System.Printing.PrintTicket,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: CreateVisualsCollator(PrintTicket,PrintTicket)
  nameWithType: SerializerWriter.CreateVisualsCollator(PrintTicket,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator(PrintTicket,PrintTicket)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Quando substituí-lo de uma classe derivada, devolve uma <xref href=&quot;System.Windows.Documents.Serialization.SerializerWriterCollator&quot;> </xref> que escritas agrupado <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> elementos juntamente com os pedidos de suporte de impressão indicados."
  remarks: "`documentSequencePT`ou `documentPT` pode ser `null` se existem não existem definições de impressão preferenciais.       Este método não valida ou modificar os pedidos de suporte de impressão fornecidos para um determinado <xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue>  Se necessário, utilize o <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>método para criar um <xref:System.Printing.PrintQueue>-específico <xref:System.Printing.PrintTicket>que é válido para uma impressora indicada.</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>"
  example:
  - "The following example shows the use of the <xref:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator%2A> method.  \n  \n [!code-cs[XpsSave#CreateAndWriteToVisualsCollator](~/add/codesnippet/csharp/XpsSave/XpsSaveHelper.cs#createandwritetovisualscollator)]\n [!code-vb[XpsSave#CreateAndWriteToVisualsCollator](~/add/codesnippet/visualbasic/xpssave/xpssavehelper.vb#createandwritetovisualscollator)]"
  syntax:
    content: public abstract System.Windows.Documents.Serialization.SerializerWriterCollator CreateVisualsCollator (System.Printing.PrintTicket documentSequencePT, System.Printing.PrintTicket documentPT);
    parameters:
    - id: documentSequencePT
      type: System.Printing.PrintTicket
      description: "A predefinição de preferências de impressão <xref href=&quot;System.Windows.Documents.FixedDocumentSequence&quot;> </xref> conteúdo."
    - id: documentPT
      type: System.Printing.PrintTicket
      description: "A predefinição de preferências de impressão <xref href=&quot;System.Windows.Documents.FixedDocument&quot;> </xref> conteúdo."
    return:
      type: System.Windows.Documents.Serialization.SerializerWriterCollator
      description: "A <xref href=&quot;System.Windows.Documents.Serialization.SerializerWriterCollator&quot;> </xref> que escritas agrupado <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> serialização <xref:System.IO.Stream>.</xref:System.IO.Stream> de saída de elementos ao documento"
  overload: System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator)
  id: Write(System.Windows.Documents.DocumentPaginator)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: Write(DocumentPaginator)
  nameWithType: SerializerWriter.Write(DocumentPaginator)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(DocumentPaginator)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Quando substituí-lo de uma classe derivada, forma síncrona escreve o conteúdo de um determinado <xref href=&quot;System.Windows.Documents.DocumentPaginator&quot;> </xref> para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "O resultado <xref:System.IO.Stream>da operação de escrita operação é normalmente especificada como um parâmetro para o construtor de classe derivada que implementa <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  example:
  - "The following example shows the use of the <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> method to serialize a flow document to an output file.  \n  \n [!code-cs[DocumentSerialize#DocSerializePlugIn](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserializeplugin)]"
  syntax:
    content: public abstract void Write (System.Windows.Documents.DocumentPaginator documentPaginator);
    parameters:
    - id: documentPaginator
      type: System.Windows.Documents.DocumentPaginator
      description: "Paginator o documento que define o conteúdo ao escrever para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  overload: System.Windows.Documents.Serialization.SerializerWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument)
  id: Write(System.Windows.Documents.FixedDocument)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: Write(FixedDocument)
  nameWithType: SerializerWriter.Write(FixedDocument)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(FixedDocument)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Quando substituí-lo de uma classe derivada, forma síncrona escreve um determinado <xref href=&quot;System.Windows.Documents.FixedDocument&quot;> </xref> para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "O resultado <xref:System.IO.Stream>da operação de escrita operação é normalmente especificada como um parâmetro para o construtor de classe derivada que implementa <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  example:
  - "The following example shows the use of the <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> method to serialize a flow document to an output file.  \n  \n [!code-cs[DocumentSerialize#DocSerializePlugIn](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserializeplugin)]"
  syntax:
    content: public abstract void Write (System.Windows.Documents.FixedDocument fixedDocument);
    parameters:
    - id: fixedDocument
      type: System.Windows.Documents.FixedDocument
      description: "O documento de escrita para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  overload: System.Windows.Documents.Serialization.SerializerWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence)
  id: Write(System.Windows.Documents.FixedDocumentSequence)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: Write(FixedDocumentSequence)
  nameWithType: SerializerWriter.Write(FixedDocumentSequence)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(FixedDocumentSequence)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Quando substituí-lo de uma classe derivada, forma síncrona escreve um determinado <xref href=&quot;System.Windows.Documents.FixedDocumentSequence&quot;> </xref> para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "O resultado <xref:System.IO.Stream>da operação de escrita operação é normalmente especificada como um parâmetro para o construtor de classe derivada que implementa <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  example:
  - "The following example shows the use of the <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> method to serialize a flow document to an output file.  \n  \n [!code-cs[DocumentSerialize#DocSerializePlugIn](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserializeplugin)]"
  syntax:
    content: public abstract void Write (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence);
    parameters:
    - id: fixedDocumentSequence
      type: System.Windows.Documents.FixedDocumentSequence
      description: "A sequência de documento que define o conteúdo ao escrever para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  overload: System.Windows.Documents.Serialization.SerializerWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage)
  id: Write(System.Windows.Documents.FixedPage)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: Write(FixedPage)
  nameWithType: SerializerWriter.Write(FixedPage)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(FixedPage)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Quando substituí-lo de uma classe derivada, forma síncrona escreve um determinado <xref href=&quot;System.Windows.Documents.FixedPage&quot;> </xref> para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "O resultado <xref:System.IO.Stream>da operação de escrita operação é normalmente especificada como um parâmetro para o construtor de classe derivada que implementa <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  example:
  - "The following example shows the use of the <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> method to serialize a flow document to an output file.  \n  \n [!code-cs[DocumentSerialize#DocSerializePlugIn](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserializeplugin)]"
  syntax:
    content: public abstract void Write (System.Windows.Documents.FixedPage fixedPage);
    parameters:
    - id: fixedPage
      type: System.Windows.Documents.FixedPage
      description: "A página de escrita para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  overload: System.Windows.Documents.Serialization.SerializerWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual)
  id: Write(System.Windows.Media.Visual)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: Write(Visual)
  nameWithType: SerializerWriter.Write(Visual)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(Visual)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Quando substituí-lo de uma classe derivada, forma síncrona escreve um determinado <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> elemento para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "O resultado <xref:System.IO.Stream>da operação de escrita operação é normalmente especificada como um parâmetro para o construtor de classe derivada que implementa <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  example:
  - "The following example shows the use of the <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> method to serialize a flow document to an output file.  \n  \n [!code-cs[DocumentSerialize#DocSerializePlugIn](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserializeplugin)]"
  syntax:
    content: public abstract void Write (System.Windows.Media.Visual visual);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "O <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> elemento escrever para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  overload: System.Windows.Documents.Serialization.SerializerWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)
  id: Write(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: Write(DocumentPaginator,PrintTicket)
  nameWithType: SerializerWriter.Write(DocumentPaginator,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(DocumentPaginator,PrintTicket)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Quando substituí-lo de uma classe derivada, forma síncrona escritas paginated conteúdo juntamente com um associados <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "`printTicket`pode ser `null` se existem não existem definições de impressão preferidas.       Este método não valida ou modificar a determinada `printTicket` para um determinado <xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue>  Se necessário, utilize o <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>método para criar um <xref:System.Printing.PrintQueue>-específico <xref:System.Printing.PrintTicket>que é válido para uma impressora indicada.</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>       O resultado <xref:System.IO.Stream>da operação de escrita operação é normalmente especificada como um parâmetro para o construtor de classe derivada que implementa <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  example:
  - "The following example shows the use of the Write method to serialize a flow document to an output file.  \n  \n [!code-cs[DocumentSerialize#DocSerializePlugIn](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserializeplugin)]"
  syntax:
    content: public abstract void Write (System.Windows.Documents.DocumentPaginator documentPaginator, System.Printing.PrintTicket printTicket);
    parameters:
    - id: documentPaginator
      type: System.Windows.Documents.DocumentPaginator
      description: "Paginator o documento que define o conteúdo ao escrever para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "A predefinição de impressão preferências para o `documentPaginator` conteúdo."
  overload: System.Windows.Documents.Serialization.SerializerWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)
  id: Write(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: Write(FixedDocument,PrintTicket)
  nameWithType: SerializerWriter.Write(FixedDocument,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(FixedDocument,PrintTicket)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Quando substituí-lo de uma classe derivada, forma síncrona escreve um determinado <xref href=&quot;System.Windows.Documents.FixedDocument&quot;> </xref> juntamente com um associados <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "`printTicket`pode ser `null` se existem não existem definições de impressão preferidas.       Este método não valida ou modificar a determinada `printTicket` para um determinado <xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue>  Se necessário, utilize o <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>método para criar um <xref:System.Printing.PrintQueue>-específico <xref:System.Printing.PrintTicket>que é válido para uma impressora indicada.</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>       O resultado <xref:System.IO.Stream>da operação de escrita operação é normalmente especificada como um parâmetro para o construtor de classe derivada que implementa <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  example:
  - "The following example shows the use of the <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> method to serialize a flow document to an output file.  \n  \n [!code-cs[DocumentSerialize#DocSerializePlugIn](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserializeplugin)]"
  syntax:
    content: public abstract void Write (System.Windows.Documents.FixedDocument fixedDocument, System.Printing.PrintTicket printTicket);
    parameters:
    - id: fixedDocument
      type: System.Windows.Documents.FixedDocument
      description: "O documento de escrita para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "A predefinição de impressão preferências para o `fixedDocument` conteúdo."
  overload: System.Windows.Documents.Serialization.SerializerWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)
  id: Write(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: Write(FixedDocumentSequence,PrintTicket)
  nameWithType: SerializerWriter.Write(FixedDocumentSequence,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(FixedDocumentSequence,PrintTicket)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Quando substituí-lo de uma classe derivada, forma síncrona escreve um determinado <xref href=&quot;System.Windows.Documents.FixedDocumentSequence&quot;> </xref> juntamente com um associados <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "`printTicket`pode ser `null` se existem não existem definições de impressão preferidas.       Este método não valida ou modificar a determinada `printTicket` para um determinado <xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue>  Se necessário, utilize o <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>método para criar um <xref:System.Printing.PrintQueue>-específico <xref:System.Printing.PrintTicket>que é válido para uma impressora indicada.</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>       O resultado <xref:System.IO.Stream>da operação de escrita operação é normalmente especificada como um parâmetro para o construtor de classe derivada que implementa <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  example:
  - "The following example shows the use of the <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> method to serialize a flow document to an output file.  \n  \n [!code-cs[DocumentSerialize#DocSerializePlugIn](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserializeplugin)]"
  syntax:
    content: public abstract void Write (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, System.Printing.PrintTicket printTicket);
    parameters:
    - id: fixedDocumentSequence
      type: System.Windows.Documents.FixedDocumentSequence
      description: "A sequência de documento que define o conteúdo ao escrever para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "A predefinição de impressão preferências para o `fixedDocumentSequence` conteúdo."
  overload: System.Windows.Documents.Serialization.SerializerWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)
  id: Write(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: Write(FixedPage,PrintTicket)
  nameWithType: SerializerWriter.Write(FixedPage,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(FixedPage,PrintTicket)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Quando substituí-lo de uma classe derivada, forma síncrona escreve um determinado <xref href=&quot;System.Windows.Documents.FixedPage&quot;> </xref> juntamente com um associados <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "`printTicket`pode ser `null` se existem não existem definições de impressão preferidas.       Este método não valida ou modificar a determinada `printTicket` para um determinado <xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue>  Se necessário, utilize o <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>método para criar um <xref:System.Printing.PrintQueue>-específico <xref:System.Printing.PrintTicket>que é válido para uma impressora indicada.</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>       O resultado <xref:System.IO.Stream>da operação de escrita operação é normalmente especificada como um parâmetro para o construtor de classe derivada que implementa <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  example:
  - "The following example shows the use of the <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> method to serialize a flow document to an output file.  \n  \n [!code-cs[DocumentSerialize#DocSerializePlugIn](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserializeplugin)]"
  syntax:
    content: public abstract void Write (System.Windows.Documents.FixedPage fixedPage, System.Printing.PrintTicket printTicket);
    parameters:
    - id: fixedPage
      type: System.Windows.Documents.FixedPage
      description: "A página de escrita para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "A predefinição de impressão preferências para o `fixedPage` conteúdo."
  overload: System.Windows.Documents.Serialization.SerializerWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual,System.Printing.PrintTicket)
  id: Write(System.Windows.Media.Visual,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: Write(Visual,PrintTicket)
  nameWithType: SerializerWriter.Write(Visual,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(Visual,PrintTicket)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Quando substituí-lo de uma classe derivada, forma síncrona escreve um determinado <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> elemento juntamente com um associados <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "`printTicket`pode ser `null` se existem não existem definições de impressão preferidas.       Este método não valida ou modificar a determinada `printTicket` para um determinado <xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue>  Se necessário, utilize o <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>método para criar um <xref:System.Printing.PrintQueue>-específico <xref:System.Printing.PrintTicket>que é válido para uma impressora indicada.</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>       O resultado <xref:System.IO.Stream>da operação de escrita operação é normalmente especificada como um parâmetro para o construtor de classe derivada que implementa <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  example:
  - "The following example shows the use of the <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> method to serialize a flow document to an output file.  \n  \n [!code-cs[DocumentSerialize#DocSerializePlugIn](~/add/codesnippet/csharp/DocumentSerialize/ThumbViewer.cs#docserializeplugin)]"
  syntax:
    content: public abstract void Write (System.Windows.Media.Visual visual, System.Printing.PrintTicket printTicket);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "O <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> elemento escrever para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "A predefinição de impressão preferências para o `visual` elemento."
  overload: System.Windows.Documents.Serialization.SerializerWriter.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator)
  id: WriteAsync(System.Windows.Documents.DocumentPaginator)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(DocumentPaginator)
  nameWithType: SerializerWriter.WriteAsync(DocumentPaginator)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(DocumentPaginator)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Quando substituí-lo de uma classe derivada, no modo assíncrono escreve o conteúdo de um determinado <xref href=&quot;System.Windows.Documents.DocumentPaginator&quot;> </xref> para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "O resultado <xref:System.IO.Stream>da operação de escrita operação é normalmente especificada como um parâmetro para o construtor de classe derivada que implementa <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Documents.DocumentPaginator documentPaginator);
    parameters:
    - id: documentPaginator
      type: System.Windows.Documents.DocumentPaginator
      description: "Paginator o documento que define o conteúdo ao escrever para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument)
  id: WriteAsync(System.Windows.Documents.FixedDocument)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(FixedDocument)
  nameWithType: SerializerWriter.WriteAsync(FixedDocument)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedDocument)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Quando substituí-lo de uma classe derivada, no modo assíncrono escreve um determinado <xref href=&quot;System.Windows.Documents.FixedDocument&quot;> </xref> para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "O resultado <xref:System.IO.Stream>da operação de escrita operação é normalmente especificada como um parâmetro para o construtor de classe derivada que implementa <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Documents.FixedDocument fixedDocument);
    parameters:
    - id: fixedDocument
      type: System.Windows.Documents.FixedDocument
      description: "O documento de escrita para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence)
  id: WriteAsync(System.Windows.Documents.FixedDocumentSequence)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(FixedDocumentSequence)
  nameWithType: SerializerWriter.WriteAsync(FixedDocumentSequence)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedDocumentSequence)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Quando substituí-lo de uma classe derivada, no modo assíncrono escreve um determinado <xref href=&quot;System.Windows.Documents.FixedDocumentSequence&quot;> </xref> para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "O resultado <xref:System.IO.Stream>da operação de escrita operação é normalmente especificada como um parâmetro para o construtor de classe derivada que implementa <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence);
    parameters:
    - id: fixedDocumentSequence
      type: System.Windows.Documents.FixedDocumentSequence
      description: "A sequência de documento que define o conteúdo ao escrever para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage)
  id: WriteAsync(System.Windows.Documents.FixedPage)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(FixedPage)
  nameWithType: SerializerWriter.WriteAsync(FixedPage)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedPage)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Quando substituí-lo de uma classe derivada, no modo assíncrono escreve um determinado <xref href=&quot;System.Windows.Documents.FixedPage&quot;> </xref> para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "O resultado <xref:System.IO.Stream>da operação de escrita operação é normalmente especificada como um parâmetro para o construtor de classe derivada que implementa <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Documents.FixedPage fixedPage);
    parameters:
    - id: fixedPage
      type: System.Windows.Documents.FixedPage
      description: "A página de escrita para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual)
  id: WriteAsync(System.Windows.Media.Visual)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(Visual)
  nameWithType: SerializerWriter.WriteAsync(Visual)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(Visual)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Quando substituí-lo de uma classe derivada, no modo assíncrono escreve um determinado <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> elemento para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "O resultado <xref:System.IO.Stream>da operação de escrita operação é normalmente especificada como um parâmetro para o construtor de classe derivada que implementa <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Media.Visual visual);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "O <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> elemento escrever para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Object)
  id: WriteAsync(System.Windows.Documents.DocumentPaginator,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(DocumentPaginator,Object)
  nameWithType: SerializerWriter.WriteAsync(DocumentPaginator,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(DocumentPaginator,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Quando substituí-lo de uma classe derivada, no modo assíncrono escreve o conteúdo de um determinado <xref href=&quot;System.Windows.Documents.DocumentPaginator&quot;> </xref> para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "`userState`foi transmitido para o <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>quando o <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>evento ocorre.</xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> </xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>       O resultado <xref:System.IO.Stream>da operação de escrita operação é normalmente especificada como um parâmetro para o construtor de classe derivada que implementa <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Documents.DocumentPaginator documentPaginator, object userState);
    parameters:
    - id: documentPaginator
      type: System.Windows.Documents.DocumentPaginator
      description: "Paginator o documento que define o conteúdo ao escrever para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
    - id: userState
      type: System.Object
      description: "Um objeto especificado pelo chamador para identificar a operação de escrita assíncrona."
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)
  id: WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(DocumentPaginator,PrintTicket)
  nameWithType: SerializerWriter.WriteAsync(DocumentPaginator,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(DocumentPaginator,PrintTicket)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Quando substituí-lo de uma classe derivada, no modo assíncrono escreve o conteúdo de um determinado <xref href=&quot;System.Windows.Documents.DocumentPaginator&quot;> </xref> para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "`printTicket`pode ser `null` se existem não existem definições de impressão preferidas.       Este método não valida ou modificar a determinada `printTicket` para um determinado <xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue>  Se necessário, utilize o <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>método para criar um <xref:System.Printing.PrintQueue>-específico <xref:System.Printing.PrintTicket>que é válido para uma impressora indicada.</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>       O resultado <xref:System.IO.Stream>da operação de escrita operação é normalmente especificada como um parâmetro para o construtor de classe derivada que implementa <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Documents.DocumentPaginator documentPaginator, System.Printing.PrintTicket printTicket);
    parameters:
    - id: documentPaginator
      type: System.Windows.Documents.DocumentPaginator
      description: "Paginator o documento que define o conteúdo ao escrever para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "A predefinição de impressão preferências para o `documentPaginator` conteúdo."
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Object)
  id: WriteAsync(System.Windows.Documents.FixedDocument,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(FixedDocument,Object)
  nameWithType: SerializerWriter.WriteAsync(FixedDocument,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedDocument,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Quando substituí-lo de uma classe derivada, no modo assíncrono escreve um determinado <xref href=&quot;System.Windows.Documents.FixedDocument&quot;> </xref> para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "`userState`foi transmitido para o <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>quando o <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>evento ocorre.</xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> </xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>       O resultado <xref:System.IO.Stream>da operação de escrita operação é normalmente especificada como um parâmetro para o construtor de classe derivada que implementa <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Documents.FixedDocument fixedDocument, object userState);
    parameters:
    - id: fixedDocument
      type: System.Windows.Documents.FixedDocument
      description: "O documento de escrita para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
    - id: userState
      type: System.Object
      description: "Um objeto especificado pelo chamador para identificar a operação de escrita assíncrona."
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)
  id: WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(FixedDocument,PrintTicket)
  nameWithType: SerializerWriter.WriteAsync(FixedDocument,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedDocument,PrintTicket)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Quando substituí-lo de uma classe derivada, escreve no modo assíncrono um determinado <xref href=&quot;System.Windows.Documents.FixedDocument&quot;> </xref> juntamente com um associados <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "`printTicket`pode ser `null` se existem não existem definições de impressão preferidas.       Este método não valida ou modificar a determinada `printTicket` para um determinado <xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue>  Se necessário, utilize o <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>método para criar um <xref:System.Printing.PrintQueue>-específico <xref:System.Printing.PrintTicket>que é válido para uma impressora indicada.</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>       O resultado <xref:System.IO.Stream>da operação de escrita operação é normalmente especificada como um parâmetro para o construtor de classe derivada que implementa <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Documents.FixedDocument fixedDocument, System.Printing.PrintTicket printTicket);
    parameters:
    - id: fixedDocument
      type: System.Windows.Documents.FixedDocument
      description: "O documento de escrita para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "A predefinição de impressão preferências para o `fixedDocument` conteúdo."
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Object)
  id: WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(FixedDocumentSequence,Object)
  nameWithType: SerializerWriter.WriteAsync(FixedDocumentSequence,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedDocumentSequence,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Quando substituí-lo de uma classe derivada, no modo assíncrono escreve um determinado <xref href=&quot;System.Windows.Documents.FixedDocumentSequence&quot;> </xref> para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "`userState`foi transmitido para o <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>quando o <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>evento ocorre.</xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> </xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>       O resultado <xref:System.IO.Stream>da operação de escrita operação é normalmente especificada como um parâmetro para o construtor de classe derivada que implementa <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, object userState);
    parameters:
    - id: fixedDocumentSequence
      type: System.Windows.Documents.FixedDocumentSequence
      description: "A sequência de documento que define o conteúdo ao escrever para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
    - id: userState
      type: System.Object
      description: "Um objeto especificado pelo chamador para identificar a operação de escrita assíncrona."
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)
  id: WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(FixedDocumentSequence,PrintTicket)
  nameWithType: SerializerWriter.WriteAsync(FixedDocumentSequence,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedDocumentSequence,PrintTicket)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Quando substituí-lo de uma classe derivada, escreve no modo assíncrono um determinado <xref href=&quot;System.Windows.Documents.FixedDocumentSequence&quot;> </xref> juntamente com um associados <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "`printTicket`pode ser `null` se existem não existem definições de impressão preferidas.       Este método não valida ou modificar a determinada `printTicket` para um determinado <xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue>  Se necessário, utilize o <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>método para criar um <xref:System.Printing.PrintQueue>-específico <xref:System.Printing.PrintTicket>que é válido para uma impressora indicada.</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>       O resultado <xref:System.IO.Stream>da operação de escrita operação é normalmente especificada como um parâmetro para o construtor de classe derivada que implementa <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, System.Printing.PrintTicket printTicket);
    parameters:
    - id: fixedDocumentSequence
      type: System.Windows.Documents.FixedDocumentSequence
      description: "A sequência de documento que define o conteúdo ao escrever para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "A predefinição de impressão preferências para o `fixedDocumentSequence` conteúdo."
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Object)
  id: WriteAsync(System.Windows.Documents.FixedPage,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(FixedPage,Object)
  nameWithType: SerializerWriter.WriteAsync(FixedPage,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedPage,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Quando substituí-lo de uma classe derivada, no modo assíncrono escreve um determinado <xref href=&quot;System.Windows.Documents.FixedPage&quot;> </xref> para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "`userState`foi transmitido para o <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>quando o <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>evento ocorre.</xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> </xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>       O resultado <xref:System.IO.Stream>da operação de escrita operação é normalmente especificada como um parâmetro para o construtor de classe derivada que implementa <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Documents.FixedPage fixedPage, object userState);
    parameters:
    - id: fixedPage
      type: System.Windows.Documents.FixedPage
      description: "A página de escrita para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
    - id: userState
      type: System.Object
      description: "Um objeto especificado pelo chamador para identificar a operação de escrita assíncrona."
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)
  id: WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(FixedPage,PrintTicket)
  nameWithType: SerializerWriter.WriteAsync(FixedPage,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedPage,PrintTicket)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Quando substituí-lo de uma classe derivada, escreve no modo assíncrono um determinado <xref href=&quot;System.Windows.Documents.FixedPage&quot;> </xref> juntamente com um associados <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "`printTicket`pode ser `null` se existem não existem definições de impressão preferidas.       Este método não valida ou modificar a determinada `printTicket` para um determinado <xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue>  Se necessário, utilize o <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>método para criar um <xref:System.Printing.PrintQueue>-específico <xref:System.Printing.PrintTicket>que é válido para uma impressora indicada.</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>       O resultado <xref:System.IO.Stream>da operação de escrita operação é normalmente especificada como um parâmetro para o construtor de classe derivada que implementa <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Documents.FixedPage fixedPage, System.Printing.PrintTicket printTicket);
    parameters:
    - id: fixedPage
      type: System.Windows.Documents.FixedPage
      description: "A página de escrita para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "A predefinição de impressão preferências para o `fixedPage` conteúdo."
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Object)
  id: WriteAsync(System.Windows.Media.Visual,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(Visual,Object)
  nameWithType: SerializerWriter.WriteAsync(Visual,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(Visual,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Quando substituí-lo de uma classe derivada, no modo assíncrono escreve um determinado <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> elemento para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "`userState`foi transmitido para o <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>quando o <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>evento ocorre.</xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> </xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>       O resultado <xref:System.IO.Stream>da operação de escrita operação é normalmente especificada como um parâmetro para o construtor de classe derivada que implementa <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Media.Visual visual, object userState);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "O <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> elemento escrever para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
    - id: userState
      type: System.Object
      description: "Um objeto especificado pelo chamador para identificar a operação de escrita assíncrona."
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket)
  id: WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(Visual,PrintTicket)
  nameWithType: SerializerWriter.WriteAsync(Visual,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(Visual,PrintTicket)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Quando substituí-lo de uma classe derivada, escreve no modo assíncrono um determinado <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> elemento juntamente com um associados <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "Este método não valida ou modificar a determinada `printTicket` para um determinado <xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue>  Se necessário, utilize o <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>método para criar um <xref:System.Printing.PrintQueue>-específico <xref:System.Printing.PrintTicket>que é válido para uma impressora indicada.</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>       O resultado <xref:System.IO.Stream>da operação de escrita operação é normalmente especificada como um parâmetro para o construtor de classe derivada que implementa <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Media.Visual visual, System.Printing.PrintTicket printTicket);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "O <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> elemento escrever para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "A predefinição de impressão preferências para o `visual` elemento."
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket,System.Object)
  id: WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(DocumentPaginator,PrintTicket,Object)
  nameWithType: SerializerWriter.WriteAsync(DocumentPaginator,PrintTicket,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(DocumentPaginator,PrintTicket,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Quando substituí-lo de uma classe derivada, no modo assíncrono escritas paginated conteúdo juntamente com um associados <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "`printTicket`pode ser `null` se existem não existem definições de impressão preferidas.       Este método não valida ou modificar a determinada `printTicket` para um determinado <xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue>  Se necessário, utilize o <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>método para criar um <xref:System.Printing.PrintQueue>-específico <xref:System.Printing.PrintTicket>que é válido para uma impressora indicada.</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>       `userState`foi transmitido para o <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>quando o <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>evento ocorre.</xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> </xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>       O resultado <xref:System.IO.Stream>da operação de escrita operação é normalmente especificada como um parâmetro para o construtor de classe derivada que implementa <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Documents.DocumentPaginator documentPaginator, System.Printing.PrintTicket printTicket, object userState);
    parameters:
    - id: documentPaginator
      type: System.Windows.Documents.DocumentPaginator
      description: "Paginator o documento que define o conteúdo ao escrever para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "A predefinição de impressão preferências para o `documentPaginator` conteúdo."
    - id: userState
      type: System.Object
      description: "Um objeto especificado pelo chamador para identificar a operação de escrita assíncrona."
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket,System.Object)
  id: WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(FixedDocument,PrintTicket,Object)
  nameWithType: SerializerWriter.WriteAsync(FixedDocument,PrintTicket,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedDocument,PrintTicket,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Quando substituí-lo de uma classe derivada, escreve no modo assíncrono um determinado <xref href=&quot;System.Windows.Documents.FixedDocument&quot;> </xref> juntamente com um associados <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "`printTicket`pode ser `null` se existem não existem definições de impressão preferidas.       Este método não valida ou modificar a determinada `printTicket` para um determinado <xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue>  Se necessário, utilize o <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>método para criar um <xref:System.Printing.PrintQueue>-específico <xref:System.Printing.PrintTicket>que é válido para uma impressora indicada.</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>       `userState`foi transmitido para o <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>quando o <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>evento ocorre.</xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> </xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>       O resultado <xref:System.IO.Stream>da operação de escrita operação é normalmente especificada como um parâmetro para o construtor de classe derivada que implementa <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Documents.FixedDocument fixedDocument, System.Printing.PrintTicket printTicket, object userState);
    parameters:
    - id: fixedDocument
      type: System.Windows.Documents.FixedDocument
      description: "O documento de escrita para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "A predefinição de impressão preferências para o `fixedDocument` conteúdo."
    - id: userState
      type: System.Object
      description: "Um objeto especificado pelo chamador para identificar a operação de escrita assíncrona."
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket,System.Object)
  id: WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(FixedDocumentSequence,PrintTicket,Object)
  nameWithType: SerializerWriter.WriteAsync(FixedDocumentSequence,PrintTicket,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedDocumentSequence,PrintTicket,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Quando substituí-lo de uma classe derivada, escreve no modo assíncrono um determinado <xref href=&quot;System.Windows.Documents.FixedDocumentSequence&quot;> </xref> juntamente com um associados <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "`printTicket`pode ser `null` se existem não existem definições de impressão preferidas.       Este método não valida ou modificar a determinada `printTicket` para um determinado <xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue>  Se necessário, utilize o <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>método para criar um <xref:System.Printing.PrintQueue>-específico <xref:System.Printing.PrintTicket>que é válido para uma impressora indicada.</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>       `userState`foi transmitido para o <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>quando o <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>evento ocorre.</xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> </xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>       O resultado <xref:System.IO.Stream>da operação de escrita operação é normalmente especificada como um parâmetro para o construtor de classe derivada que implementa <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, System.Printing.PrintTicket printTicket, object userState);
    parameters:
    - id: fixedDocumentSequence
      type: System.Windows.Documents.FixedDocumentSequence
      description: "A sequência de documento que define o conteúdo ao escrever para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "A predefinição de impressão preferências para o `fixedDocumentSequence` conteúdo."
    - id: userState
      type: System.Object
      description: "Um objeto especificado pelo chamador para identificar a operação de escrita assíncrona."
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket,System.Object)
  id: WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(FixedPage,PrintTicket,Object)
  nameWithType: SerializerWriter.WriteAsync(FixedPage,PrintTicket,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedPage,PrintTicket,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Quando substituí-lo de uma classe derivada, escreve no modo assíncrono um determinado <xref href=&quot;System.Windows.Documents.FixedPage&quot;> </xref> juntamente com um associados <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "`printTicket`pode ser `null` se existem não existem definições de impressão preferidas.       Este método não valida ou modificar a determinada `printTicket` para um determinado <xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue>  Se necessário, utilize o <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>método para criar um <xref:System.Printing.PrintQueue>-específico <xref:System.Printing.PrintTicket>que é válido para uma impressora indicada.</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>       `userState`foi transmitido para o <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>quando o <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>evento ocorre.</xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> </xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>       O resultado <xref:System.IO.Stream>da operação de escrita operação é normalmente especificada como um parâmetro para o construtor de classe derivada que implementa <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Documents.FixedPage fixedPage, System.Printing.PrintTicket printTicket, object userState);
    parameters:
    - id: fixedPage
      type: System.Windows.Documents.FixedPage
      description: "A página de escrita para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "A predefinição de impressão preferências para o `fixedPage` conteúdo."
    - id: userState
      type: System.Object
      description: "Um objeto especificado pelo chamador para identificar a operação de escrita assíncrona."
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket,System.Object)
  id: WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WriteAsync(Visual,PrintTicket,Object)
  nameWithType: SerializerWriter.WriteAsync(Visual,PrintTicket,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(Visual,PrintTicket,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Quando substituí-lo de uma classe derivada, escreve no modo assíncrono um determinado <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> elemento juntamente com um associados <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> e identificador para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "`printTicket`pode ser `null` se existem não existem definições de impressão preferidas.       Este método não valida ou modificar a determinada `printTicket` para um determinado <xref:System.Printing.PrintQueue>.</xref:System.Printing.PrintQueue>  Se necessário, utilize o <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>método para criar um <xref:System.Printing.PrintQueue>-específico <xref:System.Printing.PrintTicket>que é válido para uma impressora indicada.</xref:System.Printing.PrintTicket> </xref:System.Printing.PrintQueue> </xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=fullName>       `userState`foi transmitido para o <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>quando o <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>evento ocorre.</xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> </xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>       O resultado <xref:System.IO.Stream>da operação de escrita operação é normalmente especificada como um parâmetro para o construtor de classe derivada que implementa <xref:System.Windows.Documents.Serialization.SerializerWriter>.</xref:System.Windows.Documents.Serialization.SerializerWriter> </xref:System.IO.Stream>"
  syntax:
    content: public abstract void WriteAsync (System.Windows.Media.Visual visual, System.Printing.PrintTicket printTicket, object userState);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "O <xref href=&quot;System.Windows.Media.Visual&quot;> </xref> elemento escrever para a serialização <xref:System.IO.Stream>.</xref:System.IO.Stream>"
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "A predefinição de impressão preferências para o `visual` elemento."
    - id: userState
      type: System.Object
      description: "Um objeto especificado pelo chamador para identificar a operação de escrita assíncrona."
  overload: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled
  id: WritingCancelled
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WritingCancelled
  nameWithType: SerializerWriter.WritingCancelled
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Quando substituí-lo de uma classe derivada, ocorre quando um <xref:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync*>operação é executada.</xref:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync*>"
  syntax:
    content: public abstract event System.Windows.Documents.Serialization.WritingCancelledEventHandler WritingCancelled;
    return:
      type: System.Windows.Documents.Serialization.WritingCancelledEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted
  id: WritingCompleted
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WritingCompleted
  nameWithType: SerializerWriter.WritingCompleted
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Quando substituí-lo de uma classe derivada, ocorre após a conclusão de uma operação de escrita."
  syntax:
    content: public abstract event System.Windows.Documents.Serialization.WritingCompletedEventHandler WritingCompleted;
    return:
      type: System.Windows.Documents.Serialization.WritingCompletedEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired
  id: WritingPrintTicketRequired
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WritingPrintTicketRequired
  nameWithType: SerializerWriter.WritingPrintTicketRequired
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Ocorre quando substituí-lo de uma classe derivada, imediatamente antes um <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> é adicionado como um fluxo por um <> </> *> ou <> </> *> método."
  remarks: "O evento WritingPrintTicketRequired permite que o processador de eventos substituir um novo <xref:System.Printing.PrintTicket>para especificada no <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%2A>ou <xref:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync%2A>chamada de método.</xref:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync%2A> </xref:System.Windows.Documents.Serialization.SerializerWriter.Write%2A> </xref:System.Printing.PrintTicket>"
  syntax:
    content: public abstract event System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventHandler WritingPrintTicketRequired;
    return:
      type: System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged
  id: WritingProgressChanged
  parent: System.Windows.Documents.Serialization.SerializerWriter
  langs:
  - csharp
  name: WritingProgressChanged
  nameWithType: SerializerWriter.WritingProgressChanged
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents.Serialization
  summary: "Quando substituí-lo de uma classe derivada, ocorre quando o <xref href=&quot;System.Windows.Documents.Serialization.SerializerWriter&quot;> </xref> atualiza o progresso da mesma."
  remarks: "Por exemplo, o <xref:System.Windows.Documents.Serialization.SerializerWriter>foi possível atualizar o respetivo progresso após todas as páginas ou após a operação de escrita de todos os documentos num documento multi.</xref:System.Windows.Documents.Serialization.SerializerWriter>"
  syntax:
    content: public abstract event System.Windows.Documents.Serialization.WritingProgressChangedEventHandler WritingProgressChanged;
    return:
      type: System.Windows.Documents.Serialization.WritingProgressChangedEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Documents.Serialization.SerializerWriter.#ctor
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: SerializerWriter()
  nameWithType: SerializerWriter.SerializerWriter()
  fullName: System.Windows.Documents.Serialization.SerializerWriter.SerializerWriter()
- uid: System.Windows.Documents.Serialization.SerializerWriter.CancelAsync
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: CancelAsync()
  nameWithType: SerializerWriter.CancelAsync()
  fullName: System.Windows.Documents.Serialization.SerializerWriter.CancelAsync()
- uid: System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: CreateVisualsCollator()
  nameWithType: SerializerWriter.CreateVisualsCollator()
  fullName: System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator()
- uid: System.Windows.Documents.Serialization.SerializerWriterCollator
  parent: System.Windows.Documents.Serialization
  isExternal: false
  name: SerializerWriterCollator
  nameWithType: SerializerWriterCollator
  fullName: System.Windows.Documents.Serialization.SerializerWriterCollator
- uid: System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator(System.Printing.PrintTicket,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: CreateVisualsCollator(PrintTicket,PrintTicket)
  nameWithType: SerializerWriter.CreateVisualsCollator(PrintTicket,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator(PrintTicket,PrintTicket)
- uid: System.Printing.PrintTicket
  parent: System.Printing
  isExternal: false
  name: PrintTicket
  nameWithType: PrintTicket
  fullName: System.Printing.PrintTicket
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: Write(DocumentPaginator)
  nameWithType: SerializerWriter.Write(DocumentPaginator)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(DocumentPaginator)
- uid: System.Windows.Documents.DocumentPaginator
  parent: System.Windows.Documents
  isExternal: false
  name: DocumentPaginator
  nameWithType: DocumentPaginator
  fullName: System.Windows.Documents.DocumentPaginator
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: Write(FixedDocument)
  nameWithType: SerializerWriter.Write(FixedDocument)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(FixedDocument)
- uid: System.Windows.Documents.FixedDocument
  parent: System.Windows.Documents
  isExternal: false
  name: FixedDocument
  nameWithType: FixedDocument
  fullName: System.Windows.Documents.FixedDocument
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: Write(FixedDocumentSequence)
  nameWithType: SerializerWriter.Write(FixedDocumentSequence)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(FixedDocumentSequence)
- uid: System.Windows.Documents.FixedDocumentSequence
  parent: System.Windows.Documents
  isExternal: false
  name: FixedDocumentSequence
  nameWithType: FixedDocumentSequence
  fullName: System.Windows.Documents.FixedDocumentSequence
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: Write(FixedPage)
  nameWithType: SerializerWriter.Write(FixedPage)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(FixedPage)
- uid: System.Windows.Documents.FixedPage
  parent: System.Windows.Documents
  isExternal: false
  name: FixedPage
  nameWithType: FixedPage
  fullName: System.Windows.Documents.FixedPage
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: Write(Visual)
  nameWithType: SerializerWriter.Write(Visual)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(Visual)
- uid: System.Windows.Media.Visual
  parent: System.Windows.Media
  isExternal: false
  name: Visual
  nameWithType: Visual
  fullName: System.Windows.Media.Visual
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: Write(DocumentPaginator,PrintTicket)
  nameWithType: SerializerWriter.Write(DocumentPaginator,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(DocumentPaginator,PrintTicket)
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: Write(FixedDocument,PrintTicket)
  nameWithType: SerializerWriter.Write(FixedDocument,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(FixedDocument,PrintTicket)
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: Write(FixedDocumentSequence,PrintTicket)
  nameWithType: SerializerWriter.Write(FixedDocumentSequence,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(FixedDocumentSequence,PrintTicket)
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: Write(FixedPage,PrintTicket)
  nameWithType: SerializerWriter.Write(FixedPage,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(FixedPage,PrintTicket)
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: Write(Visual,PrintTicket)
  nameWithType: SerializerWriter.Write(Visual,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.Write(Visual,PrintTicket)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(DocumentPaginator)
  nameWithType: SerializerWriter.WriteAsync(DocumentPaginator)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(DocumentPaginator)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(FixedDocument)
  nameWithType: SerializerWriter.WriteAsync(FixedDocument)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedDocument)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(FixedDocumentSequence)
  nameWithType: SerializerWriter.WriteAsync(FixedDocumentSequence)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedDocumentSequence)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(FixedPage)
  nameWithType: SerializerWriter.WriteAsync(FixedPage)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedPage)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(Visual)
  nameWithType: SerializerWriter.WriteAsync(Visual)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(Visual)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(DocumentPaginator,Object)
  nameWithType: SerializerWriter.WriteAsync(DocumentPaginator,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(DocumentPaginator,Object)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(DocumentPaginator,PrintTicket)
  nameWithType: SerializerWriter.WriteAsync(DocumentPaginator,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(DocumentPaginator,PrintTicket)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(FixedDocument,Object)
  nameWithType: SerializerWriter.WriteAsync(FixedDocument,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedDocument,Object)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(FixedDocument,PrintTicket)
  nameWithType: SerializerWriter.WriteAsync(FixedDocument,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedDocument,PrintTicket)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(FixedDocumentSequence,Object)
  nameWithType: SerializerWriter.WriteAsync(FixedDocumentSequence,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedDocumentSequence,Object)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(FixedDocumentSequence,PrintTicket)
  nameWithType: SerializerWriter.WriteAsync(FixedDocumentSequence,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedDocumentSequence,PrintTicket)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(FixedPage,Object)
  nameWithType: SerializerWriter.WriteAsync(FixedPage,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedPage,Object)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(FixedPage,PrintTicket)
  nameWithType: SerializerWriter.WriteAsync(FixedPage,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedPage,PrintTicket)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(Visual,Object)
  nameWithType: SerializerWriter.WriteAsync(Visual,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(Visual,Object)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(Visual,PrintTicket)
  nameWithType: SerializerWriter.WriteAsync(Visual,PrintTicket)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(Visual,PrintTicket)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(DocumentPaginator,PrintTicket,Object)
  nameWithType: SerializerWriter.WriteAsync(DocumentPaginator,PrintTicket,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(DocumentPaginator,PrintTicket,Object)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(FixedDocument,PrintTicket,Object)
  nameWithType: SerializerWriter.WriteAsync(FixedDocument,PrintTicket,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedDocument,PrintTicket,Object)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(FixedDocumentSequence,PrintTicket,Object)
  nameWithType: SerializerWriter.WriteAsync(FixedDocumentSequence,PrintTicket,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedDocumentSequence,PrintTicket,Object)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(FixedPage,PrintTicket,Object)
  nameWithType: SerializerWriter.WriteAsync(FixedPage,PrintTicket,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(FixedPage,PrintTicket,Object)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket,System.Object)
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync(Visual,PrintTicket,Object)
  nameWithType: SerializerWriter.WriteAsync(Visual,PrintTicket,Object)
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(Visual,PrintTicket,Object)
- uid: System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WritingCancelled
  nameWithType: SerializerWriter.WritingCancelled
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled
- uid: System.Windows.Documents.Serialization.WritingCancelledEventHandler
  parent: System.Windows.Documents.Serialization
  isExternal: false
  name: WritingCancelledEventHandler
  nameWithType: WritingCancelledEventHandler
  fullName: System.Windows.Documents.Serialization.WritingCancelledEventHandler
- uid: System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WritingCompleted
  nameWithType: SerializerWriter.WritingCompleted
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted
- uid: System.Windows.Documents.Serialization.WritingCompletedEventHandler
  parent: System.Windows.Documents.Serialization
  isExternal: false
  name: WritingCompletedEventHandler
  nameWithType: WritingCompletedEventHandler
  fullName: System.Windows.Documents.Serialization.WritingCompletedEventHandler
- uid: System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WritingPrintTicketRequired
  nameWithType: SerializerWriter.WritingPrintTicketRequired
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired
- uid: System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventHandler
  parent: System.Windows.Documents.Serialization
  isExternal: false
  name: WritingPrintTicketRequiredEventHandler
  nameWithType: WritingPrintTicketRequiredEventHandler
  fullName: System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventHandler
- uid: System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WritingProgressChanged
  nameWithType: SerializerWriter.WritingProgressChanged
  fullName: System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged
- uid: System.Windows.Documents.Serialization.WritingProgressChangedEventHandler
  parent: System.Windows.Documents.Serialization
  isExternal: false
  name: WritingProgressChangedEventHandler
  nameWithType: WritingProgressChangedEventHandler
  fullName: System.Windows.Documents.Serialization.WritingProgressChangedEventHandler
- uid: System.Windows.Documents.Serialization.SerializerWriter.#ctor*
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: SerializerWriter
  nameWithType: SerializerWriter.SerializerWriter
- uid: System.Windows.Documents.Serialization.SerializerWriter.CancelAsync*
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: CancelAsync
  nameWithType: SerializerWriter.CancelAsync
- uid: System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator*
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: CreateVisualsCollator
  nameWithType: SerializerWriter.CreateVisualsCollator
- uid: System.Windows.Documents.Serialization.SerializerWriter.Write*
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: Write
  nameWithType: SerializerWriter.Write
- uid: System.Windows.Documents.Serialization.SerializerWriter.WriteAsync*
  parent: System.Windows.Documents.Serialization.SerializerWriter
  isExternal: false
  name: WriteAsync
  nameWithType: SerializerWriter.WriteAsync
