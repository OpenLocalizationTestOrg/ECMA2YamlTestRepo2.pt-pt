### YamlMime:ManagedReference
items:
- uid: System.Activities.ActivityMetadata
  id: ActivityMetadata
  children:
  - System.Activities.ActivityMetadata.AddArgument(System.Activities.RuntimeArgument)
  - System.Activities.ActivityMetadata.AddDefaultExtensionProvider``1(System.Func{``0})
  - System.Activities.ActivityMetadata.AddImportedChild(System.Activities.Activity)
  - System.Activities.ActivityMetadata.AddImportedChild(System.Activities.Activity,System.Object)
  - System.Activities.ActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate)
  - System.Activities.ActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate,System.Object)
  - System.Activities.ActivityMetadata.AddValidationError(System.Activities.Validation.ValidationError)
  - System.Activities.ActivityMetadata.AddValidationError(System.String)
  - System.Activities.ActivityMetadata.AddVariable(System.Activities.Variable)
  - System.Activities.ActivityMetadata.AddVariable(System.Activities.Variable,System.Object)
  - System.Activities.ActivityMetadata.Bind(System.Activities.Argument,System.Activities.RuntimeArgument)
  - System.Activities.ActivityMetadata.Environment
  - System.Activities.ActivityMetadata.Equals(System.Object)
  - System.Activities.ActivityMetadata.GetArgumentsWithReflection
  - System.Activities.ActivityMetadata.GetHashCode
  - System.Activities.ActivityMetadata.GetImportedChildrenWithReflection
  - System.Activities.ActivityMetadata.GetImportedDelegatesWithReflection
  - System.Activities.ActivityMetadata.GetVariablesWithReflection
  - System.Activities.ActivityMetadata.HasViolations
  - System.Activities.ActivityMetadata.op_Equality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)
  - System.Activities.ActivityMetadata.op_Inequality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)
  - System.Activities.ActivityMetadata.RequireExtension(System.Type)
  - System.Activities.ActivityMetadata.RequireExtension``1
  - System.Activities.ActivityMetadata.SetArgumentsCollection(System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument})
  - System.Activities.ActivityMetadata.SetImportedChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})
  - System.Activities.ActivityMetadata.SetImportedDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})
  - System.Activities.ActivityMetadata.SetValidationErrorsCollection(System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError})
  - System.Activities.ActivityMetadata.SetVariablesCollection(System.Collections.ObjectModel.Collection{System.Activities.Variable})
  langs:
  - csharp
  name: ActivityMetadata
  nameWithType: ActivityMetadata
  fullName: System.Activities.ActivityMetadata
  type: Struct
  summary: "Represents the set of arguments, child activities, variables, and delegates that a configured <xref href=&quot;System.Activities.Activity&quot;></xref> introduces to the execution environment."
  syntax:
    content: public struct ActivityMetadata
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.AddArgument(System.Activities.RuntimeArgument)
  id: AddArgument(System.Activities.RuntimeArgument)
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: AddArgument(RuntimeArgument)
  nameWithType: ActivityMetadata.AddArgument(RuntimeArgument)
  fullName: System.Activities.ActivityMetadata.AddArgument(RuntimeArgument)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Adds an argument to the collection of arguments of an activity."
  syntax:
    content: public void AddArgument (System.Activities.RuntimeArgument argument);
    parameters:
    - id: argument
      type: System.Activities.RuntimeArgument
      description: "The argument to add to the collection."
  overload: System.Activities.ActivityMetadata.AddArgument*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.AddDefaultExtensionProvider``1(System.Func{``0})
  id: AddDefaultExtensionProvider``1(System.Func{``0})
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: AddDefaultExtensionProvider(Func<T>)
  nameWithType: ActivityMetadata.AddDefaultExtensionProvider(Func<T>)
  fullName: System.Activities.ActivityMetadata.AddDefaultExtensionProvider(Func<T>)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: 'public void AddDefaultExtensionProvider<T> (Func<T> extensionProvider) where T : class;'
    parameters:
    - id: extensionProvider
      type: System.Func{T}
      description: "To be added."
  overload: System.Activities.ActivityMetadata.AddDefaultExtensionProvider<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.AddImportedChild(System.Activities.Activity)
  id: AddImportedChild(System.Activities.Activity)
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: AddImportedChild(Activity)
  nameWithType: ActivityMetadata.AddImportedChild(Activity)
  fullName: System.Activities.ActivityMetadata.AddImportedChild(Activity)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Adds the specified activity to the metadata’s list of imported child activities."
  remarks: "An imported child activity is a child activity that the parent activity does not schedule directly. Rather, then parent uses this activity to configure some other child activity."
  syntax:
    content: public void AddImportedChild (System.Activities.Activity importedChild);
    parameters:
    - id: importedChild
      type: System.Activities.Activity
      description: "The activity to add."
  overload: System.Activities.ActivityMetadata.AddImportedChild*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.AddImportedChild(System.Activities.Activity,System.Object)
  id: AddImportedChild(System.Activities.Activity,System.Object)
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: AddImportedChild(Activity,Object)
  nameWithType: ActivityMetadata.AddImportedChild(Activity,Object)
  fullName: System.Activities.ActivityMetadata.AddImportedChild(Activity,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Adds the specified activity to the metadata’s list of imported child activities."
  syntax:
    content: public void AddImportedChild (System.Activities.Activity importedChild, object origin);
    parameters:
    - id: importedChild
      type: System.Activities.Activity
      description: "The activity to add."
    - id: origin
      type: System.Object
      description: "The origin."
  overload: System.Activities.ActivityMetadata.AddImportedChild*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate)
  id: AddImportedDelegate(System.Activities.ActivityDelegate)
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: AddImportedDelegate(ActivityDelegate)
  nameWithType: ActivityMetadata.AddImportedDelegate(ActivityDelegate)
  fullName: System.Activities.ActivityMetadata.AddImportedDelegate(ActivityDelegate)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Adds the specified delegate to the metadata’s list of imported delegates."
  remarks: "An imported <xref:System.Activities.ActivityDelegate> is an <xref:System.Activities.ActivityDelegate> that the parent activity does not invoke directly. Rather, the parent uses this <xref:System.Activities.ActivityDelegate> to configure some other child activity."
  syntax:
    content: public void AddImportedDelegate (System.Activities.ActivityDelegate importedDelegate);
    parameters:
    - id: importedDelegate
      type: System.Activities.ActivityDelegate
      description: "The delegate to add."
  overload: System.Activities.ActivityMetadata.AddImportedDelegate*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate,System.Object)
  id: AddImportedDelegate(System.Activities.ActivityDelegate,System.Object)
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: AddImportedDelegate(ActivityDelegate,Object)
  nameWithType: ActivityMetadata.AddImportedDelegate(ActivityDelegate,Object)
  fullName: System.Activities.ActivityMetadata.AddImportedDelegate(ActivityDelegate,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Adds the specified delegate to the metadata’s list of imported delegates."
  syntax:
    content: public void AddImportedDelegate (System.Activities.ActivityDelegate importedDelegate, object origin);
    parameters:
    - id: importedDelegate
      type: System.Activities.ActivityDelegate
      description: "The delegate to add."
    - id: origin
      type: System.Object
      description: "The origin."
  overload: System.Activities.ActivityMetadata.AddImportedDelegate*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.AddValidationError(System.Activities.Validation.ValidationError)
  id: AddValidationError(System.Activities.Validation.ValidationError)
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: AddValidationError(ValidationError)
  nameWithType: ActivityMetadata.AddValidationError(ValidationError)
  fullName: System.Activities.ActivityMetadata.AddValidationError(ValidationError)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Adds the specified validation error to the metadata’s collection of validation errors."
  remarks: '[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)] [Imperative Code-Based Validation](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: public void AddValidationError (System.Activities.Validation.ValidationError validationError);
    parameters:
    - id: validationError
      type: System.Activities.Validation.ValidationError
      description: "The validation error to add."
  overload: System.Activities.ActivityMetadata.AddValidationError*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.AddValidationError(System.String)
  id: AddValidationError(System.String)
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: AddValidationError(String)
  nameWithType: ActivityMetadata.AddValidationError(String)
  fullName: System.Activities.ActivityMetadata.AddValidationError(String)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Adds a validation error to the metadata’s collection of validation errors using the specified description."
  remarks: '[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)] [Imperative Code-Based Validation](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: public void AddValidationError (string validationErrorMessage);
    parameters:
    - id: validationErrorMessage
      type: System.String
      description: "A message that describes the validation error."
  overload: System.Activities.ActivityMetadata.AddValidationError*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.AddVariable(System.Activities.Variable)
  id: AddVariable(System.Activities.Variable)
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: AddVariable(Variable)
  nameWithType: ActivityMetadata.AddVariable(Variable)
  fullName: System.Activities.ActivityMetadata.AddVariable(Variable)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Adds the specified variable to the metadata’s collection of variables."
  remarks: "Variables added using this method are considered part of the activity’s publicly configurable surface, that is, they are to be provided by the consumer of the activity. For example, <xref:System.Activities.Statements.Sequence> adds the variables in its <xref:System.Activities.Statements.Sequence.Variables%2A> collection using this method. An activity’s implementation cannot access variables added using this method. Activities added through <xref:System.Activities.ActivityMetadata.AddImportedChild%2A> (and any of their non-implementation child activities) can access variables added using this method. For example, <xref:System.Activities.Statements.Sequence> adds its <xref:System.Activities.Statements.Sequence.Activities%2A> collection in this manner."
  syntax:
    content: public void AddVariable (System.Activities.Variable variable);
    parameters:
    - id: variable
      type: System.Activities.Variable
      description: "The variable to add."
  overload: System.Activities.ActivityMetadata.AddVariable*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.AddVariable(System.Activities.Variable,System.Object)
  id: AddVariable(System.Activities.Variable,System.Object)
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: AddVariable(Variable,Object)
  nameWithType: ActivityMetadata.AddVariable(Variable,Object)
  fullName: System.Activities.ActivityMetadata.AddVariable(Variable,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Adds the specified variable to the metadata’s collection of variables."
  syntax:
    content: public void AddVariable (System.Activities.Variable variable, object origin);
    parameters:
    - id: variable
      type: System.Activities.Variable
      description: "The variable to add."
    - id: origin
      type: System.Object
      description: "The origin."
  overload: System.Activities.ActivityMetadata.AddVariable*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.Bind(System.Activities.Argument,System.Activities.RuntimeArgument)
  id: Bind(System.Activities.Argument,System.Activities.RuntimeArgument)
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: Bind(Argument,RuntimeArgument)
  nameWithType: ActivityMetadata.Bind(Argument,RuntimeArgument)
  fullName: System.Activities.ActivityMetadata.Bind(Argument,RuntimeArgument)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Binds the specified <xref href=&quot;System.Activities.Argument&quot;></xref> to the specified <xref href=&quot;System.Activities.RuntimeArgument&quot;></xref>."
  syntax:
    content: public void Bind (System.Activities.Argument binding, System.Activities.RuntimeArgument argument);
    parameters:
    - id: binding
      type: System.Activities.Argument
      description: "The <xref href=&quot;System.Activities.Argument&quot;></xref> to bind."
    - id: argument
      type: System.Activities.RuntimeArgument
      description: "The <xref href=&quot;System.Activities.RuntimeArgument&quot;></xref> to bind."
  overload: System.Activities.ActivityMetadata.Bind*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.Environment
  id: Environment
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: Environment
  nameWithType: ActivityMetadata.Environment
  fullName: System.Activities.ActivityMetadata.Environment
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Gets the activity’s <xref href=&quot;System.Activities.LocationReferenceEnvironment&quot;></xref> of arguments, variables, delegate arguments, or symbols introduced by a <xref href=&quot;System.Activities.Hosting.SymbolResolver&quot;></xref>."
  syntax:
    content: public System.Activities.LocationReferenceEnvironment Environment { get; }
    return:
      type: System.Activities.LocationReferenceEnvironment
      description: "The activity’s location reference environment of arguments, variables, delegate arguments, or symbols introduced by a <xref href=&quot;System.Activities.Hosting.SymbolResolver&quot;></xref>."
  overload: System.Activities.ActivityMetadata.Environment*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ActivityMetadata.Equals(Object)
  fullName: System.Activities.ActivityMetadata.Equals(Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Determines whether the specified object is equal to this metadata instance."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "The object to compare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the specified object is equal to this metadata instance; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Activities.ActivityMetadata.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.GetArgumentsWithReflection
  id: GetArgumentsWithReflection
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: GetArgumentsWithReflection()
  nameWithType: ActivityMetadata.GetArgumentsWithReflection()
  fullName: System.Activities.ActivityMetadata.GetArgumentsWithReflection()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Returns a collection of arguments obtained by using reflection."
  remarks: "This method uses an activity’s <xref:System.ComponentModel.TypeDescriptor> to examine all public properties of type <xref:System.Activities.Argument> and returns them in a collection."
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Activities.RuntimeArgument> GetArgumentsWithReflection ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument}
      description: "A collection of arguments."
  overload: System.Activities.ActivityMetadata.GetArgumentsWithReflection*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.GetHashCode
  id: GetHashCode
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ActivityMetadata.GetHashCode()
  fullName: System.Activities.ActivityMetadata.GetHashCode()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Returns a unique identifier for this metadata instance."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "An integer that uniquely identifies this metadata instance."
  overload: System.Activities.ActivityMetadata.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.GetImportedChildrenWithReflection
  id: GetImportedChildrenWithReflection
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: GetImportedChildrenWithReflection()
  nameWithType: ActivityMetadata.GetImportedChildrenWithReflection()
  fullName: System.Activities.ActivityMetadata.GetImportedChildrenWithReflection()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Returns a collection of imported child activities using reflection."
  remarks: "This method uses an activity’s <xref:System.ComponentModel.TypeDescriptor> to examine all public properties of type <xref:System.Activities.Activity>, or `IList<T>` or `ICollection<T>` where `T` derives from <xref:System.Activities.Activity>, and returns them in a collection."
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Activities.Activity> GetImportedChildrenWithReflection ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{System.Activities.Activity}
      description: "A collection of imported child activities."
  overload: System.Activities.ActivityMetadata.GetImportedChildrenWithReflection*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.GetImportedDelegatesWithReflection
  id: GetImportedDelegatesWithReflection
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: GetImportedDelegatesWithReflection()
  nameWithType: ActivityMetadata.GetImportedDelegatesWithReflection()
  fullName: System.Activities.ActivityMetadata.GetImportedDelegatesWithReflection()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Returns a collection of delegates using reflection."
  remarks: "This method uses an activity’s <xref:System.ComponentModel.TypeDescriptor> to examine all public properties of type <xref:System.Activities.ActivityDelegate>, or `IList<T>` or `ICollection<T>` where `T` derives from <xref:System.Activities.ActivityDelegate>, and returns them in a collection."
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Activities.ActivityDelegate> GetImportedDelegatesWithReflection ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate}
      description: "A collection of delegates."
  overload: System.Activities.ActivityMetadata.GetImportedDelegatesWithReflection*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.GetVariablesWithReflection
  id: GetVariablesWithReflection
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: GetVariablesWithReflection()
  nameWithType: ActivityMetadata.GetVariablesWithReflection()
  fullName: System.Activities.ActivityMetadata.GetVariablesWithReflection()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Returns a collection of variables using reflection."
  remarks: "This method uses an activity’s <xref:System.ComponentModel.TypeDescriptor> to examine all public properties of type <xref:System.Activities.Variable>, or `IList<T>` or `ICollection<T>` where `T` derives from <xref:System.Activities.Variable>, and returns them in a collection."
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Activities.Variable> GetVariablesWithReflection ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{System.Activities.Variable}
      description: "A collection of variables."
  overload: System.Activities.ActivityMetadata.GetVariablesWithReflection*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.HasViolations
  id: HasViolations
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: HasViolations
  nameWithType: ActivityMetadata.HasViolations
  fullName: System.Activities.ActivityMetadata.HasViolations
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Gets a value that indicates whether there are any validation errors in the metadata."
  syntax:
    content: public bool HasViolations { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if validation errors are present; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Activities.ActivityMetadata.HasViolations*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.op_Equality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)
  id: op_Equality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: op_Equality(ActivityMetadata,ActivityMetadata)
  nameWithType: ActivityMetadata.op_Equality(ActivityMetadata,ActivityMetadata)
  fullName: System.Activities.ActivityMetadata.op_Equality(ActivityMetadata,ActivityMetadata)
  type: Operator
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Returns a value that indicates whether the two specified metadata instances are equal."
  syntax:
    content: public static bool op_Equality (System.Activities.ActivityMetadata left, System.Activities.ActivityMetadata right);
    parameters:
    - id: left
      type: System.Activities.ActivityMetadata
      description: "The first item to compare."
    - id: right
      type: System.Activities.ActivityMetadata
      description: "The second item to compare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the two items are equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Activities.ActivityMetadata.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.op_Inequality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)
  id: op_Inequality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: op_Inequality(ActivityMetadata,ActivityMetadata)
  nameWithType: ActivityMetadata.op_Inequality(ActivityMetadata,ActivityMetadata)
  fullName: System.Activities.ActivityMetadata.op_Inequality(ActivityMetadata,ActivityMetadata)
  type: Operator
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Returns a value that indicates whether the two specified metadata instances are not equal."
  syntax:
    content: public static bool op_Inequality (System.Activities.ActivityMetadata left, System.Activities.ActivityMetadata right);
    parameters:
    - id: left
      type: System.Activities.ActivityMetadata
      description: "The first item to compare."
    - id: right
      type: System.Activities.ActivityMetadata
      description: "The second item to compare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the two items are not equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Activities.ActivityMetadata.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.RequireExtension(System.Type)
  id: RequireExtension(System.Type)
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: RequireExtension(Type)
  nameWithType: ActivityMetadata.RequireExtension(Type)
  fullName: System.Activities.ActivityMetadata.RequireExtension(Type)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Specifies that the activity requires an extension of the specified type at runtime."
  remarks: "If the host fails to provide an extension of the specified type, validation fails."
  syntax:
    content: public void RequireExtension (Type extensionType);
    parameters:
    - id: extensionType
      type: System.Type
      description: "The type of the extension."
  overload: System.Activities.ActivityMetadata.RequireExtension*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.RequireExtension``1
  id: RequireExtension``1
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: RequireExtension()
  nameWithType: ActivityMetadata.RequireExtension()
  fullName: System.Activities.ActivityMetadata.RequireExtension()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: 'public void RequireExtension<T> () where T : class;'
    parameters: []
  overload: System.Activities.ActivityMetadata.RequireExtension<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.SetArgumentsCollection(System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument})
  id: SetArgumentsCollection(System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument})
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: SetArgumentsCollection(Collection<RuntimeArgument>)
  nameWithType: ActivityMetadata.SetArgumentsCollection(Collection<RuntimeArgument>)
  fullName: System.Activities.ActivityMetadata.SetArgumentsCollection(Collection<RuntimeArgument>)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Adds the specified collection of arguments to the activity’s arguments."
  syntax:
    content: public void SetArgumentsCollection (System.Collections.ObjectModel.Collection<System.Activities.RuntimeArgument> arguments);
    parameters:
    - id: arguments
      type: System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument}
      description: "The arguments to add."
  overload: System.Activities.ActivityMetadata.SetArgumentsCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.SetImportedChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})
  id: SetImportedChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: SetImportedChildrenCollection(Collection<Activity>)
  nameWithType: ActivityMetadata.SetImportedChildrenCollection(Collection<Activity>)
  fullName: System.Activities.ActivityMetadata.SetImportedChildrenCollection(Collection<Activity>)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Adds the specified collection as imported child activities of the activity."
  remarks: "This is the equivalent of calling <xref:System.Activities.ActivityMetadata.AddImportedChild%2A> for each item in the collection."
  syntax:
    content: public void SetImportedChildrenCollection (System.Collections.ObjectModel.Collection<System.Activities.Activity> importedChildren);
    parameters:
    - id: importedChildren
      type: System.Collections.ObjectModel.Collection{System.Activities.Activity}
      description: "The activities to add."
  overload: System.Activities.ActivityMetadata.SetImportedChildrenCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.SetImportedDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})
  id: SetImportedDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: SetImportedDelegatesCollection(Collection<ActivityDelegate>)
  nameWithType: ActivityMetadata.SetImportedDelegatesCollection(Collection<ActivityDelegate>)
  fullName: System.Activities.ActivityMetadata.SetImportedDelegatesCollection(Collection<ActivityDelegate>)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Adds the specified collection as imported delegates of the activity."
  remarks: "This is the equivalent of calling <xref:System.Activities.ActivityMetadata.AddImportedDelegate%2A> for each item in the collection."
  syntax:
    content: public void SetImportedDelegatesCollection (System.Collections.ObjectModel.Collection<System.Activities.ActivityDelegate> importedDelegates);
    parameters:
    - id: importedDelegates
      type: System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate}
      description: "The delegates to add."
  overload: System.Activities.ActivityMetadata.SetImportedDelegatesCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.SetValidationErrorsCollection(System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError})
  id: SetValidationErrorsCollection(System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError})
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: SetValidationErrorsCollection(Collection<ValidationError>)
  nameWithType: ActivityMetadata.SetValidationErrorsCollection(Collection<ValidationError>)
  fullName: System.Activities.ActivityMetadata.SetValidationErrorsCollection(Collection<ValidationError>)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Adds the specified collection of validation errors to the metadata’s collection of validation errors."
  syntax:
    content: public void SetValidationErrorsCollection (System.Collections.ObjectModel.Collection<System.Activities.Validation.ValidationError> validationErrors);
    parameters:
    - id: validationErrors
      type: System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError}
      description: "The validation errors to add."
  overload: System.Activities.ActivityMetadata.SetValidationErrorsCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityMetadata.SetVariablesCollection(System.Collections.ObjectModel.Collection{System.Activities.Variable})
  id: SetVariablesCollection(System.Collections.ObjectModel.Collection{System.Activities.Variable})
  parent: System.Activities.ActivityMetadata
  langs:
  - csharp
  name: SetVariablesCollection(Collection<Variable>)
  nameWithType: ActivityMetadata.SetVariablesCollection(Collection<Variable>)
  fullName: System.Activities.ActivityMetadata.SetVariablesCollection(Collection<Variable>)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Adds the specified collection of variables to the activity’s variables."
  syntax:
    content: public void SetVariablesCollection (System.Collections.ObjectModel.Collection<System.Activities.Variable> variables);
    parameters:
    - id: variables
      type: System.Collections.ObjectModel.Collection{System.Activities.Variable}
      description: "The variables to add."
  overload: System.Activities.ActivityMetadata.SetVariablesCollection*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Activities.ActivityMetadata.AddArgument(System.Activities.RuntimeArgument)
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: AddArgument(RuntimeArgument)
  nameWithType: ActivityMetadata.AddArgument(RuntimeArgument)
  fullName: System.Activities.ActivityMetadata.AddArgument(RuntimeArgument)
- uid: System.Activities.RuntimeArgument
  parent: System.Activities
  isExternal: false
  name: RuntimeArgument
  nameWithType: RuntimeArgument
  fullName: System.Activities.RuntimeArgument
- uid: System.Activities.ActivityMetadata.AddDefaultExtensionProvider``1(System.Func{``0})
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: AddDefaultExtensionProvider(Func<T>)
  nameWithType: ActivityMetadata.AddDefaultExtensionProvider(Func<T>)
  fullName: System.Activities.ActivityMetadata.AddDefaultExtensionProvider(Func<T>)
- uid: System.Func{T}
  parent: System
  isExternal: true
  name: Func<T>
  nameWithType: Func<T>
  fullName: System.Func<T>
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: Func<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.ActivityMetadata.AddImportedChild(System.Activities.Activity)
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: AddImportedChild(Activity)
  nameWithType: ActivityMetadata.AddImportedChild(Activity)
  fullName: System.Activities.ActivityMetadata.AddImportedChild(Activity)
- uid: System.Activities.Activity
  parent: System.Activities
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Activities.Activity
- uid: System.Activities.ActivityMetadata.AddImportedChild(System.Activities.Activity,System.Object)
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: AddImportedChild(Activity,Object)
  nameWithType: ActivityMetadata.AddImportedChild(Activity,Object)
  fullName: System.Activities.ActivityMetadata.AddImportedChild(Activity,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Activities.ActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate)
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: AddImportedDelegate(ActivityDelegate)
  nameWithType: ActivityMetadata.AddImportedDelegate(ActivityDelegate)
  fullName: System.Activities.ActivityMetadata.AddImportedDelegate(ActivityDelegate)
- uid: System.Activities.ActivityDelegate
  parent: System.Activities
  isExternal: false
  name: ActivityDelegate
  nameWithType: ActivityDelegate
  fullName: System.Activities.ActivityDelegate
- uid: System.Activities.ActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate,System.Object)
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: AddImportedDelegate(ActivityDelegate,Object)
  nameWithType: ActivityMetadata.AddImportedDelegate(ActivityDelegate,Object)
  fullName: System.Activities.ActivityMetadata.AddImportedDelegate(ActivityDelegate,Object)
- uid: System.Activities.ActivityMetadata.AddValidationError(System.Activities.Validation.ValidationError)
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: AddValidationError(ValidationError)
  nameWithType: ActivityMetadata.AddValidationError(ValidationError)
  fullName: System.Activities.ActivityMetadata.AddValidationError(ValidationError)
- uid: System.Activities.Validation.ValidationError
  parent: System.Activities.Validation
  isExternal: false
  name: ValidationError
  nameWithType: ValidationError
  fullName: System.Activities.Validation.ValidationError
- uid: System.Activities.ActivityMetadata.AddValidationError(System.String)
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: AddValidationError(String)
  nameWithType: ActivityMetadata.AddValidationError(String)
  fullName: System.Activities.ActivityMetadata.AddValidationError(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.ActivityMetadata.AddVariable(System.Activities.Variable)
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: AddVariable(Variable)
  nameWithType: ActivityMetadata.AddVariable(Variable)
  fullName: System.Activities.ActivityMetadata.AddVariable(Variable)
- uid: System.Activities.Variable
  parent: System.Activities
  isExternal: false
  name: Variable
  nameWithType: Variable
  fullName: System.Activities.Variable
- uid: System.Activities.ActivityMetadata.AddVariable(System.Activities.Variable,System.Object)
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: AddVariable(Variable,Object)
  nameWithType: ActivityMetadata.AddVariable(Variable,Object)
  fullName: System.Activities.ActivityMetadata.AddVariable(Variable,Object)
- uid: System.Activities.ActivityMetadata.Bind(System.Activities.Argument,System.Activities.RuntimeArgument)
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: Bind(Argument,RuntimeArgument)
  nameWithType: ActivityMetadata.Bind(Argument,RuntimeArgument)
  fullName: System.Activities.ActivityMetadata.Bind(Argument,RuntimeArgument)
- uid: System.Activities.Argument
  parent: System.Activities
  isExternal: false
  name: Argument
  nameWithType: Argument
  fullName: System.Activities.Argument
- uid: System.Activities.ActivityMetadata.Environment
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: Environment
  nameWithType: ActivityMetadata.Environment
  fullName: System.Activities.ActivityMetadata.Environment
- uid: System.Activities.LocationReferenceEnvironment
  parent: System.Activities
  isExternal: false
  name: LocationReferenceEnvironment
  nameWithType: LocationReferenceEnvironment
  fullName: System.Activities.LocationReferenceEnvironment
- uid: System.Activities.ActivityMetadata.Equals(System.Object)
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: Equals(Object)
  nameWithType: ActivityMetadata.Equals(Object)
  fullName: System.Activities.ActivityMetadata.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.ActivityMetadata.GetArgumentsWithReflection
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: GetArgumentsWithReflection()
  nameWithType: ActivityMetadata.GetArgumentsWithReflection()
  fullName: System.Activities.ActivityMetadata.GetArgumentsWithReflection()
- uid: System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<RuntimeArgument>
  nameWithType: Collection<RuntimeArgument>
  fullName: System.Collections.ObjectModel.Collection<System.Activities.RuntimeArgument>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Activities.RuntimeArgument>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.RuntimeArgument
    name: RuntimeArgument
    nameWithType: RuntimeArgument
    fullName: RuntimeArgument
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.ActivityMetadata.GetHashCode
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: GetHashCode()
  nameWithType: ActivityMetadata.GetHashCode()
  fullName: System.Activities.ActivityMetadata.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Activities.ActivityMetadata.GetImportedChildrenWithReflection
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: GetImportedChildrenWithReflection()
  nameWithType: ActivityMetadata.GetImportedChildrenWithReflection()
  fullName: System.Activities.ActivityMetadata.GetImportedChildrenWithReflection()
- uid: System.Collections.ObjectModel.Collection{System.Activities.Activity}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<Activity>
  nameWithType: Collection<Activity>
  fullName: System.Collections.ObjectModel.Collection<System.Activities.Activity>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Activities.Activity>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Activity
    name: Activity
    nameWithType: Activity
    fullName: Activity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.ActivityMetadata.GetImportedDelegatesWithReflection
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: GetImportedDelegatesWithReflection()
  nameWithType: ActivityMetadata.GetImportedDelegatesWithReflection()
  fullName: System.Activities.ActivityMetadata.GetImportedDelegatesWithReflection()
- uid: System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ActivityDelegate>
  nameWithType: Collection<ActivityDelegate>
  fullName: System.Collections.ObjectModel.Collection<System.Activities.ActivityDelegate>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Activities.ActivityDelegate>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.ActivityDelegate
    name: ActivityDelegate
    nameWithType: ActivityDelegate
    fullName: ActivityDelegate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.ActivityMetadata.GetVariablesWithReflection
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: GetVariablesWithReflection()
  nameWithType: ActivityMetadata.GetVariablesWithReflection()
  fullName: System.Activities.ActivityMetadata.GetVariablesWithReflection()
- uid: System.Collections.ObjectModel.Collection{System.Activities.Variable}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<Variable>
  nameWithType: Collection<Variable>
  fullName: System.Collections.ObjectModel.Collection<System.Activities.Variable>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Activities.Variable>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Variable
    name: Variable
    nameWithType: Variable
    fullName: Variable
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.ActivityMetadata.HasViolations
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: HasViolations
  nameWithType: ActivityMetadata.HasViolations
  fullName: System.Activities.ActivityMetadata.HasViolations
- uid: System.Activities.ActivityMetadata.op_Equality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: op_Equality(ActivityMetadata,ActivityMetadata)
  nameWithType: ActivityMetadata.op_Equality(ActivityMetadata,ActivityMetadata)
  fullName: System.Activities.ActivityMetadata.op_Equality(ActivityMetadata,ActivityMetadata)
- uid: System.Activities.ActivityMetadata
  parent: System.Activities
  isExternal: false
  name: ActivityMetadata
  nameWithType: ActivityMetadata
  fullName: System.Activities.ActivityMetadata
- uid: System.Activities.ActivityMetadata.op_Inequality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: op_Inequality(ActivityMetadata,ActivityMetadata)
  nameWithType: ActivityMetadata.op_Inequality(ActivityMetadata,ActivityMetadata)
  fullName: System.Activities.ActivityMetadata.op_Inequality(ActivityMetadata,ActivityMetadata)
- uid: System.Activities.ActivityMetadata.RequireExtension(System.Type)
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: RequireExtension(Type)
  nameWithType: ActivityMetadata.RequireExtension(Type)
  fullName: System.Activities.ActivityMetadata.RequireExtension(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Activities.ActivityMetadata.RequireExtension``1
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: RequireExtension()
  nameWithType: ActivityMetadata.RequireExtension()
  fullName: System.Activities.ActivityMetadata.RequireExtension()
- uid: System.Activities.ActivityMetadata.SetArgumentsCollection(System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument})
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: SetArgumentsCollection(Collection<RuntimeArgument>)
  nameWithType: ActivityMetadata.SetArgumentsCollection(Collection<RuntimeArgument>)
  fullName: System.Activities.ActivityMetadata.SetArgumentsCollection(Collection<RuntimeArgument>)
- uid: System.Activities.ActivityMetadata.SetImportedChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: SetImportedChildrenCollection(Collection<Activity>)
  nameWithType: ActivityMetadata.SetImportedChildrenCollection(Collection<Activity>)
  fullName: System.Activities.ActivityMetadata.SetImportedChildrenCollection(Collection<Activity>)
- uid: System.Activities.ActivityMetadata.SetImportedDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: SetImportedDelegatesCollection(Collection<ActivityDelegate>)
  nameWithType: ActivityMetadata.SetImportedDelegatesCollection(Collection<ActivityDelegate>)
  fullName: System.Activities.ActivityMetadata.SetImportedDelegatesCollection(Collection<ActivityDelegate>)
- uid: System.Activities.ActivityMetadata.SetValidationErrorsCollection(System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError})
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: SetValidationErrorsCollection(Collection<ValidationError>)
  nameWithType: ActivityMetadata.SetValidationErrorsCollection(Collection<ValidationError>)
  fullName: System.Activities.ActivityMetadata.SetValidationErrorsCollection(Collection<ValidationError>)
- uid: System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ValidationError>
  nameWithType: Collection<ValidationError>
  fullName: System.Collections.ObjectModel.Collection<System.Activities.Validation.ValidationError>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Activities.Validation.ValidationError>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Validation.ValidationError
    name: ValidationError
    nameWithType: ValidationError
    fullName: ValidationError
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.ActivityMetadata.SetVariablesCollection(System.Collections.ObjectModel.Collection{System.Activities.Variable})
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: SetVariablesCollection(Collection<Variable>)
  nameWithType: ActivityMetadata.SetVariablesCollection(Collection<Variable>)
  fullName: System.Activities.ActivityMetadata.SetVariablesCollection(Collection<Variable>)
- uid: System.Activities.ActivityMetadata.AddArgument*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: AddArgument
  nameWithType: ActivityMetadata.AddArgument
- uid: System.Activities.ActivityMetadata.AddDefaultExtensionProvider<T>*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: AddDefaultExtensionProvider<T>
  nameWithType: ActivityMetadata.AddDefaultExtensionProvider<T>
- uid: System.Activities.ActivityMetadata.AddImportedChild*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: AddImportedChild
  nameWithType: ActivityMetadata.AddImportedChild
- uid: System.Activities.ActivityMetadata.AddImportedDelegate*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: AddImportedDelegate
  nameWithType: ActivityMetadata.AddImportedDelegate
- uid: System.Activities.ActivityMetadata.AddValidationError*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: AddValidationError
  nameWithType: ActivityMetadata.AddValidationError
- uid: System.Activities.ActivityMetadata.AddVariable*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: AddVariable
  nameWithType: ActivityMetadata.AddVariable
- uid: System.Activities.ActivityMetadata.Bind*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: Bind
  nameWithType: ActivityMetadata.Bind
- uid: System.Activities.ActivityMetadata.Environment*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: Environment
  nameWithType: ActivityMetadata.Environment
- uid: System.Activities.ActivityMetadata.Equals*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: Equals
  nameWithType: ActivityMetadata.Equals
- uid: System.Activities.ActivityMetadata.GetArgumentsWithReflection*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: GetArgumentsWithReflection
  nameWithType: ActivityMetadata.GetArgumentsWithReflection
- uid: System.Activities.ActivityMetadata.GetHashCode*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: GetHashCode
  nameWithType: ActivityMetadata.GetHashCode
- uid: System.Activities.ActivityMetadata.GetImportedChildrenWithReflection*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: GetImportedChildrenWithReflection
  nameWithType: ActivityMetadata.GetImportedChildrenWithReflection
- uid: System.Activities.ActivityMetadata.GetImportedDelegatesWithReflection*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: GetImportedDelegatesWithReflection
  nameWithType: ActivityMetadata.GetImportedDelegatesWithReflection
- uid: System.Activities.ActivityMetadata.GetVariablesWithReflection*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: GetVariablesWithReflection
  nameWithType: ActivityMetadata.GetVariablesWithReflection
- uid: System.Activities.ActivityMetadata.HasViolations*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: HasViolations
  nameWithType: ActivityMetadata.HasViolations
- uid: System.Activities.ActivityMetadata.op_Equality*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: op_Equality
  nameWithType: ActivityMetadata.op_Equality
- uid: System.Activities.ActivityMetadata.op_Inequality*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: op_Inequality
  nameWithType: ActivityMetadata.op_Inequality
- uid: System.Activities.ActivityMetadata.RequireExtension*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: RequireExtension
  nameWithType: ActivityMetadata.RequireExtension
- uid: System.Activities.ActivityMetadata.RequireExtension<T>*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: RequireExtension<T>
  nameWithType: ActivityMetadata.RequireExtension<T>
- uid: System.Activities.ActivityMetadata.SetArgumentsCollection*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: SetArgumentsCollection
  nameWithType: ActivityMetadata.SetArgumentsCollection
- uid: System.Activities.ActivityMetadata.SetImportedChildrenCollection*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: SetImportedChildrenCollection
  nameWithType: ActivityMetadata.SetImportedChildrenCollection
- uid: System.Activities.ActivityMetadata.SetImportedDelegatesCollection*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: SetImportedDelegatesCollection
  nameWithType: ActivityMetadata.SetImportedDelegatesCollection
- uid: System.Activities.ActivityMetadata.SetValidationErrorsCollection*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: SetValidationErrorsCollection
  nameWithType: ActivityMetadata.SetValidationErrorsCollection
- uid: System.Activities.ActivityMetadata.SetVariablesCollection*
  parent: System.Activities.ActivityMetadata
  isExternal: false
  name: SetVariablesCollection
  nameWithType: ActivityMetadata.SetVariablesCollection
