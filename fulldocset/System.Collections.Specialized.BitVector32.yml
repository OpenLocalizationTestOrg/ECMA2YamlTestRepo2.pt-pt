### YamlMime:ManagedReference
items:
- uid: System.Collections.Specialized.BitVector32
  id: BitVector32
  children:
  - System.Collections.Specialized.BitVector32.#ctor(System.Collections.Specialized.BitVector32)
  - System.Collections.Specialized.BitVector32.#ctor(System.Int32)
  - System.Collections.Specialized.BitVector32.CreateMask
  - System.Collections.Specialized.BitVector32.CreateMask(System.Int32)
  - System.Collections.Specialized.BitVector32.CreateSection(System.Int16)
  - System.Collections.Specialized.BitVector32.CreateSection(System.Int16,System.Collections.Specialized.BitVector32.Section)
  - System.Collections.Specialized.BitVector32.Data
  - System.Collections.Specialized.BitVector32.Equals(System.Object)
  - System.Collections.Specialized.BitVector32.GetHashCode
  - System.Collections.Specialized.BitVector32.Item(System.Collections.Specialized.BitVector32.Section)
  - System.Collections.Specialized.BitVector32.Item(System.Int32)
  - System.Collections.Specialized.BitVector32.ToString
  - System.Collections.Specialized.BitVector32.ToString(System.Collections.Specialized.BitVector32)
  langs:
  - csharp
  name: BitVector32
  nameWithType: BitVector32
  fullName: System.Collections.Specialized.BitVector32
  type: Struct
  summary: "Fornece uma estrutura simples que armazena os valores booleanos e pequenos números inteiros em 32 bits de memória."
  remarks: "BitVector32 é mais eficiente do que <xref:System.Collections.BitArray>para os valores booleanos e pequenos números inteiros que são utilizados internamente.</xref:System.Collections.BitArray> A <xref:System.Collections.BitArray>cresça indefinidamente conforme necessário, mas tem a sobrecarga de memória e desempenho que necessita de uma instância de classe.</xref:System.Collections.BitArray> Em contrapartida, uma BitVector32 utiliza apenas de 32 bits.       Pode ser definida uma estrutura de BitVector32 operacional para conter o secções de números inteiros pequenos ou sinalizadores de bits para em booleanos, mas não ambos. Um <xref:System.Collections.Specialized.BitVector32.Section>é uma janela para o BitVector32 e é composto do menor número de bits consecutivos que pode conter o valor máximo especificado na <xref:System.Collections.Specialized.BitVector32.CreateSection%2A>.</xref:System.Collections.Specialized.BitVector32.CreateSection%2A> </xref:System.Collections.Specialized.BitVector32.Section> Por exemplo, uma secção com um valor máximo de 1 é composta por apenas um bit, enquanto que uma secção com um valor máximo de 5 é composta por três bits. Pode criar um <xref:System.Collections.Specialized.BitVector32.Section>com um valor máximo de 1 para servir como um valor booleano, deste modo, permitindo-lhe armazenar números inteiros e em booleanos na mesma BitVector32.</xref:System.Collections.Specialized.BitVector32.Section>       Alguns membros podem ser utilizados para um BitVector32 que está configurado como secções, enquanto outros membros podem ser utilizados para um que esteja configurado como sinalizadores de bits. Por exemplo, o <xref:System.Collections.Specialized.BitVector32.Item%2A?displayProperty=fullName>propriedade é o indexador para um BitVector32 que está configurado como secções, e o <xref:System.Collections.Specialized.BitVector32.Item%2A?displayProperty=fullName>propriedade é o indexador para um BitVector32 que está configurado como sinalizadores de bits.</xref:System.Collections.Specialized.BitVector32.Item%2A?displayProperty=fullName> </xref:System.Collections.Specialized.BitVector32.Item%2A?displayProperty=fullName> <xref:System.Collections.Specialized.BitVector32.CreateMask%2A>cria uma série de máscaras de que pode ser utilizado para aceder aos bits individuais de um BitVector32 que está configurado como sinalizadores de bits.</xref:System.Collections.Specialized.BitVector32.CreateMask%2A>       Utilizar uma máscara num BitVector32 que esteja configurado como secções poderão provocar resultados inesperados."
  example:
  - "The following code example uses a BitVector32 as a collection of bit flags.  \n  \n [!code-cs[System.Collections.Specialized.BitVector32_BitFlags#1](~/add/codesnippet/csharp/t-system.collections.spe_10_1.cs)]\n [!code-vb[System.Collections.Specialized.BitVector32_BitFlags#1](~/add/codesnippet/visualbasic/t-system.collections.spe_10_1.vb)]\n [!code-cpp[System.Collections.Specialized.BitVector32_BitFlags#1](~/add/codesnippet/cpp/t-system.collections.spe_10_1.cpp)]  \n  \n The following code example uses a BitVector32 as a collection of sections.  \n  \n [!code-cpp[System.Collections.Specialized.BitVector32_Sections#1](~/add/codesnippet/cpp/t-system.collections.spe_10_2.cpp)]\n [!code-cs[System.Collections.Specialized.BitVector32_Sections#1](~/add/codesnippet/csharp/t-system.collections.spe_10_2.cs)]\n [!code-vb[System.Collections.Specialized.BitVector32_Sections#1](~/add/codesnippet/visualbasic/t-system.collections.spe_10_2.vb)]"
  syntax:
    content: public struct BitVector32
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.#ctor(System.Collections.Specialized.BitVector32)
  id: '#ctor(System.Collections.Specialized.BitVector32)'
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: BitVector32(BitVector32)
  nameWithType: BitVector32.BitVector32(BitVector32)
  fullName: System.Collections.Specialized.BitVector32.BitVector32(BitVector32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> estrutura que contém os dados representados no existente <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> estrutura."
  remarks: "Este construtor é uma operação de O(1)."
  syntax:
    content: public BitVector32 (System.Collections.Specialized.BitVector32 value);
    parameters:
    - id: value
      type: System.Collections.Specialized.BitVector32
      description: "A <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> estrutura que contém os dados para copiar."
  overload: System.Collections.Specialized.BitVector32.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: BitVector32(Int32)
  nameWithType: BitVector32.BitVector32(Int32)
  fullName: System.Collections.Specialized.BitVector32.BitVector32(Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> estrutura que contém os dados representados num número inteiro."
  remarks: "Este construtor é uma operação de O(1)."
  syntax:
    content: public BitVector32 (int data);
    parameters:
    - id: data
      type: System.Int32
      description: "Um número inteiro que representa os dados da nova <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  overload: System.Collections.Specialized.BitVector32.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.CreateMask
  id: CreateMask
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: CreateMask()
  nameWithType: BitVector32.CreateMask()
  fullName: System.Collections.Specialized.BitVector32.CreateMask()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Cria a primeira máscara de uma série de máscaras de que pode ser utilizado para obter individuais bits de um <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> que está configurado como sinalizadores de bits."
  remarks: "Utilize `CreateMask()` para criar a primeira máscara de uma série e `CreateMask(int)` para todas as máscaras de subsequentes.       Podem ser criadas vários máscaras referir-se para o mesmo sinalizador de bits.       A máscara resultante isola único de um bit de sinalizador no <xref:System.Collections.Specialized.BitVector32>.</xref:System.Collections.Specialized.BitVector32> Pode combinar máscaras de utilizar a operação ou bit a bit para criar uma máscara que isola vários sinalizadores de bits <xref:System.Collections.Specialized.BitVector32>.</xref:System.Collections.Specialized.BitVector32>       Utilizar uma máscara num <xref:System.Collections.Specialized.BitVector32>que está configurado conforme secções poderão provocar resultados inesperados.</xref:System.Collections.Specialized.BitVector32>       Este método é uma operação de O(1)."
  example:
  - "The following code example shows how to create and use masks.  \n  \n [!code-cs[System.Collections.Specialized.BitVector32.CreateMasks#1](~/add/codesnippet/csharp/m-system.collections.spe_3_1.cs)]\n [!code-cpp[System.Collections.Specialized.BitVector32.CreateMasks#1](~/add/codesnippet/cpp/m-system.collections.spe_3_1.cpp)]\n [!code-vb[System.Collections.Specialized.BitVector32.CreateMasks#1](~/add/codesnippet/visualbasic/m-system.collections.spe_3_1.vb)]"
  syntax:
    content: public static int CreateMask ();
    parameters: []
    return:
      type: System.Int32
      description: "Uma máscara que isola o sinalizador de bits primeiro no <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  overload: System.Collections.Specialized.BitVector32.CreateMask*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.CreateMask(System.Int32)
  id: CreateMask(System.Int32)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: CreateMask(Int32)
  nameWithType: BitVector32.CreateMask(Int32)
  fullName: System.Collections.Specialized.BitVector32.CreateMask(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Cria uma máscara adicional seguintes a máscara especificada numa série de máscaras de que pode ser utilizado para obter individuais bits de um <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> que está configurado como sinalizadores de bits."
  remarks: "Utilize `CreateMask()` para criar a primeira máscara de uma série e `CreateMask(int)` para todas as máscaras de subsequentes.       Podem ser criadas vários máscaras referir-se para o mesmo sinalizador de bits.       A máscara resultante isola único de um bit de sinalizador no <xref:System.Collections.Specialized.BitVector32>.</xref:System.Collections.Specialized.BitVector32> Pode combinar máscaras de utilizar a operação ou bit a bit para criar uma máscara que isola vários sinalizadores de bits <xref:System.Collections.Specialized.BitVector32>.</xref:System.Collections.Specialized.BitVector32>       Utilizar uma máscara num <xref:System.Collections.Specialized.BitVector32>que está configurado conforme secções poderão provocar resultados inesperados.</xref:System.Collections.Specialized.BitVector32>       Este método é uma operação de O(1)."
  example:
  - "The following code example shows how to create and use masks.  \n  \n [!code-cs[System.Collections.Specialized.BitVector32.CreateMasks#1](~/add/codesnippet/csharp/m-system.collections.spe_5_1.cs)]\n [!code-cpp[System.Collections.Specialized.BitVector32.CreateMasks#1](~/add/codesnippet/cpp/m-system.collections.spe_5_1.cpp)]\n [!code-vb[System.Collections.Specialized.BitVector32.CreateMasks#1](~/add/codesnippet/visualbasic/m-system.collections.spe_5_1.vb)]"
  syntax:
    content: public static int CreateMask (int previous);
    parameters:
    - id: previous
      type: System.Int32
      description: "A máscara que indica o sinalizador de bits anterior."
    return:
      type: System.Int32
      description: "Uma máscara que isola o bit sinalizador seguintes aquele que <code> previous </code> pontos na <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  overload: System.Collections.Specialized.BitVector32.CreateMask*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>previous</code>indica o sinalizador de bits último no <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.CreateSection(System.Int16)
  id: CreateSection(System.Int16)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: CreateSection(Int16)
  nameWithType: BitVector32.CreateSection(Int16)
  fullName: System.Collections.Specialized.BitVector32.CreateSection(Int16)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Cria o primeiro <xref:System.Collections.Specialized.BitVector32.Section>numa série de secções que contêm a pequenos números inteiros.</xref:System.Collections.Specialized.BitVector32.Section>"
  remarks: "A <xref:System.Collections.Specialized.BitVector32.Section>é uma janela para o <xref:System.Collections.Specialized.BitVector32>e é composto do menor número de bits consecutivos que pode conter o valor máximo especificado na CreateSection.</xref:System.Collections.Specialized.BitVector32> </xref:System.Collections.Specialized.BitVector32.Section> Por exemplo, uma secção com um valor máximo de 1 é composta por apenas um bit, enquanto que uma secção com um valor máximo de 5 é composta por três bits. Pode criar uma <xref:System.Collections.Specialized.BitVector32.Section>com um valor máximo de 1 para servir como um valor booleano, deste modo, permitindo-lhe números inteiros de arquivo e em booleanos no mesmo <xref:System.Collections.Specialized.BitVector32>.</xref:System.Collections.Specialized.BitVector32> </xref:System.Collections.Specialized.BitVector32.Section>       Se já existem secções no <xref:System.Collections.Specialized.BitVector32>, essas secções são continuarão acessíveis; no entanto, a sobreposição de secções poderá provocar resultados inesperados.</xref:System.Collections.Specialized.BitVector32>       Este método é uma operação de O(1)."
  example:
  - "The following code example uses a <xref:System.Collections.Specialized.BitVector32> as a collection of sections.  \n  \n [!code-cpp[System.Collections.Specialized.BitVector32_Sections#1](~/add/codesnippet/cpp/m-system.collections.spe_18_1.cpp)]\n [!code-cs[System.Collections.Specialized.BitVector32_Sections#1](~/add/codesnippet/csharp/m-system.collections.spe_18_1.cs)]\n [!code-vb[System.Collections.Specialized.BitVector32_Sections#1](~/add/codesnippet/visualbasic/m-system.collections.spe_18_1.vb)]"
  syntax:
    content: public static System.Collections.Specialized.BitVector32.Section CreateSection (short maxValue);
    parameters:
    - id: maxValue
      type: System.Int16
      description: "Um 16 bits com sinal número inteiro que especifica o valor máximo para o novo <xref:System.Collections.Specialized.BitVector32.Section>.</xref:System.Collections.Specialized.BitVector32.Section>"
    return:
      type: System.Collections.Specialized.BitVector32.Section
      description: "A <xref:System.Collections.Specialized.BitVector32.Section>que pode conter um número entre zero e <code> maxValue </code>.</xref:System.Collections.Specialized.BitVector32.Section>"
  overload: System.Collections.Specialized.BitVector32.CreateSection*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>maxValue</code>é menor que 1."
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.CreateSection(System.Int16,System.Collections.Specialized.BitVector32.Section)
  id: CreateSection(System.Int16,System.Collections.Specialized.BitVector32.Section)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: CreateSection(Int16,BitVector32+Section)
  nameWithType: BitVector32.CreateSection(Int16,BitVector32+Section)
  fullName: System.Collections.Specialized.BitVector32.CreateSection(Int16,BitVector32+Section)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  syntax:
    content: public static System.Collections.Specialized.BitVector32.Section CreateSection (short maxValue, System.Collections.Specialized.BitVector32.Section previous);
    parameters:
    - id: maxValue
      type: System.Int16
      description: "A adicionar."
    - id: previous
      type: System.Collections.Specialized.BitVector32.Section
      description: "A adicionar."
    return:
      type: System.Collections.Specialized.BitVector32.Section
      description: "A adicionar."
  overload: System.Collections.Specialized.BitVector32.CreateSection*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.Data
  id: Data
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: Data
  nameWithType: BitVector32.Data
  fullName: System.Collections.Specialized.BitVector32.Data
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Obtém o valor da <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> como um número inteiro."
  remarks: "Para aceder ao valor das secções individuais ou sinalizadores de bits, utilize o <xref:System.Collections.Specialized.BitVector32.Item%2A>propriedade.</xref:System.Collections.Specialized.BitVector32.Item%2A>       Obter o valor desta propriedade é uma operação de O(1)."
  syntax:
    content: public int Data { get; }
    return:
      type: System.Int32
      description: "O valor da <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> como um número inteiro."
  overload: System.Collections.Specialized.BitVector32.Data*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: BitVector32.Equals(Object)
  fullName: System.Collections.Specialized.BitVector32.Equals(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Determina se o objeto especificado é igual a <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  remarks: "O objeto `o` é considerado igual para a <xref:System.Collections.Specialized.BitVector32>se o tipo de `o` é compatível com o <xref:System.Collections.Specialized.BitVector32>tipo e se o valor de `o` é igual ao valor de <xref:System.Collections.Specialized.BitVector32.Data%2A>.</xref:System.Collections.Specialized.BitVector32.Data%2A> </xref:System.Collections.Specialized.BitVector32> </xref:System.Collections.Specialized.BitVector32>       Este método é uma operação de O(1)."
  example:
  - "The following code example compares a <xref:System.Collections.Specialized.BitVector32> with another <xref:System.Collections.Specialized.BitVector32> and with an <xref:System.Int32>.  \n  \n [!code-cpp[System.Collections.Specialized.BitVector32.Equals#1](~/add/codesnippet/cpp/m-system.collections.spe_34_1.cpp)]\n [!code-cs[System.Collections.Specialized.BitVector32.Equals#1](~/add/codesnippet/csharp/m-system.collections.spe_34_1.cs)]\n [!code-vb[System.Collections.Specialized.BitVector32.Equals#1](~/add/codesnippet/visualbasic/m-system.collections.spe_34_1.vb)]"
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "O objeto para a comparação com a atual <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o objeto especificado for igual do <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.BitVector32.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.GetHashCode
  id: GetHashCode
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: BitVector32.GetHashCode()
  fullName: System.Collections.Specialized.BitVector32.GetHashCode()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Funciona como uma função de hash para o <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  remarks: "O código hash de um <xref:System.Collections.Specialized.BitVector32>baseia-se no valor de <xref:System.Collections.Specialized.BitVector32.Data%2A>.</xref:System.Collections.Specialized.BitVector32.Data%2A> </xref:System.Collections.Specialized.BitVector32> Duas instâncias do <xref:System.Collections.Specialized.BitVector32>com o mesmo valor para <xref:System.Collections.Specialized.BitVector32.Data%2A>também irá gerar o mesmo código hash.</xref:System.Collections.Specialized.BitVector32.Data%2A> </xref:System.Collections.Specialized.BitVector32>       Este método é uma operação de O(1)."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Um código hash para o <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  overload: System.Collections.Specialized.BitVector32.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.Item(System.Collections.Specialized.BitVector32.Section)
  id: Item(System.Collections.Specialized.BitVector32.Section)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: Item(BitVector32+Section)
  nameWithType: BitVector32.Item(BitVector32+Section)
  fullName: System.Collections.Specialized.BitVector32.Item(BitVector32+Section)
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  syntax:
    content: public int this[System.Collections.Specialized.BitVector32.Section section] { get; set; }
    parameters:
    - id: section
      type: System.Collections.Specialized.BitVector32.Section
      description: "A adicionar."
    return:
      type: System.Int32
      description: "A adicionar."
  overload: System.Collections.Specialized.BitVector32.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: BitVector32.Item(Int32)
  fullName: System.Collections.Specialized.BitVector32.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Obtém ou define o estado do sinalizador de bits indicado pela máscara especificada."
  remarks: "A propriedade do Item [secção] é o indexador para um <xref:System.Collections.Specialized.BitVector32>que está configurado como secções e a propriedade do Item [int] é o indexador para um <xref:System.Collections.Specialized.BitVector32>que está configurado como sinalizadores de bits.</xref:System.Collections.Specialized.BitVector32> </xref:System.Collections.Specialized.BitVector32>       Com esta propriedade num <xref:System.Collections.Specialized.BitVector32>que está configurado conforme secções poderão provocar resultados inesperados.</xref:System.Collections.Specialized.BitVector32>       A linguagem c# utiliza a palavra-chave para definir os indexadores em vez de implementar a propriedade do Item. Visual Basic implementa Item como uma propriedade predefinida, que fornece a mesma funcionalidade de indexação.       Obter o valor desta propriedade é uma operação de O(1); definir a propriedade também é uma operação O(1)."
  syntax:
    content: public bool this[int bit] { get; set; }
    parameters:
    - id: bit
      type: System.Int32
      description: "Uma máscara que indica o bit obter ou definir."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o sinalizador de bits especificado estiver numa (1); caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.BitVector32.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.ToString
  id: ToString
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: ToString()
  nameWithType: BitVector32.ToString()
  fullName: System.Collections.Specialized.BitVector32.ToString()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Devolve uma cadeia que representa o atual <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  remarks: "Este método substitui <xref:System.Object.ToString%2A?displayProperty=fullName>.</xref:System.Object.ToString%2A?displayProperty=fullName>       Este método é uma operação de O(1)."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Uma cadeia que representa o atual <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  overload: System.Collections.Specialized.BitVector32.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.ToString(System.Collections.Specialized.BitVector32)
  id: ToString(System.Collections.Specialized.BitVector32)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: ToString(BitVector32)
  nameWithType: BitVector32.ToString(BitVector32)
  fullName: System.Collections.Specialized.BitVector32.ToString(BitVector32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Devolve uma cadeia que representa o especificado <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  remarks: "Este método é uma operação de O(1)."
  syntax:
    content: public static string ToString (System.Collections.Specialized.BitVector32 value);
    parameters:
    - id: value
      type: System.Collections.Specialized.BitVector32
      description: "O <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref> para representar."
    return:
      type: System.String
      description: "Uma cadeia que representa o especificado <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>."
  overload: System.Collections.Specialized.BitVector32.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Collections.Specialized.BitVector32.#ctor(System.Collections.Specialized.BitVector32)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: BitVector32(BitVector32)
  nameWithType: BitVector32.BitVector32(BitVector32)
  fullName: System.Collections.Specialized.BitVector32.BitVector32(BitVector32)
- uid: System.Collections.Specialized.BitVector32
  parent: System.Collections.Specialized
  isExternal: false
  name: BitVector32
  nameWithType: BitVector32
  fullName: System.Collections.Specialized.BitVector32
- uid: System.Collections.Specialized.BitVector32.#ctor(System.Int32)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: BitVector32(Int32)
  nameWithType: BitVector32.BitVector32(Int32)
  fullName: System.Collections.Specialized.BitVector32.BitVector32(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Specialized.BitVector32.CreateMask
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: CreateMask()
  nameWithType: BitVector32.CreateMask()
  fullName: System.Collections.Specialized.BitVector32.CreateMask()
- uid: System.Collections.Specialized.BitVector32.CreateMask(System.Int32)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: CreateMask(Int32)
  nameWithType: BitVector32.CreateMask(Int32)
  fullName: System.Collections.Specialized.BitVector32.CreateMask(Int32)
- uid: System.Collections.Specialized.BitVector32.CreateSection(System.Int16)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: CreateSection(Int16)
  nameWithType: BitVector32.CreateSection(Int16)
  fullName: System.Collections.Specialized.BitVector32.CreateSection(Int16)
- uid: System.Collections.Specialized.BitVector32.Section
  parent: System.Collections.Specialized
  isExternal: false
  name: BitVector32+Section
  nameWithType: BitVector32+Section
  fullName: System.Collections.Specialized.BitVector32+Section
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Collections.Specialized.BitVector32.CreateSection(System.Int16,System.Collections.Specialized.BitVector32.Section)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: CreateSection(Int16,BitVector32+Section)
  nameWithType: BitVector32.CreateSection(Int16,BitVector32+Section)
  fullName: System.Collections.Specialized.BitVector32.CreateSection(Int16,BitVector32+Section)
- uid: System.Collections.Specialized.BitVector32.Data
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Data
  nameWithType: BitVector32.Data
  fullName: System.Collections.Specialized.BitVector32.Data
- uid: System.Collections.Specialized.BitVector32.Equals(System.Object)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Equals(Object)
  nameWithType: BitVector32.Equals(Object)
  fullName: System.Collections.Specialized.BitVector32.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Specialized.BitVector32.GetHashCode
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: GetHashCode()
  nameWithType: BitVector32.GetHashCode()
  fullName: System.Collections.Specialized.BitVector32.GetHashCode()
- uid: System.Collections.Specialized.BitVector32.Item(System.Collections.Specialized.BitVector32.Section)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Item(BitVector32+Section)
  nameWithType: BitVector32.Item(BitVector32+Section)
  fullName: System.Collections.Specialized.BitVector32.Item(BitVector32+Section)
- uid: System.Collections.Specialized.BitVector32.Item(System.Int32)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Item(Int32)
  nameWithType: BitVector32.Item(Int32)
  fullName: System.Collections.Specialized.BitVector32.Item(Int32)
- uid: System.Collections.Specialized.BitVector32.ToString
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: ToString()
  nameWithType: BitVector32.ToString()
  fullName: System.Collections.Specialized.BitVector32.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Specialized.BitVector32.ToString(System.Collections.Specialized.BitVector32)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: ToString(BitVector32)
  nameWithType: BitVector32.ToString(BitVector32)
  fullName: System.Collections.Specialized.BitVector32.ToString(BitVector32)
- uid: System.Collections.Specialized.BitVector32.#ctor*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: BitVector32
  nameWithType: BitVector32.BitVector32
- uid: System.Collections.Specialized.BitVector32.CreateMask*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: CreateMask
  nameWithType: BitVector32.CreateMask
- uid: System.Collections.Specialized.BitVector32.CreateSection*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: CreateSection
  nameWithType: BitVector32.CreateSection
- uid: System.Collections.Specialized.BitVector32.Data*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Data
  nameWithType: BitVector32.Data
- uid: System.Collections.Specialized.BitVector32.Equals*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Equals
  nameWithType: BitVector32.Equals
- uid: System.Collections.Specialized.BitVector32.GetHashCode*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: GetHashCode
  nameWithType: BitVector32.GetHashCode
- uid: System.Collections.Specialized.BitVector32.Item*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Item
  nameWithType: BitVector32.Item
- uid: System.Collections.Specialized.BitVector32.ToString*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: ToString
  nameWithType: BitVector32.ToString
