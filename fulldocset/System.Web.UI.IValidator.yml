### YamlMime:ManagedReference
items:
- uid: System.Web.UI.IValidator
  id: IValidator
  children:
  - System.Web.UI.IValidator.ErrorMessage
  - System.Web.UI.IValidator.IsValid
  - System.Web.UI.IValidator.Validate
  langs:
  - csharp
  name: IValidator
  nameWithType: IValidator
  fullName: System.Web.UI.IValidator
  type: Interface
  summary: "Defines the properties and methods that objects that participate in Web Forms validation must implement."
  remarks: "Classes that implement this interface represent a possible user input error. When the <xref:System.Web.UI.IValidator.Validate%2A> method is called, the class updates its <xref:System.Web.UI.IValidator.IsValid%2A> property to signify whether the error occurred. The <xref:System.Web.UI.IValidator.ErrorMessage%2A> property contains a text description of the error condition that you can display when the error occurs.       The <xref:System.Web.UI.WebControls.BaseValidator> class implements this interface, and all other ASP.NET validation server control classes inherit from <xref:System.Web.UI.WebControls.BaseValidator>. For information on validation server controls and how they work, see [ASP.NET Validation Controls](~/add/includes/ajax-current-ext-md.md).       For details on how to develop custom ASP.NET validation server controls, see [How to: Validate with a Custom Function for ASP.NET Server Controls](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[IValidator_IsValid_Resubmit#1](~/add/codesnippet/visualbasic/t-system.web.ui.ivalidator_1.aspx)]\n [!code-cs[IValidator_IsValid_Resubmit#1](~/add/codesnippet/csharp/t-system.web.ui.ivalidator_1.aspx)]"
  syntax:
    content: public interface IValidator
  implements: []
  platform:
  - net462
- uid: System.Web.UI.IValidator.ErrorMessage
  id: ErrorMessage
  parent: System.Web.UI.IValidator
  langs:
  - csharp
  name: ErrorMessage
  nameWithType: IValidator.ErrorMessage
  fullName: System.Web.UI.IValidator.ErrorMessage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "When implemented by a class, gets or sets the error message text generated when the condition being validated fails."
  remarks: "ASP.NET developers access this property declaratively in the opening tag of a validation server control. For more information, see [Validation Server Control Syntax](http://msdn.microsoft.com/en-us/96d2c59e-693c-4079-9b53-b3ff0d9e9133)."
  example:
  - "> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[IValidator_IsValid_Resubmit#1](~/add/codesnippet/visualbasic/p-system.web.ui.ivalidat_1_1.aspx)]\n [!code-cs[IValidator_IsValid_Resubmit#1](~/add/codesnippet/csharp/p-system.web.ui.ivalidat_1_1.aspx)]"
  syntax:
    content: public string ErrorMessage { get; set; }
    return:
      type: System.String
      description: "The error message to generate."
  overload: System.Web.UI.IValidator.ErrorMessage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.IValidator.IsValid
  id: IsValid
  parent: System.Web.UI.IValidator
  langs:
  - csharp
  name: IsValid
  nameWithType: IValidator.IsValid
  fullName: System.Web.UI.IValidator.IsValid
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "When implemented by a class, gets or sets a value indicating whether the user-entered content in the specified control passes validation."
  remarks: ''
  example:
  - "> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[IValidator_IsValid_Resubmit#1](~/add/codesnippet/visualbasic/p-system.web.ui.ivalidat_0_1.aspx)]\n [!code-cs[IValidator_IsValid_Resubmit#1](~/add/codesnippet/csharp/p-system.web.ui.ivalidat_0_1.aspx)]"
  syntax:
    content: public bool IsValid { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the content is valid; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.IValidator.IsValid*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.IValidator.Validate
  id: Validate
  parent: System.Web.UI.IValidator
  langs:
  - csharp
  name: Validate()
  nameWithType: IValidator.Validate()
  fullName: System.Web.UI.IValidator.Validate()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "When implemented by a class, evaluates the condition it checks and updates the <xref:System.Web.UI.IValidator.IsValid*> property."
  remarks: ''
  example:
  - "> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[IValidator_IsValid_Resubmit#1](~/add/codesnippet/visualbasic/m-system.web.ui.ivalidat_1.aspx)]\n [!code-cs[IValidator_IsValid_Resubmit#1](~/add/codesnippet/csharp/m-system.web.ui.ivalidat_1.aspx)]"
  syntax:
    content: public void Validate ();
    parameters: []
  overload: System.Web.UI.IValidator.Validate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.IValidator.ErrorMessage
  parent: System.Web.UI.IValidator
  isExternal: false
  name: ErrorMessage
  nameWithType: IValidator.ErrorMessage
  fullName: System.Web.UI.IValidator.ErrorMessage
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.IValidator.IsValid
  parent: System.Web.UI.IValidator
  isExternal: false
  name: IsValid
  nameWithType: IValidator.IsValid
  fullName: System.Web.UI.IValidator.IsValid
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.IValidator.Validate
  parent: System.Web.UI.IValidator
  isExternal: false
  name: Validate()
  nameWithType: IValidator.Validate()
  fullName: System.Web.UI.IValidator.Validate()
- uid: System.Web.UI.IValidator.ErrorMessage*
  parent: System.Web.UI.IValidator
  isExternal: false
  name: ErrorMessage
  nameWithType: IValidator.ErrorMessage
- uid: System.Web.UI.IValidator.IsValid*
  parent: System.Web.UI.IValidator
  isExternal: false
  name: IsValid
  nameWithType: IValidator.IsValid
- uid: System.Web.UI.IValidator.Validate*
  parent: System.Web.UI.IValidator
  isExternal: false
  name: Validate
  nameWithType: IValidator.Validate
