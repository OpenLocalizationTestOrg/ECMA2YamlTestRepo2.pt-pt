### YamlMime:ManagedReference
items:
- uid: System.Configuration.IntegerValidator
  id: IntegerValidator
  children:
  - System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32)
  - System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean)
  - System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)
  - System.Configuration.IntegerValidator.CanValidate(System.Type)
  - System.Configuration.IntegerValidator.Validate(System.Object)
  langs:
  - csharp
  name: IntegerValidator
  nameWithType: IntegerValidator
  fullName: System.Configuration.IntegerValidator
  type: Class
  summary: "Fornece a validação de um <xref:System.Int32>valor.</xref:System.Int32>"
  remarks: "A classe de IntegerValidator é utilizada para garantir que um número inteiro cumpre os critérios específicos. Os critérios de validação são estabelecidos quando é criada uma instância da classe IntegerValidator. O <xref:System.Configuration.IntegerValidator.%23ctor%2A>construtor com dois parâmetros assegura que o número inteiro que está a ser verificado respeite um mínimo e um valor máximo.</xref:System.Configuration.IntegerValidator.%23ctor%2A> O <xref:System.Configuration.IntegerValidator.%23ctor%2A>construtor com três parâmetros verifica o mínimo e máximo <xref:System.Int32>valores, bem como se o valor para ser validado está dentro do intervalo especificado.</xref:System.Int32> </xref:System.Configuration.IntegerValidator.%23ctor%2A> O <xref:System.Configuration.IntegerValidator.%23ctor%2A>construtor com quatro parâmetros verifica e as três parâmetros anteriores e também verifica se o <xref:System.Int32>valor é igual a uma resolução específica.</xref:System.Int32> </xref:System.Configuration.IntegerValidator.%23ctor%2A>       O <xref:System.Configuration.IntegerValidator.CanValidate%2A>método determina se o tipo de objeto a ser validado corresponde ao tipo esperado.</xref:System.Configuration.IntegerValidator.CanValidate%2A> O objeto a ser validado é transmitido como um parâmetro do <xref:System.Configuration.IntegerValidator.Validate%2A>método.</xref:System.Configuration.IntegerValidator.Validate%2A>"
  example:
  - "The following code example demonstrates how to use the IntegerValidator type.  \n  \n [!code-vb[System.Configuration.IntegerValidator#1](~/add/codesnippet/visualbasic/t-system.configuration.i_3_1.vb)]\n [!code-cs[System.Configuration.IntegerValidator#1](~/add/codesnippet/csharp/t-system.configuration.i_3_1.cs)]"
  syntax:
    content: 'public class IntegerValidator : System.Configuration.ConfigurationValidatorBase'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationValidatorBase
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: System.Configuration.IntegerValidator
  langs:
  - csharp
  name: IntegerValidator(Int32,Int32)
  nameWithType: IntegerValidator.IntegerValidator(Int32,Int32)
  fullName: System.Configuration.IntegerValidator.IntegerValidator(Int32,Int32)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Configuration.IntegerValidator&quot;> </xref> classe."
  remarks: "Este construtor IntegerValidator assegura que o número inteiro que está a ser verificado respeite um mínimo e um comprimento máximo."
  syntax:
    content: public IntegerValidator (int minValue, int maxValue);
    parameters:
    - id: minValue
      type: System.Int32
      description: "Um <xref:System.Int32>objeto que especifica o valor mínimo.</xref:System.Int32>"
    - id: maxValue
      type: System.Int32
      description: "Um <xref:System.Int32>objeto que especifica o valor máximo.</xref:System.Int32>"
  overload: System.Configuration.IntegerValidator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean)
  id: '#ctor(System.Int32,System.Int32,System.Boolean)'
  parent: System.Configuration.IntegerValidator
  langs:
  - csharp
  name: IntegerValidator(Int32,Int32,Boolean)
  nameWithType: IntegerValidator.IntegerValidator(Int32,Int32,Boolean)
  fullName: System.Configuration.IntegerValidator.IntegerValidator(Int32,Int32,Boolean)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Configuration.IntegerValidator&quot;> </xref> classe."
  remarks: "Quando criar uma instância do <xref:System.Configuration.IntegerValidator>classe, este construtor IntegerValidator verifica o mínimo e máximo <xref:System.Int32>valores, bem como se o intervalo de validação é exclusivo.</xref:System.Int32> </xref:System.Configuration.IntegerValidator> Quando o `rangeIsExclusive` parâmetro está definido como `true`, a <xref:System.Int32>valor não deve estar entre o `minValue` e `maxValue` valores de parâmetros.</xref:System.Int32>"
  example:
  - "The following code example demonstrates how to use the IntegerValidator constructor. This code example is part of a larger example provided for the <xref:System.Configuration.IntegerValidator> class.  \n  \n [!code-vb[System.Configuration.IntegerValidator#2](~/add/codesnippet/visualbasic/39b5b9f2-305e-4ede-8502-_1.vb)]\n [!code-cs[System.Configuration.IntegerValidator#2](~/add/codesnippet/csharp/39b5b9f2-305e-4ede-8502-_1.cs)]"
  syntax:
    content: public IntegerValidator (int minValue, int maxValue, bool rangeIsExclusive);
    parameters:
    - id: minValue
      type: System.Int32
      description: "Um <xref:System.Int32>objeto que especifica o valor mínimo.</xref:System.Int32>"
    - id: maxValue
      type: System.Int32
      description: "Um <xref:System.Int32>objeto que especifica o valor máximo.</xref:System.Int32>"
    - id: rangeIsExclusive
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para especificar que o intervalo de validação é exclusivo. Inclusive significa que o valor para ser validado tem de estar no intervalo especificado; exclusiva significa que tem de ser inferior o mínimo ou superior o máximo."
  overload: System.Configuration.IntegerValidator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)'
  parent: System.Configuration.IntegerValidator
  langs:
  - csharp
  name: IntegerValidator(Int32,Int32,Boolean,Int32)
  nameWithType: IntegerValidator.IntegerValidator(Int32,Int32,Boolean,Int32)
  fullName: System.Configuration.IntegerValidator.IntegerValidator(Int32,Int32,Boolean,Int32)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Configuration.IntegerValidator&quot;> </xref> classe."
  remarks: "O <xref:System.Int32>valor a ser validado tem de ser igual a `resolution` valor para passar pela validação.</xref:System.Int32>"
  syntax:
    content: public IntegerValidator (int minValue, int maxValue, bool rangeIsExclusive, int resolution);
    parameters:
    - id: minValue
      type: System.Int32
      description: "Um <xref:System.Int32>objeto que especifica o comprimento mínimo do valor de número inteiro.</xref:System.Int32>"
    - id: maxValue
      type: System.Int32
      description: "Um <xref:System.Int32>objeto que especifica o comprimento máximo do valor de número inteiro.</xref:System.Int32>"
    - id: rangeIsExclusive
      type: System.Boolean
      description: "A <xref:System.Boolean>valor que especifica se o intervalo de validação é exclusivo.</xref:System.Boolean>"
    - id: resolution
      type: System.Int32
      description: "Um <xref:System.Int32>objeto que especifica um valor que deve ser correspondido.</xref:System.Int32>"
  overload: System.Configuration.IntegerValidator.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>resolution</code> is less than <xref uid=\"langword_csharp_0\" name=\"0\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>minValue</code> is greater than <code>maxValue</code>."
  platform:
  - net462
- uid: System.Configuration.IntegerValidator.CanValidate(System.Type)
  id: CanValidate(System.Type)
  parent: System.Configuration.IntegerValidator
  langs:
  - csharp
  name: CanValidate(Type)
  nameWithType: IntegerValidator.CanValidate(Type)
  fullName: System.Configuration.IntegerValidator.CanValidate(Type)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Determina se o tipo de objecto possa ser validado."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the CanValidate method. This code example is part of a larger example provided for the <xref:System.Configuration.IntegerValidator> class.  \n  \n [!code-vb[System.Configuration.IntegerValidator#3](~/add/codesnippet/visualbasic/m-system.configuration.i_1_1.vb)]\n [!code-cs[System.Configuration.IntegerValidator#3](~/add/codesnippet/csharp/m-system.configuration.i_1_1.cs)]"
  syntax:
    content: public override bool CanValidate (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "O tipo do objeto."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <code> type </code> corresponde ao parâmetro um <xref:System.Int32>valor; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Int32>"
  overload: System.Configuration.IntegerValidator.CanValidate*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IntegerValidator.Validate(System.Object)
  id: Validate(System.Object)
  parent: System.Configuration.IntegerValidator
  langs:
  - csharp
  name: Validate(Object)
  nameWithType: IntegerValidator.Validate(Object)
  fullName: System.Configuration.IntegerValidator.Validate(Object)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Determina se o valor de um objeto é válido."
  remarks: "Um <xref:System.Configuration.IntegerValidator>objeto contém as regras necessárias para validar um objeto de número inteiro.</xref:System.Configuration.IntegerValidator> As regras são estabelecidas quando uma instância do <xref:System.Configuration.IntegerValidator>classe é criada.</xref:System.Configuration.IntegerValidator> O objeto de número inteiro para validar é transmitido como um parâmetro do método validar."
  example:
  - "The following code example demonstrates how to use the Validate method. This code example is part of a larger example provided for the <xref:System.Configuration.IntegerValidator> class.  \n  \n [!code-vb[System.Configuration.IntegerValidator#4](~/add/codesnippet/visualbasic/m-system.configuration.i_6_1.vb)]\n [!code-cs[System.Configuration.IntegerValidator#4](~/add/codesnippet/csharp/m-system.configuration.i_6_1.cs)]"
  syntax:
    content: public override void Validate (object value);
    parameters:
    - id: value
      type: System.Object
      description: "O valor para ser validado."
  overload: System.Configuration.IntegerValidator.Validate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationValidatorBase
  isExternal: false
  name: System.Configuration.ConfigurationValidatorBase
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32)
  parent: System.Configuration.IntegerValidator
  isExternal: false
  name: IntegerValidator(Int32,Int32)
  nameWithType: IntegerValidator.IntegerValidator(Int32,Int32)
  fullName: System.Configuration.IntegerValidator.IntegerValidator(Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean)
  parent: System.Configuration.IntegerValidator
  isExternal: false
  name: IntegerValidator(Int32,Int32,Boolean)
  nameWithType: IntegerValidator.IntegerValidator(Int32,Int32,Boolean)
  fullName: System.Configuration.IntegerValidator.IntegerValidator(Int32,Int32,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)
  parent: System.Configuration.IntegerValidator
  isExternal: false
  name: IntegerValidator(Int32,Int32,Boolean,Int32)
  nameWithType: IntegerValidator.IntegerValidator(Int32,Int32,Boolean,Int32)
  fullName: System.Configuration.IntegerValidator.IntegerValidator(Int32,Int32,Boolean,Int32)
- uid: System.Configuration.IntegerValidator.CanValidate(System.Type)
  parent: System.Configuration.IntegerValidator
  isExternal: false
  name: CanValidate(Type)
  nameWithType: IntegerValidator.CanValidate(Type)
  fullName: System.Configuration.IntegerValidator.CanValidate(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Configuration.IntegerValidator.Validate(System.Object)
  parent: System.Configuration.IntegerValidator
  isExternal: false
  name: Validate(Object)
  nameWithType: IntegerValidator.Validate(Object)
  fullName: System.Configuration.IntegerValidator.Validate(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Configuration.IntegerValidator.#ctor*
  parent: System.Configuration.IntegerValidator
  isExternal: false
  name: IntegerValidator
  nameWithType: IntegerValidator.IntegerValidator
- uid: System.Configuration.IntegerValidator.CanValidate*
  parent: System.Configuration.IntegerValidator
  isExternal: false
  name: CanValidate
  nameWithType: IntegerValidator.CanValidate
- uid: System.Configuration.IntegerValidator.Validate*
  parent: System.Configuration.IntegerValidator
  isExternal: false
  name: Validate
  nameWithType: IntegerValidator.Validate
