### YamlMime:ManagedReference
items:
- uid: System.Configuration.IntegerValidator
  id: IntegerValidator
  children:
  - System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32)
  - System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean)
  - System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)
  - System.Configuration.IntegerValidator.CanValidate(System.Type)
  - System.Configuration.IntegerValidator.Validate(System.Object)
  langs:
  - csharp
  name: IntegerValidator
  nameWithType: IntegerValidator
  fullName: System.Configuration.IntegerValidator
  type: Class
  summary: "Provides validation of an <xref:System.Int32> value."
  remarks: "The IntegerValidator class is used to ensure that an integer meets specific criteria. The criteria for validation are established when an instance of the IntegerValidator class is created. The <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor with two parameters ensures that the integer being verified adheres to both a minimum and a maximum value. The <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor with three parameters checks both the minimum and maximum <xref:System.Int32> values, as well as whether the value to be validated is within the specified range. The <xref:System.Configuration.IntegerValidator.%23ctor%2A> constructor with four parameters checks the previous three parameters and also checks whether the <xref:System.Int32> value is equal to a specific resolution.       The <xref:System.Configuration.IntegerValidator.CanValidate%2A> method determines whether the object type being validated matches the expected type. The object being validated is passed as a parameter of the <xref:System.Configuration.IntegerValidator.Validate%2A> method."
  example:
  - "The following code example demonstrates how to use the IntegerValidator type.  \n  \n [!code-vb[System.Configuration.IntegerValidator#1](~/add/codesnippet/visualbasic/t-system.configuration.i_3_1.vb)]\n [!code-cs[System.Configuration.IntegerValidator#1](~/add/codesnippet/csharp/t-system.configuration.i_3_1.cs)]"
  syntax:
    content: 'public class IntegerValidator : System.Configuration.ConfigurationValidatorBase'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationValidatorBase
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: System.Configuration.IntegerValidator
  langs:
  - csharp
  name: IntegerValidator(Int32,Int32)
  nameWithType: IntegerValidator.IntegerValidator(Int32,Int32)
  fullName: System.Configuration.IntegerValidator.IntegerValidator(Int32,Int32)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Initializes a new instance of the <xref href=&quot;System.Configuration.IntegerValidator&quot;></xref> class."
  remarks: "This IntegerValidator constructor ensures that the integer being verified adheres to both a minimum and a maximum length."
  syntax:
    content: public IntegerValidator (int minValue, int maxValue);
    parameters:
    - id: minValue
      type: System.Int32
      description: "An <xref:System.Int32> object that specifies the minimum value."
    - id: maxValue
      type: System.Int32
      description: "An <xref:System.Int32> object that specifies the maximum value."
  overload: System.Configuration.IntegerValidator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean)
  id: '#ctor(System.Int32,System.Int32,System.Boolean)'
  parent: System.Configuration.IntegerValidator
  langs:
  - csharp
  name: IntegerValidator(Int32,Int32,Boolean)
  nameWithType: IntegerValidator.IntegerValidator(Int32,Int32,Boolean)
  fullName: System.Configuration.IntegerValidator.IntegerValidator(Int32,Int32,Boolean)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Initializes a new instance of the <xref href=&quot;System.Configuration.IntegerValidator&quot;></xref> class."
  remarks: "When creating an instance of  the <xref:System.Configuration.IntegerValidator> class, this IntegerValidator constructor checks both the minimum and maximum <xref:System.Int32> values, as well as whether the validation range is exclusive. When the `rangeIsExclusive` parameter is set to `true`, the <xref:System.Int32> value must not be between the `minValue` and `maxValue` parameter values."
  example:
  - "The following code example demonstrates how to use the IntegerValidator constructor. This code example is part of a larger example provided for the <xref:System.Configuration.IntegerValidator> class.  \n  \n [!code-vb[System.Configuration.IntegerValidator#2](~/add/codesnippet/visualbasic/39b5b9f2-305e-4ede-8502-_1.vb)]\n [!code-cs[System.Configuration.IntegerValidator#2](~/add/codesnippet/csharp/39b5b9f2-305e-4ede-8502-_1.cs)]"
  syntax:
    content: public IntegerValidator (int minValue, int maxValue, bool rangeIsExclusive);
    parameters:
    - id: minValue
      type: System.Int32
      description: "An <xref:System.Int32> object that specifies the minimum value."
    - id: maxValue
      type: System.Int32
      description: "An <xref:System.Int32> object that specifies the maximum value."
    - id: rangeIsExclusive
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to specify that the validation range is exclusive. Inclusive means the value to be validated must be within the specified range; exclusive means that it must be below the minimum or above the maximum."
  overload: System.Configuration.IntegerValidator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)'
  parent: System.Configuration.IntegerValidator
  langs:
  - csharp
  name: IntegerValidator(Int32,Int32,Boolean,Int32)
  nameWithType: IntegerValidator.IntegerValidator(Int32,Int32,Boolean,Int32)
  fullName: System.Configuration.IntegerValidator.IntegerValidator(Int32,Int32,Boolean,Int32)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Initializes a new instance of the <xref href=&quot;System.Configuration.IntegerValidator&quot;></xref> class."
  remarks: "The <xref:System.Int32> value being validated must be equal to the `resolution` value in order to pass validation."
  syntax:
    content: public IntegerValidator (int minValue, int maxValue, bool rangeIsExclusive, int resolution);
    parameters:
    - id: minValue
      type: System.Int32
      description: "An <xref:System.Int32> object that specifies the minimum length of the integer value."
    - id: maxValue
      type: System.Int32
      description: "An <xref:System.Int32> object that specifies the maximum length of the integer value."
    - id: rangeIsExclusive
      type: System.Boolean
      description: "A <xref:System.Boolean> value that specifies whether the validation range is exclusive."
    - id: resolution
      type: System.Int32
      description: "An <xref:System.Int32> object that specifies a value that must be matched."
  overload: System.Configuration.IntegerValidator.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>resolution</code> is less than <xref uid=\"langword_csharp_0\" name=\"0\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>minValue</code> is greater than <code>maxValue</code>."
  platform:
  - net462
- uid: System.Configuration.IntegerValidator.CanValidate(System.Type)
  id: CanValidate(System.Type)
  parent: System.Configuration.IntegerValidator
  langs:
  - csharp
  name: CanValidate(Type)
  nameWithType: IntegerValidator.CanValidate(Type)
  fullName: System.Configuration.IntegerValidator.CanValidate(Type)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Determines whether the type of the object can be validated."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the CanValidate method. This code example is part of a larger example provided for the <xref:System.Configuration.IntegerValidator> class.  \n  \n [!code-vb[System.Configuration.IntegerValidator#3](~/add/codesnippet/visualbasic/m-system.configuration.i_1_1.vb)]\n [!code-cs[System.Configuration.IntegerValidator#3](~/add/codesnippet/csharp/m-system.configuration.i_1_1.cs)]"
  syntax:
    content: public override bool CanValidate (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "The type of the object."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <code>type</code> parameter matches an <xref:System.Int32> value; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Configuration.IntegerValidator.CanValidate*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IntegerValidator.Validate(System.Object)
  id: Validate(System.Object)
  parent: System.Configuration.IntegerValidator
  langs:
  - csharp
  name: Validate(Object)
  nameWithType: IntegerValidator.Validate(Object)
  fullName: System.Configuration.IntegerValidator.Validate(Object)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Determines whether the value of an object is valid."
  remarks: "An <xref:System.Configuration.IntegerValidator> object contains the rules necessary to validate an integer object. The rules are established when an instance of the <xref:System.Configuration.IntegerValidator> class is created. The integer object to validate is passed as a parameter of the Validate method."
  example:
  - "The following code example demonstrates how to use the Validate method. This code example is part of a larger example provided for the <xref:System.Configuration.IntegerValidator> class.  \n  \n [!code-vb[System.Configuration.IntegerValidator#4](~/add/codesnippet/visualbasic/m-system.configuration.i_6_1.vb)]\n [!code-cs[System.Configuration.IntegerValidator#4](~/add/codesnippet/csharp/m-system.configuration.i_6_1.cs)]"
  syntax:
    content: public override void Validate (object value);
    parameters:
    - id: value
      type: System.Object
      description: "The value to be validated."
  overload: System.Configuration.IntegerValidator.Validate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationValidatorBase
  isExternal: false
  name: System.Configuration.ConfigurationValidatorBase
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32)
  parent: System.Configuration.IntegerValidator
  isExternal: false
  name: IntegerValidator(Int32,Int32)
  nameWithType: IntegerValidator.IntegerValidator(Int32,Int32)
  fullName: System.Configuration.IntegerValidator.IntegerValidator(Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean)
  parent: System.Configuration.IntegerValidator
  isExternal: false
  name: IntegerValidator(Int32,Int32,Boolean)
  nameWithType: IntegerValidator.IntegerValidator(Int32,Int32,Boolean)
  fullName: System.Configuration.IntegerValidator.IntegerValidator(Int32,Int32,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)
  parent: System.Configuration.IntegerValidator
  isExternal: false
  name: IntegerValidator(Int32,Int32,Boolean,Int32)
  nameWithType: IntegerValidator.IntegerValidator(Int32,Int32,Boolean,Int32)
  fullName: System.Configuration.IntegerValidator.IntegerValidator(Int32,Int32,Boolean,Int32)
- uid: System.Configuration.IntegerValidator.CanValidate(System.Type)
  parent: System.Configuration.IntegerValidator
  isExternal: false
  name: CanValidate(Type)
  nameWithType: IntegerValidator.CanValidate(Type)
  fullName: System.Configuration.IntegerValidator.CanValidate(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Configuration.IntegerValidator.Validate(System.Object)
  parent: System.Configuration.IntegerValidator
  isExternal: false
  name: Validate(Object)
  nameWithType: IntegerValidator.Validate(Object)
  fullName: System.Configuration.IntegerValidator.Validate(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Configuration.IntegerValidator.#ctor*
  parent: System.Configuration.IntegerValidator
  isExternal: false
  name: IntegerValidator
  nameWithType: IntegerValidator.IntegerValidator
- uid: System.Configuration.IntegerValidator.CanValidate*
  parent: System.Configuration.IntegerValidator
  isExternal: false
  name: CanValidate
  nameWithType: IntegerValidator.CanValidate
- uid: System.Configuration.IntegerValidator.Validate*
  parent: System.Configuration.IntegerValidator
  isExternal: false
  name: Validate
  nameWithType: IntegerValidator.Validate
