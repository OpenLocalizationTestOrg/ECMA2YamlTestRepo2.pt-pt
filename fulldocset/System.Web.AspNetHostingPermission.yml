### YamlMime:ManagedReference
items:
- uid: System.Web.AspNetHostingPermission
  id: AspNetHostingPermission
  children:
  - System.Web.AspNetHostingPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Web.AspNetHostingPermission.#ctor(System.Web.AspNetHostingPermissionLevel)
  - System.Web.AspNetHostingPermission.Copy
  - System.Web.AspNetHostingPermission.FromXml(System.Security.SecurityElement)
  - System.Web.AspNetHostingPermission.Intersect(System.Security.IPermission)
  - System.Web.AspNetHostingPermission.IsSubsetOf(System.Security.IPermission)
  - System.Web.AspNetHostingPermission.IsUnrestricted
  - System.Web.AspNetHostingPermission.Level
  - System.Web.AspNetHostingPermission.ToXml
  - System.Web.AspNetHostingPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: AspNetHostingPermission
  nameWithType: AspNetHostingPermission
  fullName: System.Web.AspNetHostingPermission
  type: Class
  summary: "Controls access permissions in ASP.NET hosted environments. This class cannot be inherited."
  remarks: "The AspNetHostingPermission class is used in conjunction with code access security to help protect public types in the System.Web namespaces. Code must be assigned at least the <xref:System.Web.AspNetHostingPermissionLevel> trust level to access protected ASP.NET classes.       The AspNetHostingPermission class&quot;s <xref:System.Web.AspNetHostingPermission.Level%2A> property is set by configuring the appropriate trust level in the  configuration element. By default, the `level` attribute of the `trust` configuration element is set to `Full`. That is, by default, ASP.NET applications run under the <xref:System.Web.AspNetHostingPermissionLevel> level. When an ASP.NET application domain is created, ASP.NET reads the value specified for the `level` attribute of the `trust` configuration element, creates an instance of the AspNetHostingPermission class with the specified <xref:System.Web.AspNetHostingPermission.Level%2A> attribute, and then adds the class to the permission set for the application domain. For more information, see [ASP.NET Trust Levels and Policy Files](~/add/includes/ajax-current-ext-md.md).       It is recommended that you set the `level` attribute of the `trust` configuration element to `High` for sites that are trusted. For sites that are not trusted, such as a Web server that hosts sites that run code from an external customer, it is recommended that you set the `level` attribute of the `trust` configuration element to `Medium`.       The permission sets that are defined by default for the .NET Framework (for example, LocalIntranet, Internet, and so on) do not include the AspNetHostingPermission permission. That is, the AspNetHostingPermission permission is only assigned, by default, to applications that are running under `Full` trust."
  example:
  - "The following code example shows a class protected using the AspNetHostingPermission permission. Code must be running with at least <xref:System.Web.AspNetHostingPermissionLevel>AspNetHostingPermission permission <xref:System.Web.AspNetHostingPermission.Level%2A> in order to create an instance of the class.  \n  \n [!code-vb[System.Web.AspNetHostingPermission#1](~/add/codesnippet/visualbasic/t-system.web.aspnethosti_1.vb)]\n [!code-cs[System.Web.AspNetHostingPermission#1](~/add/codesnippet/csharp/t-system.web.aspnethosti_1.cs)]"
  syntax:
    content: 'public sealed class AspNetHostingPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Web.AspNetHostingPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Web.AspNetHostingPermission
  langs:
  - csharp
  name: AspNetHostingPermission(PermissionState)
  nameWithType: AspNetHostingPermission.AspNetHostingPermission(PermissionState)
  fullName: System.Web.AspNetHostingPermission.AspNetHostingPermission(PermissionState)
  type: Constructor
  assemblies:
  - System
  namespace: System.Web
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.AspNetHostingPermission&quot;></xref> class with the specified <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref> enumeration value."
  syntax:
    content: public AspNetHostingPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "A <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref> enumeration value."
  overload: System.Web.AspNetHostingPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>state</code> is not set to one of the <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref> enumeration values."
  platform:
  - net462
- uid: System.Web.AspNetHostingPermission.#ctor(System.Web.AspNetHostingPermissionLevel)
  id: '#ctor(System.Web.AspNetHostingPermissionLevel)'
  parent: System.Web.AspNetHostingPermission
  langs:
  - csharp
  name: AspNetHostingPermission(AspNetHostingPermissionLevel)
  nameWithType: AspNetHostingPermission.AspNetHostingPermission(AspNetHostingPermissionLevel)
  fullName: System.Web.AspNetHostingPermission.AspNetHostingPermission(AspNetHostingPermissionLevel)
  type: Constructor
  assemblies:
  - System
  namespace: System.Web
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.AspNetHostingPermission&quot;></xref> class with the specified permission level."
  syntax:
    content: public AspNetHostingPermission (System.Web.AspNetHostingPermissionLevel level);
    parameters:
    - id: level
      type: System.Web.AspNetHostingPermissionLevel
      description: "An <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;></xref> enumeration value."
  overload: System.Web.AspNetHostingPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.AspNetHostingPermission.Copy
  id: Copy
  parent: System.Web.AspNetHostingPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: AspNetHostingPermission.Copy()
  fullName: System.Web.AspNetHostingPermission.Copy()
  type: Method
  assemblies:
  - System
  namespace: System.Web
  summary: "When implemented by a derived class, creates and returns an identical copy of the current permission object."
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "A copy of the current permission object."
  overload: System.Web.AspNetHostingPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Web.AspNetHostingPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Web.AspNetHostingPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: AspNetHostingPermission.FromXml(SecurityElement)
  fullName: System.Web.AspNetHostingPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - System
  namespace: System.Web
  summary: "Reconstructs a permission object with a specified state from an XML encoding."
  remarks: "For details about formatting the XML representation of permission object state, see [Implementing a Custom Permission](http://msdn.microsoft.com/en-us/e3d0416b-7a3d-4074-9263-c7d6cd815585)."
  syntax:
    content: public override void FromXml (System.Security.SecurityElement securityElement);
    parameters:
    - id: securityElement
      type: System.Security.SecurityElement
      description: "The <xref href=&quot;System.Security.SecurityElement&quot;></xref> containing the XML encoding to use to reconstruct the permission object."
  overload: System.Web.AspNetHostingPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>securityElement</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref:System.Security.SecurityElement.Tag*> property of <code>securityElement</code> is not equal to &quot;IPermission&quot;.       <xref uid=&quot;langword_csharp_-&quot; name=&quot;-&quot; href=&quot;&quot;></xref> or-       The class <xref:System.Security.SecurityElement.Attribute*> of <code>securityElement</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or an empty string (&quot;&quot;)."
  platform:
  - net462
- uid: System.Web.AspNetHostingPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Web.AspNetHostingPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: AspNetHostingPermission.Intersect(IPermission)
  fullName: System.Web.AspNetHostingPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Web
  summary: "When implemented by a derived class, creates and returns a permission that is the intersection of the current permission and the specified permission."
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "A permission to combine with the current permission. It must be of the same type as the current permission."
    return:
      type: System.Security.IPermission
      description: "An <xref href=&quot;System.Security.IPermission&quot;></xref> that represents the intersection of the current permission and the specified permission; otherwise, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the intersection is empty."
  overload: System.Web.AspNetHostingPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code> is not an <xref href=&quot;System.Web.AspNetHostingPermission&quot;></xref>."
  platform:
  - net462
- uid: System.Web.AspNetHostingPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Web.AspNetHostingPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: AspNetHostingPermission.IsSubsetOf(IPermission)
  fullName: System.Web.AspNetHostingPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Web
  summary: "Returns a value indicating whether the current permission is a subset of the specified permission."
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "The <xref href=&quot;System.Security.IPermission&quot;></xref> to combine with the current permission. It must be of the same type as the current <xref href=&quot;System.Security.IPermission&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the current <xref href=&quot;System.Security.IPermission&quot;></xref> is a subset of the specified <xref href=&quot;System.Security.IPermission&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.AspNetHostingPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code> is not an <xref href=&quot;System.Web.AspNetHostingPermission&quot;></xref>."
  platform:
  - net462
- uid: System.Web.AspNetHostingPermission.IsUnrestricted
  id: IsUnrestricted
  parent: System.Web.AspNetHostingPermission
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: AspNetHostingPermission.IsUnrestricted()
  fullName: System.Web.AspNetHostingPermission.IsUnrestricted()
  type: Method
  assemblies:
  - System
  namespace: System.Web
  summary: "Returns a value indicating whether unrestricted access to the resource that is protected by the current permission is allowed."
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if unrestricted use of the resource protected by the permission is allowed; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.AspNetHostingPermission.IsUnrestricted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.AspNetHostingPermission.Level
  id: Level
  parent: System.Web.AspNetHostingPermission
  langs:
  - csharp
  name: Level
  nameWithType: AspNetHostingPermission.Level
  fullName: System.Web.AspNetHostingPermission.Level
  type: Property
  assemblies:
  - System
  namespace: System.Web
  summary: "Gets or sets the current hosting permission level for an ASP.NET application."
  syntax:
    content: public System.Web.AspNetHostingPermissionLevel Level { get; set; }
    return:
      type: System.Web.AspNetHostingPermissionLevel
      description: "One of the <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;></xref> enumeration values."
  overload: System.Web.AspNetHostingPermission.Level*
  exceptions: []
  platform:
  - net462
- uid: System.Web.AspNetHostingPermission.ToXml
  id: ToXml
  parent: System.Web.AspNetHostingPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: AspNetHostingPermission.ToXml()
  fullName: System.Web.AspNetHostingPermission.ToXml()
  type: Method
  assemblies:
  - System
  namespace: System.Web
  summary: "Creates an XML encoding of the permission object and its current state."
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "A <xref href=&quot;System.Security.SecurityElement&quot;></xref> containing the XML encoding of the permission object, including any state information."
  overload: System.Web.AspNetHostingPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Web.AspNetHostingPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Web.AspNetHostingPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: AspNetHostingPermission.Union(IPermission)
  fullName: System.Web.AspNetHostingPermission.Union(IPermission)
  type: Method
  assemblies:
  - System
  namespace: System.Web
  summary: "Creates a permission that is the union of the current permission and the specified permission."
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "A permission to combine with the current permission. It must be of the same type as the current permission."
    return:
      type: System.Security.IPermission
      description: "An <xref href=&quot;System.Security.IPermission&quot;></xref> that represents the union of the current permission and the specified permission."
  overload: System.Web.AspNetHostingPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code> is not an <xref href=&quot;System.Web.AspNetHostingPermission&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.AspNetHostingPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Web.AspNetHostingPermission
  isExternal: false
  name: AspNetHostingPermission(PermissionState)
  nameWithType: AspNetHostingPermission.AspNetHostingPermission(PermissionState)
  fullName: System.Web.AspNetHostingPermission.AspNetHostingPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Web.AspNetHostingPermission.#ctor(System.Web.AspNetHostingPermissionLevel)
  parent: System.Web.AspNetHostingPermission
  isExternal: false
  name: AspNetHostingPermission(AspNetHostingPermissionLevel)
  nameWithType: AspNetHostingPermission.AspNetHostingPermission(AspNetHostingPermissionLevel)
  fullName: System.Web.AspNetHostingPermission.AspNetHostingPermission(AspNetHostingPermissionLevel)
- uid: System.Web.AspNetHostingPermissionLevel
  parent: System.Web
  isExternal: false
  name: AspNetHostingPermissionLevel
  nameWithType: AspNetHostingPermissionLevel
  fullName: System.Web.AspNetHostingPermissionLevel
- uid: System.Web.AspNetHostingPermission.Copy
  parent: System.Web.AspNetHostingPermission
  isExternal: false
  name: Copy()
  nameWithType: AspNetHostingPermission.Copy()
  fullName: System.Web.AspNetHostingPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Web.AspNetHostingPermission.FromXml(System.Security.SecurityElement)
  parent: System.Web.AspNetHostingPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: AspNetHostingPermission.FromXml(SecurityElement)
  fullName: System.Web.AspNetHostingPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Web.AspNetHostingPermission.Intersect(System.Security.IPermission)
  parent: System.Web.AspNetHostingPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: AspNetHostingPermission.Intersect(IPermission)
  fullName: System.Web.AspNetHostingPermission.Intersect(IPermission)
- uid: System.Web.AspNetHostingPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Web.AspNetHostingPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: AspNetHostingPermission.IsSubsetOf(IPermission)
  fullName: System.Web.AspNetHostingPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.AspNetHostingPermission.IsUnrestricted
  parent: System.Web.AspNetHostingPermission
  isExternal: false
  name: IsUnrestricted()
  nameWithType: AspNetHostingPermission.IsUnrestricted()
  fullName: System.Web.AspNetHostingPermission.IsUnrestricted()
- uid: System.Web.AspNetHostingPermission.Level
  parent: System.Web.AspNetHostingPermission
  isExternal: false
  name: Level
  nameWithType: AspNetHostingPermission.Level
  fullName: System.Web.AspNetHostingPermission.Level
- uid: System.Web.AspNetHostingPermission.ToXml
  parent: System.Web.AspNetHostingPermission
  isExternal: false
  name: ToXml()
  nameWithType: AspNetHostingPermission.ToXml()
  fullName: System.Web.AspNetHostingPermission.ToXml()
- uid: System.Web.AspNetHostingPermission.Union(System.Security.IPermission)
  parent: System.Web.AspNetHostingPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: AspNetHostingPermission.Union(IPermission)
  fullName: System.Web.AspNetHostingPermission.Union(IPermission)
- uid: System.Web.AspNetHostingPermission.#ctor*
  parent: System.Web.AspNetHostingPermission
  isExternal: false
  name: AspNetHostingPermission
  nameWithType: AspNetHostingPermission.AspNetHostingPermission
- uid: System.Web.AspNetHostingPermission.Copy*
  parent: System.Web.AspNetHostingPermission
  isExternal: false
  name: Copy
  nameWithType: AspNetHostingPermission.Copy
- uid: System.Web.AspNetHostingPermission.FromXml*
  parent: System.Web.AspNetHostingPermission
  isExternal: false
  name: FromXml
  nameWithType: AspNetHostingPermission.FromXml
- uid: System.Web.AspNetHostingPermission.Intersect*
  parent: System.Web.AspNetHostingPermission
  isExternal: false
  name: Intersect
  nameWithType: AspNetHostingPermission.Intersect
- uid: System.Web.AspNetHostingPermission.IsSubsetOf*
  parent: System.Web.AspNetHostingPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: AspNetHostingPermission.IsSubsetOf
- uid: System.Web.AspNetHostingPermission.IsUnrestricted*
  parent: System.Web.AspNetHostingPermission
  isExternal: false
  name: IsUnrestricted
  nameWithType: AspNetHostingPermission.IsUnrestricted
- uid: System.Web.AspNetHostingPermission.Level*
  parent: System.Web.AspNetHostingPermission
  isExternal: false
  name: Level
  nameWithType: AspNetHostingPermission.Level
- uid: System.Web.AspNetHostingPermission.ToXml*
  parent: System.Web.AspNetHostingPermission
  isExternal: false
  name: ToXml
  nameWithType: AspNetHostingPermission.ToXml
- uid: System.Web.AspNetHostingPermission.Union*
  parent: System.Web.AspNetHostingPermission
  isExternal: false
  name: Union
  nameWithType: AspNetHostingPermission.Union
