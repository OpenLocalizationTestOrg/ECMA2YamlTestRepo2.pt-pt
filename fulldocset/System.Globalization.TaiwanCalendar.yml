### YamlMime:ManagedReference
items:
- uid: System.Globalization.TaiwanCalendar
  id: TaiwanCalendar
  children:
  - System.Globalization.TaiwanCalendar.#ctor
  - System.Globalization.TaiwanCalendar.AddMonths(System.DateTime,System.Int32)
  - System.Globalization.TaiwanCalendar.AddYears(System.DateTime,System.Int32)
  - System.Globalization.TaiwanCalendar.AlgorithmType
  - System.Globalization.TaiwanCalendar.Eras
  - System.Globalization.TaiwanCalendar.GetDayOfMonth(System.DateTime)
  - System.Globalization.TaiwanCalendar.GetDayOfWeek(System.DateTime)
  - System.Globalization.TaiwanCalendar.GetDayOfYear(System.DateTime)
  - System.Globalization.TaiwanCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.TaiwanCalendar.GetDaysInYear(System.Int32,System.Int32)
  - System.Globalization.TaiwanCalendar.GetEra(System.DateTime)
  - System.Globalization.TaiwanCalendar.GetLeapMonth(System.Int32,System.Int32)
  - System.Globalization.TaiwanCalendar.GetMonth(System.DateTime)
  - System.Globalization.TaiwanCalendar.GetMonthsInYear(System.Int32,System.Int32)
  - System.Globalization.TaiwanCalendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  - System.Globalization.TaiwanCalendar.GetYear(System.DateTime)
  - System.Globalization.TaiwanCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.TaiwanCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.TaiwanCalendar.IsLeapYear(System.Int32,System.Int32)
  - System.Globalization.TaiwanCalendar.MaxSupportedDateTime
  - System.Globalization.TaiwanCalendar.MinSupportedDateTime
  - System.Globalization.TaiwanCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.TaiwanCalendar.ToFourDigitYear(System.Int32)
  - System.Globalization.TaiwanCalendar.TwoDigitYearMax
  langs:
  - csharp
  name: TaiwanCalendar
  nameWithType: TaiwanCalendar
  fullName: System.Globalization.TaiwanCalendar
  type: Class
  summary: "Calendário Taiwan."
  remarks: "Calendário Taiwan funciona exatamente como calendário gregoriano, exceto se o ano e era são diferentes. A classe de TaiwanCalendar reconhece apenas o era atual.      > [!NOTE] > Para obter informações sobre como utilizar a classe de TaiwanCalendar e outras classes do calendário no .NET Framework, consulte [trabalhar com calendários](~/add/includes/ajax-current-ext-md.md).       Bissexto anos num calendário de Taiwan correspondem para os mesmos anos bissexto no calendário gregoriano. Um ano bissexto no calendário gregoriano está definido como um ano de gregoriana é divisible uniformemente por quatro, exceto se for divisible por 100. No entanto, anos gregoriana que são divisible por 400 são bissexto anos. Um ano comuns tem 365 dias e um ano bissexto tem 366 dias.       Calendário Taiwan tem 12 meses com 28 a 31 dias: | Valor de GetMonth | Mês | Dias de anos comuns | Dias de anos bissexto |   |--------------------|-----------|--------------------------|------------------------|   | 1 | 1月 (Janeiro) | 31 | 31 |   | 2 | 2月 (Fevereiro) | 28 | 29 |   | 3 | 3月 (Março) | 31 | 31 |   | 4 | 4月 (Abril) | 30 | 30 |   | 5 | 5月 (Maio) | 31 | 31 |   | 6 | 6月 (Junho) | 30 | 30 |   | 7 | 7月 (Julho) | 31 | 31 |   | 8 | 8月 (Agosto) | 31 | 31 |   | 9 | 9月 (Setembro) | 30 | 30 |   | 10 | 10月 (Outubro) | 31 | 31 |   | 11 | 11月 (Novembro) | 30 | 30 |   | 12 | 12月 (Dezembro) | 31 | 31 |       Fevereiro tem 29 dias durante anos bissexto e 28 durante anos comuns.       A data 1 de Janeiro de 2001 e. c. no calendário Gregoriano é equivalente ao primeiro dia do Janeiro no ano 90 o era atual no calendário Taiwan.       Cada <xref:System.Globalization.CultureInfo>suporta um conjunto de calendários.</xref:System.Globalization.CultureInfo> O <xref:System.Globalization.CultureInfo.Calendar%2A>propriedade devolve o calendário predefinido para a cultura e o <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>propriedade devolve uma matriz que contém todos os seus calendários suportados pela cultura.</xref:System.Globalization.CultureInfo.OptionalCalendars%2A> </xref:System.Globalization.CultureInfo.Calendar%2A> Para alterar o calendário utilizado por um <xref:System.Globalization.CultureInfo>a aplicação deve definir a <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>propriedade de <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>para um novo <xref:System.Globalization.Calendar>.</xref:System.Globalization.Calendar> </xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> </xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> </xref:System.Globalization.CultureInfo>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class TaiwanCalendar : System.Globalization.Calendar
  inheritance:
  - System.Globalization.Calendar
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Globalization.TaiwanCalendar.#ctor
  id: '#ctor'
  parent: System.Globalization.TaiwanCalendar
  langs:
  - csharp
  name: TaiwanCalendar()
  nameWithType: TaiwanCalendar.TaiwanCalendar()
  fullName: System.Globalization.TaiwanCalendar.TaiwanCalendar()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Globalization.TaiwanCalendar&quot;> </xref> classe."
  syntax:
    content: public TaiwanCalendar ();
    parameters: []
  overload: System.Globalization.TaiwanCalendar.#ctor*
  exceptions:
  - type: System.TypeInitializationException
    commentId: T:System.TypeInitializationException
    description: "Não é possível inicializar um <xref href=&quot;System.Globalization.TaiwanCalendar&quot;> </xref> objeto devido a falta de informações de cultura."
  platform:
  - net462
- uid: System.Globalization.TaiwanCalendar.AddMonths(System.DateTime,System.Int32)
  id: AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.TaiwanCalendar
  langs:
  - csharp
  name: AddMonths(DateTime,Int32)
  nameWithType: TaiwanCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.TaiwanCalendar.AddMonths(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Devolve um <xref:System.DateTime>que é o número de meses na direção oposta ao especificado <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.DateTime>"
  remarks: "A parte do dia de resultante <xref:System.DateTime>é afetado se o dia resultante não é um dia válido no mês do ano resultante resultante.</xref:System.DateTime> Este é alterado para o último dia válido no mês do ano resultante resultante. O ano parte resultante <xref:System.DateTime>é afetado se o mês resultante está fora do ano de <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.DateTime> Esta implementação suporta apenas o era atual. Por conseguinte, <xref:System.ArgumentException>é emitida se o ano resultante está fora do era de <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.ArgumentException> A parte de hora do dia de resultante <xref:System.DateTime>permanece o mesmo que o <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.DateTime>       Por exemplo, se o mês especificado for Outubro, que tem 31 dias, o dia especificado é o dia 31 que mês e o valor do `months` parâmetro é 6, o ano resultante é um mais do que o especificado ano, mês resultante é Abril e o dia resultante é o dia 30th, que é o último dia em Abril.       Se o valor da `months` parâmetro é negativo, resultante <xref:System.DateTime>é anterior ao <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.DateTime>       A<xref:System.DateTime.Kind%2A> propriedade de devolvido <xref:System.DateTime>sempre o valor for igual a <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> </xref:System.DateTime.Kind%2A> Pode manter o <xref:System.DateTime.Kind%2A>propriedade o `time` parâmetro ao chamar o <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>método, como o seguinte exemplo mostra.</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       [!code-vb[System.Globalization.Calendar.AddMethods#5](~/add/codesnippet/visualbasic/m-system.globalization.t_6_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#5  ](~/add/codesnippet/csharp/m-system.globalization.t_6_1.cs)]"
  example:
  - "The following code example demonstrates the use of the AddMonths method.  \n  \n [!code-cs[System.Globalization.TaiwanCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.t_6_2.cs)]\n [!code-vb[System.Globalization.TaiwanCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.t_6_2.vb)]\n [!code-cpp[System.Globalization.TaiwanCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.t_6_2.cpp)]"
  syntax:
    content: public override DateTime AddMonths (DateTime time, int months);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>ao qual pretende adicionar meses.</xref:System.DateTime>"
    - id: months
      type: System.Int32
      description: "O número de meses a adicionar."
    return:
      type: System.DateTime
      description: "O <xref:System.DateTime>que resulta da adição do número de meses para especificado <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.DateTime>"
  overload: System.Globalization.TaiwanCalendar.AddMonths*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Resultante <xref:System.DateTime>está fora do intervalo suportado.</xref:System.DateTime>"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>months</code>é menor que-120000.       - ou - <code>months</code> é superior ao 120000."
  platform:
  - net462
- uid: System.Globalization.TaiwanCalendar.AddYears(System.DateTime,System.Int32)
  id: AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.TaiwanCalendar
  langs:
  - csharp
  name: AddYears(DateTime,Int32)
  nameWithType: TaiwanCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.TaiwanCalendar.AddYears(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Devolve um <xref:System.DateTime>que é o número de anos na direção oposta ao especificado <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.DateTime>"
  remarks: "A parte do dia de resultante <xref:System.DateTime>é afetado se o dia resultante não é um dia válido no mês do ano resultante resultante.</xref:System.DateTime> Este é alterado para o último dia válido no mês do ano resultante resultante. A parte do mês de resultante <xref:System.DateTime>permanece o mesmo que o <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.DateTime> Esta implementação suporta apenas o era atual. Por conseguinte, <xref:System.ArgumentException>é emitida se o ano resultante está fora do era de <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.ArgumentException> A parte de hora do dia de resultante <xref:System.DateTime>permanece o mesmo que o <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.DateTime>       Por exemplo, Fevereiro tem 28 dias, exceto durante anos bissexto quando tiver 29 dias. Se a data especificada é o dia de Fevereiro num ano bissexto 29th e o valor da `years` é 1, a data resultante é o dia 28th de Fevereiro no ano seguinte.       Se `years` é negativo, resultante <xref:System.DateTime>é anterior ao <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.DateTime>       A<xref:System.DateTime.Kind%2A> propriedade de devolvido <xref:System.DateTime>sempre o valor for igual a <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> </xref:System.DateTime.Kind%2A> Pode manter o <xref:System.DateTime.Kind%2A>propriedade o `time` parâmetro ao chamar o <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>método, como o seguinte exemplo mostra.</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       [!code-vb[System.Globalization.Calendar.AddMethods#8](~/add/codesnippet/visualbasic/m-system.globalization.t_12_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#8  ](~/add/codesnippet/csharp/m-system.globalization.t_12_1.cs)]"
  example:
  - "The following code example displays the use of the AddYears method.  \n  \n [!code-cs[System.Globalization.TaiwanCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.t_12_2.cs)]\n [!code-vb[System.Globalization.TaiwanCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.t_12_2.vb)]\n [!code-cpp[System.Globalization.TaiwanCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.t_12_2.cpp)]"
  syntax:
    content: public override DateTime AddYears (DateTime time, int years);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>ao qual pretende adicionar anos.</xref:System.DateTime>"
    - id: years
      type: System.Int32
      description: "O número de anos a adicionar."
    return:
      type: System.DateTime
      description: "O <xref:System.DateTime>que resulta da adição do número especificado de anos para <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.DateTime>"
  overload: System.Globalization.TaiwanCalendar.AddYears*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Resultante <xref:System.DateTime>está fora do intervalo suportado.</xref:System.DateTime>"
  platform:
  - net462
- uid: System.Globalization.TaiwanCalendar.AlgorithmType
  id: AlgorithmType
  parent: System.Globalization.TaiwanCalendar
  langs:
  - csharp
  name: AlgorithmType
  nameWithType: TaiwanCalendar.AlgorithmType
  fullName: System.Globalization.TaiwanCalendar.AlgorithmType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Obtém um valor que indica se o calendário atual é solar baseia, lunar baseado, ou uma combinação de ambos."
  remarks: ''
  example:
  - "The following example uses reflection to instantiate each <xref:System.Globalization.Calendar> type found in the .NET Framework and displays the value of its <xref:System.Globalization.Calendar.AlgorithmType%2A> property.  \n  \n [!code-cs[System.Globalization.Calendar.AlgorithmType#1](~/add/codesnippet/csharp/p-system.globalization.t_2_1.cs)]\n [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/add/codesnippet/visualbasic/p-system.globalization.t_2_1.vb)]"
  syntax:
    content: public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }
    return:
      type: System.Globalization.CalendarAlgorithmType
      description: "Devolve sempre <xref href=&quot;System.Globalization.CalendarAlgorithmType&quot;> </xref>."
  overload: System.Globalization.TaiwanCalendar.AlgorithmType*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.TaiwanCalendar.Eras
  id: Eras
  parent: System.Globalization.TaiwanCalendar
  langs:
  - csharp
  name: Eras
  nameWithType: TaiwanCalendar.Eras
  fullName: System.Globalization.TaiwanCalendar.Eras
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Obtém a lista de eras no <xref href=&quot;System.Globalization.TaiwanCalendar&quot;> </xref>."
  remarks: "Os valores na matriz devolvida por esta propriedade são os números que variam entre 1 e o número era maior. O número era maior é devolvido no primeiro elemento de matriz e o número era mais pequeno é devolvido em último elemento."
  syntax:
    content: public override int[] Eras { get; }
    return:
      type: System.Int32[]
      description: "Uma matriz que é composta por um único elemento para que o valor é sempre o era atual."
  overload: System.Globalization.TaiwanCalendar.Eras*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.TaiwanCalendar.GetDayOfMonth(System.DateTime)
  id: GetDayOfMonth(System.DateTime)
  parent: System.Globalization.TaiwanCalendar
  langs:
  - csharp
  name: GetDayOfMonth(DateTime)
  nameWithType: TaiwanCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.TaiwanCalendar.GetDayOfMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Devolve o dia do mês especificado <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: ''
  example:
  - "The following code example demonstrates the use of the GetDayOfMonth method.  \n  \n [!code-cs[System.Globalization.TaiwanCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.t_2_1.cs)]\n [!code-vb[System.Globalization.TaiwanCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.t_2_1.vb)]\n [!code-cpp[System.Globalization.TaiwanCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.t_2_1.cpp)]"
  syntax:
    content: public override int GetDayOfMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>ler.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Um número inteiro entre 1 e 31 que representa o dia do mês em <xref:System.DateTime>.</xref:System.DateTime> especificado"
  overload: System.Globalization.TaiwanCalendar.GetDayOfMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.TaiwanCalendar.GetDayOfWeek(System.DateTime)
  id: GetDayOfWeek(System.DateTime)
  parent: System.Globalization.TaiwanCalendar
  langs:
  - csharp
  name: GetDayOfWeek(DateTime)
  nameWithType: TaiwanCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.TaiwanCalendar.GetDayOfWeek(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Devolve o dia da semana no <xref:System.DateTime>.</xref:System.DateTime> especificado"
  remarks: "Os valores de <xref:System.DayOfWeek>são os seguintes: | Valor de DayOfWeek | que indica |   |---------------------|---------------------|   | Domingo | 星期日 |   | Segunda | 星期一 |   | Terça-feira | 星期二 |   | Quarta-feira | 星期三 |   | Quinta-feira | 星期四 |   | Sexta-feira | 星期五 |   | Sábado | 星期六 |</xref:System.DayOfWeek>"
  example:
  - "The following code example demonstrates the use of the GetDayOfWeek method.  \n  \n [!code-cs[System.Globalization.TaiwanCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.t_16_1.cs)]\n [!code-vb[System.Globalization.TaiwanCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.t_16_1.vb)]\n [!code-cpp[System.Globalization.TaiwanCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.t_16_1.cpp)]"
  syntax:
    content: public override DayOfWeek GetDayOfWeek (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>ler.</xref:System.DateTime>"
    return:
      type: System.DayOfWeek
      description: "Um <xref:System.DayOfWeek>valor que representa o dia da semana no <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.DayOfWeek>"
  overload: System.Globalization.TaiwanCalendar.GetDayOfWeek*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.TaiwanCalendar.GetDayOfYear(System.DateTime)
  id: GetDayOfYear(System.DateTime)
  parent: System.Globalization.TaiwanCalendar
  langs:
  - csharp
  name: GetDayOfYear(DateTime)
  nameWithType: TaiwanCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.TaiwanCalendar.GetDayOfYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Devolve o dia do ano <xref:System.DateTime>.</xref:System.DateTime> especificado"
  remarks: "O dia do ano é definido como o número de dias do primeiro dia do ano. Por exemplo, GetDayOfYear para o primeiro dia do mês primeiro devolve 1 e GetDayOfYear para o último dia do mês passado devolve o número total de dias em que ano. O total é o mesmo que o valor devolvido pelo <xref:System.Globalization.TaiwanCalendar.GetDaysInYear%2A>.</xref:System.Globalization.TaiwanCalendar.GetDaysInYear%2A>"
  example:
  - "The following code example demonstrates the use of the GetDayOfYear method.  \n  \n [!code-cs[System.Globalization.TaiwanCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.t_13_1.cs)]\n [!code-vb[System.Globalization.TaiwanCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.t_13_1.vb)]\n [!code-cpp[System.Globalization.TaiwanCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.t_13_1.cpp)]"
  syntax:
    content: public override int GetDayOfYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>ler.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Um número inteiro entre 1 e 366 que representa o dia do ano <xref:System.DateTime>.</xref:System.DateTime> especificado"
  overload: System.Globalization.TaiwanCalendar.GetDayOfYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.TaiwanCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  id: GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.TaiwanCalendar
  langs:
  - csharp
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: TaiwanCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.TaiwanCalendar.GetDaysInMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Devolve o número de dias no mês especificado no ano especificado era o especificado."
  remarks: "Por exemplo, este método devolve 28 ou 29 de Fevereiro (`month` = 2), consoante se `year` é um ano bissexto."
  example:
  - "The following example calls GetDaysInMonth for the second month in each of five years in each era.  \n  \n [!code-cs[System.Globalization.TaiwanCalendar.GetDaysInMonth#1](~/add/codesnippet/csharp/1aa062ee-33c0-43ad-963f-_1.cs)]\n [!code-cpp[System.Globalization.TaiwanCalendar.GetDaysInMonth#1](~/add/codesnippet/cpp/1aa062ee-33c0-43ad-963f-_1.cpp)]\n [!code-vb[System.Globalization.TaiwanCalendar.GetDaysInMonth#1](~/add/codesnippet/visualbasic/1aa062ee-33c0-43ad-963f-_1.vb)]"
  syntax:
    content: public override int GetDaysInMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Um número inteiro que representa o ano."
    - id: month
      type: System.Int32
      description: "Um número inteiro entre 1 e 12 que representa o mês."
    - id: era
      type: System.Int32
      description: "Um número inteiro que representa o era."
    return:
      type: System.Int32
      description: "O número de dias no mês especificado no ano especificado era o especificado."
  overload: System.Globalization.TaiwanCalendar.GetDaysInMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>está fora do intervalo suportado pelo calendário.       - ou - <code>month</code> está fora do intervalo suportado pelo calendário.       - ou - <code>era</code> está fora do intervalo suportado pelo calendário."
  platform:
  - net462
- uid: System.Globalization.TaiwanCalendar.GetDaysInYear(System.Int32,System.Int32)
  id: GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.TaiwanCalendar
  langs:
  - csharp
  name: GetDaysInYear(Int32,Int32)
  nameWithType: TaiwanCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.TaiwanCalendar.GetDaysInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Devolve o número de dias no ano especificado era o especificado."
  remarks: "Por exemplo, este método devolve 365 ou 366, consoante esteja `year` é um ano bissexto."
  example:
  - "The following example calls GetDaysInYear for five years in each era.  \n  \n [!code-cpp[System.Globalization.TaiwanCalendar.GetDaysInYear#1](~/add/codesnippet/cpp/m-system.globalization.t_1_1.cpp)]\n [!code-cs[System.Globalization.TaiwanCalendar.GetDaysInYear#1](~/add/codesnippet/csharp/m-system.globalization.t_1_1.cs)]\n [!code-vb[System.Globalization.TaiwanCalendar.GetDaysInYear#1](~/add/codesnippet/visualbasic/m-system.globalization.t_1_1.vb)]"
  syntax:
    content: public override int GetDaysInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Um número inteiro que representa o ano."
    - id: era
      type: System.Int32
      description: "Um número inteiro que representa o era."
    return:
      type: System.Int32
      description: "O número de dias no ano especificado era o especificado."
  overload: System.Globalization.TaiwanCalendar.GetDaysInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>está fora do intervalo suportado pelo calendário.       - ou - <code>era</code> está fora do intervalo suportado pelo calendário."
  platform:
  - net462
- uid: System.Globalization.TaiwanCalendar.GetEra(System.DateTime)
  id: GetEra(System.DateTime)
  parent: System.Globalization.TaiwanCalendar
  langs:
  - csharp
  name: GetEra(DateTime)
  nameWithType: TaiwanCalendar.GetEra(DateTime)
  fullName: System.Globalization.TaiwanCalendar.GetEra(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Devolve o era <xref:System.DateTime>.</xref:System.DateTime> especificado"
  remarks: "O <xref:System.Globalization.TaiwanCalendar>classe reconhece apenas o era atual.</xref:System.Globalization.TaiwanCalendar>"
  example:
  - "The following code example demonstrates the use of the GetEra method.  \n  \n [!code-cs[System.Globalization.TaiwanCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.t_8_1.cs)]\n [!code-vb[System.Globalization.TaiwanCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.t_8_1.vb)]\n [!code-cpp[System.Globalization.TaiwanCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.t_8_1.cpp)]"
  syntax:
    content: public override int GetEra (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>ler.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Um número inteiro que representa o era no <xref:System.DateTime>.</xref:System.DateTime> especificado"
  overload: System.Globalization.TaiwanCalendar.GetEra*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.TaiwanCalendar.GetLeapMonth(System.Int32,System.Int32)
  id: GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.TaiwanCalendar
  langs:
  - csharp
  name: GetLeapMonth(Int32,Int32)
  nameWithType: TaiwanCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.TaiwanCalendar.GetLeapMonth(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Calcula o mês de bissexto durante um ano especificado e era."
  remarks: "Calendário que suporta a noção de um mês bissexto, mês bissexto pode ocorrer depois de um determinado mês ou após qualquer mês de um ano. Por exemplo, o <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>método devolve um número entre 1 e 13 que indica o mês associado uma data especificada.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> Se existir um mês bissexto entre os meses oitavo e ninth do ano, a <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>método devolve 8 para o mês oitavo 9 para o bissexto oitavo mês e 10 para o mês ninth.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>"
  syntax:
    content: public override int GetLeapMonth (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Um ano."
    - id: era
      type: System.Int32
      description: "Um era."
    return:
      type: System.Int32
      description: "O valor devolvido é sempre 0 porque o <xref href=&quot;System.Globalization.TaiwanCalendar&quot;> </xref> classe não suporta a noção de um mês bissexto."
  overload: System.Globalization.TaiwanCalendar.GetLeapMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.TaiwanCalendar.GetMonth(System.DateTime)
  id: GetMonth(System.DateTime)
  parent: System.Globalization.TaiwanCalendar
  langs:
  - csharp
  name: GetMonth(DateTime)
  nameWithType: TaiwanCalendar.GetMonth(DateTime)
  fullName: System.Globalization.TaiwanCalendar.GetMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Devolve o mês especificado <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: ''
  example:
  - "The following code example demonstrates the use of the GetMonth method.  \n  \n [!code-cs[System.Globalization.TaiwanCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.t_15_1.cs)]\n [!code-vb[System.Globalization.TaiwanCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.t_15_1.vb)]\n [!code-cpp[System.Globalization.TaiwanCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.t_15_1.cpp)]"
  syntax:
    content: public override int GetMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>ler.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Um número inteiro entre 1 e 12 que representa o mês especificado <xref:System.DateTime>.</xref:System.DateTime>"
  overload: System.Globalization.TaiwanCalendar.GetMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.TaiwanCalendar.GetMonthsInYear(System.Int32,System.Int32)
  id: GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.TaiwanCalendar
  langs:
  - csharp
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: TaiwanCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.TaiwanCalendar.GetMonthsInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Devolve o número de meses no ano especificado era o especificado."
  remarks: ''
  example:
  - "The following example calls GetMonthsInYear for five years in each era.  \n  \n [!code-vb[System.Globalization.TaiwanCalendar.GetMonthsInYear#1](~/add/codesnippet/visualbasic/m-system.globalization.t_7_1.vb)]\n [!code-cpp[System.Globalization.TaiwanCalendar.GetMonthsInYear#1](~/add/codesnippet/cpp/m-system.globalization.t_7_1.cpp)]\n [!code-cs[System.Globalization.TaiwanCalendar.GetMonthsInYear#1](~/add/codesnippet/csharp/m-system.globalization.t_7_1.cs)]"
  syntax:
    content: public override int GetMonthsInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Um número inteiro que representa o ano."
    - id: era
      type: System.Int32
      description: "Um número inteiro que representa o era."
    return:
      type: System.Int32
      description: "O número de meses no ano especificado era o especificado."
  overload: System.Globalization.TaiwanCalendar.GetMonthsInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>está fora do intervalo suportado pelo calendário.       - ou - <code>era</code> está fora do intervalo suportado pelo calendário."
  platform:
  - net462
- uid: System.Globalization.TaiwanCalendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  id: GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  parent: System.Globalization.TaiwanCalendar
  langs:
  - csharp
  name: GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
  nameWithType: TaiwanCalendar.GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
  fullName: System.Globalization.TaiwanCalendar.GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Devolve a semana do ano que inclui a data especificada <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: "Este método pode ser utilizado para determinar o número de semanas no ano definindo a `time` parâmetro para o último dia do ano.       O <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>propriedade contém valores específicos da cultura que podem ser utilizados para o `rule` e `firstDayOfWeek` parâmetros.</xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>       A <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A>propriedade de <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>contém o predefinido, <xref:System.DayOfWeek>valor que representa o primeiro dia da semana para um idioma específico, utilizando o calendário especificado na <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>propriedade de <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>.</xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> </xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> </xref:System.DayOfWeek> </xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> </xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A>       A <xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A>propriedade de <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>contém o predefinido, <xref:System.Globalization.CalendarWeekRule>valor que define uma semana do calendário para um idioma específico, utilizando o calendário especificado na <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>propriedade de <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>.</xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> </xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> </xref:System.Globalization.CalendarWeekRule> </xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> </xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A>       Por exemplo, no <xref:System.Globalization.GregorianCalendar>, a <xref:System.Globalization.Calendar.GetWeekOfYear%2A>método para 1 de Janeiro devolve 1.</xref:System.Globalization.Calendar.GetWeekOfYear%2A> </xref:System.Globalization.GregorianCalendar>"
  example:
  - "The following code example shows how the result of <xref:System.Globalization.Calendar.GetWeekOfYear%2A> varies depending on the <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A> and <xref:System.Globalization.CalendarWeekRule> values used. If the specified date is the last day of the year, <xref:System.Globalization.Calendar.GetWeekOfYear%2A> returns the total number of weeks in that year.  \n  \n [!code-cs[System.Globalization.Calendar.GetWeekOfYear#1](~/add/codesnippet/csharp/f44eb65b-9f5c-464b-9830-_1.cs)]\n [!code-vb[System.Globalization.Calendar.GetWeekOfYear#1](~/add/codesnippet/visualbasic/f44eb65b-9f5c-464b-9830-_1.vb)]\n [!code-cpp[System.Globalization.Calendar.GetWeekOfYear#1](~/add/codesnippet/cpp/f44eb65b-9f5c-464b-9830-_1.cpp)]"
  syntax:
    content: public override int GetWeekOfYear (DateTime time, System.Globalization.CalendarWeekRule rule, DayOfWeek firstDayOfWeek);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>ler.</xref:System.DateTime>"
    - id: rule
      type: System.Globalization.CalendarWeekRule
      description: "Um do <xref:System.Globalization.CalendarWeekRule>valores que define uma semana do calendário.</xref:System.Globalization.CalendarWeekRule>"
    - id: firstDayOfWeek
      type: System.DayOfWeek
      description: "Um do <xref:System.DayOfWeek>valores que representa o primeiro dia da semana.</xref:System.DayOfWeek>"
    return:
      type: System.Int32
      description: "Um número inteiro que representa a semana do ano que inclui a data no <code> time </code> parâmetro."
  overload: System.Globalization.TaiwanCalendar.GetWeekOfYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>time</code>ou <code>firstDayOfWeek</code> está fora do intervalo suportado pelo calendário.       - ou - <code>rule</code> não é um <xref:System.Globalization.CalendarWeekRule> valor."
  platform:
  - net462
- uid: System.Globalization.TaiwanCalendar.GetYear(System.DateTime)
  id: GetYear(System.DateTime)
  parent: System.Globalization.TaiwanCalendar
  langs:
  - csharp
  name: GetYear(DateTime)
  nameWithType: TaiwanCalendar.GetYear(DateTime)
  fullName: System.Globalization.TaiwanCalendar.GetYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Devolve o ano no <xref:System.DateTime>.</xref:System.DateTime> especificado"
  remarks: ''
  example:
  - "The following code example demonstrates the use of the GetYear method.  \n  \n [!code-cs[System.Globalization.TaiwanCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.t_5_1.cs)]\n [!code-vb[System.Globalization.TaiwanCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.t_5_1.vb)]\n [!code-cpp[System.Globalization.TaiwanCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.t_5_1.cpp)]"
  syntax:
    content: public override int GetYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>ler.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Um número inteiro que representa o ano <xref:System.DateTime>.</xref:System.DateTime> especificado"
  overload: System.Globalization.TaiwanCalendar.GetYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.TaiwanCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  id: IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.TaiwanCalendar
  langs:
  - csharp
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: TaiwanCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.TaiwanCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Determina se a data especificada no era especificado é um dia bissexto."
  remarks: "Bissexto anos num calendário de Taiwan correspondem para os mesmos anos bissexto no calendário gregoriano. Um ano bissexto no calendário gregoriano está definido como um ano de gregoriana é divisible uniformemente por quatro, exceto se for divisible por 100. No entanto, anos gregoriana que são divisible por 400 são bissexto anos. Um ano comuns tem 365 dias e um ano bissexto tem 366 dias.       Um dia bissexto é um dia em que ocorre apenas num ano bissexto. Por exemplo, o dia 29th da Fevereiro é o dia bissexto apenas."
  example:
  - "The following example calls IsLeapDay for the last day of the second month (February) for five years in each of the eras.  \n  \n [!code-vb[System.Globalization.TaiwanCalendar.IsLeapDay#1](~/add/codesnippet/visualbasic/2b9d593e-4675-4408-97f3-_1.vb)]\n [!code-cpp[System.Globalization.TaiwanCalendar.IsLeapDay#1](~/add/codesnippet/cpp/2b9d593e-4675-4408-97f3-_1.cpp)]\n [!code-cs[System.Globalization.TaiwanCalendar.IsLeapDay#1](~/add/codesnippet/csharp/2b9d593e-4675-4408-97f3-_1.cs)]"
  syntax:
    content: public override bool IsLeapDay (int year, int month, int day, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Um número inteiro que representa o ano."
    - id: month
      type: System.Int32
      description: "Um número inteiro entre 1 e 12 que representa o mês."
    - id: day
      type: System.Int32
      description: "Um número inteiro entre 1 e 31 que representa o dia."
    - id: era
      type: System.Int32
      description: "Um número inteiro que representa o era."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o dia especificado é um dia bissexto; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.TaiwanCalendar.IsLeapDay*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>está fora do intervalo suportado pelo calendário.       - ou - <code>month</code> está fora do intervalo suportado pelo calendário.       - ou - <code>day</code> está fora do intervalo suportado pelo calendário.       - ou - <code>era</code> está fora do intervalo suportado pelo calendário."
  platform:
  - net462
- uid: System.Globalization.TaiwanCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  id: IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.TaiwanCalendar
  langs:
  - csharp
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: TaiwanCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.TaiwanCalendar.IsLeapMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Determina se o mês especificado no ano especificado o especificado era um mês bissexto."
  remarks: "Bissexto anos num calendário de Taiwan correspondem para os mesmos anos bissexto no calendário gregoriano. Um ano bissexto no calendário gregoriano está definido como um ano de gregoriana é divisible uniformemente por quatro, exceto se for divisible por 100. No entanto, anos gregoriana que são divisible por 400 são bissexto anos. Um ano comuns tem 365 dias e um ano bissexto tem 366 dias.       Um mês bissexto é um mês completo que ocorre apenas num ano bissexto. Calendário Taiwan não tem qualquer meses bissexto."
  example:
  - "The following example calls IsLeapMonth for all the months in five years in the current era.  \n  \n [!code-cpp[System.Globalization.TaiwanCalendar.IsLeapMonth#1](~/add/codesnippet/cpp/04a1c248-535f-415d-ac02-_1.cpp)]\n [!code-vb[System.Globalization.TaiwanCalendar.IsLeapMonth#1](~/add/codesnippet/visualbasic/04a1c248-535f-415d-ac02-_1.vb)]\n [!code-cs[System.Globalization.TaiwanCalendar.IsLeapMonth#1](~/add/codesnippet/csharp/04a1c248-535f-415d-ac02-_1.cs)]"
  syntax:
    content: public override bool IsLeapMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Um número inteiro que representa o ano."
    - id: month
      type: System.Int32
      description: "Um número inteiro entre 1 e 12 que representa o mês."
    - id: era
      type: System.Int32
      description: "Um número inteiro que representa o era."
    return:
      type: System.Boolean
      description: "Este método devolve sempre <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, a menos que substituída por uma classe derivada."
  overload: System.Globalization.TaiwanCalendar.IsLeapMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>está fora do intervalo suportado pelo calendário.       - ou - <code>month</code> está fora do intervalo suportado pelo calendário.       - ou - <code>era</code> está fora do intervalo suportado pelo calendário."
  platform:
  - net462
- uid: System.Globalization.TaiwanCalendar.IsLeapYear(System.Int32,System.Int32)
  id: IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.TaiwanCalendar
  langs:
  - csharp
  name: IsLeapYear(Int32,Int32)
  nameWithType: TaiwanCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.TaiwanCalendar.IsLeapYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Determina se o ano especificado o especificado era um ano bissexto."
  remarks: "Bissexto anos num calendário de Taiwan correspondem para os mesmos anos bissexto no calendário gregoriano. Um ano bissexto no calendário gregoriano está definido como um ano de gregoriana é divisible uniformemente por quatro, exceto se for divisible por 100. No entanto, anos gregoriana que são divisible por 400 são bissexto anos. Um ano comuns tem 365 dias e um ano bissexto tem 366 dias."
  example:
  - "The following example calls IsLeapYear for five years in each of the eras.  \n  \n [!code-cpp[System.Globalization.TaiwanCalendar.IsLeapYear#1](~/add/codesnippet/cpp/m-system.globalization.t_14_1.cpp)]\n [!code-vb[System.Globalization.TaiwanCalendar.IsLeapYear#1](~/add/codesnippet/visualbasic/m-system.globalization.t_14_1.vb)]\n [!code-cs[System.Globalization.TaiwanCalendar.IsLeapYear#1](~/add/codesnippet/csharp/m-system.globalization.t_14_1.cs)]"
  syntax:
    content: public override bool IsLeapYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Um número inteiro que representa o ano."
    - id: era
      type: System.Int32
      description: "Um número inteiro que representa o era."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o ano especificado é um ano bissexto; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.TaiwanCalendar.IsLeapYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>está fora do intervalo suportado pelo calendário.       - ou - <code>era</code> está fora do intervalo suportado pelo calendário."
  platform:
  - net462
- uid: System.Globalization.TaiwanCalendar.MaxSupportedDateTime
  id: MaxSupportedDateTime
  parent: System.Globalization.TaiwanCalendar
  langs:
  - csharp
  name: MaxSupportedDateTime
  nameWithType: TaiwanCalendar.MaxSupportedDateTime
  fullName: System.Globalization.TaiwanCalendar.MaxSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Obtém a mais recente data e hora suportado pelo <xref href=&quot;System.Globalization.TaiwanCalendar&quot;> </xref> classe."
  remarks: ''
  example:
  - "The following code example gets the minimum value and the maximum value of the calendar.  \n  \n [!code-cs[System.Globalization.TaiwanCalendar_MinMax#1](~/add/codesnippet/csharp/p-system.globalization.t_0_1.cs)]\n [!code-cpp[System.Globalization.TaiwanCalendar_MinMax#1](~/add/codesnippet/cpp/p-system.globalization.t_0_1.cpp)]\n [!code-vb[System.Globalization.TaiwanCalendar_MinMax#1](~/add/codesnippet/visualbasic/p-system.globalization.t_0_1.vb)]"
  syntax:
    content: public override DateTime MaxSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "A data e hora suportado pelo mais recente do <xref href=&quot;System.Globalization.TaiwanCalendar&quot;> </xref> classe, que é equivalente a última momento do 31 de Dezembro de 9999 E.C. no calendário gregoriano."
  overload: System.Globalization.TaiwanCalendar.MaxSupportedDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.TaiwanCalendar.MinSupportedDateTime
  id: MinSupportedDateTime
  parent: System.Globalization.TaiwanCalendar
  langs:
  - csharp
  name: MinSupportedDateTime
  nameWithType: TaiwanCalendar.MinSupportedDateTime
  fullName: System.Globalization.TaiwanCalendar.MinSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Obtém a data e hora suportado pelo mais antigo a <xref href=&quot;System.Globalization.TaiwanCalendar&quot;> </xref> classe."
  remarks: "Microsoft Visual Basic representa a hora do dia como o tempo especificado da data mínima suportada pelo <xref:System.DateTime>, que é de 1 de Janeiro, 0001 e E.C.</xref:System.DateTime> No entanto, o <xref:System.Globalization.TaiwanCalendar>classe não suporta essa data mínima.</xref:System.Globalization.TaiwanCalendar> Por conseguinte, se a aplicação chama um método para formatar a hora do dia atual calendário a utilizar, mas não especifica um especificador de formato, formatação utiliza o ISO 8601 ordenável (&quot;s&quot;) data/hora especificador de formato de padrão em vez do predefinição geral (&quot;G&quot;) data/hora padrão especificador de formato. Para obter mais informações, consulte [data padrão e cadeias de formato de hora](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example gets the minimum value and the maximum value of the calendar.  \n  \n [!code-cs[System.Globalization.TaiwanCalendar_MinMax#1](~/add/codesnippet/csharp/p-system.globalization.t_1_1.cs)]\n [!code-cpp[System.Globalization.TaiwanCalendar_MinMax#1](~/add/codesnippet/cpp/p-system.globalization.t_1_1.cpp)]\n [!code-vb[System.Globalization.TaiwanCalendar_MinMax#1](~/add/codesnippet/visualbasic/p-system.globalization.t_1_1.vb)]"
  syntax:
    content: public override DateTime MinSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "A data e hora suportado pelo mais antigo a <xref href=&quot;System.Globalization.TaiwanCalendar&quot;> </xref> classe, que é equivalente ao primeiro momento do 1 de Janeiro de 1912 e. c. no calendário gregoriano."
  overload: System.Globalization.TaiwanCalendar.MinSupportedDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.TaiwanCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.TaiwanCalendar
  langs:
  - csharp
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: TaiwanCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.TaiwanCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Devolve um <xref:System.DateTime>que está definido para a data e hora especificadas no especificado era.</xref:System.DateTime>"
  syntax:
    content: public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Um número inteiro que representa o ano."
    - id: month
      type: System.Int32
      description: "Um número inteiro entre 1 e 12 que representa o mês."
    - id: day
      type: System.Int32
      description: "Um número inteiro entre 1 e 31 que representa o dia."
    - id: hour
      type: System.Int32
      description: "Um número inteiro entre 0 e 23 que representa a hora."
    - id: minute
      type: System.Int32
      description: "Um número inteiro entre 0 e 59 que representa o minuto."
    - id: second
      type: System.Int32
      description: "Um número inteiro entre 0 e 59 que representa o segundo."
    - id: millisecond
      type: System.Int32
      description: "Um número inteiro entre 0 e 999 que representa o milissegundo."
    - id: era
      type: System.Int32
      description: "Um número inteiro que representa o era."
    return:
      type: System.DateTime
      description: "O <xref:System.DateTime>que está definido para a data e hora especificadas no era atual.</xref:System.DateTime>"
  overload: System.Globalization.TaiwanCalendar.ToDateTime*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>está fora do intervalo suportado pelo calendário.       - ou - <code>month</code> está fora do intervalo suportado pelo calendário.       - ou - <code>day</code> está fora do intervalo suportado pelo calendário.       - ou - <code>hour</code> é menor que zero ou superior a 23.       - ou - <code>minute</code> é menor que zero ou superior a 59.       - ou - <code>second</code> é menor que zero ou superior a 59.       - ou - <code>millisecond</code> é menor que zero ou superior a 999.       - ou - <code>era</code> está fora do intervalo suportado pelo calendário."
  platform:
  - net462
- uid: System.Globalization.TaiwanCalendar.ToFourDigitYear(System.Int32)
  id: ToFourDigitYear(System.Int32)
  parent: System.Globalization.TaiwanCalendar
  langs:
  - csharp
  name: ToFourDigitYear(Int32)
  nameWithType: TaiwanCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.TaiwanCalendar.ToFourDigitYear(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Converte o ano especificado para um ano de quatro dígitos utilizando o <xref:System.Globalization.TaiwanCalendar.TwoDigitYearMax*>propriedade para determinar o século adequado.</xref:System.Globalization.TaiwanCalendar.TwoDigitYearMax*>"
  remarks: "Este método implementa <xref:System.Globalization.Calendar.ToFourDigitYear%2A?displayProperty=fullName>.</xref:System.Globalization.Calendar.ToFourDigitYear%2A?displayProperty=fullName>       Porque o ano num calendário Taiwan é, normalmente, menos de quatro dígitos, esta implementação sempre devolve o valor da `year` parâmetro.       ToFourDigitYear suporta um ano de dois dígitos ou um ano de quatro dígitos. Transmissão de um valor de ano dois dígitos (inferior a 100) faz com que o método para converter o valor para um valor de quatro dígitos de acordo com o <xref:System.Globalization.TaiwanCalendar.TwoDigitYearMax%2A>representando o século adequado.</xref:System.Globalization.TaiwanCalendar.TwoDigitYearMax%2A> Se a aplicação fornece um valor de anos com quatro dígitos que está dentro do intervalo suportado de calendário para ToFourDigitYear, o método devolve o valor de entrada real. Se a aplicação fornece um valor de quatro dígitos que está fora do intervalo suportado de calendário, ou se fornece um valor negativo, o método emite uma exceção."
  syntax:
    content: public override int ToFourDigitYear (int year);
    parameters:
    - id: year
      type: System.Int32
      description: "Um dígito de dois ou quatro dígitos número inteiro que representa o ano converter."
    return:
      type: System.Int32
      description: "Um número inteiro que contém a representação com quatro dígitos de <code> year </code>."
  overload: System.Globalization.TaiwanCalendar.ToFourDigitYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>está fora do intervalo suportado pelo calendário."
  platform:
  - net462
- uid: System.Globalization.TaiwanCalendar.TwoDigitYearMax
  id: TwoDigitYearMax
  parent: System.Globalization.TaiwanCalendar
  langs:
  - csharp
  name: TwoDigitYearMax
  nameWithType: TaiwanCalendar.TwoDigitYearMax
  fullName: System.Globalization.TaiwanCalendar.TwoDigitYearMax
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Obtém ou define o último ano de um intervalo de 100 anos que pode ser representado por um ano dígito 2."
  remarks: "Esta propriedade implementa <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName>.</xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName>       Uma vez que o ano num calendário Taiwan é, normalmente, menos de quatro dígitos, esta implementação devolve 99 por predefinição e não afeta o valor de retorno de <xref:System.Globalization.TaiwanCalendar.ToFourDigitYear%2A>.</xref:System.Globalization.TaiwanCalendar.ToFourDigitYear%2A>"
  syntax:
    content: public override int TwoDigitYearMax { get; set; }
    return:
      type: System.Int32
      description: "O último ano de um intervalo de 100 anos que pode ser representado por um ano dígito 2."
  overload: System.Globalization.TaiwanCalendar.TwoDigitYearMax*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor especificado numa operação conjunto é inferior a 99.       - ou - o valor especificado numa operação conjunto é superior ao <xref uid=&quot;langword_csharp_MaxSupportedDateTime.Year&quot; name=&quot;MaxSupportedDateTime.Year&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Uma operação de definição, a instância atual é só de leitura."
  platform:
  - net462
references:
- uid: System.Globalization.Calendar
  isExternal: false
  name: System.Globalization.Calendar
- uid: System.TypeInitializationException
  isExternal: true
  name: System.TypeInitializationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Globalization.TaiwanCalendar.#ctor
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: TaiwanCalendar()
  nameWithType: TaiwanCalendar.TaiwanCalendar()
  fullName: System.Globalization.TaiwanCalendar.TaiwanCalendar()
- uid: System.Globalization.TaiwanCalendar.AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: AddMonths(DateTime,Int32)
  nameWithType: TaiwanCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.TaiwanCalendar.AddMonths(DateTime,Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Globalization.TaiwanCalendar.AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: AddYears(DateTime,Int32)
  nameWithType: TaiwanCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.TaiwanCalendar.AddYears(DateTime,Int32)
- uid: System.Globalization.TaiwanCalendar.AlgorithmType
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: TaiwanCalendar.AlgorithmType
  fullName: System.Globalization.TaiwanCalendar.AlgorithmType
- uid: System.Globalization.CalendarAlgorithmType
  parent: System.Globalization
  isExternal: false
  name: CalendarAlgorithmType
  nameWithType: CalendarAlgorithmType
  fullName: System.Globalization.CalendarAlgorithmType
- uid: System.Globalization.TaiwanCalendar.Eras
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: Eras
  nameWithType: TaiwanCalendar.Eras
  fullName: System.Globalization.TaiwanCalendar.Eras
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Globalization.TaiwanCalendar.GetDayOfMonth(System.DateTime)
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: GetDayOfMonth(DateTime)
  nameWithType: TaiwanCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.TaiwanCalendar.GetDayOfMonth(DateTime)
- uid: System.Globalization.TaiwanCalendar.GetDayOfWeek(System.DateTime)
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: GetDayOfWeek(DateTime)
  nameWithType: TaiwanCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.TaiwanCalendar.GetDayOfWeek(DateTime)
- uid: System.DayOfWeek
  parent: System
  isExternal: true
  name: DayOfWeek
  nameWithType: DayOfWeek
  fullName: System.DayOfWeek
- uid: System.Globalization.TaiwanCalendar.GetDayOfYear(System.DateTime)
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: GetDayOfYear(DateTime)
  nameWithType: TaiwanCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.TaiwanCalendar.GetDayOfYear(DateTime)
- uid: System.Globalization.TaiwanCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: TaiwanCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.TaiwanCalendar.GetDaysInMonth(Int32,Int32,Int32)
- uid: System.Globalization.TaiwanCalendar.GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: GetDaysInYear(Int32,Int32)
  nameWithType: TaiwanCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.TaiwanCalendar.GetDaysInYear(Int32,Int32)
- uid: System.Globalization.TaiwanCalendar.GetEra(System.DateTime)
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: GetEra(DateTime)
  nameWithType: TaiwanCalendar.GetEra(DateTime)
  fullName: System.Globalization.TaiwanCalendar.GetEra(DateTime)
- uid: System.Globalization.TaiwanCalendar.GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: GetLeapMonth(Int32,Int32)
  nameWithType: TaiwanCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.TaiwanCalendar.GetLeapMonth(Int32,Int32)
- uid: System.Globalization.TaiwanCalendar.GetMonth(System.DateTime)
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: GetMonth(DateTime)
  nameWithType: TaiwanCalendar.GetMonth(DateTime)
  fullName: System.Globalization.TaiwanCalendar.GetMonth(DateTime)
- uid: System.Globalization.TaiwanCalendar.GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: TaiwanCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.TaiwanCalendar.GetMonthsInYear(Int32,Int32)
- uid: System.Globalization.TaiwanCalendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
  nameWithType: TaiwanCalendar.GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
  fullName: System.Globalization.TaiwanCalendar.GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
- uid: System.Globalization.CalendarWeekRule
  parent: System.Globalization
  isExternal: true
  name: CalendarWeekRule
  nameWithType: CalendarWeekRule
  fullName: System.Globalization.CalendarWeekRule
- uid: System.Globalization.TaiwanCalendar.GetYear(System.DateTime)
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: GetYear(DateTime)
  nameWithType: TaiwanCalendar.GetYear(DateTime)
  fullName: System.Globalization.TaiwanCalendar.GetYear(DateTime)
- uid: System.Globalization.TaiwanCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: TaiwanCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.TaiwanCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Globalization.TaiwanCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: TaiwanCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.TaiwanCalendar.IsLeapMonth(Int32,Int32,Int32)
- uid: System.Globalization.TaiwanCalendar.IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: IsLeapYear(Int32,Int32)
  nameWithType: TaiwanCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.TaiwanCalendar.IsLeapYear(Int32,Int32)
- uid: System.Globalization.TaiwanCalendar.MaxSupportedDateTime
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: TaiwanCalendar.MaxSupportedDateTime
  fullName: System.Globalization.TaiwanCalendar.MaxSupportedDateTime
- uid: System.Globalization.TaiwanCalendar.MinSupportedDateTime
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: TaiwanCalendar.MinSupportedDateTime
  fullName: System.Globalization.TaiwanCalendar.MinSupportedDateTime
- uid: System.Globalization.TaiwanCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: TaiwanCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.TaiwanCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
- uid: System.Globalization.TaiwanCalendar.ToFourDigitYear(System.Int32)
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: ToFourDigitYear(Int32)
  nameWithType: TaiwanCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.TaiwanCalendar.ToFourDigitYear(Int32)
- uid: System.Globalization.TaiwanCalendar.TwoDigitYearMax
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: TaiwanCalendar.TwoDigitYearMax
  fullName: System.Globalization.TaiwanCalendar.TwoDigitYearMax
- uid: System.Globalization.TaiwanCalendar.#ctor*
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: TaiwanCalendar
  nameWithType: TaiwanCalendar.TaiwanCalendar
- uid: System.Globalization.TaiwanCalendar.AddMonths*
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: AddMonths
  nameWithType: TaiwanCalendar.AddMonths
- uid: System.Globalization.TaiwanCalendar.AddYears*
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: AddYears
  nameWithType: TaiwanCalendar.AddYears
- uid: System.Globalization.TaiwanCalendar.AlgorithmType*
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: TaiwanCalendar.AlgorithmType
- uid: System.Globalization.TaiwanCalendar.Eras*
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: Eras
  nameWithType: TaiwanCalendar.Eras
- uid: System.Globalization.TaiwanCalendar.GetDayOfMonth*
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: GetDayOfMonth
  nameWithType: TaiwanCalendar.GetDayOfMonth
- uid: System.Globalization.TaiwanCalendar.GetDayOfWeek*
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: GetDayOfWeek
  nameWithType: TaiwanCalendar.GetDayOfWeek
- uid: System.Globalization.TaiwanCalendar.GetDayOfYear*
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: GetDayOfYear
  nameWithType: TaiwanCalendar.GetDayOfYear
- uid: System.Globalization.TaiwanCalendar.GetDaysInMonth*
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: GetDaysInMonth
  nameWithType: TaiwanCalendar.GetDaysInMonth
- uid: System.Globalization.TaiwanCalendar.GetDaysInYear*
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: GetDaysInYear
  nameWithType: TaiwanCalendar.GetDaysInYear
- uid: System.Globalization.TaiwanCalendar.GetEra*
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: GetEra
  nameWithType: TaiwanCalendar.GetEra
- uid: System.Globalization.TaiwanCalendar.GetLeapMonth*
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: GetLeapMonth
  nameWithType: TaiwanCalendar.GetLeapMonth
- uid: System.Globalization.TaiwanCalendar.GetMonth*
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: GetMonth
  nameWithType: TaiwanCalendar.GetMonth
- uid: System.Globalization.TaiwanCalendar.GetMonthsInYear*
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: GetMonthsInYear
  nameWithType: TaiwanCalendar.GetMonthsInYear
- uid: System.Globalization.TaiwanCalendar.GetWeekOfYear*
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: GetWeekOfYear
  nameWithType: TaiwanCalendar.GetWeekOfYear
- uid: System.Globalization.TaiwanCalendar.GetYear*
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: GetYear
  nameWithType: TaiwanCalendar.GetYear
- uid: System.Globalization.TaiwanCalendar.IsLeapDay*
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: IsLeapDay
  nameWithType: TaiwanCalendar.IsLeapDay
- uid: System.Globalization.TaiwanCalendar.IsLeapMonth*
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: IsLeapMonth
  nameWithType: TaiwanCalendar.IsLeapMonth
- uid: System.Globalization.TaiwanCalendar.IsLeapYear*
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: IsLeapYear
  nameWithType: TaiwanCalendar.IsLeapYear
- uid: System.Globalization.TaiwanCalendar.MaxSupportedDateTime*
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: TaiwanCalendar.MaxSupportedDateTime
- uid: System.Globalization.TaiwanCalendar.MinSupportedDateTime*
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: TaiwanCalendar.MinSupportedDateTime
- uid: System.Globalization.TaiwanCalendar.ToDateTime*
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: ToDateTime
  nameWithType: TaiwanCalendar.ToDateTime
- uid: System.Globalization.TaiwanCalendar.ToFourDigitYear*
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: ToFourDigitYear
  nameWithType: TaiwanCalendar.ToFourDigitYear
- uid: System.Globalization.TaiwanCalendar.TwoDigitYearMax*
  parent: System.Globalization.TaiwanCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: TaiwanCalendar.TwoDigitYearMax
