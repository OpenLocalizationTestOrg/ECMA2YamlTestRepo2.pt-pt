### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.Tasks.Copy
  id: Copy
  children:
  - Microsoft.Build.Tasks.Copy.#ctor
  - Microsoft.Build.Tasks.Copy.Cancel
  - Microsoft.Build.Tasks.Copy.CopiedFiles
  - Microsoft.Build.Tasks.Copy.DestinationFiles
  - Microsoft.Build.Tasks.Copy.DestinationFolder
  - Microsoft.Build.Tasks.Copy.Execute
  - Microsoft.Build.Tasks.Copy.OverwriteReadOnlyFiles
  - Microsoft.Build.Tasks.Copy.Retries
  - Microsoft.Build.Tasks.Copy.RetryDelayMilliseconds
  - Microsoft.Build.Tasks.Copy.SkipUnchangedFiles
  - Microsoft.Build.Tasks.Copy.SourceFiles
  - Microsoft.Build.Tasks.Copy.UseHardlinksIfPossible
  langs:
  - csharp
  name: Copy
  nameWithType: Copy
  fullName: Microsoft.Build.Tasks.Copy
  type: Class
  summary: "Implements the `Copy` task. Use the `Copy` element in your project file to create and execute this task. For usage and parameter information, see [Copy Task](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: 'public class Copy : Microsoft.Build.Tasks.TaskExtension, Microsoft.Build.Framework.ICancelableTask'
  inheritance:
  - System.Object
  - Microsoft.Build.Utilities.Task
  - Microsoft.Build.Tasks.TaskExtension
  implements:
  - Microsoft.Build.Framework.ICancelableTask
  inheritedMembers:
  - Microsoft.Build.Tasks.TaskExtension.Log
  - Microsoft.Build.Utilities.Task.BuildEngine
  - Microsoft.Build.Utilities.Task.BuildEngine2
  - Microsoft.Build.Utilities.Task.BuildEngine3
  - Microsoft.Build.Utilities.Task.BuildEngine4
  - Microsoft.Build.Utilities.Task.HelpKeywordPrefix
  - Microsoft.Build.Utilities.Task.HostObject
  - Microsoft.Build.Utilities.Task.TaskResources
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Copy.#ctor
  id: '#ctor'
  parent: Microsoft.Build.Tasks.Copy
  langs:
  - csharp
  name: Copy()
  nameWithType: Copy.Copy()
  fullName: Microsoft.Build.Tasks.Copy.Copy()
  type: Constructor
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Initializes a new instance of the <xref href=&quot;Microsoft.Build.Tasks.Copy&quot;></xref> class."
  syntax:
    content: public Copy ();
    parameters: []
  overload: Microsoft.Build.Tasks.Copy.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Copy.Cancel
  id: Cancel
  parent: Microsoft.Build.Tasks.Copy
  langs:
  - csharp
  name: Cancel()
  nameWithType: Copy.Cancel()
  fullName: Microsoft.Build.Tasks.Copy.Cancel()
  type: Method
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Stop and return (in an undefined state) as soon as possible."
  syntax:
    content: public void Cancel ();
    parameters: []
  overload: Microsoft.Build.Tasks.Copy.Cancel*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Copy.CopiedFiles
  id: CopiedFiles
  parent: Microsoft.Build.Tasks.Copy
  langs:
  - csharp
  name: CopiedFiles
  nameWithType: Copy.CopiedFiles
  fullName: Microsoft.Build.Tasks.Copy.CopiedFiles
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Gets the items that were successfully copied."
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem[] CopiedFiles { get; }
    return:
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "The items that were successfully copied."
  overload: Microsoft.Build.Tasks.Copy.CopiedFiles*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Copy.DestinationFiles
  id: DestinationFiles
  parent: Microsoft.Build.Tasks.Copy
  langs:
  - csharp
  name: DestinationFiles
  nameWithType: Copy.DestinationFiles
  fullName: Microsoft.Build.Tasks.Copy.DestinationFiles
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Gets or sets a list of files to copy the source files to."
  remarks: "The list of destination files is expected to be a one-to-one mapping with the list specified in the <xref:Microsoft.Build.Tasks.Copy.SourceFiles%2A> property. That is, the first file specified in <xref:Microsoft.Build.Tasks.Copy.SourceFiles%2A> will be copied to the first location specified in DestinationFiles, and so forth."
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem[] DestinationFiles { get; set; }
    return:
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "The list of files to copy the source files to."
  overload: Microsoft.Build.Tasks.Copy.DestinationFiles*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Copy.DestinationFolder
  id: DestinationFolder
  parent: Microsoft.Build.Tasks.Copy
  langs:
  - csharp
  name: DestinationFolder
  nameWithType: Copy.DestinationFolder
  fullName: Microsoft.Build.Tasks.Copy.DestinationFolder
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Gets or sets the directory to which you want to copy the files."
  remarks: "The destination folder must be a directory, not a file. If the directory does not exist, it is created automatically."
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem DestinationFolder { get; set; }
    return:
      type: Microsoft.Build.Framework.ITaskItem
      description: "The directory to which you want to copy the files."
  overload: Microsoft.Build.Tasks.Copy.DestinationFolder*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Copy.Execute
  id: Execute
  parent: Microsoft.Build.Tasks.Copy
  langs:
  - csharp
  name: Execute()
  nameWithType: Copy.Execute()
  fullName: Microsoft.Build.Tasks.Copy.Execute()
  type: Method
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Executes the `Copy` task."
  syntax:
    content: public override bool Execute ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if task execution succeeded; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.Build.Tasks.Copy.Execute*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Copy.OverwriteReadOnlyFiles
  id: OverwriteReadOnlyFiles
  parent: Microsoft.Build.Tasks.Copy
  langs:
  - csharp
  name: OverwriteReadOnlyFiles
  nameWithType: Copy.OverwriteReadOnlyFiles
  fullName: Microsoft.Build.Tasks.Copy.OverwriteReadOnlyFiles
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Gets or sets a Boolean value that indicates whether to overwrite files even if they are marked as read only files."
  syntax:
    content: public bool OverwriteReadOnlyFiles { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the `Copy` task should overwrite files even if they are marked as read only files; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.Build.Tasks.Copy.OverwriteReadOnlyFiles*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Copy.Retries
  id: Retries
  parent: Microsoft.Build.Tasks.Copy
  langs:
  - csharp
  name: Retries
  nameWithType: Copy.Retries
  fullName: Microsoft.Build.Tasks.Copy.Retries
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: 'How many times to attempt to copy, if all previous attempts failed. Defaults to zero. Warning: using retries may mask a synchronization problem in your build process.'
  syntax:
    content: public int Retries { get; set; }
    return:
      type: System.Int32
      description: "To be added."
  overload: Microsoft.Build.Tasks.Copy.Retries*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Copy.RetryDelayMilliseconds
  id: RetryDelayMilliseconds
  parent: Microsoft.Build.Tasks.Copy
  langs:
  - csharp
  name: RetryDelayMilliseconds
  nameWithType: Copy.RetryDelayMilliseconds
  fullName: Microsoft.Build.Tasks.Copy.RetryDelayMilliseconds
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Delay between any necessary retries. Defaults to <xref:Microsoft.Build.Tasks.Copy.RetryDelayMillisecondsDefault>"
  syntax:
    content: public int RetryDelayMilliseconds { get; set; }
    return:
      type: System.Int32
      description: "To be added."
  overload: Microsoft.Build.Tasks.Copy.RetryDelayMilliseconds*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Copy.SkipUnchangedFiles
  id: SkipUnchangedFiles
  parent: Microsoft.Build.Tasks.Copy
  langs:
  - csharp
  name: SkipUnchangedFiles
  nameWithType: Copy.SkipUnchangedFiles
  fullName: Microsoft.Build.Tasks.Copy.SkipUnchangedFiles
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Gets or sets a Boolean value that indicates whether the `Copy` task should skip the copying of files that are unchanged between the source and destination."
  remarks: "The `Copy` task considers files to be unchanged if they have the same size and the same last modified time."
  syntax:
    content: public bool SkipUnchangedFiles { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the `Copy` task should skip the copying of files that are unchanged between the source and destination; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.Build.Tasks.Copy.SkipUnchangedFiles*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Copy.SourceFiles
  id: SourceFiles
  parent: Microsoft.Build.Tasks.Copy
  langs:
  - csharp
  name: SourceFiles
  nameWithType: Copy.SourceFiles
  fullName: Microsoft.Build.Tasks.Copy.SourceFiles
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Gets or sets the files to copy."
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem[] SourceFiles { get; set; }
    return:
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "The files to copy."
  overload: Microsoft.Build.Tasks.Copy.SourceFiles*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Copy.UseHardlinksIfPossible
  id: UseHardlinksIfPossible
  parent: Microsoft.Build.Tasks.Copy
  langs:
  - csharp
  name: UseHardlinksIfPossible
  nameWithType: Copy.UseHardlinksIfPossible
  fullName: Microsoft.Build.Tasks.Copy.UseHardlinksIfPossible
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "Indicates if hard links should be used."
  syntax:
    content: public bool UseHardlinksIfPossible { get; set; }
    return:
      type: System.Boolean
      description: "To be added."
  overload: Microsoft.Build.Tasks.Copy.UseHardlinksIfPossible*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.Build.Tasks.TaskExtension
  isExternal: false
  name: Microsoft.Build.Tasks.TaskExtension
- uid: Microsoft.Build.Tasks.Copy.#ctor
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: Copy()
  nameWithType: Copy.Copy()
  fullName: Microsoft.Build.Tasks.Copy.Copy()
- uid: Microsoft.Build.Tasks.Copy.Cancel
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: Cancel()
  nameWithType: Copy.Cancel()
  fullName: Microsoft.Build.Tasks.Copy.Cancel()
- uid: Microsoft.Build.Tasks.Copy.CopiedFiles
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: CopiedFiles
  nameWithType: Copy.CopiedFiles
  fullName: Microsoft.Build.Tasks.Copy.CopiedFiles
- uid: Microsoft.Build.Framework.ITaskItem[]
  parent: Microsoft.Build.Framework
  isExternal: false
  name: ITaskItem
  nameWithType: ITaskItem
  fullName: Microsoft.Build.Framework.ITaskItem[]
  spec.csharp:
  - uid: Microsoft.Build.Framework.ITaskItem
    name: ITaskItem
    nameWithType: ITaskItem
    fullName: ITaskItem[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.Build.Tasks.Copy.DestinationFiles
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: DestinationFiles
  nameWithType: Copy.DestinationFiles
  fullName: Microsoft.Build.Tasks.Copy.DestinationFiles
- uid: Microsoft.Build.Tasks.Copy.DestinationFolder
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: DestinationFolder
  nameWithType: Copy.DestinationFolder
  fullName: Microsoft.Build.Tasks.Copy.DestinationFolder
- uid: Microsoft.Build.Framework.ITaskItem
  parent: Microsoft.Build.Framework
  isExternal: false
  name: ITaskItem
  nameWithType: ITaskItem
  fullName: Microsoft.Build.Framework.ITaskItem
- uid: Microsoft.Build.Tasks.Copy.Execute
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: Execute()
  nameWithType: Copy.Execute()
  fullName: Microsoft.Build.Tasks.Copy.Execute()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.Tasks.Copy.OverwriteReadOnlyFiles
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: OverwriteReadOnlyFiles
  nameWithType: Copy.OverwriteReadOnlyFiles
  fullName: Microsoft.Build.Tasks.Copy.OverwriteReadOnlyFiles
- uid: Microsoft.Build.Tasks.Copy.Retries
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: Retries
  nameWithType: Copy.Retries
  fullName: Microsoft.Build.Tasks.Copy.Retries
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Build.Tasks.Copy.RetryDelayMilliseconds
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: RetryDelayMilliseconds
  nameWithType: Copy.RetryDelayMilliseconds
  fullName: Microsoft.Build.Tasks.Copy.RetryDelayMilliseconds
- uid: Microsoft.Build.Tasks.Copy.SkipUnchangedFiles
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: SkipUnchangedFiles
  nameWithType: Copy.SkipUnchangedFiles
  fullName: Microsoft.Build.Tasks.Copy.SkipUnchangedFiles
- uid: Microsoft.Build.Tasks.Copy.SourceFiles
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: SourceFiles
  nameWithType: Copy.SourceFiles
  fullName: Microsoft.Build.Tasks.Copy.SourceFiles
- uid: Microsoft.Build.Tasks.Copy.UseHardlinksIfPossible
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: UseHardlinksIfPossible
  nameWithType: Copy.UseHardlinksIfPossible
  fullName: Microsoft.Build.Tasks.Copy.UseHardlinksIfPossible
- uid: Microsoft.Build.Tasks.Copy.#ctor*
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: Copy
  nameWithType: Copy.Copy
- uid: Microsoft.Build.Tasks.Copy.Cancel*
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: Cancel
  nameWithType: Copy.Cancel
- uid: Microsoft.Build.Tasks.Copy.CopiedFiles*
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: CopiedFiles
  nameWithType: Copy.CopiedFiles
- uid: Microsoft.Build.Tasks.Copy.DestinationFiles*
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: DestinationFiles
  nameWithType: Copy.DestinationFiles
- uid: Microsoft.Build.Tasks.Copy.DestinationFolder*
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: DestinationFolder
  nameWithType: Copy.DestinationFolder
- uid: Microsoft.Build.Tasks.Copy.Execute*
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: Execute
  nameWithType: Copy.Execute
- uid: Microsoft.Build.Tasks.Copy.OverwriteReadOnlyFiles*
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: OverwriteReadOnlyFiles
  nameWithType: Copy.OverwriteReadOnlyFiles
- uid: Microsoft.Build.Tasks.Copy.Retries*
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: Retries
  nameWithType: Copy.Retries
- uid: Microsoft.Build.Tasks.Copy.RetryDelayMilliseconds*
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: RetryDelayMilliseconds
  nameWithType: Copy.RetryDelayMilliseconds
- uid: Microsoft.Build.Tasks.Copy.SkipUnchangedFiles*
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: SkipUnchangedFiles
  nameWithType: Copy.SkipUnchangedFiles
- uid: Microsoft.Build.Tasks.Copy.SourceFiles*
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: SourceFiles
  nameWithType: Copy.SourceFiles
- uid: Microsoft.Build.Tasks.Copy.UseHardlinksIfPossible*
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: UseHardlinksIfPossible
  nameWithType: Copy.UseHardlinksIfPossible
