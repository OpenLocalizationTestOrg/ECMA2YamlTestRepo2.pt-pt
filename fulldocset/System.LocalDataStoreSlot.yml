### YamlMime:ManagedReference
items:
- uid: System.LocalDataStoreSlot
  id: LocalDataStoreSlot
  children:
  - System.LocalDataStoreSlot.Finalize
  langs:
  - csharp
  name: LocalDataStoreSlot
  nameWithType: LocalDataStoreSlot
  fullName: System.LocalDataStoreSlot
  type: Class
  summary: "Encapsula uma ranhura de memória para armazenar os dados locais. Esta classe não pode ser herdada."
  remarks: "O .NET Framework fornece dois mecanismos para utilizar o armazenamento local do thread (TLS): campos estáticos de thread relativo e blocos de dados.      -Campos estáticos thread-relativo são `static` campos (`Shared` campos no Visual Basic) que estão marcados com o <xref:System.ThreadStaticAttribute>atributo.</xref:System.ThreadStaticAttribute> Fornecer um melhor desempenho ao ranhuras de dados e ativar a verificação de tipo de tempo de compilação.      -Ranhuras de dados são mais lento e mais awkward utilizar a campos estáticos de thread relativo. Além disso, os dados são armazenados como tipo <xref:System.Object>por isso, tem de o transmitir para o tipo correto antes de utilizar o mesmo.</xref:System.Object> No entanto, pode utilizar os blocos de dados quando tem informações suficientes no momento da compilação alocar campos estáticos.       Para obter mais informações sobre a utilização de TLS, consulte [Thread armazenamento Local: campos estáticos de Thread relativo e dados ranhuras](~/add/includes/ajax-current-ext-md.md).       Da mesma forma, o .NET Framework fornece dois mecanismos para utilizar o armazenamento local do contexto: ranhuras de campos e dados estáticas no contexto relativo. Caminho relativo do contexto de campos estáticos são campos estáticos que estão marcados com o <xref:System.ContextStaticAttribute>atributo.</xref:System.ContextStaticAttribute> Os compromissos entre a utilização destes dois mecanismos são semelhantes aos fala entre a utilização de ranhuras de campos e dados estáticas no thread relativo.       A estrutura de LocalDataStoreSlot funciona como um mecanismo de memória de armazenamento local threads e contextos podem utilizar para armazenar dados específicos do thread e específicos de contexto, respetivamente. O language runtime atribui uma matriz de arquivo de dados de ranhura multi para cada processo quando é criado. As chamadas de thread ou de contexto nas várias funções para atribuir um bloco de dados no arquivo de dados, armazenar e obter um valor de dados na ranhura de e para libertar uma ranhura de dados para reutilizar depois do objecto de thread ou contexto expira.       Os blocos de dados são exclusivos por thread ou contexto; os valores não são partilhados entre os objectos de thread ou de contexto. Ranhuras de dados que podem ser atribuídas por um nome ou por um número de índice.       Para obter mais informações sobre o armazenamento de dados local, consulte <xref:System.Threading.Thread>ou <xref:System.Runtime.Remoting.Contexts.Context>.</xref:System.Runtime.Remoting.Contexts.Context> </xref:System.Threading.Thread> A classe de LocalDataStoreSlot é utilizada com métodos tais como <xref:System.Threading.Thread.AllocateNamedDataSlot%2A?displayProperty=fullName>, <xref:System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot%2A?displayProperty=fullName>, <xref:System.Threading.Thread.GetData%2A?displayProperty=fullName>, e <xref:System.Runtime.Remoting.Contexts.Context.GetData%2A?displayProperty=fullName>; não tem qualquer métodos do seu próprio que tem de utilizar.</xref:System.Runtime.Remoting.Contexts.Context.GetData%2A?displayProperty=fullName> </xref:System.Threading.Thread.GetData%2A?displayProperty=fullName> </xref:System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot%2A?displayProperty=fullName> </xref:System.Threading.Thread.AllocateNamedDataSlot%2A?displayProperty=fullName>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class LocalDataStoreSlot
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.LocalDataStoreSlot.Finalize
  id: Finalize
  parent: System.LocalDataStoreSlot
  langs:
  - csharp
  name: Finalize()
  nameWithType: LocalDataStoreSlot.Finalize()
  fullName: System.LocalDataStoreSlot.Finalize()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Garante que os recursos são libertados e outras operações de limpeza são efetuadas quando o recoletor de lixo da memória reclama o <xref href=&quot;System.LocalDataStoreSlot&quot;> </xref> objeto."
  remarks: "As chamadas de recoletor de lixo Finalize quando o objeto atual está pronto para ser finalizada."
  syntax:
    content: ~LocalDataStoreSlot ();
    parameters: []
  overload: System.LocalDataStoreSlot.Finalize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.LocalDataStoreSlot.Finalize
  parent: System.LocalDataStoreSlot
  isExternal: false
  name: Finalize()
  nameWithType: LocalDataStoreSlot.Finalize()
  fullName: System.LocalDataStoreSlot.Finalize()
- uid: System.LocalDataStoreSlot.Finalize*
  parent: System.LocalDataStoreSlot
  isExternal: false
  name: Finalize
  nameWithType: LocalDataStoreSlot.Finalize
