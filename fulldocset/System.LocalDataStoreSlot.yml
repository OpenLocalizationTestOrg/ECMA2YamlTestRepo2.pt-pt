### YamlMime:ManagedReference
items:
- uid: System.LocalDataStoreSlot
  id: LocalDataStoreSlot
  children:
  - System.LocalDataStoreSlot.Finalize
  langs:
  - csharp
  name: LocalDataStoreSlot
  nameWithType: LocalDataStoreSlot
  fullName: System.LocalDataStoreSlot
  type: Class
  summary: "Encapsulates a memory slot to store local data. This class cannot be inherited."
  remarks: "The .NET Framework provides two mechanisms for using thread local storage (TLS): thread-relative static fields, and data slots.      -   Thread-relative static fields are `static` fields (`Shared` fields in Visual Basic) that are marked with the <xref:System.ThreadStaticAttribute> attribute. They provide better performance than data slots, and enable compile-time type checking.      -   Data slots are slower and more awkward to use than thread-relative static fields. Also, data is stored as type <xref:System.Object>, so you must cast it to the correct type before using it. However, you can use data slots when you have insufficient information at compile time to allocate static fields.       For more information about using TLS, see [Thread Local Storage: Thread-Relative Static Fields and Data Slots](~/add/includes/ajax-current-ext-md.md).       Similarly, the .NET Framework provides two mechanisms for using context local storage: context-relative static fields and data slots. Context-relative static fields are static fields that are marked with the <xref:System.ContextStaticAttribute> attribute. The trade-offs between using these two mechanisms are similar to the tradeoffs between using thread-relative static fields and data slots.       The LocalDataStoreSlot structure serves as a local store memory mechanism that threads and contexts can use to store thread-specific and context-specific data, respectively. The common language runtime allocates a multi-slot data store array to each process when it is created. The thread or context calls various functions to allocate a data slot in the data store, to store and retrieve a data value in the slot, and to free a data slot for reuse after the thread or context object expires.       The data slots are unique per thread or context; their values are not shared between the thread or context objects. Data slots can be allocated by a name or by an index number.       For more information about storing local data, see <xref:System.Threading.Thread> or <xref:System.Runtime.Remoting.Contexts.Context>. The LocalDataStoreSlot class is used with methods such as <xref:System.Threading.Thread.AllocateNamedDataSlot%2A?displayProperty=fullName>, <xref:System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot%2A?displayProperty=fullName>, <xref:System.Threading.Thread.GetData%2A?displayProperty=fullName>, and <xref:System.Runtime.Remoting.Contexts.Context.GetData%2A?displayProperty=fullName>; it does not have any methods of its own that you need to use."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class LocalDataStoreSlot
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.LocalDataStoreSlot.Finalize
  id: Finalize
  parent: System.LocalDataStoreSlot
  langs:
  - csharp
  name: Finalize()
  nameWithType: LocalDataStoreSlot.Finalize()
  fullName: System.LocalDataStoreSlot.Finalize()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Ensures that resources are freed and other cleanup operations are performed when the garbage collector reclaims the <xref href=&quot;System.LocalDataStoreSlot&quot;></xref> object."
  remarks: "The garbage collector calls Finalize when the current object is ready to be finalized."
  syntax:
    content: ~LocalDataStoreSlot ();
    parameters: []
  overload: System.LocalDataStoreSlot.Finalize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.LocalDataStoreSlot.Finalize
  parent: System.LocalDataStoreSlot
  isExternal: false
  name: Finalize()
  nameWithType: LocalDataStoreSlot.Finalize()
  fullName: System.LocalDataStoreSlot.Finalize()
- uid: System.LocalDataStoreSlot.Finalize*
  parent: System.LocalDataStoreSlot
  isExternal: false
  name: Finalize
  nameWithType: LocalDataStoreSlot.Finalize
