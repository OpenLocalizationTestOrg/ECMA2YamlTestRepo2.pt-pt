### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.Internal.ClientRemotingConfig
  id: ClientRemotingConfig
  children:
  - System.EnterpriseServices.Internal.ClientRemotingConfig.#ctor
  - System.EnterpriseServices.Internal.ClientRemotingConfig.Write(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)
  langs:
  - csharp
  name: ClientRemotingConfig
  nameWithType: ClientRemotingConfig
  fullName: System.EnterpriseServices.Internal.ClientRemotingConfig
  type: Class
  summary: "Defines a static <xref:System.EnterpriseServices.Internal.ClientRemotingConfig.Write*> method that creates a client remoting configuration file for a client type library."
  remarks: "The <xref:System.EnterpriseServices.Internal.ClientRemotingConfig.Write%2A> method is used by the <xref:System.EnterpriseServices.Internal.Publish> class while generating a COM interface from a client type library (with a .tlb extension). The <xref:System.EnterpriseServices.Internal.Publish> class publishes COM interfaces in a SOAP-enabled COM+ application. One of the method&quot;s parameters is the name of an assembly that contains common language runtime (CLR) metadata that <xref:System.EnterpriseServices.Internal.Publish> has already generated for the client type library.       <xref:System.EnterpriseServices.Internal.ClientRemotingConfig.Write%2A> does not need to be called directly. Instead, call the <xref:System.EnterpriseServices.Internal.Publish.ProcessClientTlb%2A> method of the <xref:System.EnterpriseServices.Internal.Publish> class.       ClientRemotingConfig is used internally by the .NET Framework. You do not need to use the class directly in your code."
  syntax:
    content: public class ClientRemotingConfig
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.ClientRemotingConfig.#ctor
  id: '#ctor'
  parent: System.EnterpriseServices.Internal.ClientRemotingConfig
  langs:
  - csharp
  name: ClientRemotingConfig()
  nameWithType: ClientRemotingConfig.ClientRemotingConfig()
  fullName: System.EnterpriseServices.Internal.ClientRemotingConfig.ClientRemotingConfig()
  type: Constructor
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "Initializes a new instance of the <xref href=&quot;System.EnterpriseServices.Internal.ClientRemotingConfig&quot;></xref> class."
  syntax:
    content: public ClientRemotingConfig ();
    parameters: []
  overload: System.EnterpriseServices.Internal.ClientRemotingConfig.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.ClientRemotingConfig.Write(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)
  id: Write(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)
  parent: System.EnterpriseServices.Internal.ClientRemotingConfig
  langs:
  - csharp
  name: Write(String,String,String,String,String,String,String,String)
  nameWithType: ClientRemotingConfig.Write(String,String,String,String,String,String,String,String)
  fullName: System.EnterpriseServices.Internal.ClientRemotingConfig.Write(String,String,String,String,String,String,String,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "Creates a client remoting configuration file for a client type library in a SOAP-enabled COM+ application."
  remarks: "The static Write method is called by the <xref:System.EnterpriseServices.Internal.Publish> class while generating a COM interface from a client type library (with a .tlb extension). The <xref:System.EnterpriseServices.Internal.Publish> class publishes COM interfaces in a SOAP-enabled COM+ application.       Write does not need to be called directly. Instead, call the <xref:System.EnterpriseServices.Internal.Publish.ProcessClientTlb%2A> method of the <xref:System.EnterpriseServices.Internal.Publish> class.       The `BaseUrl` and `VRoot` parameter values are concatenated (with a path separator, if needed) to form the client element&quot;s `URL` attribute value.       The `AssemblyName` parameter identifies an assembly containing CLR metadata that <xref:System.EnterpriseServices.Internal.Publish>, using the <xref:System.EnterpriseServices.Internal.GenerateMetadata> class, has already generated for the client type library."
  syntax:
    content: public static bool Write (string DestinationDirectory, string VRoot, string BaseUrl, string AssemblyName, string TypeName, string ProgId, string Mode, string Transport);
    parameters:
    - id: DestinationDirectory
      type: System.String
      description: "The folder in which to create the configuration file."
    - id: VRoot
      type: System.String
      description: "The name of the virtual root."
    - id: BaseUrl
      type: System.String
      description: "The base URL that contains the virtual root."
    - id: AssemblyName
      type: System.String
      description: "The display name of the assembly that contains common language runtime (CLR) metadata corresponding to the type library."
    - id: TypeName
      type: System.String
      description: "The fully qualified name of the assembly that contains CLR metadata corresponding to the type library."
    - id: ProgId
      type: System.String
      description: "The programmatic identifier of the class."
    - id: Mode
      type: System.String
      description: "The activation mode."
    - id: Transport
      type: System.String
      description: "Not used. Specify <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> for this parameter."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the client remoting configuration file was successfully created; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.EnterpriseServices.Internal.ClientRemotingConfig.Write*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.EnterpriseServices.Internal.ClientRemotingConfig.#ctor
  parent: System.EnterpriseServices.Internal.ClientRemotingConfig
  isExternal: false
  name: ClientRemotingConfig()
  nameWithType: ClientRemotingConfig.ClientRemotingConfig()
  fullName: System.EnterpriseServices.Internal.ClientRemotingConfig.ClientRemotingConfig()
- uid: System.EnterpriseServices.Internal.ClientRemotingConfig.Write(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)
  parent: System.EnterpriseServices.Internal.ClientRemotingConfig
  isExternal: false
  name: Write(String,String,String,String,String,String,String,String)
  nameWithType: ClientRemotingConfig.Write(String,String,String,String,String,String,String,String)
  fullName: System.EnterpriseServices.Internal.ClientRemotingConfig.Write(String,String,String,String,String,String,String,String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.EnterpriseServices.Internal.ClientRemotingConfig.#ctor*
  parent: System.EnterpriseServices.Internal.ClientRemotingConfig
  isExternal: false
  name: ClientRemotingConfig
  nameWithType: ClientRemotingConfig.ClientRemotingConfig
- uid: System.EnterpriseServices.Internal.ClientRemotingConfig.Write*
  parent: System.EnterpriseServices.Internal.ClientRemotingConfig
  isExternal: false
  name: Write
  nameWithType: ClientRemotingConfig.Write
