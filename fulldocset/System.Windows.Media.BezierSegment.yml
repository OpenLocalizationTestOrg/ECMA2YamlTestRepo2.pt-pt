### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.BezierSegment
  id: BezierSegment
  children:
  - System.Windows.Media.BezierSegment.#ctor
  - System.Windows.Media.BezierSegment.#ctor(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean)
  - System.Windows.Media.BezierSegment.Clone
  - System.Windows.Media.BezierSegment.CloneCurrentValue
  - System.Windows.Media.BezierSegment.CreateInstanceCore
  - System.Windows.Media.BezierSegment.Point1
  - System.Windows.Media.BezierSegment.Point1Property
  - System.Windows.Media.BezierSegment.Point2
  - System.Windows.Media.BezierSegment.Point2Property
  - System.Windows.Media.BezierSegment.Point3
  - System.Windows.Media.BezierSegment.Point3Property
  langs:
  - csharp
  name: BezierSegment
  nameWithType: BezierSegment
  fullName: System.Windows.Media.BezierSegment
  type: Class
  summary: "Represents a cubic Bezier curve drawn between two points."
  remarks: "Use a <xref:System.Windows.Media.PathFigure> object to store BezierSegment objects and other segments.       A cubic Bezier curve is defined by four points: a start point, an end point (<xref:System.Windows.Media.BezierSegment.Point3%2A>), and two control points (<xref:System.Windows.Media.BezierSegment.Point1%2A> and <xref:System.Windows.Media.BezierSegment.Point2%2A>).The BezierSegment class does not contain a property for the starting point of the curve; it only defines the end point. The beginning point of the curve is the current point of the <xref:System.Windows.Media.PathFigure> to which the BezierSegment is added.       The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve. The first control point, <xref:System.Windows.Media.BezierSegment.Point1%2A>, affects the beginning portion of the curve; the second control point, <xref:System.Windows.Media.BezierSegment.Point2%2A>, affects the ending portion of the curve. Note that the curve doesn&quot;t necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.      ## Freezable Features    A BezierSegment is a type of <xref:System.Windows.Freezable> object. For information about <xref:System.Windows.Freezable> features, such as freezing and cloning, see the [Freezable Objects Overview](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: 'public sealed class BezierSegment : System.Windows.Media.PathSegment'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  - System.Windows.Media.PathSegment
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Media.PathSegment.IsSmoothJoin
  - System.Windows.Media.PathSegment.IsSmoothJoinProperty
  - System.Windows.Media.PathSegment.IsStroked
  - System.Windows.Media.PathSegment.IsStrokedProperty
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.BezierSegment.#ctor
  id: '#ctor'
  parent: System.Windows.Media.BezierSegment
  langs:
  - csharp
  name: BezierSegment()
  nameWithType: BezierSegment.BezierSegment()
  fullName: System.Windows.Media.BezierSegment.BezierSegment()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Media.BezierSegment&quot;></xref> class."
  remarks: "A cubic Bezier curve is defined by four points: a start point, an end point (`point3`), and two control points (`point1` and `point2`). This method does not enable you to specify the beginning point of the curve; the curve begins at the current point of the <xref:System.Windows.Media.PathFigure> object to which the <xref:System.Windows.Media.BezierSegment> is added.       The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve. The first control point, `point1`, affects the beginning portion of the curve; the second control point, `point2`, affects the ending portion of the curve. Note that the curve doesn&quot;t necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself."
  syntax:
    content: public BezierSegment ();
    parameters: []
  overload: System.Windows.Media.BezierSegment.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.BezierSegment.#ctor(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean)
  id: '#ctor(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean)'
  parent: System.Windows.Media.BezierSegment
  langs:
  - csharp
  name: BezierSegment(Point,Point,Point,Boolean)
  nameWithType: BezierSegment.BezierSegment(Point,Point,Point,Boolean)
  fullName: System.Windows.Media.BezierSegment.BezierSegment(Point,Point,Point,Boolean)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Media.BezierSegment&quot;></xref> class with the specified control points, end point, and stroke option."
  remarks: "A cubic Bezier curve is defined by four points: a start point, an end point (`point3`), and two control points (`point1` and `point2`). This method does not enable you to specify the beginning point of the curve; the curve begins at the current point of the <xref:System.Windows.Media.PathFigure> object to which the <xref:System.Windows.Media.BezierSegment> is added.       The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve. The first control point, `point1`, affects the beginning portion of the curve; the second control point, `point2`, affects the ending portion of the curve. Note that the curve doesn&quot;t necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself."
  syntax:
    content: public BezierSegment (System.Windows.Point point1, System.Windows.Point point2, System.Windows.Point point3, bool isStroked);
    parameters:
    - id: point1
      type: System.Windows.Point
      description: "The first control point, which determines the beginning portion of the curve."
    - id: point2
      type: System.Windows.Point
      description: "The second control point, which determines the ending portion of the curve."
    - id: point3
      type: System.Windows.Point
      description: "The point to which the curve is drawn."
    - id: isStroked
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to stroke the curve when a <xref href=&quot;System.Windows.Media.Pen&quot;></xref> is used to render the segment; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Media.BezierSegment.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.BezierSegment.Clone
  id: Clone
  parent: System.Windows.Media.BezierSegment
  langs:
  - csharp
  name: Clone()
  nameWithType: BezierSegment.Clone()
  fullName: System.Windows.Media.BezierSegment.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Creates a modifiable clone of this <xref href=&quot;System.Windows.Media.BezierSegment&quot;></xref>, making deep copies of this object&quot;s values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values."
  remarks: "This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.       For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>."
  syntax:
    content: public System.Windows.Media.BezierSegment Clone ();
    parameters: []
    return:
      type: System.Windows.Media.BezierSegment
      description: "A modifiable clone of the current object. The cloned object&quot;s <xref:System.Windows.Freezable.IsFrozen*> property will be <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> even if the source&quot;s <xref:System.Windows.Freezable.IsFrozen*> property was <xref uid=&quot;langword_csharp_true.&quot; name=&quot;true.&quot; href=&quot;&quot;></xref>"
  overload: System.Windows.Media.BezierSegment.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.BezierSegment.CloneCurrentValue
  id: CloneCurrentValue
  parent: System.Windows.Media.BezierSegment
  langs:
  - csharp
  name: CloneCurrentValue()
  nameWithType: BezierSegment.CloneCurrentValue()
  fullName: System.Windows.Media.BezierSegment.CloneCurrentValue()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Creates a modifiable clone of this <xref href=&quot;System.Windows.Media.BezierSegment&quot;></xref> object, making deep copies of this object&quot;s current values. Resource references, data bindings, and animations are not copied, but their current values are."
  remarks: "This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.       For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>."
  syntax:
    content: public System.Windows.Media.BezierSegment CloneCurrentValue ();
    parameters: []
    return:
      type: System.Windows.Media.BezierSegment
      description: "A modifiable clone of the current object. The cloned object&quot;s <xref:System.Windows.Freezable.IsFrozen*> property will be <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> even if the source&quot;s <xref:System.Windows.Freezable.IsFrozen*> property was <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Media.BezierSegment.CloneCurrentValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.BezierSegment.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Media.BezierSegment
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: BezierSegment.CreateInstanceCore()
  fullName: System.Windows.Media.BezierSegment.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "To be added."
  overload: System.Windows.Media.BezierSegment.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.BezierSegment.Point1
  id: Point1
  parent: System.Windows.Media.BezierSegment
  langs:
  - csharp
  name: Point1
  nameWithType: BezierSegment.Point1
  fullName: System.Windows.Media.BezierSegment.Point1
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Gets or sets the first control point of the curve."
  remarks: "The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve. The first control point, Point1, affects the beginning portion of the curve; the second control point, <xref:System.Windows.Media.BezierSegment.Point2%2A>, affects the ending portion of the curve. Note that the curve doesn&quot;t necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.      <a name=&quot;dependencyPropertyInfo_Point1&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Media.BezierSegment.Point1Property>|   |Metadata properties set to `true`|None|"
  syntax:
    content: public System.Windows.Point Point1 { get; set; }
    return:
      type: System.Windows.Point
      description: "The first control point of the curve."
  overload: System.Windows.Media.BezierSegment.Point1*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.BezierSegment.Point1Property
  id: Point1Property
  parent: System.Windows.Media.BezierSegment
  langs:
  - csharp
  name: Point1Property
  nameWithType: BezierSegment.Point1Property
  fullName: System.Windows.Media.BezierSegment.Point1Property
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Identifies the <xref:System.Windows.Media.BezierSegment.Point1*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty Point1Property;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.BezierSegment.Point2
  id: Point2
  parent: System.Windows.Media.BezierSegment
  langs:
  - csharp
  name: Point2
  nameWithType: BezierSegment.Point2
  fullName: System.Windows.Media.BezierSegment.Point2
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Gets or sets the second control point of the curve."
  remarks: "The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve. The first control point, <xref:System.Windows.Media.BezierSegment.Point1%2A>, affects the beginning portion of the curve; the second control point, Point2, affects the ending portion of the curve. Note that the curve doesn&quot;t necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.      <a name=&quot;dependencyPropertyInfo_Point2&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Media.BezierSegment.Point2Property>|   |Metadata properties set to `true`|None|"
  syntax:
    content: public System.Windows.Point Point2 { get; set; }
    return:
      type: System.Windows.Point
      description: "The second control point of the curve."
  overload: System.Windows.Media.BezierSegment.Point2*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.BezierSegment.Point2Property
  id: Point2Property
  parent: System.Windows.Media.BezierSegment
  langs:
  - csharp
  name: Point2Property
  nameWithType: BezierSegment.Point2Property
  fullName: System.Windows.Media.BezierSegment.Point2Property
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Identifies the <xref:System.Windows.Media.BezierSegment.Point2*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty Point2Property;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.BezierSegment.Point3
  id: Point3
  parent: System.Windows.Media.BezierSegment
  langs:
  - csharp
  name: Point3
  nameWithType: BezierSegment.Point3
  fullName: System.Windows.Media.BezierSegment.Point3
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Gets or sets the end point of the curve."
  remarks: "The <xref:System.Windows.Media.BezierSegment> class does not contain a property for the starting point of the curve; it only defines the end point. The beginning point of the curve is the current point of the <xref:System.Windows.Media.PathFigure> to which the <xref:System.Windows.Media.BezierSegment> is added.      <a name=&quot;dependencyPropertyInfo_Point3&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Media.BezierSegment.Point3Property>|   |Metadata properties set to `true`|None|"
  syntax:
    content: public System.Windows.Point Point3 { get; set; }
    return:
      type: System.Windows.Point
      description: "The end point of the curve."
  overload: System.Windows.Media.BezierSegment.Point3*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.BezierSegment.Point3Property
  id: Point3Property
  parent: System.Windows.Media.BezierSegment
  langs:
  - csharp
  name: Point3Property
  nameWithType: BezierSegment.Point3Property
  fullName: System.Windows.Media.BezierSegment.Point3Property
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Identifies the <xref:System.Windows.Media.BezierSegment.Point3*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty Point3Property;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.PathSegment
  isExternal: false
  name: System.Windows.Media.PathSegment
- uid: System.Windows.Media.BezierSegment.#ctor
  parent: System.Windows.Media.BezierSegment
  isExternal: false
  name: BezierSegment()
  nameWithType: BezierSegment.BezierSegment()
  fullName: System.Windows.Media.BezierSegment.BezierSegment()
- uid: System.Windows.Media.BezierSegment.#ctor(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean)
  parent: System.Windows.Media.BezierSegment
  isExternal: false
  name: BezierSegment(Point,Point,Point,Boolean)
  nameWithType: BezierSegment.BezierSegment(Point,Point,Point,Boolean)
  fullName: System.Windows.Media.BezierSegment.BezierSegment(Point,Point,Point,Boolean)
- uid: System.Windows.Point
  parent: System.Windows
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.BezierSegment.Clone
  parent: System.Windows.Media.BezierSegment
  isExternal: false
  name: Clone()
  nameWithType: BezierSegment.Clone()
  fullName: System.Windows.Media.BezierSegment.Clone()
- uid: System.Windows.Media.BezierSegment
  parent: System.Windows.Media
  isExternal: false
  name: BezierSegment
  nameWithType: BezierSegment
  fullName: System.Windows.Media.BezierSegment
- uid: System.Windows.Media.BezierSegment.CloneCurrentValue
  parent: System.Windows.Media.BezierSegment
  isExternal: false
  name: CloneCurrentValue()
  nameWithType: BezierSegment.CloneCurrentValue()
  fullName: System.Windows.Media.BezierSegment.CloneCurrentValue()
- uid: System.Windows.Media.BezierSegment.CreateInstanceCore
  parent: System.Windows.Media.BezierSegment
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: BezierSegment.CreateInstanceCore()
  fullName: System.Windows.Media.BezierSegment.CreateInstanceCore()
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.BezierSegment.Point1
  parent: System.Windows.Media.BezierSegment
  isExternal: false
  name: Point1
  nameWithType: BezierSegment.Point1
  fullName: System.Windows.Media.BezierSegment.Point1
- uid: System.Windows.Media.BezierSegment.Point1Property
  parent: System.Windows.Media.BezierSegment
  isExternal: false
  name: Point1Property
  nameWithType: BezierSegment.Point1Property
  fullName: System.Windows.Media.BezierSegment.Point1Property
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Media.BezierSegment.Point2
  parent: System.Windows.Media.BezierSegment
  isExternal: false
  name: Point2
  nameWithType: BezierSegment.Point2
  fullName: System.Windows.Media.BezierSegment.Point2
- uid: System.Windows.Media.BezierSegment.Point2Property
  parent: System.Windows.Media.BezierSegment
  isExternal: false
  name: Point2Property
  nameWithType: BezierSegment.Point2Property
  fullName: System.Windows.Media.BezierSegment.Point2Property
- uid: System.Windows.Media.BezierSegment.Point3
  parent: System.Windows.Media.BezierSegment
  isExternal: false
  name: Point3
  nameWithType: BezierSegment.Point3
  fullName: System.Windows.Media.BezierSegment.Point3
- uid: System.Windows.Media.BezierSegment.Point3Property
  parent: System.Windows.Media.BezierSegment
  isExternal: false
  name: Point3Property
  nameWithType: BezierSegment.Point3Property
  fullName: System.Windows.Media.BezierSegment.Point3Property
- uid: System.Windows.Media.BezierSegment.#ctor*
  parent: System.Windows.Media.BezierSegment
  isExternal: false
  name: BezierSegment
  nameWithType: BezierSegment.BezierSegment
- uid: System.Windows.Media.BezierSegment.Clone*
  parent: System.Windows.Media.BezierSegment
  isExternal: false
  name: Clone
  nameWithType: BezierSegment.Clone
- uid: System.Windows.Media.BezierSegment.CloneCurrentValue*
  parent: System.Windows.Media.BezierSegment
  isExternal: false
  name: CloneCurrentValue
  nameWithType: BezierSegment.CloneCurrentValue
- uid: System.Windows.Media.BezierSegment.CreateInstanceCore*
  parent: System.Windows.Media.BezierSegment
  isExternal: false
  name: CreateInstanceCore
  nameWithType: BezierSegment.CreateInstanceCore
- uid: System.Windows.Media.BezierSegment.Point1*
  parent: System.Windows.Media.BezierSegment
  isExternal: false
  name: Point1
  nameWithType: BezierSegment.Point1
- uid: System.Windows.Media.BezierSegment.Point2*
  parent: System.Windows.Media.BezierSegment
  isExternal: false
  name: Point2
  nameWithType: BezierSegment.Point2
- uid: System.Windows.Media.BezierSegment.Point3*
  parent: System.Windows.Media.BezierSegment
  isExternal: false
  name: Point3
  nameWithType: BezierSegment.Point3
