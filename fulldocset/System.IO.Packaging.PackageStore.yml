### YamlMime:ManagedReference
items:
- uid: System.IO.Packaging.PackageStore
  id: PackageStore
  children:
  - System.IO.Packaging.PackageStore.AddPackage(System.Uri,System.IO.Packaging.Package)
  - System.IO.Packaging.PackageStore.GetPackage(System.Uri)
  - System.IO.Packaging.PackageStore.RemovePackage(System.Uri)
  langs:
  - csharp
  name: PackageStore
  nameWithType: PackageStore
  fullName: System.IO.Packaging.PackageStore
  type: Class
  summary: "Representa uma coleção de aplicações específicas <xref href=&quot;System.IO.Packaging.Package&quot;> </xref> instâncias utilizadas em combinação com <xref href=&quot;System.IO.Packaging.PackWebRequest&quot;> </xref>."
  remarks: "O PackageStore define um coleções de referência do pacote que estejam abertos e Active Directory na aplicação.  Pacotes adicionadas para o PackageStore são acedidos é ao respetivo valor de chave de URI.  O PackageStore suporta três utilizações comuns: 1.  Aceder aos <xref:System.IO.Packaging.PackagePart>dados através de <xref:System.IO.Packaging.PackWebRequest>.</xref:System.IO.Packaging.PackWebRequest> </xref:System.IO.Packaging.PackagePart>      2.  A aplicação de obtenção de uma instância de um <xref:System.IO.Packaging.Package>dado o URI do pacote.</xref:System.IO.Packaging.Package>      3.  Ao aceder aos pacotes que são criadas e armazenadas na <xref:System.IO.MemoryStream>.</xref:System.IO.MemoryStream>       Para melhorar o desempenho e minimizar os custos gerais repetido abertura/fecho de operações de ficheiros, o PackageStore é utilizado para gerir instâncias de pacotes acedidos por <xref:System.IO.Packaging.PackWebRequest>e diretamente pela aplicação.</xref:System.IO.Packaging.PackWebRequest>  Ao aceder a dados de um pacote, o <xref:System.IO.Packaging.Package>endereço de um pedido <xref:System.IO.Packaging.PackagePart> <xref:System.IO.Packaging.PackagePart.Uri%2A>pela primeira vez é verificado para ver se o pacote já está definido e abrir no PackageStore.</xref:System.IO.Packaging.PackagePart.Uri%2A> </xref:System.IO.Packaging.PackagePart> </xref:System.IO.Packaging.Package>  Se o pacote está definido como abrir no PackageStore, partes solicitadas podem ser acedidas diretamente sem repetidamente abrir e fechar o pacote para cada pedido.       Se a aplicação abre um pacote com <xref:System.IO.Packaging.Package.Open%2A?displayProperty=fullName>, <xref:System.IO.Packaging.PackageStore.AddPackage%2A>pode ser chamado para adicionar o pacote para o PackageStore.</xref:System.IO.Packaging.PackageStore.AddPackage%2A> </xref:System.IO.Packaging.Package.Open%2A?displayProperty=fullName>  <xref:System.IO.Packaging.PackageStore.RemovePackage%2A>mais tarde deve ser chamado para remover o pacote do PackageStore antes de chamar <xref:System.IO.Packaging.Package.Close%2A?displayProperty=fullName>.</xref:System.IO.Packaging.Package.Close%2A?displayProperty=fullName></xref:System.IO.Packaging.PackageStore.RemovePackage%2A>       Pacotes XPS aberta com um <xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A>construtor são automaticamente adicionados e removidos a PackageStore quando o documento é criado e será eliminado.</xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A>  (Não é necessário chamar <xref:System.IO.Packaging.PackageStore.AddPackage%2A>ou <xref:System.IO.Packaging.PackageStore.RemovePackage%2A>separadamente para os pacotes XPS aberta com <xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A>construtores.)</xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A> </xref:System.IO.Packaging.PackageStore.RemovePackage%2A> </xref:System.IO.Packaging.PackageStore.AddPackage%2A>       As permissões de e/s de ficheiros de um pacote acedidos através de PackageStore permanece o mesmo que as permissões de e/s definido no pacote quando for aberta.  O PackageStore apenas fornece referências aos pacotes que foram adicionados a loja.  Trata-se até a aplicação para abrir corretamente, atualizar e feche cada pacote.       Pacotes adicionadas para o PackageStore podem ser acedidos em ambientes multithread quando são utilizadas em combinação com um [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] parser como <xref:System.Windows.Markup.XamlReader.Load%2A?displayProperty=fullName>.</xref:System.Windows.Markup.XamlReader.Load%2A?displayProperty=fullName>  Durante o funcionamento num ambiente multithreaded, a aplicação tem de bloquear o pacote antes de acesso."
  syntax:
    content: >-
      [System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]

      public static class PackageStore
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Packaging.PackageStore.AddPackage(System.Uri,System.IO.Packaging.Package)
  id: AddPackage(System.Uri,System.IO.Packaging.Package)
  parent: System.IO.Packaging.PackageStore
  langs:
  - csharp
  name: AddPackage(Uri,Package)
  nameWithType: PackageStore.AddPackage(Uri,Package)
  fullName: System.IO.Packaging.PackageStore.AddPackage(Uri,Package)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.IO.Packaging
  summary: "Adiciona um <xref href=&quot;System.IO.Packaging.Package&quot;> </xref> para o arquivo."
  remarks: "`packageUri`Define a chave do pacote URI é comparado ao chamar <xref:System.IO.Packaging.PackWebRequest>.</xref:System.IO.Packaging.PackWebRequest>       Se o `packageUri` corresponde <xref:System.IO.Packaging.PackagePart.Uri%2A>para um <xref:System.IO.Packaging.PackagePart>numa <xref:System.IO.Packaging.PackWebRequest>chamada, o pacote definido no <xref:System.IO.Packaging.PackageStore>é utilizada para aceder a parte de pedido.</xref:System.IO.Packaging.PackageStore> </xref:System.IO.Packaging.PackWebRequest> </xref:System.IO.Packaging.PackagePart> </xref:System.IO.Packaging.PackagePart.Uri%2A>       Se o `packageUri` não corresponde a <xref:System.IO.Packaging.PackagePart.Uri%2A>para um <xref:System.IO.Packaging.PackagePart>numa <xref:System.IO.Packaging.PackWebRequest>chamada, o pacote com o URI especificado é aberta para aceder a parte de pedido.</xref:System.IO.Packaging.PackWebRequest> </xref:System.IO.Packaging.PackagePart> </xref:System.IO.Packaging.PackagePart.Uri%2A>       **Nota de segurança** este método exige <xref:System.Security.Permissions.EnvironmentPermission>para todos os personalizada <xref:System.IO.Packaging.Package>(não -<xref:System.IO.Packaging.ZipPackage>) tipos.</xref:System.IO.Packaging.ZipPackage> </xref:System.IO.Packaging.Package> </xref:System.Security.Permissions.EnvironmentPermission>"
  example:
  - "The following example shows how to use the AddPackage method.  \n  \n [!code-vb[RightsManagedPackageViewer#RmPkgViewDecrypt](~/add/codesnippet/visualbasic/rmpackageviewer/window1.xaml.vb#rmpkgviewdecrypt)]\n [!code-cs[RightsManagedPackageViewer#RmPkgViewDecrypt](~/add/codesnippet/csharp/RmPackageViewer/Window1.xaml.cs#rmpkgviewdecrypt)]"
  syntax:
    content: public static void AddPackage (Uri uri, System.IO.Packaging.Package package);
    parameters:
    - id: uri
      type: System.Uri
      description: "A chave [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] do `package` para comparar num <xref href=&quot;System.IO.Packaging.PackWebRequest&quot;> </xref>."
    - id: package
      type: System.IO.Packaging.Package
      description: "O pacote a adicionar ao arquivo."
  overload: System.IO.Packaging.PackageStore.AddPackage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>package</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>packageUri</code>é um pacote inválido [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Um pacote com especificado <code> packageUri </code> já se encontra no arquivo."
  platform:
  - net462
- uid: System.IO.Packaging.PackageStore.GetPackage(System.Uri)
  id: GetPackage(System.Uri)
  parent: System.IO.Packaging.PackageStore
  langs:
  - csharp
  name: GetPackage(Uri)
  nameWithType: PackageStore.GetPackage(Uri)
  fullName: System.IO.Packaging.PackageStore.GetPackage(Uri)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.IO.Packaging
  summary: "Devolve o <xref href=&quot;System.IO.Packaging.Package&quot;> </xref> com uma determinada [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] da loja."
  remarks: "`packageUri`é correspondido ao URI especificado no <xref:System.IO.Packaging.PackageStore.AddPackage%2A>chamada de método.</xref:System.IO.Packaging.PackageStore.AddPackage%2A>       **Nota de segurança** este método exige <xref:System.Security.Permissions.EnvironmentPermission>para todos os personalizada <xref:System.IO.Packaging.Package>(não -<xref:System.IO.Packaging.ZipPackage>) tipos.</xref:System.IO.Packaging.ZipPackage> </xref:System.IO.Packaging.Package> </xref:System.Security.Permissions.EnvironmentPermission>"
  example:
  - "The following example shows how to use the GetPackage method.  \n  \n [!code-vb[RightsManagedPackageViewer#RmPkgViewOpenDoc](~/add/codesnippet/visualbasic/rmpackageviewer/window1.xaml.vb#rmpkgviewopendoc)]\n [!code-cs[RightsManagedPackageViewer#RmPkgViewOpenDoc](~/add/codesnippet/csharp/RmPackageViewer/Window1.xaml.cs#rmpkgviewopendoc)]"
  syntax:
    content: public static System.IO.Packaging.Package GetPackage (Uri uri);
    parameters:
    - id: uri
      type: System.Uri
      description: "O [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] do pacote para devolver."
    return:
      type: System.IO.Packaging.Package
      description: "O pacote com uma determinada <code> packageUri </code>; ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, se um pacote com especificado <code> packageUri </code> não está no arquivo."
  overload: System.IO.Packaging.PackageStore.GetPackage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>packageUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>packageUri</code>é um pacote inválido [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]."
  platform:
  - net462
- uid: System.IO.Packaging.PackageStore.RemovePackage(System.Uri)
  id: RemovePackage(System.Uri)
  parent: System.IO.Packaging.PackageStore
  langs:
  - csharp
  name: RemovePackage(Uri)
  nameWithType: PackageStore.RemovePackage(Uri)
  fullName: System.IO.Packaging.PackageStore.RemovePackage(Uri)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.IO.Packaging
  summary: "Remove o <xref href=&quot;System.IO.Packaging.Package&quot;> </xref> com uma determinada [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] da loja."
  remarks: "`packageUri`é correspondido ao URI especificado no <xref:System.IO.Packaging.PackageStore.AddPackage%2A>chamada de método.</xref:System.IO.Packaging.PackageStore.AddPackage%2A>       **Nota de segurança** este método exige <xref:System.Security.Permissions.EnvironmentPermission>para todos os personalizada <xref:System.IO.Packaging.Package>(não -<xref:System.IO.Packaging.ZipPackage>) tipos.</xref:System.IO.Packaging.ZipPackage> </xref:System.IO.Packaging.Package> </xref:System.Security.Permissions.EnvironmentPermission>"
  example:
  - "The following example shows how to use the RemovePackage method.  \n  \n [!code-vb[RightsManagedPackageViewer#RmPkgViewCloseDoc](~/add/codesnippet/visualbasic/rmpackageviewer/window1.xaml.vb#rmpkgviewclosedoc)]\n [!code-cs[RightsManagedPackageViewer#RmPkgViewCloseDoc](~/add/codesnippet/csharp/RmPackageViewer/Window1.xaml.cs#rmpkgviewclosedoc)]"
  syntax:
    content: public static void RemovePackage (Uri uri);
    parameters:
    - id: uri
      type: System.Uri
      description: "O [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] do pacote para remover."
  overload: System.IO.Packaging.PackageStore.RemovePackage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>packageUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>packageUri</code>é um pacote inválido [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IO.Packaging.PackageStore.AddPackage(System.Uri,System.IO.Packaging.Package)
  parent: System.IO.Packaging.PackageStore
  isExternal: false
  name: AddPackage(Uri,Package)
  nameWithType: PackageStore.AddPackage(Uri,Package)
  fullName: System.IO.Packaging.PackageStore.AddPackage(Uri,Package)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.IO.Packaging.Package
  parent: System.IO.Packaging
  isExternal: false
  name: Package
  nameWithType: Package
  fullName: System.IO.Packaging.Package
- uid: System.IO.Packaging.PackageStore.GetPackage(System.Uri)
  parent: System.IO.Packaging.PackageStore
  isExternal: false
  name: GetPackage(Uri)
  nameWithType: PackageStore.GetPackage(Uri)
  fullName: System.IO.Packaging.PackageStore.GetPackage(Uri)
- uid: System.IO.Packaging.PackageStore.RemovePackage(System.Uri)
  parent: System.IO.Packaging.PackageStore
  isExternal: false
  name: RemovePackage(Uri)
  nameWithType: PackageStore.RemovePackage(Uri)
  fullName: System.IO.Packaging.PackageStore.RemovePackage(Uri)
- uid: System.IO.Packaging.PackageStore.AddPackage*
  parent: System.IO.Packaging.PackageStore
  isExternal: false
  name: AddPackage
  nameWithType: PackageStore.AddPackage
- uid: System.IO.Packaging.PackageStore.GetPackage*
  parent: System.IO.Packaging.PackageStore
  isExternal: false
  name: GetPackage
  nameWithType: PackageStore.GetPackage
- uid: System.IO.Packaging.PackageStore.RemovePackage*
  parent: System.IO.Packaging.PackageStore
  isExternal: false
  name: RemovePackage
  nameWithType: PackageStore.RemovePackage
