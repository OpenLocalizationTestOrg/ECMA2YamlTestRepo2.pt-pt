### YamlMime:ManagedReference
items:
- uid: System.Net.Configuration.BypassElement
  id: BypassElement
  children:
  - System.Net.Configuration.BypassElement.#ctor
  - System.Net.Configuration.BypassElement.#ctor(System.String)
  - System.Net.Configuration.BypassElement.Address
  - System.Net.Configuration.BypassElement.Properties
  langs:
  - csharp
  name: BypassElement
  nameWithType: BypassElement
  fullName: System.Net.Configuration.BypassElement
  type: Class
  summary: "Representa as informações de endereço de recursos que não são obtidos através de um servidor proxy. Esta classe não pode ser herdada."
  remarks: "This class corresponds to the `address` attribute of the [\\&lt;add\\&gt; Element for bypasslist (Network Settings)](../Topic/%3Cadd%3E%20Element%20for%20bypasslist%20\\(Network%20Settings\\).md) configuration element.  \n  \n This class is used to specify when a proxy server should not be used to handle requests made with the <xref:System.Net.WebRequest> and <xref:System.Net.WebClient> classes. A resource in the bypass list is retrieved directly from the server where it resides.  \n  \n This class provides programmatic access to information that can be stored in configuration files."
  syntax:
    content: 'public sealed class BypassElement : System.Configuration.ConfigurationElement'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsModified
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElement.ResetModified
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  platform:
  - net462
- uid: System.Net.Configuration.BypassElement.#ctor
  id: '#ctor'
  parent: System.Net.Configuration.BypassElement
  langs:
  - csharp
  name: BypassElement()
  nameWithType: BypassElement.BypassElement()
  fullName: System.Net.Configuration.BypassElement.BypassElement()
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Configuration
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Net.Configuration.BypassElement&quot;> </xref> classe."
  syntax:
    content: public BypassElement ();
    parameters: []
  overload: System.Net.Configuration.BypassElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Configuration.BypassElement.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Net.Configuration.BypassElement
  langs:
  - csharp
  name: BypassElement(String)
  nameWithType: BypassElement.BypassElement(String)
  fullName: System.Net.Configuration.BypassElement.BypassElement(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Configuration
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Net.Configuration.BypassElement&quot;> </xref> classe com as informações de tipo especificado."
  remarks: "O <xref:System.Net.Configuration.BypassElement.Address%2A>propriedade está definida como `address`.</xref:System.Net.Configuration.BypassElement.Address%2A>"
  syntax:
    content: public BypassElement (string address);
    parameters:
    - id: address
      type: System.String
      description: "Uma cadeia que identifica o endereço de um recurso."
  overload: System.Net.Configuration.BypassElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Configuration.BypassElement.Address
  id: Address
  parent: System.Net.Configuration.BypassElement
  langs:
  - csharp
  name: Address
  nameWithType: BypassElement.Address
  fullName: System.Net.Configuration.BypassElement.Address
  type: Property
  assemblies:
  - System
  namespace: System.Net.Configuration
  summary: "Obtém ou define os endereços de recursos que ignorar o servidor proxy."
  remarks: "Esta propriedade contém o endereço de um recurso que é obtido sem utilizar um servidor proxy. Pedidos para o recurso são enviados diretamente para o servidor onde reside o recurso."
  syntax:
    content: public string Address { get; set; }
    return:
      type: System.String
      description: "Uma cadeia que identifica um recurso."
  overload: System.Net.Configuration.BypassElement.Address*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Configuration.BypassElement.Properties
  id: Properties
  parent: System.Net.Configuration.BypassElement
  langs:
  - csharp
  name: Properties
  nameWithType: BypassElement.Properties
  fullName: System.Net.Configuration.BypassElement.Properties
  type: Property
  assemblies:
  - System
  namespace: System.Net.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "A adicionar."
  overload: System.Net.Configuration.BypassElement.Properties*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationElement
  isExternal: false
  name: System.Configuration.ConfigurationElement
- uid: System.Net.Configuration.BypassElement.#ctor
  parent: System.Net.Configuration.BypassElement
  isExternal: false
  name: BypassElement()
  nameWithType: BypassElement.BypassElement()
  fullName: System.Net.Configuration.BypassElement.BypassElement()
- uid: System.Net.Configuration.BypassElement.#ctor(System.String)
  parent: System.Net.Configuration.BypassElement
  isExternal: false
  name: BypassElement(String)
  nameWithType: BypassElement.BypassElement(String)
  fullName: System.Net.Configuration.BypassElement.BypassElement(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Configuration.BypassElement.Address
  parent: System.Net.Configuration.BypassElement
  isExternal: false
  name: Address
  nameWithType: BypassElement.Address
  fullName: System.Net.Configuration.BypassElement.Address
- uid: System.Net.Configuration.BypassElement.Properties
  parent: System.Net.Configuration.BypassElement
  isExternal: false
  name: Properties
  nameWithType: BypassElement.Properties
  fullName: System.Net.Configuration.BypassElement.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.Net.Configuration.BypassElement.#ctor*
  parent: System.Net.Configuration.BypassElement
  isExternal: false
  name: BypassElement
  nameWithType: BypassElement.BypassElement
- uid: System.Net.Configuration.BypassElement.Address*
  parent: System.Net.Configuration.BypassElement
  isExternal: false
  name: Address
  nameWithType: BypassElement.Address
- uid: System.Net.Configuration.BypassElement.Properties*
  parent: System.Net.Configuration.BypassElement
  isExternal: false
  name: Properties
  nameWithType: BypassElement.Properties
