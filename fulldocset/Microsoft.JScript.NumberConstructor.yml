### YamlMime:ManagedReference
items:
- uid: Microsoft.JScript.NumberConstructor
  id: NumberConstructor
  children:
  - Microsoft.JScript.NumberConstructor.CreateInstance(System.Object[])
  - Microsoft.JScript.NumberConstructor.Invoke(System.Object)
  - Microsoft.JScript.NumberConstructor.MAX_VALUE
  - Microsoft.JScript.NumberConstructor.MIN_VALUE
  - Microsoft.JScript.NumberConstructor.NaN
  - Microsoft.JScript.NumberConstructor.NEGATIVE_INFINITY
  - Microsoft.JScript.NumberConstructor.POSITIVE_INFINITY
  langs:
  - csharp
  name: NumberConstructor
  nameWithType: NumberConstructor
  fullName: Microsoft.JScript.NumberConstructor
  type: Class
  summary: "Represents a prototype-based object that is defined by a constructor function. This class belongs to the built-in object model category."
  syntax:
    content: 'public class NumberConstructor : Microsoft.JScript.ScriptFunction'
  inheritance:
  - System.Object
  - Microsoft.JScript.ScriptObject
  - Microsoft.JScript.JSObject
  - Microsoft.JScript.ScriptFunction
  implements: []
  inheritedMembers:
  - Microsoft.JScript.JSObject.AddField(System.String)
  - Microsoft.JScript.JSObject.field_table
  - Microsoft.JScript.JSObject.GetMember(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.JSObject.GetMembers(System.Reflection.BindingFlags)
  - Microsoft.JScript.JSObject.SetMemberValue2(System.String,System.Object)
  - Microsoft.JScript.JSObject.System#Collections#IEnumerable#GetEnumerator
  - Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#AddMethod(System.String,System.Delegate)
  - Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#AddProperty(System.String)
  - Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#RemoveMember(System.Reflection.MemberInfo)
  - Microsoft.JScript.ScriptFunction.GetPrototypeForConstructedObject
  - Microsoft.JScript.ScriptFunction.ilength
  - Microsoft.JScript.ScriptFunction.Invoke(System.Object,System.Object[])
  - Microsoft.JScript.ScriptFunction.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  - Microsoft.JScript.ScriptFunction.length
  - Microsoft.JScript.ScriptFunction.prototype
  - Microsoft.JScript.ScriptFunction.ToString
  - Microsoft.JScript.ScriptObject.engine
  - Microsoft.JScript.ScriptObject.GetField(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetFields(System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  - Microsoft.JScript.ScriptObject.GetMethods(System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetParent
  - Microsoft.JScript.ScriptObject.GetProperties(System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  - Microsoft.JScript.ScriptObject.Item(System.Double)
  - Microsoft.JScript.ScriptObject.Item(System.Int32)
  - Microsoft.JScript.ScriptObject.Item(System.Object[])
  - Microsoft.JScript.ScriptObject.Item(System.String)
  - Microsoft.JScript.ScriptObject.parent
  - Microsoft.JScript.ScriptObject.UnderlyingSystemType
  - Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo,System.Object)
  - Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object)
  - Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object,Microsoft.JScript.SimpleHashtable)
  platform:
  - net462
- uid: Microsoft.JScript.NumberConstructor.CreateInstance(System.Object[])
  id: CreateInstance(System.Object[])
  parent: Microsoft.JScript.NumberConstructor
  langs:
  - csharp
  name: CreateInstance(Object[])
  nameWithType: NumberConstructor.CreateInstance(Object[])
  fullName: Microsoft.JScript.NumberConstructor.CreateInstance(Object[])
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Creates an instance of the prototype-based object, passing in the specified arguments."
  syntax:
    content: public Microsoft.JScript.NumberObject CreateInstance (object[] args);
    parameters:
    - id: args
      type: System.Object[]
      description: "The arguments to pass to the constructor."
    return:
      type: Microsoft.JScript.NumberObject
      description: "An instance of the object."
  overload: Microsoft.JScript.NumberConstructor.CreateInstance*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.NumberConstructor.Invoke(System.Object)
  id: Invoke(System.Object)
  parent: Microsoft.JScript.NumberConstructor
  langs:
  - csharp
  name: Invoke(Object)
  nameWithType: NumberConstructor.Invoke(Object)
  fullName: Microsoft.JScript.NumberConstructor.Invoke(Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Converts the specified object to a number."
  syntax:
    content: public double Invoke (object arg);
    parameters:
    - id: arg
      type: System.Object
      description: "The object to convert."
    return:
      type: System.Double
      description: "<code>arg</code> expressed as a number, if that is possible."
  overload: Microsoft.JScript.NumberConstructor.Invoke*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.NumberConstructor.MAX_VALUE
  id: MAX_VALUE
  parent: Microsoft.JScript.NumberConstructor
  langs:
  - csharp
  name: MAX_VALUE
  nameWithType: NumberConstructor.MAX_VALUE
  fullName: Microsoft.JScript.NumberConstructor.MAX_VALUE
  type: Field
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Represents the largest possible value of a <xref:System.Double>. This field is constant."
  syntax:
    content: public const double MAX_VALUE = 1.79769313486232E+308;
    return:
      type: System.Double
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.NumberConstructor.MIN_VALUE
  id: MIN_VALUE
  parent: Microsoft.JScript.NumberConstructor
  langs:
  - csharp
  name: MIN_VALUE
  nameWithType: NumberConstructor.MIN_VALUE
  fullName: Microsoft.JScript.NumberConstructor.MIN_VALUE
  type: Field
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Represents the smallest positive <xref:System.Double> value that is greater than zero. This field is constant."
  syntax:
    content: public const double MIN_VALUE = 4.94065645841247E-324;
    return:
      type: System.Double
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.NumberConstructor.NaN
  id: NaN
  parent: Microsoft.JScript.NumberConstructor
  langs:
  - csharp
  name: NaN
  nameWithType: NumberConstructor.NaN
  fullName: Microsoft.JScript.NumberConstructor.NaN
  type: Field
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Represents a value that is not a number (NaN). This field is constant."
  syntax:
    content: public const double NaN = NaN;
    return:
      type: System.Double
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.NumberConstructor.NEGATIVE_INFINITY
  id: NEGATIVE_INFINITY
  parent: Microsoft.JScript.NumberConstructor
  langs:
  - csharp
  name: NEGATIVE_INFINITY
  nameWithType: NumberConstructor.NEGATIVE_INFINITY
  fullName: Microsoft.JScript.NumberConstructor.NEGATIVE_INFINITY
  type: Field
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Represents negative infinity. This field is constant."
  syntax:
    content: public const double NEGATIVE_INFINITY = -Infinity;
    return:
      type: System.Double
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.NumberConstructor.POSITIVE_INFINITY
  id: POSITIVE_INFINITY
  parent: Microsoft.JScript.NumberConstructor
  langs:
  - csharp
  name: POSITIVE_INFINITY
  nameWithType: NumberConstructor.POSITIVE_INFINITY
  fullName: Microsoft.JScript.NumberConstructor.POSITIVE_INFINITY
  type: Field
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "Represents positive infinity. This field is constant."
  syntax:
    content: public const double POSITIVE_INFINITY = Infinity;
    return:
      type: System.Double
      description: "To be added."
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.JScript.ScriptFunction
  isExternal: false
  name: Microsoft.JScript.ScriptFunction
- uid: Microsoft.JScript.NumberConstructor.CreateInstance(System.Object[])
  parent: Microsoft.JScript.NumberConstructor
  isExternal: false
  name: CreateInstance(Object[])
  nameWithType: NumberConstructor.CreateInstance(Object[])
  fullName: Microsoft.JScript.NumberConstructor.CreateInstance(Object[])
- uid: Microsoft.JScript.NumberObject
  parent: Microsoft.JScript
  isExternal: false
  name: NumberObject
  nameWithType: NumberObject
  fullName: Microsoft.JScript.NumberObject
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.JScript.NumberConstructor.Invoke(System.Object)
  parent: Microsoft.JScript.NumberConstructor
  isExternal: false
  name: Invoke(Object)
  nameWithType: NumberConstructor.Invoke(Object)
  fullName: Microsoft.JScript.NumberConstructor.Invoke(Object)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.JScript.NumberConstructor.MAX_VALUE
  parent: Microsoft.JScript.NumberConstructor
  isExternal: false
  name: MAX_VALUE
  nameWithType: NumberConstructor.MAX_VALUE
  fullName: Microsoft.JScript.NumberConstructor.MAX_VALUE
- uid: Microsoft.JScript.NumberConstructor.MIN_VALUE
  parent: Microsoft.JScript.NumberConstructor
  isExternal: false
  name: MIN_VALUE
  nameWithType: NumberConstructor.MIN_VALUE
  fullName: Microsoft.JScript.NumberConstructor.MIN_VALUE
- uid: Microsoft.JScript.NumberConstructor.NaN
  parent: Microsoft.JScript.NumberConstructor
  isExternal: false
  name: NaN
  nameWithType: NumberConstructor.NaN
  fullName: Microsoft.JScript.NumberConstructor.NaN
- uid: Microsoft.JScript.NumberConstructor.NEGATIVE_INFINITY
  parent: Microsoft.JScript.NumberConstructor
  isExternal: false
  name: NEGATIVE_INFINITY
  nameWithType: NumberConstructor.NEGATIVE_INFINITY
  fullName: Microsoft.JScript.NumberConstructor.NEGATIVE_INFINITY
- uid: Microsoft.JScript.NumberConstructor.POSITIVE_INFINITY
  parent: Microsoft.JScript.NumberConstructor
  isExternal: false
  name: POSITIVE_INFINITY
  nameWithType: NumberConstructor.POSITIVE_INFINITY
  fullName: Microsoft.JScript.NumberConstructor.POSITIVE_INFINITY
- uid: Microsoft.JScript.NumberConstructor.CreateInstance*
  parent: Microsoft.JScript.NumberConstructor
  isExternal: false
  name: CreateInstance
  nameWithType: NumberConstructor.CreateInstance
- uid: Microsoft.JScript.NumberConstructor.Invoke*
  parent: Microsoft.JScript.NumberConstructor
  isExternal: false
  name: Invoke
  nameWithType: NumberConstructor.Invoke
