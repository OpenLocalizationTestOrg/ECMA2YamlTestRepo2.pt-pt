### YamlMime:ManagedReference
items:
- uid: System.Configuration.SettingsProviderCollection
  id: SettingsProviderCollection
  children:
  - System.Configuration.SettingsProviderCollection.#ctor
  - System.Configuration.SettingsProviderCollection.Add(System.Configuration.Provider.ProviderBase)
  - System.Configuration.SettingsProviderCollection.Item(System.String)
  langs:
  - csharp
  name: SettingsProviderCollection
  nameWithType: SettingsProviderCollection
  fullName: System.Configuration.SettingsProviderCollection
  type: Class
  summary: "Represents a collection of application settings providers."
  remarks: "The SettingsProviderCollection class is a straightforward extension of the <xref:System.Configuration.Provider.ProviderCollection> class to provide for storage of <xref:System.Configuration.SettingsProvider> objects.       The <xref:System.Configuration.ApplicationSettingsBase> class uses this collection to manage the settings providers associated with each of its application settings properties through the <xref:System.Configuration.SettingsProviderAttribute>."
  syntax:
    content: 'public class SettingsProviderCollection : System.Configuration.Provider.ProviderCollection'
  inheritance:
  - System.Object
  - System.Configuration.Provider.ProviderCollection
  implements: []
  inheritedMembers:
  - System.Configuration.Provider.ProviderCollection.Clear
  - System.Configuration.Provider.ProviderCollection.CopyTo(System.Configuration.Provider.ProviderBase[],System.Int32)
  - System.Configuration.Provider.ProviderCollection.Count
  - System.Configuration.Provider.ProviderCollection.GetEnumerator
  - System.Configuration.Provider.ProviderCollection.IsSynchronized
  - System.Configuration.Provider.ProviderCollection.Remove(System.String)
  - System.Configuration.Provider.ProviderCollection.SetReadOnly
  - System.Configuration.Provider.ProviderCollection.SyncRoot
  - System.Configuration.Provider.ProviderCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  platform:
  - net462
- uid: System.Configuration.SettingsProviderCollection.#ctor
  id: '#ctor'
  parent: System.Configuration.SettingsProviderCollection
  langs:
  - csharp
  name: SettingsProviderCollection()
  nameWithType: SettingsProviderCollection.SettingsProviderCollection()
  fullName: System.Configuration.SettingsProviderCollection.SettingsProviderCollection()
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Initializes a new instance of the <xref href=&quot;System.Configuration.SettingsProviderCollection&quot;></xref> class."
  remarks: "This is the default constructor that is implicitly provided."
  syntax:
    content: public SettingsProviderCollection ();
    parameters: []
  overload: System.Configuration.SettingsProviderCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsProviderCollection.Add(System.Configuration.Provider.ProviderBase)
  id: Add(System.Configuration.Provider.ProviderBase)
  parent: System.Configuration.SettingsProviderCollection
  langs:
  - csharp
  name: Add(ProviderBase)
  nameWithType: SettingsProviderCollection.Add(ProviderBase)
  fullName: System.Configuration.SettingsProviderCollection.Add(ProviderBase)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Adds a new settings provider to the collection."
  remarks: "The <xref:System.Configuration.Provider.ProviderBase.Name%2A> property of the <xref:System.Configuration.SettingsProvider> is used as the storage key.      > [!CAUTION] >  Although the Add method has a single <xref:System.Configuration.Provider.ProviderBase> parameter to match the signature of this same method in the base class <xref:System.Configuration.Provider.ProviderCollection>, this method will throw an exception if the `provider` parameter is not of type <xref:System.Configuration.SettingsProvider>."
  syntax:
    content: public override void Add (System.Configuration.Provider.ProviderBase provider);
    parameters:
    - id: provider
      type: System.Configuration.Provider.ProviderBase
      description: "A <xref href=&quot;System.Configuration.Provider.ProviderBase&quot;></xref> to add to the collection."
  overload: System.Configuration.SettingsProviderCollection.Add*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>provider</code> parameter is not of type <xref href=&quot;System.Configuration.SettingsProvider&quot;></xref>.       -or-       The <xref:System.Configuration.Provider.ProviderBase.Name*> property of the provider parameter is null or an empty string.       -or-       A settings provider with the same <xref:System.Configuration.Provider.ProviderBase.Name*> already exists in the collection."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The collection is read-only."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>provider</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Configuration.SettingsProviderCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Configuration.SettingsProviderCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: SettingsProviderCollection.Item(String)
  fullName: System.Configuration.SettingsProviderCollection.Item(String)
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Gets the settings provider in the collection that matches the specified name."
  remarks: "You can make a <xref:System.Configuration.SettingsProviderCollection> read-only by using the <xref:System.Configuration.Provider.ProviderCollection.SetReadOnly%2A> method. However, it is invalid to methods such as <xref:System.Configuration.SettingsProviderCollection.Add%2A>, <xref:System.Configuration.Provider.ProviderCollection.Remove%2A>, and <xref:System.Configuration.Provider.ProviderCollection.Clear%2A> on such a collection."
  syntax:
    content: public System.Configuration.SettingsProvider this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "A <xref:System.String> containing the friendly name of the settings provider."
    return:
      type: System.Configuration.SettingsProvider
      description: "If found, the <xref href=&quot;System.Configuration.SettingsProvider&quot;></xref> whose name matches that specified by the name parameter; otherwise, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Configuration.SettingsProviderCollection.Item*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The collection is read-only when setting this value."
  platform:
  - net462
references:
- uid: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: System.Configuration.Provider.ProviderCollection
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Configuration.SettingsProviderCollection.#ctor
  parent: System.Configuration.SettingsProviderCollection
  isExternal: false
  name: SettingsProviderCollection()
  nameWithType: SettingsProviderCollection.SettingsProviderCollection()
  fullName: System.Configuration.SettingsProviderCollection.SettingsProviderCollection()
- uid: System.Configuration.SettingsProviderCollection.Add(System.Configuration.Provider.ProviderBase)
  parent: System.Configuration.SettingsProviderCollection
  isExternal: false
  name: Add(ProviderBase)
  nameWithType: SettingsProviderCollection.Add(ProviderBase)
  fullName: System.Configuration.SettingsProviderCollection.Add(ProviderBase)
- uid: System.Configuration.Provider.ProviderBase
  parent: System.Configuration.Provider
  isExternal: false
  name: ProviderBase
  nameWithType: ProviderBase
  fullName: System.Configuration.Provider.ProviderBase
- uid: System.Configuration.SettingsProviderCollection.Item(System.String)
  parent: System.Configuration.SettingsProviderCollection
  isExternal: false
  name: Item(String)
  nameWithType: SettingsProviderCollection.Item(String)
  fullName: System.Configuration.SettingsProviderCollection.Item(String)
- uid: System.Configuration.SettingsProvider
  parent: System.Configuration
  isExternal: false
  name: SettingsProvider
  nameWithType: SettingsProvider
  fullName: System.Configuration.SettingsProvider
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.SettingsProviderCollection.#ctor*
  parent: System.Configuration.SettingsProviderCollection
  isExternal: false
  name: SettingsProviderCollection
  nameWithType: SettingsProviderCollection.SettingsProviderCollection
- uid: System.Configuration.SettingsProviderCollection.Add*
  parent: System.Configuration.SettingsProviderCollection
  isExternal: false
  name: Add
  nameWithType: SettingsProviderCollection.Add
- uid: System.Configuration.SettingsProviderCollection.Item*
  parent: System.Configuration.SettingsProviderCollection
  isExternal: false
  name: Item
  nameWithType: SettingsProviderCollection.Item
