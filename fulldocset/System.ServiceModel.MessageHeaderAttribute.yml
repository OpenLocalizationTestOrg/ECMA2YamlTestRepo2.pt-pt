### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.MessageHeaderAttribute
  id: MessageHeaderAttribute
  children:
  - System.ServiceModel.MessageHeaderAttribute.#ctor
  - System.ServiceModel.MessageHeaderAttribute.Actor
  - System.ServiceModel.MessageHeaderAttribute.MustUnderstand
  - System.ServiceModel.MessageHeaderAttribute.Relay
  langs:
  - csharp
  name: MessageHeaderAttribute
  nameWithType: MessageHeaderAttribute
  fullName: System.ServiceModel.MessageHeaderAttribute
  type: Class
  summary: "Specifies that a data member is a SOAP message header."
  remarks: "The MessageHeaderAttribute attribute allows you to map fields and properties of a type marked with the <xref:System.ServiceModel.MessageContractAttribute> attribute to SOAP message headers. The field or property can be of a simple type or a composite type that can be serialized.       For information on controlling the serialization of the contents of a SOAP body without modifying the default SOAP envelope itself, see <xref:System.Runtime.Serialization.DataContractAttribute?displayProperty=fullName>, [Specifying Data Transfer in Service Contracts](~/add/includes/ajax-current-ext-md.md), and [Using Data Contracts](~/add/includes/ajax-current-ext-md.md).       For more information about creating message contracts, see [Using Message Contracts](~/add/includes/ajax-current-ext-md.md).       The SOAP standard defines the following attributes that can exist on a header:      -   `Actor` or `Role` (`Actor` in SOAP 1.1, `Role` in SOAP 1.2)      -   `MustUnderstand`      -   `Relay`       The `Actor` or `Role` attribute specifies the URI of the node for which a given header is intended. The `MustUnderstand` attribute specifies whether the header understands the node processing. The `Relay` attribute specifies whether the header is to be relayed to downstream nodes. [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] does not perform any processing of these attributes on incoming messages, except for the `MustUnderstand` attribute.       You can, however, read and write these attributes, even though they are not sent by default. You can set the attribute values in two ways. First, you can change the <xref:System.ServiceModel.MessageHeaderAttribute.Actor%2A>, <xref:System.ServiceModel.MessageHeaderAttribute.MustUnderstand%2A> and <xref:System.ServiceModel.MessageHeaderAttribute.Relay%2A> properties on the MessageHeaderAttribute. (There is no `Role` property â€“ set the <xref:System.ServiceModel.MessageHeaderAttribute.Actor%2A> property and `Role` is passed if SOAP 1.2 is used). For example:       [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]       The second way to control these attributes is by making the desired header type the type parameter of the <xref:System.ServiceModel.MessageHeader%601> class and using the resulting type together with the MessageHeaderAttribute. Then use the <xref:System.ServiceModel.MessageHeader%601> properties programmatically to set the SOAP attributes. For example:       [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]       [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]       If both the dynamic and the static control mechanisms are used, the static settings are the default but can be overridden using the dynamic mechanism. For example:       [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]       [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]       Creating repeated headers with dynamic attribute control is allowed. For example:      ```   [MessageHeaderArray] public MessageHeader<Person> documentApprovers[];   ```       On the receiving side, reading these SOAP attributes can only be done if the generic <xref:System.ServiceModel.MessageHeader%601> class is used. Examine the <xref:System.ServiceModel.MessageHeader%601.Actor%2A>, <xref:System.ServiceModel.MessageHeader%601.Relay%2A> or <xref:System.ServiceModel.MessageHeader%601.MustUnderstand%2A> properties of a header of the <xref:System.ServiceModel.MessageHeader%601> type to discover the attribute settings on the received message.       When a message is received and then sent back, the SOAP attribute settings only roundtrip for headers of the <xref:System.ServiceModel.MessageHeader%601> type."
  example:
  - "The following code example shows the use of the MessageHeaderAttribute to create a SOAP header for the response message with the <xref:System.ServiceModel.MessageContractMemberAttribute.Name%2A>, <xref:System.ServiceModel.MessageContractMemberAttribute.Namespace%2A> and <xref:System.ServiceModel.MessageHeaderAttribute.MustUnderstand%2A> properties set to values appropriate for this header. The code example is followed by an example of the message when sent.  \n  \n [!code-vb[MessageHeaderAttribute#4](~/add/codesnippet/visualbasic/messageheaderattribute.client/services.vb#4)]\n [!code-cs[MessageHeaderAttribute#4](~/add/codesnippet/csharp/messageheaderattribute.client/services.cs#4)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field, AllowMultiple=false, Inherited=false)]

      public class MessageHeaderAttribute : System.ServiceModel.MessageContractMemberAttribute
  inheritance:
  - System.ServiceModel.MessageContractMemberAttribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.MessageHeaderAttribute.#ctor
  id: '#ctor'
  parent: System.ServiceModel.MessageHeaderAttribute
  langs:
  - csharp
  name: MessageHeaderAttribute()
  nameWithType: MessageHeaderAttribute.MessageHeaderAttribute()
  fullName: System.ServiceModel.MessageHeaderAttribute.MessageHeaderAttribute()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Initializes a new instance of the <xref href=&quot;System.ServiceModel.MessageHeaderAttribute&quot;></xref> class."
  syntax:
    content: public MessageHeaderAttribute ();
    parameters: []
  overload: System.ServiceModel.MessageHeaderAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.MessageHeaderAttribute.Actor
  id: Actor
  parent: System.ServiceModel.MessageHeaderAttribute
  langs:
  - csharp
  name: Actor
  nameWithType: MessageHeaderAttribute.Actor
  fullName: System.ServiceModel.MessageHeaderAttribute.Actor
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Gets or sets a URI that indicates the node at which this header is targeted. Maps to the role header attribute when SOAP 1.2 is used and the actor header attribute when SOAP 1.1 is used."
  remarks: "For more information, see the Remarks section of <xref:System.ServiceModel.MessageHeaderAttribute> for details."
  syntax:
    content: public string Actor { get; set; }
    return:
      type: System.String
      description: "A URI that indicates the node at which this header is targeted. This URI maps to the role header attribute when SOAP 1.2 is used and the actor header attribute when SOAP 1.1 is used."
  overload: System.ServiceModel.MessageHeaderAttribute.Actor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.MessageHeaderAttribute.MustUnderstand
  id: MustUnderstand
  parent: System.ServiceModel.MessageHeaderAttribute
  langs:
  - csharp
  name: MustUnderstand
  nameWithType: MessageHeaderAttribute.MustUnderstand
  fullName: System.ServiceModel.MessageHeaderAttribute.MustUnderstand
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Specifies whether the node acting in the <xref:System.ServiceModel.MessageHeaderAttribute.Actor*> role must understand this header. This is mapped to the <xref uid=&quot;langword_csharp_mustUnderstand&quot; name=&quot;mustUnderstand&quot; href=&quot;&quot;></xref> SOAP header attribute."
  remarks: "For more information, see the Remarks section of <xref:System.ServiceModel.MessageHeaderAttribute> for details.      > [!IMPORTANT] >  It is important to remember that if the MustUnderstand property is `true` in a message being sent and the application on the receiving side does not understand the header a fault is generated. Conversely, if a header with the `mustUnderstand` SOAP header attribute set to `true` is received by [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)], it must be a part of the message contract (or must be processed by one of the [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] channels); otherwise, it is assumed that the header is not understood and an exception is thrown."
  example:
  - "The following code example shows the use of the <xref:System.ServiceModel.MessageHeaderAttribute> to create a SOAP header for the response message with the <xref:System.ServiceModel.MessageContractMemberAttribute.Name%2A>, <xref:System.ServiceModel.MessageContractMemberAttribute.Namespace%2A> and MustUnderstand properties set to values appropriate for this header. The code example is followed by an example of the message when sent.  \n  \n [!code-vb[MessageHeaderAttribute#4](~/add/codesnippet/visualbasic/messageheaderattribute.client/services.vb#4)]\n [!code-cs[MessageHeaderAttribute#4](~/add/codesnippet/csharp/messageheaderattribute.client/services.cs#4)]"
  syntax:
    content: public bool MustUnderstand { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the node acting in the <xref:System.ServiceModel.MessageHeaderAttribute.Actor*> role must understand this header; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.MessageHeaderAttribute.MustUnderstand*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.MessageHeaderAttribute.Relay
  id: Relay
  parent: System.ServiceModel.MessageHeaderAttribute
  langs:
  - csharp
  name: Relay
  nameWithType: MessageHeaderAttribute.Relay
  fullName: System.ServiceModel.MessageHeaderAttribute.Relay
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Specifies whether this header is to be relayed to downstream nodes. This is mapped to the <xref uid=&quot;langword_csharp_relay&quot; name=&quot;relay&quot; href=&quot;&quot;></xref> SOAP header attribute."
  remarks: "This property is ignored when SOAP 1.1 is used. For more information, see the Remarks section of <xref:System.ServiceModel.MessageHeaderAttribute> for details."
  syntax:
    content: public bool Relay { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if this header is to be relayed to downstream nodes; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.MessageHeaderAttribute.Relay*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.MessageContractMemberAttribute
  isExternal: false
  name: System.ServiceModel.MessageContractMemberAttribute
- uid: System.ServiceModel.MessageHeaderAttribute.#ctor
  parent: System.ServiceModel.MessageHeaderAttribute
  isExternal: false
  name: MessageHeaderAttribute()
  nameWithType: MessageHeaderAttribute.MessageHeaderAttribute()
  fullName: System.ServiceModel.MessageHeaderAttribute.MessageHeaderAttribute()
- uid: System.ServiceModel.MessageHeaderAttribute.Actor
  parent: System.ServiceModel.MessageHeaderAttribute
  isExternal: false
  name: Actor
  nameWithType: MessageHeaderAttribute.Actor
  fullName: System.ServiceModel.MessageHeaderAttribute.Actor
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.MessageHeaderAttribute.MustUnderstand
  parent: System.ServiceModel.MessageHeaderAttribute
  isExternal: false
  name: MustUnderstand
  nameWithType: MessageHeaderAttribute.MustUnderstand
  fullName: System.ServiceModel.MessageHeaderAttribute.MustUnderstand
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.MessageHeaderAttribute.Relay
  parent: System.ServiceModel.MessageHeaderAttribute
  isExternal: false
  name: Relay
  nameWithType: MessageHeaderAttribute.Relay
  fullName: System.ServiceModel.MessageHeaderAttribute.Relay
- uid: System.ServiceModel.MessageHeaderAttribute.#ctor*
  parent: System.ServiceModel.MessageHeaderAttribute
  isExternal: false
  name: MessageHeaderAttribute
  nameWithType: MessageHeaderAttribute.MessageHeaderAttribute
- uid: System.ServiceModel.MessageHeaderAttribute.Actor*
  parent: System.ServiceModel.MessageHeaderAttribute
  isExternal: false
  name: Actor
  nameWithType: MessageHeaderAttribute.Actor
- uid: System.ServiceModel.MessageHeaderAttribute.MustUnderstand*
  parent: System.ServiceModel.MessageHeaderAttribute
  isExternal: false
  name: MustUnderstand
  nameWithType: MessageHeaderAttribute.MustUnderstand
- uid: System.ServiceModel.MessageHeaderAttribute.Relay*
  parent: System.ServiceModel.MessageHeaderAttribute
  isExternal: false
  name: Relay
  nameWithType: MessageHeaderAttribute.Relay
