### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.MessageHeaderAttribute
  id: MessageHeaderAttribute
  children:
  - System.ServiceModel.MessageHeaderAttribute.#ctor
  - System.ServiceModel.MessageHeaderAttribute.Actor
  - System.ServiceModel.MessageHeaderAttribute.MustUnderstand
  - System.ServiceModel.MessageHeaderAttribute.Relay
  langs:
  - csharp
  name: MessageHeaderAttribute
  nameWithType: MessageHeaderAttribute
  fullName: System.ServiceModel.MessageHeaderAttribute
  type: Class
  summary: "Especifica que um membro de dados é um cabeçalho da mensagem SOAP."
  remarks: "O atributo MessageHeaderAttribute permite-lhe mapear campos e propriedades de um tipo marcado com o <xref:System.ServiceModel.MessageContractAttribute>atributo para cabeçalhos de mensagens SOAP.</xref:System.ServiceModel.MessageContractAttribute> O campo ou propriedade pode ser um tipo simples ou um tipo composto que pode ser serializado.       Para informações sobre como controlar a serialização do conteúdo de um corpo SOAP sem modificar o envelope SOAP de predefinição em si, consulte <xref:System.Runtime.Serialization.DataContractAttribute?displayProperty=fullName>, [especificando a transferência de dados de contratos de serviço](~/add/includes/ajax-current-ext-md.md), e [através de contratos de dados](~/add/includes/ajax-current-ext-md.md).</xref:System.Runtime.Serialization.DataContractAttribute?displayProperty=fullName>       Para obter mais informações sobre como criar contratos de mensagem, consulte [através de contratos de mensagem](~/add/includes/ajax-current-ext-md.md).       A norma SOAP define os atributos seguintes que podem existir num cabeçalho:- `Actor` ou `Role` (`Actor` no SOAP 1.1, `Role` no SOAP 1.2)- `MustUnderstand`       -    `Relay` o `Actor` ou `Role` atributo especifica o URI do nó para o qual destina-se um determinado cabeçalho. O `MustUnderstand` atributo Especifica se o cabeçalho compreende o processamento de nó. O `Relay` atributo Especifica se o cabeçalho se está a ser reencaminhadas para a jusante nós. [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]não efetua qualquer processamento destes atributos em mensagens a receber, exceto para o `MustUnderstand` atributo.       No entanto, pode ler e escrever destes atributos, apesar dos mesmos não são enviados por predefinição. Pode definir os valores de atributo de duas formas. Em primeiro lugar, pode alterar o <xref:System.ServiceModel.MessageHeaderAttribute.Actor%2A>, <xref:System.ServiceModel.MessageHeaderAttribute.MustUnderstand%2A>e <xref:System.ServiceModel.MessageHeaderAttribute.Relay%2A>Propriedades no MessageHeaderAttribute.</xref:System.ServiceModel.MessageHeaderAttribute.Relay%2A> </xref:System.ServiceModel.MessageHeaderAttribute.MustUnderstand%2A> </xref:System.ServiceModel.MessageHeaderAttribute.Actor%2A> (Não existe nenhum `Role` definir a propriedade – o <xref:System.ServiceModel.MessageHeaderAttribute.Actor%2A>propriedade e `Role` é transmitida se for utilizado o SOAP 1.2).</xref:System.ServiceModel.MessageHeaderAttribute.Actor%2A> Por exemplo: [!code-cs [XpsCreate #XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent) ] a segunda forma de controlar estes atributos consiste em tornar o cabeçalho pretendido, escreva o parâmetro de tipo de <xref:System.ServiceModel.MessageHeader%601>classe e utilizando o tipo resultante juntamente com MessageHeaderAttribute.</xref:System.ServiceModel.MessageHeader%601> Em seguida, utilize o <xref:System.ServiceModel.MessageHeader%601>Propriedades através de programação para definir os atributos SOAP.</xref:System.ServiceModel.MessageHeader%601> Por exemplo: [!code-cs [XpsCreate #XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)][!code-cs[XpsCreate #XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent) ] se estiver a dinâmica e os mecanismos de controlo estático, as definições de estáticos são a predefinição, mas pode ser substituídas utilizando o mecanismo de dinâmico.        Por exemplo: [!code-cs [XpsCreate #XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)][!code-cs[XpsCreate #XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent) ] é permitido criar cabeçalhos repetidos com o controlo dinâmico do atributo.        Por exemplo: ```   [MessageHeaderArray] public MessageHeader<Person> documentApprovers[];   ``` no lado recetor, ler estes atributos SOAP só pode ser efetuado se genérica <xref:System.ServiceModel.MessageHeader%601>classe é utilizada.</xref:System.ServiceModel.MessageHeader%601> Examine o <xref:System.ServiceModel.MessageHeader%601.Actor%2A>, <xref:System.ServiceModel.MessageHeader%601.Relay%2A>ou <xref:System.ServiceModel.MessageHeader%601.MustUnderstand%2A>Propriedades de um cabeçalho do <xref:System.ServiceModel.MessageHeader%601>tipo para detetar as definições de atributo na mensagem recebida.</xref:System.ServiceModel.MessageHeader%601> </xref:System.ServiceModel.MessageHeader%601.MustUnderstand%2A> </xref:System.ServiceModel.MessageHeader%601.Relay%2A> </xref:System.ServiceModel.MessageHeader%601.Actor%2A>       Quando uma mensagem é recebida e, em seguida, enviada novamente, a SOAP atributo definições apenas ida e volta para os cabeçalhos do <xref:System.ServiceModel.MessageHeader%601>tipo.</xref:System.ServiceModel.MessageHeader%601>"
  example:
  - "The following code example shows the use of the MessageHeaderAttribute to create a SOAP header for the response message with the <xref:System.ServiceModel.MessageContractMemberAttribute.Name%2A>, <xref:System.ServiceModel.MessageContractMemberAttribute.Namespace%2A> and <xref:System.ServiceModel.MessageHeaderAttribute.MustUnderstand%2A> properties set to values appropriate for this header. The code example is followed by an example of the message when sent.  \n  \n [!code-vb[MessageHeaderAttribute#4](~/add/codesnippet/visualbasic/messageheaderattribute.client/services.vb#4)]\n [!code-cs[MessageHeaderAttribute#4](~/add/codesnippet/csharp/messageheaderattribute.client/services.cs#4)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field, AllowMultiple=false, Inherited=false)]

      public class MessageHeaderAttribute : System.ServiceModel.MessageContractMemberAttribute
  inheritance:
  - System.ServiceModel.MessageContractMemberAttribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.MessageHeaderAttribute.#ctor
  id: '#ctor'
  parent: System.ServiceModel.MessageHeaderAttribute
  langs:
  - csharp
  name: MessageHeaderAttribute()
  nameWithType: MessageHeaderAttribute.MessageHeaderAttribute()
  fullName: System.ServiceModel.MessageHeaderAttribute.MessageHeaderAttribute()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ServiceModel.MessageHeaderAttribute&quot;> </xref> classe."
  syntax:
    content: public MessageHeaderAttribute ();
    parameters: []
  overload: System.ServiceModel.MessageHeaderAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.MessageHeaderAttribute.Actor
  id: Actor
  parent: System.ServiceModel.MessageHeaderAttribute
  langs:
  - csharp
  name: Actor
  nameWithType: MessageHeaderAttribute.Actor
  fullName: System.ServiceModel.MessageHeaderAttribute.Actor
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Obtém ou define um URI que indica o nó a que se destina este cabeçalho. É mapeado para o atributo de cabeçalho de função quando é utilizado o SOAP 1.2 e o atributo de cabeçalho de ator quando é utilizado o SOAP 1.1."
  remarks: "Para obter mais informações, consulte a secção observações <xref:System.ServiceModel.MessageHeaderAttribute>para obter mais detalhes.</xref:System.ServiceModel.MessageHeaderAttribute>"
  syntax:
    content: public string Actor { get; set; }
    return:
      type: System.String
      description: "URI que indica o nó a que se destina este cabeçalho. Este URI mapeia para o atributo de cabeçalho de função quando é utilizado o SOAP 1.2 e o atributo de cabeçalho de ator quando é utilizado o SOAP 1.1."
  overload: System.ServiceModel.MessageHeaderAttribute.Actor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.MessageHeaderAttribute.MustUnderstand
  id: MustUnderstand
  parent: System.ServiceModel.MessageHeaderAttribute
  langs:
  - csharp
  name: MustUnderstand
  nameWithType: MessageHeaderAttribute.MustUnderstand
  fullName: System.ServiceModel.MessageHeaderAttribute.MustUnderstand
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Especifica se o nó a funcionar no <xref:System.ServiceModel.MessageHeaderAttribute.Actor*>função tem de compreender este cabeçalho.</xref:System.ServiceModel.MessageHeaderAttribute.Actor*> Isto é mapeado para o <xref uid=&quot;langword_csharp_mustUnderstand&quot; name=&quot;mustUnderstand&quot; href=&quot;&quot;> </xref> atributo de cabeçalho SOAP."
  remarks: "Para obter mais informações, consulte a secção observações <xref:System.ServiceModel.MessageHeaderAttribute>para obter mais detalhes.</xref:System.ServiceModel.MessageHeaderAttribute>      > [!IMPORTANT] > É importante lembrar-se de que se a propriedade MustUnderstand for `true` numa mensagem a ser enviados e a aplicação no lado recetor não compreender o cabeçalho de uma falha é gerada. Por outro lado, se um cabeçalho com o `mustUnderstand` o atributo de cabeçalho SOAP definido como `true` é recebida pelo [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)], tem de ser uma parte do contrato de mensagem (ou tem de ser processada por um do [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] canais); caso contrário, presume-se que o cabeçalho não é compreendido e é emitida uma exceção."
  example:
  - "The following code example shows the use of the <xref:System.ServiceModel.MessageHeaderAttribute> to create a SOAP header for the response message with the <xref:System.ServiceModel.MessageContractMemberAttribute.Name%2A>, <xref:System.ServiceModel.MessageContractMemberAttribute.Namespace%2A> and MustUnderstand properties set to values appropriate for this header. The code example is followed by an example of the message when sent.  \n  \n [!code-vb[MessageHeaderAttribute#4](~/add/codesnippet/visualbasic/messageheaderattribute.client/services.vb#4)]\n [!code-cs[MessageHeaderAttribute#4](~/add/codesnippet/csharp/messageheaderattribute.client/services.cs#4)]"
  syntax:
    content: public bool MustUnderstand { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o nó a funcionar no <xref:System.ServiceModel.MessageHeaderAttribute.Actor*>função tem de compreender este cabeçalho; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ServiceModel.MessageHeaderAttribute.Actor*>"
  overload: System.ServiceModel.MessageHeaderAttribute.MustUnderstand*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.MessageHeaderAttribute.Relay
  id: Relay
  parent: System.ServiceModel.MessageHeaderAttribute
  langs:
  - csharp
  name: Relay
  nameWithType: MessageHeaderAttribute.Relay
  fullName: System.ServiceModel.MessageHeaderAttribute.Relay
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Especifica se este cabeçalho é a ser reencaminhadas para a jusante nós. Isto é mapeado para o <xref uid=&quot;langword_csharp_relay&quot; name=&quot;relay&quot; href=&quot;&quot;> </xref> atributo de cabeçalho SOAP."
  remarks: "Esta propriedade é ignorada quando é utilizado o SOAP 1.1. Para obter mais informações, consulte a secção observações <xref:System.ServiceModel.MessageHeaderAttribute>para obter mais detalhes.</xref:System.ServiceModel.MessageHeaderAttribute>"
  syntax:
    content: public bool Relay { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se este cabeçalho está a ser reencaminhadas para a jusante nós; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.MessageHeaderAttribute.Relay*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.MessageContractMemberAttribute
  isExternal: false
  name: System.ServiceModel.MessageContractMemberAttribute
- uid: System.ServiceModel.MessageHeaderAttribute.#ctor
  parent: System.ServiceModel.MessageHeaderAttribute
  isExternal: false
  name: MessageHeaderAttribute()
  nameWithType: MessageHeaderAttribute.MessageHeaderAttribute()
  fullName: System.ServiceModel.MessageHeaderAttribute.MessageHeaderAttribute()
- uid: System.ServiceModel.MessageHeaderAttribute.Actor
  parent: System.ServiceModel.MessageHeaderAttribute
  isExternal: false
  name: Actor
  nameWithType: MessageHeaderAttribute.Actor
  fullName: System.ServiceModel.MessageHeaderAttribute.Actor
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.MessageHeaderAttribute.MustUnderstand
  parent: System.ServiceModel.MessageHeaderAttribute
  isExternal: false
  name: MustUnderstand
  nameWithType: MessageHeaderAttribute.MustUnderstand
  fullName: System.ServiceModel.MessageHeaderAttribute.MustUnderstand
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.MessageHeaderAttribute.Relay
  parent: System.ServiceModel.MessageHeaderAttribute
  isExternal: false
  name: Relay
  nameWithType: MessageHeaderAttribute.Relay
  fullName: System.ServiceModel.MessageHeaderAttribute.Relay
- uid: System.ServiceModel.MessageHeaderAttribute.#ctor*
  parent: System.ServiceModel.MessageHeaderAttribute
  isExternal: false
  name: MessageHeaderAttribute
  nameWithType: MessageHeaderAttribute.MessageHeaderAttribute
- uid: System.ServiceModel.MessageHeaderAttribute.Actor*
  parent: System.ServiceModel.MessageHeaderAttribute
  isExternal: false
  name: Actor
  nameWithType: MessageHeaderAttribute.Actor
- uid: System.ServiceModel.MessageHeaderAttribute.MustUnderstand*
  parent: System.ServiceModel.MessageHeaderAttribute
  isExternal: false
  name: MustUnderstand
  nameWithType: MessageHeaderAttribute.MustUnderstand
- uid: System.ServiceModel.MessageHeaderAttribute.Relay*
  parent: System.ServiceModel.MessageHeaderAttribute
  isExternal: false
  name: Relay
  nameWithType: MessageHeaderAttribute.Relay
