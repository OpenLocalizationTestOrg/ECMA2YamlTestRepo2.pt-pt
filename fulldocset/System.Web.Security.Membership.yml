### YamlMime:ManagedReference
items:
- uid: System.Web.Security.Membership
  id: Membership
  children:
  - System.Web.Security.Membership.ApplicationName
  - System.Web.Security.Membership.CreateUser(System.String,System.String)
  - System.Web.Security.Membership.CreateUser(System.String,System.String,System.String)
  - System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)
  - System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  - System.Web.Security.Membership.DeleteUser(System.String)
  - System.Web.Security.Membership.DeleteUser(System.String,System.Boolean)
  - System.Web.Security.Membership.EnablePasswordReset
  - System.Web.Security.Membership.EnablePasswordRetrieval
  - System.Web.Security.Membership.FindUsersByEmail(System.String)
  - System.Web.Security.Membership.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  - System.Web.Security.Membership.FindUsersByName(System.String)
  - System.Web.Security.Membership.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  - System.Web.Security.Membership.GeneratePassword(System.Int32,System.Int32)
  - System.Web.Security.Membership.GetAllUsers
  - System.Web.Security.Membership.GetAllUsers(System.Int32,System.Int32,System.Int32@)
  - System.Web.Security.Membership.GetNumberOfUsersOnline
  - System.Web.Security.Membership.GetUser
  - System.Web.Security.Membership.GetUser(System.Boolean)
  - System.Web.Security.Membership.GetUser(System.Object)
  - System.Web.Security.Membership.GetUser(System.String)
  - System.Web.Security.Membership.GetUser(System.Object,System.Boolean)
  - System.Web.Security.Membership.GetUser(System.String,System.Boolean)
  - System.Web.Security.Membership.GetUserNameByEmail(System.String)
  - System.Web.Security.Membership.HashAlgorithmType
  - System.Web.Security.Membership.MaxInvalidPasswordAttempts
  - System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters
  - System.Web.Security.Membership.MinRequiredPasswordLength
  - System.Web.Security.Membership.PasswordAttemptWindow
  - System.Web.Security.Membership.PasswordStrengthRegularExpression
  - System.Web.Security.Membership.Provider
  - System.Web.Security.Membership.Providers
  - System.Web.Security.Membership.RequiresQuestionAndAnswer
  - System.Web.Security.Membership.UpdateUser(System.Web.Security.MembershipUser)
  - System.Web.Security.Membership.UserIsOnlineTimeWindow
  - System.Web.Security.Membership.ValidateUser(System.String,System.String)
  - System.Web.Security.Membership.ValidatingPassword
  langs:
  - csharp
  name: Membership
  nameWithType: Membership
  fullName: System.Web.Security.Membership
  type: Class
  summary: "Valida as credenciais de utilizador e gere as definições do utilizador. Esta classe não pode ser herdada."
  remarks: "A classe de associação é utilizada em aplicações do ASP.NET para validar as credenciais de utilizador e gerir as definições de utilizador, tais como palavras-passe e endereços de correio eletrónico. A classe de associação pode ser utilizada no seu próprio ou em conjunto com o <xref:System.Web.Security.FormsAuthentication>para criar um sistema completo para autenticar utilizadores de uma aplicação Web ou um site.</xref:System.Web.Security.FormsAuthentication> O <xref:System.Web.UI.WebControls.Login>controlo encapsula a classe de associação para fornecer um mecanismo conveniente para validar os utilizadores.</xref:System.Web.UI.WebControls.Login>      > [!NOTE] > Se não estiver familiarizado com as funcionalidades de associação do ASP.NET, consulte [introdução à associação](~/add/includes/ajax-current-ext-md.md) antes de continuar. Para obter uma lista de outros tópicos relacionados com a associação, consulte [gerir utilizadores ao utilizar a associação](~/add/includes/ajax-current-ext-md.md).       A classe de associação fornece instalações para:-criar novos utilizadores.      -Armazenar informações de associação (nomes de utilizador, palavras-passe, endereços de correio eletrónico e suporte de dados) no Microsoft SQL Server ou num arquivo de dados alternativa.      -Autenticação de utilizadores que visitam o seu site. Pode autenticar utilizadores programaticamente, ou pode utilizar o <xref:System.Web.UI.WebControls.Login>controlo para criar um sistema de autenticação completa requer pouco ou nenhum código.</xref:System.Web.UI.WebControls.Login>      -Gestão de palavras-passe, que inclui a criação, alteração, obter e repor-los e assim sucessivamente. Opcionalmente, pode configurar a associação do ASP.NET para exigir uma pergunta de palavra-passe e uma resposta para autenticar pedidos de reposição ou obtenção de palavra-passe para os utilizadores que tenham esquecimento a palavra-passe.       Embora a associação do ASP.NET é uma funcionalidade standing personalizada do ASP.NET para autenticação, pode ser integrado com a gestão de funções do ASP.NET para fornecer serviços de autorização para o seu site. Associação também pode ser integrada com o utilizador do ASP.NET <xref:System.Web.Profile>para fornecer a personalização de específicas da aplicação que pode ser adaptada a utilizadores individuais.</xref:System.Web.Profile> Para obter mais informações, consulte [Noções básicas sobre gestão de funções](~/add/includes/ajax-current-ext-md.md) e [descrição geral de propriedades de perfil ASP.NET](~/add/includes/ajax-current-ext-md.md).       A classe de associação depende de fornecedores de associação para comunicar com uma origem de dados. O .NET Framework inclui um <xref:System.Web.Security.SqlMembershipProvider>, que armazena informações de utilizador na base de dados do Microsoft SQL Server e um <xref:System.Web.Security.ActiveDirectoryMembershipProvider>, que lhe permite armazenar informações de utilizador num servidor do Active Directory ou o modo de aplicação do Active Directory (ADAM).</xref:System.Web.Security.ActiveDirectoryMembershipProvider> </xref:System.Web.Security.SqlMembershipProvider> Também pode implementar um fornecedor de membros personalizadas para comunicar com uma origem de dados alternativos que pode ser utilizada pela classe de associação. Fornecedores de associação personalizado herdam da <xref:System.Web.Security.MembershipProvider>classe abstracta.</xref:System.Web.Security.MembershipProvider> Para obter mais informações, consulte [implementar um fornecedor de membros](~/add/includes/ajax-current-ext-md.md).       Por predefinição, a associação do ASP.NET está ativada para todas as aplicações ASP.NET. O fornecedor de membros predefinido é o <xref:System.Web.Security.SqlMembershipProvider>e está especificado na configuração da máquina com o nome `AspNetSqlProvider`.</xref:System.Web.Security.SqlMembershipProvider> A instância predefinida do <xref:System.Web.Security.SqlMembershipProvider>está configurado para ligar a uma instância local do Microsoft SQL Server.</xref:System.Web.Security.SqlMembershipProvider>       Pode modificar as predefinições para especificar um <xref:System.Web.Security.SqlMembershipProvider>diferente do `AspNetSqlProvider` instância como o fornecedor predefinido ou especifique uma instância de um fornecedor personalizado como o fornecedor predefinido para a sua aplicação ASP.NET através do ficheiro Web. config.</xref:System.Web.Security.SqlMembershipProvider> Pode especificar a configuração de associação do ASP.NET para a sua aplicação Web utilizando a secção de configuração no ficheiro Web. config. Pode utilizar o `providers` subsecção da secção para especificar um fornecedor de membros que não seja um dos fornecedores predefinido. Por exemplo, a secção seguinte remove os fornecedores de associação predefinidos da configuração de aplicação atual e adiciona um novo fornecedor com um nome de `SqlProvider` que estabelece ligação a uma instância do SQL Server com o nome `AspSqlServer`.      ```   <configuration>     <connectionStrings>       <add name=&quot;SqlServices&quot; connectionString=&quot;Data Source=AspSqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;&quot; />     </connectionStrings>     <system.web>       <membership defaultProvider=&quot;SqlProvider&quot; userIsOnlineTimeWindow=&quot;20&quot;>         <providers>           <remove name=&quot;AspNetSqlProvider&quot; />           <add name=&quot;SqlProvider&quot;             type=&quot;System.Web.Security.SqlMembershipProvider&quot;             connectionStringName=&quot;SqlServices&quot;             enablePasswordRetrieval=&quot;false&quot;             enablePasswordReset=&quot;true&quot;             requiresQuestionAndAnswer=&quot;true&quot;             passwordFormat=&quot;Hashed&quot;             applicationName=&quot;/&quot; />         </providers>       </membership>     </system.web>   </configuration>   ```"
  example:
  - "The following code example shows the login page for an ASP.NET application configured to use forms authentication and ASP.NET membership. If the supplied user credentials are invalid, a message is displayed to the user. Otherwise, the user is redirected to the originally requested URL using the <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> method.  \n  \n> [!NOTE]\n>  The ASP.NET login controls (<xref:System.Web.UI.WebControls.Login>, <xref:System.Web.UI.WebControls.LoginView>, <xref:System.Web.UI.WebControls.LoginStatus>, <xref:System.Web.UI.WebControls.LoginName>, and <xref:System.Web.UI.WebControls.PasswordRecovery>) encapsulate virtually all of the logic required to prompt users for credentials and validate the credentials in the membership system and can be used in place of programmatic checking using the Membership class.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/csharp/t-system.web.security.me_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/visualbasic/t-system.web.security.me_1.aspx)]"
  syntax:
    content: public static class Membership
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.Membership.ApplicationName
  id: ApplicationName
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: ApplicationName
  nameWithType: Membership.ApplicationName
  fullName: System.Web.Security.Membership.ApplicationName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém ou define o nome da aplicação."
  remarks: "O ApplicationName é utilizado para identificar os utilizadores específicos a uma aplicação. Ou seja, o mesmo nome de utilizador pode existir na base de dados para várias aplicações de ASP.NET que especifique um ApplicationName diferentes. Isto permite que várias aplicações a utilizar a mesma base de dados para armazenar informações de utilizador sem executar para conflitos de nome de utilizador duplicado. Em alternativa, várias aplicações do ASP.NET podem utilizar a mesma base de dados do utilizador, especificando o mesmo ApplicationName. O ApplicationName pode ser definido através de programação ou forma declarativa na configuração para a aplicação Web.      > [!CAUTION] > Porque uma instância do fornecedor de associação único predefinido é utilizada para todos os pedidos efetuados por um <xref:System.Web.HttpApplication>objeto, pode ter vários pedidos em execução em simultâneo e a tentar definir o valor da propriedade ApplicationName.</xref:System.Web.HttpApplication> A propriedade ApplicationName não é threads para várias operações de escrita e alterar o valor da propriedade ApplicationName pode resultar num comportamento inesperado para vários utilizadores de uma aplicação. Recomendamos que evite escrever código que permite aos utilizadores definir a propriedade ApplicationName, a menos que tem. Um exemplo de uma aplicação em que a definição da propriedade ApplicationName poderá ser necessária é uma aplicação administrativa que gere dados de associação para várias aplicações. Uma aplicação deste tipo deve ser uma aplicação de utilizador único e não é uma aplicação Web."
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use a <xref:System.Web.Security.SqlMembershipProvider> instance and sets the ApplicationName to `MyApplication`.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"true\"  \n      enablePasswordReset=\"false\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Encrypted\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static string ApplicationName { get; set; }
    return:
      type: System.String
      description: "O nome da aplicação."
  overload: System.Web.Security.Membership.ApplicationName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String)
  id: CreateUser(System.String,System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: CreateUser(String,String)
  nameWithType: Membership.CreateUser(String,String)
  fullName: System.Web.Security.Membership.CreateUser(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Adiciona um novo utilizador para o arquivo de dados."
  remarks: "CreateUser adiciona um novo utilizador para o arquivo de dados e devolve um <xref:System.Web.Security.MembershipUser>objeto para o utilizador recentemente criado.</xref:System.Web.Security.MembershipUser> Se a criação de utilizador falhar, um <xref:System.Web.Security.MembershipCreateUserException>é emitida.</xref:System.Web.Security.MembershipCreateUserException> Pode obter um <xref:System.Web.Security.MembershipCreateStatus>valor a partir do <xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A>propriedade o <xref:System.Web.Security.MembershipCreateUserException>que indica a razão pela qual a criação do utilizador falhou.</xref:System.Web.Security.MembershipCreateUserException> </xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A> </xref:System.Web.Security.MembershipCreateStatus>       Depois de um utilizador de adesão foi criado e tem uma referência a um <xref:System.Web.Security.MembershipUser>do objeto para esse utilizador pode modificar as definições para que o utilizador com o <xref:System.Web.Security.MembershipUser>métodos públicos, como <xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A>para aplicações onde <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>é `true`, ou ao definir os valores de propriedade do <xref:System.Web.Security.MembershipUser>objeto e passou-los para o <xref:System.Web.Security.Membership.UpdateUser%2A>método.</xref:System.Web.Security.Membership.UpdateUser%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> </xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser>       Se um utilizador já existe na origem de dados para a aplicação, pode obter um <xref:System.Web.Security.MembershipUser>objeto para o utilizador existente com o <xref:System.Web.Security.Membership.GetUser%2A>método.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser>       O <xref:System.Web.Security.SqlMembershipProvider>fornece uma opção para exigir um endereço de correio electrónico exclusivo para cada utilizador.</xref:System.Web.Security.SqlMembershipProvider> Se o <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A>propriedade é `true`, terá de utilizar uma das sobrecargas CreateUser que permite-lhe especificar um endereço de correio eletrónico para o utilizador a ser criado.</xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> Caso contrário, um <xref:System.Web.Security.MembershipCreateUserException>será emitida.</xref:System.Web.Security.MembershipCreateUserException>       Espaços à esquerda e são recortadas dos todos os valores de parâmetro."
  example:
  - "The following code example creates a new user for an ASP.NET application configured to use forms authentication and ASP.NET membership. If the user is not created successfully, a message is displayed to the user. Otherwise, the user is redirected to the login page for the application.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.Membership#2](~/add/codesnippet/csharp/m-system.web.security.me_0_1.aspx)]\n [!code-vb[System.Web.Security.Membership#2](~/add/codesnippet/visualbasic/m-system.web.security.me_0_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser CreateUser (string username, string password);
    parameters:
    - id: username
      type: System.String
      description: "O nome de utilizador para o novo utilizador."
    - id: password
      type: System.String
      description: "A palavra-passe para o novo utilizador."
    return:
      type: System.Web.Security.MembershipUser
      description: "A <xref:System.Web.Security.MembershipUser>objeto para o utilizador recentemente criado.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.CreateUser*
  exceptions:
  - type: System.Web.Security.MembershipCreateUserException
    commentId: T:System.Web.Security.MembershipCreateUserException
    description: "O utilizador não foi criado. Verifique o <xref:System.Web.Security.MembershipCreateUserException.StatusCode*>propriedade para um <xref:System.Web.Security.MembershipCreateStatus>valor.</xref:System.Web.Security.MembershipCreateStatus> </xref:System.Web.Security.MembershipCreateUserException.StatusCode*>"
  platform:
  - net462
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String)
  id: CreateUser(System.String,System.String,System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: CreateUser(String,String,String)
  nameWithType: Membership.CreateUser(String,String,String)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Adiciona um novo utilizador com um endereço de correio eletrónico especificado para o arquivo de dados."
  remarks: "<xref:System.Web.Security.Membership.CreateUser%2A>Adiciona um novo utilizador para o arquivo de dados e devolve um <xref:System.Web.Security.MembershipUser>objeto para o utilizador recentemente criado.</xref:System.Web.Security.MembershipUser></xref:System.Web.Security.Membership.CreateUser%2A> Se a criação de utilizador falhar, um <xref:System.Web.Security.MembershipCreateUserException>é emitida.</xref:System.Web.Security.MembershipCreateUserException> Pode obter um <xref:System.Web.Security.MembershipCreateStatus>valor a partir do <xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A>propriedade o <xref:System.Web.Security.MembershipCreateUserException>que indica a razão pela qual a criação do utilizador falhou.</xref:System.Web.Security.MembershipCreateUserException> </xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A> </xref:System.Web.Security.MembershipCreateStatus>       Depois de um utilizador de adesão foi criado e tem uma referência a um <xref:System.Web.Security.MembershipUser>do objeto para esse utilizador pode modificar as definições para que o utilizador com o <xref:System.Web.Security.MembershipUser>métodos públicos, como <xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A>para aplicações onde <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>é `true`, ou ao definir os valores de propriedade do <xref:System.Web.Security.MembershipUser>objeto e passou-los para o <xref:System.Web.Security.Membership.UpdateUser%2A>método.</xref:System.Web.Security.Membership.UpdateUser%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> </xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser>       Se um utilizador já existe na origem de dados para a aplicação, pode obter um <xref:System.Web.Security.MembershipUser>objeto para o utilizador existente com o <xref:System.Web.Security.Membership.GetUser%2A>método.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser>       Espaços à esquerda e são recortadas dos todos os valores de parâmetro."
  example:
  - "The following code example creates a new user for an ASP.NET application configured to use forms authentication and ASP.NET membership. If the user is not created successfully, a message is displayed to the user. Otherwise, the user is redirected to the login page for the application.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.Membership#1](~/add/codesnippet/visualbasic/8cf35595-ec0c-4c08-b671-_1.aspx)]\n [!code-cs[System.Web.Security.Membership#1](~/add/codesnippet/csharp/8cf35595-ec0c-4c08-b671-_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email);
    parameters:
    - id: username
      type: System.String
      description: "O nome de utilizador para o novo utilizador."
    - id: password
      type: System.String
      description: "A palavra-passe para o novo utilizador."
    - id: email
      type: System.String
      description: "O endereço de correio eletrónico para o novo utilizador."
    return:
      type: System.Web.Security.MembershipUser
      description: "A <xref:System.Web.Security.MembershipUser>objeto para o utilizador recentemente criado.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.CreateUser*
  exceptions:
  - type: System.Web.Security.MembershipCreateUserException
    commentId: T:System.Web.Security.MembershipCreateUserException
    description: "O utilizador não foi criado. Verifique o <xref:System.Web.Security.MembershipCreateUserException.StatusCode*>propriedade para um <xref:System.Web.Security.MembershipCreateStatus>valor.</xref:System.Web.Security.MembershipCreateStatus> </xref:System.Web.Security.MembershipCreateUserException.StatusCode*>"
  platform:
  - net462
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)
  id: CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
  nameWithType: Membership.CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Adiciona um novo utilizador com os valores de propriedade especificado para o arquivo de dados e devolve um parâmetro de estado que indica que o utilizador foi criado com êxito ou o motivo pelo qual a criação do utilizador falhou."
  remarks: "CreateUser adiciona um novo utilizador para o arquivo de dados e devolve um <xref:System.Web.Security.MembershipUser>objeto para o utilizador recentemente criado.</xref:System.Web.Security.MembershipUser> Se a criação de utilizador falhar, pode obter um <xref:System.Web.Security.MembershipCreateStatus>valor a partir do `status` parâmetro de saída que indica a razão pela qual a criação do utilizador falhou.</xref:System.Web.Security.MembershipCreateStatus>       O método de CreateUser irá devolver `null` se `password` é uma cadeia vazia ou `null`, `username` é uma cadeia vazia ou `null` ou contém uma vírgula (,), `passwordQuestion` não é `null` e é uma cadeia vazia, ou `passwordAnswer` não é `null` e contém uma cadeia vazia.       Depois de um utilizador de adesão foi criado e tem uma referência a um <xref:System.Web.Security.MembershipUser>do objeto para esse utilizador pode modificar as definições para esse utilizador com o <xref:System.Web.Security.MembershipUser>métodos públicos e ao definir os valores de propriedade do <xref:System.Web.Security.MembershipUser>objeto e, em seguida, transmitir o <xref:System.Web.Security.MembershipUser>object o <xref:System.Web.Security.Membership.UpdateUser%2A>método.</xref:System.Web.Security.Membership.UpdateUser%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser>       Se um utilizador já existe na origem de dados para a aplicação, pode obter um <xref:System.Web.Security.MembershipUser>objeto para o utilizador existente com o <xref:System.Web.Security.Membership.GetUser%2A>método.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser>       Espaços à esquerda e são recortadas dos todos os valores de parâmetro de cadeia."
  example:
  - "The following code example creates a new user for an ASP.NET application configured to use forms authentication and ASP.NET membership. If the user is not created successfully, a message is displayed to the user. Otherwise, the user is redirected to the login page for the application.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#2](~/add/codesnippet/csharp/baa4c01c-297e-4ec6-a9d9-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#2](~/add/codesnippet/visualbasic/baa4c01c-297e-4ec6-a9d9-_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, out System.Web.Security.MembershipCreateStatus status);
    parameters:
    - id: username
      type: System.String
      description: "O nome de utilizador para o novo utilizador."
    - id: password
      type: System.String
      description: "A palavra-passe para o novo utilizador."
    - id: email
      type: System.String
      description: "O endereço de correio eletrónico para o novo utilizador."
    - id: passwordQuestion
      type: System.String
      description: "O valor de palavra-passe-pergunta para o utilizador de adesão."
    - id: passwordAnswer
      type: System.String
      description: "O valor de resposta de palavra-passe para o utilizador de adesão."
    - id: isApproved
      type: System.Boolean
      description: "Um valor boleano que indica se o novo utilizador for aprovado para iniciar sessão."
    - id: status
      type: System.Web.Security.MembershipCreateStatus
      description: "A <xref:System.Web.Security.MembershipCreateStatus>que indica que o utilizador foi criado com êxito ou o motivo pelo qual a criação falhou.</xref:System.Web.Security.MembershipCreateStatus>"
    return:
      type: System.Web.Security.MembershipUser
      description: "A <xref:System.Web.Security.MembershipUser>objeto para o utilizador recentemente criado.</xref:System.Web.Security.MembershipUser> Se nenhum utilizador tiver sido criado, este método devolve <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.CreateUser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  id: CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  nameWithType: Membership.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Adiciona um novo utilizador com os valores de propriedade especificado e um identificador exclusivo para o arquivo de dados e devolve um parâmetro de estado que indica que o utilizador foi criado com êxito ou o motivo pelo qual a criação do utilizador falhou."
  remarks: "CreateUser adiciona um novo utilizador para o arquivo de dados e devolve um <xref:System.Web.Security.MembershipUser>objeto para o utilizador recentemente criado.</xref:System.Web.Security.MembershipUser> Se a criação de utilizador falhar, pode obter um <xref:System.Web.Security.MembershipCreateStatus>valor a partir do `status` parâmetro de saída que indica a razão pela qual a criação do utilizador falhou.</xref:System.Web.Security.MembershipCreateStatus> Pode especificar um identificador exclusivo para o utilizador, tais como um valor de chave primária para uma base de dados, utilizando o `providerUserKey` parâmetro.       O método de CreateUser irá devolver `null` se `password` é uma cadeia vazia ou `null`, `username` é uma cadeia vazia ou `null` ou contém uma vírgula (,), `passwordQuestion` não é `null` e contém uma cadeia vazia, ou `passwordAnswer` não é `null` e contém uma cadeia vazia.       Depois de um utilizador de adesão foi criado e tem uma referência a um <xref:System.Web.Security.MembershipUser>do objeto para esse utilizador pode modificar as definições para esse utilizador com o <xref:System.Web.Security.MembershipUser>métodos públicos e ao definir os valores de propriedade do <xref:System.Web.Security.MembershipUser>objeto e, em seguida, transmitir o <xref:System.Web.Security.MembershipUser>object o <xref:System.Web.Security.Membership.UpdateUser%2A>método.</xref:System.Web.Security.Membership.UpdateUser%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser>       Se um utilizador já existe na origem de dados para a aplicação, pode obter um <xref:System.Web.Security.MembershipUser>objeto para o utilizador existente com o <xref:System.Web.Security.Membership.GetUser%2A>método.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser>       Espaços à esquerda e são recortadas dos todos os valores de parâmetro de cadeia."
  syntax:
    content: public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status);
    parameters:
    - id: username
      type: System.String
      description: "O nome de utilizador para o novo utilizador."
    - id: password
      type: System.String
      description: "A palavra-passe para o novo utilizador."
    - id: email
      type: System.String
      description: "O endereço de correio eletrónico para o novo utilizador."
    - id: passwordQuestion
      type: System.String
      description: "O valor de palavra-passe-pergunta para o utilizador de adesão."
    - id: passwordAnswer
      type: System.String
      description: "O valor de resposta de palavra-passe para o utilizador de adesão."
    - id: isApproved
      type: System.Boolean
      description: "Um valor boleano que indica se o novo utilizador for aprovado para iniciar sessão."
    - id: providerUserKey
      type: System.Object
      description: "O identificador de utilizador para o utilizador que deve ser armazenado no arquivo de dados de associação."
    - id: status
      type: System.Web.Security.MembershipCreateStatus
      description: "A <xref:System.Web.Security.MembershipCreateStatus>que indica que o utilizador foi criado com êxito ou falha na criação razão.</xref:System.Web.Security.MembershipCreateStatus>"
    return:
      type: System.Web.Security.MembershipUser
      description: "A <xref:System.Web.Security.MembershipUser>objeto para o utilizador recentemente criado.</xref:System.Web.Security.MembershipUser> Se nenhum utilizador tiver sido criado, este método devolve <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.CreateUser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.DeleteUser(System.String)
  id: DeleteUser(System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: DeleteUser(String)
  nameWithType: Membership.DeleteUser(String)
  fullName: System.Web.Security.Membership.DeleteUser(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Elimina um utilizador e quaisquer dados relacionados com o utilizador da base de dados."
  remarks: "Dados de utilizador armazenados na base de dados para o <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, ou <xref:System.Web.UI.WebControls.WebParts.WebPart>personalização também é eliminada quando estiver a utilizar o <xref:System.Web.Security.SqlRoleProvider>, <xref:System.Web.Profile.SqlProfileProvider>, e <xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider>objetos para o armazenamento de dados.</xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider> </xref:System.Web.Profile.SqlProfileProvider> </xref:System.Web.Security.SqlRoleProvider> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.HttpContext.Profile%2A> </xref:System.Web.Security.Roles>"
  example:
  - "The following code example deletes the currently logged-on user and all related data.  \n  \n [!code-vb[System.Web.Security.Membership#8](~/add/codesnippet/visualbasic/m-system.web.security.me_11_1.aspx)]\n [!code-cs[System.Web.Security.Membership#8](~/add/codesnippet/csharp/m-system.web.security.me_11_1.aspx)]"
  syntax:
    content: public static bool DeleteUser (string username);
    parameters:
    - id: username
      type: System.String
      description: "O nome do utilizador a eliminar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o utilizador foi eliminado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.DeleteUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>é uma cadeia em branco ou contém uma vírgula (,)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>é<xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>"
  platform:
  - net462
- uid: System.Web.Security.Membership.DeleteUser(System.String,System.Boolean)
  id: DeleteUser(System.String,System.Boolean)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: DeleteUser(String,Boolean)
  nameWithType: Membership.DeleteUser(String,Boolean)
  fullName: System.Web.Security.Membership.DeleteUser(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Elimina um utilizador da base de dados."
  remarks: "Utilizadores eliminados da base de dados só são eliminados do configurada `applicationName`.       Se `deleteAllRelatedData` é `true`, dados de utilizador armazenados na base de dados para o <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, ou <xref:System.Web.UI.WebControls.WebParts.WebPart>personalização também é eliminada quando estiver a utilizar o <xref:System.Web.Security.SqlRoleProvider>, <xref:System.Web.Profile.SqlProfileProvider>, e <xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider>objetos para o armazenamento de dados.</xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider> </xref:System.Web.Profile.SqlProfileProvider> </xref:System.Web.Security.SqlRoleProvider> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.HttpContext.Profile%2A> </xref:System.Web.Security.Roles>"
  example:
  - "The following code example deletes the currently logged-on user and all related data.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#6](~/add/codesnippet/csharp/m-system.web.security.me_12_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#6](~/add/codesnippet/visualbasic/m-system.web.security.me_12_1.aspx)]"
  syntax:
    content: public static bool DeleteUser (string username, bool deleteAllRelatedData);
    parameters:
    - id: username
      type: System.String
      description: "O nome do utilizador a eliminar."
    - id: deleteAllRelatedData
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para eliminar dados relacionados com o utilizador da base de dados; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para manter os dados relacionados com o utilizador na base de dados."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o utilizador foi eliminado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.DeleteUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>é uma cadeia em branco ou contém uma vírgula (,)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.EnablePasswordReset
  id: EnablePasswordReset
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: EnablePasswordReset
  nameWithType: Membership.EnablePasswordReset
  fullName: System.Web.Security.Membership.EnablePasswordReset
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém um valor que indica se o fornecedor de membros atual está configurado para permitir que os utilizadores reponham as respetivas palavras-passe."
  remarks: "Palavra-passe reposição é a capacidade de associação do ASP.NET substituir a palavra-passe de palavra-passe para um nome de utilizador com um novo gerado aleatoriamente atual quando um utilizador tenha esquecido a palavra-passe ou a palavra-passe atual já não é válida. Isto é especialmente útil quando o formato de palavra-passe está definido como <xref:System.Web.Security.MembershipPasswordFormat>, como os utilizadores não é possível obter os valores de palavra-passe com hash.</xref:System.Web.Security.MembershipPasswordFormat>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and enables password reset.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"false\"  \n      enablePasswordReset=\"true\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Hashed\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```  \n  \n The following code example first verifies that EnablePasswordReset is `true`, then resets a user's password and returns the new, automatically generated password.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#8](~/add/codesnippet/csharp/p-system.web.security.me_2_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#8](~/add/codesnippet/visualbasic/p-system.web.security.me_2_1.aspx)]"
  syntax:
    content: public static bool EnablePasswordReset { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o fornecedor de membros suportar a reposição de palavra-passe; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.EnablePasswordReset*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.EnablePasswordRetrieval
  id: EnablePasswordRetrieval
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: EnablePasswordRetrieval
  nameWithType: Membership.EnablePasswordRetrieval
  fullName: System.Web.Security.Membership.EnablePasswordRetrieval
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém um valor que indica se o fornecedor de membros atual está configurado para permitir aos utilizadores obter as palavras-passe."
  remarks: "Se for EnablePasswordRetrieval `false`, o fornecedor de membros subjacente pode acionar um <xref:System.Web.HttpException>.</xref:System.Web.HttpException>       Os fornecedores que estão incluídos com o .NET Framework suportam vários formatos de palavra-passe para melhorar a segurança de palavra-passe. Se o formato de palavra-passe está definido como <xref:System.Web.Security.MembershipPasswordFormat>, em seguida, os utilizadores não conseguirão obter a palavra-passe existente da base de dados.</xref:System.Web.Security.MembershipPasswordFormat> O <xref:System.Web.Security.MembershipPasswordFormat>formato de palavra-passe fornece codificação unidirecional dos valores da palavra-passe.</xref:System.Web.Security.MembershipPasswordFormat> As palavras-passe são &quot;hash&quot; e comparado com valores armazenados na base de dados para a autenticação. Os valores &quot;Hash&quot; não não possível anular codificados para obter o valor de palavra-passe original. Para obter mais informações, consulte <xref:System.Web.Security.MembershipPasswordFormat>.</xref:System.Web.Security.MembershipPasswordFormat>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and enables password retrieval.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"true\"  \n      enablePasswordReset=\"false\"  \n      requiresQuestionAndAnswer=\"false\"  \n      passwordFormat=\"Encrypted\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```  \n  \n The following code example first verifies that EnablePasswordRetrieval is `true`, then retrieves the password for a specified user name and sends it to the e-mail address for the specified user.  \n  \n> [!IMPORTANT]\n>  Returning a password in clear text using e-mail is not recommended for sites that require a high level of security. For high-security sites, we recommend that you return passwords using encryption, such as SSL.  \n>   \n>  This example includes a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/visualbasic/p-system.web.security.me_4_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/csharp/p-system.web.security.me_4_1.aspx)]"
  syntax:
    content: public static bool EnablePasswordRetrieval { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o fornecedor de membros suporta a obtenção de palavra-passe caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.EnablePasswordRetrieval*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.FindUsersByEmail(System.String)
  id: FindUsersByEmail(System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: FindUsersByEmail(String)
  nameWithType: Membership.FindUsersByEmail(String)
  fullName: System.Web.Security.Membership.FindUsersByEmail(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém uma coleção de utilizadores de associação em que o endereço de e-mail contém o endereço de correio eletrónico especificado para corresponder."
  remarks: "FindUsersByEmail devolve uma lista de utilizadores de associação em que o endereço de correio electrónico corresponde à fornecido `emailToMatch` configurada para `applicationName`.       O <xref:System.Web.Security.SqlMembershipProvider>efetua a pesquisa com uma cláusula LIKE contra o `emailToMatch` parâmetro.</xref:System.Web.Security.SqlMembershipProvider> Quaisquer carateres universais que são suportadas pelo SQL Server na como cláusulas podem ser utilizadas no `emailToMatch` valor do parâmetro."
  example:
  - "The following code example uses the FindUsersByEmail method to retrieve membership user information from the membership database based on user input and displays the results in pages of data.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.Membership#9](~/add/codesnippet/visualbasic/m-system.web.security.me_10_1.aspx)]\n [!code-cs[System.Web.Security.Membership#9](~/add/codesnippet/csharp/m-system.web.security.me_10_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch);
    parameters:
    - id: emailToMatch
      type: System.String
      description: "O endereço de e-mail para procurar."
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "A <xref:System.Web.Security.MembershipUserCollection>que contém todos os utilizadores que correspondam a <code> emailToMatch </code> parâmetro.</xref:System.Web.Security.MembershipUserCollection>       Espaços à esquerda e são recortadas do <code> emailToMatch </code> valor do parâmetro."
  overload: System.Web.Security.Membership.FindUsersByEmail*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  id: FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: FindUsersByEmail(String,Int32,Int32,Int32)
  nameWithType: Membership.FindUsersByEmail(String,Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.FindUsersByEmail(String,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém uma coleção de associação de utilizadores, numa página de dados, onde o endereço de e-mail contém o endereço de correio eletrónico especificado para corresponder."
  remarks: "FindUsersByEmail devolve uma lista de utilizadores de associação em que o endereço de correio electrónico corresponde à fornecido `emailToMatch` configurada para `applicationName`.       O <xref:System.Web.Security.SqlMembershipProvider>efetua a pesquisa com uma cláusula LIKE contra o `emailToMatch` parâmetro.</xref:System.Web.Security.SqlMembershipProvider> Quaisquer carateres universais que são suportadas pelo SQL Server na como cláusulas podem ser utilizadas no `emailToMatch` valor do parâmetro.       Os resultados devolvidos pelo FindUsersByEmail estão restritos pelo `pageIndex` e `pageSize` parâmetros. O `pageSize` parâmetro identifica o número máximo de <xref:System.Web.Security.MembershipUser>objetos a devolver em <xref:System.Web.Security.MembershipUserCollection>.</xref:System.Web.Security.MembershipUserCollection> </xref:System.Web.Security.MembershipUser> O `pageIndex` parâmetro identifica que a página de resultados para devolver, em que 0 identifica a primeira página. O `totalRecords` parâmetro é uma `out` parâmetro está definido como o número total de utilizadores de associação que correspondeu a `emailToMatch` valor. Por exemplo, se 13 utilizadores foram encontrados onde `emailToMatch` corresponde à parte ou o endereço de e-mail completo e o `pageIndex` valor foi 1 com um `pageSize` de 5, o <xref:System.Web.Security.MembershipUserCollection>devolvido iria conter o sexto através dos utilizadores tenth devolvida.</xref:System.Web.Security.MembershipUserCollection> `totalRecords`deverá ser definido como 13.       Espaços à esquerda e são recortadas do `emailToMatch` valor do parâmetro."
  example:
  - "The following code example uses the FindUsersByEmail method to retrieve membership user information from the membership database based on user input and displays the results in pages of data.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#13](~/add/codesnippet/csharp/1954016c-87a4-4acf-9d54-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#13](~/add/codesnippet/visualbasic/1954016c-87a4-4acf-9d54-_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: emailToMatch
      type: System.String
      description: "O endereço de e-mail para procurar."
    - id: pageIndex
      type: System.Int32
      description: "O índice da página de resultados para devolver. `pageIndex`é baseado em zero."
    - id: pageSize
      type: System.Int32
      description: "O tamanho da página de resultados para devolver."
    - id: totalRecords
      type: System.Int32
      description: "O número total de utilizadores correspondentes."
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "A <xref:System.Web.Security.MembershipUserCollection>que contenha uma página de <code> pageSize </code> <xref:System.Web.Security.MembershipUser>objetos a partir da página especificadas pelo <code> pageIndex </code>.</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUserCollection>"
  overload: System.Web.Security.Membership.FindUsersByEmail*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pageIndex</code>é menor que zero.       - ou - <code>pageSize</code> é inferior a 1."
  platform:
  - net462
- uid: System.Web.Security.Membership.FindUsersByName(System.String)
  id: FindUsersByName(System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: FindUsersByName(String)
  nameWithType: Membership.FindUsersByName(String)
  fullName: System.Web.Security.Membership.FindUsersByName(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém uma coleção de utilizadores de associação em que o nome de utilizador contém o nome de utilizador especificado para corresponder."
  remarks: "<xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A>Devolve uma lista de utilizadores de associação em que o nome de utilizador corresponde à fornecido `usernameToMatch` configurada para `applicationName`.</xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A>       O <xref:System.Web.Security.SqlMembershipProvider>efetua a pesquisa com uma cláusula LIKE contra o `usernameToMatch` parâmetro.</xref:System.Web.Security.SqlMembershipProvider> Quaisquer carateres universais que são suportadas pelo SQL Server na como cláusulas podem ser utilizadas no `usernameToMatch` valor do parâmetro.       Espaços à esquerda e são recortadas dos todos os valores de parâmetro."
  example:
  - "The following code example uses the FindUsersByName method to retrieve membership user information from the membership database based on user input and displays the results in pages of data.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.Membership#10](~/add/codesnippet/visualbasic/m-system.web.security.me_6_1.aspx)]\n [!code-cs[System.Web.Security.Membership#10](~/add/codesnippet/csharp/m-system.web.security.me_6_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch);
    parameters:
    - id: usernameToMatch
      type: System.String
      description: "O nome de utilizador para procurar."
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "A <xref:System.Web.Security.MembershipUserCollection>que contém todos os utilizadores que correspondam a <code> usernameToMatch </code> parâmetro.</xref:System.Web.Security.MembershipUserCollection>       Espaços à esquerda e são recortadas do <code> usernameToMatch </code> valor do parâmetro."
  overload: System.Web.Security.Membership.FindUsersByName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>usernameToMatch</code>é uma cadeia vazia."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>usernameToMatch</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  id: FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: FindUsersByName(String,Int32,Int32,Int32)
  nameWithType: Membership.FindUsersByName(String,Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.FindUsersByName(String,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém uma coleção de associação de utilizadores, numa página de dados, onde o nome de utilizador contém o nome de utilizador especificada para corresponder."
  remarks: "<xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A>Devolve uma lista de utilizadores de associação em que o nome de utilizador corresponde à fornecido `usernameToMatch` configurada para `applicationName`.</xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A>       O <xref:System.Web.Security.SqlMembershipProvider>efetua a pesquisa com uma cláusula LIKE contra o `usernameToMatch` parâmetro.</xref:System.Web.Security.SqlMembershipProvider> Quaisquer carateres universais que são suportadas pelo SQL Server na como cláusulas podem ser utilizadas no `usernameToMatch` valor do parâmetro.       Os resultados devolvidos pelo FindUsersByName estão restritos pelo `pageIndex` e `pageSize` parâmetros. O `pageSize` parâmetro identifica o número máximo de <xref:System.Web.Security.MembershipUser>objetos a devolver em <xref:System.Web.Security.MembershipUserCollection>.</xref:System.Web.Security.MembershipUserCollection> </xref:System.Web.Security.MembershipUser> O `pageIndex` parâmetro identifica que a página de resultados para devolver, em que 0 identifica a primeira página. O `totalRecords` parâmetro é uma `out` parâmetro está definido como o número total de utilizadores de associação que correspondeu a `usernameToMatch` valor. Por exemplo, se 13 utilizadores foram encontrados onde `usernameToMatch` corresponde à parte ou o nome de utilizador completo e o `pageIndex` valor foi 1 com um `pageSize` de 5, o <xref:System.Web.Security.MembershipUserCollection>devolvido iria conter o sexto através dos utilizadores tenth devolvida.</xref:System.Web.Security.MembershipUserCollection> `totalRecords`deverá ser definido como 13."
  example:
  - "The following code example uses the FindUsersByName method to retrieve membership user information from the membership database based on user input and displays the results in pages of data.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#12](~/add/codesnippet/csharp/4f01d951-55a8-446c-be57-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#12](~/add/codesnippet/visualbasic/4f01d951-55a8-446c-be57-_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: usernameToMatch
      type: System.String
      description: "O nome de utilizador para procurar."
    - id: pageIndex
      type: System.Int32
      description: "O índice da página de resultados para devolver. `pageIndex`é baseado em zero."
    - id: pageSize
      type: System.Int32
      description: "O tamanho da página de resultados para devolver."
    - id: totalRecords
      type: System.Int32
      description: "O número total de utilizadores correspondentes."
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "A <xref:System.Web.Security.MembershipUserCollection>que contenha uma página de <code> pageSize </code> <xref:System.Web.Security.MembershipUser>objetos a partir da página especificadas pelo <code> pageIndex </code>.</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUserCollection>       Espaços à esquerda e são recortadas do <code> usernameToMatch </code> valor do parâmetro."
  overload: System.Web.Security.Membership.FindUsersByName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>usernameToMatch</code>é uma cadeia vazia.       - ou - <code>pageIndex</code> é menor que zero.       - ou - <code>pageSize</code> é inferior a 1."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>usernameToMatch</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GeneratePassword(System.Int32,System.Int32)
  id: GeneratePassword(System.Int32,System.Int32)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GeneratePassword(Int32,Int32)
  nameWithType: Membership.GeneratePassword(Int32,Int32)
  fullName: System.Web.Security.Membership.GeneratePassword(Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Gera uma palavra-passe aleatória de comprimento especificado."
  remarks: "O método de GeneratePassword é utilizado para gerar uma palavra-passe aleatória e é utilizado frequentemente pelo <xref:System.Web.Security.MembershipProvider.ResetPassword%2A>Método implementado por um fornecedor de associação para repor a palavra-passe para um utilizador para uma palavra-passe do novo e temporária.</xref:System.Web.Security.MembershipProvider.ResetPassword%2A>       A palavra-passe gerada contém apenas carateres alfanuméricos e as seguintes sinais de pontuação: `!@#$%^&*()_-+=[{]};:<>|./?`. Não existem carateres de controlo oculto ou não imprimíveis são incluídos na palavra-passe gerada.      > [!NOTE] > A palavra-passe aleatória criado pelo método GeneratePassword não é assegurada para passar a expressão regular no <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A>propriedade.</xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> No entanto, a palavra-passe aleatória será cumprem os critérios de estabelecidos pelo <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>propriedade e o `numberOfNonAlphanumericCharacters` parâmetro.</xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>"
  example:
  - "The following code example creates a new membership user and uses the GeneratePassword method to initialize the password for the new user to a random value, which is displayed to the user.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.Membership#5](~/add/codesnippet/visualbasic/m-system.web.security.me_1_1.aspx)]\n [!code-cs[System.Web.Security.Membership#5](~/add/codesnippet/csharp/m-system.web.security.me_1_1.aspx)]"
  syntax:
    content: public static string GeneratePassword (int length, int numberOfNonAlphanumericCharacters);
    parameters:
    - id: length
      type: System.Int32
      description: "O número de carateres da palavra-passe gerada. O comprimento deve ser entre 1 e 128 carateres."
    - id: numberOfNonAlphanumericCharacters
      type: System.Int32
      description: 'O número mínimo de carateres não alfanuméricos (tais como @, #,!, %, &amp;, e assim sucessivamente) na palavra-passe gerada.'
    return:
      type: System.String
      description: "Uma palavra-passe aleatória de comprimento especificado."
  overload: System.Web.Security.Membership.GeneratePassword*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>length</code>é menor que 1 ou superior a 128 - ou - <code>numberOfNonAlphanumericCharacters</code> é inferior a 0 ou maior do que <code>length</code>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetAllUsers
  id: GetAllUsers
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetAllUsers()
  nameWithType: Membership.GetAllUsers()
  fullName: System.Web.Security.Membership.GetAllUsers()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém uma coleção de todos os utilizadores na base de dados."
  remarks: "GetAllUsers devolve as informações para todos os utilizadores de associação de uma aplicação como uma coleção de <xref:System.Web.Security.MembershipUser>objetos.</xref:System.Web.Security.MembershipUser> Seja cuidadoso ao utilizar o método GetAllUsers com bases de dados de utilizador muito grandes, como resultante <xref:System.Web.Security.MembershipUserCollection>no seu ASP.NET página pode degradar o desempenho da sua aplicação.</xref:System.Web.Security.MembershipUserCollection>"
  example:
  - "The following code example returns a list of users with a count of the number of users currently online.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/visualbasic/m-system.web.security.me_4_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/csharp/m-system.web.security.me_4_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection GetAllUsers ();
    parameters: []
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "A <xref:System.Web.Security.MembershipUserCollection>de <xref:System.Web.Security.MembershipUser>objetos que representa todos os utilizadores na base de dados.</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUserCollection>"
  overload: System.Web.Security.Membership.GetAllUsers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.GetAllUsers(System.Int32,System.Int32,System.Int32@)
  id: GetAllUsers(System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetAllUsers(Int32,Int32,Int32)
  nameWithType: Membership.GetAllUsers(Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.GetAllUsers(Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém uma coleção de todos os utilizadores na base de dados nas páginas de dados."
  remarks: "Os resultados devolvidos pelo GetAllUsers estão restritos pelo `pageIndex` e `pageSize` parâmetros. O `pageSize` parâmetro identifica o número máximo de <xref:System.Web.Security.MembershipUser>objetos a devolver em <xref:System.Web.Security.MembershipUserCollection>.</xref:System.Web.Security.MembershipUserCollection> </xref:System.Web.Security.MembershipUser> O `pageIndex` parâmetro identifica que a página de resultados para devolver, em que 0 identifica a primeira página. O `totalRecords` parâmetro é uma `out` parâmetro está definido como o número total de utilizadores de associação para configurada `applicationName`. Por exemplo, se existirem 13 utilizadores configurada para `applicationName`e o `pageIndex` valor foi 1 com um `pageSize` de 5, o <xref:System.Web.Security.MembershipUserCollection>devolvido iria conter o sexto através dos utilizadores tenth devolvida.</xref:System.Web.Security.MembershipUserCollection> `totalRecords`deverá ser definido como 13."
  example:
  - "The following code example returns a list of users in pages of data with a count of the number of users currently online.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/visualbasic/e84b0b6e-963c-4328-843a-_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/csharp/e84b0b6e-963c-4328-843a-_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection GetAllUsers (int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: pageIndex
      type: System.Int32
      description: "O índice da página de resultados para devolver. Utilize 0 para indicar a primeira página."
    - id: pageSize
      type: System.Int32
      description: "O tamanho da página de resultados para devolver. `pageIndex`é baseado em zero."
    - id: totalRecords
      type: System.Int32
      description: "O número total de utilizadores."
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "A <xref:System.Web.Security.MembershipUserCollection>de <xref:System.Web.Security.MembershipUser>objetos que representa todos os utilizadores na base de dados configurada para <xref uid=&quot;langword_csharp_applicationName&quot; name=&quot;applicationName&quot; href=&quot;&quot;> </xref>.</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUserCollection>"
  overload: System.Web.Security.Membership.GetAllUsers*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pageIndex</code>é menor que zero.       - ou - <code>pageSize</code> é inferior a 1."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetNumberOfUsersOnline
  id: GetNumberOfUsersOnline
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetNumberOfUsersOnline()
  nameWithType: Membership.GetNumberOfUsersOnline()
  fullName: System.Web.Security.Membership.GetNumberOfUsersOnline()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém o número de utilizadores atualmente acesso à aplicação."
  remarks: "<xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A>Devolve o número de utilizadores para o atual <xref:System.Web.Security.Membership.ApplicationName%2A>em que a data da última atividade é maior do que a hora atual menos <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>.</xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A> </xref:System.Web.Security.Membership.ApplicationName%2A></xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A> A atividade de último data/hora carimbo é atualizado para a data e hora atuais quando as credenciais de utilizador são validadas pelo way do <xref:System.Web.Security.Membership.ValidateUser%2A>ou <xref:System.Web.Security.Membership.UpdateUser%2A>método ou quando uma chamada para um <xref:System.Web.Security.Membership.GetUser%2A>sobrecarga que recebe sem parâmetros ou um que utiliza o `userIsOnline` parâmetro para especificar que o carimbo de data/hora deve ser atualizado.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.Membership.UpdateUser%2A> </xref:System.Web.Security.Membership.ValidateUser%2A>"
  example:
  - "The following code example returns a list of users with a count of the number of users currently online.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/visualbasic/m-system.web.security.me_2_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/csharp/m-system.web.security.me_2_1.aspx)]"
  syntax:
    content: public static int GetNumberOfUsersOnline ();
    parameters: []
    return:
      type: System.Int32
      description: "O número de utilizadores atualmente acesso à aplicação."
  overload: System.Web.Security.Membership.GetNumberOfUsersOnline*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser
  id: GetUser
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser()
  nameWithType: Membership.GetUser()
  fullName: System.Web.Security.Membership.GetUser()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém as informações da origem de dados e atualiza a atividade de último carimbo de data/hora para o utilizador com sessão iniciada na associação atual."
  remarks: "GetUser obtém as informações de utilizador da origem de dados e cria um <xref:System.Web.Security.MembershipUser>objeto preenchido com os dados devolvidos.</xref:System.Web.Security.MembershipUser> Se utilizar uma das sobrecargas GetUser que não requeira um `username` parâmetro GetUser devolve as informações para o utilizador com sessão iniciada na associação atual. O utilizador com sessão iniciada na associação atual é identificado por <xref:System.Security.Principal.IIdentity.Name%2A>do utilizador no <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> atual</xref:System.Security.Principal.IIdentity.Name%2A>       Também pode especificar se pretende GetUser para atualizar a atividade de último carimbo de data/hora para o utilizador que está a ser obtido utilizando o `userIsOnline` parâmetro. Do <xref:System.Web.Security.Membership.GetUser%2A>sobrecargas que não utilizam um `userIsOnline` parâmetro `GetUser()` implicitamente carimbo de data/hora atualizações a última-atividade do utilizador.</xref:System.Web.Security.Membership.GetUser%2A> `GetUser(System.String)`e `GetUser(System.Object)` não."
  example:
  - "The following code example updates the last-activity date/time stamp for the current logged-on membership user and displays the user name in the ASP.NET page.  \n  \n [!code-cs[System.Web.Security.Membership#3](~/add/codesnippet/csharp/m-system.web.security.me_14_1.aspx)]\n [!code-vb[System.Web.Security.Membership#3](~/add/codesnippet/visualbasic/m-system.web.security.me_14_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser ();
    parameters: []
    return:
      type: System.Web.Security.MembershipUser
      description: "A <xref:System.Web.Security.MembershipUser>objeto que representa o utilizador com sessão iniciada atual.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Sem utilizador de adesão está atualmente sessão iniciada."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser(System.Boolean)
  id: GetUser(System.Boolean)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser(Boolean)
  nameWithType: Membership.GetUser(Boolean)
  fullName: System.Web.Security.Membership.GetUser(Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém as informações da origem de dados para o utilizador com sessão iniciada na associação atual. Carimbo de data/hora de atualizações a última atividade para o utilizador com sessão iniciada na associação atual, se for especificado."
  remarks: "O método GetUser obtém as informações de utilizador da origem de dados e cria um <xref:System.Web.Security.MembershipUser>objeto preenchido com os dados devolvidos.</xref:System.Web.Security.MembershipUser> Se utilizar um do <xref:System.Web.Security.Membership.GetUser%2A>sobrecargas que não utilizam um `username` parâmetro <xref:System.Web.Security.Membership.GetUser%2A>devolve as informações para o utilizador com sessão iniciada na associação atual.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.Membership.GetUser%2A> O utilizador com sessão iniciada na associação atual é identificado por <xref:System.Security.Principal.IIdentity.Name%2A>do utilizador no <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> atual</xref:System.Security.Principal.IIdentity.Name%2A>       Também pode especificar se pretende que <xref:System.Web.Security.Membership.GetUser%2A>para atualizar a atividade de último carimbo de data/hora para o utilizador que está a ser obtido utilizando o `userIsOnline` parâmetro.</xref:System.Web.Security.Membership.GetUser%2A> Do <xref:System.Web.Security.Membership.GetUser%2A>sobrecargas que não utilizam um `userIsOnline` parâmetro `GetUser()` implicitamente carimbo de data/hora atualizações a última-atividade do utilizador.</xref:System.Web.Security.Membership.GetUser%2A> `GetUser(System.String)`e `GetUser(System.Object)` não."
  example:
  - "The following code example displays the user name for the current logged-on membership user in the ASP.NET page without updating the last-activity date/time stamp for the user.  \n  \n [!code-cs[System.Web.Security.Membership#4](~/add/codesnippet/csharp/m-system.web.security.me_9_1.aspx)]\n [!code-vb[System.Web.Security.Membership#4](~/add/codesnippet/visualbasic/m-system.web.security.me_9_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser (bool userIsOnline);
    parameters:
    - id: userIsOnline
      type: System.Boolean
      description: "Se <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, carimbo de data/hora de atualizações a última atividade para o utilizador especificado."
    return:
      type: System.Web.Security.MembershipUser
      description: "A <xref:System.Web.Security.MembershipUser>objeto que representa o utilizador com sessão iniciada atual.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Sem utilizador de adesão está atualmente sessão iniciada."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser(System.Object)
  id: GetUser(System.Object)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser(Object)
  nameWithType: Membership.GetUser(Object)
  fullName: System.Web.Security.Membership.GetUser(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém as informações da origem de dados para o utilizador de adesão associado com o identificador exclusivo especificado."
  remarks: "O método GetUser obtém as informações de utilizador da origem de dados e cria um <xref:System.Web.Security.MembershipUser>objeto preenchido com os dados devolvidos.</xref:System.Web.Security.MembershipUser> O utilizador é identificado com o identificador exclusivo da origem de dados especificada utilizando o `providerUserKey` parâmetro.       Também pode especificar se pretende que <xref:System.Web.Security.Membership.GetUser%2A>para atualizar a atividade de último carimbo de data/hora para o utilizador que está a ser obtido com o `userIsOnline` parâmetro.</xref:System.Web.Security.Membership.GetUser%2A> Do <xref:System.Web.Security.Membership.GetUser%2A>sobrecargas que não utilizam um `userIsOnline` parâmetro `GetUser()` implicitamente carimbo de data/hora atualizações a última-atividade do utilizador.</xref:System.Web.Security.Membership.GetUser%2A> `GetUser(System.String)`e `GetUser(System.Object)` não compatíveis"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser (object providerUserKey);
    parameters:
    - id: providerUserKey
      type: System.Object
      description: "O identificador de utilizador exclusivo da origem de dados de associação para o utilizador."
    return:
      type: System.Web.Security.MembershipUser
      description: "A <xref:System.Web.Security.MembershipUser>objeto que representa o utilizador associado o identificador exclusivo especificado.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>providerUserKey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser(System.String)
  id: GetUser(System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser(String)
  nameWithType: Membership.GetUser(String)
  fullName: System.Web.Security.Membership.GetUser(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém as informações da origem de dados para o utilizador de associação especificado."
  remarks: "O método GetUser obtém as informações de utilizador da origem de dados e cria um <xref:System.Web.Security.MembershipUser>objeto preenchido com os dados devolvidos.</xref:System.Web.Security.MembershipUser> Se utilizar um do <xref:System.Web.Security.Membership.GetUser%2A>sobrecargas que não utilizam um `username` parâmetro <xref:System.Web.Security.Membership.GetUser%2A>devolve as informações para o utilizador com sessão iniciada na associação atual.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.Membership.GetUser%2A> O utilizador com sessão iniciada na associação atual é identificado por <xref:System.Security.Principal.IIdentity.Name%2A>do utilizador no <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> atual</xref:System.Security.Principal.IIdentity.Name%2A>       Também pode especificar se pretende que <xref:System.Web.Security.Membership.GetUser%2A>para atualizar a atividade de último carimbo de data/hora para o utilizador que está a ser obtido com o `userIsOnline` parâmetro.</xref:System.Web.Security.Membership.GetUser%2A> Do <xref:System.Web.Security.Membership.GetUser%2A>sobrecargas que não utilizam um `userIsOnline` parâmetro <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName>implicitamente carimbo de data/hora atualizações a última-atividade do utilizador.</xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName> </xref:System.Web.Security.Membership.GetUser%2A> GetUser e <xref:System.Web.Security.Membership.GetUser%2A>não.</xref:System.Web.Security.Membership.GetUser%2A>"
  example:
  - "The following code example uses the GetUser method to return a <xref:System.Web.Security.MembershipUser> object for the current logged-on user and updates the e-mail address for the user.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#11](~/add/codesnippet/csharp/m-system.web.security.me_3_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#11](~/add/codesnippet/visualbasic/m-system.web.security.me_3_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser (string username);
    parameters:
    - id: username
      type: System.String
      description: "O nome do utilizador a obter."
    return:
      type: System.Web.Security.MembershipUser
      description: "A <xref:System.Web.Security.MembershipUser>objeto que representa o utilizador especificado.</xref:System.Web.Security.MembershipUser> Se o <code> username </code> parâmetro não corresponde a um utilizador existente, este método devolve <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>contém uma vírgula (,)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser(System.Object,System.Boolean)
  id: GetUser(System.Object,System.Boolean)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser(Object,Boolean)
  nameWithType: Membership.GetUser(Object,Boolean)
  fullName: System.Web.Security.Membership.GetUser(Object,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém as informações da origem de dados para o utilizador de adesão associado com o identificador exclusivo especificado. Carimbo de data/hora de atualizações a última atividade para o utilizador, se for especificado."
  remarks: "O método GetUser obtém as informações de utilizador da origem de dados e cria um <xref:System.Web.Security.MembershipUser>objeto preenchido com os dados devolvidos.</xref:System.Web.Security.MembershipUser> O utilizador identificado com o identificador exclusivo da origem de dados especificada no `providerUserKey` parâmetro."
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser (object providerUserKey, bool userIsOnline);
    parameters:
    - id: providerUserKey
      type: System.Object
      description: "O identificador de utilizador exclusivo da origem de dados de associação para o utilizador."
    - id: userIsOnline
      type: System.Boolean
      description: "Se <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, carimbo de data/hora de atualizações a última atividade para o utilizador especificado."
    return:
      type: System.Web.Security.MembershipUser
      description: "A <xref:System.Web.Security.MembershipUser>objeto que representa o utilizador associado o identificador exclusivo especificado.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>providerUserKey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser(System.String,System.Boolean)
  id: GetUser(System.String,System.Boolean)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser(String,Boolean)
  nameWithType: Membership.GetUser(String,Boolean)
  fullName: System.Web.Security.Membership.GetUser(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém as informações da origem de dados para o utilizador de associação especificado. Carimbo de data/hora de atualizações a última atividade para o utilizador, se for especificado."
  remarks: "O método GetUser obtém as informações de utilizador da origem de dados e cria um <xref:System.Web.Security.MembershipUser>objeto preenchido com os dados devolvidos.</xref:System.Web.Security.MembershipUser>       Se utilizar um do <xref:System.Web.Security.Membership.GetUser%2A>sobrecargas que não utilizam um `username` parâmetro <xref:System.Web.Security.Membership.GetUser%2A>devolve as informações para o utilizador com sessão iniciada na associação atual.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.Membership.GetUser%2A> O utilizador com sessão iniciada na associação atual é identificado por <xref:System.Security.Principal.IIdentity.Name%2A>do utilizador no <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> atual</xref:System.Security.Principal.IIdentity.Name%2A>       Também pode especificar se pretende que <xref:System.Web.Security.Membership.GetUser%2A>para atualizar a atividade de último carimbo de data/hora para o utilizador que está a ser obtido com o `userIsOnline` parâmetro.</xref:System.Web.Security.Membership.GetUser%2A> Do <xref:System.Web.Security.Membership.GetUser%2A>sobrecargas que não utilizam um `userIsOnline` parâmetro <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName>implicitamente carimbo de data/hora atualizações a última-atividade do utilizador.</xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName> </xref:System.Web.Security.Membership.GetUser%2A> <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName>e <xref:System.Web.Security.Membership.GetUser%2A>não.</xref:System.Web.Security.Membership.GetUser%2A></xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName>"
  example:
  - "The following code example retrieves the password for a specified user name and sends it to the e-mail address for the specified user. The call to <xref:System.Web.Security.Membership.GetUser%2A> specifies that the last-activity date/time stamp for the user not be updated.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/visualbasic/m-system.web.security.me_13_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/csharp/m-system.web.security.me_13_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser (string username, bool userIsOnline);
    parameters:
    - id: username
      type: System.String
      description: "O nome do utilizador a obter."
    - id: userIsOnline
      type: System.Boolean
      description: "Se <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, carimbo de data/hora de atualizações a última atividade para o utilizador especificado."
    return:
      type: System.Web.Security.MembershipUser
      description: "A <xref:System.Web.Security.MembershipUser>objeto que representa o utilizador especificado.</xref:System.Web.Security.MembershipUser> Se o <code> username </code> parâmetro não corresponde a um utilizador existente, este método devolve <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>contém uma vírgula (,)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUserNameByEmail(System.String)
  id: GetUserNameByEmail(System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUserNameByEmail(String)
  nameWithType: Membership.GetUserNameByEmail(String)
  fullName: System.Web.Security.Membership.GetUserNameByEmail(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém um nome de utilizador em que o endereço de correio eletrónico para o utilizador corresponde ao endereço de correio eletrónico especificado."
  remarks: "GetUserNameByEmail pode ser utilizado para obter o nome de utilizador para um utilizador de adesão no caso em que um utilizador não souber o respetivo nome de utilizador, mas souber o respetivo endereço de correio eletrónico. Se mais do que um utilizador no arquivo de dados tem o mesmo endereço de correio eletrónico, é devolvido o primeiro nome de utilizador encontrado.       Espaços à esquerda e são recortadas dos todos os valores de parâmetro."
  example:
  - "The following code example retrieves the user name for a specified e-mail address.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#7](~/add/codesnippet/csharp/m-system.web.security.me_5_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#7](~/add/codesnippet/visualbasic/m-system.web.security.me_5_1.aspx)]"
  syntax:
    content: public static string GetUserNameByEmail (string emailToMatch);
    parameters:
    - id: emailToMatch
      type: System.String
      description: "O endereço de e-mail para procurar."
    return:
      type: System.String
      description: "O nome de utilizador em que o endereço de correio eletrónico para o utilizador corresponde ao endereço de correio eletrónico especificado. Não se for encontrada nenhuma correspondência, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> é devolvido."
  overload: System.Web.Security.Membership.GetUserNameByEmail*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.HashAlgorithmType
  id: HashAlgorithmType
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: HashAlgorithmType
  nameWithType: Membership.HashAlgorithmType
  fullName: System.Web.Security.Membership.HashAlgorithmType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "O identificador do algoritmo utilizado para palavras-passe de hash."
  remarks: "A propriedade HashAlgorithmType identifica o algoritmo de hash personalizados utilizado pela <xref:System.Web.Security.Membership>classe.</xref:System.Web.Security.Membership> Definir a propriedade de HashAlgorithmType utilizando o `hashAlgorithmType` atributo do elemento.       O .NET Framework permite-lhe configurar classes de criptografias personalizadas utilizando a secção de configuração do elemento. A propriedade HashAlgorithmType tem de corresponder a `name` atributo do elemento num elemento. Para obter mais informações, consulte [mapeamento algoritmo os nomes a Classes de criptografia](~/add/includes/ajax-current-ext-md.md).       Se a propriedade HashAlgorithmType não estiver definida, o <xref:System.Web.Security.Membership>classe utiliza o algoritmo de hash definido `validation` atributo do elemento.</xref:System.Web.Security.Membership>"
  syntax:
    content: public static string HashAlgorithmType { get; }
    return:
      type: System.String
      description: "O identificador do algoritmo utilizado para palavras-passe de hash, ou em branco para utilizar o algoritmo de hash predefinido."
  overload: System.Web.Security.Membership.HashAlgorithmType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.MaxInvalidPasswordAttempts
  id: MaxInvalidPasswordAttempts
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: MaxInvalidPasswordAttempts
  nameWithType: Membership.MaxInvalidPasswordAttempts
  fullName: System.Web.Security.Membership.MaxInvalidPasswordAttempts
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém o número de tentativas de palavra-passe-resposta permitidas antes do utilizador de adesão está bloqueado ou de palavra-passe inválida."
  remarks: "A propriedade MaxInvalidPasswordAttempts funciona em conjunto com o <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>propriedade para proteger contra a utilização de uma origem indesejável repetido tenta adivinhar a palavra-passe ou resposta de palavra-passe de um utilizador de adesão.</xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>       Se o número de palavras-passe inválidas ou respostas de palavra-passe introduzida para um utilizador de adesão é maior que ou igual ao valor da propriedade MaxInvalidPasswordAttempts num número de minutos especificado pelo <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>propriedade, em seguida, o utilizador está bloqueado o Web site através da definição de <xref:System.Web.Security.MembershipUser.IsLockedOut%2A>propriedade `true` até que o utilizador está desbloqueado por uma chamada para o <xref:System.Web.Security.MembershipUser.UnlockUser%2A>método.</xref:System.Web.Security.MembershipUser.UnlockUser%2A> </xref:System.Web.Security.MembershipUser.IsLockedOut%2A> </xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>       Se uma palavra-passe válida ou a resposta de palavra-passe é fornecida antes do valor da propriedade MaxInvalidPasswordAttempts for atingido, o contador que controla o número de tentativas inválidas de está definido como zero.       Palavra-passe inválida e as tentativas de resposta de palavra-passe são registadas em separado. Por exemplo, se a propriedade MaxInvalidPasswordAttempts está definida como 5, o utilizador tem a cinco tentativas para introduzir uma palavra-passe correta e até cinco tentativas para introduzir uma resposta de palavra-passe correta sem a ser bloqueada.       O valor da propriedade MaxInvalidPasswordAttempts está definido na configuração de aplicação utilizando o `maxInvalidPasswordAttempts` atributo do elemento de configuração.       Se o <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>propriedade é `false`, as tentativas de resposta de palavra-passe inválida não são controladas.</xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>"
  example:
  - "The following code example shows the  element in the `system.web` section of an application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `maxInvalidPasswordAttempts` attribute to five invalid attempts and the `passwordAttemptWindow` to 30 minutes.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20>  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      maxInvalidPasswordAttempts=\"5\"  \n      passwordAttemptWindow=\"30\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static int MaxInvalidPasswordAttempts { get; }
    return:
      type: System.Int32
      description: "O número de tentativas de palavra-passe-resposta permitidas antes do utilizador de adesão está bloqueado ou de palavra-passe inválida."
  overload: System.Web.Security.Membership.MaxInvalidPasswordAttempts*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters
  id: MinRequiredNonAlphanumericCharacters
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: MinRequiredNonAlphanumericCharacters
  nameWithType: Membership.MinRequiredNonAlphanumericCharacters
  fullName: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém o número mínimo de carateres especiais que deve estar presente numa palavra-passe válida."
  remarks: "A propriedade MinRequiredNonAlphanumericCharacters devolve o número mínimo de carateres não alfanuméricos, especiais que têm de ser introduzidos para criar uma palavra-passe válida para o fornecedor de associação especificado no <xref:System.Web.Security.Membership.Provider%2A>propriedade.</xref:System.Web.Security.Membership.Provider%2A>       O valor da propriedade MinRequiredNonAlphanumericCharacters está definido na configuração de aplicação utilizando o `minRequiredNonAlphanumericCharacters` atributo do elemento de configuração.       Um caráter não alfanumérico é um caráter para o qual o <xref:System.Char.IsLetterOrDigit%2A>método devolve `false`.</xref:System.Char.IsLetterOrDigit%2A>"
  example:
  - "The following code example shows the  configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `minRequiredNonAlphanumericCharacters` attribute to 1 character.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20>  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      minRequiredNonAlphanumericCharacters=\"1\"  \n      />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static int MinRequiredNonAlphanumericCharacters { get; }
    return:
      type: System.Int32
      description: "O número mínimo de carateres especiais que deve estar presente numa palavra-passe válida."
  overload: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.MinRequiredPasswordLength
  id: MinRequiredPasswordLength
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: MinRequiredPasswordLength
  nameWithType: Membership.MinRequiredPasswordLength
  fullName: System.Web.Security.Membership.MinRequiredPasswordLength
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém o comprimento mínimo necessário para uma palavra-passe."
  remarks: "A propriedade MinRequiredPasswordLength obtém o número mínimo de carateres que é necessário introduzir o para criar uma palavra-passe válida para o fornecedor de associação especificado no <xref:System.Web.Security.Membership.Provider%2A>propriedade.</xref:System.Web.Security.Membership.Provider%2A>       O valor da propriedade MinRequiredPasswordLength está definido na configuração de aplicação utilizando o `minRequiredPasswordLength` atributo do elemento de configuração."
  example:
  - "The following code example shows the  configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `minRequiredPasswordLength` attribute to seven characters.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20>  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      minRequiredPasswordLength=\"7\"  \n      />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static int MinRequiredPasswordLength { get; }
    return:
      type: System.Int32
      description: "O comprimento mínimo necessário para uma palavra-passe."
  overload: System.Web.Security.Membership.MinRequiredPasswordLength*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.PasswordAttemptWindow
  id: PasswordAttemptWindow
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: PasswordAttemptWindow
  nameWithType: Membership.PasswordAttemptWindow
  fullName: System.Web.Security.Membership.PasswordAttemptWindow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém a janela de tempo entre os quais consecutivas falhadas para fornecer uma palavra-passe válida ou a resposta de palavra-passe é registadas."
  remarks: "A propriedade PasswordAttemptWindow funciona em conjunto com o <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>propriedade para o ajudar a proteger contra uma origem de indesejável ocorre a palavra-passe ou resposta de palavra-passe de um utilizador de associação através de tentativas repetidas.</xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> Quando um utilizador tenta iniciar sessão com, alterar ou repor a sua palavra-passe, apenas um determinado número de tentativas consecutivas é permitido dentro de uma janela de tempo especificado. O comprimento desta janela de tempo é especificado na propriedade PasswordAttemptWindow, que identifica o número de minutos permitida entre tentativas inválidas.       Se o número de tentativas falhadas consecutivas que um utilizador torna-se para repor a ou a palavra-passe é igual ao valor armazenado no <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>propriedade e o tempo decorrido desde a última tentativa de inválido é inferior ao número de minutos especificado na propriedade PasswordAttemptWindow, em seguida, o utilizador de adesão está bloqueado.</xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> O utilizador está bloqueado, definindo o <xref:System.Web.Security.MembershipUser.IsLockedOut%2A>propriedade `true` até que o utilizador está desbloqueado por uma chamada para o <xref:System.Web.Security.MembershipUser.UnlockUser%2A>método.</xref:System.Web.Security.MembershipUser.UnlockUser%2A> </xref:System.Web.Security.MembershipUser.IsLockedOut%2A>       Se o intervalo entre a tentativa falhada atual e a última tentativa falhada é maior do que a definição de propriedade PasswordAttemptWindow, a tentativa de inválido atual é contabilizada como o primeiro. Se for fornecida uma resposta de palavra-passe válida antes do número máximo de tentativas permitidas de inválido for atingido, a contagem de tentativas de resposta de palavra-passe inválida está definida para 0 (zero). Se uma palavra-passe válida for fornecida, antes do número máximo permitido inválido tentativas for atingido, a contagem de tentativas de palavra-passe inválida e a contagem de tentativas de resposta de palavra-passe inválida estão definidos para 0 (zero).       A tentativas inválidas de palavra-passe e uma palavra-passe-resposta acumularem independentemente uma da outra. Por exemplo, se o <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>está definido como 5 e três tentativas de palavra-passe inválida que são efetuadas seguidas duas tentativas de resposta de palavra-passe inválido, duas tentativas de palavra-passe inválida mais (ou mais três tentativas de resposta de palavra-passe inválido) tem de ser efetuadas dentro de PasswordAttemptWindow para o utilizador de adesão sejam bloqueadas.</xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>       O valor da propriedade PasswordAttemptWindow está definido na configuração de aplicação utilizando o `passwordAttemptWindow` atributo da secção de elemento de configuração.       Se o <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>propriedade está definida como `false`, as tentativas de resposta de palavra-passe inválida não são controladas.</xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and sets the `maxInvalidPasswordAttempts` attribute to five invalid attempts and the `passwordAttemptWindow` to 30 minutes.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"   \n  userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      maxInvalidPasswordAttempts=\"5\"  \n      passwordAttemptWindow=\"30\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static int PasswordAttemptWindow { get; }
    return:
      type: System.Int32
      description: "A janela de tempo, em minutos, durante os quais consecutivos falha tenta fornecer uma palavra-passe válida ou resposta de palavra-passe são controlados. A predefinição é 10 minutos. Se o intervalo entre a tentativa falhada atual e a última tentativa falhada é maior do que a definição de propriedade PasswordAttemptWindow, cada tentativa falhada é tratada como se fosse a primeira tentativa falhada."
  overload: System.Web.Security.Membership.PasswordAttemptWindow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.PasswordStrengthRegularExpression
  id: PasswordStrengthRegularExpression
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: PasswordStrengthRegularExpression
  nameWithType: Membership.PasswordStrengthRegularExpression
  fullName: System.Web.Security.Membership.PasswordStrengthRegularExpression
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém a expressão regular utilizada para avaliar uma palavra-passe."
  remarks: "A propriedade PasswordStrengthRegularExpression obtém a expressão regular utilizada para avaliar a complexidade de palavra-passe de fornecedor especificado no <xref:System.Web.Security.Membership.Provider%2A>propriedade.</xref:System.Web.Security.Membership.Provider%2A>       A propriedade de PasswordStrengthRegularExpression está definida a configuração de aplicação utilizando o `passwordStrengthRegularExpression` atributo do elemento de configuração.       Para mais informações sobre as expressões regulares, consulte [expressões regulares do .NET Framework](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example shows the  configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `passwordStrengthRegularExpression` attribute to a regular expression that validates the password meets the following criteria:  \n  \n-   Is greater than seven characters.  \n  \n-   Contains at least one digit.  \n  \n-   Contains at least one special (non-alphanumeric) character.  \n  \n If the password does not meet these criteria, the password is not accepted by the membership provider.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20>  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordStrengthRegularExpression=\" @\\\"(?=.{6,})(?=(.*\\d){1,})(?=(.*\\W){1,})\"  \n      />  \n   </providers>  \n</membership>  \n```"
  syntax:
    content: public static string PasswordStrengthRegularExpression { get; }
    return:
      type: System.String
      description: "Uma expressão regular utilizada para avaliar uma palavra-passe."
  overload: System.Web.Security.Membership.PasswordStrengthRegularExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.Provider
  id: Provider
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: Provider
  nameWithType: Membership.Provider
  fullName: System.Web.Security.Membership.Provider
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém uma referência para o fornecedor de membros predefinido para a aplicação."
  remarks: "A propriedade de fornecedor permite-lhe referenciar diretamente o fornecedor de membros predefinido para uma aplicação. Isto é normalmente utilizado para aceder a membros do fornecedor de membros personalizados que não fazem parte de <xref:System.Web.Security.MembershipProvider>classe abstracta. a base</xref:System.Web.Security.MembershipProvider>"
  example:
  - "The following code example accesses the default <xref:System.Web.Security.SqlMembershipProvider> enabled for the application using the Provider property in order to determine the value of the custom <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> property.  \n  \n [!code-vb[System.Web.Security.Membership#6](~/add/codesnippet/visualbasic/p-system.web.security.me_0_1.aspx)]\n [!code-cs[System.Web.Security.Membership#6](~/add/codesnippet/csharp/p-system.web.security.me_0_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipProvider Provider { get; }
    return:
      type: System.Web.Security.MembershipProvider
      description: "O fornecedor de membros predefinido para a aplicação exposta utilizando a <xref:System.Web.Security.MembershipProvider>classe de base abstracta.</xref:System.Web.Security.MembershipProvider>"
  overload: System.Web.Security.Membership.Provider*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.Providers
  id: Providers
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: Providers
  nameWithType: Membership.Providers
  fullName: System.Web.Security.Membership.Providers
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém uma coleção de fornecedores de associação para a aplicação ASP.NET."
  remarks: "A propriedade de fornecedores referencia todos os fornecedores de associação ativados para uma aplicação, incluindo fornecedores adicionado no ficheiro Web. config da aplicação e o ficheiro Machine. config para todas as aplicações. Pode controlar que associação fornecedores estão disponíveis para uma aplicação utilizando o `providers` elemento da secção de configuração para a sua aplicação. Por exemplo, o exemplo seguinte mostra a secção no ficheiro Web. config para uma aplicação que remove o <xref:System.Web.Security.SqlMembershipProvider>instância (`AspNetSqlProvider`) especificado no ficheiro de configuração de máquina e adiciona uma <xref:System.Web.Security.SqlMembershipProvider>com o nome de instância `SqlProvider` como o fornecedor de membros predefinido para a aplicação.</xref:System.Web.Security.SqlMembershipProvider> </xref:System.Web.Security.SqlMembershipProvider>      ```   <configuration>     <connectionStrings>       <add name=&quot;SqlServices&quot; connectionString=&quot;Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;&quot; />     </connectionStrings>     <system.web>       <membership defaultProvider=&quot;SqlProvider&quot; userIsOnlineTimeWindow=&quot;20&quot;>         <providers>           <remove name=&quot;AspNetSqlProvider&quot; />             <add name=&quot;SqlProvider&quot;               type=&quot;System.Web.Security.SqlMembershipProvider&quot;               connectionStringName=&quot;SqlServices&quot;               enablePasswordRetrieval=&quot;false&quot;               enablePasswordReset=&quot;true&quot;               requiresQuestionAndAnswer=&quot;true&quot;               passwordFormat=&quot;Hashed&quot;               applicationName=&quot;/&quot; />         </providers>       </membership>     </system.web>   </configuration>   ```Quando especificar o [associação elemento (esquema de definições do ASP.NET)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) secção, tem de especificar o `defaultProvider` atributo. Se não especificar um [associação elemento (esquema de definições do ASP.NET)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) secção no seu Web. config, os valores da configuração da máquina são utilizados e a <xref:System.Web.Security.SqlMembershipProvider>com o nome de instância `AspNetSqlProvider` é estabelecido como o `defaultProvider`.</xref:System.Web.Security.SqlMembershipProvider>       Pode obter uma referência de tipo seguro para um fornecedor da coleção de fornecedores, o fornecedor de membros de indexação por nome e a conversão de como o tipo pretendido."
  example:
  - "The following code example lists the providers enabled for an application and their respective types.  \n  \n [!code-cs[System.Web.Security.Membership#7](~/add/codesnippet/csharp/p-system.web.security.me_1_1.aspx)]\n [!code-vb[System.Web.Security.Membership#7](~/add/codesnippet/visualbasic/p-system.web.security.me_1_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipProviderCollection Providers { get; }
    return:
      type: System.Web.Security.MembershipProviderCollection
      description: "A <xref:System.Web.Security.MembershipProviderCollection>dos fornecedores de associação configurados para a aplicação ASP.NET.</xref:System.Web.Security.MembershipProviderCollection>"
  overload: System.Web.Security.Membership.Providers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.RequiresQuestionAndAnswer
  id: RequiresQuestionAndAnswer
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: RequiresQuestionAndAnswer
  nameWithType: Membership.RequiresQuestionAndAnswer
  fullName: System.Web.Security.Membership.RequiresQuestionAndAnswer
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém um valor que indica se o fornecedor de membros predefinido exige que o utilizador responder a uma pergunta de palavra-passe para a reposição de palavra-passe e a obtenção."
  remarks: "Exigir uma pergunta de palavra-passe e a resposta fornece uma camada adicional de segurança quando obter ou repor palavra-passe de um utilizador. Os utilizadores podem fornecer uma pergunta e resposta quando é criado o respetivo nome de utilizador que podem utilizar mais tarde para obter ou repor uma palavra-passe esquecida.       RequiresQuestionAndAnswer está marcada quando <xref:System.Web.Security.MembershipUser.ResetPassword%2A>ou <xref:System.Web.Security.MembershipUser.GetPassword%2A>é chamado.</xref:System.Web.Security.MembershipUser.GetPassword%2A> </xref:System.Web.Security.MembershipUser.ResetPassword%2A> O fornecedor fornecido com o .NET Framework emite um <xref:System.NotSupportedException>se RequiresQuestionAndAnswer `true` e a resposta de palavra-passe fornecida é `null`.</xref:System.NotSupportedException>       Se <xref:System.Web.Security.Membership.EnablePasswordReset%2A>e <xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A>são ambos `false`, RequiresQuestionAndAnswer ainda pode ser utilizado para impor a criação de perguntas e respostas de quando os novos utilizadores são criados; no entanto, a pergunta e resposta não serão utilizadas.</xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A> </xref:System.Web.Security.Membership.EnablePasswordReset%2A> Poderá obter a pergunta utilizando a <xref:System.Web.Security.MembershipUser>classe.</xref:System.Web.Security.MembershipUser>       Para obter mais informações, consulte <xref:System.Web.Security.MembershipUser.ResetPassword%2A>e <xref:System.Web.Security.MembershipUser.GetPassword%2A>.</xref:System.Web.Security.MembershipUser.GetPassword%2A> </xref:System.Web.Security.MembershipUser.ResetPassword%2A>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider>, enables password reset, and requires a password answer when performing a reset.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"false\"  \n      enablePasswordReset=\"true\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Hashed\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```  \n  \n The following code sample checks the value of RequiresQuestionAndAnswer and adds the necessary controls for a password question and answer to be supplied when creating a user.  \n  \n> [!IMPORTANT]\n>  This example includes a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#2](~/add/codesnippet/csharp/p-system.web.security.me_3_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#2](~/add/codesnippet/visualbasic/p-system.web.security.me_3_1.aspx)]"
  syntax:
    content: public static bool RequiresQuestionAndAnswer { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se uma resposta de palavra-passe é necessária para a reposição de palavra-passe e a obtenção; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.RequiresQuestionAndAnswer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.UpdateUser(System.Web.Security.MembershipUser)
  id: UpdateUser(System.Web.Security.MembershipUser)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: UpdateUser(MembershipUser)
  nameWithType: Membership.UpdateUser(MembershipUser)
  fullName: System.Web.Security.Membership.UpdateUser(MembershipUser)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Atualiza a base de dados com as informações para o utilizador especificado."
  remarks: "UpdateUser assume, como entrada, um <xref:System.Web.Security.MembershipUser>objeto preenchido com as atuais informações para o utilizador de associação e atualiza a origem de dados com os valores de propriedade do <xref:System.Web.Security.MembershipUser>objeto.</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser> Pode criar um novo <xref:System.Web.Security.MembershipUser>, ou obter um <xref:System.Web.Security.MembershipUser>objeto preenchido com valores atuais à origem de dados utilizando o <xref:System.Web.Security.Membership.GetUser%2A>, <xref:System.Web.Security.Membership.GetAllUsers%2A>, <xref:System.Web.Security.Membership.FindUsersByName%2A>, ou <xref:System.Web.Security.Membership.FindUsersByEmail%2A>métodos.</xref:System.Web.Security.Membership.FindUsersByEmail%2A> </xref:System.Web.Security.Membership.FindUsersByName%2A> </xref:System.Web.Security.Membership.GetAllUsers%2A> </xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser>"
  example:
  - "The following code example updates the e-mail address for the current logged-on user.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#11](~/add/codesnippet/csharp/m-system.web.security.me_8_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#11](~/add/codesnippet/visualbasic/m-system.web.security.me_8_1.aspx)]"
  syntax:
    content: public static void UpdateUser (System.Web.Security.MembershipUser user);
    parameters:
    - id: user
      type: System.Web.Security.MembershipUser
      description: "A <xref:System.Web.Security.MembershipUser>objeto que representa o utilizador a ser atualizado e as informações atualizadas para o utilizador.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.UpdateUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>user</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.UserIsOnlineTimeWindow
  id: UserIsOnlineTimeWindow
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: UserIsOnlineTimeWindow
  nameWithType: Membership.UserIsOnlineTimeWindow
  fullName: System.Web.Security.Membership.UserIsOnlineTimeWindow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Especifica o número de minutos após a última atividade data/hora carimbo para um utilizador durante o qual o utilizador é considerado online."
  remarks: "O valor da propriedade UserIsOnlineTimeWindow é verificado durante a chamada para <xref:System.Web.Security.Membership.GetNumberOfUsersOnline%2A>.</xref:System.Web.Security.Membership.GetNumberOfUsersOnline%2A> Se o <xref:System.Web.Security.MembershipUser.LastActivityDate%2A>para um utilizador é maior do que a data e hora atuais menos o valor de UserIsOnlineTimeWindow em minutos, em seguida, o utilizador é considerado online.</xref:System.Web.Security.MembershipUser.LastActivityDate%2A> Pode determinar se um utilizador de adesão é considerado online com a <xref:System.Web.Security.MembershipUser.IsOnline%2A>propriedade de <xref:System.Web.Security.MembershipUser>classe.</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser.IsOnline%2A>       O <xref:System.Web.Security.MembershipUser.LastActivityDate%2A>para um utilizador é atualizado quando as credenciais de um utilizador estiverem validadas com êxito pelo <xref:System.Web.Security.Membership.ValidateUser%2A>método.</xref:System.Web.Security.Membership.ValidateUser%2A> </xref:System.Web.Security.MembershipUser.LastActivityDate%2A> Também pode atualizar o <xref:System.Web.Security.MembershipUser.LastActivityDate%2A>para um utilizador de adesão ao chamar um do <xref:System.Web.Security.Membership.GetUser%2A>sobrecargas.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser.LastActivityDate%2A> Se chamar um <xref:System.Web.Security.Membership.GetUser%2A>sobrecarga que recebe um `userIsOnline` parâmetro, especifique um valor de `true` para atualizar o <xref:System.Web.Security.MembershipUser.LastActivityDate%2A>para o utilizador.</xref:System.Web.Security.MembershipUser.LastActivityDate%2A> </xref:System.Web.Security.Membership.GetUser%2A>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and sets the `userIsOnlineTimeWindow` attribute to 20 minutes.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"true\"  \n      enablePasswordReset=\"false\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Encrypted\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static int UserIsOnlineTimeWindow { get; }
    return:
      type: System.Int32
      description: "O número de minutos após a última atividade data/hora carimbo para um utilizador durante o qual o utilizador é considerado online."
  overload: System.Web.Security.Membership.UserIsOnlineTimeWindow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.ValidateUser(System.String,System.String)
  id: ValidateUser(System.String,System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: ValidateUser(String,String)
  nameWithType: Membership.ValidateUser(String,String)
  fullName: System.Web.Security.Membership.ValidateUser(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Verifica se o nome de utilizador fornecido e a palavra-passe são válidos."
  remarks: "ValidateUser fornece uma forma fácil para verificar um nome de utilizador e palavra-passe da origem de dados. Tenha em atenção que, se o `username` parâmetro está vazio ou `null`, um <xref:System.Web.HttpException>é emitida.</xref:System.Web.HttpException>"
  example:
  - "The following code example shows the login page for an ASP.NET application configured to use forms authentication and the <xref:System.Web.Security.Membership> class. If the supplied user credentials are invalid, a message is displayed to the user. Otherwise, the user is redirected to the originally requested URL by the <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> method.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/csharp/m-system.web.security.me_7_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/visualbasic/m-system.web.security.me_7_1.aspx)]"
  syntax:
    content: public static bool ValidateUser (string username, string password);
    parameters:
    - id: username
      type: System.String
      description: "O nome do utilizador para ser validado."
    - id: password
      type: System.String
      description: "A palavra-passe para o utilizador especificado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o nome de utilizador fornecido e a palavra-passe são válidos; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.ValidateUser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.ValidatingPassword
  id: ValidatingPassword
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: ValidatingPassword
  nameWithType: Membership.ValidatingPassword
  fullName: System.Web.Security.Membership.ValidatingPassword
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Ocorre quando um utilizador é criado, uma palavra-passe é alterada ou uma palavra-passe é reposta."
  remarks: "O <xref:System.Web.Security.MembershipProvider.ValidatingPassword>evento é desencadeado quando o <xref:System.Web.Security.MembershipProvider.CreateUser%2A>método, o <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>método, ou o <xref:System.Web.Security.MembershipProvider.ResetPassword%2A>método do fornecedor de membros é chamado.</xref:System.Web.Security.MembershipProvider.ResetPassword%2A> </xref:System.Web.Security.MembershipProvider.ChangePassword%2A> </xref:System.Web.Security.MembershipProvider.CreateUser%2A> </xref:System.Web.Security.MembershipProvider.ValidatingPassword>       Pode utilizar o <xref:System.Web.Security.MembershipProvider.ValidatingPassword>eventos para validar os formatos de palavra-passe e valores para os utilizadores de associação.</xref:System.Web.Security.MembershipProvider.ValidatingPassword>       Pode cancelar atual <xref:System.Web.Security.MembershipProvider.CreateUser%2A>, <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>, ou <xref:System.Web.Security.MembershipProvider.ResetPassword%2A>ação definindo a <xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A>propriedade o fornecido <xref:System.Web.Security.ValidatePasswordEventArgs>para `true` durante o <xref:System.Web.Security.MembershipProvider.ValidatingPassword>eventos.</xref:System.Web.Security.MembershipProvider.ValidatingPassword> </xref:System.Web.Security.ValidatePasswordEventArgs> </xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A> </xref:System.Web.Security.MembershipProvider.ResetPassword%2A> </xref:System.Web.Security.MembershipProvider.ChangePassword%2A> </xref:System.Web.Security.MembershipProvider.CreateUser%2A>       Se cancelar a ação atual, definindo o <xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A>propriedade `true`, pode definir o <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A>propriedade o fornecido <xref:System.Web.Security.ValidatePasswordEventArgs>a uma exceção que descreve o motivo da falha de validação de palavra-passe.</xref:System.Web.Security.ValidatePasswordEventArgs> </xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> </xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A> O método de chamada irá gerar a exceção que o <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A>propriedade está definida como.</xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> Se o <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A>propriedade é `null`, o autor da chamada irá gerar uma exceção de falha de validação de palavra-passe genérica.</xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A>"
  example:
  - "The following code example shows a <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event that validates the format of the password for a user and cancels the action if the password does not match the required format.  \n  \n [!code-cs[System.Web.Security.Membership#11](~/add/codesnippet/csharp/e-system.web.security.me_1.aspx)]\n [!code-vb[System.Web.Security.Membership#11](~/add/codesnippet/visualbasic/e-system.web.security.me_1.aspx)]"
  syntax:
    content: public static event System.Web.Security.MembershipValidatePasswordEventHandler ValidatingPassword;
    return:
      type: System.Web.Security.MembershipValidatePasswordEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Security.MembershipCreateUserException
  isExternal: true
  name: System.Web.Security.MembershipCreateUserException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.Security.Membership.ApplicationName
  parent: System.Web.Security.Membership
  isExternal: false
  name: ApplicationName
  nameWithType: Membership.ApplicationName
  fullName: System.Web.Security.Membership.ApplicationName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: CreateUser(String,String)
  nameWithType: Membership.CreateUser(String,String)
  fullName: System.Web.Security.Membership.CreateUser(String,String)
- uid: System.Web.Security.MembershipUser
  parent: System.Web.Security
  isExternal: true
  name: MembershipUser
  nameWithType: MembershipUser
  fullName: System.Web.Security.MembershipUser
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: CreateUser(String,String,String)
  nameWithType: Membership.CreateUser(String,String,String)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String)
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.Membership
  isExternal: false
  name: CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
  nameWithType: Membership.CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Security.MembershipCreateStatus
  parent: System.Web.Security
  isExternal: true
  name: MembershipCreateStatus
  nameWithType: MembershipCreateStatus
  fullName: System.Web.Security.MembershipCreateStatus
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.Membership
  isExternal: false
  name: CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  nameWithType: Membership.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
- uid: System.Web.Security.Membership.DeleteUser(System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: DeleteUser(String)
  nameWithType: Membership.DeleteUser(String)
  fullName: System.Web.Security.Membership.DeleteUser(String)
- uid: System.Web.Security.Membership.DeleteUser(System.String,System.Boolean)
  parent: System.Web.Security.Membership
  isExternal: false
  name: DeleteUser(String,Boolean)
  nameWithType: Membership.DeleteUser(String,Boolean)
  fullName: System.Web.Security.Membership.DeleteUser(String,Boolean)
- uid: System.Web.Security.Membership.EnablePasswordReset
  parent: System.Web.Security.Membership
  isExternal: false
  name: EnablePasswordReset
  nameWithType: Membership.EnablePasswordReset
  fullName: System.Web.Security.Membership.EnablePasswordReset
- uid: System.Web.Security.Membership.EnablePasswordRetrieval
  parent: System.Web.Security.Membership
  isExternal: false
  name: EnablePasswordRetrieval
  nameWithType: Membership.EnablePasswordRetrieval
  fullName: System.Web.Security.Membership.EnablePasswordRetrieval
- uid: System.Web.Security.Membership.FindUsersByEmail(System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByEmail(String)
  nameWithType: Membership.FindUsersByEmail(String)
  fullName: System.Web.Security.Membership.FindUsersByEmail(String)
- uid: System.Web.Security.MembershipUserCollection
  parent: System.Web.Security
  isExternal: true
  name: MembershipUserCollection
  nameWithType: MembershipUserCollection
  fullName: System.Web.Security.MembershipUserCollection
- uid: System.Web.Security.Membership.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByEmail(String,Int32,Int32,Int32)
  nameWithType: Membership.FindUsersByEmail(String,Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.FindUsersByEmail(String,Int32,Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Security.Membership.FindUsersByName(System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByName(String)
  nameWithType: Membership.FindUsersByName(String)
  fullName: System.Web.Security.Membership.FindUsersByName(String)
- uid: System.Web.Security.Membership.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByName(String,Int32,Int32,Int32)
  nameWithType: Membership.FindUsersByName(String,Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.FindUsersByName(String,Int32,Int32,Int32)
- uid: System.Web.Security.Membership.GeneratePassword(System.Int32,System.Int32)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GeneratePassword(Int32,Int32)
  nameWithType: Membership.GeneratePassword(Int32,Int32)
  fullName: System.Web.Security.Membership.GeneratePassword(Int32,Int32)
- uid: System.Web.Security.Membership.GetAllUsers
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetAllUsers()
  nameWithType: Membership.GetAllUsers()
  fullName: System.Web.Security.Membership.GetAllUsers()
- uid: System.Web.Security.Membership.GetAllUsers(System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetAllUsers(Int32,Int32,Int32)
  nameWithType: Membership.GetAllUsers(Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.GetAllUsers(Int32,Int32,Int32)
- uid: System.Web.Security.Membership.GetNumberOfUsersOnline
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetNumberOfUsersOnline()
  nameWithType: Membership.GetNumberOfUsersOnline()
  fullName: System.Web.Security.Membership.GetNumberOfUsersOnline()
- uid: System.Web.Security.Membership.GetUser
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser()
  nameWithType: Membership.GetUser()
  fullName: System.Web.Security.Membership.GetUser()
- uid: System.Web.Security.Membership.GetUser(System.Boolean)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser(Boolean)
  nameWithType: Membership.GetUser(Boolean)
  fullName: System.Web.Security.Membership.GetUser(Boolean)
- uid: System.Web.Security.Membership.GetUser(System.Object)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser(Object)
  nameWithType: Membership.GetUser(Object)
  fullName: System.Web.Security.Membership.GetUser(Object)
- uid: System.Web.Security.Membership.GetUser(System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser(String)
  nameWithType: Membership.GetUser(String)
  fullName: System.Web.Security.Membership.GetUser(String)
- uid: System.Web.Security.Membership.GetUser(System.Object,System.Boolean)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser(Object,Boolean)
  nameWithType: Membership.GetUser(Object,Boolean)
  fullName: System.Web.Security.Membership.GetUser(Object,Boolean)
- uid: System.Web.Security.Membership.GetUser(System.String,System.Boolean)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser(String,Boolean)
  nameWithType: Membership.GetUser(String,Boolean)
  fullName: System.Web.Security.Membership.GetUser(String,Boolean)
- uid: System.Web.Security.Membership.GetUserNameByEmail(System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUserNameByEmail(String)
  nameWithType: Membership.GetUserNameByEmail(String)
  fullName: System.Web.Security.Membership.GetUserNameByEmail(String)
- uid: System.Web.Security.Membership.HashAlgorithmType
  parent: System.Web.Security.Membership
  isExternal: false
  name: HashAlgorithmType
  nameWithType: Membership.HashAlgorithmType
  fullName: System.Web.Security.Membership.HashAlgorithmType
- uid: System.Web.Security.Membership.MaxInvalidPasswordAttempts
  parent: System.Web.Security.Membership
  isExternal: false
  name: MaxInvalidPasswordAttempts
  nameWithType: Membership.MaxInvalidPasswordAttempts
  fullName: System.Web.Security.Membership.MaxInvalidPasswordAttempts
- uid: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters
  parent: System.Web.Security.Membership
  isExternal: false
  name: MinRequiredNonAlphanumericCharacters
  nameWithType: Membership.MinRequiredNonAlphanumericCharacters
  fullName: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters
- uid: System.Web.Security.Membership.MinRequiredPasswordLength
  parent: System.Web.Security.Membership
  isExternal: false
  name: MinRequiredPasswordLength
  nameWithType: Membership.MinRequiredPasswordLength
  fullName: System.Web.Security.Membership.MinRequiredPasswordLength
- uid: System.Web.Security.Membership.PasswordAttemptWindow
  parent: System.Web.Security.Membership
  isExternal: false
  name: PasswordAttemptWindow
  nameWithType: Membership.PasswordAttemptWindow
  fullName: System.Web.Security.Membership.PasswordAttemptWindow
- uid: System.Web.Security.Membership.PasswordStrengthRegularExpression
  parent: System.Web.Security.Membership
  isExternal: false
  name: PasswordStrengthRegularExpression
  nameWithType: Membership.PasswordStrengthRegularExpression
  fullName: System.Web.Security.Membership.PasswordStrengthRegularExpression
- uid: System.Web.Security.Membership.Provider
  parent: System.Web.Security.Membership
  isExternal: false
  name: Provider
  nameWithType: Membership.Provider
  fullName: System.Web.Security.Membership.Provider
- uid: System.Web.Security.MembershipProvider
  parent: System.Web.Security
  isExternal: true
  name: MembershipProvider
  nameWithType: MembershipProvider
  fullName: System.Web.Security.MembershipProvider
- uid: System.Web.Security.Membership.Providers
  parent: System.Web.Security.Membership
  isExternal: false
  name: Providers
  nameWithType: Membership.Providers
  fullName: System.Web.Security.Membership.Providers
- uid: System.Web.Security.MembershipProviderCollection
  parent: System.Web.Security
  isExternal: true
  name: MembershipProviderCollection
  nameWithType: MembershipProviderCollection
  fullName: System.Web.Security.MembershipProviderCollection
- uid: System.Web.Security.Membership.RequiresQuestionAndAnswer
  parent: System.Web.Security.Membership
  isExternal: false
  name: RequiresQuestionAndAnswer
  nameWithType: Membership.RequiresQuestionAndAnswer
  fullName: System.Web.Security.Membership.RequiresQuestionAndAnswer
- uid: System.Web.Security.Membership.UpdateUser(System.Web.Security.MembershipUser)
  parent: System.Web.Security.Membership
  isExternal: false
  name: UpdateUser(MembershipUser)
  nameWithType: Membership.UpdateUser(MembershipUser)
  fullName: System.Web.Security.Membership.UpdateUser(MembershipUser)
- uid: System.Web.Security.Membership.UserIsOnlineTimeWindow
  parent: System.Web.Security.Membership
  isExternal: false
  name: UserIsOnlineTimeWindow
  nameWithType: Membership.UserIsOnlineTimeWindow
  fullName: System.Web.Security.Membership.UserIsOnlineTimeWindow
- uid: System.Web.Security.Membership.ValidateUser(System.String,System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: ValidateUser(String,String)
  nameWithType: Membership.ValidateUser(String,String)
  fullName: System.Web.Security.Membership.ValidateUser(String,String)
- uid: System.Web.Security.Membership.ValidatingPassword
  parent: System.Web.Security.Membership
  isExternal: false
  name: ValidatingPassword
  nameWithType: Membership.ValidatingPassword
  fullName: System.Web.Security.Membership.ValidatingPassword
- uid: System.Web.Security.MembershipValidatePasswordEventHandler
  parent: System.Web.Security
  isExternal: true
  name: MembershipValidatePasswordEventHandler
  nameWithType: MembershipValidatePasswordEventHandler
  fullName: System.Web.Security.MembershipValidatePasswordEventHandler
- uid: System.Web.Security.Membership.ApplicationName*
  parent: System.Web.Security.Membership
  isExternal: false
  name: ApplicationName
  nameWithType: Membership.ApplicationName
- uid: System.Web.Security.Membership.CreateUser*
  parent: System.Web.Security.Membership
  isExternal: false
  name: CreateUser
  nameWithType: Membership.CreateUser
- uid: System.Web.Security.Membership.DeleteUser*
  parent: System.Web.Security.Membership
  isExternal: false
  name: DeleteUser
  nameWithType: Membership.DeleteUser
- uid: System.Web.Security.Membership.EnablePasswordReset*
  parent: System.Web.Security.Membership
  isExternal: false
  name: EnablePasswordReset
  nameWithType: Membership.EnablePasswordReset
- uid: System.Web.Security.Membership.EnablePasswordRetrieval*
  parent: System.Web.Security.Membership
  isExternal: false
  name: EnablePasswordRetrieval
  nameWithType: Membership.EnablePasswordRetrieval
- uid: System.Web.Security.Membership.FindUsersByEmail*
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByEmail
  nameWithType: Membership.FindUsersByEmail
- uid: System.Web.Security.Membership.FindUsersByName*
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByName
  nameWithType: Membership.FindUsersByName
- uid: System.Web.Security.Membership.GeneratePassword*
  parent: System.Web.Security.Membership
  isExternal: false
  name: GeneratePassword
  nameWithType: Membership.GeneratePassword
- uid: System.Web.Security.Membership.GetAllUsers*
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetAllUsers
  nameWithType: Membership.GetAllUsers
- uid: System.Web.Security.Membership.GetNumberOfUsersOnline*
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetNumberOfUsersOnline
  nameWithType: Membership.GetNumberOfUsersOnline
- uid: System.Web.Security.Membership.GetUser*
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser
  nameWithType: Membership.GetUser
- uid: System.Web.Security.Membership.GetUserNameByEmail*
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUserNameByEmail
  nameWithType: Membership.GetUserNameByEmail
- uid: System.Web.Security.Membership.HashAlgorithmType*
  parent: System.Web.Security.Membership
  isExternal: false
  name: HashAlgorithmType
  nameWithType: Membership.HashAlgorithmType
- uid: System.Web.Security.Membership.MaxInvalidPasswordAttempts*
  parent: System.Web.Security.Membership
  isExternal: false
  name: MaxInvalidPasswordAttempts
  nameWithType: Membership.MaxInvalidPasswordAttempts
- uid: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters*
  parent: System.Web.Security.Membership
  isExternal: false
  name: MinRequiredNonAlphanumericCharacters
  nameWithType: Membership.MinRequiredNonAlphanumericCharacters
- uid: System.Web.Security.Membership.MinRequiredPasswordLength*
  parent: System.Web.Security.Membership
  isExternal: false
  name: MinRequiredPasswordLength
  nameWithType: Membership.MinRequiredPasswordLength
- uid: System.Web.Security.Membership.PasswordAttemptWindow*
  parent: System.Web.Security.Membership
  isExternal: false
  name: PasswordAttemptWindow
  nameWithType: Membership.PasswordAttemptWindow
- uid: System.Web.Security.Membership.PasswordStrengthRegularExpression*
  parent: System.Web.Security.Membership
  isExternal: false
  name: PasswordStrengthRegularExpression
  nameWithType: Membership.PasswordStrengthRegularExpression
- uid: System.Web.Security.Membership.Provider*
  parent: System.Web.Security.Membership
  isExternal: false
  name: Provider
  nameWithType: Membership.Provider
- uid: System.Web.Security.Membership.Providers*
  parent: System.Web.Security.Membership
  isExternal: false
  name: Providers
  nameWithType: Membership.Providers
- uid: System.Web.Security.Membership.RequiresQuestionAndAnswer*
  parent: System.Web.Security.Membership
  isExternal: false
  name: RequiresQuestionAndAnswer
  nameWithType: Membership.RequiresQuestionAndAnswer
- uid: System.Web.Security.Membership.UpdateUser*
  parent: System.Web.Security.Membership
  isExternal: false
  name: UpdateUser
  nameWithType: Membership.UpdateUser
- uid: System.Web.Security.Membership.UserIsOnlineTimeWindow*
  parent: System.Web.Security.Membership
  isExternal: false
  name: UserIsOnlineTimeWindow
  nameWithType: Membership.UserIsOnlineTimeWindow
- uid: System.Web.Security.Membership.ValidateUser*
  parent: System.Web.Security.Membership
  isExternal: false
  name: ValidateUser
  nameWithType: Membership.ValidateUser
