### YamlMime:ManagedReference
items:
- uid: System.Web.Configuration.HttpRuntimeSection
  id: HttpRuntimeSection
  children:
  - System.Web.Configuration.HttpRuntimeSection.#ctor
  - System.Web.Configuration.HttpRuntimeSection.AllowDynamicModuleRegistration
  - System.Web.Configuration.HttpRuntimeSection.ApartmentThreading
  - System.Web.Configuration.HttpRuntimeSection.AppRequestQueueLimit
  - System.Web.Configuration.HttpRuntimeSection.AsyncPreloadMode
  - System.Web.Configuration.HttpRuntimeSection.DefaultRegexMatchTimeout
  - System.Web.Configuration.HttpRuntimeSection.DelayNotificationTimeout
  - System.Web.Configuration.HttpRuntimeSection.Enable
  - System.Web.Configuration.HttpRuntimeSection.EnableHeaderChecking
  - System.Web.Configuration.HttpRuntimeSection.EnableKernelOutputCache
  - System.Web.Configuration.HttpRuntimeSection.EnableVersionHeader
  - System.Web.Configuration.HttpRuntimeSection.EncoderType
  - System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout
  - System.Web.Configuration.HttpRuntimeSection.FcnMode
  - System.Web.Configuration.HttpRuntimeSection.MaxQueryStringLength
  - System.Web.Configuration.HttpRuntimeSection.MaxRequestLength
  - System.Web.Configuration.HttpRuntimeSection.MaxUrlLength
  - System.Web.Configuration.HttpRuntimeSection.MaxWaitChangeNotification
  - System.Web.Configuration.HttpRuntimeSection.MinFreeThreads
  - System.Web.Configuration.HttpRuntimeSection.MinLocalRequestFreeThreads
  - System.Web.Configuration.HttpRuntimeSection.Properties
  - System.Web.Configuration.HttpRuntimeSection.RelaxedUrlToFileSystemMapping
  - System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold
  - System.Web.Configuration.HttpRuntimeSection.RequestPathInvalidCharacters
  - System.Web.Configuration.HttpRuntimeSection.RequestValidationMode
  - System.Web.Configuration.HttpRuntimeSection.RequestValidationType
  - System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath
  - System.Web.Configuration.HttpRuntimeSection.SendCacheControlHeader
  - System.Web.Configuration.HttpRuntimeSection.SetReadOnly
  - System.Web.Configuration.HttpRuntimeSection.ShutdownTimeout
  - System.Web.Configuration.HttpRuntimeSection.TargetFramework
  - System.Web.Configuration.HttpRuntimeSection.UseFullyQualifiedRedirectUrl
  - System.Web.Configuration.HttpRuntimeSection.WaitChangeNotification
  langs:
  - csharp
  name: HttpRuntimeSection
  nameWithType: HttpRuntimeSection
  fullName: System.Web.Configuration.HttpRuntimeSection
  type: Class
  summary: "Configures the ASP.NET HTTP runtime. This class cannot be inherited."
  remarks: "The HttpRuntimeSection allows you to handle those parameters that affect the behavior of the ASP.NET runtime.       It refers to the node in the configuration file that is indicated by the  element and can be used at any level in the configuration hierarchy.       The HttpRuntimeSection section contains directives that manage the following:      -   Request execution timeouts.      -   Directives to thread scheduling at the application level.      -   Directives that govern application queue limits.      -   Request length.       When running more than one application in a single process, you should lock down this section so that applications cannot elevate their relative priority to one another."
  syntax:
    content: 'public sealed class HttpRuntimeSection : System.Configuration.ConfigurationSection'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  - System.Configuration.ConfigurationSection
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  - System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)
  - System.Configuration.ConfigurationSection.GetRuntimeObject
  - System.Configuration.ConfigurationSection.IsModified
  - System.Configuration.ConfigurationSection.ResetModified
  - System.Configuration.ConfigurationSection.SectionInformation
  - System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)
  - System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)
  - System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)
  platform:
  - net462
- uid: System.Web.Configuration.HttpRuntimeSection.#ctor
  id: '#ctor'
  parent: System.Web.Configuration.HttpRuntimeSection
  langs:
  - csharp
  name: HttpRuntimeSection()
  nameWithType: HttpRuntimeSection.HttpRuntimeSection()
  fullName: System.Web.Configuration.HttpRuntimeSection.HttpRuntimeSection()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  syntax:
    content: public HttpRuntimeSection ();
    parameters: []
  overload: System.Web.Configuration.HttpRuntimeSection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpRuntimeSection.AllowDynamicModuleRegistration
  id: AllowDynamicModuleRegistration
  parent: System.Web.Configuration.HttpRuntimeSection
  langs:
  - csharp
  name: AllowDynamicModuleRegistration
  nameWithType: HttpRuntimeSection.AllowDynamicModuleRegistration
  fullName: System.Web.Configuration.HttpRuntimeSection.AllowDynamicModuleRegistration
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets a value that indicates whether <xref:System.Web.HttpApplication.RegisterModule*> method calls are allowed. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  syntax:
    content: public bool AllowDynamicModuleRegistration { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <xref:System.Web.HttpApplication.RegisterModule*> method calls are allowed; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Configuration.HttpRuntimeSection.AllowDynamicModuleRegistration*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpRuntimeSection.ApartmentThreading
  id: ApartmentThreading
  parent: System.Web.Configuration.HttpRuntimeSection
  langs:
  - csharp
  name: ApartmentThreading
  nameWithType: HttpRuntimeSection.ApartmentThreading
  fullName: System.Web.Configuration.HttpRuntimeSection.ApartmentThreading
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets a value that indicates whether application apartment threading is enabled."
  remarks: "The default value is `false`."
  syntax:
    content: public bool ApartmentThreading { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if application apartment threading is enabled; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Configuration.HttpRuntimeSection.ApartmentThreading*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpRuntimeSection.AppRequestQueueLimit
  id: AppRequestQueueLimit
  parent: System.Web.Configuration.HttpRuntimeSection
  langs:
  - csharp
  name: AppRequestQueueLimit
  nameWithType: HttpRuntimeSection.AppRequestQueueLimit
  fullName: System.Web.Configuration.HttpRuntimeSection.AppRequestQueueLimit
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets a value that indicates the maximum number of requests that ASP.NET queues for the application."
  remarks: "ASP.NET queues requests when there are not enough free threads to process them.      > [!NOTE] >  When the number of requests queued exceeds the limit imposed by this setting, incoming requests will be rejected with a &quot;503 - Server Too Busy&quot; error."
  example:
  - "The following example shows how to use the AppRequestQueueLimit property.  \n  \n [!CODE [System.Web.Configuration.HttpRuntimeSection#16](../CodeSnippet/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection#16)]"
  syntax:
    content: public int AppRequestQueueLimit { get; set; }
    return:
      type: System.Int32
      description: "The maximum number of requests that can be queued."
  overload: System.Web.Configuration.HttpRuntimeSection.AppRequestQueueLimit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpRuntimeSection.AsyncPreloadMode
  id: AsyncPreloadMode
  parent: System.Web.Configuration.HttpRuntimeSection
  langs:
  - csharp
  name: AsyncPreloadMode
  nameWithType: HttpRuntimeSection.AsyncPreloadMode
  fullName: System.Web.Configuration.HttpRuntimeSection.AsyncPreloadMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets the mode of the request entity that is asynchronously preloaded."
  remarks: "This property must to be set before <xref:System.Web.RequestNotification>is set in the ASP.NET pipeline."
  syntax:
    content: public System.Web.Configuration.AsyncPreloadModeFlags AsyncPreloadMode { get; set; }
    return:
      type: System.Web.Configuration.AsyncPreloadModeFlags
      description: "The mode of the request entity."
  overload: System.Web.Configuration.HttpRuntimeSection.AsyncPreloadMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpRuntimeSection.DefaultRegexMatchTimeout
  id: DefaultRegexMatchTimeout
  parent: System.Web.Configuration.HttpRuntimeSection
  langs:
  - csharp
  name: DefaultRegexMatchTimeout
  nameWithType: HttpRuntimeSection.DefaultRegexMatchTimeout
  fullName: System.Web.Configuration.HttpRuntimeSection.DefaultRegexMatchTimeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets the amount of time that a regular expression is allowed in order to perform a match."
  syntax:
    content: public TimeSpan DefaultRegexMatchTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "The time that is allowed for regular-expression matching."
  overload: System.Web.Configuration.HttpRuntimeSection.DefaultRegexMatchTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpRuntimeSection.DelayNotificationTimeout
  id: DelayNotificationTimeout
  parent: System.Web.Configuration.HttpRuntimeSection
  langs:
  - csharp
  name: DelayNotificationTimeout
  nameWithType: HttpRuntimeSection.DelayNotificationTimeout
  fullName: System.Web.Configuration.HttpRuntimeSection.DelayNotificationTimeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets the change notification delay."
  remarks: "You can address the problem caused by some antivirus applications, when writing information back to the scanned files, by setting the DelayNotificationTimeout property.      > [!NOTE] >  The problem occurs because file changes caused by antivirus scanning cannot be distinguished from the ones made by the user. The end result is the restart of the application whose files are being scanned."
  example:
  - "The following example shows how to use the DelayNotificationTimeout property.  \n  \n [!CODE [System.Web.Configuration.HttpRuntimeSection#11](../CodeSnippet/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection#11)]"
  syntax:
    content: public TimeSpan DelayNotificationTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "The time, in seconds, that specifies the change notification delay."
  overload: System.Web.Configuration.HttpRuntimeSection.DelayNotificationTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpRuntimeSection.Enable
  id: Enable
  parent: System.Web.Configuration.HttpRuntimeSection
  langs:
  - csharp
  name: Enable
  nameWithType: HttpRuntimeSection.Enable
  fullName: System.Web.Configuration.HttpRuntimeSection.Enable
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets a value that indicates whether the application domain is enabled."
  remarks: "This setting affects the application domain or domains at the current node level and below."
  example:
  - "The following example shows how to use the Enable property.  \n  \n [!CODE [System.Web.Configuration.HttpRuntimeSection#14](../CodeSnippet/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection#14)]"
  syntax:
    content: public bool Enable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the application domain is enabled; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default value is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Configuration.HttpRuntimeSection.Enable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpRuntimeSection.EnableHeaderChecking
  id: EnableHeaderChecking
  parent: System.Web.Configuration.HttpRuntimeSection
  langs:
  - csharp
  name: EnableHeaderChecking
  nameWithType: HttpRuntimeSection.EnableHeaderChecking
  fullName: System.Web.Configuration.HttpRuntimeSection.EnableHeaderChecking
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets a value that indicates whether the header checking is enabled."
  remarks: "The purpose of this property is to enable encoding of the carriage return and newline characters, `\\r` and `\\n`, that are found in response headers.  \n  \n In outbound response headers, the characters that are represented by the codes 0x1F and below are encoded and also the character 0x7F (delete character). The only exception is that the character 0x09 (the tab character) is unmodified.  \n  \n This encoding can help to avoid injection attacks that exploit an application that echoes untrusted data contained by the header.  \n  \n> [!NOTE]\n>  This property does not apply to the status line itself (status code and status description), but should apply to other headers. Although  can be set at any level, this property is only applicable at the machine and application level.  \n  \n When this property is `true`, which is the default, the `\\r` or `\\n` characters found in a response header are encoded to `%0d` and `%0a`. This defeats header-injection attacks by making the injected material part of the same header line. This might break the response but should not open attack vectors against the client. Echoing back untrusted data is never a good idea in any situation, though.  \n  \n> [!IMPORTANT]\n>  HTTP header continuations rely on headers spanning multiple lines and require new lines in them. If you need to use header continuations, you need to set the EnableHeaderChecking property to `false`. Because there is a performance impact from looking at headers, if you are certain you are already doing the right checks, turning off this feature can improve the performance of your application. Before you disable this feature, be sure you are already taking the right precautions in this area."
  example:
  - "The following example shows how to use the EnableHeaderChecking property.  \n  \n [!CODE [System.Web.Configuration.HttpRuntimeSection#20](../CodeSnippet/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection#20)]"
  syntax:
    content: public bool EnableHeaderChecking { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the header checking is enabled; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default value is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Configuration.HttpRuntimeSection.EnableHeaderChecking*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpRuntimeSection.EnableKernelOutputCache
  id: EnableKernelOutputCache
  parent: System.Web.Configuration.HttpRuntimeSection
  langs:
  - csharp
  name: EnableKernelOutputCache
  nameWithType: HttpRuntimeSection.EnableKernelOutputCache
  fullName: System.Web.Configuration.HttpRuntimeSection.EnableKernelOutputCache
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets a value that indicates whether output caching is enabled."
  remarks: "In order to cache a response, the following criteria need to be met:      -   Caching must be explicitly enabled by a page directive or by the caching API.      -   Caching must have an expiration policy so that the kernel knows when to discard it.      -   Caching cannot have any variable headers or parameters.      -   The request must not require any authentication.      > [!NOTE] >  This property is relevant only when Internet Information Services (IIS) version 6.0 or later is installed."
  example:
  - "The following example shows how to use the EnableKernelOutputCache property.  \n  \n [!CODE [System.Web.Configuration.HttpRuntimeSection#3](../CodeSnippet/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection#3)]"
  syntax:
    content: public bool EnableKernelOutputCache { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if output caching is enabled; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default value is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Configuration.HttpRuntimeSection.EnableKernelOutputCache*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpRuntimeSection.EnableVersionHeader
  id: EnableVersionHeader
  parent: System.Web.Configuration.HttpRuntimeSection
  langs:
  - csharp
  name: EnableVersionHeader
  nameWithType: HttpRuntimeSection.EnableVersionHeader
  fullName: System.Web.Configuration.HttpRuntimeSection.EnableVersionHeader
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets a value that indicates whether ASP.NET should output a version header."
  remarks: "This attribute is used by Visual Studio to determine which version of ASP.NET is in use. It is not necessary for production sites and can be disabled."
  example:
  - "The following example shows how to use the EnableVersionHeader property.  \n  \n [!CODE [System.Web.Configuration.HttpRuntimeSection#17](../CodeSnippet/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection#17)]"
  syntax:
    content: public bool EnableVersionHeader { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the output of the version header is enabled; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default value is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Configuration.HttpRuntimeSection.EnableVersionHeader*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpRuntimeSection.EncoderType
  id: EncoderType
  parent: System.Web.Configuration.HttpRuntimeSection
  langs:
  - csharp
  name: EncoderType
  nameWithType: HttpRuntimeSection.EncoderType
  fullName: System.Web.Configuration.HttpRuntimeSection.EncoderType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  syntax:
    content: public string EncoderType { get; set; }
    return:
      type: System.String
      description: "To be added."
  overload: System.Web.Configuration.HttpRuntimeSection.EncoderType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout
  id: ExecutionTimeout
  parent: System.Web.Configuration.HttpRuntimeSection
  langs:
  - csharp
  name: ExecutionTimeout
  nameWithType: HttpRuntimeSection.ExecutionTimeout
  fullName: System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets the allowed execution time for the request."
  remarks: "The ExecutionTimeout property indicates the maximum number of seconds a request is allowed to execute before being automatically shut down by ASP.NET. The default is 110 seconds. This time-out applies only if the debug attribute in the  element is set to `false`.       If the time-out expires an exception is raised. You can record the related information in the Application folder of the Event Log. You do this by enabling the application health monitoring in the  configuration element."
  example:
  - "The following example shows how to use the ExecutionTimeout property.  \n  \n [!CODE [System.Web.Configuration.HttpRuntimeSection#10](../CodeSnippet/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection#10)]"
  syntax:
    content: public TimeSpan ExecutionTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan> value that indicates the allowed execution time for the request."
  overload: System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The request execution time exceeded the limit set by the execution time-out."
  platform:
  - net462
- uid: System.Web.Configuration.HttpRuntimeSection.FcnMode
  id: FcnMode
  parent: System.Web.Configuration.HttpRuntimeSection
  langs:
  - csharp
  name: FcnMode
  nameWithType: HttpRuntimeSection.FcnMode
  fullName: System.Web.Configuration.HttpRuntimeSection.FcnMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  syntax:
    content: public System.Web.Configuration.FcnMode FcnMode { get; set; }
    return:
      type: System.Web.Configuration.FcnMode
      description: "To be added."
  overload: System.Web.Configuration.HttpRuntimeSection.FcnMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpRuntimeSection.MaxQueryStringLength
  id: MaxQueryStringLength
  parent: System.Web.Configuration.HttpRuntimeSection
  langs:
  - csharp
  name: MaxQueryStringLength
  nameWithType: HttpRuntimeSection.MaxQueryStringLength
  fullName: System.Web.Configuration.HttpRuntimeSection.MaxQueryStringLength
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets the maximum possible length, in number of characters, of a query string in an HTTP request."
  remarks: "The value of the MaxQueryStringLength property can be any integer, zero or larger. If the length of a query string exceeds the size limit, ASP.NET returns an `HTTP 400` (Bad Request) status code.  \n  \n> [!NOTE]\n>  Extremely small values can make a Web site unusable.  \n  \n You can set this value in a configuration file by setting the `maxQueryStringLength` attribute of the `httpRuntime` element. For more information, see [httpRuntime Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/e9b81350-8aaf-47cc-9843-5f7d0c59f369).  \n  \n> [!NOTE]\n>  There is also an IIS setting that controls query string length. See the `maxQueryString` attribute in [Request Limits \\<requestLimits>](http://www.iis.net/ConfigReference/system.webServer/security/requestFiltering/requestLimits)."
  syntax:
    content: public int MaxQueryStringLength { get; set; }
    return:
      type: System.Int32
      description: "The maximum length of the query string, in number of characters. The default is 2048."
  overload: System.Web.Configuration.HttpRuntimeSection.MaxQueryStringLength*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpRuntimeSection.MaxRequestLength
  id: MaxRequestLength
  parent: System.Web.Configuration.HttpRuntimeSection
  langs:
  - csharp
  name: MaxRequestLength
  nameWithType: HttpRuntimeSection.MaxRequestLength
  fullName: System.Web.Configuration.HttpRuntimeSection.MaxRequestLength
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets the maximum request size."
  remarks: "The MaxRequestLength property specifies the limit for the buffering threshold of the input stream. For example, this limit can be used to prevent denial of service attacks that are caused by users who post large files to the server.       The value assigned to this property should be greater or equal to value assigned to the <xref:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold%2A> property."
  example:
  - "The following example shows how to obtain the current MaxRequestLength property value.  \n  \n [!CODE [System.Web.Configuration.HttpRuntimeSection#19](../CodeSnippet/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection#19)]"
  syntax:
    content: public int MaxRequestLength { get; set; }
    return:
      type: System.Int32
      description: "The maximum request size in kilobytes. The default size is 4096 KB (4 MB)."
  overload: System.Web.Configuration.HttpRuntimeSection.MaxRequestLength*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "The selected value is less than <xref:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold*>."
  platform:
  - net462
- uid: System.Web.Configuration.HttpRuntimeSection.MaxUrlLength
  id: MaxUrlLength
  parent: System.Web.Configuration.HttpRuntimeSection
  langs:
  - csharp
  name: MaxUrlLength
  nameWithType: HttpRuntimeSection.MaxUrlLength
  fullName: System.Web.Configuration.HttpRuntimeSection.MaxUrlLength
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  syntax:
    content: public int MaxUrlLength { get; set; }
    return:
      type: System.Int32
      description: "To be added."
  overload: System.Web.Configuration.HttpRuntimeSection.MaxUrlLength*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpRuntimeSection.MaxWaitChangeNotification
  id: MaxWaitChangeNotification
  parent: System.Web.Configuration.HttpRuntimeSection
  langs:
  - csharp
  name: MaxWaitChangeNotification
  nameWithType: HttpRuntimeSection.MaxWaitChangeNotification
  fullName: System.Web.Configuration.HttpRuntimeSection.MaxWaitChangeNotification
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets the time interval between the first change notification and the time at which the application domain is restarted."
  remarks: "A suggested value for the MaxWaitChangeNotification property would exceed the length of time to complete a copy during the deployment process.      > [!NOTE] >  The content might appear cached if you view it immediately after a copy-and-deploy process. This is typical behavior. The changes take effect when the wait period that you specified has elapsed."
  example:
  - "The following example shows how to use the MaxWaitChangeNotification property.  \n  \n [!CODE [System.Web.Configuration.HttpRuntimeSection#4](../CodeSnippet/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection#4)]"
  syntax:
    content: public int MaxWaitChangeNotification { get; set; }
    return:
      type: System.Int32
      description: "The maximum time interval, in seconds, from the first change notification and the time when the application domain is restarted."
  overload: System.Web.Configuration.HttpRuntimeSection.MaxWaitChangeNotification*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpRuntimeSection.MinFreeThreads
  id: MinFreeThreads
  parent: System.Web.Configuration.HttpRuntimeSection
  langs:
  - csharp
  name: MinFreeThreads
  nameWithType: HttpRuntimeSection.MinFreeThreads
  fullName: System.Web.Configuration.HttpRuntimeSection.MinFreeThreads
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets the minimum number of threads that must be free before a request for resources in this configuration scope can be serviced."
  remarks: "The MinFreeThreads property defines the minimum number of free threads to execute a request. If a sufficient number of threads are not available, the request will remain queued and periodic checks for thread availability will continue until the required amount of threads are present. The default value is `8`.      > [!NOTE] >  ASP.NET keeps this many threads free for requests that require additional threads to complete their processing."
  example:
  - "The following example shows how to use the MinFreeThreads property.  \n  \n [!CODE [System.Web.Configuration.HttpRuntimeSection#8](../CodeSnippet/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection#8)]"
  syntax:
    content: public int MinFreeThreads { get; set; }
    return:
      type: System.Int32
      description: "The minimum number of free threads in the common language runtime (CLR) thread pool before a request in this configuration scope will be serviced. The default value is `8`."
  overload: System.Web.Configuration.HttpRuntimeSection.MinFreeThreads*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpRuntimeSection.MinLocalRequestFreeThreads
  id: MinLocalRequestFreeThreads
  parent: System.Web.Configuration.HttpRuntimeSection
  langs:
  - csharp
  name: MinLocalRequestFreeThreads
  nameWithType: HttpRuntimeSection.MinLocalRequestFreeThreads
  fullName: System.Web.Configuration.HttpRuntimeSection.MinLocalRequestFreeThreads
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets the minimum number of free threads required to service a local request."
  remarks: "The MinLocalRequestFreeThreads property defines the number of free threads that ASP.NET keeps available to allow execution of new local requests. The intent is to avoid a possible deadlock with recursive reentry into the Web server."
  example:
  - "The following example shows how to use the MinLocalRequestFreeThreads property.  \n  \n [!CODE [System.Web.Configuration.HttpRuntimeSection#5](../CodeSnippet/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection#5)]"
  syntax:
    content: public int MinLocalRequestFreeThreads { get; set; }
    return:
      type: System.Int32
      description: "The minimum number of free threads assigned to local requests. The default value is 4."
  overload: System.Web.Configuration.HttpRuntimeSection.MinLocalRequestFreeThreads*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpRuntimeSection.Properties
  id: Properties
  parent: System.Web.Configuration.HttpRuntimeSection
  langs:
  - csharp
  name: Properties
  nameWithType: HttpRuntimeSection.Properties
  fullName: System.Web.Configuration.HttpRuntimeSection.Properties
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "To be added."
  overload: System.Web.Configuration.HttpRuntimeSection.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpRuntimeSection.RelaxedUrlToFileSystemMapping
  id: RelaxedUrlToFileSystemMapping
  parent: System.Web.Configuration.HttpRuntimeSection
  langs:
  - csharp
  name: RelaxedUrlToFileSystemMapping
  nameWithType: HttpRuntimeSection.RelaxedUrlToFileSystemMapping
  fullName: System.Web.Configuration.HttpRuntimeSection.RelaxedUrlToFileSystemMapping
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets a value that indicates whether the URL in an HTTP request is required to be a valid Windows file path."
  remarks: "The RelaxedUrlToFileSystemMapping property determines how the URL in an incoming HTTP request will be validated. If this property is `false`, the URL is validated by using the same rules that determine whether a Windows file system path is valid.       You can set this value in a configuration file by setting the RelaxedUrlToFileSystemMapping attribute of the `httpRuntime` element. For more information, see [httpRuntime Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/e9b81350-8aaf-47cc-9843-5f7d0c59f369)."
  syntax:
    content: public bool RelaxedUrlToFileSystemMapping { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the URL does not have to comply with Windows path rules; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Configuration.HttpRuntimeSection.RelaxedUrlToFileSystemMapping*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold
  id: RequestLengthDiskThreshold
  parent: System.Web.Configuration.HttpRuntimeSection
  langs:
  - csharp
  name: RequestLengthDiskThreshold
  nameWithType: HttpRuntimeSection.RequestLengthDiskThreshold
  fullName: System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets the input-stream buffering threshold."
  remarks: "The RequestLengthDiskThreshold property specifies the input-stream buffering threshold limit in number of bytes. Its value should not exceed the <xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A> property value. After a request entity exceeds this threshold, it is buffered transparently onto disk."
  example:
  - "The following example shows how to use the RequestLengthDiskThreshold property.  \n  \n [!CODE [System.Web.Configuration.HttpRuntimeSection#12](../CodeSnippet/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection#12)]"
  syntax:
    content: public int RequestLengthDiskThreshold { get; set; }
    return:
      type: System.Int32
      description: "The number of bytes that indicate the input-stream buffering threshold. The default is 80 kilobytes."
  overload: System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "The selected value is greater than <xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength*>."
  platform:
  - net462
- uid: System.Web.Configuration.HttpRuntimeSection.RequestPathInvalidCharacters
  id: RequestPathInvalidCharacters
  parent: System.Web.Configuration.HttpRuntimeSection
  langs:
  - csharp
  name: RequestPathInvalidCharacters
  nameWithType: HttpRuntimeSection.RequestPathInvalidCharacters
  fullName: System.Web.Configuration.HttpRuntimeSection.RequestPathInvalidCharacters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  syntax:
    content: public string RequestPathInvalidCharacters { get; set; }
    return:
      type: System.String
      description: "To be added."
  overload: System.Web.Configuration.HttpRuntimeSection.RequestPathInvalidCharacters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpRuntimeSection.RequestValidationMode
  id: RequestValidationMode
  parent: System.Web.Configuration.HttpRuntimeSection
  langs:
  - csharp
  name: RequestValidationMode
  nameWithType: HttpRuntimeSection.RequestValidationMode
  fullName: System.Web.Configuration.HttpRuntimeSection.RequestValidationMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets a version number that indicates which ASP.NET version-specific approach to validation will be used."
  remarks: "The RequestValidationMode property specifies which ASP.NET approach to validation will be used. This can be the algorithm that is used in versions of ASP.NET earlier than version 4, or the version that is used in [!INCLUDE[net_v40_long](../Token/net_v40_long_md.md)]. The property can be set to the following values:      -   `4.5 (the default).` In this mode, values are lazily loaded, that is, they are not read until they are requested.      -   `4.0` The <xref:System.Web.HttpRequest> object internally sets a flag that indicates that request validation should be triggered whenever any HTTP request data is accessed. This guarantees that the request validation is triggered before data such as cookies and URLs are accessed during the request. The request validation settings of the  element (if any) in the configuration file or of the  directive in an individual page are ignored.      -   `2.0`. Request validation is enabled only for pages, not for all HTTP requests. In addition, the request validation settings of the  element (if any) in the configuration file or of the  directive in an individual page are used to determine which page requests to validate.       The value that you assign to this property is not validated to match a specific version of ASP.NET. Any numeric value smaller than `4.0` (for example, `3.7`, `2.9`, or `2.0`) is interpreted as `2.0`. Any number larger than `4.5` is interpreted as `4.5`.       To set this value in a configuration file, you can assign a value to the `requestValidationMode` attribute of the `httpRuntime` element. For more information, see [httpRuntime Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/e9b81350-8aaf-47cc-9843-5f7d0c59f369)."
  syntax:
    content: public Version RequestValidationMode { get; set; }
    return:
      type: System.Version
      description: "A value that indicates which ASP.NET version-specific approach to validation will be used. The default is `4.5`."
  overload: System.Web.Configuration.HttpRuntimeSection.RequestValidationMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpRuntimeSection.RequestValidationType
  id: RequestValidationType
  parent: System.Web.Configuration.HttpRuntimeSection
  langs:
  - csharp
  name: RequestValidationType
  nameWithType: HttpRuntimeSection.RequestValidationType
  fullName: System.Web.Configuration.HttpRuntimeSection.RequestValidationType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets the name of a type that is used to validate HTTP requests."
  remarks: "To customize ASP.NET request validation behavior, you can create a class that inherits from the <xref:System.Web.Util.RequestValidator> type. In the configuration file for an application, you then set the `requestValidationType` attribute of the `httpRuntime` element to the fully qualified string name of the custom type. For more information, see [httpRuntime Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/e9b81350-8aaf-47cc-9843-5f7d0c59f369)."
  syntax:
    content: public string RequestValidationType { get; set; }
    return:
      type: System.String
      description: "The name of a type that handles request validation tasks. The default is the fully qualified name of the <xref href=&quot;System.Web.Util.RequestValidator&quot;></xref> type that ASP.NET uses for validation."
  overload: System.Web.Configuration.HttpRuntimeSection.RequestValidationType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath
  id: RequireRootedSaveAsPath
  parent: System.Web.Configuration.HttpRuntimeSection
  langs:
  - csharp
  name: RequireRootedSaveAsPath
  nameWithType: HttpRuntimeSection.RequireRootedSaveAsPath
  fullName: System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets a value that indicates whether the file name must be a fully qualified physical file path."
  remarks: "The RequireRootedSaveAsPath property specifies whether the file name argument to `SaveAs` methods must be a rooted path. The ASP.NET process must have permission to create files in the specified location.       For more information, see the save methods defined in the <xref:System.Configuration.Configuration> class."
  example:
  - "The following example shows how to use the RequireRootedSaveAsPath property.  \n  \n [!CODE [System.Web.Configuration.HttpRuntimeSection#7](../CodeSnippet/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection#7)]"
  syntax:
    content: public bool RequireRootedSaveAsPath { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the file name must be a fully qualified physical file path; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default value is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpRuntimeSection.SendCacheControlHeader
  id: SendCacheControlHeader
  parent: System.Web.Configuration.HttpRuntimeSection
  langs:
  - csharp
  name: SendCacheControlHeader
  nameWithType: HttpRuntimeSection.SendCacheControlHeader
  fullName: System.Web.Configuration.HttpRuntimeSection.SendCacheControlHeader
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets a value that indicates whether the `cache-control:private` header is sent as part of the HTTP response."
  remarks: "The <xref:System.Web.HttpResponse> class checks both the SendCacheControlHeader property and the <xref:System.Web.Configuration.OutputCacheSection.SendCacheControlHeader%2A?displayProperty=fullName> property to determine whether to send the `cache-control:private` header in the HTTP response. If either property is set to `false`, the header will not be sent. When the cache-control header is set to `private`, then the client will not cache the response in a shared cache.       Support for the SendCacheControlHeader property in the <xref:System.Web.Configuration.HttpRuntimeSection> class is provided for compatibility with legacy applications; this property is obsolete in the .NET Framework version 2.0. For more information, see the <xref:System.Web.Configuration.OutputCacheSection> class."
  syntax:
    content: public bool SendCacheControlHeader { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the `cache-control:private` header is to be sent; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default value is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Configuration.HttpRuntimeSection.SendCacheControlHeader*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpRuntimeSection.SetReadOnly
  id: SetReadOnly
  parent: System.Web.Configuration.HttpRuntimeSection
  langs:
  - csharp
  name: SetReadOnly()
  nameWithType: HttpRuntimeSection.SetReadOnly()
  fullName: System.Web.Configuration.HttpRuntimeSection.SetReadOnly()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  syntax:
    content: protected override void SetReadOnly ();
    parameters: []
  overload: System.Web.Configuration.HttpRuntimeSection.SetReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpRuntimeSection.ShutdownTimeout
  id: ShutdownTimeout
  parent: System.Web.Configuration.HttpRuntimeSection
  langs:
  - csharp
  name: ShutdownTimeout
  nameWithType: HttpRuntimeSection.ShutdownTimeout
  fullName: System.Web.Configuration.HttpRuntimeSection.ShutdownTimeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets the length of time the application is allowed to idle before it is terminated."
  remarks: "The ShutdownTimeout property indicates the amount of time before an application is shut down gracefully. The default is 90 seconds."
  example:
  - "The following example shows how to use the ShutdownTimeout property.  \n  \n [!CODE [System.Web.Configuration.HttpRuntimeSection#6](../CodeSnippet/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection#6)]"
  syntax:
    content: public TimeSpan ShutdownTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan> value that indicates the length of time the application is allowed to idle before it is terminated."
  overload: System.Web.Configuration.HttpRuntimeSection.ShutdownTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpRuntimeSection.TargetFramework
  id: TargetFramework
  parent: System.Web.Configuration.HttpRuntimeSection
  langs:
  - csharp
  name: TargetFramework
  nameWithType: HttpRuntimeSection.TargetFramework
  fullName: System.Web.Configuration.HttpRuntimeSection.TargetFramework
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets the target .NET framework."
  syntax:
    content: public string TargetFramework { get; set; }
    return:
      type: System.String
      description: "The target .NET framework."
  overload: System.Web.Configuration.HttpRuntimeSection.TargetFramework*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpRuntimeSection.UseFullyQualifiedRedirectUrl
  id: UseFullyQualifiedRedirectUrl
  parent: System.Web.Configuration.HttpRuntimeSection
  langs:
  - csharp
  name: UseFullyQualifiedRedirectUrl
  nameWithType: HttpRuntimeSection.UseFullyQualifiedRedirectUrl
  fullName: System.Web.Configuration.HttpRuntimeSection.UseFullyQualifiedRedirectUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets a value that indicates whether the client-side redirects are fully qualified."
  remarks: "The UseFullyQualifiedRedirectUrl property indicates whether client-side redirects are fully qualified (in the form http://server/path) or whether relative redirects are instead sent to the client.      > [!NOTE] >  Some browsers might have problems loading pages in cookieless sessions when this value is `false`."
  example:
  - "The following example shows how to use the UseFullyQualifiedRedirectUrl property.  \n  \n [!CODE [System.Web.Configuration.HttpRuntimeSection#15](../CodeSnippet/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection#15)]"
  syntax:
    content: public bool UseFullyQualifiedRedirectUrl { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if client-side redirects are fully qualified; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default value is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Configuration.HttpRuntimeSection.UseFullyQualifiedRedirectUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.HttpRuntimeSection.WaitChangeNotification
  id: WaitChangeNotification
  parent: System.Web.Configuration.HttpRuntimeSection
  langs:
  - csharp
  name: WaitChangeNotification
  nameWithType: HttpRuntimeSection.WaitChangeNotification
  fullName: System.Web.Configuration.HttpRuntimeSection.WaitChangeNotification
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Gets or sets the waiting time before the next change notification."
  remarks: "A suggested value for WaitChangeNotification would exceed the length of time to complete a copy during the deployment process.      > [!NOTE] >  The content might appear cached if you view it immediately after a copy and deploy process. This is typical behavior. The changes take effect when the wait period that you specified has elapsed."
  example:
  - "The following example shows how to use the WaitChangeNotification property.  \n  \n [!CODE [System.Web.Configuration.HttpRuntimeSection#18](../CodeSnippet/VS_Snippets_WebNet/System.Web.Configuration.HttpRuntimeSection#18)]"
  syntax:
    content: public int WaitChangeNotification { get; set; }
    return:
      type: System.Int32
      description: "The waiting time, in seconds, before the next change notification that triggers an application domain to restart. The default value is 0."
  overload: System.Web.Configuration.HttpRuntimeSection.WaitChangeNotification*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationSection
  isExternal: false
  name: System.Configuration.ConfigurationSection
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.Web.Configuration.HttpRuntimeSection.#ctor
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: HttpRuntimeSection()
  nameWithType: HttpRuntimeSection.HttpRuntimeSection()
  fullName: System.Web.Configuration.HttpRuntimeSection.HttpRuntimeSection()
- uid: System.Web.Configuration.HttpRuntimeSection.AllowDynamicModuleRegistration
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: AllowDynamicModuleRegistration
  nameWithType: HttpRuntimeSection.AllowDynamicModuleRegistration
  fullName: System.Web.Configuration.HttpRuntimeSection.AllowDynamicModuleRegistration
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Configuration.HttpRuntimeSection.ApartmentThreading
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: ApartmentThreading
  nameWithType: HttpRuntimeSection.ApartmentThreading
  fullName: System.Web.Configuration.HttpRuntimeSection.ApartmentThreading
- uid: System.Web.Configuration.HttpRuntimeSection.AppRequestQueueLimit
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: AppRequestQueueLimit
  nameWithType: HttpRuntimeSection.AppRequestQueueLimit
  fullName: System.Web.Configuration.HttpRuntimeSection.AppRequestQueueLimit
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Configuration.HttpRuntimeSection.AsyncPreloadMode
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: AsyncPreloadMode
  nameWithType: HttpRuntimeSection.AsyncPreloadMode
  fullName: System.Web.Configuration.HttpRuntimeSection.AsyncPreloadMode
- uid: System.Web.Configuration.AsyncPreloadModeFlags
  parent: System.Web.Configuration
  isExternal: false
  name: AsyncPreloadModeFlags
  nameWithType: AsyncPreloadModeFlags
  fullName: System.Web.Configuration.AsyncPreloadModeFlags
- uid: System.Web.Configuration.HttpRuntimeSection.DefaultRegexMatchTimeout
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: DefaultRegexMatchTimeout
  nameWithType: HttpRuntimeSection.DefaultRegexMatchTimeout
  fullName: System.Web.Configuration.HttpRuntimeSection.DefaultRegexMatchTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Web.Configuration.HttpRuntimeSection.DelayNotificationTimeout
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: DelayNotificationTimeout
  nameWithType: HttpRuntimeSection.DelayNotificationTimeout
  fullName: System.Web.Configuration.HttpRuntimeSection.DelayNotificationTimeout
- uid: System.Web.Configuration.HttpRuntimeSection.Enable
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: Enable
  nameWithType: HttpRuntimeSection.Enable
  fullName: System.Web.Configuration.HttpRuntimeSection.Enable
- uid: System.Web.Configuration.HttpRuntimeSection.EnableHeaderChecking
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: EnableHeaderChecking
  nameWithType: HttpRuntimeSection.EnableHeaderChecking
  fullName: System.Web.Configuration.HttpRuntimeSection.EnableHeaderChecking
- uid: System.Web.Configuration.HttpRuntimeSection.EnableKernelOutputCache
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: EnableKernelOutputCache
  nameWithType: HttpRuntimeSection.EnableKernelOutputCache
  fullName: System.Web.Configuration.HttpRuntimeSection.EnableKernelOutputCache
- uid: System.Web.Configuration.HttpRuntimeSection.EnableVersionHeader
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: EnableVersionHeader
  nameWithType: HttpRuntimeSection.EnableVersionHeader
  fullName: System.Web.Configuration.HttpRuntimeSection.EnableVersionHeader
- uid: System.Web.Configuration.HttpRuntimeSection.EncoderType
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: EncoderType
  nameWithType: HttpRuntimeSection.EncoderType
  fullName: System.Web.Configuration.HttpRuntimeSection.EncoderType
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: ExecutionTimeout
  nameWithType: HttpRuntimeSection.ExecutionTimeout
  fullName: System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout
- uid: System.Web.Configuration.HttpRuntimeSection.FcnMode
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: FcnMode
  nameWithType: HttpRuntimeSection.FcnMode
  fullName: System.Web.Configuration.HttpRuntimeSection.FcnMode
- uid: System.Web.Configuration.FcnMode
  parent: System.Web.Configuration
  isExternal: false
  name: FcnMode
  nameWithType: FcnMode
  fullName: System.Web.Configuration.FcnMode
- uid: System.Web.Configuration.HttpRuntimeSection.MaxQueryStringLength
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: MaxQueryStringLength
  nameWithType: HttpRuntimeSection.MaxQueryStringLength
  fullName: System.Web.Configuration.HttpRuntimeSection.MaxQueryStringLength
- uid: System.Web.Configuration.HttpRuntimeSection.MaxRequestLength
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: MaxRequestLength
  nameWithType: HttpRuntimeSection.MaxRequestLength
  fullName: System.Web.Configuration.HttpRuntimeSection.MaxRequestLength
- uid: System.Web.Configuration.HttpRuntimeSection.MaxUrlLength
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: MaxUrlLength
  nameWithType: HttpRuntimeSection.MaxUrlLength
  fullName: System.Web.Configuration.HttpRuntimeSection.MaxUrlLength
- uid: System.Web.Configuration.HttpRuntimeSection.MaxWaitChangeNotification
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: MaxWaitChangeNotification
  nameWithType: HttpRuntimeSection.MaxWaitChangeNotification
  fullName: System.Web.Configuration.HttpRuntimeSection.MaxWaitChangeNotification
- uid: System.Web.Configuration.HttpRuntimeSection.MinFreeThreads
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: MinFreeThreads
  nameWithType: HttpRuntimeSection.MinFreeThreads
  fullName: System.Web.Configuration.HttpRuntimeSection.MinFreeThreads
- uid: System.Web.Configuration.HttpRuntimeSection.MinLocalRequestFreeThreads
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: MinLocalRequestFreeThreads
  nameWithType: HttpRuntimeSection.MinLocalRequestFreeThreads
  fullName: System.Web.Configuration.HttpRuntimeSection.MinLocalRequestFreeThreads
- uid: System.Web.Configuration.HttpRuntimeSection.Properties
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: Properties
  nameWithType: HttpRuntimeSection.Properties
  fullName: System.Web.Configuration.HttpRuntimeSection.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.Web.Configuration.HttpRuntimeSection.RelaxedUrlToFileSystemMapping
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: RelaxedUrlToFileSystemMapping
  nameWithType: HttpRuntimeSection.RelaxedUrlToFileSystemMapping
  fullName: System.Web.Configuration.HttpRuntimeSection.RelaxedUrlToFileSystemMapping
- uid: System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: RequestLengthDiskThreshold
  nameWithType: HttpRuntimeSection.RequestLengthDiskThreshold
  fullName: System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold
- uid: System.Web.Configuration.HttpRuntimeSection.RequestPathInvalidCharacters
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: RequestPathInvalidCharacters
  nameWithType: HttpRuntimeSection.RequestPathInvalidCharacters
  fullName: System.Web.Configuration.HttpRuntimeSection.RequestPathInvalidCharacters
- uid: System.Web.Configuration.HttpRuntimeSection.RequestValidationMode
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: RequestValidationMode
  nameWithType: HttpRuntimeSection.RequestValidationMode
  fullName: System.Web.Configuration.HttpRuntimeSection.RequestValidationMode
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Web.Configuration.HttpRuntimeSection.RequestValidationType
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: RequestValidationType
  nameWithType: HttpRuntimeSection.RequestValidationType
  fullName: System.Web.Configuration.HttpRuntimeSection.RequestValidationType
- uid: System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: RequireRootedSaveAsPath
  nameWithType: HttpRuntimeSection.RequireRootedSaveAsPath
  fullName: System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath
- uid: System.Web.Configuration.HttpRuntimeSection.SendCacheControlHeader
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: SendCacheControlHeader
  nameWithType: HttpRuntimeSection.SendCacheControlHeader
  fullName: System.Web.Configuration.HttpRuntimeSection.SendCacheControlHeader
- uid: System.Web.Configuration.HttpRuntimeSection.SetReadOnly
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: SetReadOnly()
  nameWithType: HttpRuntimeSection.SetReadOnly()
  fullName: System.Web.Configuration.HttpRuntimeSection.SetReadOnly()
- uid: System.Web.Configuration.HttpRuntimeSection.ShutdownTimeout
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: ShutdownTimeout
  nameWithType: HttpRuntimeSection.ShutdownTimeout
  fullName: System.Web.Configuration.HttpRuntimeSection.ShutdownTimeout
- uid: System.Web.Configuration.HttpRuntimeSection.TargetFramework
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: TargetFramework
  nameWithType: HttpRuntimeSection.TargetFramework
  fullName: System.Web.Configuration.HttpRuntimeSection.TargetFramework
- uid: System.Web.Configuration.HttpRuntimeSection.UseFullyQualifiedRedirectUrl
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: UseFullyQualifiedRedirectUrl
  nameWithType: HttpRuntimeSection.UseFullyQualifiedRedirectUrl
  fullName: System.Web.Configuration.HttpRuntimeSection.UseFullyQualifiedRedirectUrl
- uid: System.Web.Configuration.HttpRuntimeSection.WaitChangeNotification
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: WaitChangeNotification
  nameWithType: HttpRuntimeSection.WaitChangeNotification
  fullName: System.Web.Configuration.HttpRuntimeSection.WaitChangeNotification
- uid: System.Web.Configuration.HttpRuntimeSection.#ctor*
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: HttpRuntimeSection
  nameWithType: HttpRuntimeSection.HttpRuntimeSection
- uid: System.Web.Configuration.HttpRuntimeSection.AllowDynamicModuleRegistration*
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: AllowDynamicModuleRegistration
  nameWithType: HttpRuntimeSection.AllowDynamicModuleRegistration
- uid: System.Web.Configuration.HttpRuntimeSection.ApartmentThreading*
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: ApartmentThreading
  nameWithType: HttpRuntimeSection.ApartmentThreading
- uid: System.Web.Configuration.HttpRuntimeSection.AppRequestQueueLimit*
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: AppRequestQueueLimit
  nameWithType: HttpRuntimeSection.AppRequestQueueLimit
- uid: System.Web.Configuration.HttpRuntimeSection.AsyncPreloadMode*
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: AsyncPreloadMode
  nameWithType: HttpRuntimeSection.AsyncPreloadMode
- uid: System.Web.Configuration.HttpRuntimeSection.DefaultRegexMatchTimeout*
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: DefaultRegexMatchTimeout
  nameWithType: HttpRuntimeSection.DefaultRegexMatchTimeout
- uid: System.Web.Configuration.HttpRuntimeSection.DelayNotificationTimeout*
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: DelayNotificationTimeout
  nameWithType: HttpRuntimeSection.DelayNotificationTimeout
- uid: System.Web.Configuration.HttpRuntimeSection.Enable*
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: Enable
  nameWithType: HttpRuntimeSection.Enable
- uid: System.Web.Configuration.HttpRuntimeSection.EnableHeaderChecking*
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: EnableHeaderChecking
  nameWithType: HttpRuntimeSection.EnableHeaderChecking
- uid: System.Web.Configuration.HttpRuntimeSection.EnableKernelOutputCache*
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: EnableKernelOutputCache
  nameWithType: HttpRuntimeSection.EnableKernelOutputCache
- uid: System.Web.Configuration.HttpRuntimeSection.EnableVersionHeader*
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: EnableVersionHeader
  nameWithType: HttpRuntimeSection.EnableVersionHeader
- uid: System.Web.Configuration.HttpRuntimeSection.EncoderType*
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: EncoderType
  nameWithType: HttpRuntimeSection.EncoderType
- uid: System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout*
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: ExecutionTimeout
  nameWithType: HttpRuntimeSection.ExecutionTimeout
- uid: System.Web.Configuration.HttpRuntimeSection.FcnMode*
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: FcnMode
  nameWithType: HttpRuntimeSection.FcnMode
- uid: System.Web.Configuration.HttpRuntimeSection.MaxQueryStringLength*
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: MaxQueryStringLength
  nameWithType: HttpRuntimeSection.MaxQueryStringLength
- uid: System.Web.Configuration.HttpRuntimeSection.MaxRequestLength*
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: MaxRequestLength
  nameWithType: HttpRuntimeSection.MaxRequestLength
- uid: System.Web.Configuration.HttpRuntimeSection.MaxUrlLength*
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: MaxUrlLength
  nameWithType: HttpRuntimeSection.MaxUrlLength
- uid: System.Web.Configuration.HttpRuntimeSection.MaxWaitChangeNotification*
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: MaxWaitChangeNotification
  nameWithType: HttpRuntimeSection.MaxWaitChangeNotification
- uid: System.Web.Configuration.HttpRuntimeSection.MinFreeThreads*
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: MinFreeThreads
  nameWithType: HttpRuntimeSection.MinFreeThreads
- uid: System.Web.Configuration.HttpRuntimeSection.MinLocalRequestFreeThreads*
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: MinLocalRequestFreeThreads
  nameWithType: HttpRuntimeSection.MinLocalRequestFreeThreads
- uid: System.Web.Configuration.HttpRuntimeSection.Properties*
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: Properties
  nameWithType: HttpRuntimeSection.Properties
- uid: System.Web.Configuration.HttpRuntimeSection.RelaxedUrlToFileSystemMapping*
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: RelaxedUrlToFileSystemMapping
  nameWithType: HttpRuntimeSection.RelaxedUrlToFileSystemMapping
- uid: System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold*
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: RequestLengthDiskThreshold
  nameWithType: HttpRuntimeSection.RequestLengthDiskThreshold
- uid: System.Web.Configuration.HttpRuntimeSection.RequestPathInvalidCharacters*
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: RequestPathInvalidCharacters
  nameWithType: HttpRuntimeSection.RequestPathInvalidCharacters
- uid: System.Web.Configuration.HttpRuntimeSection.RequestValidationMode*
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: RequestValidationMode
  nameWithType: HttpRuntimeSection.RequestValidationMode
- uid: System.Web.Configuration.HttpRuntimeSection.RequestValidationType*
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: RequestValidationType
  nameWithType: HttpRuntimeSection.RequestValidationType
- uid: System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath*
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: RequireRootedSaveAsPath
  nameWithType: HttpRuntimeSection.RequireRootedSaveAsPath
- uid: System.Web.Configuration.HttpRuntimeSection.SendCacheControlHeader*
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: SendCacheControlHeader
  nameWithType: HttpRuntimeSection.SendCacheControlHeader
- uid: System.Web.Configuration.HttpRuntimeSection.SetReadOnly*
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: SetReadOnly
  nameWithType: HttpRuntimeSection.SetReadOnly
- uid: System.Web.Configuration.HttpRuntimeSection.ShutdownTimeout*
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: ShutdownTimeout
  nameWithType: HttpRuntimeSection.ShutdownTimeout
- uid: System.Web.Configuration.HttpRuntimeSection.TargetFramework*
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: TargetFramework
  nameWithType: HttpRuntimeSection.TargetFramework
- uid: System.Web.Configuration.HttpRuntimeSection.UseFullyQualifiedRedirectUrl*
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: UseFullyQualifiedRedirectUrl
  nameWithType: HttpRuntimeSection.UseFullyQualifiedRedirectUrl
- uid: System.Web.Configuration.HttpRuntimeSection.WaitChangeNotification*
  parent: System.Web.Configuration.HttpRuntimeSection
  isExternal: false
  name: WaitChangeNotification
  nameWithType: HttpRuntimeSection.WaitChangeNotification
