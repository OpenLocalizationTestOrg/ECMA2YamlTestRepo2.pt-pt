### YamlMime:ManagedReference
items:
- uid: System.Web.UI.AttributeCollection
  id: AttributeCollection
  children:
  - System.Web.UI.AttributeCollection.#ctor(System.Web.UI.StateBag)
  - System.Web.UI.AttributeCollection.Add(System.String,System.String)
  - System.Web.UI.AttributeCollection.AddAttributes(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.AttributeCollection.Clear
  - System.Web.UI.AttributeCollection.Count
  - System.Web.UI.AttributeCollection.CssStyle
  - System.Web.UI.AttributeCollection.Equals(System.Object)
  - System.Web.UI.AttributeCollection.GetHashCode
  - System.Web.UI.AttributeCollection.Item(System.String)
  - System.Web.UI.AttributeCollection.Keys
  - System.Web.UI.AttributeCollection.Remove(System.String)
  - System.Web.UI.AttributeCollection.Render(System.Web.UI.HtmlTextWriter)
  langs:
  - csharp
  name: AttributeCollection
  nameWithType: AttributeCollection
  fullName: System.Web.UI.AttributeCollection
  type: Class
  summary: "Provides object-model access to all attributes declared in the opening tag of an ASP.NET server control element. This class cannot be inherited."
  remarks: "Individual items in the collection return a <xref:System.String> object as their value. If there are no attribute items in the collection, the collection returns `null`.       Attributes on an HTML server control are programmatically available through the <xref:System.Web.UI.HtmlControls.HtmlControl.Attributes%2A> property, which is inherited by all HTML server controls. ASP.NET exposes attributes of HTML server controls as properties of those controls.       You can add attributes to a Web server control through the <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> property, which is inherited by all Web server controls. The attributes in the attributes collection for a Web server control do not necessarily correspond to the control&quot;s strongly typed properties for that control."
  example:
  - "The following example creates a new AttributeCollection object that is named `myAttributeCollection`, and then checks whether the page has been posted back. If it has not, the code adds two attributes to the collection. It then gets the number of attributes in the collection and iterates through the collection, writing the key to each attribute to the page. If the page is a postback, the code gets the new number of attributes and iterates through the collection, writing the key and value of each attribute to the page.  \n  \n [!code-cs[AttributeCollection_AttributeCollection#1](~/add/codesnippet/csharp/t-system.web.ui.attribut_1.aspx)]\n [!code-vb[AttributeCollection_AttributeCollection#1](~/add/codesnippet/visualbasic/t-system.web.ui.attribut_1.aspx)]"
  syntax:
    content: public sealed class AttributeCollection
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.AttributeCollection.#ctor(System.Web.UI.StateBag)
  id: '#ctor(System.Web.UI.StateBag)'
  parent: System.Web.UI.AttributeCollection
  langs:
  - csharp
  name: AttributeCollection(StateBag)
  nameWithType: AttributeCollection.AttributeCollection(StateBag)
  fullName: System.Web.UI.AttributeCollection.AttributeCollection(StateBag)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.UI.AttributeCollection&quot;></xref> class."
  remarks: ''
  example:
  - "The following example shows how to use the <xref:System.Web.UI.AttributeCollection> constructor to create an instance of the class named it `myAttributeCollection`. The code passes the control's <xref:System.Web.UI.Control.ViewState%2A> property as a parameter argument.  \n  \n [!code-cs[AttributeCollection_AttributeCollection#2](~/add/codesnippet/csharp/m-system.web.ui.attribut_2_1.aspx)]\n [!code-vb[AttributeCollection_AttributeCollection#2](~/add/codesnippet/visualbasic/m-system.web.ui.attribut_2_1.aspx)]"
  syntax:
    content: public AttributeCollection (System.Web.UI.StateBag bag);
    parameters:
    - id: bag
      type: System.Web.UI.StateBag
      description: "An object that contains the attribute keys and their values from the opening tag of the server control."
  overload: System.Web.UI.AttributeCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.AttributeCollection.Add(System.String,System.String)
  id: Add(System.String,System.String)
  parent: System.Web.UI.AttributeCollection
  langs:
  - csharp
  name: Add(String,String)
  nameWithType: AttributeCollection.Add(String,String)
  fullName: System.Web.UI.AttributeCollection.Add(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Adds an attribute to a server control&quot;s <xref href=&quot;System.Web.UI.AttributeCollection&quot;></xref> object."
  remarks: "If the string in the `value` parameter contains an ampersand (&), the character is automatically encoded. The resulting HTML representation is &quot;&amp;&quot;."
  example:
  - "The following example shows how to use the Add method to programmatically add an attribute to an ASP.NET server control <xref:System.Web.UI.AttributeCollection> object.  \n  \n [!code-vb[Classic AttributeCollection.Add Example#1](~/add/codesnippet/visualbasic/m-system.web.ui.attribut_4_1.aspx)]\n [!code-cs[Classic AttributeCollection.Add Example#1](~/add/codesnippet/csharp/m-system.web.ui.attribut_4_1.aspx)]"
  syntax:
    content: public void Add (string key, string value);
    parameters:
    - id: key
      type: System.String
      description: "The attribute name."
    - id: value
      type: System.String
      description: "The attribute value."
  overload: System.Web.UI.AttributeCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.AttributeCollection.AddAttributes(System.Web.UI.HtmlTextWriter)
  id: AddAttributes(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.AttributeCollection
  langs:
  - csharp
  name: AddAttributes(HtmlTextWriter)
  nameWithType: AttributeCollection.AddAttributes(HtmlTextWriter)
  fullName: System.Web.UI.AttributeCollection.AddAttributes(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Adds attributes from the <xref href=&quot;System.Web.UI.AttributeCollection&quot;></xref> class to the <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref> object that is responsible for rendering the attributes as markup."
  remarks: "This method copies all the server control&quot;s attributes to an <xref:System.Web.UI.HtmlTextWriter> object so that they can be rendered by the next call to the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.       For controls that are contained in other controls such as <xref:System.Web.UI.WebControls.Calendar> and <xref:System.Web.UI.WebControls.CheckBoxList>, you can potentially improve performance by rendering the contained controls directly. Rendering directly can be faster than rendering through the container control because container controls require that you copy all the child control attributes to the container control and render them after they are copied."
  example:
  - "The following example shows how to add new attributes to a <xref:System.Web.UI.WebControls.Button> server control named `myButton` and a <xref:System.Web.UI.WebControls.TextBox> server control named `myTextBox`. It then adds those attributes to a custom <xref:System.Web.UI.HtmlTextWriter> object that will write those attributes to an output stream for each of those controls.  \n  \n [!code-cs[AttributeCollection_Item#1](~/add/codesnippet/csharp/m-system.web.ui.attribut_1_1.aspx)]\n [!code-vb[AttributeCollection_Item#1](~/add/codesnippet/visualbasic/m-system.web.ui.attribut_1_1.aspx)]"
  syntax:
    content: public void AddAttributes (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "An <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref> instance that writes the attribute to the opening tag of an ASP.NET server control."
  overload: System.Web.UI.AttributeCollection.AddAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.AttributeCollection.Clear
  id: Clear
  parent: System.Web.UI.AttributeCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: AttributeCollection.Clear()
  fullName: System.Web.UI.AttributeCollection.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Removes all attributes from a server control&quot;s <xref href=&quot;System.Web.UI.AttributeCollection&quot;></xref> object."
  remarks: ''
  example:
  - "The following example shows how to programmatically remove all attributes from an HTML server control's <xref:System.Web.UI.AttributeCollection> object.  \n  \n [!code-vb[Classic AttributeCollection.Clear Example#1](~/add/codesnippet/visualbasic/m-system.web.ui.attribut_3_1.aspx)]\n [!code-cs[Classic AttributeCollection.Clear Example#1](~/add/codesnippet/csharp/m-system.web.ui.attribut_3_1.aspx)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.UI.AttributeCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.AttributeCollection.Count
  id: Count
  parent: System.Web.UI.AttributeCollection
  langs:
  - csharp
  name: Count
  nameWithType: AttributeCollection.Count
  fullName: System.Web.UI.AttributeCollection.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gets the number of attributes in the <xref href=&quot;System.Web.UI.AttributeCollection&quot;></xref> object."
  remarks: ''
  example:
  - "The following example shows how to use the Count property to write the number of attributes on a control to the containing page.  \n  \n [!code-cs[AttributeCollection_AttributeCollection#4](~/add/codesnippet/csharp/p-system.web.ui.attribut_1_1.aspx)]\n [!code-vb[AttributeCollection_AttributeCollection#4](~/add/codesnippet/visualbasic/p-system.web.ui.attribut_1_1.aspx)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "The number of items in the collection."
  overload: System.Web.UI.AttributeCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.AttributeCollection.CssStyle
  id: CssStyle
  parent: System.Web.UI.AttributeCollection
  langs:
  - csharp
  name: CssStyle
  nameWithType: AttributeCollection.CssStyle
  fullName: System.Web.UI.AttributeCollection.CssStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gets a collection of styles for the ASP.NET server control to which the current <xref href=&quot;System.Web.UI.AttributeCollection&quot;></xref> object belongs."
  remarks: "Any style declared for a particular HTML server control is added to the <xref:System.Web.UI.CssStyleCollection> object when the containing ASP.NET Web page is parsed. You can use this property to add, remove, and iterate through the styles declared for the server control."
  example:
  - "The following example shows how to add a CSS style value programmatically to a server control's <xref:System.Web.UI.AttributeCollection> object. When a button is clicked, the background color of a <xref:System.Web.UI.WebControls.TextBox> server control named `TextBox1` is set to the selected item in a <xref:System.Web.UI.WebControls.DropDownList> server control named `DropDownList1`.  \n  \n [!code-cs[AttributeCollection_CssStyle#1](~/add/codesnippet/csharp/p-system.web.ui.attribut_3_1.aspx)]\n [!code-vb[AttributeCollection_CssStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.attribut_3_1.aspx)]"
  syntax:
    content: public System.Web.UI.CssStyleCollection CssStyle { get; }
    return:
      type: System.Web.UI.CssStyleCollection
      description: "A collection that contains the styles for the current server control."
  overload: System.Web.UI.AttributeCollection.CssStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.AttributeCollection.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Web.UI.AttributeCollection
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: AttributeCollection.Equals(Object)
  fullName: System.Web.UI.AttributeCollection.Equals(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Determines whether the current instance of the <xref href=&quot;System.Web.UI.AttributeCollection&quot;></xref> object is equal to the specified object."
  remarks: "For the compared objects to be equal, they must meet the following criteria:      -   The object that is contained in the `o` parameter must be an <xref:System.Web.UI.AttributeCollection> object.      -   Both collections must contain the same number of items.      -   The key value of each entry in both collections must match.          > [!NOTE]     >  This method is primarily used by control developers."
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "The object instance to compare with this instance."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the object that is contained in the <code>o</code> parameter is equal to the current instance of <xref href=&quot;System.Web.UI.AttributeCollection&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.AttributeCollection.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.AttributeCollection.GetHashCode
  id: GetHashCode
  parent: System.Web.UI.AttributeCollection
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: AttributeCollection.GetHashCode()
  fullName: System.Web.UI.AttributeCollection.GetHashCode()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Returns the hash code for this instance."
  remarks: "Use the GetHashCode method to determine the hash code for this <xref:System.Web.UI.AttributeCollection> object."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "A 32-bit signed integer hash code."
  overload: System.Web.UI.AttributeCollection.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.AttributeCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Web.UI.AttributeCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: AttributeCollection.Item(String)
  fullName: System.Web.UI.AttributeCollection.Item(String)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gets or sets a specified attribute value for a server control."
  remarks: "You can add an attribute to or retrieve one from an ASP.NET server control that uses this property."
  example:
  - "The following example shows how to set a dynamic HTML `onblur` attribute to run an ECMAScript (JavaScript) command when a <xref:System.Web.UI.WebControls.TextBox> Web server control loses focus.  \n  \n [!code-cs[Classic AttributeCollection Example 2#1](~/add/codesnippet/csharp/p-system.web.ui.attribut_0_1.aspx)]\n [!code-vb[Classic AttributeCollection Example 2#1](~/add/codesnippet/visualbasic/p-system.web.ui.attribut_0_1.aspx)]"
  syntax:
    content: public string this[string key] { get; set; }
    parameters:
    - id: key
      type: System.String
      description: "The location of the attribute in the collection."
    return:
      type: System.String
      description: "The attribute value."
  overload: System.Web.UI.AttributeCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.AttributeCollection.Keys
  id: Keys
  parent: System.Web.UI.AttributeCollection
  langs:
  - csharp
  name: Keys
  nameWithType: AttributeCollection.Keys
  fullName: System.Web.UI.AttributeCollection.Keys
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gets a collection of keys to all attributes in the server control&quot;s <xref href=&quot;System.Web.UI.AttributeCollection&quot;></xref> object."
  remarks: "This property contains all the keys that are in the <xref:System.Web.UI.AttributeCollection> of an ASP.NET server control, whether you have added them programmatically with the <xref:System.Web.UI.AttributeCollection.Add%2A> method, or declaratively."
  example:
  - "The following example shows how to iterate through the Keys property of the <xref:System.Web.UI.AttributeCollection> object for an <xref:System.Web.UI.HtmlControls.HtmlSelect> server control.  \n  \n [!code-cs[Classic AttributeCollection.Keys Example#1](~/add/codesnippet/csharp/p-system.web.ui.attribut_2_1.aspx)]\n [!code-vb[Classic AttributeCollection.Keys Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.attribut_2_1.aspx)]"
  syntax:
    content: public System.Collections.ICollection Keys { get; }
    return:
      type: System.Collections.ICollection
      description: "The collection of keys."
  overload: System.Web.UI.AttributeCollection.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.AttributeCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Web.UI.AttributeCollection
  langs:
  - csharp
  name: Remove(String)
  nameWithType: AttributeCollection.Remove(String)
  fullName: System.Web.UI.AttributeCollection.Remove(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Removes an attribute from a server control&quot;s <xref href=&quot;System.Web.UI.AttributeCollection&quot;></xref> object."
  remarks: "If the <xref:System.Web.UI.AttributeCollection> object does not contain an attribute that has the specified `key`, the collection remains unchanged. No exception is thrown."
  example:
  - "The following example shows how to programmatically remove an attribute from an HTML server control's <xref:System.Web.UI.AttributeCollection> object.  \n  \n [!code-vb[Classic AttributeCollection.Remove Example#1](~/add/codesnippet/visualbasic/m-system.web.ui.attribut_0_1.aspx)]\n [!code-cs[Classic AttributeCollection.Remove Example#1](~/add/codesnippet/csharp/m-system.web.ui.attribut_0_1.aspx)]"
  syntax:
    content: public void Remove (string key);
    parameters:
    - id: key
      type: System.String
      description: "The name of the attribute to remove."
  overload: System.Web.UI.AttributeCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.AttributeCollection.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.AttributeCollection
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: AttributeCollection.Render(HtmlTextWriter)
  fullName: System.Web.UI.AttributeCollection.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Writes the collection of attributes to the specified <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref> output stream for the control to which the collection belongs."
  remarks: ''
  example:
  - "This section contains two code examples. The first code example shows how to inherit from the <xref:System.Web.UI.WebControls.WebControl> class to create a custom control named `AttribRender` that overrides the Render method. The second code example shows how to use the custom control in an ASP.NET Web page.  \n  \n The following example shows how to create a custom control named `AttribRender` that overrides the <xref:System.Web.UI.WebControls.WebControl.Render%2A> method of the <xref:System.Web.UI.WebControls.WebControl> class without calling the <xref:System.Web.UI.WebControls.WebControl.Render%2A> method of the base class. Instead, `AttribRender` invokes the Render method.  \n  \n [!code-cs[AttributeCollection.Render_Sample1#1](~/add/codesnippet/csharp/m-system.web.ui.attribut_5_1.cs)]\n [!code-vb[AttributeCollection.Render_Sample1#1](~/add/codesnippet/visualbasic/m-system.web.ui.attribut_5_1.vb)]  \n  \n The following example shows how to use the `AttribRender` custom control in a Web page. It assumes that the code file for the custom control is in the App_Code folder for the application.  \n  \n [!code-cs[AttributeCollection.Render_Sample1#2](~/add/codesnippet/csharp/m-system.web.ui.attribut_5_2.aspx)]\n [!code-vb[AttributeCollection.Render_Sample1#2](~/add/codesnippet/visualbasic/m-system.web.ui.attribut_5_2.aspx)]"
  syntax:
    content: public void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "An <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref> instance that writes the attribute collection to the current output stream."
  overload: System.Web.UI.AttributeCollection.Render*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.AttributeCollection.#ctor(System.Web.UI.StateBag)
  parent: System.Web.UI.AttributeCollection
  isExternal: false
  name: AttributeCollection(StateBag)
  nameWithType: AttributeCollection.AttributeCollection(StateBag)
  fullName: System.Web.UI.AttributeCollection.AttributeCollection(StateBag)
- uid: System.Web.UI.StateBag
  parent: System.Web.UI
  isExternal: false
  name: StateBag
  nameWithType: StateBag
  fullName: System.Web.UI.StateBag
- uid: System.Web.UI.AttributeCollection.Add(System.String,System.String)
  parent: System.Web.UI.AttributeCollection
  isExternal: false
  name: Add(String,String)
  nameWithType: AttributeCollection.Add(String,String)
  fullName: System.Web.UI.AttributeCollection.Add(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.AttributeCollection.AddAttributes(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.AttributeCollection
  isExternal: false
  name: AddAttributes(HtmlTextWriter)
  nameWithType: AttributeCollection.AddAttributes(HtmlTextWriter)
  fullName: System.Web.UI.AttributeCollection.AddAttributes(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.AttributeCollection.Clear
  parent: System.Web.UI.AttributeCollection
  isExternal: false
  name: Clear()
  nameWithType: AttributeCollection.Clear()
  fullName: System.Web.UI.AttributeCollection.Clear()
- uid: System.Web.UI.AttributeCollection.Count
  parent: System.Web.UI.AttributeCollection
  isExternal: false
  name: Count
  nameWithType: AttributeCollection.Count
  fullName: System.Web.UI.AttributeCollection.Count
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.AttributeCollection.CssStyle
  parent: System.Web.UI.AttributeCollection
  isExternal: false
  name: CssStyle
  nameWithType: AttributeCollection.CssStyle
  fullName: System.Web.UI.AttributeCollection.CssStyle
- uid: System.Web.UI.CssStyleCollection
  parent: System.Web.UI
  isExternal: false
  name: CssStyleCollection
  nameWithType: CssStyleCollection
  fullName: System.Web.UI.CssStyleCollection
- uid: System.Web.UI.AttributeCollection.Equals(System.Object)
  parent: System.Web.UI.AttributeCollection
  isExternal: false
  name: Equals(Object)
  nameWithType: AttributeCollection.Equals(Object)
  fullName: System.Web.UI.AttributeCollection.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.AttributeCollection.GetHashCode
  parent: System.Web.UI.AttributeCollection
  isExternal: false
  name: GetHashCode()
  nameWithType: AttributeCollection.GetHashCode()
  fullName: System.Web.UI.AttributeCollection.GetHashCode()
- uid: System.Web.UI.AttributeCollection.Item(System.String)
  parent: System.Web.UI.AttributeCollection
  isExternal: false
  name: Item(String)
  nameWithType: AttributeCollection.Item(String)
  fullName: System.Web.UI.AttributeCollection.Item(String)
- uid: System.Web.UI.AttributeCollection.Keys
  parent: System.Web.UI.AttributeCollection
  isExternal: false
  name: Keys
  nameWithType: AttributeCollection.Keys
  fullName: System.Web.UI.AttributeCollection.Keys
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Web.UI.AttributeCollection.Remove(System.String)
  parent: System.Web.UI.AttributeCollection
  isExternal: false
  name: Remove(String)
  nameWithType: AttributeCollection.Remove(String)
  fullName: System.Web.UI.AttributeCollection.Remove(String)
- uid: System.Web.UI.AttributeCollection.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.AttributeCollection
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: AttributeCollection.Render(HtmlTextWriter)
  fullName: System.Web.UI.AttributeCollection.Render(HtmlTextWriter)
- uid: System.Web.UI.AttributeCollection.#ctor*
  parent: System.Web.UI.AttributeCollection
  isExternal: false
  name: AttributeCollection
  nameWithType: AttributeCollection.AttributeCollection
- uid: System.Web.UI.AttributeCollection.Add*
  parent: System.Web.UI.AttributeCollection
  isExternal: false
  name: Add
  nameWithType: AttributeCollection.Add
- uid: System.Web.UI.AttributeCollection.AddAttributes*
  parent: System.Web.UI.AttributeCollection
  isExternal: false
  name: AddAttributes
  nameWithType: AttributeCollection.AddAttributes
- uid: System.Web.UI.AttributeCollection.Clear*
  parent: System.Web.UI.AttributeCollection
  isExternal: false
  name: Clear
  nameWithType: AttributeCollection.Clear
- uid: System.Web.UI.AttributeCollection.Count*
  parent: System.Web.UI.AttributeCollection
  isExternal: false
  name: Count
  nameWithType: AttributeCollection.Count
- uid: System.Web.UI.AttributeCollection.CssStyle*
  parent: System.Web.UI.AttributeCollection
  isExternal: false
  name: CssStyle
  nameWithType: AttributeCollection.CssStyle
- uid: System.Web.UI.AttributeCollection.Equals*
  parent: System.Web.UI.AttributeCollection
  isExternal: false
  name: Equals
  nameWithType: AttributeCollection.Equals
- uid: System.Web.UI.AttributeCollection.GetHashCode*
  parent: System.Web.UI.AttributeCollection
  isExternal: false
  name: GetHashCode
  nameWithType: AttributeCollection.GetHashCode
- uid: System.Web.UI.AttributeCollection.Item*
  parent: System.Web.UI.AttributeCollection
  isExternal: false
  name: Item
  nameWithType: AttributeCollection.Item
- uid: System.Web.UI.AttributeCollection.Keys*
  parent: System.Web.UI.AttributeCollection
  isExternal: false
  name: Keys
  nameWithType: AttributeCollection.Keys
- uid: System.Web.UI.AttributeCollection.Remove*
  parent: System.Web.UI.AttributeCollection
  isExternal: false
  name: Remove
  nameWithType: AttributeCollection.Remove
- uid: System.Web.UI.AttributeCollection.Render*
  parent: System.Web.UI.AttributeCollection
  isExternal: false
  name: Render
  nameWithType: AttributeCollection.Render
