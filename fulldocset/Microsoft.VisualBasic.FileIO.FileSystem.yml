### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.FileIO.FileSystem
  id: FileSystem
  children:
  - Microsoft.VisualBasic.FileIO.FileSystem.#ctor
  - Microsoft.VisualBasic.FileIO.FileSystem.CombinePath(System.String,System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,System.Boolean)
  - Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,System.Boolean)
  - Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory
  - Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.Drives
  - Microsoft.VisualBasic.FileIO.FileSystem.FileExists(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  - Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  - Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  - Microsoft.VisualBasic.FileIO.FileSystem.GetName(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName
  - Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,System.Boolean)
  - Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,System.Boolean)
  - Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.Int32[])
  - Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.String[])
  - Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String,System.Text.Encoding)
  - Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean)
  - Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)
  - Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String,System.Text.Encoding)
  - Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory(System.String,System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.RenameFile(System.String,System.String)
  - Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes(System.String,System.Byte[],System.Boolean)
  - Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean)
  - Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)
  langs:
  - csharp
  name: FileSystem
  nameWithType: FileSystem
  fullName: Microsoft.VisualBasic.FileIO.FileSystem
  type: Class
  summary: "Fornece propriedades e métodos para trabalhar com unidades, ficheiros e diretórios."
  remarks: "A tabela seguinte lista os exemplos de tarefas que envolvem o `My.Computer.FileSystem` objeto.      |||   |-|-|   | Para | Consulte |   | Ler a partir de um ficheiro de texto | [Como: ler a partir de ficheiros de texto](~/add/includes/ajax-current-ext-md.md)|   | Ler a partir de um ficheiro de texto delimitado | [Como: ler a partir de ficheiros de texto delimitado por vírgulas](~/add/includes/ajax-current-ext-md.md)|   | Ler a partir de um ficheiro de texto de largura fixa | [Como: ler a partir de ficheiros de texto de largura fixa](~/add/includes/ajax-current-ext-md.md)|   | Ler a partir de um ficheiro de texto com vários formatos | [Como: ler a partir de ficheiros de texto com vários formatos](~/add/includes/ajax-current-ext-md.md)|   | Ler a partir de um ficheiro binário | [Como: ler a partir de ficheiros binários](~/add/includes/ajax-current-ext-md.md)|   | Ler a partir de um ficheiro de texto com um <xref:System.IO.StreamReader>|[ Como: ler o texto a partir de ficheiros com um StreamReader](~/add/includes/ajax-current-ext-md.md)|   | Escrever um ficheiro de texto | [Como: escrever texto nos ficheiros](~/add/includes/ajax-current-ext-md.md)|   | Acrescentar a um ficheiro de texto | [Como: acrescentar a ficheiros de texto](~/add/includes/ajax-current-ext-md.md)|   | Escrever um ficheiro binário | [Como: escrever ficheiros binários](~/add/includes/ajax-current-ext-md.md)|   | Escrever nos ficheiros de texto no **MyDocuments** diretório |[ Como: texto de escrita em ficheiros no meu diretório de documentos](~/add/includes/ajax-current-ext-md.md)|   | Escrever um ficheiro de texto com um `StreamWriter` | [como: escrever texto para os ficheiros com um StreamWriter](~/add/includes/ajax-current-ext-md.md)|   | Copie os ficheiros com um padrão específico | [Como: copiar os ficheiros com um padrão específico para um diretório](~/add/includes/ajax-current-ext-md.md)|   | Copiar um ficheiro para o mesmo diretório | [Como: criar uma cópia de um ficheiro no mesmo diretório](~/add/includes/ajax-current-ext-md.md)|   | Copiar um ficheiro para um diretório diferente | [Como: criar uma cópia de um ficheiro num diretório diferente](~/add/includes/ajax-current-ext-md.md)|   | Criar um ficheiro | [Como: criar um ficheiro](~/add/includes/ajax-current-ext-md.md)|   | Eliminar um ficheiro | [Como: eliminar um ficheiro](~/add/includes/ajax-current-ext-md.md)|   | Localizar os ficheiros com um padrão específico | [Como: determinar os ficheiros com um padrão específico](~/add/includes/ajax-current-ext-md.md)|   | Mover um ficheiro | [Como: mover um ficheiro](~/add/includes/ajax-current-ext-md.md)|   | Mudar o nome de um ficheiro | [Como: mudar o nome de um ficheiro](~/add/includes/ajax-current-ext-md.md)|   | Copie um diretório para outro diretório | [Como: copiar um diretório para outro diretório](~/add/includes/ajax-current-ext-md.md)|   | Criar um diretório | [Como: criar um diretório](~/add/includes/ajax-current-ext-md.md)|   | Localizar subdiretórios com um padrão específico | [Como: determinar subdiretórios com um padrão específico](~/add/includes/ajax-current-ext-md.md)|   | Obter a coleção de ficheiros num diretório | [Como: obter a coleção de ficheiros num diretório](~/add/includes/ajax-current-ext-md.md)|   | Ler a partir de **MyDocuments** diretório |[ Como: obter os conteúdos do meu diretório de documentos](~/add/includes/ajax-current-ext-md.md)|   | Analisar um caminho de ficheiro | [Como: analisar caminhos de ficheiro](~/add/includes/ajax-current-ext-md.md) | </xref:System.IO.StreamReader>"
  example:
  - "This example checks to determine whether the folder `C:\\backup\\logs` exists and checks its properties.  \n  \n [!code-vb[VbVbcnMyFileSystem#23](~/add/codesnippet/visualbasic/t-microsoft.visualbasic._1_1.vb)]"
  syntax:
    content: public class FileSystem
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: FileSystem()
  nameWithType: FileSystem.FileSystem()
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.FileSystem()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Inicializa uma nova instância do <xref href=&quot;Microsoft.VisualBasic.FileIO.FileSystem&quot;> </xref> classe."
  remarks: ''
  example:
  - '[Objects (Visual Basic)](~/add/includes/ajax-current-ext-md.md)'
  syntax:
    content: public FileSystem ();
    parameters: []
  overload: Microsoft.VisualBasic.FileIO.FileSystem.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CombinePath(System.String,System.String)
  id: CombinePath(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CombinePath(String,String)
  nameWithType: FileSystem.CombinePath(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CombinePath(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Combina dois caminhos e devolve um caminho corretamente formatado."
  remarks: "Este método corta em excesso de marcas de barra carateres para criar um caminho corretamente formatado.       A tabela seguinte apresenta um exemplo de uma tarefa que envolvem o `My.Computer.FileSystem.CombinePath` método.      |||   |-|-|   | Para | Consulte |   | Combinar um nome de ficheiro e caminho do diretório | [Como: analisar caminhos de ficheiro no Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example combines a directory path and file name to create a properly formatted path.  \n  \n [!code-vb[VbRefFile#3](~/add/codesnippet/visualbasic/7e0ca449-b1a8-4acd-a607-_1.vb)]  \n  \n This example combines two paths to create a properly formatted path.  \n  \n [!code-vb[VbRefFile#4](~/add/codesnippet/visualbasic/7e0ca449-b1a8-4acd-a607-_2.vb)]  \n  \n This example returns `C:\\Dir1\\Dir2\\Dir4\\Dir5\\File.txt`."
  syntax:
    content: public static string CombinePath (string baseDirectory, string relativePath);
    parameters:
    - id: baseDirectory
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Caminho primeiro para estar combinadas."
    - id: relativePath
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Caminho segundo estar combinadas."
    return:
      type: System.String
      description: "A combinação de caminhos especificados."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CombinePath*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>baseDirectory</code>ou <code>relativePath</code> caminhos com formato incorreto."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String)
  id: CopyDirectory(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CopyDirectory(String,String)
  nameWithType: FileSystem.CopyDirectory(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Copia os conteúdos de um diretório para outro diretório."
  remarks: "Este método copia o conteúdo do diretório de origem para o diretório de destino. Se o diretório de destino não existe, é criado. Se existir um diretório com o mesmo nome na localização de destino, o conteúdo de dois diretórios é intercalado. Pode especificar um novo nome para o diretório durante a operação.       Quando copiar os ficheiros dentro de um diretório, exceções poderão ser emitidas que são causadas por um ficheiro específico. Quando essas exceções forem emitidas, estes são consolidados numa exceção único cujos `Data` propriedade contém entradas sob a forma de um <xref:System.Collections.IDictionary>em que o caminho de ficheiro ou diretório é a chave e a mensagem de exceção específica está contida no valor correspondente.</xref:System.Collections.IDictionary> Utilize `For…Each` enumerar através as entradas.       A tabela seguinte apresenta um exemplo de uma tarefa que envolvem o `My.Computer.FileSystem.CopyDirectory` método.      |||   |-|-|   | Para | Consulte |   | Copie um diretório | [Como: copiar um diretório para outro diretório no Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example copies the contents of directory `TestDirectory1` into `TestDirectory2`, overwriting existing files.  \n  \n [!code-vb[VbVbcnMyFileSystem#49](~/add/codesnippet/visualbasic/02942d01-133a-478f-ae50-_1.vb)]  \n  \n Replace `C:\\TestDirectory1` and `C:\\TestDirectory2` with the path and name of the directory you wish to copy and the location to which you wish to copy it."
  syntax:
    content: public static void CopyDirectory (string sourceDirectoryName, string destinationDirectoryName);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "O diretório a ser copiados."
    - id: destinationDirectoryName
      type: System.String
      description: "A localização para os quais o conteúdo do diretório deve ser copiado."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para uma das seguintes razões: é uma cadeia de comprimento zero; contém apenas espaços em branco; contém carateres inválidos; ou é um caminho de dispositivo (começa com \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationDirectoryName</code>ou <code>sourceDirectoryName</code> é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia vazia."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O diretório de origem não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O caminho de origem e o caminho de destino são os mesmos."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A operação é cíclica."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de pasta no caminho contém dois pontos (:) ou está num formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O utilizador não possui as permissões necessárias para ver o caminho."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Um ficheiro de destino existe, mas não pode ser acedido."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  id: CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CopyDirectory(String,String,UIOption)
  nameWithType: FileSystem.CopyDirectory(String,String,UIOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(String,String,UIOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Copia os conteúdos de um diretório para outro diretório."
  remarks: "Este método copia o conteúdo do diretório de origem para o diretório de destino. Se o diretório de destino não existe, é criado. Se existir um diretório com o mesmo nome na localização de destino, o conteúdo de dois diretórios é intercalado. Pode especificar um novo nome para o diretório durante a operação.       Quando copiar os ficheiros dentro de um diretório, exceções poderão ser emitidas que são causadas por um ficheiro específico. Quando essas exceções forem emitidas, estes são consolidados numa exceção único cujos `Data` propriedade contém entradas sob a forma de um <xref:System.Collections.IDictionary>em que o caminho de ficheiro ou diretório é a chave e a mensagem de exceção específica está contida no valor correspondente.</xref:System.Collections.IDictionary> Utilize `For…Each` enumerar através as entradas.       A tabela seguinte apresenta um exemplo de uma tarefa que envolvem o `My.Computer.FileSystem.CopyDirectory` método.      |||   |-|-|   | Para | Consulte |   | Copie um diretório | [Como: copiar um diretório para outro diretório no Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example copies the contents of directory `TestDirectory1` into `TestDirectory2`, overwriting existing files.  \n  \n [!code-vb[VbVbcnMyFileSystem#49](~/add/codesnippet/visualbasic/8f7d2df3-4266-47ac-8381-_1.vb)]  \n  \n Replace `C:\\TestDirectory1` and `C:\\TestDirectory2` with the path and name of the directory you wish to copy and the location to which you wish to copy it."
  syntax:
    content: public static void CopyDirectory (string sourceDirectoryName, string destinationDirectoryName, Microsoft.VisualBasic.FileIO.UIOption showUI);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "O diretório a ser copiados."
    - id: destinationDirectoryName
      type: System.String
      description: "A localização para os quais o conteúdo do diretório deve ser copiado."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Indica se deve visualmente acompanhar o progresso da operação. Predefinição é <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para uma das seguintes razões: é uma cadeia de comprimento zero; contém apenas espaços em branco; contém carateres inválidos; ou é um caminho de dispositivo (começa com \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationDirectoryName</code>ou <code>sourceDirectoryName</code> é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia vazia."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O diretório de origem não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O caminho de origem e o caminho de destino são os mesmos."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A operação é cíclica."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de pasta no caminho contém dois pontos (:) ou está num formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O utilizador não possui as permissões necessárias para ver o caminho."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Um ficheiro de destino existe, mas não pode ser acedido."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "<code>ShowUI</code>está definido como <xref uid=&quot;langword_csharp_UIOption.AllDialogs&quot; name=&quot;UIOption.AllDialogs&quot; href=&quot;&quot;> </xref> e o utilizador cancela a operação ou não não possível copiar um ou mais ficheiros no diretório."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,System.Boolean)
  id: CopyDirectory(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CopyDirectory(String,String,Boolean)
  nameWithType: FileSystem.CopyDirectory(String,String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(String,String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Copia os conteúdos de um diretório para outro diretório."
  remarks: "Este método copia o conteúdo do diretório de origem para o diretório de destino. Se o diretório de destino não existe, é criado. Se existir um diretório com o mesmo nome na localização de destino, o conteúdo de dois diretórios é intercalado. Pode especificar um novo nome para o diretório durante a operação.       Quando copiar os ficheiros dentro de um diretório, exceções poderão ser emitidas que são causadas por um ficheiro específico, tal como um ficheiro existente durante uma intercalação ao `overwrite` está definido como `False`. Quando essas exceções forem emitidas, estes são consolidados numa exceção único cujos `Data` propriedade contém entradas sob a forma de um <xref:System.Collections.IDictionary>em que o caminho de ficheiro ou diretório é a chave e a mensagem de exceção específica está contida no valor correspondente.</xref:System.Collections.IDictionary> Utilize `For…Each` enumerar através as entradas.       A tabela seguinte apresenta um exemplo de uma tarefa que envolvem o `My.Computer.FileSystem.CopyDirectory` método.      |||   |-|-|   | Para | Consulte |   | Copie um diretório | [Como: copiar um diretório para outro diretório no Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example copies the contents of directory `TestDirectory1` into `TestDirectory2`, overwriting existing files.  \n  \n [!code-vb[VbVbcnMyFileSystem#49](~/add/codesnippet/visualbasic/fdc93a8a-3025-4efd-8987-_1.vb)]  \n  \n Replace `C:\\TestDirectory1` and `C:\\TestDirectory2` with the path and name of the directory you wish to copy and the location to which you wish to copy it."
  syntax:
    content: public static void CopyDirectory (string sourceDirectoryName, string destinationDirectoryName, bool overwrite);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "O diretório a ser copiados."
    - id: destinationDirectoryName
      type: System.String
      description: "A localização para os quais o conteúdo do diretório deve ser copiado."
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Para substituir ficheiros existentes; caso contrário <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>. Predefinição é <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para uma das seguintes razões: é uma cadeia de comprimento zero; contém apenas espaços em branco; contém carateres inválidos; ou é um caminho de dispositivo (começa com \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationDirectoryName</code>ou <code>sourceDirectoryName</code> é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia vazia."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O diretório de origem não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O caminho de origem e o caminho de destino são os mesmos."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A operação é cíclica."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de pasta no caminho contém dois pontos (:) ou está num formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O utilizador não possui as permissões necessárias para ver o caminho."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Um ficheiro de destino existe, mas não pode ser acedido."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CopyDirectory(String,String,UIOption,UICancelOption)
  nameWithType: FileSystem.CopyDirectory(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(String,String,UIOption,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Copia os conteúdos de um diretório para outro diretório."
  remarks: "Este método copia o conteúdo do diretório de origem para o diretório de destino. Se o diretório de destino não existe, é criado. Se existir um diretório com o mesmo nome na localização de destino, o conteúdo de dois diretórios é intercalado. Pode especificar um novo nome para o diretório durante a operação.       Quando copiar os ficheiros dentro de um diretório, exceções poderão ser emitidas que são causadas por um ficheiro específico. Quando essas exceções forem emitidas, estes são consolidados numa exceção único cujos `Data` propriedade contém entradas sob a forma de um <xref:System.Collections.IDictionary>em que o caminho de ficheiro ou diretório é a chave e a mensagem de exceção específica está contida no valor correspondente.</xref:System.Collections.IDictionary> Utilize `For…Each` enumerar através as entradas.       A tabela seguinte apresenta um exemplo de uma tarefa que envolvem o `My.Computer.FileSystem.CopyDirectory` método.      |||   |-|-|   | Para | Consulte |   | Copie um diretório | [Como: copiar um diretório para outro diretório no Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example copies the contents of directory `TestDirectory1` into `TestDirectory2`, overwriting existing files.  \n  \n [!code-vb[VbVbcnMyFileSystem#49](~/add/codesnippet/visualbasic/c0cf1625-22a4-46e5-a6cf-_1.vb)]  \n  \n Replace `C:\\TestDirectory1` and `C:\\TestDirectory2` with the path and name of the directory you wish to copy and the location to which you wish to copy it."
  syntax:
    content: public static void CopyDirectory (string sourceDirectoryName, string destinationDirectoryName, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "O diretório a ser copiados."
    - id: destinationDirectoryName
      type: System.String
      description: "A localização para os quais o conteúdo do diretório deve ser copiado."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Indica se deve visualmente acompanhar o progresso da operação. Predefinição é <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "Especifica que deve ser efetuada se o utilizador clica em **Cancelar** durante a operação. Predefinição é <xref href=&quot;Microsoft.VisualBasic.FileIO.UICancelOption&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para uma das seguintes razões: é uma cadeia de comprimento zero; contém apenas espaços em branco; contém carateres inválidos; ou é um caminho de dispositivo (começa com \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationDirectoryName</code>ou <code>sourceDirectoryName</code> é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia vazia."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O diretório de origem não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O caminho de origem e o caminho de destino são os mesmos."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A operação é cíclica."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de pasta no caminho contém dois pontos (:) ou está num formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O utilizador não possui as permissões necessárias para ver o caminho."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Um ficheiro de destino existe, mas não pode ser acedido."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "<code>ShowUI</code>está definido como <xref uid=&quot;langword_csharp_UIOption.AllDialogs&quot; name=&quot;UIOption.AllDialogs&quot; href=&quot;&quot;> </xref> e o utilizador cancela a operação ou não não possível copiar um ou mais ficheiros no diretório."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)
  id: CopyFile(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CopyFile(String,String)
  nameWithType: FileSystem.CopyFile(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Copia um ficheiro para uma nova localização."
  remarks: "`CopyFile`Não é preservar ACEs (entradas de controlo de acesso). O ficheiro recém-criado herda ACEs predefinido do diretório no qual é criado.       A tabela seguinte lista os exemplos de tarefas que envolvem o `My.Computer.FileSystem.CopyFile` método.      |||   |-|-|   | Para | Consulte |   | Copiar um ficheiro para o mesmo diretório. | [Como: criar uma cópia de um ficheiro no mesmo diretório em Visual Basic](~/add/includes/ajax-current-ext-md.md)|   | Copiar um ficheiro para um diretório diferente. | [Como: criar uma cópia de um ficheiro num diretório diferente no Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example copies the file `Test.txt` to the directory `TestFiles2` without overwriting existing files.  \n  \n [!code-vb[VbRefFile#15](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._216_1.vb)]  \n  \n Replace the file paths with the paths you want to use in your code.  \n  \n This example copies the file `Test.txt` to the directory `TestFiles2` and renames it `NewFile.txt`.  \n  \n [!code-vb[VbRefFile#16](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._216_2.vb)]  \n  \n Replace the file paths with the paths you want to use in your code."
  syntax:
    content: public static void CopyFile (string sourceFileName, string destinationFileName);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "O ficheiro a ser copiados."
    - id: destinationFileName
      type: System.String
      description: "A localização para o qual o ficheiro deve ser copiado."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName </code>contém informações de caminho."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>ou <code>sourceFileName</code> é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia vazia."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro de origem não é válido ou não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Um ficheiro no diretório de destino com o mesmo nome está em utilização."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de ficheiro ou diretório no caminho contém dois pontos (:) ou está num formato inválido."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O utilizador não tem a permissão necessária."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O utilizador não possui as permissões necessárias para ver o caminho."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  id: CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CopyFile(String,String,UIOption)
  nameWithType: FileSystem.CopyFile(String,String,UIOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(String,String,UIOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Copia um ficheiro para uma nova localização."
  remarks: "`CopyFile`Não é preservar ACEs (entradas de controlo de acesso). O ficheiro recém-criado herda ACEs predefinido do diretório no qual é criado.       A tabela seguinte lista os exemplos de tarefas que envolvem o `My.Computer.FileSystem.CopyFile` método.      |||   |-|-|   | Para | Consulte |   | Copiar um ficheiro para o mesmo diretório. | [Como: criar uma cópia de um ficheiro no mesmo diretório em Visual Basic](~/add/includes/ajax-current-ext-md.md)|   | Copiar um ficheiro para um diretório diferente. | [Como: criar uma cópia de um ficheiro num diretório diferente no Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example copies the file `Test.txt` to the directory `TestFiles2` without overwriting existing files.  \n  \n [!code-vb[VbRefFile#15](~/add/codesnippet/visualbasic/10e9e45a-2651-4a04-992d-_1.vb)]  \n  \n Replace the file paths with the paths you want to use in your code.  \n  \n This example copies the file `Test.txt` to the directory `TestFiles2` and renames it `NewFile.txt`.  \n  \n [!code-vb[VbRefFile#16](~/add/codesnippet/visualbasic/10e9e45a-2651-4a04-992d-_2.vb)]  \n  \n Replace the file paths with the paths you want to use in your code."
  syntax:
    content: public static void CopyFile (string sourceFileName, string destinationFileName, Microsoft.VisualBasic.FileIO.UIOption showUI);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "O ficheiro a ser copiados."
    - id: destinationFileName
      type: System.String
      description: "A localização para o qual o ficheiro deve ser copiado."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Indica se deve visualmente acompanhar o progresso da operação. Predefinição é <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName </code>contém informações de caminho."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>ou <code>sourceFileName</code> é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia vazia."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro de origem não é válido ou não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O ficheiro de destino existe e <code> overwrite </code> está definido como <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de ficheiro ou diretório no caminho contém dois pontos (:) ou está num formato inválido."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O utilizador não tem a permissão necessária."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O utilizador não possui as permissões necessárias para ver o caminho."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,System.Boolean)
  id: CopyFile(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CopyFile(String,String,Boolean)
  nameWithType: FileSystem.CopyFile(String,String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(String,String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Copia um ficheiro para uma nova localização."
  remarks: "`CopyFile`Não é preservar ACEs (entradas de controlo de acesso). O ficheiro recém-criado herda ACEs predefinido do diretório no qual é criado.       A tabela seguinte lista os exemplos de tarefas que envolvem o `My.Computer.FileSystem.CopyFile` método.      |||   |-|-|   | Para | Consulte |   | Copiar um ficheiro para o mesmo diretório. | [Como: criar uma cópia de um ficheiro no mesmo diretório em Visual Basic](~/add/includes/ajax-current-ext-md.md)|   | Copiar um ficheiro para um diretório diferente. | [Como: criar uma cópia de um ficheiro num diretório diferente no Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example copies the file `Test.txt` to the directory `TestFiles2` without overwriting existing files.  \n  \n [!code-vb[VbRefFile#15](~/add/codesnippet/visualbasic/a6a3d787-8022-457c-b6ec-_1.vb)]  \n  \n Replace the file paths with the paths you want to use in your code.  \n  \n This example copies the file `Test.txt` to the directory `TestFiles2` and renames it `NewFile.txt`.  \n  \n [!code-vb[VbRefFile#16](~/add/codesnippet/visualbasic/a6a3d787-8022-457c-b6ec-_2.vb)]  \n  \n Replace the file paths with the paths you want to use in your code."
  syntax:
    content: public static void CopyFile (string sourceFileName, string destinationFileName, bool overwrite);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "O ficheiro a ser copiados."
    - id: destinationFileName
      type: System.String
      description: "A localização para o qual o ficheiro deve ser copiado."
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se os ficheiros existentes devem ser substituídos; caso contrário <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>. Predefinição é <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName </code>contém informações de caminho."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>ou <code>sourceFileName</code> é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia vazia."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro de origem não é válido ou não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O ficheiro de destino existe e <code> overwrite </code> está definido como <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de ficheiro ou diretório no caminho contém dois pontos (:) ou está num formato inválido."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O utilizador não tem a permissão necessária."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O utilizador não possui as permissões necessárias para ver o caminho."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CopyFile(String,String,UIOption,UICancelOption)
  nameWithType: FileSystem.CopyFile(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(String,String,UIOption,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Copia um ficheiro para uma nova localização."
  remarks: "`CopyFile`Não é preservar ACEs (entradas de controlo de acesso). O ficheiro recém-criado herda ACEs predefinido do diretório no qual é criado.       A tabela seguinte lista os exemplos de tarefas que envolvem o `My.Computer.FileSystem.CopyFile` método.      |||   |-|-|   | Para | Consulte |   | Copiar um ficheiro para o mesmo diretório. | [Como: criar uma cópia de um ficheiro no mesmo diretório em Visual Basic](~/add/includes/ajax-current-ext-md.md)|   | Copiar um ficheiro para um diretório diferente. | [Como: criar uma cópia de um ficheiro num diretório diferente no Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example copies the file `Test.txt` to the directory `TestFiles2` without overwriting existing files.  \n  \n [!code-vb[VbRefFile#15](~/add/codesnippet/visualbasic/6cd9502b-4283-47ba-b4e5-_1.vb)]  \n  \n Replace the file paths with the paths you want to use in your code.  \n  \n This example copies the file `Test.txt` to the directory `TestFiles2` and renames it `NewFile.txt`.  \n  \n [!code-vb[VbRefFile#16](~/add/codesnippet/visualbasic/6cd9502b-4283-47ba-b4e5-_2.vb)]  \n  \n Replace the file paths with the paths you want to use in your code."
  syntax:
    content: public static void CopyFile (string sourceFileName, string destinationFileName, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "O ficheiro a ser copiados."
    - id: destinationFileName
      type: System.String
      description: "A localização para o qual o ficheiro deve ser copiado."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Indica se deve visualmente acompanhar o progresso da operação. Predefinição é <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "Especifica que deve ser efetuada se o utilizador clica em **Cancelar** durante a operação. Predefinição é <xref href=&quot;Microsoft.VisualBasic.FileIO.UICancelOption&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName </code>contém informações de caminho."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>ou <code>sourceFileName</code> é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia vazia."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro de origem não é válido ou não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O ficheiro de destino existe e <code> overwrite </code> está definido como <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de ficheiro ou diretório no caminho contém dois pontos (:) ou está num formato inválido."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O utilizador não tem a permissão necessária."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O utilizador não possui as permissões necessárias para ver o caminho."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "<code>UICancelOption</code>está definido como <xref uid=&quot;langword_csharp_ThrowException&quot; name=&quot;ThrowException&quot; href=&quot;&quot;> </xref>e o utilizador cancelou a operação ou um erro de e/s não especificado."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)
  id: CreateDirectory(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CreateDirectory(String)
  nameWithType: FileSystem.CreateDirectory(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Cria um diretório."
  remarks: "Se o diretório já existe, é emitida sem exceção.       A tabela seguinte apresenta um exemplo de uma tarefa que envolvem o `My.Computer.FileSystem.CreateDirectory` método.      |||   |-|-|   | Para | Consulte |   | Criar um diretório | [Como: criar um diretório no Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example creates the directory, `NewDirectory`, in `C:\\Documents and Settings\\All Users\\Documents`.  \n  \n [!code-vb[VbVbcnMyFileSystem#17](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._120_1.vb)]"
  syntax:
    content: public static void CreateDirectory (string directory);
    parameters:
    - id: directory
      type: System.String
      description: "O nome e localização do diretório."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O nome de diretório tem um formato incorreto. Por exemplo, contém carateres ilegais ou é apenas espaços em branco."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia vazia."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O nome do diretório é demasiado longo."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O nome do diretório é apenas um vírgula (:)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O diretório principal do diretório a ser criado é só de leitura"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O utilizador não tem permissão para criar o diretório."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory
  id: CurrentDirectory
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: CurrentDirectory
  nameWithType: FileSystem.CurrentDirectory
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Obtém ou define o diretório atual."
  remarks: '`CurrentDirectory`é uma variável de ambiente em todo o sistema.'
  example:
  - "This example returns the current directory and displays it in a message box.  \n  \n [!code-vb[VbVbcnMyFileSystem#18](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._62_1.vb)]  \n  \n This example sets the current directory to `C:\\TestDirectory`.  \n  \n [!code-vb[VbVbcnMyFileSystem#19](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._62_2.vb)]"
  syntax:
    content: public static string CurrentDirectory { get; set; }
    return:
      type: System.String
      description: "O diretório atual para operações de e/s de ficheiros."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho não é válido."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O utilizador não possui as permissões necessárias."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)
  id: DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: DeleteDirectory(String,DeleteDirectoryOption)
  nameWithType: FileSystem.DeleteDirectory(String,DeleteDirectoryOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(String,DeleteDirectoryOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Elimina um diretório."
  remarks: ''
  example:
  - "The example deletes the directory `OldDirectory` only if it is empty.  \n  \n [!code-vb[VbVbcnMyFileSystem#56](~/add/codesnippet/visualbasic/37e2cb0d-2f7b-442f-bdee-_1.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents.  \n  \n [!code-vb[VbVbcnMyFileSystem#57](~/add/codesnippet/visualbasic/37e2cb0d-2f7b-442f-bdee-_2.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents, asking the user to confirm the deletion, but does not send the contents to the **Recycle Bin**.  \n  \n [!code-vb[VbVbcnMyFileSystem#58](~/add/codesnippet/visualbasic/37e2cb0d-2f7b-442f-bdee-_3.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents, sending them to the **Recycle Bin**, but does not show the progress of the operation.  \n  \n [!code-vb[VbVbcnMyFileSystem#59](~/add/codesnippet/visualbasic/37e2cb0d-2f7b-442f-bdee-_4.vb)]"
  syntax:
    content: public static void DeleteDirectory (string directory, Microsoft.VisualBasic.FileIO.DeleteDirectoryOption onDirectoryNotEmpty);
    parameters:
    - id: directory
      type: System.String
      description: "Diretório a eliminar."
    - id: onDirectoryNotEmpty
      type: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption
      description: "Especifica o que deve ser efetuado quando um diretório que está a ser eliminado contém ficheiros ou diretórios. Predefinição é <xref uid=&quot;langword_csharp_DeleteDirectoryOption.DeleteAllContents&quot; name=&quot;DeleteDirectoryOption.DeleteAllContents&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O caminho é uma cadeia de comprimento de zero, tem um formato incorreto, contém apenas espaços em branco ou contém carateres inválidos (incluindo os carateres universais). O caminho é um caminho de dispositivo (começa com \\\\ \\\\.\\\\)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia vazia."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O diretório não existe ou é um ficheiro."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Um ficheiro no diretório ou subdiretório está em utilização."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O nome do diretório contém dois pontos (:)."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O utilizador não tem as permissões necessárias."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "O utilizador cancela a operação ou não é possível eliminar o diretório."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  id: DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: DeleteDirectory(String,UIOption,RecycleOption)
  nameWithType: FileSystem.DeleteDirectory(String,UIOption,RecycleOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(String,UIOption,RecycleOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Elimina um diretório."
  remarks: "O `showUI` e `recycle` parâmetros não são suportados em aplicações que não são utilizador interativa, como os serviços Microsoft."
  example:
  - "The example deletes the directory `OldDirectory` only if it is empty.  \n  \n [!code-vb[VbVbcnMyFileSystem#56](~/add/codesnippet/visualbasic/774235a1-3e7f-4503-99ae-_1.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents.  \n  \n [!code-vb[VbVbcnMyFileSystem#57](~/add/codesnippet/visualbasic/774235a1-3e7f-4503-99ae-_2.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents, asking the user to confirm the deletion, but does not send the contents to the **Recycle Bin**.  \n  \n [!code-vb[VbVbcnMyFileSystem#58](~/add/codesnippet/visualbasic/774235a1-3e7f-4503-99ae-_3.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents, sending them to the **Recycle Bin**, but does not show the progress of the operation.  \n  \n [!code-vb[VbVbcnMyFileSystem#59](~/add/codesnippet/visualbasic/774235a1-3e7f-4503-99ae-_4.vb)]"
  syntax:
    content: public static void DeleteDirectory (string directory, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.RecycleOption recycle);
    parameters:
    - id: directory
      type: System.String
      description: "Diretório a eliminar."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Especifica se pretende visualmente acompanhar o progresso da operação. Predefinição é <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
    - id: recycle
      type: Microsoft.VisualBasic.FileIO.RecycleOption
      description: "Especifica se pretende ou não o ficheiro eliminado deve ser enviado para o **Reciclagem**. Predefinição é <xref uid=&quot;langword_csharp_RecycleOption.DeletePermanently&quot; name=&quot;RecycleOption.DeletePermanently&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O caminho é uma cadeia de comprimento de zero, tem um formato incorreto, contém apenas espaços em branco ou contém carateres inválidos (incluindo os carateres universais). O caminho é um caminho de dispositivo (começa com \\\\ \\\\.\\\\)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia vazia."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O diretório não existe ou é um ficheiro."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Um ficheiro no diretório ou subdiretório está em utilização."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O nome do diretório contém dois pontos (:)."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O utilizador não tem as permissões necessárias."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "O utilizador cancela a operação ou não é possível eliminar o diretório."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: DeleteDirectory(String,UIOption,RecycleOption,UICancelOption)
  nameWithType: FileSystem.DeleteDirectory(String,UIOption,RecycleOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(String,UIOption,RecycleOption,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Elimina um diretório."
  remarks: "O `showUI`, `recycle`, e `onUserCancel` parâmetros não são suportados em aplicações que não são utilizador interativa, como os serviços Microsoft."
  example:
  - "The example deletes the directory `OldDirectory` only if it is empty.  \n  \n [!code-vb[VbVbcnMyFileSystem#56](~/add/codesnippet/visualbasic/03b0278b-ea6f-4e00-928c-_1.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents.  \n  \n [!code-vb[VbVbcnMyFileSystem#57](~/add/codesnippet/visualbasic/03b0278b-ea6f-4e00-928c-_2.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents, asking the user to confirm the deletion, but does not send the contents to the **Recycle Bin**.  \n  \n [!code-vb[VbVbcnMyFileSystem#58](~/add/codesnippet/visualbasic/03b0278b-ea6f-4e00-928c-_3.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents, sending them to the **Recycle Bin**, but does not show the progress of the operation.  \n  \n [!code-vb[VbVbcnMyFileSystem#59](~/add/codesnippet/visualbasic/03b0278b-ea6f-4e00-928c-_4.vb)]"
  syntax:
    content: public static void DeleteDirectory (string directory, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.RecycleOption recycle, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: directory
      type: System.String
      description: "Diretório a eliminar."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Especifica se pretende visualmente acompanhar o progresso da operação. Predefinição é <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
    - id: recycle
      type: Microsoft.VisualBasic.FileIO.RecycleOption
      description: "Especifica se pretende ou não o ficheiro eliminado deve ser enviado para o **Reciclagem**. Predefinição é <xref uid=&quot;langword_csharp_RecycleOption.DeletePermanently&quot; name=&quot;RecycleOption.DeletePermanently&quot; href=&quot;&quot;> </xref>."
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "Especifica se pretende gerar uma exceção se o utilizador clica em **Cancelar**."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O caminho é uma cadeia de comprimento de zero, tem um formato incorreto, contém apenas espaços em branco ou contém carateres inválidos (incluindo os carateres universais). O caminho é um caminho de dispositivo (começa com \\\\ \\\\.\\\\)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia vazia."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O diretório não existe ou é um ficheiro."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Um ficheiro no diretório ou subdiretório está em utilização."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O nome do diretório contém dois pontos (:)."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O utilizador não tem as permissões necessárias."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "O utilizador cancela a operação ou não é possível eliminar o diretório."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String)
  id: DeleteFile(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: DeleteFile(String)
  nameWithType: FileSystem.DeleteFile(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Elimina um ficheiro."
  remarks: "A tabela seguinte apresenta um exemplo de uma tarefa que envolvem o `My.Computer.FileSystem.DeleteFile` método.      |||   |-|-|   | Para | Consulte |   | Para eliminar um ficheiro | [Como: eliminar um ficheiro no Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example deletes the file `Test.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#3](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._19_1.vb)]  \n  \n This example deletes the file `Test.txt` and allows the user to confirm that the file should be deleted.  \n  \n [!code-vb[VbVbcnMyFileSystem#4](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._19_2.vb)]  \n  \n This example deletes the file `Test.txt` and sends it to the **Recycle Bin**.  \n  \n [!code-vb[VbVbcnMyFileSystem#5](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._19_3.vb)]"
  syntax:
    content: public static void DeleteFile (string file);
    parameters:
    - id: file
      type: System.String
      description: "O nome e caminho do ficheiro a eliminar."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para uma das seguintes razões: é uma cadeia de comprimento zero; contém apenas espaços em branco; contém carateres inválidos; tem uma barra onde deve ser especificado um ficheiro; ou é um caminho de dispositivo (começa com \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia vazia."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de ficheiro ou diretório no caminho contém dois pontos (:) ou está num formato inválido."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O ficheiro está em utilização."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O utilizador não possui as permissões necessárias para ver o caminho."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro não existe."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O utilizador não tem permissão para eliminar o ficheiro ou o ficheiro é só de leitura."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  id: DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: DeleteFile(String,UIOption,RecycleOption)
  nameWithType: FileSystem.DeleteFile(String,UIOption,RecycleOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(String,UIOption,RecycleOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Elimina um ficheiro."
  remarks: "O `showUI` e `recycle` parâmetros não são suportados em aplicações que não são utilizador interativa, como os serviços Microsoft.       A tabela seguinte apresenta um exemplo de uma tarefa que envolvem o `My.Computer.FileSystem.DeleteFile` método.      |||   |-|-|   | Para | Consulte |   | Para eliminar um ficheiro | [Como: eliminar um ficheiro no Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example deletes the file `Test.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#3](~/add/codesnippet/visualbasic/99989061-6d67-4b10-9ec4-_1.vb)]  \n  \n This example deletes the file `Test.txt` and allows the user to confirm that the file should be deleted.  \n  \n [!code-vb[VbVbcnMyFileSystem#4](~/add/codesnippet/visualbasic/99989061-6d67-4b10-9ec4-_2.vb)]  \n  \n This example deletes the file `Test.txt` and sends it to the **Recycle Bin**.  \n  \n [!code-vb[VbVbcnMyFileSystem#5](~/add/codesnippet/visualbasic/99989061-6d67-4b10-9ec4-_3.vb)]"
  syntax:
    content: public static void DeleteFile (string file, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.RecycleOption recycle);
    parameters:
    - id: file
      type: System.String
      description: "O nome e caminho do ficheiro a eliminar."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Indica se deve visualmente acompanhar o progresso da operação. Predefinição é <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
    - id: recycle
      type: Microsoft.VisualBasic.FileIO.RecycleOption
      description: "Se o ficheiro eliminado deve ser enviado para o **Reciclagem**. Predefinição é <xref uid=&quot;langword_csharp_RecycleOption.DeletePermanently&quot; name=&quot;RecycleOption.DeletePermanently&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para uma das seguintes razões: é uma cadeia de comprimento zero; contém apenas espaços em branco; contém carateres inválidos; tem uma barra onde deve ser especificado um ficheiro; ou é um caminho de dispositivo (começa com \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia vazia."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de ficheiro ou diretório no caminho contém dois pontos (:) ou está num formato inválido."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O ficheiro está em utilização."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O utilizador não possui as permissões necessárias para ver o caminho."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro não existe."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O utilizador não tem permissão para eliminar o ficheiro ou o ficheiro é só de leitura."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: DeleteFile(String,UIOption,RecycleOption,UICancelOption)
  nameWithType: FileSystem.DeleteFile(String,UIOption,RecycleOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(String,UIOption,RecycleOption,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Elimina um ficheiro."
  remarks: "O `showUI`, `recycle`, e `onUserCancel` parâmetros não são suportados em aplicações que não são utilizador interativa, como os serviços Microsoft.       A tabela seguinte apresenta um exemplo de uma tarefa que envolvem o `My.Computer.FileSystem.DeleteFile` método.      |||   |-|-|   | Para | Consulte |   | Para eliminar um ficheiro | [Como: eliminar um ficheiro no Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example deletes the file `Test.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#3](~/add/codesnippet/visualbasic/cad1fd49-c6fe-4568-9bc0-_1.vb)]  \n  \n This example deletes the file `Test.txt` and allows the user to confirm that the file should be deleted.  \n  \n [!code-vb[VbVbcnMyFileSystem#4](~/add/codesnippet/visualbasic/cad1fd49-c6fe-4568-9bc0-_2.vb)]  \n  \n This example deletes the file `Test.txt` and sends it to the **Recycle Bin**.  \n  \n [!code-vb[VbVbcnMyFileSystem#5](~/add/codesnippet/visualbasic/cad1fd49-c6fe-4568-9bc0-_3.vb)]"
  syntax:
    content: public static void DeleteFile (string file, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.RecycleOption recycle, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: file
      type: System.String
      description: "O nome e caminho do ficheiro a eliminar."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Indica se deve visualmente acompanhar o progresso da operação. Predefinição é <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
    - id: recycle
      type: Microsoft.VisualBasic.FileIO.RecycleOption
      description: "Se o ficheiro eliminado deve ser enviado para o **Reciclagem**. Predefinição é <xref uid=&quot;langword_csharp_RecycleOption.DeletePermanently&quot; name=&quot;RecycleOption.DeletePermanently&quot; href=&quot;&quot;> </xref>."
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "Especifica se pretende ou não é emitida uma exceção quando o utilizador cancela a operação. Predefinição é <xref uid=&quot;langword_csharp_UICancelOption.ThrowException&quot; name=&quot;UICancelOption.ThrowException&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para uma das seguintes razões: é uma cadeia de comprimento zero; contém apenas espaços em branco; contém carateres inválidos; tem uma barra onde deve ser especificado um ficheiro; ou é um caminho de dispositivo (começa com \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia vazia."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de ficheiro ou diretório no caminho contém dois pontos (:) ou está num formato inválido."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O ficheiro está em utilização."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O utilizador não possui as permissões necessárias para ver o caminho."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro não existe."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O utilizador não tem permissão para eliminar o ficheiro ou o ficheiro é só de leitura."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "O utilizador cancelou a operação e <code> onUserCancel </code> está definido como <xref href=&quot;Microsoft.VisualBasic.FileIO.UICancelOption&quot;> </xref>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists(System.String)
  id: DirectoryExists(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: DirectoryExists(String)
  nameWithType: FileSystem.DirectoryExists(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Devolve <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> se o diretório especificado existe."
  remarks: ''
  example:
  - "This example determines whether the directory `C:\\backup\\logs` exists and checks its properties.  \n  \n [!code-vb[VbRefFile#13](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._66_1.vb)]"
  syntax:
    content: public static bool DirectoryExists (string directory);
    parameters:
    - id: directory
      type: System.String
      description: "Caminho do diretório."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se o diretório existe; caso contrário <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.Drives
  id: Drives
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: Drives
  nameWithType: FileSystem.Drives
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.Drives
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Devolve uma coleção só de leitura de todos os nomes de unidade disponível."
  remarks: "Esta propriedade devolve todas as unidades lógicas."
  example:
  - "This example displays the available drive names in a message box.  \n  \n [!code-vb[VbRefFile#19](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._109_1.vb)]"
  syntax:
    content: public static System.Collections.ObjectModel.ReadOnlyCollection<System.IO.DriveInfo> Drives { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IO.DriveInfo}
      description: "Uma coleção só de leitura de todos os discos disponíveis como <xref href=&quot;System.IO.DriveInfo&quot;> </xref> objetos."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.Drives*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.FileExists(System.String)
  id: FileExists(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: FileExists(String)
  nameWithType: FileSystem.FileExists(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.FileExists(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Devolve <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> se o ficheiro especificado existe."
  remarks: "Se a aplicação não tem permissões suficientes para ler o ficheiro especificado, o `FileExists` método devolve `False`, independentemente da existência do caminho; o método não acionar uma excepção."
  example:
  - "This example checks to see whether or not the file `Check.txt` exists and supplies the information in a message box.  \n  \n [!code-vb[VbRefFile#20](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._163_1.vb)]"
  syntax:
    content: public static bool FileExists (string file);
    parameters:
    - id: file
      type: System.String
      description: "O nome e caminho do ficheiro."
    return:
      type: System.Boolean
      description: "Devolve <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> se o ficheiro existe; caso contrário, este método devolve <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.FileExists*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O nome do ficheiro termina com uma barra invertida (\\\\)."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)
  id: FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: FindInFiles(String,String,Boolean,SearchOption)
  nameWithType: FileSystem.FindInFiles(String,String,Boolean,SearchOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(String,String,Boolean,SearchOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Devolve uma coleção só de leitura de cadeias que representa os nomes de ficheiros que contêm o texto especificado."
  remarks: "Uma coleção vazia é devolvida se não for encontrados nenhuma ficheiros correspondente ao padrão especificado.       A tabela seguinte apresenta um exemplo de uma tarefa que envolvem o `My.Computer.FileSystem.FindInFiles` método.      |||   |-|-|   | Para | Consulte |   | Procure um diretório para ficheiros que contêm uma cadeia específica | [Explicação passo a passo: manipulação de ficheiros e diretórios em Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example searches the directory `C:\\TestDir` for any files containing the string `\"sample string\"` and displays the results in `ListBox1`.  \n  \n [!code-vb[VbRefFile#12](~/add/codesnippet/visualbasic/c1aba623-4b25-4809-b962-_1.vb)]  \n  \n In order to work, the project must contain a `ListBox` named `ListBox1`."
  syntax:
    content: public static System.Collections.ObjectModel.ReadOnlyCollection<string> FindInFiles (string directory, string containsText, bool ignoreCase, Microsoft.VisualBasic.FileIO.SearchOption searchType);
    parameters:
    - id: directory
      type: System.String
      description: "O diretório a ser procurado."
    - id: containsText
      type: System.String
      description: "O texto de pesquisa."
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se a procura deve ser maiúsculas e minúsculas; caso contrário <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>. Predefinição é <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref>."
    - id: searchType
      type: Microsoft.VisualBasic.FileIO.SearchOption
      description: "Indica se deve incluir subpastas. Predefinição é <xref uid=&quot;langword_csharp_SearchOption.SearchTopLevelOnly&quot; name=&quot;SearchOption.SearchTopLevelOnly&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "Coleção só de leitura dos nomes de ficheiros que contêm o texto especificado..."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para uma das seguintes razões: é uma cadeia de comprimento zero; contém apenas espaços em branco; contém carateres inválidos; ou é um caminho de dispositivo (começa com `\\.\`).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia vazia."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O diretório especificado não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O diretório especificado aponta para um ficheiro existente."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O caminho do diretório especificado contém dois pontos (:) ou está num formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O utilizador não possui as permissões necessárias para ver o caminho."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O utilizador não possui as permissões necessárias."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  id: FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: FindInFiles(String,String,Boolean,SearchOption,String[])
  nameWithType: FileSystem.FindInFiles(String,String,Boolean,SearchOption,String[])
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(String,String,Boolean,SearchOption,String[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Devolve uma coleção só de leitura de cadeias que representa os nomes de ficheiros que contêm o texto especificado."
  remarks: "Uma coleção vazia é devolvida se não for encontrados nenhuma ficheiros correspondente ao padrão especificado.       A tabela seguinte apresenta um exemplo de uma tarefa que envolvem o `My.Computer.FileSystem.FindInFiles` método.      |||   |-|-|   | Para | Consulte |   | Procure um diretório para ficheiros que contêm uma cadeia específica | [Explicação passo a passo: manipulação de ficheiros e diretórios em Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example searches the directory `C:\\TestDir` for any files containing the string `\"sample string\"` and displays the results in `ListBox1`.  \n  \n [!code-vb[VbRefFile#12](~/add/codesnippet/visualbasic/3de7a74a-9724-4c87-9247-_1.vb)]  \n  \n In order to work, the project must contain a `ListBox` named `ListBox1`."
  syntax:
    content: public static System.Collections.ObjectModel.ReadOnlyCollection<string> FindInFiles (string directory, string containsText, bool ignoreCase, Microsoft.VisualBasic.FileIO.SearchOption searchType, string[] fileWildcards);
    parameters:
    - id: directory
      type: System.String
      description: "O diretório a ser procurado."
    - id: containsText
      type: System.String
      description: "O texto de pesquisa."
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se a procura deve ser maiúsculas e minúsculas; caso contrário <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>. Predefinição é <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref>."
    - id: searchType
      type: Microsoft.VisualBasic.FileIO.SearchOption
      description: "Indica se deve incluir subpastas. Predefinição é <xref uid=&quot;langword_csharp_SearchOption.SearchTopLevelOnly&quot; name=&quot;SearchOption.SearchTopLevelOnly&quot; href=&quot;&quot;> </xref>."
    - id: fileWildcards
      type: System.String[]
      description: "Padrão da ser correspondido."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "Coleção só de leitura dos nomes de ficheiros que contêm o texto especificado..."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para uma das seguintes razões: é uma cadeia de comprimento zero; contém apenas espaços em branco; contém carateres inválidos; ou é um caminho de dispositivo (começa com `\\.\`).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia vazia."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O diretório especificado não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O diretório especificado aponta para um ficheiro existente."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O caminho do diretório especificado contém dois pontos (:) ou está num formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O utilizador não possui as permissões necessárias para ver o caminho."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O utilizador não possui as permissões necessárias."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String)
  id: GetDirectories(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: GetDirectories(String)
  nameWithType: FileSystem.GetDirectories(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Devolve um conjunto de cadeias que representa os nomes de caminho dos subdiretórios dentro de um diretório."
  remarks: "A tabela seguinte apresenta um exemplo de uma tarefa que envolvem o `My.Computer.FileSystem.GetDirectories` método.      |||   |-|-|   | Para | Consulte |   | Lista subdiretórios com um padrão específico | [Como: determinar subdiretórios com um padrão específico no Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example returns all the directories in the directory structure that contain the word `Logs` in their names and adds them to `ListBox1`.  \n  \n [!code-vb[VbRefFile#10](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._39_1.vb)]  \n  \n This example requires that you have a `ListBox` named `ListBox1` on your form."
  syntax:
    content: public static System.Collections.ObjectModel.ReadOnlyCollection<string> GetDirectories (string directory);
    parameters:
    - id: directory
      type: System.String
      description: "O nome e caminho do diretório."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "Coleção só de leitura dos nomes de caminho do subdiretórios dentro do diretório especificado..."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para uma das seguintes razões: é uma cadeia de comprimento zero; contém apenas espaços em branco; contém carateres inválidos; ou é um caminho de dispositivo (começa com \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia vazia."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O diretório especificado não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O diretório especificado aponta para um ficheiro existente."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de ficheiro ou diretório no caminho contém dois pontos (:) ou está num formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O utilizador não possui as permissões necessárias para ver o caminho."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O utilizador não possui as permissões necessárias."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  id: GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: GetDirectories(String,SearchOption,String[])
  nameWithType: FileSystem.GetDirectories(String,SearchOption,String[])
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(String,SearchOption,String[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Devolve um conjunto de cadeias que representa os nomes de caminho dos subdiretórios dentro de um diretório."
  remarks: "Pode utilizar o `wildcards` parâmetro para especificar um padrão específico. Se gostaria de incluir o conteúdo dos subdiretórios de na pesquisa, defina o `searchType` parâmetro `SearchAllSubDirectories`.       Uma coleção vazia é devolvida se encontram-se não existem diretórios correspondente ao padrão especificado.       A tabela seguinte apresenta um exemplo de uma tarefa que envolvem o `My.Computer.FileSystem.GetDirectories` método.      |||   |-|-|   | Para | Consulte |   | Lista subdiretórios com um padrão específico | [Como: determinar subdiretórios com um padrão específico no Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example returns all the directories in the directory structure that contain the word `Logs` in their names and adds them to `ListBox1`.  \n  \n [!code-vb[VbRefFile#10](~/add/codesnippet/visualbasic/7bb013c4-a081-4298-a67c-_1.vb)]  \n  \n This example requires that you have a `ListBox` named `ListBox1` on your form."
  syntax:
    content: public static System.Collections.ObjectModel.ReadOnlyCollection<string> GetDirectories (string directory, Microsoft.VisualBasic.FileIO.SearchOption searchType, string[] wildcards);
    parameters:
    - id: directory
      type: System.String
      description: "O nome e caminho do diretório."
    - id: searchType
      type: Microsoft.VisualBasic.FileIO.SearchOption
      description: "Indica se deve incluir subpastas. Predefinição é <xref uid=&quot;langword_csharp_SearchOption.SearchTopLevelOnly&quot; name=&quot;SearchOption.SearchTopLevelOnly&quot; href=&quot;&quot;> </xref>."
    - id: wildcards
      type: System.String[]
      description: "Padrão de comparar os nomes."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "Coleção só de leitura dos nomes de caminho do subdiretórios dentro do diretório especificado."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para uma das seguintes razões: é uma cadeia de comprimento zero; contém apenas espaços em branco; contém carateres inválidos; ou é um caminho de dispositivo (começa com \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Uma ou mais dos carateres universais especificado é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>, uma cadeia vazia, ou contém apenas espaços."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O diretório especificado não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O diretório especificado aponta para um ficheiro existente."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de ficheiro ou diretório no caminho contém dois pontos (:) ou está num formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O utilizador não possui as permissões necessárias para ver o caminho."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O utilizador não possui as permissões necessárias."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)
  id: GetDirectoryInfo(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: GetDirectoryInfo(String)
  nameWithType: FileSystem.GetDirectoryInfo(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Devolve um <xref href=&quot;System.IO.DirectoryInfo&quot;> </xref> objeto para o caminho especificado."
  remarks: "Se o diretório não existe, é emitida uma exceção não até à primeira uma propriedade <xref:System.IO.DirectoryInfo>está a aceder ao objeto.</xref:System.IO.DirectoryInfo>"
  example:
  - "This example gets a <xref:System.IO.DirectoryInfo> object for the directory `C:\\Documents and Settings` and displays the directory's creation time, last access time, and last write time.  \n  \n [!code-vb[VbRefFile#7](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._121_1.vb)]"
  syntax:
    content: public static System.IO.DirectoryInfo GetDirectoryInfo (string directory);
    parameters:
    - id: directory
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Caminho do diretório."
    return:
      type: System.IO.DirectoryInfo
      description: "<xref href=&quot;System.IO.DirectoryInfo&quot;></xref>objeto para o caminho especificado."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para uma das seguintes razões: é uma cadeia de comprimento zero; contém apenas espaços em branco; contém carateres inválidos; ou é um caminho de dispositivo (começa com \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia vazia."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O caminho do diretório contém dois pontos (:) ou está num formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O utilizador não possui as permissões necessárias para ver o caminho"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo(System.String)
  id: GetDriveInfo(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: GetDriveInfo(String)
  nameWithType: FileSystem.GetDriveInfo(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Devolve um <xref href=&quot;System.IO.DriveInfo&quot;> </xref> objeto para a unidade especificada."
  remarks: "O <xref:System.IO.DriveInfo>classe modelos uma unidade e fornece métodos e propriedades de consulta de informações da unidade.</xref:System.IO.DriveInfo> Utilize <xref:System.IO.DriveInfo>para determinar que discos estão disponíveis e o tipo de unidades são.</xref:System.IO.DriveInfo> Também pode consultar a propriedade para determinar a capacidade e o espaço livre disponível na unidade."
  example:
  - "This example obtains a <xref:System.IO.DriveInfo> object for the C drive and uses it to display information about the drive.  \n  \n [!code-vb[VbRefFile#11](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._132_1.vb)]  \n  \n For information on the different drive types, see <xref:System.IO.DriveType>."
  syntax:
    content: public static System.IO.DriveInfo GetDriveInfo (string drive);
    parameters:
    - id: drive
      type: System.String
      description: "Unidade ser reduzida."
    return:
      type: System.IO.DriveInfo
      description: "<xref href=&quot;System.IO.DriveInfo&quot;></xref>objeto para a unidade especificada."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para uma das seguintes razões: é uma cadeia de comprimento zero; contém apenas espaços em branco; contém carateres inválidos; ou é um caminho de dispositivo (começa com \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>drive</code>é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia vazia."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O utilizador não possui as permissões necessárias para ver o caminho"
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)
  id: GetFileInfo(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: GetFileInfo(String)
  nameWithType: FileSystem.GetFileInfo(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Devolve um <xref href=&quot;System.IO.FileInfo&quot;> </xref> objeto para o ficheiro especificado."
  remarks: "Não é emitida uma exceção se o ficheiro não existe em vez disso, este será emitida pela primeira vez que propriedades do objeto são acedidas.       A tabela seguinte apresenta um exemplo de uma tarefa que envolvem o `My.Computer.FileSystem.GetFileInfo` método.      |||   |-|-|   | Para | Consulte |   | Determinar o nome e caminho de um ficheiro | [Como: analisar caminhos de ficheiro no Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example retrieves a <xref:System.IO.FileInfo?displayProperty=fullName> object for the file `MyLogFile.log` and uses it to report the file's full name, last access time, and length.  \n  \n [!code-vb[VbRefFile#1](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._167_1.vb)]"
  syntax:
    content: public static System.IO.FileInfo GetFileInfo (string file);
    parameters:
    - id: file
      type: System.String
      description: "O nome e caminho do ficheiro."
    return:
      type: System.IO.FileInfo
      description: "<xref href=&quot;System.IO.FileInfo&quot;></xref>objeto para o ficheiro especificado"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O nome do caminho tem um formato incorreto. Por exemplo, contém carateres inválidos ou é apenas espaços em branco. O nome do ficheiro tem uma marca de barra à direita."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia vazia."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O caminho contém dois pontos no meio da cadeia."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho é demasiado longo."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O utilizador não possui as permissões necessárias."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O utilizador não possui acesso do ACL (lista de controlo de acesso) para o ficheiro."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String)
  id: GetFiles(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: GetFiles(String)
  nameWithType: FileSystem.GetFiles(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Devolve uma coleção só de leitura de cadeias que representa os nomes de ficheiros dentro do diretório."
  remarks: "Uma coleção vazia é devolvida se não for encontrados nenhuma ficheiros correspondente ao padrão especificado.       A tabela seguinte lista os exemplos de tarefas que envolvem o `My.Computer.FileSystem.GetFiles` método.      |||   |-|-|   | Para | Consulte |   | Obter a coleção de ficheiros num diretório | [Como: obter a coleção de ficheiros num diretório no Visual Basic](~/add/includes/ajax-current-ext-md.md)|   | Localizar os ficheiros com um padrão específico num diretório | [Como: determinar os ficheiros com um padrão específico no Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example returns all files in the directory and adds them to `ListBox1`.  \n  \n [!code-vb[VbRefFile#5](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._183_1.vb)]  \n  \n This example requires that you have a `ListBox` named `ListBox1` on your form.  \n  \n This example returns all files in the directory with the extension `.txt` and adds them to `ListBox1`.  \n  \n [!code-vb[VbRefFile#6](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._183_2.vb)]  \n  \n This example requires that you have a `ListBox` named `ListBox1` on your form."
  syntax:
    content: public static System.Collections.ObjectModel.ReadOnlyCollection<string> GetFiles (string directory);
    parameters:
    - id: directory
      type: System.String
      description: "Diretório para ser procurado."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "Coleção só de leitura de nomes de ficheiro a partir do diretório especificado."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para uma das seguintes razões: é uma cadeia de comprimento zero; contém apenas espaços em branco; contém carateres inválidos; ou é um caminho de dispositivo (começa com \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O diretório a procurar não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>directory</code>aponta para um ficheiro existente."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de ficheiro ou diretório no caminho contém dois pontos (:) ou está num formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O utilizador não possui as permissões necessárias para ver o caminho."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O utilizador não possui as permissões necessárias."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  id: GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: GetFiles(String,SearchOption,String[])
  nameWithType: FileSystem.GetFiles(String,SearchOption,String[])
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(String,SearchOption,String[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Devolve uma coleção só de leitura de cadeias que representa os nomes de ficheiros dentro do diretório."
  remarks: "Uma coleção vazia é devolvida se não for encontrados nenhuma ficheiros correspondente ao padrão especificado.       A tabela seguinte lista os exemplos de tarefas que envolvem o `My.Computer.FileSystem.GetFiles` método.      |||   |-|-|   | Para | Consulte |   | Obter a coleção de ficheiros num diretório | [Como: obter a coleção de ficheiros num diretório no Visual Basic](~/add/includes/ajax-current-ext-md.md)|   | Localizar os ficheiros com um padrão específico num diretório | [Como: determinar os ficheiros com um padrão específico no Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example returns all files in the directory and adds them to `ListBox1`.  \n  \n [!code-vb[VbRefFile#5](~/add/codesnippet/visualbasic/5e6a1ffc-ea51-43c3-854b-_1.vb)]  \n  \n This example requires that you have a `ListBox` named `ListBox1` on your form.  \n  \n This example returns all files in the directory with the extension `.txt` and adds them to `ListBox1`.  \n  \n [!code-vb[VbRefFile#6](~/add/codesnippet/visualbasic/5e6a1ffc-ea51-43c3-854b-_2.vb)]  \n  \n This example requires that you have a `ListBox` named `ListBox1` on your form."
  syntax:
    content: public static System.Collections.ObjectModel.ReadOnlyCollection<string> GetFiles (string directory, Microsoft.VisualBasic.FileIO.SearchOption searchType, string[] wildcards);
    parameters:
    - id: directory
      type: System.String
      description: "Diretório para ser procurado."
    - id: searchType
      type: Microsoft.VisualBasic.FileIO.SearchOption
      description: "Indica se deve incluir subpastas. Predefinição é <xref uid=&quot;langword_csharp_SearchOption.SearchTopLevelOnly&quot; name=&quot;SearchOption.SearchTopLevelOnly&quot; href=&quot;&quot;> </xref>."
    - id: wildcards
      type: System.String[]
      description: "Padrão da ser correspondido."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "Coleção só de leitura de nomes de ficheiro a partir do diretório especificado."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para uma das seguintes razões: é uma cadeia de comprimento zero; contém apenas espaços em branco; contém carateres inválidos; ou é um caminho de dispositivo (começa com \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O diretório a procurar não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>directory</code>aponta para um ficheiro existente."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de ficheiro ou diretório no caminho contém dois pontos (:) ou está num formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O utilizador não possui as permissões necessárias para ver o caminho."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O utilizador não possui as permissões necessárias."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetName(System.String)
  id: GetName(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: GetName(String)
  nameWithType: FileSystem.GetName(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetName(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Analisa o nome de ficheiro fora do caminho indicado."
  remarks: "Esta é uma operação de cadeia; o `FileSystem` não é examinadas.       O `GetName` método ignora uma marca de barra no final do caminho a ocorrer.       A tabela seguinte apresenta um exemplo de uma tarefa que envolvem o `My.Computer.FileSystem.GetFileName` método.      |||   |-|-|   | Para | Consulte |   | Analisar um caminho de ficheiro | [Como: analisar caminhos de ficheiro no Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example parses a file path and returns the name of the file.  \n  \n [!code-vb[VbVbcnMyFileSystem#21](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._3_1.vb)]  \n  \n Replace the path `C:\\Testdirectory\\Testfile` with the path you wish to parse."
  syntax:
    content: public static string GetName (string path);
    parameters:
    - id: path
      type: System.String
      description: "Necessário. Caminho para ser analisada. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>."
    return:
      type: System.String
      description: "O nome de ficheiro do caminho especificado."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.GetName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath(System.String)
  id: GetParentPath(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: GetParentPath(String)
  nameWithType: FileSystem.GetParentPath(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Devolve o caminho do principal do caminho fornecido."
  remarks: "Esta é uma operação de cadeia; Não é examinado o sistema de ficheiros."
  example:
  - "This example gets the parent path for `C:\\Backups\\Tmp\\Test`.  \n  \n [!code-vb[VbRefFile#17](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._2_1.vb)]"
  syntax:
    content: public static string GetParentPath (string path);
    parameters:
    - id: path
      type: System.String
      description: "Caminho para ser reduzida."
    return:
      type: System.String
      description: "O caminho do principal do caminho fornecido."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Caminho não tem um caminho principal, porque é um caminho da raiz."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de ficheiro ou diretório no caminho contém dois pontos (:) ou está num formato inválido."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName
  id: GetTempFileName
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: GetTempFileName()
  nameWithType: FileSystem.GetTempFileName()
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Cria um ficheiro temporário de zero bytes nomes exclusivos no disco e devolve o caminho completo do que o ficheiro."
  remarks: "Este método pode ser utilizado para criar um ficheiro temporário."
  example:
  - "This example creates a temp file and returns its path.  \n  \n [!code-vb[VbVbcnMyFileSystem#12](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._71_1.vb)]"
  syntax:
    content: public static string GetTempFileName ();
    parameters: []
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>que contém o caminho completo do ficheiro temporário."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String)
  id: MoveDirectory(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: MoveDirectory(String,String)
  nameWithType: FileSystem.MoveDirectory(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Move um diretório de uma localização para outra."
  remarks: "Se é efetuada uma tentativa de mover um diretório dentro de um diretório que não existe, será criada a estrutura de destino."
  example:
  - "This example moves `Directory1` inside `Directory2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#81](~/add/codesnippet/visualbasic/9b938424-f0a1-43e1-91c4-_1.vb)]  \n  \n This example moves `Directory1` inside `Directory2`, overwriting the directory if it already exists.  \n  \n [!code-vb[VbVbcnMyFileSystem#82](~/add/codesnippet/visualbasic/9b938424-f0a1-43e1-91c4-_2.vb)]"
  syntax:
    content: public static void MoveDirectory (string sourceDirectoryName, string destinationDirectoryName);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "Caminho do diretório a ser movido."
    - id: destinationDirectoryName
      type: System.String
      description: "Caminho do diretório ao qual o diretório de origem está a ser movido."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para uma das seguintes razões: é uma cadeia de comprimento zero; contém apenas espaços em branco; contém carateres inválidos; ou é um caminho de dispositivo (começa com \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceDirectoryName</code>ou <code>destinationDirectoryName</code> é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia vazia."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O diretório não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "A origem é um diretório de raiz ou o caminho de origem e o caminho de destino são os mesmos."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A operação é cíclica."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de ficheiro ou diretório no caminho contém dois pontos (:) ou está num formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O utilizador não possui as permissões necessárias para ver o caminho."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O utilizador não tem a permissão necessária."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  id: MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: MoveDirectory(String,String,UIOption)
  nameWithType: FileSystem.MoveDirectory(String,String,UIOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(String,String,UIOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Move um diretório de uma localização para outra."
  remarks: "Se é efetuada uma tentativa de mover um diretório dentro de um diretório que não existe, será criada a estrutura de destino."
  example:
  - "This example moves `Directory1` inside `Directory2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#81](~/add/codesnippet/visualbasic/fe61004d-06a2-46b1-a90d-_1.vb)]  \n  \n This example moves `Directory1` inside `Directory2`, overwriting the directory if it already exists.  \n  \n [!code-vb[VbVbcnMyFileSystem#82](~/add/codesnippet/visualbasic/fe61004d-06a2-46b1-a90d-_2.vb)]"
  syntax:
    content: public static void MoveDirectory (string sourceDirectoryName, string destinationDirectoryName, Microsoft.VisualBasic.FileIO.UIOption showUI);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "Caminho do diretório a ser movido."
    - id: destinationDirectoryName
      type: System.String
      description: "Caminho do diretório ao qual o diretório de origem está a ser movido."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Especifica se pretende visualmente acompanhar o progresso da operação. Predefinição é <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para uma das seguintes razões: é uma cadeia de comprimento zero; contém apenas espaços em branco; contém carateres inválidos; ou é um caminho de dispositivo (começa com \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceDirectoryName</code>ou <code>destinationDirectoryName</code> é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia vazia."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O diretório não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O diretório de destino já existe e o<code> verwrite </code> está definido como <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A operação é cíclica."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de ficheiro ou diretório no caminho contém dois pontos (:) ou está num formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O utilizador não possui as permissões necessárias para ver o caminho."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O utilizador não tem a permissão necessária."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,System.Boolean)
  id: MoveDirectory(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: MoveDirectory(String,String,Boolean)
  nameWithType: FileSystem.MoveDirectory(String,String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(String,String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Move um diretório de uma localização para outra."
  remarks: "Se é efetuada uma tentativa de mover um diretório dentro de um diretório que não existe, será criada a estrutura de destino."
  example:
  - "This example moves `Directory1` inside `Directory2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#81](~/add/codesnippet/visualbasic/9ecf6293-7b0b-405f-882c-_1.vb)]  \n  \n This example moves `Directory1` inside `Directory2`, overwriting the directory if it already exists.  \n  \n [!code-vb[VbVbcnMyFileSystem#82](~/add/codesnippet/visualbasic/9ecf6293-7b0b-405f-882c-_2.vb)]"
  syntax:
    content: public static void MoveDirectory (string sourceDirectoryName, string destinationDirectoryName, bool overwrite);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "Caminho do diretório a ser movido."
    - id: destinationDirectoryName
      type: System.String
      description: "Caminho do diretório ao qual o diretório de origem está a ser movido."
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>se devem ser substituídos diretórios existentes; caso contrário <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>. Predefinição é <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para uma das seguintes razões: é uma cadeia de comprimento zero; contém apenas espaços em branco; contém carateres inválidos; ou é um caminho de dispositivo (começa com \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceDirectoryName</code>ou <code>destinationDirectoryName</code> é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia vazia."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O diretório não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O diretório de destino já existe e o<code> verwrite </code> está definido como <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A operação é cíclica."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de ficheiro ou diretório no caminho contém dois pontos (:) ou está num formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O utilizador não possui as permissões necessárias para ver o caminho."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O utilizador não tem a permissão necessária."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: MoveDirectory(String,String,UIOption,UICancelOption)
  nameWithType: FileSystem.MoveDirectory(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(String,String,UIOption,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Move um diretório de uma localização para outra."
  remarks: "Se é efetuada uma tentativa de mover um diretório dentro de um diretório que não existe, será criada a estrutura de destino."
  example:
  - "This example moves `Directory1` inside `Directory2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#81](~/add/codesnippet/visualbasic/d810659f-78df-493e-93de-_1.vb)]  \n  \n This example moves `Directory1` inside `Directory2`, overwriting the directory if it already exists.  \n  \n [!code-vb[VbVbcnMyFileSystem#82](~/add/codesnippet/visualbasic/d810659f-78df-493e-93de-_2.vb)]"
  syntax:
    content: public static void MoveDirectory (string sourceDirectoryName, string destinationDirectoryName, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "Caminho do diretório a ser movido."
    - id: destinationDirectoryName
      type: System.String
      description: "Caminho do diretório ao qual o diretório de origem está a ser movido."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Especifica se pretende visualmente acompanhar o progresso da operação. Predefinição é <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "Especifica se pretende ou não é emitida uma exceção quando o utilizador cancela a operação. Predefinição é <xref uid=&quot;langword_csharp_UICancelOption.ThrowException&quot; name=&quot;UICancelOption.ThrowException&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para uma das seguintes razões: é uma cadeia de comprimento zero; contém apenas espaços em branco; contém carateres inválidos; ou é um caminho de dispositivo (começa com \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceDirectoryName</code>ou <code>destinationDirectoryName</code> é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia vazia."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O diretório não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>onUserCancel</code>está definido como <xref uid=&quot;langword_csharp_ThrowException&quot; name=&quot;ThrowException&quot; href=&quot;&quot;> </xref> e não é possível copiar um subdiretório do ficheiro."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "<code>onUserCancel</code>está definido como <xref uid=&quot;langword_csharp_ThrowException&quot; name=&quot;ThrowException&quot; href=&quot;&quot;> </xref>e o utilizador cancela a operação ou não é possível concluir a operação."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O utilizador não possui as permissões necessárias para ver o caminho."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A operação é cíclica."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de ficheiro ou diretório no caminho contém dois pontos (:) ou está num formato inválido."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O utilizador não tem a permissão necessária."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String)
  id: MoveFile(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: MoveFile(String,String)
  nameWithType: FileSystem.MoveFile(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Move um ficheiro para uma nova localização."
  remarks: "Se a estrutura de destino não existe, é criado.       O `MoveFile` método preserva ACEs (entradas de controlo de acesso) apenas quando mover o ficheiro no mesmo volume. Isto inclui ACEs herdados, que fiquem ACEs diretas quando mover (direta ACEs têm precedência sobre ACEs herdados). Se um ficheiro é movido entre volumes, ACEs não serão copiados.       A tabela seguinte apresenta um exemplo de uma tarefa que envolvem o `My.Computer.FileSystem.MoveFile` método.      |||   |-|-|   | Para | Consulte |   | Mover um ficheiro | [Como: mover um ficheiro no Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example moves the file `Test.txt` from `TestDir1` to `TestDir2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#86](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._133_1.vb)]  \n  \n This example moves the file `Test.txt` from `TestDir1` to `TestDir2` and renames it `Test2.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#87](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._133_2.vb)]"
  syntax:
    content: public static void MoveFile (string sourceFileName, string destinationFileName);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "Caminho do ficheiro a ser movido."
    - id: destinationFileName
      type: System.String
      description: "Caminho do diretório no qual o ficheiro deve ser movido."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para uma das seguintes razões: é uma cadeia de comprimento zero; contém apenas espaços em branco; contém carateres inválidos; ou é um caminho de dispositivo (começa com \\ \\.\\); termina com uma barra.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia vazia."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro de origem não é válido ou não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O ficheiro está a ser utilizado por outro processo ou, ocorre um erro de e/s."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de ficheiro ou diretório no caminho contém dois pontos (:) ou está num formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O utilizador não possui as permissões necessárias para ver o caminho."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  id: MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: MoveFile(String,String,UIOption)
  nameWithType: FileSystem.MoveFile(String,String,UIOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(String,String,UIOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Move um ficheiro para uma nova localização."
  remarks: "Se a estrutura de destino não existe, é criado.       O `MoveFile` método preserva ACEs (entradas de controlo de acesso) apenas quando mover o ficheiro no mesmo volume. Isto inclui ACEs herdados, que fiquem ACEs diretas quando mover (direta ACEs têm precedência sobre ACEs herdados). Se um ficheiro é movido entre volumes, ACEs não serão copiados.       A tabela seguinte apresenta um exemplo de uma tarefa que envolvem o `My.Computer.FileSystem.MoveFile` método.      |||   |-|-|   | Para | Consulte |   | Mover um ficheiro | [Como: mover um ficheiro no Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example moves the file `Test.txt` from `TestDir1` to `TestDir2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#86](~/add/codesnippet/visualbasic/3e6ad2aa-c200-49f5-9d85-_1.vb)]  \n  \n This example moves the file `Test.txt` from `TestDir1` to `TestDir2` and renames it `Test2.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#87](~/add/codesnippet/visualbasic/3e6ad2aa-c200-49f5-9d85-_2.vb)]"
  syntax:
    content: public static void MoveFile (string sourceFileName, string destinationFileName, Microsoft.VisualBasic.FileIO.UIOption showUI);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "Caminho do ficheiro a ser movido."
    - id: destinationFileName
      type: System.String
      description: "Caminho do diretório no qual o ficheiro deve ser movido."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Especifica se pretende visualmente acompanhar o progresso da operação. Predefinição é <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para uma das seguintes razões: é uma cadeia de comprimento zero; contém apenas espaços em branco; contém carateres inválidos; ou é um caminho de dispositivo (começa com \\ \\.\\); termina com uma barra.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia vazia."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro de origem não é válido ou não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O ficheiro está a ser utilizado por outro processo ou, ocorre um erro de e/s."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de ficheiro ou diretório no caminho contém dois pontos (:) ou está num formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O utilizador não possui as permissões necessárias para ver o caminho."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,System.Boolean)
  id: MoveFile(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: MoveFile(String,String,Boolean)
  nameWithType: FileSystem.MoveFile(String,String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(String,String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Move um ficheiro para uma nova localização."
  remarks: "Se a estrutura de destino não existe, é criado.       O `MoveFile` método preserva ACEs (entradas de controlo de acesso) apenas quando mover o ficheiro no mesmo volume. Isto inclui ACEs herdados, que fiquem ACEs diretas quando mover (direta ACEs têm precedência sobre ACEs herdados). Se um ficheiro é movido entre volumes, ACEs não serão copiados.       A tabela seguinte apresenta um exemplo de uma tarefa que envolvem o `My.Computer.FileSystem.MoveFile` método.      |||   |-|-|   | Para | Consulte |   | Mover um ficheiro | [Como: mover um ficheiro no Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example moves the file `Test.txt` from `TestDir1` to `TestDir2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#86](~/add/codesnippet/visualbasic/061580cd-dc37-447c-a290-_1.vb)]  \n  \n This example moves the file `Test.txt` from `TestDir1` to `TestDir2` and renames it `Test2.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#87](~/add/codesnippet/visualbasic/061580cd-dc37-447c-a290-_2.vb)]"
  syntax:
    content: public static void MoveFile (string sourceFileName, string destinationFileName, bool overwrite);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "Caminho do ficheiro a ser movido."
    - id: destinationFileName
      type: System.String
      description: "Caminho do diretório no qual o ficheiro deve ser movido."
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Para substituir ficheiros existentes; caso contrário <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>. Predefinição é <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para uma das seguintes razões: é uma cadeia de comprimento zero; contém apenas espaços em branco; contém carateres inválidos; ou é um caminho de dispositivo (começa com \\ \\.\\); termina com uma barra.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia vazia."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro de origem não é válido ou não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O ficheiro está a ser utilizado por outro processo ou, ocorre um erro de e/s."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de ficheiro ou diretório no caminho contém dois pontos (:) ou está num formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O utilizador não possui as permissões necessárias para ver o caminho."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: MoveFile(String,String,UIOption,UICancelOption)
  nameWithType: FileSystem.MoveFile(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(String,String,UIOption,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Move um ficheiro para uma nova localização."
  remarks: "Se a estrutura de destino não existe, é criado.       O `MoveFile` método preserva ACEs (entradas de controlo de acesso) apenas quando mover o ficheiro no mesmo volume. Isto inclui ACEs herdados, que fiquem ACEs diretas quando mover (direta ACEs têm precedência sobre ACEs herdados). Se um ficheiro é movido entre volumes, ACEs não serão copiados.       A tabela seguinte apresenta um exemplo de uma tarefa que envolvem o `My.Computer.FileSystem.MoveFile` método.      |||   |-|-|   | Para | Consulte |   | Mover um ficheiro | [Como: mover um ficheiro no Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example moves the file `Test.txt` from `TestDir1` to `TestDir2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#86](~/add/codesnippet/visualbasic/4184c832-c8dc-48e4-b29a-_1.vb)]  \n  \n This example moves the file `Test.txt` from `TestDir1` to `TestDir2` and renames it `Test2.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#87](~/add/codesnippet/visualbasic/4184c832-c8dc-48e4-b29a-_2.vb)]"
  syntax:
    content: public static void MoveFile (string sourceFileName, string destinationFileName, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "Caminho do ficheiro a ser movido."
    - id: destinationFileName
      type: System.String
      description: "Caminho do diretório no qual o ficheiro deve ser movido."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Especifica se pretende visualmente acompanhar o progresso da operação. Predefinição é <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "Especifica se pretende ou não é emitida uma exceção quando o utilizador cancela a operação. Predefinição é <xref uid=&quot;langword_csharp_UICancelOption.ThrowException&quot; name=&quot;UICancelOption.ThrowException&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para uma das seguintes razões: é uma cadeia de comprimento zero; contém apenas espaços em branco; contém carateres inválidos; ou é um caminho de dispositivo (começa com \\ \\.\\); termina com uma barra.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia vazia."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro de origem não é válido ou não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O ficheiro está a ser utilizado por outro processo ou, ocorre um erro de e/s."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "<code>onUserCancel</code>está definido como <xref uid=&quot;langword_csharp_ThrowException&quot; name=&quot;ThrowException&quot; href=&quot;&quot;> </xref>e o utilizador cancelou a operação ou ocorre um erro de e/s não especificado."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de ficheiro ou diretório no caminho contém dois pontos (:) ou está num formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O utilizador não possui as permissões necessárias para ver o caminho."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)
  id: OpenTextFieldParser(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: OpenTextFieldParser(String)
  nameWithType: FileSystem.OpenTextFieldParser(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "O <xref uid=&quot;langword_csharp_OpenTextFieldParser&quot; name=&quot;OpenTextFieldParser&quot; href=&quot;&quot;> </xref> método permite-lhe criar um <xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;> </xref> objeto, que fornece uma forma simples e eficaz analisar ficheiros de texto estruturados, como registos. O <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref> objeto pode ser utilizado para ler ficheiros delimitados e largura fixa."
  remarks: "A tabela seguinte lista os exemplos de tarefas que envolvem o `My.Computer.FileSystem.OpenTextFieldParser` método.      |||   |-|-|   | Para | Consulte |   | Ler a partir de um ficheiro de texto delimitado | [Como: ler a partir de ficheiros de texto delimitado por vírgulas no Visual Basic](~/add/includes/ajax-current-ext-md.md)|   | Ler a partir de um ficheiro de texto de largura fixa | [Como: ler a partir de ficheiros de texto de largura fixa no Visual Basic](~/add/includes/ajax-current-ext-md.md)|   | Ler a partir de um ficheiro de texto com vários formatos | [Como: ler a partir de ficheiros de texto com vários formatos no Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example opens the `TextFieldParser``reader` and uses it to read from `C:\\TestFolder1\\Test1.txt`.  \n  \n [!code-vb[VbRefFile#18](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._156_1.vb)]"
  syntax:
    content: public static Microsoft.VisualBasic.FileIO.TextFieldParser OpenTextFieldParser (string file);
    parameters:
    - id: file
      type: System.String
      description: "O ficheiro para ser aberto com o <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref>."
    return:
      type: Microsoft.VisualBasic.FileIO.TextFieldParser
      description: "<xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;></xref>para ler o ficheiro especificado."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para uma das seguintes razões: é uma cadeia de comprimento zero; contém apenas espaços em branco; contém carateres inválidos; ou é um caminho de dispositivo (começa com \\ \\.\\); termina com uma barra.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O ficheiro está a ser utilizado por outro processo ou, ocorre um erro de e/s."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de ficheiro ou diretório no caminho contém dois pontos (:) ou está num formato inválido."
  - type: Microsoft.VisualBasic.FileIO.MalformedLineException
    commentId: T:Microsoft.VisualBasic.FileIO.MalformedLineException
    description: "Uma linha não pode ser analisada utilizando o formato especificado. A mensagem de exceção Especifica a linha fazendo com que a exceção, enquanto o <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*>propriedade é atribuída o texto contido na linha.</xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*>"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O utilizador não possui as permissões necessárias para ver o caminho."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.Int32[])
  id: OpenTextFieldParser(System.String,System.Int32[])
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: OpenTextFieldParser(String,Int32[])
  nameWithType: FileSystem.OpenTextFieldParser(String,Int32[])
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(String,Int32[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "O <xref uid=&quot;langword_csharp_OpenTextFieldParser&quot; name=&quot;OpenTextFieldParser&quot; href=&quot;&quot;> </xref> método permite-lhe criar um <xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;> </xref> objeto, que fornece uma forma simples e eficaz analisar ficheiros de texto estruturados, como registos. O <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref> objeto pode ser utilizado para ler ficheiros delimitados e largura fixa."
  remarks: "A tabela seguinte lista os exemplos de tarefas que envolvem o `My.Computer.FileSystem.OpenTextFieldParser` método.      |||   |-|-|   | Para | Consulte |   | Ler a partir de um ficheiro de texto delimitado | [Como: ler a partir de ficheiros de texto delimitado por vírgulas no Visual Basic](~/add/includes/ajax-current-ext-md.md)|   | Ler a partir de um ficheiro de texto de largura fixa | [Como: ler a partir de ficheiros de texto de largura fixa no Visual Basic](~/add/includes/ajax-current-ext-md.md)|   | Ler a partir de um ficheiro de texto com vários formatos | [Como: ler a partir de ficheiros de texto com vários formatos no Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example opens the `TextFieldParser``reader` and uses it to read from `C:\\TestFolder1\\Test1.txt`.  \n  \n [!code-vb[VbRefFile#18](~/add/codesnippet/visualbasic/23049b6e-0913-4641-bd0f-_1.vb)]"
  syntax:
    content: public static Microsoft.VisualBasic.FileIO.TextFieldParser OpenTextFieldParser (string file, int[] fieldWidths);
    parameters:
    - id: file
      type: System.String
      description: "O ficheiro para ser aberto com o <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref>."
    - id: fieldWidths
      type: System.Int32[]
      description: "Larguras dos campos."
    return:
      type: Microsoft.VisualBasic.FileIO.TextFieldParser
      description: "<xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;></xref>para ler o ficheiro especificado."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para uma das seguintes razões: é uma cadeia de comprimento zero; contém apenas espaços em branco; contém carateres inválidos; ou é um caminho de dispositivo (começa com \\ \\.\\); termina com uma barra.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O ficheiro está a ser utilizado por outro processo ou, ocorre um erro de e/s."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de ficheiro ou diretório no caminho contém dois pontos (:) ou está num formato inválido."
  - type: Microsoft.VisualBasic.FileIO.MalformedLineException
    commentId: T:Microsoft.VisualBasic.FileIO.MalformedLineException
    description: "Uma linha não pode ser analisada utilizando o formato especificado. A mensagem de exceção Especifica a linha fazendo com que a exceção, enquanto o <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*>propriedade é atribuída o texto contido na linha.</xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*>"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O utilizador não possui as permissões necessárias para ver o caminho."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.String[])
  id: OpenTextFieldParser(System.String,System.String[])
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: OpenTextFieldParser(String,String[])
  nameWithType: FileSystem.OpenTextFieldParser(String,String[])
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(String,String[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "O <xref uid=&quot;langword_csharp_OpenTextFieldParser&quot; name=&quot;OpenTextFieldParser&quot; href=&quot;&quot;> </xref> método permite-lhe criar um <xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;> </xref> objeto, que fornece uma forma simples e eficaz analisar ficheiros de texto estruturados, como registos. O <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref> objeto pode ser utilizado para ler ficheiros delimitados e largura fixa."
  remarks: "A tabela seguinte lista os exemplos de tarefas que envolvem o `My.Computer.FileSystem.OpenTextFieldParser` método.      |||   |-|-|   | Para | Consulte |   | Ler a partir de um ficheiro de texto delimitado | [Como: ler a partir de ficheiros de texto delimitado por vírgulas no Visual Basic](~/add/includes/ajax-current-ext-md.md)|   | Ler a partir de um ficheiro de texto de largura fixa | [Como: ler a partir de ficheiros de texto de largura fixa no Visual Basic](~/add/includes/ajax-current-ext-md.md)|   | Ler a partir de um ficheiro de texto com vários formatos | [Como: ler a partir de ficheiros de texto com vários formatos no Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example opens the `TextFieldParser``reader` and uses it to read from `C:\\TestFolder1\\Test1.txt`.  \n  \n [!code-vb[VbRefFile#18](~/add/codesnippet/visualbasic/714bc4c9-ee52-4bdc-875b-_1.vb)]"
  syntax:
    content: public static Microsoft.VisualBasic.FileIO.TextFieldParser OpenTextFieldParser (string file, string[] delimiters);
    parameters:
    - id: file
      type: System.String
      description: "O ficheiro para ser aberto com o <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref>."
    - id: delimiters
      type: System.String[]
      description: "Delimitadores para os campos."
    return:
      type: Microsoft.VisualBasic.FileIO.TextFieldParser
      description: "<xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;></xref>para ler o ficheiro especificado."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para uma das seguintes razões: é uma cadeia de comprimento zero; contém apenas espaços em branco; contém carateres inválidos; ou é um caminho de dispositivo (começa com \\ \\.\\); termina com uma barra.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O ficheiro está a ser utilizado por outro processo ou, ocorre um erro de e/s."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de ficheiro ou diretório no caminho contém dois pontos (:) ou está num formato inválido."
  - type: Microsoft.VisualBasic.FileIO.MalformedLineException
    commentId: T:Microsoft.VisualBasic.FileIO.MalformedLineException
    description: "Uma linha não pode ser analisada utilizando o formato especificado. A mensagem de exceção Especifica a linha fazendo com que a exceção, enquanto o <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*>propriedade é atribuída o texto contido na linha.</xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*>"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O utilizador não possui as permissões necessárias para ver o caminho."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String)
  id: OpenTextFileReader(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: OpenTextFileReader(String)
  nameWithType: FileSystem.OpenTextFileReader(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Abre uma <xref:System.IO.StreamReader>objeto ler a partir de um ficheiro.</xref:System.IO.StreamReader>"
  remarks: "Podem ser lidos apenas os ficheiros de texto com um <xref:System.IO.StreamReader>.</xref:System.IO.StreamReader>       A tabela seguinte apresenta um exemplo de uma tarefa que envolvem o `My.Computer.FileSystem.OpenTextFileReader` método.      |||   |-|-|   | Para | Consulte |   | Abra um ficheiro com um <xref:System.IO.StreamReader>|[ Como: ler o texto a partir de ficheiros com um StreamReader (Visual Basic)](~/add/includes/ajax-current-ext-md.md) | </xref:System.IO.StreamReader>"
  example:
  - "This example opens the file `Testfile.txt`, reads a line from it, and displays the line in a `MessageBox`.  \n  \n [!code-vb[VbRefFile#2](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._86_1.vb)]"
  syntax:
    content: public static System.IO.StreamReader OpenTextFileReader (string file);
    parameters:
    - id: file
      type: System.String
      description: "Ficheiro a ser lido."
    return:
      type: System.IO.StreamReader
      description: "<xref:System.IO.StreamReader>objeto a leitura do ficheiro</xref:System.IO.StreamReader>"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O nome de ficheiro termina com uma barra invertida (\\\\)."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Não é possível localizar o ficheiro especificado."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O utilizador não possui as permissões necessárias para ler a partir do ficheiro."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String,System.Text.Encoding)
  id: OpenTextFileReader(System.String,System.Text.Encoding)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: OpenTextFileReader(String,Encoding)
  nameWithType: FileSystem.OpenTextFileReader(String,Encoding)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(String,Encoding)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Abre uma <xref:System.IO.StreamReader>objeto ler a partir de um ficheiro.</xref:System.IO.StreamReader>"
  remarks: "Podem ser lidos apenas os ficheiros de texto com um <xref:System.IO.StreamReader>.</xref:System.IO.StreamReader>       A tabela seguinte apresenta um exemplo de uma tarefa que envolvem o `My.Computer.FileSystem.OpenTextFileReader` método.      |||   |-|-|   | Para | Consulte |   | Abra um ficheiro com um <xref:System.IO.StreamReader>|[ Como: ler o texto a partir de ficheiros com um StreamReader (Visual Basic)](~/add/includes/ajax-current-ext-md.md) | </xref:System.IO.StreamReader>"
  example:
  - "This example opens the file `Testfile.txt`, reads a line from it, and displays the line in a `MessageBox`.  \n  \n [!code-vb[VbRefFile#2](~/add/codesnippet/visualbasic/86e418b6-8642-47bd-853b-_1.vb)]"
  syntax:
    content: public static System.IO.StreamReader OpenTextFileReader (string file, System.Text.Encoding encoding);
    parameters:
    - id: file
      type: System.String
      description: "Ficheiro a ser lido."
    - id: encoding
      type: System.Text.Encoding
      description: "A codificação a utilizar para o conteúdo do ficheiro. Predefinição é ASCII."
    return:
      type: System.IO.StreamReader
      description: "<xref:System.IO.StreamReader>objeto a leitura do ficheiro</xref:System.IO.StreamReader>"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O nome de ficheiro termina com uma barra invertida (\\\\)."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "Não é possível localizar o ficheiro especificado."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O utilizador não possui as permissões necessárias para ler a partir do ficheiro."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean)
  id: OpenTextFileWriter(System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: OpenTextFileWriter(String,Boolean)
  nameWithType: FileSystem.OpenTextFileWriter(String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Abre uma <xref:System.IO.StreamWriter>objeto para escrever o ficheiro especificado.</xref:System.IO.StreamWriter>"
  remarks: "O `OpenTextFileWriter` método abre e inicializa uma transmissão em fluxo para um ficheiro e, em seguida, devolve a <xref:System.IO.StreamWriter>objeto para esse fluxo.</xref:System.IO.StreamWriter> Pode escrever steam como tantas vezes quantas as necessárias e, em seguida, feche-o quando tiver terminado.      > [!NOTE] > Tem de chamar o <xref:System.IO.StreamWriter.Close%2A>método no <xref:System.IO.StreamWriter>objeto para se certificar de que todos os dados corretamente é escrita no fluxo subjacente.</xref:System.IO.StreamWriter> </xref:System.IO.StreamWriter.Close%2A>       Se estiver a escrever apenas alguns cadeias para um ficheiro, poderá ser mais simples utilizar o <xref:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText%2A>método.</xref:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText%2A>       A tabela seguinte apresenta um exemplo de uma tarefa que envolvem o `My.Computer.FileSystem.OpenTextFileWriter` método.      |||   |-|-|   | Para | Consulte |   | Escrever texto para um ficheiro com um `StreamWriter` | [como: escrever texto para os ficheiros com um StreamWriter no Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example opens a <xref:System.IO.StreamWriter> with the `My.Computer.FileSystem.OpenTextFileWriter` method and uses it to write a string to a text file with the `WriteLine` method of the `StreamWriter` class.  \n  \n [!code-vb[VbRefFile#14](~/add/codesnippet/visualbasic/01606e79-13a9-4f6b-a18a-_1.vb)]"
  syntax:
    content: public static System.IO.StreamWriter OpenTextFileWriter (string file, bool append);
    parameters:
    - id: file
      type: System.String
      description: "Ficheiro para escrita."
    - id: append
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>a acrescentar para o conteúdo do ficheiro; <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> para substituir o conteúdo do ficheiro. Predefinição é <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.IO.StreamWriter
      description: "<xref:System.IO.StreamWriter>objeto a escrever o ficheiro especificado.</xref:System.IO.StreamWriter>"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O nome de ficheiro termina com uma barra."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)
  id: OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: OpenTextFileWriter(String,Boolean,Encoding)
  nameWithType: FileSystem.OpenTextFileWriter(String,Boolean,Encoding)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(String,Boolean,Encoding)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Abre uma <xref:System.IO.StreamWriter>para escrever o ficheiro especificado.</xref:System.IO.StreamWriter>"
  remarks: "O `OpenTextFileWriter` método abre e inicializa uma transmissão em fluxo para um ficheiro e, em seguida, devolve a <xref:System.IO.StreamWriter>objeto para esse fluxo.</xref:System.IO.StreamWriter> Pode escrever steam como tantas vezes quantas as necessárias e, em seguida, feche-o quando tiver terminado.      > [!NOTE] > Tem de chamar o <xref:System.IO.StreamWriter.Close%2A>método no <xref:System.IO.StreamWriter>objeto para se certificar de que todos os dados corretamente é escrita no fluxo subjacente.</xref:System.IO.StreamWriter> </xref:System.IO.StreamWriter.Close%2A>       Se estiver a escrever apenas alguns cadeias para um ficheiro, poderá ser mais simples utilizar o <xref:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText%2A>método.</xref:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText%2A>       A tabela seguinte apresenta um exemplo de uma tarefa que envolvem o `My.Computer.FileSystem.OpenTextFileWriter` método.      |||   |-|-|   | Para | Consulte |   | Escrever texto para um ficheiro com um `StreamWriter` | [como: escrever texto para os ficheiros com um StreamWriter no Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example opens a <xref:System.IO.StreamWriter> with the `My.Computer.FileSystem.OpenTextFileWriter` method and uses it to write a string to a text file with the `WriteLine` method of the `StreamWriter` class.  \n  \n [!code-vb[VbRefFile#14](~/add/codesnippet/visualbasic/dde0fe7a-3324-4e07-ba75-_1.vb)]"
  syntax:
    content: public static System.IO.StreamWriter OpenTextFileWriter (string file, bool append, System.Text.Encoding encoding);
    parameters:
    - id: file
      type: System.String
      description: "Ficheiro para escrita."
    - id: append
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>a acrescentar para o conteúdo no ficheiro; <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> para substituir o conteúdo do ficheiro. Predefinição é <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
    - id: encoding
      type: System.Text.Encoding
      description: "A codificação a utilizar em escrever no ficheiro. Predefinição é ASCII."
    return:
      type: System.IO.StreamWriter
      description: "<xref:System.IO.StreamWriter>objeto a escrever o ficheiro especificado.</xref:System.IO.StreamWriter>"
  overload: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O nome de ficheiro termina com uma barra."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes(System.String)
  id: ReadAllBytes(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: ReadAllBytes(String)
  nameWithType: FileSystem.ReadAllBytes(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Devolve o conteúdo de um ficheiro como uma matriz de bytes."
  remarks: "O `ReadAllBytes` método o `My.Computer.FileSystem` objeto permite-lhe ler a partir de um ficheiro binário. O conteúdo do ficheiro é devolvido como uma matriz de bytes.       Não decisões sobre o conteúdo do ficheiro com base no nome do ficheiro. Por exemplo, o ficheiro Form1.vb não pode ser um ficheiro de origem do Visual Basic. Certifique-se a todas as entradas antes de utilizar os dados na sua aplicação.       A tabela seguinte apresenta um exemplo de uma tarefa que envolvem o `My.Computer.FileSystem.ReadAllBytes` método.      |||   |-|-|   | Para | Consulte |   | Ler a partir de um ficheiro binário | [Como: ler a partir de ficheiros binários no Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example reads from the file `C:/Documents and Settings/selfportrait.jpg.`  \n  \n [!code-vb[VbVbcnMyFileSystem#33](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._186_1.vb)]"
  syntax:
    content: public static byte[] ReadAllBytes (string file);
    parameters:
    - id: file
      type: System.String
      description: "Ficheiro a ser lido."
    return:
      type: System.Byte[]
      description: "<xref uid=&quot;langword_csharp_Byte&quot; name=&quot;Byte&quot; href=&quot;&quot;></xref>matriz que contém o conteúdo do ficheiro."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para uma das seguintes razões: é uma cadeia de comprimento zero; contém apenas espaços em branco; contém carateres inválidos; ou é um caminho de dispositivo (começa com \\ \\.\\); termina com uma barra.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O ficheiro está a ser utilizado por outro processo ou, ocorre um erro de e/s."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de ficheiro ou diretório no caminho contém dois pontos (:) ou está num formato inválido."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Não há memória suficiente para escrever a cadeia de memória intermédia."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O utilizador não possui as permissões necessárias para ver o caminho."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String)
  id: ReadAllText(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: ReadAllText(String)
  nameWithType: FileSystem.ReadAllText(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Devolve os conteúdos de um ficheiro de texto como um <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>."
  remarks: "O `ReadAllText` método o `My.Computer.FileSystem` objeto permite-lhe ler a partir de um ficheiro de texto. O conteúdo do ficheiro é devolvido como uma cadeia.       A codificação de ficheiro pode ser especificado se o conteúdo do ficheiro é uma codificação, como ASCII ou UTF-8. Se estiver a ler a partir de um ficheiro com caracteres expandidas, tem de especificar o ficheiro codificação de utilizar outra sobrecarga do <xref:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText%2A>método.</xref:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText%2A>       Não decisões sobre o conteúdo do ficheiro com base no nome do ficheiro. Por exemplo, o ficheiro Form1.vb não pode ser um ficheiro de origem do Visual Basic. Certifique-se a todas as entradas antes de utilizar os dados na sua aplicação.       A tabela seguinte apresenta um exemplo de uma tarefa que envolvem o `My.Computer.FileSystem.ReadAllText` método.      |||   |-|-|   | Para | Consulte |   | Ler a partir de um ficheiro de texto | [Como: ler a partir de ficheiros de texto no Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example reads the contents of `Test.txt` into a string and then displays it in a message box.  \n  \n [!code-vb[VbRefFile#8](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._107_1.vb)]  \n  \n This example reads the contents of the ASCII file `Test.txt` into a string and then displays it in a message box.  \n  \n [!code-vb[VbRefFile#9](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._107_2.vb)]"
  syntax:
    content: public static string ReadAllText (string file);
    parameters:
    - id: file
      type: System.String
      description: "O nome e caminho do ficheiro para leitura."
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>que contém o conteúdo do ficheiro."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para uma das seguintes razões: é uma cadeia de comprimento zero; contém apenas espaços em branco; contém carateres inválidos; ou é um caminho de dispositivo (começa com \\ \\.\\); termina com uma barra.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O ficheiro está a ser utilizado por outro processo ou, ocorre um erro de e/s."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de ficheiro ou diretório no caminho contém dois pontos (:) ou está num formato inválido."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Não há memória suficiente para escrever a cadeia de memória intermédia."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O utilizador não possui as permissões necessárias para ver o caminho."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String,System.Text.Encoding)
  id: ReadAllText(System.String,System.Text.Encoding)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: ReadAllText(String,Encoding)
  nameWithType: FileSystem.ReadAllText(String,Encoding)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(String,Encoding)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Devolve os conteúdos de um ficheiro de texto como um <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>."
  remarks: "O `ReadAllText` método o `My.Computer.FileSystem` objeto permite-lhe ler a partir de um ficheiro de texto. O conteúdo do ficheiro é devolvido como uma cadeia.       A codificação de ficheiro pode ser especificado se o conteúdo do ficheiro é uma codificação, como ASCII ou UTF-8. Se estiver a ler a partir de um ficheiro com caracteres expandidas, tem de especificar a codificação de ficheiro.       Não decisões sobre o conteúdo do ficheiro com base no nome do ficheiro. Por exemplo, o ficheiro Form1.vb não pode ser um ficheiro de origem do Visual Basic. Certifique-se a todas as entradas antes de utilizar os dados na sua aplicação.       A tabela seguinte apresenta um exemplo de uma tarefa que envolvem o `My.Computer.FileSystem.ReadAllText` método.      |||   |-|-|   | Para | Consulte |   | Ler a partir de um ficheiro de texto | [Como: ler a partir de ficheiros de texto no Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example reads the contents of `Test.txt` into a string and then displays it in a message box.  \n  \n [!code-vb[VbRefFile#8](~/add/codesnippet/visualbasic/1582cda5-304c-4525-b252-_1.vb)]  \n  \n This example reads the contents of the ASCII file `Test.txt` into a string and then displays it in a message box.  \n  \n [!code-vb[VbRefFile#9](~/add/codesnippet/visualbasic/1582cda5-304c-4525-b252-_2.vb)]"
  syntax:
    content: public static string ReadAllText (string file, System.Text.Encoding encoding);
    parameters:
    - id: file
      type: System.String
      description: "O nome e caminho do ficheiro para leitura."
    - id: encoding
      type: System.Text.Encoding
      description: "Caráter codificação a utilizar ao ler o ficheiro. Predefinição é UTF-8."
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>que contém o conteúdo do ficheiro."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para uma das seguintes razões: é uma cadeia de comprimento zero; contém apenas espaços em branco; contém carateres inválidos; ou é um caminho de dispositivo (começa com \\ \\.\\); termina com uma barra.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O ficheiro está a ser utilizado por outro processo ou, ocorre um erro de e/s."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de ficheiro ou diretório no caminho contém dois pontos (:) ou está num formato inválido."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Não há memória suficiente para escrever a cadeia de memória intermédia."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O utilizador não possui as permissões necessárias para ver o caminho."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory(System.String,System.String)
  id: RenameDirectory(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: RenameDirectory(String,String)
  nameWithType: FileSystem.RenameDirectory(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Muda o nome de um diretório."
  remarks: "Este método não pode ser utilizado para mover um diretório; Utilize o `MoveDirectory` método para mover e mudar o nome do diretório."
  example:
  - "This example renames the `Test` directory to `SecondTest`.  \n  \n [!code-vb[VbVbcnMyFileSystem#13](~/add/codesnippet/visualbasic/313534a3-4c32-4f3e-9ae2-_1.vb)]"
  syntax:
    content: public static void RenameDirectory (string directory, string newName);
    parameters:
    - id: directory
      type: System.String
      description: "Caminho e nome do diretório a mudar o nome."
    - id: newName
      type: System.String
      description: "Novo nome para o diretório."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>newName</code>contém informações de caminho."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>.       - ou - <code>newName</code> é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia vazia."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O diretório não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Há um ficheiro existente ou um diretório com o nome especificado no <code> newName </code>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede 248 carateres."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de ficheiro ou diretório no caminho contém dois pontos (:) ou está num formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O utilizador não possui as permissões necessárias para ver o caminho."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O utilizador não tem a permissão necessária."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.RenameFile(System.String,System.String)
  id: RenameFile(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: RenameFile(String,String)
  nameWithType: FileSystem.RenameFile(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.RenameFile(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Muda o nome de um ficheiro."
  remarks: "Este método não pode ser utilizado para mover um ficheiro; Utilize o <xref:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile%2A>método para mover e mudar o nome de ficheiro.</xref:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile%2A>       A tabela seguinte apresenta um exemplo de uma tarefa que envolvem o `My.Computer.FileSystem.RenameFile` método.      |||   |-|-|   | Para | Consulte |   | Mudar o nome de um ficheiro | [Como: mudar o nome de um ficheiro no Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example renames the file `Test.txt` to `SecondTest.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#1](~/add/codesnippet/visualbasic/39c53cd2-9477-4e35-83cb-_1.vb)]  \n  \n Change \"`C:\\Test.txt`\" to the path and file name of the file that you want to rename."
  syntax:
    content: public static void RenameFile (string file, string newName);
    parameters:
    - id: file
      type: System.String
      description: "Ficheiros a mudar o nome."
    - id: newName
      type: System.String
      description: "Novo nome de ficheiro."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.RenameFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>newName</code>contém informações de caminho ou terminar com uma barra invertida (\\\\)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>.       - ou - <code>newName</code> é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia vazia."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O diretório não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Há um ficheiro existente ou um diretório com o nome especificado no <code> newName </code>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de ficheiro ou diretório no caminho contém dois pontos (:) ou está num formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O utilizador não possui as permissões necessárias para ver o caminho."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O utilizador não tem a permissão necessária."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes(System.String,System.Byte[],System.Boolean)
  id: WriteAllBytes(System.String,System.Byte[],System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: WriteAllBytes(String,Byte[],Boolean)
  nameWithType: FileSystem.WriteAllBytes(String,Byte[],Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes(String,Byte[],Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Escreve dados para um ficheiro binário."
  remarks: "Se o caminho especificado, excluindo o nome de ficheiro, não é válido, um <xref:System.IO.DirectoryNotFoundException>exceção será emitida.</xref:System.IO.DirectoryNotFoundException> Se o caminho é válido, mas o ficheiro não existe, é criado o ficheiro.      > [!NOTE] > O `WriteAllBytes` método abre um ficheiro, escreve-lo e, em seguida, fecha-lo. Código que utiliza o `WriteAllBytes` método é mais simples do que o código que utiliza um <xref:System.IO.BinaryWriter>objeto.</xref:System.IO.BinaryWriter> No entanto, se estiver a adicionar dados para um ficheiro através de um ciclo, um <xref:System.IO.BinaryWriter>objeto pode fornecer um melhor desempenho, porque apenas tem de abrir e fechar o ficheiro uma vez.</xref:System.IO.BinaryWriter>       A tabela seguinte apresenta um exemplo de uma tarefa que envolvem o `My.Computer.FileSystem.WriteAllBytes` método.      |||   |-|-|   | Para | Consulte |   | Escrever um ficheiro binário | [Como: escrever ficheiros binários no Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example appends the data array `CustomerData` to the file `CollectedData`.  \n  \n [!code-vb[VbVbcnMyFileSystem#50](~/add/codesnippet/visualbasic/45dbfd83-d122-4e5f-a7b8-_1.vb)]"
  syntax:
    content: public static void WriteAllBytes (string file, byte[] data, bool append);
    parameters:
    - id: file
      type: System.String
      description: "Caminho e nome do ficheiro para escrita."
    - id: data
      type: System.Byte[]
      description: "Dados para ser escrito para o ficheiro."
    - id: append
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>acrescentar aos conteúdos do ficheiro; <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> para substituir o conteúdo do ficheiro. Predefinição é <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para uma das seguintes razões: é uma cadeia de comprimento zero; contém apenas espaços em branco; contém carateres inválidos; ou é um caminho de dispositivo (começa com \\ \\.\\); termina com uma barra.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O ficheiro está a ser utilizado por outro processo ou, ocorre um erro de e/s."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de ficheiro ou diretório no caminho contém dois pontos (:) ou está num formato inválido."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Não há memória suficiente para escrever a cadeia de memória intermédia."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O utilizador não possui as permissões necessárias para ver o caminho."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean)
  id: WriteAllText(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: WriteAllText(String,String,Boolean)
  nameWithType: FileSystem.WriteAllText(String,String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(String,String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Escreve o texto para um ficheiro."
  remarks: "A codificação UTF-8 é utilizada para escrever no ficheiro. Para especificar uma codificação diferente, utilize uma sobrecarga diferente do <xref:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText%2A>método.</xref:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText%2A>       Se o ficheiro especificado não existir, é criado.       Se a codificação especificada não corresponde a codificação do ficheiro existente, a codificação especificada é ignorada.      > [!NOTE] > O `WriteAllText` método abre um ficheiro, escreve-lo e, em seguida, fecha-lo. Código que utiliza o `WriteAllText` método é mais simples do que o código que utiliza um <xref:System.IO.StreamWriter>objeto.</xref:System.IO.StreamWriter> No entanto, se estiver a adicionar as cadeias para um ficheiro através de um ciclo, um <xref:System.IO.StreamWriter>objeto pode fornecer um melhor desempenho, porque apenas tem de abrir e fechar o ficheiro uma vez.</xref:System.IO.StreamWriter> Para obter mais informações, consulte o <xref:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter%2A>método.</xref:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter%2A>       A tabela seguinte lista os exemplos de tarefas que envolvem o `My.Computer.FileSystem.WriteAllText` método.      |||   |-|-|   | Para | Consulte |   | Escrever texto num ficheiro | [Como: escrever texto nos ficheiros no Visual Basic](~/add/includes/ajax-current-ext-md.md)|   | Acrescentar o texto a um ficheiro | [Como: acrescentar a ficheiros de texto no Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example writes the line `\"This is new text to be added.\"` to the file `Test.txt`, overwriting any existing text in the file.  \n  \n [!code-vb[VbRefFile#21](~/add/codesnippet/visualbasic/1188930b-d690-4775-ad99-_1.vb)]  \n  \n This example writes the names of the files in the `Documents and Settings` folder to `FileList.txt`, inserting a carriage return between each for better readability.  \n  \n [!code-vb[VbRefFile#22](~/add/codesnippet/visualbasic/1188930b-d690-4775-ad99-_2.vb)]"
  syntax:
    content: public static void WriteAllText (string file, string text, bool append);
    parameters:
    - id: file
      type: System.String
      description: "Ficheiro para escrita."
    - id: text
      type: System.String
      description: "Texto a ser escrito no ficheiro."
    - id: append
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>a acrescentar para o conteúdo do ficheiro; <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> para substituir o conteúdo do ficheiro."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para uma das seguintes razões: é uma cadeia de comprimento zero; contém apenas espaços em branco; contém carateres inválidos; ou é um caminho de dispositivo (começa com \\ \\.\\); termina com uma barra.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O ficheiro está a ser utilizado por outro processo ou, ocorre um erro de e/s."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de ficheiro ou diretório no caminho contém dois pontos (:) ou está num formato inválido."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Não há memória suficiente para escrever a cadeia de memória intermédia."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O utilizador não possui as permissões necessárias para ver o caminho."
  platform:
  - net462
- uid: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)
  id: WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  langs:
  - csharp
  name: WriteAllText(String,String,Boolean,Encoding)
  nameWithType: FileSystem.WriteAllText(String,String,Boolean,Encoding)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(String,String,Boolean,Encoding)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.FileIO
  summary: "Escreve o texto para um ficheiro."
  remarks: "Se o ficheiro especificado não existir, é criado.       Se a codificação especificada não corresponde a codificação do ficheiro existente, a codificação especificada é ignorada.      > [!NOTE] > O `WriteAllText` método abre um ficheiro, escreve-lo e, em seguida, fecha-lo. Código que utiliza o `WriteAllText` método é mais simples do que o código que utiliza um <xref:System.IO.StreamWriter>objeto.</xref:System.IO.StreamWriter> No entanto, se estiver a adicionar as cadeias para um ficheiro através de um ciclo, um <xref:System.IO.StreamWriter>objeto pode fornecer um melhor desempenho, porque apenas tem de abrir e fechar o ficheiro uma vez.</xref:System.IO.StreamWriter> Para obter mais informações, consulte o <xref:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter%2A>método.</xref:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter%2A>       A tabela seguinte lista os exemplos de tarefas que envolvem o `My.Computer.FileSystem.WriteAllText` método.      |||   |-|-|   | Para | Consulte |   | Escrever texto num ficheiro | [Como: escrever texto nos ficheiros no Visual Basic](~/add/includes/ajax-current-ext-md.md)|   | Acrescentar o texto a um ficheiro | [Como: acrescentar a ficheiros de texto no Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example writes the line `\"This is new text to be added.\"` to the file `Test.txt`, overwriting any existing text in the file.  \n  \n [!code-vb[VbRefFile#21](~/add/codesnippet/visualbasic/aa785e67-61d7-4ff0-b9bf-_1.vb)]  \n  \n This example writes the names of the files in the `Documents and Settings` folder to `FileList.txt`, inserting a carriage return between each for better readability.  \n  \n [!code-vb[VbRefFile#22](~/add/codesnippet/visualbasic/aa785e67-61d7-4ff0-b9bf-_2.vb)]"
  syntax:
    content: public static void WriteAllText (string file, string text, bool append, System.Text.Encoding encoding);
    parameters:
    - id: file
      type: System.String
      description: "Ficheiro para escrita."
    - id: text
      type: System.String
      description: "Texto a ser escrito no ficheiro."
    - id: append
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>a acrescentar para o conteúdo do ficheiro; <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> para substituir o conteúdo do ficheiro."
    - id: encoding
      type: System.Text.Encoding
      description: "Que codificação a utilizar ao escrever no ficheiro."
  overload: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para uma das seguintes razões: é uma cadeia de comprimento zero; contém apenas espaços em branco; contém carateres inválidos; ou é um caminho de dispositivo (começa com \\ \\.\\); termina com uma barra.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O ficheiro está a ser utilizado por outro processo ou, ocorre um erro de e/s."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de ficheiro ou diretório no caminho contém dois pontos (:) ou está num formato inválido."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Não há memória suficiente para escrever a cadeia de memória intermédia."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O utilizador não possui as permissões necessárias para ver o caminho."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IO.DirectoryNotFoundException
  isExternal: true
  name: System.IO.DirectoryNotFoundException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IO.PathTooLongException
  isExternal: true
  name: System.IO.PathTooLongException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.OperationCanceledException
  isExternal: true
  name: System.OperationCanceledException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: MalformedLineException
  nameWithType: MalformedLineException
  fullName: Microsoft.VisualBasic.FileIO.MalformedLineException
- uid: System.OutOfMemoryException
  isExternal: true
  name: System.OutOfMemoryException
- uid: Microsoft.VisualBasic.FileIO.FileSystem.#ctor
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: FileSystem()
  nameWithType: FileSystem.FileSystem()
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.FileSystem()
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CombinePath(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CombinePath(String,String)
  nameWithType: FileSystem.CombinePath(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CombinePath(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CopyDirectory(String,String)
  nameWithType: FileSystem.CopyDirectory(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(String,String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CopyDirectory(String,String,UIOption)
  nameWithType: FileSystem.CopyDirectory(String,String,UIOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(String,String,UIOption)
- uid: Microsoft.VisualBasic.FileIO.UIOption
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: UIOption
  nameWithType: UIOption
  fullName: Microsoft.VisualBasic.FileIO.UIOption
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CopyDirectory(String,String,Boolean)
  nameWithType: FileSystem.CopyDirectory(String,String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(String,String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CopyDirectory(String,String,UIOption,UICancelOption)
  nameWithType: FileSystem.CopyDirectory(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(String,String,UIOption,UICancelOption)
- uid: Microsoft.VisualBasic.FileIO.UICancelOption
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: UICancelOption
  nameWithType: UICancelOption
  fullName: Microsoft.VisualBasic.FileIO.UICancelOption
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CopyFile(String,String)
  nameWithType: FileSystem.CopyFile(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(String,String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CopyFile(String,String,UIOption)
  nameWithType: FileSystem.CopyFile(String,String,UIOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(String,String,UIOption)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CopyFile(String,String,Boolean)
  nameWithType: FileSystem.CopyFile(String,String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(String,String,Boolean)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CopyFile(String,String,UIOption,UICancelOption)
  nameWithType: FileSystem.CopyFile(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(String,String,UIOption,UICancelOption)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CreateDirectory(String)
  nameWithType: FileSystem.CreateDirectory(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CurrentDirectory
  nameWithType: FileSystem.CurrentDirectory
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: DeleteDirectory(String,DeleteDirectoryOption)
  nameWithType: FileSystem.DeleteDirectory(String,DeleteDirectoryOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(String,DeleteDirectoryOption)
- uid: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: DeleteDirectoryOption
  nameWithType: DeleteDirectoryOption
  fullName: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: DeleteDirectory(String,UIOption,RecycleOption)
  nameWithType: FileSystem.DeleteDirectory(String,UIOption,RecycleOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(String,UIOption,RecycleOption)
- uid: Microsoft.VisualBasic.FileIO.RecycleOption
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: RecycleOption
  nameWithType: RecycleOption
  fullName: Microsoft.VisualBasic.FileIO.RecycleOption
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: DeleteDirectory(String,UIOption,RecycleOption,UICancelOption)
  nameWithType: FileSystem.DeleteDirectory(String,UIOption,RecycleOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(String,UIOption,RecycleOption,UICancelOption)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: DeleteFile(String)
  nameWithType: FileSystem.DeleteFile(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: DeleteFile(String,UIOption,RecycleOption)
  nameWithType: FileSystem.DeleteFile(String,UIOption,RecycleOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(String,UIOption,RecycleOption)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: DeleteFile(String,UIOption,RecycleOption,UICancelOption)
  nameWithType: FileSystem.DeleteFile(String,UIOption,RecycleOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(String,UIOption,RecycleOption,UICancelOption)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: DirectoryExists(String)
  nameWithType: FileSystem.DirectoryExists(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists(String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.Drives
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: Drives
  nameWithType: FileSystem.Drives
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.Drives
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IO.DriveInfo}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<DriveInfo>
  nameWithType: ReadOnlyCollection<DriveInfo>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IO.DriveInfo>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IO.DriveInfo>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.DriveInfo
    name: DriveInfo
    nameWithType: DriveInfo
    fullName: DriveInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.VisualBasic.FileIO.FileSystem.FileExists(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: FileExists(String)
  nameWithType: FileSystem.FileExists(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.FileExists(String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: FindInFiles(String,String,Boolean,SearchOption)
  nameWithType: FileSystem.FindInFiles(String,String,Boolean,SearchOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(String,String,Boolean,SearchOption)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<String>
  nameWithType: ReadOnlyCollection<String>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.String>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.VisualBasic.FileIO.SearchOption
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: SearchOption
  nameWithType: SearchOption
  fullName: Microsoft.VisualBasic.FileIO.SearchOption
- uid: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: FindInFiles(String,String,Boolean,SearchOption,String[])
  nameWithType: FileSystem.FindInFiles(String,String,Boolean,SearchOption,String[])
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(String,String,Boolean,SearchOption,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetDirectories(String)
  nameWithType: FileSystem.GetDirectories(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetDirectories(String,SearchOption,String[])
  nameWithType: FileSystem.GetDirectories(String,SearchOption,String[])
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(String,SearchOption,String[])
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetDirectoryInfo(String)
  nameWithType: FileSystem.GetDirectoryInfo(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(String)
- uid: System.IO.DirectoryInfo
  parent: System.IO
  isExternal: false
  name: DirectoryInfo
  nameWithType: DirectoryInfo
  fullName: System.IO.DirectoryInfo
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetDriveInfo(String)
  nameWithType: FileSystem.GetDriveInfo(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo(String)
- uid: System.IO.DriveInfo
  parent: System.IO
  isExternal: false
  name: DriveInfo
  nameWithType: DriveInfo
  fullName: System.IO.DriveInfo
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetFileInfo(String)
  nameWithType: FileSystem.GetFileInfo(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(String)
- uid: System.IO.FileInfo
  parent: System.IO
  isExternal: false
  name: FileInfo
  nameWithType: FileInfo
  fullName: System.IO.FileInfo
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetFiles(String)
  nameWithType: FileSystem.GetFiles(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetFiles(String,SearchOption,String[])
  nameWithType: FileSystem.GetFiles(String,SearchOption,String[])
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(String,SearchOption,String[])
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetName(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetName(String)
  nameWithType: FileSystem.GetName(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetName(String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetParentPath(String)
  nameWithType: FileSystem.GetParentPath(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath(String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetTempFileName()
  nameWithType: FileSystem.GetTempFileName()
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName()
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: MoveDirectory(String,String)
  nameWithType: FileSystem.MoveDirectory(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(String,String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: MoveDirectory(String,String,UIOption)
  nameWithType: FileSystem.MoveDirectory(String,String,UIOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(String,String,UIOption)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: MoveDirectory(String,String,Boolean)
  nameWithType: FileSystem.MoveDirectory(String,String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(String,String,Boolean)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: MoveDirectory(String,String,UIOption,UICancelOption)
  nameWithType: FileSystem.MoveDirectory(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(String,String,UIOption,UICancelOption)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: MoveFile(String,String)
  nameWithType: FileSystem.MoveFile(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(String,String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: MoveFile(String,String,UIOption)
  nameWithType: FileSystem.MoveFile(String,String,UIOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(String,String,UIOption)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: MoveFile(String,String,Boolean)
  nameWithType: FileSystem.MoveFile(String,String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(String,String,Boolean)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: MoveFile(String,String,UIOption,UICancelOption)
  nameWithType: FileSystem.MoveFile(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(String,String,UIOption,UICancelOption)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: OpenTextFieldParser(String)
  nameWithType: FileSystem.OpenTextFieldParser(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(String)
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: TextFieldParser
  nameWithType: TextFieldParser
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.Int32[])
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: OpenTextFieldParser(String,Int32[])
  nameWithType: FileSystem.OpenTextFieldParser(String,Int32[])
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(String,Int32[])
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.String[])
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: OpenTextFieldParser(String,String[])
  nameWithType: FileSystem.OpenTextFieldParser(String,String[])
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(String,String[])
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: OpenTextFileReader(String)
  nameWithType: FileSystem.OpenTextFileReader(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(String)
- uid: System.IO.StreamReader
  parent: System.IO
  isExternal: true
  name: StreamReader
  nameWithType: StreamReader
  fullName: System.IO.StreamReader
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String,System.Text.Encoding)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: OpenTextFileReader(String,Encoding)
  nameWithType: FileSystem.OpenTextFileReader(String,Encoding)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(String,Encoding)
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: OpenTextFileWriter(String,Boolean)
  nameWithType: FileSystem.OpenTextFileWriter(String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(String,Boolean)
- uid: System.IO.StreamWriter
  parent: System.IO
  isExternal: true
  name: StreamWriter
  nameWithType: StreamWriter
  fullName: System.IO.StreamWriter
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: OpenTextFileWriter(String,Boolean,Encoding)
  nameWithType: FileSystem.OpenTextFileWriter(String,Boolean,Encoding)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(String,Boolean,Encoding)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: ReadAllBytes(String)
  nameWithType: FileSystem.ReadAllBytes(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes(String)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: ReadAllText(String)
  nameWithType: FileSystem.ReadAllText(String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String,System.Text.Encoding)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: ReadAllText(String,Encoding)
  nameWithType: FileSystem.ReadAllText(String,Encoding)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(String,Encoding)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: RenameDirectory(String,String)
  nameWithType: FileSystem.RenameDirectory(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory(String,String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.RenameFile(System.String,System.String)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: RenameFile(String,String)
  nameWithType: FileSystem.RenameFile(String,String)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.RenameFile(String,String)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes(System.String,System.Byte[],System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: WriteAllBytes(String,Byte[],Boolean)
  nameWithType: FileSystem.WriteAllBytes(String,Byte[],Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes(String,Byte[],Boolean)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: WriteAllText(String,String,Boolean)
  nameWithType: FileSystem.WriteAllText(String,String,Boolean)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(String,String,Boolean)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: WriteAllText(String,String,Boolean,Encoding)
  nameWithType: FileSystem.WriteAllText(String,String,Boolean,Encoding)
  fullName: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(String,String,Boolean,Encoding)
- uid: Microsoft.VisualBasic.FileIO.FileSystem.#ctor*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: FileSystem
  nameWithType: FileSystem.FileSystem
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CombinePath*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CombinePath
  nameWithType: FileSystem.CombinePath
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CopyDirectory
  nameWithType: FileSystem.CopyDirectory
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CopyFile*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CopyFile
  nameWithType: FileSystem.CopyFile
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CreateDirectory
  nameWithType: FileSystem.CreateDirectory
- uid: Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: CurrentDirectory
  nameWithType: FileSystem.CurrentDirectory
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: DeleteDirectory
  nameWithType: FileSystem.DeleteDirectory
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: DeleteFile
  nameWithType: FileSystem.DeleteFile
- uid: Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: DirectoryExists
  nameWithType: FileSystem.DirectoryExists
- uid: Microsoft.VisualBasic.FileIO.FileSystem.Drives*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: Drives
  nameWithType: FileSystem.Drives
- uid: Microsoft.VisualBasic.FileIO.FileSystem.FileExists*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: FileExists
  nameWithType: FileSystem.FileExists
- uid: Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: FindInFiles
  nameWithType: FileSystem.FindInFiles
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetDirectories
  nameWithType: FileSystem.GetDirectories
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetDirectoryInfo
  nameWithType: FileSystem.GetDirectoryInfo
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetDriveInfo
  nameWithType: FileSystem.GetDriveInfo
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetFileInfo
  nameWithType: FileSystem.GetFileInfo
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetFiles*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetFiles
  nameWithType: FileSystem.GetFiles
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetName*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetName
  nameWithType: FileSystem.GetName
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetParentPath
  nameWithType: FileSystem.GetParentPath
- uid: Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: GetTempFileName
  nameWithType: FileSystem.GetTempFileName
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: MoveDirectory
  nameWithType: FileSystem.MoveDirectory
- uid: Microsoft.VisualBasic.FileIO.FileSystem.MoveFile*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: MoveFile
  nameWithType: FileSystem.MoveFile
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: OpenTextFieldParser
  nameWithType: FileSystem.OpenTextFieldParser
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: OpenTextFileReader
  nameWithType: FileSystem.OpenTextFileReader
- uid: Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: OpenTextFileWriter
  nameWithType: FileSystem.OpenTextFileWriter
- uid: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: ReadAllBytes
  nameWithType: FileSystem.ReadAllBytes
- uid: Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: ReadAllText
  nameWithType: FileSystem.ReadAllText
- uid: Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: RenameDirectory
  nameWithType: FileSystem.RenameDirectory
- uid: Microsoft.VisualBasic.FileIO.FileSystem.RenameFile*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: RenameFile
  nameWithType: FileSystem.RenameFile
- uid: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: WriteAllBytes
  nameWithType: FileSystem.WriteAllBytes
- uid: Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText*
  parent: Microsoft.VisualBasic.FileIO.FileSystem
  isExternal: false
  name: WriteAllText
  nameWithType: FileSystem.WriteAllText
