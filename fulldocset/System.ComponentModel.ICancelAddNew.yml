### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.ICancelAddNew
  id: ICancelAddNew
  children:
  - System.ComponentModel.ICancelAddNew.CancelNew(System.Int32)
  - System.ComponentModel.ICancelAddNew.EndNew(System.Int32)
  langs:
  - csharp
  name: ICancelAddNew
  nameWithType: ICancelAddNew
  fullName: System.ComponentModel.ICancelAddNew
  type: Interface
  summary: "Adds transactional capability when adding a new item to a collection."
  remarks: "The ICancelAddNew interface enables a collection to add a new item in an extensible way. The new item subsequently can be committed or rolled back. The <xref:System.ComponentModel.IBindingList.AddNew%2A> method of the collection is used to tentatively add the item, which is subsequently transacted through the following operations:      -   The <xref:System.ComponentModel.ICancelAddNew.EndNew%2A> method will explicitly commit the pending addition.      -   Performing another collection operation, such as an insertion, removal, or move will implicitly commit the pending addition.      -   The <xref:System.ComponentModel.ICancelAddNew.CancelNew%2A> method will roll back the pending addition if it has not already been committed.      > [!NOTE] >  In some scenarios, such as Windows Forms complex data binding, the collection may receive <xref:System.ComponentModel.ICancelAddNew.CancelNew%2A> or <xref:System.ComponentModel.ICancelAddNew.EndNew%2A> calls for items other than the newly added item. (Each item is typically a row in a data view.) Ignore these calls; cancel or commit the new item only when that item&quot;s index is specified.       There are two models that allow transactional addition of an item to a data-bound collection:      -   The older model relies directly on a collection that implements the <xref:System.ComponentModel.IBindingList> interface and is data-bound directly using the <xref:System.Windows.Forms.CurrencyManager?displayProperty=fullName> class. The <xref:System.Windows.Forms.CurrencyManager.AddNew%2A>, <xref:System.Windows.Forms.CurrencyManager.EndCurrentEdit%2A>, and <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A> methods of the <xref:System.Windows.Forms.CurrencyManager?displayProperty=fullName> class are responsible for transactional support for adding new items. However, this functionality depends upon the items supporting transactional behavior through the <xref:System.ComponentModel.IEditableObject> interface. If the items do not support this interface, the item will always be added to the list, regardless of subsequent calls to <xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A>.      -   The newer model supports a more robust data-binding scenario through the generic <xref:System.ComponentModel.BindingList%601> class, which implements the <xref:System.ComponentModel.IBindingList> and ICancelAddNew interfaces. In this case, the transactional support is managed by the <xref:System.ComponentModel.BindingList%601> collection directly."
  syntax:
    content: public interface ICancelAddNew
  implements: []
  platform:
  - net462
- uid: System.ComponentModel.ICancelAddNew.CancelNew(System.Int32)
  id: CancelNew(System.Int32)
  parent: System.ComponentModel.ICancelAddNew
  langs:
  - csharp
  name: CancelNew(Int32)
  nameWithType: ICancelAddNew.CancelNew(Int32)
  fullName: System.ComponentModel.ICancelAddNew.CancelNew(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Discards a pending new item from the collection."
  remarks: "The CancelNew method rolls back a pending addition (<xref:System.ComponentModel.IBindingList.AddNew%2A>) of an item previously added to the collection at position `itemIndex`. The index parameter is necessary because several new items can be simultaneously pending."
  syntax:
    content: public void CancelNew (int itemIndex);
    parameters:
    - id: itemIndex
      type: System.Int32
      description: "The index of the item that was previously added to the collection."
  overload: System.ComponentModel.ICancelAddNew.CancelNew*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ICancelAddNew.EndNew(System.Int32)
  id: EndNew(System.Int32)
  parent: System.ComponentModel.ICancelAddNew
  langs:
  - csharp
  name: EndNew(Int32)
  nameWithType: ICancelAddNew.EndNew(Int32)
  fullName: System.ComponentModel.ICancelAddNew.EndNew(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Commits a pending new item to the collection."
  remarks: "The EndNew commits a pending addition (<xref:System.ComponentModel.IBindingList.AddNew%2A>) of an item previously added to the collection at position `itemIndex`. The index parameter is necessary because several new items can be simultaneously pending."
  syntax:
    content: public void EndNew (int itemIndex);
    parameters:
    - id: itemIndex
      type: System.Int32
      description: "The index of the item that was previously added to the collection."
  overload: System.ComponentModel.ICancelAddNew.EndNew*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.ICancelAddNew.CancelNew(System.Int32)
  parent: System.ComponentModel.ICancelAddNew
  isExternal: false
  name: CancelNew(Int32)
  nameWithType: ICancelAddNew.CancelNew(Int32)
  fullName: System.ComponentModel.ICancelAddNew.CancelNew(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.ICancelAddNew.EndNew(System.Int32)
  parent: System.ComponentModel.ICancelAddNew
  isExternal: false
  name: EndNew(Int32)
  nameWithType: ICancelAddNew.EndNew(Int32)
  fullName: System.ComponentModel.ICancelAddNew.EndNew(Int32)
- uid: System.ComponentModel.ICancelAddNew.CancelNew*
  parent: System.ComponentModel.ICancelAddNew
  isExternal: false
  name: CancelNew
  nameWithType: ICancelAddNew.CancelNew
- uid: System.ComponentModel.ICancelAddNew.EndNew*
  parent: System.ComponentModel.ICancelAddNew
  isExternal: false
  name: EndNew
  nameWithType: ICancelAddNew.EndNew
