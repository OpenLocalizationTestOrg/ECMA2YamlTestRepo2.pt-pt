### YamlMime:ManagedReference
items:
- uid: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  id: IMultiTargetingSupportService
  children:
  - System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetReflectionAssembly(System.Reflection.AssemblyName)
  - System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetRuntimeType(System.Type)
  - System.Activities.Presentation.Hosting.IMultiTargetingSupportService.IsSupportedType(System.Type)
  langs:
  - csharp
  name: IMultiTargetingSupportService
  nameWithType: IMultiTargetingSupportService
  fullName: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  type: Interface
  summary: "Provides multi-targeting for [!INCLUDE[wfd1](~/add/includes/wfd1-md.md)] hosts."
  remarks: "*Multi-targeting* is the ability to find the right version of the loaded assembly that corresponds to the target [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] version of the current workflow project in [!INCLUDE[vs2010](~/add/includes/vs2010-md.md)].       This interface is implemented and used internally by [!INCLUDE[wf1](~/add/includes/wf1-md.md)] designer components to resolve [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] assemblies in a multi-targeting aware fashion within the [!INCLUDE[vs2010](~/add/includes/vs2010-md.md)] hosting application. The [!INCLUDE[wf1](~/add/includes/wf1-md.md)] designer components use the implementation of this interface only when additional assemblies need to be loaded dynamically into the editing `AppDomain`."
  syntax:
    content: public interface IMultiTargetingSupportService
  implements: []
  platform:
  - net462
- uid: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetReflectionAssembly(System.Reflection.AssemblyName)
  id: GetReflectionAssembly(System.Reflection.AssemblyName)
  parent: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  langs:
  - csharp
  name: GetReflectionAssembly(AssemblyName)
  nameWithType: IMultiTargetingSupportService.GetReflectionAssembly(AssemblyName)
  fullName: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetReflectionAssembly(AssemblyName)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Hosting
  summary: "Returns the currently loaded assembly given the assembly name."
  syntax:
    content: public System.Reflection.Assembly GetReflectionAssembly (System.Reflection.AssemblyName targetAssemblyName);
    parameters:
    - id: targetAssemblyName
      type: System.Reflection.AssemblyName
      description: "The assembly name."
    return:
      type: System.Reflection.Assembly
      description: "The currently loaded assembly given the assembly name."
  overload: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetReflectionAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetRuntimeType(System.Type)
  id: GetRuntimeType(System.Type)
  parent: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  langs:
  - csharp
  name: GetRuntimeType(Type)
  nameWithType: IMultiTargetingSupportService.GetRuntimeType(Type)
  fullName: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetRuntimeType(Type)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Hosting
  summary: "Gets the runtime type that corresponds to the specified type."
  syntax:
    content: public Type GetRuntimeType (Type reflectionType);
    parameters:
    - id: reflectionType
      type: System.Type
      description: "The type to get the runtime type of."
    return:
      type: System.Type
      description: "The runtime type that corresponds to the specified type."
  overload: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetRuntimeType*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.IsSupportedType(System.Type)
  id: IsSupportedType(System.Type)
  parent: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  langs:
  - csharp
  name: IsSupportedType(Type)
  nameWithType: IMultiTargetingSupportService.IsSupportedType(Type)
  fullName: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.IsSupportedType(Type)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Hosting
  summary: "Returns a value that indicates whether the specified type is supported."
  syntax:
    content: public bool IsSupportedType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "The type to inspect."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the specified type is supported; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.IsSupportedType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetReflectionAssembly(System.Reflection.AssemblyName)
  parent: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  isExternal: false
  name: GetReflectionAssembly(AssemblyName)
  nameWithType: IMultiTargetingSupportService.GetReflectionAssembly(AssemblyName)
  fullName: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetReflectionAssembly(AssemblyName)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Reflection.AssemblyName
  parent: System.Reflection
  isExternal: true
  name: AssemblyName
  nameWithType: AssemblyName
  fullName: System.Reflection.AssemblyName
- uid: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetRuntimeType(System.Type)
  parent: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  isExternal: false
  name: GetRuntimeType(Type)
  nameWithType: IMultiTargetingSupportService.GetRuntimeType(Type)
  fullName: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetRuntimeType(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.IsSupportedType(System.Type)
  parent: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  isExternal: false
  name: IsSupportedType(Type)
  nameWithType: IMultiTargetingSupportService.IsSupportedType(Type)
  fullName: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.IsSupportedType(Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetReflectionAssembly*
  parent: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  isExternal: false
  name: GetReflectionAssembly
  nameWithType: IMultiTargetingSupportService.GetReflectionAssembly
- uid: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.GetRuntimeType*
  parent: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  isExternal: false
  name: GetRuntimeType
  nameWithType: IMultiTargetingSupportService.GetRuntimeType
- uid: System.Activities.Presentation.Hosting.IMultiTargetingSupportService.IsSupportedType*
  parent: System.Activities.Presentation.Hosting.IMultiTargetingSupportService
  isExternal: false
  name: IsSupportedType
  nameWithType: IMultiTargetingSupportService.IsSupportedType
