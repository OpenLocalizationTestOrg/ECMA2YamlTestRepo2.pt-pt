### YamlMime:ManagedReference
items:
- uid: System.Activities.Handle
  id: Handle
  children:
  - System.Activities.Handle.#ctor
  - System.Activities.Handle.ExecutionPropertyName
  - System.Activities.Handle.OnInitialize(System.Activities.HandleInitializationContext)
  - System.Activities.Handle.OnUninitialize(System.Activities.HandleInitializationContext)
  - System.Activities.Handle.Owner
  - System.Activities.Handle.ThrowIfUninitialized
  langs:
  - csharp
  name: Handle
  nameWithType: Handle
  fullName: System.Activities.Handle
  type: Class
  summary: "Represents a type that has its lifetime controlled by the workflow runtime."
  remarks: "Types derived from Handle have their lifetimes controlled by the workflow runtime. For workflow variables of handle types, the runtime uses the required default constructor to create an instance of the type, assigns it to the <xref:System.Activities.Variable>, and calls <xref:System.Activities.Handle.OnInitialize%2A> when initializing the environment. When the variable goes out of scope, <xref:System.Activities.Handle.OnUninitialize%2A> is called."
  syntax:
    content: >-
      [System.Runtime.Serialization.DataContract]

      public abstract class Handle
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.Handle.#ctor
  id: '#ctor'
  parent: System.Activities.Handle
  langs:
  - csharp
  name: Handle()
  nameWithType: Handle.Handle()
  fullName: System.Activities.Handle.Handle()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Initializes a new instance of the <xref href=&quot;System.Activities.Handle&quot;></xref> class."
  remarks: "Classes that derive from <xref:System.Activities.Handle> must provide a default constructor."
  syntax:
    content: protected Handle ();
    parameters: []
  overload: System.Activities.Handle.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Handle.ExecutionPropertyName
  id: ExecutionPropertyName
  parent: System.Activities.Handle
  langs:
  - csharp
  name: ExecutionPropertyName
  nameWithType: Handle.ExecutionPropertyName
  fullName: System.Activities.Handle.ExecutionPropertyName
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Gets the name to be used by this <xref href=&quot;System.Activities.Handle&quot;></xref> when added to an activityâ€™s execution properties."
  syntax:
    content: public string ExecutionPropertyName { get; }
    return:
      type: System.String
      description: "The name of derived type as provided by <xref:System.Type.FullName*>."
  overload: System.Activities.Handle.ExecutionPropertyName*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Handle.OnInitialize(System.Activities.HandleInitializationContext)
  id: OnInitialize(System.Activities.HandleInitializationContext)
  parent: System.Activities.Handle
  langs:
  - csharp
  name: OnInitialize(HandleInitializationContext)
  nameWithType: Handle.OnInitialize(HandleInitializationContext)
  fullName: System.Activities.Handle.OnInitialize(HandleInitializationContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Called by the workflow runtime when the environment that contains the <xref href=&quot;System.Activities.Handle&quot;></xref> is initialized."
  syntax:
    content: protected virtual void OnInitialize (System.Activities.HandleInitializationContext context);
    parameters:
    - id: context
      type: System.Activities.HandleInitializationContext
      description: "The environment in which the handle is being created."
  overload: System.Activities.Handle.OnInitialize*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Handle.OnUninitialize(System.Activities.HandleInitializationContext)
  id: OnUninitialize(System.Activities.HandleInitializationContext)
  parent: System.Activities.Handle
  langs:
  - csharp
  name: OnUninitialize(HandleInitializationContext)
  nameWithType: Handle.OnUninitialize(HandleInitializationContext)
  fullName: System.Activities.Handle.OnUninitialize(HandleInitializationContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Called by the workflow runtime when the <xref href=&quot;System.Activities.Variable&quot;></xref> for the <xref href=&quot;System.Activities.Handle&quot;></xref> goes out of scope."
  syntax:
    content: protected virtual void OnUninitialize (System.Activities.HandleInitializationContext context);
    parameters:
    - id: context
      type: System.Activities.HandleInitializationContext
      description: "The environment in which the handle was created."
  overload: System.Activities.Handle.OnUninitialize*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Handle.Owner
  id: Owner
  parent: System.Activities.Handle
  langs:
  - csharp
  name: Owner
  nameWithType: Handle.Owner
  fullName: System.Activities.Handle.Owner
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Gets the <xref href=&quot;System.Activities.ActivityInstance&quot;></xref> that contains the <xref href=&quot;System.Activities.Variable&quot;></xref> that contains the <xref href=&quot;System.Activities.Handle&quot;></xref>."
  syntax:
    content: public System.Activities.ActivityInstance Owner { get; }
    return:
      type: System.Activities.ActivityInstance
      description: "The activity instance that contains the <xref href=&quot;System.Activities.Variable&quot;></xref> that contains the <xref href=&quot;System.Activities.Handle&quot;></xref>."
  overload: System.Activities.Handle.Owner*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Handle.ThrowIfUninitialized
  id: ThrowIfUninitialized
  parent: System.Activities.Handle
  langs:
  - csharp
  name: ThrowIfUninitialized()
  nameWithType: Handle.ThrowIfUninitialized()
  fullName: System.Activities.Handle.ThrowIfUninitialized()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Throws an <xref:System.InvalidOperationException> if the <xref href=&quot;System.Activities.Handle&quot;></xref> has not been initialized."
  remarks: "ThrowIfUninitialized gives custom handle derived class authors a convenient method to call from any methods or properties of the derived class that are not valid if the <xref:System.Activities.Handle> is uninitialized."
  syntax:
    content: protected void ThrowIfUninitialized ();
    parameters: []
  overload: System.Activities.Handle.ThrowIfUninitialized*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Activities.Handle.#ctor
  parent: System.Activities.Handle
  isExternal: false
  name: Handle()
  nameWithType: Handle.Handle()
  fullName: System.Activities.Handle.Handle()
- uid: System.Activities.Handle.ExecutionPropertyName
  parent: System.Activities.Handle
  isExternal: false
  name: ExecutionPropertyName
  nameWithType: Handle.ExecutionPropertyName
  fullName: System.Activities.Handle.ExecutionPropertyName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.Handle.OnInitialize(System.Activities.HandleInitializationContext)
  parent: System.Activities.Handle
  isExternal: false
  name: OnInitialize(HandleInitializationContext)
  nameWithType: Handle.OnInitialize(HandleInitializationContext)
  fullName: System.Activities.Handle.OnInitialize(HandleInitializationContext)
- uid: System.Activities.HandleInitializationContext
  parent: System.Activities
  isExternal: false
  name: HandleInitializationContext
  nameWithType: HandleInitializationContext
  fullName: System.Activities.HandleInitializationContext
- uid: System.Activities.Handle.OnUninitialize(System.Activities.HandleInitializationContext)
  parent: System.Activities.Handle
  isExternal: false
  name: OnUninitialize(HandleInitializationContext)
  nameWithType: Handle.OnUninitialize(HandleInitializationContext)
  fullName: System.Activities.Handle.OnUninitialize(HandleInitializationContext)
- uid: System.Activities.Handle.Owner
  parent: System.Activities.Handle
  isExternal: false
  name: Owner
  nameWithType: Handle.Owner
  fullName: System.Activities.Handle.Owner
- uid: System.Activities.ActivityInstance
  parent: System.Activities
  isExternal: false
  name: ActivityInstance
  nameWithType: ActivityInstance
  fullName: System.Activities.ActivityInstance
- uid: System.Activities.Handle.ThrowIfUninitialized
  parent: System.Activities.Handle
  isExternal: false
  name: ThrowIfUninitialized()
  nameWithType: Handle.ThrowIfUninitialized()
  fullName: System.Activities.Handle.ThrowIfUninitialized()
- uid: System.Activities.Handle.#ctor*
  parent: System.Activities.Handle
  isExternal: false
  name: Handle
  nameWithType: Handle.Handle
- uid: System.Activities.Handle.ExecutionPropertyName*
  parent: System.Activities.Handle
  isExternal: false
  name: ExecutionPropertyName
  nameWithType: Handle.ExecutionPropertyName
- uid: System.Activities.Handle.OnInitialize*
  parent: System.Activities.Handle
  isExternal: false
  name: OnInitialize
  nameWithType: Handle.OnInitialize
- uid: System.Activities.Handle.OnUninitialize*
  parent: System.Activities.Handle
  isExternal: false
  name: OnUninitialize
  nameWithType: Handle.OnUninitialize
- uid: System.Activities.Handle.Owner*
  parent: System.Activities.Handle
  isExternal: false
  name: Owner
  nameWithType: Handle.Owner
- uid: System.Activities.Handle.ThrowIfUninitialized*
  parent: System.Activities.Handle
  isExternal: false
  name: ThrowIfUninitialized
  nameWithType: Handle.ThrowIfUninitialized
