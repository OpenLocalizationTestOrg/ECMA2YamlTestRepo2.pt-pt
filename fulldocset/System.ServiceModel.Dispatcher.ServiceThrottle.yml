### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.ServiceThrottle
  id: ServiceThrottle
  children:
  - System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls
  - System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances
  - System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions
  langs:
  - csharp
  name: ServiceThrottle
  nameWithType: ServiceThrottle
  fullName: System.ServiceModel.Dispatcher.ServiceThrottle
  type: Class
  summary: "Controls the throughput of a service to optimize availability and performance."
  remarks: "Use the ServiceThrottle to tune the performance characteristics of a service. The easiest way to configure the ServiceThrottle for a service is to use the <xref:System.ServiceModel.Description.ServiceThrottlingBehavior>, especially from an application configuration file.       The <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls%2A> property specifies the maximum number of messages actively processing across all the dispatcher objects in a <xref:System.ServiceModel.ServiceHost> object.       The <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A> property specifies the maximum number of <xref:System.ServiceModel.InstanceContext> objects in the service.       The <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions%2A> property specifies the maximum number of sessions a <xref:System.ServiceModel.ServiceHost> can accept.      > [!NOTE] >  A trace is written when the first call, <xref:System.ServiceModel.InstanceContext>, or session is queued on the waitlist. The first trace is written as a warning."
  example:
  - "The following code example shows the typical use of the ServiceThrottle by referencing the <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> in an application configuration file. In this case, the values that are specified establish, at most, one message processing at one time from one connection to one <xref:System.ServiceModel.InstanceContext>. Real-world usage must be determined through experience.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public sealed class ServiceThrottle
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls
  id: MaxConcurrentCalls
  parent: System.ServiceModel.Dispatcher.ServiceThrottle
  langs:
  - csharp
  name: MaxConcurrentCalls
  nameWithType: ServiceThrottle.MaxConcurrentCalls
  fullName: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Gets or sets the maximum number of messages actively processing across all dispatcher objects in a <xref href=&quot;System.ServiceModel.ServiceHost&quot;></xref>."
  remarks: "The MaxConcurrentCalls property specifies the maximum number of messages actively processing across all the dispatcher objects in a <xref:System.ServiceModel.ServiceHost> object. Each channel can have one pending message that does not count against the value of MaxConcurrentCalls until [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] begins to process it.      > [!NOTE] >  A trace is written every time the value of this property is exceeded."
  example:
  - "The following code example shows the typical use of the <xref:System.ServiceModel.Dispatcher.ServiceThrottle> by referencing the <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> in an application configuration file. In this case, the values that are specified establish, at most, one message processing at one time from one connection to one <xref:System.ServiceModel.InstanceContext>. Real-world usage must be determined through experience.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public int MaxConcurrentCalls { get; set; }
    return:
      type: System.Int32
      description: "The upper limit of active messages in the service. The default is 16 * number of processors in the computer."
  overload: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances
  id: MaxConcurrentInstances
  parent: System.ServiceModel.Dispatcher.ServiceThrottle
  langs:
  - csharp
  name: MaxConcurrentInstances
  nameWithType: ServiceThrottle.MaxConcurrentInstances
  fullName: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Gets or sets the maximum number of service objects that can execute at one time."
  remarks: "The MaxConcurrentInstances property specifies the maximum number of <xref:System.ServiceModel.InstanceContext> objects in the service. It is important to keep in mind the relationship between the MaxConcurrentInstances property and the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> property. If <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> is <xref:System.ServiceModel.InstanceContextMode> the resulting value is the total number of sessions. If <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> is <xref:System.ServiceModel.InstanceContextMode>, the resulting value is the number of concurrent calls. If a message arrives while the maximum number of <xref:System.ServiceModel.InstanceContext> objects already exist, the message is held until an <xref:System.ServiceModel.InstanceContext> object closes.      > [!NOTE] >  A trace is written every time the value of this property is exceeded. The first trace is written as a warning."
  example:
  - "The following code example shows the typical use of the <xref:System.ServiceModel.Dispatcher.ServiceThrottle> by referencing the <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> in an application configuration file. In this case, the values that are specified establish, at most, one message processing at one time from one connection to one <xref:System.ServiceModel.InstanceContext>. Real-world usage must be determined through experience.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public int MaxConcurrentInstances { get; set; }
    return:
      type: System.Int32
      description: "The maximum number of <xref:System.ServiceModel.InstanceContext> objects in the service at one time. The default is Maximum Concurrent Calls + Maximum Concurrent Sessions."
  overload: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions
  id: MaxConcurrentSessions
  parent: System.ServiceModel.Dispatcher.ServiceThrottle
  langs:
  - csharp
  name: MaxConcurrentSessions
  nameWithType: ServiceThrottle.MaxConcurrentSessions
  fullName: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Gets or sets a value that specifies the maximum number of sessions a <xref href=&quot;System.ServiceModel.ServiceHost&quot;></xref> object can accept at one time."
  remarks: "The MaxConcurrentSessions property specifies the maximum number of channels a <xref:System.ServiceModel.ServiceHost> can accept. Each listener object can have one pending channel that does not count against the value of MaxConcurrentSessions until [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] accepts the channel and begins processing messages on it. This property is most useful in scenarios that make use of sessions.      > [!NOTE] >  A trace is written every time the value of this property is exceeded. The first trace is written as a warning.       For more information about sessions, see [Using Sessions](~/add/includes/ajax-current-ext-md.md).       Typically, this property is set using the <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentSessions%2A?displayProperty=fullName> property."
  example:
  - "The following code example shows the typical use of the <xref:System.ServiceModel.Dispatcher.ServiceThrottle> by referencing the <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> in an application configuration file. In this case, the values that are specified establish, at most, one message processing at one time from one connection to one <xref:System.ServiceModel.InstanceContext>. Real-world usage must be determined through experience.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public int MaxConcurrentSessions { get; set; }
    return:
      type: System.Int32
      description: "The maximum number of sessions a service host accepts. The default is 100 * number of processors in the computer."
  overload: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls
  parent: System.ServiceModel.Dispatcher.ServiceThrottle
  isExternal: false
  name: MaxConcurrentCalls
  nameWithType: ServiceThrottle.MaxConcurrentCalls
  fullName: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances
  parent: System.ServiceModel.Dispatcher.ServiceThrottle
  isExternal: false
  name: MaxConcurrentInstances
  nameWithType: ServiceThrottle.MaxConcurrentInstances
  fullName: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances
- uid: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions
  parent: System.ServiceModel.Dispatcher.ServiceThrottle
  isExternal: false
  name: MaxConcurrentSessions
  nameWithType: ServiceThrottle.MaxConcurrentSessions
  fullName: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions
- uid: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls*
  parent: System.ServiceModel.Dispatcher.ServiceThrottle
  isExternal: false
  name: MaxConcurrentCalls
  nameWithType: ServiceThrottle.MaxConcurrentCalls
- uid: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances*
  parent: System.ServiceModel.Dispatcher.ServiceThrottle
  isExternal: false
  name: MaxConcurrentInstances
  nameWithType: ServiceThrottle.MaxConcurrentInstances
- uid: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions*
  parent: System.ServiceModel.Dispatcher.ServiceThrottle
  isExternal: false
  name: MaxConcurrentSessions
  nameWithType: ServiceThrottle.MaxConcurrentSessions
