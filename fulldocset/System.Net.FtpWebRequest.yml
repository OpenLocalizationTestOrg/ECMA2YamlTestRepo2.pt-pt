### YamlMime:ManagedReference
items:
- uid: System.Net.FtpWebRequest
  id: FtpWebRequest
  children:
  - System.Net.FtpWebRequest.Abort
  - System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)
  - System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)
  - System.Net.FtpWebRequest.ClientCertificates
  - System.Net.FtpWebRequest.ConnectionGroupName
  - System.Net.FtpWebRequest.ContentLength
  - System.Net.FtpWebRequest.ContentOffset
  - System.Net.FtpWebRequest.ContentType
  - System.Net.FtpWebRequest.Credentials
  - System.Net.FtpWebRequest.DefaultCachePolicy
  - System.Net.FtpWebRequest.EnableSsl
  - System.Net.FtpWebRequest.EndGetRequestStream(System.IAsyncResult)
  - System.Net.FtpWebRequest.EndGetResponse(System.IAsyncResult)
  - System.Net.FtpWebRequest.GetRequestStream
  - System.Net.FtpWebRequest.GetResponse
  - System.Net.FtpWebRequest.Headers
  - System.Net.FtpWebRequest.KeepAlive
  - System.Net.FtpWebRequest.Method
  - System.Net.FtpWebRequest.PreAuthenticate
  - System.Net.FtpWebRequest.Proxy
  - System.Net.FtpWebRequest.ReadWriteTimeout
  - System.Net.FtpWebRequest.RenameTo
  - System.Net.FtpWebRequest.RequestUri
  - System.Net.FtpWebRequest.ServicePoint
  - System.Net.FtpWebRequest.Timeout
  - System.Net.FtpWebRequest.UseBinary
  - System.Net.FtpWebRequest.UseDefaultCredentials
  - System.Net.FtpWebRequest.UsePassive
  langs:
  - csharp
  name: FtpWebRequest
  nameWithType: FtpWebRequest
  fullName: System.Net.FtpWebRequest
  type: Class
  summary: "Implementa um cliente do protocolo FTP (File Transfer)."
  remarks: "Para obter uma instância de FtpWebRequest, utilize o <xref:System.Net.WebRequest.Create%2A>método.</xref:System.Net.WebRequest.Create%2A> Também pode utilizar o <xref:System.Net.WebClient>classe para carregar e transferir as informações a partir de um servidor FTP.</xref:System.Net.WebClient> Utilizar qualquer uma destas abordagens, quando especificar um recurso de rede que utiliza o esquema FTP (por exemplo, `&quot;ftp://contoso.com&quot;`) a classe de FtpWebRequest fornece a capacidade de interagir programaticamente com servidores FTP.       O URI pode ser relativo ou absoluto. Se o URI tem o formato `&quot;ftp://contoso.com/%2fpath&quot;` (%&2;f é um com caráter de escape &quot;/&quot;), em seguida, o URI é absoluto e o diretório atual é `/path`. Se, no entanto, o URI tem o formato `&quot;ftp://contoso.com/path&quot;`, primeiro o .NET Framework registos para o servidor FTP (com o nome de utilizador e palavra-passe definida pelo <xref:System.Net.FtpWebRequest.Credentials%2A>propriedade), em seguida, o diretório atual está definido como `<UserLoginDirectory>/path`.</xref:System.Net.FtpWebRequest.Credentials%2A>       Tem de ter um nome de utilizador válido e palavra-passe para o servidor ou o servidor tem de permitir início de sessão anónimo. Pode especificar as credenciais utilizadas para ligar ao servidor, definindo o <xref:System.Net.FtpWebRequest.Credentials%2A>propriedade ou o pode inclui-las no <xref:System.Uri.UserInfo%2A>parte do URI transmitida para o <xref:System.Net.WebRequest.Create%2A>método.</xref:System.Net.WebRequest.Create%2A> </xref:System.Uri.UserInfo%2A> </xref:System.Net.FtpWebRequest.Credentials%2A> Se incluir <xref:System.Uri.UserInfo%2A>informações no URI, o <xref:System.Net.FtpWebRequest.Credentials%2A>propriedade está definida como uma nova credencial de rede com as informações de nome e palavra-passe de utilizador especificado.</xref:System.Net.FtpWebRequest.Credentials%2A> </xref:System.Uri.UserInfo%2A>      > [!CAUTION] >, A menos que o <xref:System.Net.FtpWebRequest.EnableSsl%2A>propriedade é `true`, todos os dados e comandos, incluindo as suas informações de nome e palavra-passe de utilizador, são enviados para o servidor em texto não encriptado.</xref:System.Net.FtpWebRequest.EnableSsl%2A> Qualquer pessoa monitorizar tráfego de rede pode ver as suas credenciais e utilizá-los para ligar ao servidor. Se estiver a ligar a um servidor FTP que necessita de credenciais e suporta o Secure Sockets Layer (SSL), deve definir <xref:System.Net.FtpWebRequest.EnableSsl%2A>para `true`.</xref:System.Net.FtpWebRequest.EnableSsl%2A>       Tem de ter <xref:System.Net.WebPermission>para aceder ao recurso FTP; caso contrário, um <xref:System.Security.SecurityException>exceção é emitida.</xref:System.Security.SecurityException> </xref:System.Net.WebPermission>       Especifique o comando FTP para enviar para o servidor ao definir o <xref:System.Net.FtpWebRequest.Method%2A>propriedade para um valor definido no <xref:System.Net.WebRequestMethods.Ftp>estrutura.</xref:System.Net.WebRequestMethods.Ftp> </xref:System.Net.FtpWebRequest.Method%2A> Para transmitir dados de texto, altere o <xref:System.Net.FtpWebRequest.UseBinary%2A>propriedade do respetivo valor predefinido (`true`) para `false`.</xref:System.Net.FtpWebRequest.UseBinary%2A> Para obter detalhes e restrições, consulte <xref:System.Net.FtpWebRequest.Method%2A>.</xref:System.Net.FtpWebRequest.Method%2A>       Quando utiliza um objeto de FtpWebRequest para carregar um ficheiro para um servidor, tem de escrever o conteúdo do ficheiro para o fluxo de pedido obtido chamando a <xref:System.Net.FtpWebRequest.GetRequestStream%2A>método ou os seus homólogos assíncronos, o <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>e <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A>métodos.</xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A> Tem de escrever no fluxo e fechar a sequência antes de enviar o pedido.       Pedidos são enviados para o servidor ao chamar o <xref:System.Net.FtpWebRequest.GetResponse%2A>método ou os seus homólogos assíncronos, o <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>e <xref:System.Net.FtpWebRequest.EndGetResponse%2A>métodos.</xref:System.Net.FtpWebRequest.EndGetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> Quando concluir a operação pedida, um <xref:System.Net.FtpWebResponse>objeto é devolvido.</xref:System.Net.FtpWebResponse> O <xref:System.Net.FtpWebResponse>objeto fornece o estado da operação e quaisquer dados transferidos a partir do servidor.</xref:System.Net.FtpWebResponse>       Pode definir um valor de tempo limite para ler ou escrever para o servidor utilizando o <xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A>propriedade.</xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A> Se o período de tempo limite for excedido, o método de chamada emite um <xref:System.Net.WebException>com <xref:System.Net.WebExceptionStatus>definido como <xref:System.Net.WebExceptionStatus>.</xref:System.Net.WebExceptionStatus> </xref:System.Net.WebExceptionStatus> </xref:System.Net.WebException>       Ao transferir um ficheiro a partir de um servidor FTP, se o comando foi concluída com êxito, o conteúdo do ficheiro de pedido está disponível no fluxo do objeto de resposta. Pode aceder a esta sequência chamando a <xref:System.Net.FtpWebResponse.GetResponseStream%2A>método.</xref:System.Net.FtpWebResponse.GetResponseStream%2A> Para obter mais informações, consulte <xref:System.Net.FtpWebResponse>.</xref:System.Net.FtpWebResponse>       Se o <xref:System.Net.FtpWebRequest.Proxy%2A>propriedade for definida, seja diretamente ou num ficheiro de configuração, as comunicações com o servidor FTP são efetuadas através do proxy especificado.</xref:System.Net.FtpWebRequest.Proxy%2A> Se o proxy especificado é um proxy HTTP, apenas o <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>, <xref:System.Net.WebRequestMethods.Ftp.ListDirectory>, e <xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails>comandos são suportados.</xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails> </xref:System.Net.WebRequestMethods.Ftp.ListDirectory> </xref:System.Net.WebRequestMethods.Ftp.DownloadFile>       Apenas o conteúdo do binário de transferido é colocado em cache; ou seja, o conteúdo recebido utilizando o <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>comando com o <xref:System.Net.FtpWebRequest.UseBinary%2A>propriedade definida como `true`.</xref:System.Net.FtpWebRequest.UseBinary%2A> </xref:System.Net.WebRequestMethods.Ftp.DownloadFile>       Vários FtpWebRequests reutilizar as ligações existentes, se possível.       Para obter mais informações sobre o protocolo FTP, consulte RFC 959, &quot;Transferência de protocolo de ficheiros,&quot; disponível no [http://www.rfc-editor.org/](http://www.ietf.org/rfc/rfc959.txt)."
  example:
  - "The following code example demonstrates deleting a file from an FTP server.  \n  \n [!code-cpp[NCLFtpClient#4](~/add/codesnippet/cpp/t-system.net.ftpwebrequest_1.cpp)]\n [!code-cs[NCLFtpClient#4](~/add/codesnippet/csharp/t-system.net.ftpwebrequest_1.cs)]  \n  \n The following code example demonstrates downloading a file from an FTP server by using the <xref:System.Net.WebClient> class.  \n  \n [!code-cpp[NCLFtpClient#5](~/add/codesnippet/cpp/t-system.net.ftpwebrequest_2.cpp)]\n [!code-cs[NCLFtpClient#5](~/add/codesnippet/csharp/t-system.net.ftpwebrequest_2.cs)]  \n  \n The following code example demonstrates using asynchronous operations to upload a file to an FTP server.  \n  \n [!code-cs[NCLFtpAsync#1](~/add/codesnippet/csharp/t-system.net.ftpwebrequest_3.cs)]\n [!code-cpp[NCLFtpAsync#1](~/add/codesnippet/cpp/t-system.net.ftpwebrequest_3.cpp)]"
  syntax:
    content: 'public sealed class FtpWebRequest : System.Net.WebRequest'
  inheritance:
  - System.Net.WebRequest
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.FtpWebRequest.Abort
  id: Abort
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: Abort()
  nameWithType: FtpWebRequest.Abort()
  fullName: System.Net.FtpWebRequest.Abort()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Termina uma operação assíncrona de FTP."
  remarks: "Se não houver nenhuma operação em curso, este método não produz qualquer efeito. Se a transferência do ficheiro está em curso, este método termina a transferência.      > [!NOTE] > Este membro produz informações de rastreio, quando ativar o rastreio de rede na sua aplicação. Para obter mais informações, consulte [rastreio de rede no .NET Framework](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how the user can terminate an asynchronous upload of a file from the local directory to the server.  \n  \n [!code-cpp[NCLFtpClient#10](~/add/codesnippet/cpp/m-system.net.ftpwebreque_3_1.cpp)]\n [!code-cs[NCLFtpClient#10](~/add/codesnippet/csharp/m-system.net.ftpwebreque_3_1.cs)]"
  syntax:
    content: public override void Abort ();
    parameters: []
  overload: System.Net.FtpWebRequest.Abort*
  exceptions: []
  platform:
  - net462
- uid: System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)
  id: BeginGetRequestStream(System.AsyncCallback,System.Object)
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: BeginGetRequestStream(AsyncCallback,Object)
  nameWithType: FtpWebRequest.BeginGetRequestStream(AsyncCallback,Object)
  fullName: System.Net.FtpWebRequest.BeginGetRequestStream(AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Começa a abrir o fluxo de conteúdo de um pedido de escrita no modo assíncrono."
  remarks: "Tem de concluir a operação assíncrona ao chamar o <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A>método.</xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> Normalmente, <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A>é chamado pelo método referenciado pelo `callback`.</xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> Para determinar o estado da operação, verifique as propriedades no <xref:System.IAsyncResult>objecto devolvido por este método.</xref:System.IAsyncResult>       Este método não bloqueia ao aguardar que o fluxo. Para bloquear, chame <xref:System.Net.FtpWebRequest.GetRequestStream%2A>em vez deste método.</xref:System.Net.FtpWebRequest.GetRequestStream%2A>       Para obter informações detalhadas sobre como utilizar o modelo de programação assíncrono, consulte [chamada síncrona métodos de forma assíncrona](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Este membro produz informações de rastreio, quando ativar o rastreio de rede na sua aplicação. Para obter mais informações, consulte [rastreio de rede no .NET Framework](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates beginning an asynchronous operation to get a request's stream. This code example is part of a larger example provided for the <xref:System.Net.FtpWebRequest> class overview.  \n  \n [!code-cs[NCLFtpAsync#4](~/add/codesnippet/csharp/7dded3fc-ce2a-466f-b201-_1.cs)]\n [!code-cpp[NCLFtpAsync#4](~/add/codesnippet/cpp/7dded3fc-ce2a-466f-b201-_1.cpp)]"
  syntax:
    content: public override IAsyncResult BeginGetRequestStream (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "Um <xref:System.AsyncCallback>delegado que referencia o método a invocar quando a operação foi concluída.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Um objeto definido pelo utilizador que contém informações sobre a operação. Este objeto é passado para o `callback` delegar ao concluir a operação."
    return:
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>instância que indica o estado da operação.</xref:System.IAsyncResult>"
  overload: System.Net.FtpWebRequest.BeginGetRequestStream*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Uma chamada anterior para este método ou <xref:System.Net.FtpWebRequest.GetRequestStream*>ainda não foi concluído.</xref:System.Net.FtpWebRequest.GetRequestStream*>"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "Não foi possível estabelecer uma ligação ao servidor de FTP."
  - type: System.Net.ProtocolViolationException
    commentId: T:System.Net.ProtocolViolationException
    description: "A <xref:System.Net.FtpWebRequest.Method*>propriedade não está definida como <xref:System.Net.WebRequestMethods.Ftp.UploadFile>.</xref:System.Net.WebRequestMethods.Ftp.UploadFile> </xref:System.Net.FtpWebRequest.Method*>"
  platform:
  - net462
- uid: System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)
  id: BeginGetResponse(System.AsyncCallback,System.Object)
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: BeginGetResponse(AsyncCallback,Object)
  nameWithType: FtpWebRequest.BeginGetResponse(AsyncCallback,Object)
  fullName: System.Net.FtpWebRequest.BeginGetResponse(AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Inicia um pedido a enviar e receber uma resposta de um servidor FTP no modo assíncrono."
  remarks: "Tem de concluir a operação assíncrona ao chamar o <xref:System.Net.FtpWebRequest.EndGetResponse%2A>método.</xref:System.Net.FtpWebRequest.EndGetResponse%2A> Normalmente, <xref:System.Net.FtpWebRequest.EndGetResponse%2A>é chamado pelo método referenciado pelo `callback`.</xref:System.Net.FtpWebRequest.EndGetResponse%2A> Para determinar o estado da operação, consulte as propriedades de <xref:System.IAsyncResult>objeto devolvido pelo método BeginGetResponse.</xref:System.IAsyncResult>       Se o <xref:System.Net.FtpWebRequest.Proxy%2A>propriedade for definida, seja diretamente ou num ficheiro de configuração, as comunicações com o servidor FTP são efetuadas através do proxy especificado.</xref:System.Net.FtpWebRequest.Proxy%2A>       Não bloqueia o BeginGetResponse ao aguardar a resposta do servidor. Para bloquear, chame o <xref:System.Net.FtpWebRequest.GetResponse%2A>método em vez de BeginGetResponse.</xref:System.Net.FtpWebRequest.GetResponse%2A>       Para obter mais informações sobre como utilizar o modelo de programação assíncrono, consulte [chamada síncrona métodos de forma assíncrona](~/add/includes/ajax-current-ext-md.md).       Este membro produz informações de rastreio, quando ativar o rastreio de rede na sua aplicação. Para obter mais informações, consulte [rastreio de rede no .NET Framework](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Se um <xref:System.Net.WebException>é emitida, utilize o <xref:System.Net.WebException.Response%2A>e <xref:System.Net.WebException.Status%2A>Propriedades da exceção para determinar a resposta do servidor.</xref:System.Net.WebException.Status%2A> </xref:System.Net.WebException.Response%2A> </xref:System.Net.WebException>"
  example:
  - "The following code example demonstrates ending an asynchronous operation to get a request's stream, and then starting a request to get the response. This code example is part of a larger example provided for the <xref:System.Net.FtpWebRequest> class overview.  \n  \n [!code-cs[NCLFtpAsync#5](~/add/codesnippet/csharp/m-system.net.ftpwebreque_0_1.cs)]\n [!code-cpp[NCLFtpAsync#5](~/add/codesnippet/cpp/m-system.net.ftpwebreque_0_1.cpp)]"
  syntax:
    content: public override IAsyncResult BeginGetResponse (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "Um <xref:System.AsyncCallback>delegado que referencia o método a invocar quando a operação foi concluída.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Um objeto definido pelo utilizador que contém informações sobre a operação. Este objeto é passado para o `callback` delegar ao concluir a operação."
    return:
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>instância que indica o estado da operação.</xref:System.IAsyncResult>"
  overload: System.Net.FtpWebRequest.BeginGetResponse*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Net.FtpWebRequest.GetResponse*>ou BeginGetResponse já foi chamado para esta instância.</xref:System.Net.FtpWebRequest.GetResponse*>"
  platform:
  - net462
- uid: System.Net.FtpWebRequest.ClientCertificates
  id: ClientCertificates
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: ClientCertificates
  nameWithType: FtpWebRequest.ClientCertificates
  fullName: System.Net.FtpWebRequest.ClientCertificates
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém ou define os certificados utilizados para estabelecer uma ligação encriptada ao servidor de FTP."
  remarks: "Certificados de cliente são utilizados para autenticar o cliente durante a negociação de ligação de SSL inicial. Para obter mais informações, consulte <xref:System.Net.FtpWebRequest.EnableSsl%2A>.</xref:System.Net.FtpWebRequest.EnableSsl%2A>      > [!NOTE] > O .NET Framework coloca em cache sessões SSL como são criados e tenta reutilizar uma sessão em cache para um novo pedido, se possível. Durante a tentativa de reutilizar uma sessão SSL, o .NET Framework utiliza o primeiro elemento da <xref:System.Net.HttpWebRequest.ClientCertificates%2A>(se houver um), ou tentar reutilizar uma sessão anónima se <xref:System.Net.HttpWebRequest.ClientCertificates%2A>está vazia.</xref:System.Net.HttpWebRequest.ClientCertificates%2A> </xref:System.Net.HttpWebRequest.ClientCertificates%2A>"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; set; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: "Um <xref href=&quot;System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot;> </xref> objeto que contém os certificados de cliente."
  overload: System.Net.FtpWebRequest.ClientCertificates*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O valor especificado para uma operação de definição é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.ConnectionGroupName
  id: ConnectionGroupName
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: ConnectionGroupName
  nameWithType: FtpWebRequest.ConnectionGroupName
  fullName: System.Net.FtpWebRequest.ConnectionGroupName
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém ou define o nome do grupo de ligação que contém o ponto de serviço utilizado para enviar o pedido atual."
  remarks: "Grupos de ligação associar um conjunto de pedidos com uma ligação específica ou um conjunto de ligações. As ligações num grupo de ligação podem ser reutilizadas apenas por pedidos com origem no mesmo domínio de aplicação, quando as credenciais no pedido são os mesmos e o pedido especifica o nome do grupo de ligação. Quando um pedido de especificar um nome de grupo de ligação, todas as ligações existentes para o servidor de pedido não está associado um grupo de ligação podem ser utilizada. Quando as credenciais não são iguais, a ligação existente será fechada e tem de ser reautenticar o novo pedido.       Utilizar grupos de ligação pode melhorar o desempenho porque isto permite que todos os pedidos para um utilizador possa reutilizar a ligação autenticada com as credenciais do utilizador.       Alterar a propriedade ConnectionGroupName após chamar o <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, ou <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>causas do método um <xref:System.InvalidOperationException>exceção.</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>"
  example:
  - "The following code example retrieves the value of this property.  \n  \n [!code-cpp[NCLFtpClient#16](~/add/codesnippet/cpp/p-system.net.ftpwebreque_8_1.cpp)]\n [!code-cs[NCLFtpClient#16](~/add/codesnippet/csharp/p-system.net.ftpwebreque_8_1.cs)]"
  syntax:
    content: public override string ConnectionGroupName { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String>valor contém um nome de grupo de ligação.</xref:System.String>"
  overload: System.Net.FtpWebRequest.ConnectionGroupName*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Foi especificado um valor novo para esta propriedade para um pedido que já está em curso."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.ContentLength
  id: ContentLength
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: ContentLength
  nameWithType: FtpWebRequest.ContentLength
  fullName: System.Net.FtpWebRequest.ContentLength
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém ou define um valor que é ignorado pelo <xref href=&quot;System.Net.FtpWebRequest&quot;> </xref> classe."
  remarks: "A propriedade ContentLength é fornecida apenas para compatibilidade com outras implementações do <xref:System.Net.WebRequest>e <xref:System.Net.WebResponse>classes.</xref:System.Net.WebResponse> </xref:System.Net.WebRequest> Não há nenhuma razão para utilizar ContentLength."
  syntax:
    content: public override long ContentLength { get; set; }
    return:
      type: System.Int64
      description: "Um <xref:System.Int64>valor deve ser ignorado.</xref:System.Int64>"
  overload: System.Net.FtpWebRequest.ContentLength*
  exceptions: []
  platform:
  - net462
- uid: System.Net.FtpWebRequest.ContentOffset
  id: ContentOffset
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: ContentOffset
  nameWithType: FtpWebRequest.ContentOffset
  fullName: System.Net.FtpWebRequest.ContentOffset
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém ou define o deslocamento de byte para o ficheiro a ser transferido por este pedido."
  remarks: "Defina a propriedade de ContentOffset ao transferir um ficheiro a partir de um servidor de FTP. Este desvio indica a posição no ficheiro do servidor que marca o início dos dados a ser transferido. O desvio é especificado como o número de bytes a partir do início do ficheiro; o deslocamento do primeiro byte é zero.       Definição ContentOffset causas o <xref:System.Net.FtpWebRequest>para enviar um reinício (`REST`) comando para o servidor.</xref:System.Net.FtpWebRequest> Este comando será ignorado pela maioria das implementações de servidor FTP, se estiver a carregar dados para o servidor.       Alterar ContentOffset após chamar o <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, ou <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>causas do método um <xref:System.InvalidOperationException>exceção.</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>"
  example:
  - "The following code example demonstrates downloading part of a file from a server and appending the downloaded data to a local file.  \n  \n [!code-cpp[NclFtpClient#7](~/add/codesnippet/cpp/p-system.net.ftpwebreque_4_1.cpp)]\n [!code-cs[NclFtpClient#7](~/add/codesnippet/csharp/p-system.net.ftpwebreque_4_1.cs)]"
  syntax:
    content: public long ContentOffset { get; set; }
    return:
      type: System.Int64
      description: "Um <xref:System.Int64>instância que especifica o deslocamento de ficheiro, em bytes.</xref:System.Int64> O valor predefinido é zero."
  overload: System.Net.FtpWebRequest.ContentOffset*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Foi especificado um valor novo para esta propriedade para um pedido que já está em curso."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor especificado para esta propriedade é inferior a zero."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.ContentType
  id: ContentType
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: ContentType
  nameWithType: FtpWebRequest.ContentType
  fullName: System.Net.FtpWebRequest.ContentType
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Sempre emite <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  remarks: "A propriedade ContentType é fornecida apenas para compatibilidade com outras implementações do <xref:System.Net.WebRequest>e <xref:System.Net.WebResponse>classes.</xref:System.Net.WebResponse> </xref:System.Net.WebRequest> Não há nenhuma razão para utilizar ContentType."
  syntax:
    content: public override string ContentType { get; set; }
    return:
      type: System.String
      description: "Sempre emite <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  overload: System.Net.FtpWebRequest.ContentType*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Informações de tipo de conteúdo não são suportadas para FTP."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.Credentials
  id: Credentials
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: Credentials
  nameWithType: FtpWebRequest.Credentials
  fullName: System.Net.FtpWebRequest.Credentials
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém ou define as credenciais utilizadas para comunicar com o servidor FTP."
  remarks: "Não é necessário especificar credenciais ao utilizar o início de sessão anónimo. Tem de definir a propriedade de credenciais utilizando uma credencial do tipo <xref:System.Net.NetworkCredential>; Isto garante que o nome de utilizador e palavra-passe podem ser de leitura e enviados para o servidor.</xref:System.Net.NetworkCredential>      > [!CAUTION] > Informações de credenciais não são encriptadas quando transmitido para o servidor, a menos que o <xref:System.Net.FtpWebRequest.EnableSsl%2A>propriedade está definida como `true`.</xref:System.Net.FtpWebRequest.EnableSsl%2A>       A alteração de credenciais após chamar o <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, ou <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>causas do método um <xref:System.InvalidOperationException>exceção.</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>"
  example:
  - "The following code example retrieves the value of this property and uses it to display the user name.  \n  \n [!code-cpp[NCLFtpClient#14](~/add/codesnippet/cpp/p-system.net.ftpwebreque_6_1.cpp)]\n [!code-cs[NCLFtpClient#14](~/add/codesnippet/csharp/p-system.net.ftpwebreque_6_1.cs)]"
  syntax:
    content: public override System.Net.ICredentials Credentials { get; set; }
    return:
      type: System.Net.ICredentials
      description: "Um <xref:System.Net.ICredentials>instância; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se a propriedade não foi definida.</xref:System.Net.ICredentials>"
  overload: System.Net.FtpWebRequest.Credentials*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O valor especificado para uma operação de definição é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Um <xref:System.Net.ICredentials>de um tipo diferente <xref:System.Net.NetworkCredential>foi especificado para uma operação de definição.</xref:System.Net.NetworkCredential> </xref:System.Net.ICredentials>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Foi especificado um valor novo para esta propriedade para um pedido que já está em curso."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.DefaultCachePolicy
  id: DefaultCachePolicy
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: DefaultCachePolicy
  nameWithType: FtpWebRequest.DefaultCachePolicy
  fullName: System.Net.FtpWebRequest.DefaultCachePolicy
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Define a política de cache predefinida para todos os pedidos FTP."
  remarks: "Apenas o conteúdo recebido utilizando o <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>comando é colocado em cache.</xref:System.Net.WebRequestMethods.Ftp.DownloadFile>       A tabela seguinte descreve os efeitos das políticas em <xref:System.Net.FtpWebRequest>.</xref:System.Net.FtpWebRequest> a colocação em cache de FTP      | Política | Efeito |   |------------|------------|   | <xref:System.Net.Cache.RequestCacheLevel>| Devolve o recurso em cache, se o recurso é novo, o comprimento do conteúdo está correta e de expiração, modificação e atributos de comprimento do conteúdo estão presentes. |   | <xref:System.Net.Cache.RequestCacheLevel>| Devolve o recurso a partir do servidor. |   | <xref:System.Net.Cache.RequestCacheLevel>| Devolve o recurso em cache, se o comprimento do conteúdo está presente e se corresponde ao tamanho de entrada; caso contrário, emite um <xref:System.Net.WebException>. |   | <xref:System.Net.Cache.RequestCacheLevel>| Devolve o recurso em cache, se o comprimento do conteúdo é fornecido e corresponde o tamanho de entrada; caso contrário, o recurso é transferido a partir do servidor e é devolvido ao autor da chamada. |   | <xref:System.Net.Cache.RequestCacheLevel>| Devolve o recurso em cache se timestamp do recurso em cache é o mesmo que o carimbo de hora do recurso no servidor; caso contrário, o recurso é transferido do servidor, armazenado na cache e devolvido ao autor da chamada. |   | <xref:System.Net.Cache.RequestCacheLevel>| Transfere o recurso a partir do servidor, armazena-os em cache e devolve o recurso para o autor da chamada. |   | <xref:System.Net.Cache.RequestCacheLevel>| Se existir um recurso em cache, este é eliminado.</xref:System.Net.Cache.RequestCacheLevel> </xref:System.Net.Cache.RequestCacheLevel> </xref:System.Net.Cache.RequestCacheLevel> </xref:System.Net.Cache.RequestCacheLevel> </xref:System.Net.WebException> </xref:System.Net.Cache.RequestCacheLevel> </xref:System.Net.Cache.RequestCacheLevel> </xref:System.Net.Cache.RequestCacheLevel> O recurso é transferido a partir do servidor e é devolvido ao autor da chamada. |      > [!NOTE] > DefaultCachePolicy definição substitui qualquer definição de configuração."
  syntax:
    content: public static System.Net.Cache.RequestCachePolicy DefaultCachePolicy { get; set; }
    return:
      type: System.Net.Cache.RequestCachePolicy
      description: "A <xref href=&quot;System.Net.Cache.RequestCachePolicy&quot;> </xref> que define a política de cache para pedidos de FTP."
  overload: System.Net.FtpWebRequest.DefaultCachePolicy*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O chamador tentou definir esta propriedade como <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.EnableSsl
  id: EnableSsl
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: EnableSsl
  nameWithType: FtpWebRequest.EnableSsl
  fullName: System.Net.FtpWebRequest.EnableSsl
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém ou define um <xref:System.Boolean>que especifica a que uma ligação SSL deve ser utilizada.</xref:System.Boolean>"
  remarks: "> [!CAUTION]>, A menos que a propriedade EnableSsl `true`, todos os dados e comandos, incluindo as suas informações de nome e palavra-passe de utilizador, são enviados para o servidor em texto não encriptado. Qualquer pessoa monitorizar tráfego de rede pode ver as suas credenciais e utilizá-los para ligar ao servidor. Se estiver a ligar a um servidor FTP que necessita de credenciais e suporta o SSL, deve definir EnableSsl para `true`.       O `&quot;AUTH TLS&quot;` comando é enviado para o servidor para pedir uma sessão encriptada. Se o servidor não reconhece este comando, receberá um <xref:System.Net.WebException>exceção.</xref:System.Net.WebException>"
  example:
  - "The following code example uses an encrypted connection to download the directory listing from an FTP server.  \n  \n [!code-cpp[NCLFtpClient#8](~/add/codesnippet/cpp/p-system.net.ftpwebreque_11_1.cpp)]\n [!code-cs[NCLFtpClient#8](~/add/codesnippet/csharp/p-system.net.ftpwebreque_11_1.cs)]"
  syntax:
    content: public bool EnableSsl { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se as transmissões de controlo e dados são encriptadas; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O valor predefinido é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.FtpWebRequest.EnableSsl*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Já tiver sido estabelecida a ligação ao servidor de FTP."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.EndGetRequestStream(System.IAsyncResult)
  id: EndGetRequestStream(System.IAsyncResult)
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: EndGetRequestStream(IAsyncResult)
  nameWithType: FtpWebRequest.EndGetRequestStream(IAsyncResult)
  fullName: System.Net.FtpWebRequest.EndGetRequestStream(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Termina uma operação assíncrona pendente começar <xref:System.Net.FtpWebRequest.BeginGetRequestStream*>.</xref:System.Net.FtpWebRequest.BeginGetRequestStream*>"
  remarks: "Se a operação não foi concluída, os blocos de método EndGetRequestStream até concluir a operação. Para determinar se a operação foi concluída, verifique o <xref:System.IAsyncResult.IsCompleted%2A>propriedade antes de chamar EndGetRequestStream.</xref:System.IAsyncResult.IsCompleted%2A>       Para além das exceções que anotou no &quot;Exceções&quot;, EndGetRequestStream rethrows exceções que foram iniciadas ao abrir o fluxo para escrita.      > [!NOTE] > Este membro produz informações de rastreio, quando ativar o rastreio de rede na sua aplicação. Para obter mais informações, consulte [rastreio de rede no .NET Framework](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates ending an asynchronous operation to get a request's stream. This code example is part of a larger example provided for the <xref:System.Net.FtpWebRequest> class overview.  \n  \n [!code-cs[NCLFtpAsync#5](~/add/codesnippet/csharp/m-system.net.ftpwebreque_1_1.cs)]\n [!code-cpp[NCLFtpAsync#5](~/add/codesnippet/cpp/m-system.net.ftpwebreque_1_1.cpp)]"
  syntax:
    content: public override System.IO.Stream EndGetRequestStream (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "O <xref:System.IAsyncResult>objeto devolvido quando a operação foi iniciada.</xref:System.IAsyncResult>"
    return:
      type: System.IO.Stream
      description: "Um gravável <xref:System.IO.Stream>instância associada esta instância.</xref:System.IO.Stream>"
  overload: System.Net.FtpWebRequest.EndGetRequestStream*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>Não foi obtida chamando <xref:System.Net.FtpWebRequest.BeginGetRequestStream*>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Este método já foi chamado para a operação identificada por <code> asyncResult </code>."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.EndGetResponse(System.IAsyncResult)
  id: EndGetResponse(System.IAsyncResult)
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: EndGetResponse(IAsyncResult)
  nameWithType: FtpWebRequest.EndGetResponse(IAsyncResult)
  fullName: System.Net.FtpWebRequest.EndGetResponse(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Termina uma operação assíncrona pendente começar <xref:System.Net.FtpWebRequest.BeginGetResponse*>.</xref:System.Net.FtpWebRequest.BeginGetResponse*>"
  remarks: "Se a operação não foi concluída no momento o método EndGetResponse é chamado, EndGetResponse blocos até concluir a operação. Para evitar bloquear, verifique o <xref:System.IAsyncResult.IsCompleted%2A>propriedade antes de chamar EndGetResponse.</xref:System.IAsyncResult.IsCompleted%2A>       Para além das exceções que anotou no &quot;Exceções&quot;, EndGetResponse rethrows exceções que foram iniciadas ao comunicar com o servidor.      > [!NOTE] > Este membro produz informações de rastreio, quando ativar o rastreio de rede na sua aplicação. Para obter mais informações, consulte [rastreio de rede no .NET Framework](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates ending an asynchronous operation to get a response. This code example is part of a larger example provided for the <xref:System.Net.FtpWebRequest> class overview.  \n  \n [!code-cs[NCLFtpAsync#6](~/add/codesnippet/csharp/m-system.net.ftpwebreque_5_1.cs)]\n [!code-cpp[NCLFtpAsync#6](~/add/codesnippet/cpp/m-system.net.ftpwebreque_5_1.cpp)]"
  syntax:
    content: public override System.Net.WebResponse EndGetResponse (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "O <xref:System.IAsyncResult>que foi devolvido quando a operação foi iniciada.</xref:System.IAsyncResult>"
    return:
      type: System.Net.WebResponse
      description: "A <xref:System.Net.WebResponse>referência que contém um <xref href=&quot;System.Net.FtpWebResponse&quot;> </xref> instância.</xref:System.Net.WebResponse> Este objeto contém a resposta do servidor de FTP para o pedido."
  overload: System.Net.FtpWebRequest.EndGetResponse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>Não foi obtida chamando <xref:System.Net.FtpWebRequest.BeginGetResponse*>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Este método já foi chamado para a operação identificada por <code> asyncResult </code>."
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "Ocorreu um erro utilizar um proxy HTTP."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.GetRequestStream
  id: GetRequestStream
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: GetRequestStream()
  nameWithType: FtpWebRequest.GetRequestStream()
  fullName: System.Net.FtpWebRequest.GetRequestStream()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém o fluxo utilizado para carregar dados para um servidor de FTP."
  remarks: "Defina as propriedades do pedido antes de chamar o método GetRequestStream. Depois de escrever os dados no fluxo, tem de fechar a sequência antes de enviar o pedido.       Se não tiver definido a <xref:System.Net.FtpWebRequest.Method%2A>propriedade <xref:System.Net.WebRequestMethods.Ftp.UploadFile>ou <xref:System.Net.WebRequestMethods.Ftp.AppendFile>, não é possível obter o fluxo.</xref:System.Net.WebRequestMethods.Ftp.AppendFile> </xref:System.Net.WebRequestMethods.Ftp.UploadFile> </xref:System.Net.FtpWebRequest.Method%2A>       Blocos de GetRequestStream ao aguardar que o fluxo. Para evitar esta situação, chame o <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>método em vez de GetRequestStream.</xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>      > [!NOTE] > Este membro produz informações de rastreio, quando ativar o rastreio de rede na sua aplicação. Para obter mais informações, consulte [rastreio de rede no .NET Framework](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates copying a file to a request's data stream and sending a request to the server to upload the data and append it to a file.  \n  \n [!code-cpp[NCLFtpClient#3](~/add/codesnippet/cpp/m-system.net.ftpwebreque_4_1.cpp)]\n [!code-cs[NCLFtpClient#3](~/add/codesnippet/csharp/m-system.net.ftpwebreque_4_1.cs)]"
  syntax:
    content: public override System.IO.Stream GetRequestStream ();
    parameters: []
    return:
      type: System.IO.Stream
      description: "Um gravável <xref:System.IO.Stream>instância utilizada para armazenar os dados sejam enviados para o servidor, o pedido atual.</xref:System.IO.Stream>"
  overload: System.Net.FtpWebRequest.GetRequestStream*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Net.FtpWebRequest.BeginGetRequestStream*> has been called and has not completed.  \n  \n \\- or -  \n  \n An HTTP proxy is enabled, and you attempted to use an FTP command other than &lt;xref:System.Net.WebRequestMethods.Ftp.DownloadFile?displayProperty=fullName&gt;, &lt;xref:System.Net.WebRequestMethods.Ftp.ListDirectory?displayProperty=fullName&gt;, or &lt;xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails?displayProperty=fullName&gt;."
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "Não foi possível estabelecer uma ligação ao servidor de FTP."
  - type: System.Net.ProtocolViolationException
    commentId: T:System.Net.ProtocolViolationException
    description: "O <xref:System.Net.FtpWebRequest.Method*>propriedade não está definida como &lt;xref:System.Net.WebRequestMethods.Ftp.UploadFile?displayProperty=fullName&gt; ou &lt;xref:System.Net.WebRequestMethods.Ftp.AppendFile?displayProperty=fullName&gt;.</xref:System.Net.FtpWebRequest.Method*>"
  platform:
  - net462
- uid: System.Net.FtpWebRequest.GetResponse
  id: GetResponse
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: GetResponse()
  nameWithType: FtpWebRequest.GetResponse()
  fullName: System.Net.FtpWebRequest.GetResponse()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Devolve a resposta do servidor FTP."
  remarks: "Para aceder às propriedades do FTP específico, tem de o transmitir o <xref:System.Net.WebResponse>objeto devolvido por este método para <xref:System.Net.FtpWebResponse>.</xref:System.Net.FtpWebResponse> </xref:System.Net.WebResponse>       GetResponse faz com que uma ligação de controlo a ser estabelecido e também pode criar uma ligação de dados. Blocos de GetResponse até a receção da resposta. Para evitar esta situação, pode executar esta operação assíncrona ao chamar o <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>e <xref:System.Net.FtpWebRequest.EndGetResponse%2A>métodos em vez de GetResponse.</xref:System.Net.FtpWebRequest.EndGetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A>       Se o <xref:System.Net.FtpWebRequest.Proxy%2A>propriedade for definida, seja diretamente ou num ficheiro de configuração, as comunicações com o servidor FTP são efetuadas através do proxy.</xref:System.Net.FtpWebRequest.Proxy%2A>       Se um <xref:System.Net.WebException>é emitida, utilize o <xref:System.Net.WebException.Response%2A>e <xref:System.Net.WebException.Status%2A>Propriedades da exceção para determinar a resposta do servidor.</xref:System.Net.WebException.Status%2A> </xref:System.Net.WebException.Response%2A> </xref:System.Net.WebException>       Este membro produz informações de rastreio, quando ativar o rastreio de rede na sua aplicação. Para obter mais informações, consulte [rastreio de rede no .NET Framework](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Várias chamadas para GetResponse devolvem o mesmo objeto de resposta; o pedido não é emitido novamente."
  example:
  - "The following code example demonstrates copying a file to a request's data stream and sending a request to append data to a file to the server. The example calls GetResponse to send the request and block until the response is returned by the server.  \n  \n [!code-cpp[NCLFtpClient#3](~/add/codesnippet/cpp/m-system.net.ftpwebreque_2_1.cpp)]\n [!code-cs[NCLFtpClient#3](~/add/codesnippet/csharp/m-system.net.ftpwebreque_2_1.cs)]"
  syntax:
    content: public override System.Net.WebResponse GetResponse ();
    parameters: []
    return:
      type: System.Net.WebResponse
      description: "A <xref:System.Net.WebResponse>referência que contém um <xref href=&quot;System.Net.FtpWebResponse&quot;> </xref> instância.</xref:System.Net.WebResponse> Este objeto contém a resposta do servidor de FTP para o pedido."
  overload: System.Net.FtpWebRequest.GetResponse*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "GetResponse or <xref:System.Net.FtpWebRequest.BeginGetResponse*> has already been called for this instance.  \n  \n \\- or -  \n  \n An HTTP proxy is enabled, and you attempted to use an FTP command other than &lt;xref:System.Net.WebRequestMethods.Ftp.DownloadFile?displayProperty=fullName&gt;, &lt;xref:System.Net.WebRequestMethods.Ftp.ListDirectory?displayProperty=fullName&gt;, or &lt;xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails?displayProperty=fullName&gt;."
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "<xref:System.Net.FtpWebRequest.EnableSsl*> is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, but the server does not support this feature.  \n  \n \\- or -  \n  \n A <xref:System.Net.FtpWebRequest.Timeout*> was specified and the timeout has expired."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.Headers
  id: Headers
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: Headers
  nameWithType: FtpWebRequest.Headers
  fullName: System.Net.FtpWebRequest.Headers
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém um vazio <xref:System.Net.WebHeaderCollection>objeto.</xref:System.Net.WebHeaderCollection>"
  remarks: "A propriedade de cabeçalhos é fornecida apenas para compatibilidade com outras implementações do <xref:System.Net.WebRequest>e <xref:System.Net.WebResponse>classes.</xref:System.Net.WebResponse> </xref:System.Net.WebRequest> Não há nenhuma razão para utilizar cabeçalhos."
  syntax:
    content: public override System.Net.WebHeaderCollection Headers { get; set; }
    return:
      type: System.Net.WebHeaderCollection
      description: "Vazio <xref:System.Net.WebHeaderCollection>objeto.</xref:System.Net.WebHeaderCollection>"
  overload: System.Net.FtpWebRequest.Headers*
  exceptions: []
  platform:
  - net462
- uid: System.Net.FtpWebRequest.KeepAlive
  id: KeepAlive
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: KeepAlive
  nameWithType: FtpWebRequest.KeepAlive
  fullName: System.Net.FtpWebRequest.KeepAlive
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém ou define um <xref:System.Boolean>valor que especifica se a ligação de controlo para o servidor FTP é fechada depois de concluir o pedido.</xref:System.Boolean>"
  remarks: "Quando a propriedade KeepAlive está definida como `false`, a ligação de controlo é fechada quando chamar o <xref:System.Net.FtpWebResponse.Close%2A>método.</xref:System.Net.FtpWebResponse.Close%2A>       Alterar KeepAlive após chamar o <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, ou <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>causas do método um <xref:System.InvalidOperationException>exceção.</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>"
  example:
  - "The following code example retrieves and displays property values for a specified <xref:System.Net.FtpWebRequest> object.  \n  \n [!code-cpp[NCLFtpClient#15](~/add/codesnippet/cpp/p-system.net.ftpwebreque_0_1.cpp)]\n [!code-cs[NCLFtpClient#15](~/add/codesnippet/csharp/p-system.net.ftpwebreque_0_1.cs)]"
  syntax:
    content: public bool KeepAlive { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a ligação para o servidor não deve ser destruída; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O valor predefinido é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.FtpWebRequest.KeepAlive*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Foi especificado um valor novo para esta propriedade para um pedido que já está em curso."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.Method
  id: Method
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: Method
  nameWithType: FtpWebRequest.Method
  fullName: System.Net.FtpWebRequest.Method
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém ou define o comando para enviar para o servidor FTP."
  remarks: "A propriedade de método determina qual o comando é enviado para o servidor. Definir o método utilizando as cadeias definidas nas membros campo público de <xref:System.Net.WebRequestMethods.Ftp>classe.</xref:System.Net.WebRequestMethods.Ftp> Tenha em atenção que as cadeias definidas no <xref:System.Net.WebRequestMethods.Ftp>classe são as únicas opções suportadas para a propriedade de método.</xref:System.Net.WebRequestMethods.Ftp> Definir a propriedade de método para qualquer outro valor irá resultar num <xref:System.ArgumentException>exceção.</xref:System.ArgumentException>       Quando a definição de método para <xref:System.Net.WebRequestMethods.Ftp.UploadFile>, deve fazê-lo antes de chamar o <xref:System.Net.FtpWebRequest.GetRequestStream%2A>método.</xref:System.Net.FtpWebRequest.GetRequestStream%2A> </xref:System.Net.WebRequestMethods.Ftp.UploadFile> Falha ao chamar destes membros na ordem correta causas um <xref:System.Net.ProtocolViolationException>exceção ao tentar obter o fluxo de pedido.</xref:System.Net.ProtocolViolationException>       As credenciais fornecidas para o <xref:System.Net.FtpWebRequest>objecto tem de ter permissão para executar o método especificado.</xref:System.Net.FtpWebRequest> Caso contrário, o comando FTP falha.       Para determinar o êxito ou falha de um comando, verifique o <xref:System.Net.FtpWebResponse.StatusCode%2A>e <xref:System.Net.FtpWebResponse.StatusDescription%2A>Propriedades.</xref:System.Net.FtpWebResponse.StatusDescription%2A> </xref:System.Net.FtpWebResponse.StatusCode%2A>"
  example:
  - "The following code example sets this property to <xref:System.Net.WebRequestMethods.Ftp.DeleteFile>.  \n  \n [!code-cpp[NCLFtpClient#4](~/add/codesnippet/cpp/p-system.net.ftpwebreque_2_1.cpp)]\n [!code-cs[NCLFtpClient#4](~/add/codesnippet/csharp/p-system.net.ftpwebreque_2_1.cs)]"
  syntax:
    content: public override string Method { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String>valor que contenha o comando FTP para enviar para o servidor.</xref:System.String> O valor predefinido é <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>.</xref:System.Net.WebRequestMethods.Ftp.DownloadFile>"
  overload: System.Net.FtpWebRequest.Method*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Foi especificado um valor novo para esta propriedade para um pedido que já está em curso."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The method is invalid.  \n  \n \\- or -  \n  \n The method is not supported.  \n  \n \\- or -  \n  \n Multiple methods were specified."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.PreAuthenticate
  id: PreAuthenticate
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: PreAuthenticate
  nameWithType: FtpWebRequest.PreAuthenticate
  fullName: System.Net.FtpWebRequest.PreAuthenticate
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Sempre emite <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  remarks: "A propriedade PreAuthenticate é fornecida apenas para compatibilidade com outras implementações do <xref:System.Net.WebRequest>e <xref:System.Net.WebResponse>classes.</xref:System.Net.WebResponse> </xref:System.Net.WebRequest>"
  syntax:
    content: public override bool PreAuthenticate { get; set; }
    return:
      type: System.Boolean
      description: "Sempre emite <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  overload: System.Net.FtpWebRequest.PreAuthenticate*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Pré-autenticação não é suportada para FTP."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.Proxy
  id: Proxy
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: Proxy
  nameWithType: FtpWebRequest.Proxy
  fullName: System.Net.FtpWebRequest.Proxy
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém ou define o proxy utilizado para comunicar com o servidor FTP."
  remarks: "A propriedade de Proxy identifica o <xref:System.Net.IWebProxy>instância que comunica com o servidor FTP.</xref:System.Net.IWebProxy> O proxy está definido pelo sistema através da utilização de ficheiros de configuração e as definições de rede de área Local do Internet Explorer. Para especificar que não existe nenhum proxy deve ser utilizado, definir o Proxy para a instância de proxy devolvida pelo <xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A?displayProperty=fullName>método.</xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A?displayProperty=fullName> Para mais informações sobre a deteção automática do proxy, consulte [a deteção automática do Proxy](~/add/includes/ajax-current-ext-md.md).       Tem de definir o Proxy antes de escrita de dados no fluxo a pedido ou ao obter a resposta. A alteração de Proxy após chamar o <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, ou <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>causas do método um <xref:System.InvalidOperationException>exceção.</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>       O <xref:System.Net.FtpWebRequest>classe suporta proxies HTTP e o cliente de Firewall de ISA.</xref:System.Net.FtpWebRequest>       Se o proxy especificado é um proxy HTTP, apenas o <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>, <xref:System.Net.WebRequestMethods.Ftp.ListDirectory>, e <xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails>comandos são suportados.</xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails> </xref:System.Net.WebRequestMethods.Ftp.ListDirectory> </xref:System.Net.WebRequestMethods.Ftp.DownloadFile>"
  example:
  - "The following code example displays this property value.  \n  \n [!code-cpp[NCLFtpClient#16](~/add/codesnippet/cpp/p-system.net.ftpwebreque_1_1.cpp)]\n [!code-cs[NCLFtpClient#16](~/add/codesnippet/csharp/p-system.net.ftpwebreque_1_1.cs)]"
  syntax:
    content: public override System.Net.IWebProxy Proxy { get; set; }
    return:
      type: System.Net.IWebProxy
      description: "Um <xref:System.Net.IWebProxy>instância responsável pela comunicação com o servidor FTP.</xref:System.Net.IWebProxy>"
  overload: System.Net.FtpWebRequest.Proxy*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Não é possível definir esta propriedade <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Foi especificado um valor novo para esta propriedade para um pedido que já está em curso."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.ReadWriteTimeout
  id: ReadWriteTimeout
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: ReadWriteTimeout
  nameWithType: FtpWebRequest.ReadWriteTimeout
  fullName: System.Net.FtpWebRequest.ReadWriteTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém ou define um limite de tempo ao ler a partir de ou escrever um fluxo."
  remarks: "O ReadWriteTimeout é utilizado ao escrever para a sequência devolvida pelo <xref:System.Net.FtpWebRequest.GetRequestStream%2A>método ou a sequência devolvida por ler o <xref:System.Net.FtpWebResponse.GetResponseStream%2A>método.</xref:System.Net.FtpWebResponse.GetResponseStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>       Especificamente, a propriedade ReadWriteTimeout controla o tempo limite para o <xref:System.IO.Stream.Read%2A>método, o que é utilizado para ler a sequência devolvida pelo <xref:System.Net.FtpWebResponse.GetResponseStream%2A>método e para o <xref:System.IO.Stream.Write%2A>método, o que é utilizado para escrever para a sequência devolvida pelo <xref:System.Net.FtpWebRequest.GetRequestStream%2A>método.</xref:System.Net.FtpWebRequest.GetRequestStream%2A> </xref:System.IO.Stream.Write%2A> </xref:System.Net.FtpWebResponse.GetResponseStream%2A> </xref:System.IO.Stream.Read%2A> Se o período de tempo limite for excedido, o método de chamada emite um <xref:System.Net.WebException>com <xref:System.Net.WebExceptionStatus>definido como <xref:System.Net.WebExceptionStatus>.</xref:System.Net.WebExceptionStatus> </xref:System.Net.WebExceptionStatus> </xref:System.Net.WebException>       Para especificar a quantidade de tempo de espera para concluir o pedido, utilize o <xref:System.Net.FtpWebRequest.Timeout%2A>propriedade.</xref:System.Net.FtpWebRequest.Timeout%2A>"
  syntax:
    content: public int ReadWriteTimeout { get; set; }
    return:
      type: System.Int32
      description: "O número de milissegundos antes do ler ou escrever tempos. O valor predefinido é 300.000 milissegundos (5 minutos)."
  overload: System.Net.FtpWebRequest.ReadWriteTimeout*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O pedido já foi enviado."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor especificado para uma operação de definição é menor ou igual a zero e não é igual a &lt;xref:System.Threading.Timeout.Infinite?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.RenameTo
  id: RenameTo
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: RenameTo
  nameWithType: FtpWebRequest.RenameTo
  fullName: System.Net.FtpWebRequest.RenameTo
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém ou define o novo nome de um ficheiro que está a ser alterado."
  syntax:
    content: public string RenameTo { get; set; }
    return:
      type: System.String
      description: "O novo nome do ficheiro que está a ser alterado."
  overload: System.Net.FtpWebRequest.RenameTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O valor especificado para uma operação de definição é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou uma cadeia vazia."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Foi especificado um valor novo para esta propriedade para um pedido que já está em curso."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.RequestUri
  id: RequestUri
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: RequestUri
  nameWithType: FtpWebRequest.RequestUri
  fullName: System.Net.FtpWebRequest.RequestUri
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém o URI solicitado por esta instância."
  remarks: "O valor da propriedade RequestUri é o URI especificado quando o <xref:System.Net.WebRequest.Create%2A>método foi chamado para obter esta instância.</xref:System.Net.WebRequest.Create%2A>"
  example:
  - "The following code example displays this property value.  \n  \n [!code-cpp[NCLFtpClient#14](~/add/codesnippet/cpp/p-system.net.ftpwebreque_5_1.cpp)]\n [!code-cs[NCLFtpClient#14](~/add/codesnippet/csharp/p-system.net.ftpwebreque_5_1.cs)]"
  syntax:
    content: public override Uri RequestUri { get; }
    return:
      type: System.Uri
      description: "A <xref:System.Uri>instância que identifique um recurso que é acedido através do protocolo de transferência de ficheiro.</xref:System.Uri>"
  overload: System.Net.FtpWebRequest.RequestUri*
  exceptions: []
  platform:
  - net462
- uid: System.Net.FtpWebRequest.ServicePoint
  id: ServicePoint
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: ServicePoint
  nameWithType: FtpWebRequest.ServicePoint
  fullName: System.Net.FtpWebRequest.ServicePoint
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém o <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objecto utilizado para ligar ao servidor de FTP."
  remarks: "Se não <xref:System.Net.ServicePoint>objeto existe, é criada uma para o servidor FTP.</xref:System.Net.ServicePoint> Para definir o número máximo de ligações que podem ser abertos para um servidor de FTP, defina o <xref:System.Net.ServicePoint.ConnectionLimit%2A>propriedade o <xref:System.Net.ServicePoint>instância devolvida por esta propriedade.</xref:System.Net.ServicePoint> </xref:System.Net.ServicePoint.ConnectionLimit%2A>"
  example:
  - "The following code example retrieves the service point from a request and sets the maximum number of connections to one.  \n  \n [!code-cpp[NCLFtpClient#1](~/add/codesnippet/cpp/p-system.net.ftpwebreque_9_1.cpp)]\n [!code-cs[NCLFtpClient#1](~/add/codesnippet/csharp/p-system.net.ftpwebreque_9_1.cs)]"
  syntax:
    content: public System.Net.ServicePoint ServicePoint { get; }
    return:
      type: System.Net.ServicePoint
      description: "A <xref href=&quot;System.Net.ServicePoint&quot;> </xref> objetos que podem ser utilizados para personalizar o comportamento de ligação."
  overload: System.Net.FtpWebRequest.ServicePoint*
  exceptions: []
  platform:
  - net462
- uid: System.Net.FtpWebRequest.Timeout
  id: Timeout
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: Timeout
  nameWithType: FtpWebRequest.Timeout
  fullName: System.Net.FtpWebRequest.Timeout
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém ou define o número de milissegundos a aguardar para um pedido."
  remarks: "Para especificar um valor de infinito, defina a propriedade de tempo limite <xref:System.Threading.Timeout.Infinite>(-1).</xref:System.Threading.Timeout.Infinite> Este é o valor predefinido.       Tempo limite é o número de milissegundos efetuado um pedido síncrono com o <xref:System.Net.FtpWebRequest.GetResponse%2A>método aguarda uma resposta e que o <xref:System.Net.FtpWebRequest.GetRequestStream%2A>método aguarda uma transmissão em fluxo.</xref:System.Net.FtpWebRequest.GetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> Se um recurso não responder dentro do período de tempo limite, o pedido emite uma <xref:System.Net.WebException>com a <xref:System.Net.WebException.Status%2A>propriedade definida como <xref:System.Net.WebExceptionStatus>.</xref:System.Net.WebExceptionStatus> </xref:System.Net.WebException.Status%2A> </xref:System.Net.WebException>       Alterar o tempo limite após chamar o <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, ou <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>causas do método um <xref:System.InvalidOperationException>exceção.</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>       Uma consulta de sistema de nomes de domínio (DNS) pode demorar até 15 segundos a devolver ou tempo limite. Se o pedido contém um nome de anfitrião que necessita da resolução e a definir um tempo limite para um valor inferior a 15 segundos, pode demorar 15 segundos ou mais antes de um <xref:System.Net.WebException>é emitida para indicar um limite de tempo no seu pedido.</xref:System.Net.WebException>"
  example:
  - "The following code example sets this property.  \n  \n [!code-cpp[NCLFtpClient#23](~/add/codesnippet/cpp/p-system.net.ftpwebreque_3_1.cpp)]\n [!code-cs[NCLFtpClient#23](~/add/codesnippet/csharp/p-system.net.ftpwebreque_3_1.cs)]"
  syntax:
    content: public override int Timeout { get; set; }
    return:
      type: System.Int32
      description: "Um <xref:System.Int32>valor que contém o número de milissegundos a aguardar antes de um pedido exceder o tempo limite.</xref:System.Int32> O valor predefinido é <xref:System.Threading.Timeout.Infinite>.</xref:System.Threading.Timeout.Infinite>"
  overload: System.Net.FtpWebRequest.Timeout*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor especificado é inferior a zero e não é <xref:System.Threading.Timeout.Infinite>.</xref:System.Threading.Timeout.Infinite>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Foi especificado um valor novo para esta propriedade para um pedido que já está em curso."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.UseBinary
  id: UseBinary
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: UseBinary
  nameWithType: FtpWebRequest.UseBinary
  fullName: System.Net.FtpWebRequest.UseBinary
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém ou define um <xref:System.Boolean>valor que especifica o tipo de dados para transferências de ficheiros.</xref:System.Boolean>"
  remarks: "Se estiver a enviar binário dados, tais como uma imagem, defina esta propriedade como `true`. Se estiver a enviar texto, defina a propriedade como `false`. Especificar `true` faz com que o <xref:System.Net.FtpWebRequest>para enviar um `&quot;TYPE I&quot;` comando para o servidor.</xref:System.Net.FtpWebRequest> Especificar `false` faz com que o <xref:System.Net.FtpWebRequest>para enviar um `&quot;Type A&quot;` comando para o servidor.</xref:System.Net.FtpWebRequest> Servidores FTP, podem ignorar estes comandos.       Alterar UseBinary após chamar o <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, ou <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>causas do método um <xref:System.InvalidOperationException>exceção.</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>"
  example:
  - "The following code example retrieves and displays property values for a specified <xref:System.Net.FtpWebRequest> object.  \n  \n [!code-cpp[NCLFtpClient#15](~/add/codesnippet/cpp/p-system.net.ftpwebreque_7_1.cpp)]\n [!code-cs[NCLFtpClient#15](~/add/codesnippet/csharp/p-system.net.ftpwebreque_7_1.cs)]"
  syntax:
    content: public bool UseBinary { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para indicar ao servidor que os dados a serem transferidos são binários; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para indicar que os dados são o texto. O valor predefinido é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.FtpWebRequest.UseBinary*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Foi especificado um valor novo para esta propriedade para um pedido que já está em curso."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.UseDefaultCredentials
  id: UseDefaultCredentials
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: UseDefaultCredentials
  nameWithType: FtpWebRequest.UseDefaultCredentials
  fullName: System.Net.FtpWebRequest.UseDefaultCredentials
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Sempre emite <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  remarks: "A propriedade UseDefaultCredentials é fornecida apenas para compatibilidade com outras implementações do <xref:System.Net.WebRequest>e <xref:System.Net.WebResponse>classes.</xref:System.Net.WebResponse> </xref:System.Net.WebRequest> Não há nenhuma razão para utilizar UseDefaultCredentials."
  syntax:
    content: public override bool UseDefaultCredentials { get; set; }
    return:
      type: System.Boolean
      description: "Sempre emite <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  overload: System.Net.FtpWebRequest.UseDefaultCredentials*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "As credenciais predefinidas não são suportadas para FTP."
  platform:
  - net462
- uid: System.Net.FtpWebRequest.UsePassive
  id: UsePassive
  parent: System.Net.FtpWebRequest
  langs:
  - csharp
  name: UsePassive
  nameWithType: FtpWebRequest.UsePassive
  fullName: System.Net.FtpWebRequest.UsePassive
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Obtém ou define o comportamento do processo de transferência de dados de uma aplicação de cliente."
  remarks: "Definir a propriedade UsePassive como `true` envia o &quot;`PASV&quot;` comando para o servidor. Este comando pedidos de servidor para escutar numa porta dados e a aguardar que uma ligação, em vez de iniciar um após a receção de um comando de transferência.       Para obter uma descrição dos comportamentos especificadas utilizando UsePassive, consulte RFC 959, &quot;Transferência de protocolo de ficheiros,&quot; secção 3.2, &quot;Estabelecer ligações de dados&quot; e a secção 4.1.2, &quot;Transferência de parâmetro de comandos,&quot; disponível no [http://www.rfc-editor.org/](http://www.ietf.org/rfc/rfc959.txt).       Alterar UsePassive após chamar o <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, ou <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>causas do método um <xref:System.InvalidOperationException>exceção.</xref:System.InvalidOperationException> </xref:System.Net.FtpWebRequest.BeginGetResponse%2A> </xref:System.Net.FtpWebRequest.GetResponse%2A> </xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> </xref:System.Net.FtpWebRequest.GetRequestStream%2A>       Se UsePassive estiver definido como `true`, o servidor FTP não pode enviar o tamanho do ficheiro e o progresso da transferência sempre pode ser zero. Se UsePassive estiver definido como `false`, uma firewall pode emitir um alerta e bloquear a transferência de ficheiros."
  example:
  - "The following code example retrieves and displays property values for a specified <xref:System.Net.FtpWebRequest> object.  \n  \n [!code-cpp[NCLFtpClient#6](~/add/codesnippet/cpp/p-system.net.ftpwebreque_10_1.cpp)]\n [!code-cs[NCLFtpClient#6](~/add/codesnippet/csharp/p-system.net.ftpwebreque_10_1.cs)]"
  syntax:
    content: public bool UsePassive { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Se a transferência de dados da aplicação cliente de escuta de processo para uma ligação na porta de dados; caso contrário, <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se o cliente deve iniciar uma ligação na porta de dados. O valor predefinido é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.FtpWebRequest.UsePassive*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Foi especificado um valor novo para esta propriedade para um pedido que já está em curso."
  platform:
  - net462
references:
- uid: System.Net.WebRequest
  isExternal: false
  name: System.Net.WebRequest
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Net.WebException
  isExternal: true
  name: System.Net.WebException
- uid: System.Net.ProtocolViolationException
  isExternal: true
  name: System.Net.ProtocolViolationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Net.FtpWebRequest.Abort
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Abort()
  nameWithType: FtpWebRequest.Abort()
  fullName: System.Net.FtpWebRequest.Abort()
- uid: System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: BeginGetRequestStream(AsyncCallback,Object)
  nameWithType: FtpWebRequest.BeginGetRequestStream(AsyncCallback,Object)
  fullName: System.Net.FtpWebRequest.BeginGetRequestStream(AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: BeginGetResponse(AsyncCallback,Object)
  nameWithType: FtpWebRequest.BeginGetResponse(AsyncCallback,Object)
  fullName: System.Net.FtpWebRequest.BeginGetResponse(AsyncCallback,Object)
- uid: System.Net.FtpWebRequest.ClientCertificates
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ClientCertificates
  nameWithType: FtpWebRequest.ClientCertificates
  fullName: System.Net.FtpWebRequest.ClientCertificates
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509CertificateCollection
  nameWithType: X509CertificateCollection
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection
- uid: System.Net.FtpWebRequest.ConnectionGroupName
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ConnectionGroupName
  nameWithType: FtpWebRequest.ConnectionGroupName
  fullName: System.Net.FtpWebRequest.ConnectionGroupName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.FtpWebRequest.ContentLength
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ContentLength
  nameWithType: FtpWebRequest.ContentLength
  fullName: System.Net.FtpWebRequest.ContentLength
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.FtpWebRequest.ContentOffset
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ContentOffset
  nameWithType: FtpWebRequest.ContentOffset
  fullName: System.Net.FtpWebRequest.ContentOffset
- uid: System.Net.FtpWebRequest.ContentType
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ContentType
  nameWithType: FtpWebRequest.ContentType
  fullName: System.Net.FtpWebRequest.ContentType
- uid: System.Net.FtpWebRequest.Credentials
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Credentials
  nameWithType: FtpWebRequest.Credentials
  fullName: System.Net.FtpWebRequest.Credentials
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Net.FtpWebRequest.DefaultCachePolicy
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: DefaultCachePolicy
  nameWithType: FtpWebRequest.DefaultCachePolicy
  fullName: System.Net.FtpWebRequest.DefaultCachePolicy
- uid: System.Net.Cache.RequestCachePolicy
  parent: System.Net.Cache
  isExternal: false
  name: RequestCachePolicy
  nameWithType: RequestCachePolicy
  fullName: System.Net.Cache.RequestCachePolicy
- uid: System.Net.FtpWebRequest.EnableSsl
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: EnableSsl
  nameWithType: FtpWebRequest.EnableSsl
  fullName: System.Net.FtpWebRequest.EnableSsl
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.FtpWebRequest.EndGetRequestStream(System.IAsyncResult)
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: EndGetRequestStream(IAsyncResult)
  nameWithType: FtpWebRequest.EndGetRequestStream(IAsyncResult)
  fullName: System.Net.FtpWebRequest.EndGetRequestStream(IAsyncResult)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Net.FtpWebRequest.EndGetResponse(System.IAsyncResult)
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: EndGetResponse(IAsyncResult)
  nameWithType: FtpWebRequest.EndGetResponse(IAsyncResult)
  fullName: System.Net.FtpWebRequest.EndGetResponse(IAsyncResult)
- uid: System.Net.WebResponse
  parent: System.Net
  isExternal: true
  name: WebResponse
  nameWithType: WebResponse
  fullName: System.Net.WebResponse
- uid: System.Net.FtpWebRequest.GetRequestStream
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: GetRequestStream()
  nameWithType: FtpWebRequest.GetRequestStream()
  fullName: System.Net.FtpWebRequest.GetRequestStream()
- uid: System.Net.FtpWebRequest.GetResponse
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: GetResponse()
  nameWithType: FtpWebRequest.GetResponse()
  fullName: System.Net.FtpWebRequest.GetResponse()
- uid: System.Net.FtpWebRequest.Headers
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Headers
  nameWithType: FtpWebRequest.Headers
  fullName: System.Net.FtpWebRequest.Headers
- uid: System.Net.WebHeaderCollection
  parent: System.Net
  isExternal: true
  name: WebHeaderCollection
  nameWithType: WebHeaderCollection
  fullName: System.Net.WebHeaderCollection
- uid: System.Net.FtpWebRequest.KeepAlive
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: KeepAlive
  nameWithType: FtpWebRequest.KeepAlive
  fullName: System.Net.FtpWebRequest.KeepAlive
- uid: System.Net.FtpWebRequest.Method
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Method
  nameWithType: FtpWebRequest.Method
  fullName: System.Net.FtpWebRequest.Method
- uid: System.Net.FtpWebRequest.PreAuthenticate
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: PreAuthenticate
  nameWithType: FtpWebRequest.PreAuthenticate
  fullName: System.Net.FtpWebRequest.PreAuthenticate
- uid: System.Net.FtpWebRequest.Proxy
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Proxy
  nameWithType: FtpWebRequest.Proxy
  fullName: System.Net.FtpWebRequest.Proxy
- uid: System.Net.IWebProxy
  parent: System.Net
  isExternal: true
  name: IWebProxy
  nameWithType: IWebProxy
  fullName: System.Net.IWebProxy
- uid: System.Net.FtpWebRequest.ReadWriteTimeout
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ReadWriteTimeout
  nameWithType: FtpWebRequest.ReadWriteTimeout
  fullName: System.Net.FtpWebRequest.ReadWriteTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.FtpWebRequest.RenameTo
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: RenameTo
  nameWithType: FtpWebRequest.RenameTo
  fullName: System.Net.FtpWebRequest.RenameTo
- uid: System.Net.FtpWebRequest.RequestUri
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: RequestUri
  nameWithType: FtpWebRequest.RequestUri
  fullName: System.Net.FtpWebRequest.RequestUri
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Net.FtpWebRequest.ServicePoint
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ServicePoint
  nameWithType: FtpWebRequest.ServicePoint
  fullName: System.Net.FtpWebRequest.ServicePoint
- uid: System.Net.ServicePoint
  parent: System.Net
  isExternal: false
  name: ServicePoint
  nameWithType: ServicePoint
  fullName: System.Net.ServicePoint
- uid: System.Net.FtpWebRequest.Timeout
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Timeout
  nameWithType: FtpWebRequest.Timeout
  fullName: System.Net.FtpWebRequest.Timeout
- uid: System.Net.FtpWebRequest.UseBinary
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: UseBinary
  nameWithType: FtpWebRequest.UseBinary
  fullName: System.Net.FtpWebRequest.UseBinary
- uid: System.Net.FtpWebRequest.UseDefaultCredentials
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: UseDefaultCredentials
  nameWithType: FtpWebRequest.UseDefaultCredentials
  fullName: System.Net.FtpWebRequest.UseDefaultCredentials
- uid: System.Net.FtpWebRequest.UsePassive
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: UsePassive
  nameWithType: FtpWebRequest.UsePassive
  fullName: System.Net.FtpWebRequest.UsePassive
- uid: System.Net.FtpWebRequest.Abort*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Abort
  nameWithType: FtpWebRequest.Abort
- uid: System.Net.FtpWebRequest.BeginGetRequestStream*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: BeginGetRequestStream
  nameWithType: FtpWebRequest.BeginGetRequestStream
- uid: System.Net.FtpWebRequest.BeginGetResponse*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: BeginGetResponse
  nameWithType: FtpWebRequest.BeginGetResponse
- uid: System.Net.FtpWebRequest.ClientCertificates*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ClientCertificates
  nameWithType: FtpWebRequest.ClientCertificates
- uid: System.Net.FtpWebRequest.ConnectionGroupName*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ConnectionGroupName
  nameWithType: FtpWebRequest.ConnectionGroupName
- uid: System.Net.FtpWebRequest.ContentLength*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ContentLength
  nameWithType: FtpWebRequest.ContentLength
- uid: System.Net.FtpWebRequest.ContentOffset*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ContentOffset
  nameWithType: FtpWebRequest.ContentOffset
- uid: System.Net.FtpWebRequest.ContentType*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ContentType
  nameWithType: FtpWebRequest.ContentType
- uid: System.Net.FtpWebRequest.Credentials*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Credentials
  nameWithType: FtpWebRequest.Credentials
- uid: System.Net.FtpWebRequest.DefaultCachePolicy*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: DefaultCachePolicy
  nameWithType: FtpWebRequest.DefaultCachePolicy
- uid: System.Net.FtpWebRequest.EnableSsl*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: EnableSsl
  nameWithType: FtpWebRequest.EnableSsl
- uid: System.Net.FtpWebRequest.EndGetRequestStream*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: EndGetRequestStream
  nameWithType: FtpWebRequest.EndGetRequestStream
- uid: System.Net.FtpWebRequest.EndGetResponse*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: EndGetResponse
  nameWithType: FtpWebRequest.EndGetResponse
- uid: System.Net.FtpWebRequest.GetRequestStream*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: GetRequestStream
  nameWithType: FtpWebRequest.GetRequestStream
- uid: System.Net.FtpWebRequest.GetResponse*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: GetResponse
  nameWithType: FtpWebRequest.GetResponse
- uid: System.Net.FtpWebRequest.Headers*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Headers
  nameWithType: FtpWebRequest.Headers
- uid: System.Net.FtpWebRequest.KeepAlive*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: KeepAlive
  nameWithType: FtpWebRequest.KeepAlive
- uid: System.Net.FtpWebRequest.Method*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Method
  nameWithType: FtpWebRequest.Method
- uid: System.Net.FtpWebRequest.PreAuthenticate*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: PreAuthenticate
  nameWithType: FtpWebRequest.PreAuthenticate
- uid: System.Net.FtpWebRequest.Proxy*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Proxy
  nameWithType: FtpWebRequest.Proxy
- uid: System.Net.FtpWebRequest.ReadWriteTimeout*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ReadWriteTimeout
  nameWithType: FtpWebRequest.ReadWriteTimeout
- uid: System.Net.FtpWebRequest.RenameTo*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: RenameTo
  nameWithType: FtpWebRequest.RenameTo
- uid: System.Net.FtpWebRequest.RequestUri*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: RequestUri
  nameWithType: FtpWebRequest.RequestUri
- uid: System.Net.FtpWebRequest.ServicePoint*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: ServicePoint
  nameWithType: FtpWebRequest.ServicePoint
- uid: System.Net.FtpWebRequest.Timeout*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: Timeout
  nameWithType: FtpWebRequest.Timeout
- uid: System.Net.FtpWebRequest.UseBinary*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: UseBinary
  nameWithType: FtpWebRequest.UseBinary
- uid: System.Net.FtpWebRequest.UseDefaultCredentials*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: UseDefaultCredentials
  nameWithType: FtpWebRequest.UseDefaultCredentials
- uid: System.Net.FtpWebRequest.UsePassive*
  parent: System.Net.FtpWebRequest
  isExternal: false
  name: UsePassive
  nameWithType: FtpWebRequest.UsePassive
