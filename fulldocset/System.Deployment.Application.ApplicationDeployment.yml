### YamlMime:ManagedReference
items:
- uid: System.Deployment.Application.ApplicationDeployment
  id: ApplicationDeployment
  children:
  - System.Deployment.Application.ApplicationDeployment.ActivationUri
  - System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate
  - System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate(System.Boolean)
  - System.Deployment.Application.ApplicationDeployment.CheckForUpdate
  - System.Deployment.Application.ApplicationDeployment.CheckForUpdate(System.Boolean)
  - System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync
  - System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel
  - System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted
  - System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged
  - System.Deployment.Application.ApplicationDeployment.CurrentDeployment
  - System.Deployment.Application.ApplicationDeployment.CurrentVersion
  - System.Deployment.Application.ApplicationDeployment.DataDirectory
  - System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)
  - System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String)
  - System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String,System.Object)
  - System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel(System.String)
  - System.Deployment.Application.ApplicationDeployment.DownloadFileGroupCompleted
  - System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged
  - System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded(System.String)
  - System.Deployment.Application.ApplicationDeployment.IsFirstRun
  - System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed
  - System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck
  - System.Deployment.Application.ApplicationDeployment.Update
  - System.Deployment.Application.ApplicationDeployment.UpdateAsync
  - System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel
  - System.Deployment.Application.ApplicationDeployment.UpdateCompleted
  - System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName
  - System.Deployment.Application.ApplicationDeployment.UpdatedVersion
  - System.Deployment.Application.ApplicationDeployment.UpdateLocation
  - System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged
  langs:
  - csharp
  name: ApplicationDeployment
  nameWithType: ApplicationDeployment
  fullName: System.Deployment.Application.ApplicationDeployment
  type: Class
  summary: "Suporta atualizações da implementação atual através de programação e processa a transferência a pedido dos ficheiros. Esta classe não pode ser herdada."
  remarks: "Pode configurar o [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] aplicação para procurar atualizações e instalá-los automaticamente através de `subscription` elemento do manifesto de implementação. No entanto, algumas aplicações, precisam de melhorar o controlo sobre as atualizações. Poderá querer instalar as atualizações necessárias através de programação e pedir aos utilizadores para instalar atualizações opcionais no respetiva conveniência. Ao desativar atualizações de subscrição de manifesto de implementação, que pode tomar controlo total das políticas de atualização da sua aplicação. Em alternativa, pode utilizar a subscrição automática em conjunto com ApplicationDeployment, que permite [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] para atualizar a aplicação periodicamente, mas utiliza ApplicationDeployment para transferir atualizações críticas em breve após o seu lançamento.       Pode testar se a sua implementação tem uma atualização disponível através de <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A>ou o <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A>método; gera o método última o <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted>eventos após a conclusão com êxito.</xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted> </xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A> </xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> <xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A>Devolve informações importantes sobre a atualização, tais como o respetivo número de versão e se é uma atualização necessária para os utilizadores atuais.</xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A> Se estiver disponível uma atualização, pode instalá-lo utilizando <xref:System.Deployment.Application.ApplicationDeployment.Update%2A>ou <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>; o método última gera o <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted>eventos depois de concluída a instalação da atualização.</xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted> </xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> </xref:System.Deployment.Application.ApplicationDeployment.Update%2A> Para atualizações de grandes dimensões, já pode receber notificações de progresso através de <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged>e <xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged>eventos e utilize as informações no <xref:System.ComponentModel.ProgressChangedEventArgs>para notificar o utilizador do Estado de transferência.</xref:System.ComponentModel.ProgressChangedEventArgs> </xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged> </xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged>       Também pode utilizar ApplicationDeployment para transferir ficheiros grandes e assemblagens a pedido. Estes ficheiros pode estar marcados como &quot;opcionais&quot; no manifesto da aplicação a implementação para que estas não são transferidas durante a instalação. Pode transferir os ficheiros em qualquer momento durante a duração da aplicação utilizando o <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>ou <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>método.</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> </xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> Pode transferir assemblagens antes de serem carregados para memória, fornecendo um processador de eventos para o <xref:System.AppDomain.AssemblyResolve>evento de <xref:System.AppDomain>classe.</xref:System.AppDomain> </xref:System.AppDomain.AssemblyResolve> Para obter mais informações, consulte [explicação passo a passo: transferir assemblagens a pedido com o ClickOnce implementação API utilizando o estruturador](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Se atualizar um [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] aplicação enquanto a aplicação está em execução, o utilizador verá as atualizações quando chamar o <xref:System.Windows.Forms.Application.Restart%2A>método do <xref:System.Windows.Forms.Application>que irá fechar a instância em execução atual da aplicação e reiniciar imediatamente.</xref:System.Windows.Forms.Application> </xref:System.Windows.Forms.Application.Restart%2A>       ApplicationDeployment não tem nenhum construtor público; obter instâncias da classe dentro de um [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] aplicação através do <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A>propriedade.</xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> Utilizar o <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A>propriedade para verificar se a aplicação atual é um [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] aplicação.</xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A>       ApplicationDeployment suporta procurar atualizações e transferir ficheiros atualizados assíncrona utilizando a nova [baseada em eventos assíncrona padrão de descrição geral da](~/add/includes/ajax-current-ext-md.md), que expõe as chamadas de retorno de conclusão como eventos de classe. ApplicationDeployment inicia e gere os threads por si e chama a aplicação novamente no thread de IU correto. Através desta classe, pode atualizar sem bloqueio de aplicação, para que o utilizador pode continuar a funcionar enquanto instala a atualização. Se o utilizador tem de parar todas as trabalho enquanto uma atualização ocorre, considere utilizar os métodos síncronos em vez disso.      > [!NOTE] > Executar atualizações assíncronas requer que a aplicação importa ambas as <xref:System.Deployment.Application>e <xref:System.ComponentModel>espaços de nomes.</xref:System.ComponentModel> </xref:System.Deployment.Application>"
  example:
  - "The following code example determines at application load time whether a new update is available; if a required update is available, the code example installs the update asynchronously. This code should be added to a form that contains a <xref:System.Windows.Forms.TextBox> named `downloadStatus`.  \n  \n [!code-cs[ClickOnceAPI#1](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#1)]\n [!code-cpp[ClickOnceAPI#1](~/add/codesnippet/cpp/t-system.deployment.appl_4_1.cpp)]\n [!code-vb[ClickOnceAPI#1](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#1)]"
  syntax:
    content: public sealed class ApplicationDeployment
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.ActivationUri
  id: ActivationUri
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: ActivationUri
  nameWithType: ApplicationDeployment.ActivationUri
  fullName: System.Deployment.Application.ApplicationDeployment.ActivationUri
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Obtém o URL utilizado para iniciar o manifesto de implementação da aplicação."
  remarks: "Esta propriedade irá funcionar em aplicações totalmente fidedignas e parcialmente fidedignas."
  example:
  - "The following code shows how to retrieve the URL parameters by using ActivationUri, and how to use the <xref:System.Web.HttpUtility> class to parse the query string safely. Multiple occurrences of the same query string variable are consolidated in one entry of the returned <xref:System.Collections.Specialized.NameValueCollection>.  \n  \n [!code-cs[ClickOnceQueryString#1](~/add/codesnippet/csharp/ClickOnceQueryString/Form1.cs#1)]\n [!code-vb[ClickOnceQueryString#1](~/add/codesnippet/visualbasic/ClickOnceQueryStringVB/Form1.vb#1)]"
  syntax:
    content: public Uri ActivationUri { get; }
    return:
      type: System.Uri
      description: "Cadeia de um comprimento de zero se o `TrustUrlParameters` propriedade no manifesto de implementação é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, ou se o utilizador tiver fornecido um UNC para abrir a implementação ou abriu-la localmente. Caso contrário, o valor de retorno é o URL completo utilizado para iniciar a aplicação, incluindo quaisquer parâmetros."
  overload: System.Deployment.Application.ApplicationDeployment.ActivationUri*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate
  id: CheckForDetailedUpdate
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: CheckForDetailedUpdate()
  nameWithType: ApplicationDeployment.CheckForDetailedUpdate()
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Efetua a mesma operação como <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate*>, mas devolve informações expandidas sobre a atualização disponível.</xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate*>"
  remarks: "O método CheckForDetailedUpdate permite que os chamadores síncronos obter as informações expandidas mesmas que os chamadores assíncronos obterem utilizando a <xref:System.Deployment.Application.CheckForUpdateCompletedEventArgs>classe.</xref:System.Deployment.Application.CheckForUpdateCompletedEventArgs>"
  example:
  - "The following code example uses CheckForDetailedUpdate to retrieve the information about the latest update. If an update exists, it installs it automatically only if it is a required update; otherwise, it prompts the user.  \n  \n [!code-cs[ClickOnceAPI#7](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#7)]\n [!code-cpp[ClickOnceAPI#7](~/add/codesnippet/cpp/m-system.deployment.appl_4_1.cpp)]\n [!code-vb[ClickOnceAPI#7](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#7)]"
  syntax:
    content: public System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate ();
    parameters: []
    return:
      type: System.Deployment.Application.UpdateCheckInfo
      description: "Um <xref href=&quot;System.Deployment.Application.UpdateCheckInfo&quot;> </xref> para a atualização disponível."
  overload: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A aplicação atual não está configurada para suportar atualizações ou há outra operação de verificação de atualização já está em curso."
  - type: System.Deployment.Application.DeploymentDownloadException
    commentId: T:System.Deployment.Application.DeploymentDownloadException
    description: "Não é possível transferir o manifesto de implementação. Esta exceção irá aparecer no <xref:System.ComponentModel.AsyncCompletedEventArgs.Error*>propriedade o <xref href=&quot;System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted&quot;> </xref> eventos.</xref:System.ComponentModel.AsyncCompletedEventArgs.Error*>"
  - type: System.Deployment.Application.InvalidDeploymentException
    commentId: T:System.Deployment.Application.InvalidDeploymentException
    description: "O manifesto de implementação está danificado. Voltar a gerar o manifesto da aplicação antes de tentar implementar esta aplicação aos utilizadores. Esta exceção irá aparecer no <xref:System.ComponentModel.AsyncCompletedEventArgs.Error*>propriedade o <xref href=&quot;System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted&quot;> </xref> eventos.</xref:System.ComponentModel.AsyncCompletedEventArgs.Error*>"
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate(System.Boolean)
  id: CheckForDetailedUpdate(System.Boolean)
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: CheckForDetailedUpdate(Boolean)
  nameWithType: ApplicationDeployment.CheckForDetailedUpdate(Boolean)
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate(Boolean)
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Efetua a mesma operação como <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate*>, mas devolve informações expandidas sobre a atualização disponível.</xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate*>"
  syntax:
    content: public System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate (bool persistUpdateCheckResult);
    parameters:
    - id: persistUpdateCheckResult
      type: System.Boolean
      description: "Se <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, a atualização será automaticamente aplicada e não será apresentada nenhuma caixa de diálogo."
    return:
      type: System.Deployment.Application.UpdateCheckInfo
      description: "Um <xref href=&quot;System.Deployment.Application.UpdateCheckInfo&quot;> </xref> para a atualização disponível."
  overload: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdate
  id: CheckForUpdate
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: CheckForUpdate()
  nameWithType: ApplicationDeployment.CheckForUpdate()
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdate()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Verifica <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation*>para determinar se uma nova atualização está disponível.</xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation*>"
  remarks: "O método CheckForUpdate compara a versão da implementação atualmente instalada com a versão especificada no manifesto de implementação em <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>.</xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A> Se a versão no servidor é diferente da versão instalada, devolve `true`.       Este método irá bloquear até que a verificação foi concluída. Verificar a existência de uma atualização no modo assíncrono, utilize o <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A>método em vez disso.</xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A>      > [!NOTE] > CheckForUpdate se Deteta que está disponível uma atualização, e o utilizador escolher não instalá-lo, [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] pedirá ao utilizador que está disponível uma atualização na próxima vez que a aplicação é executada. Não é possível desativar a pedir. (Se a aplicação é uma atualização necessária, [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] instalará sem pedir confirmação.)"
  example:
  - "The following code example checks for an application update; if one is available, it installs it synchronously.  \n  \n [!code-cs[ClickOnceAPI#5](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#5)]\n [!code-cpp[ClickOnceAPI#5](~/add/codesnippet/cpp/m-system.deployment.appl_5_1.cpp)]\n [!code-vb[ClickOnceAPI#5](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#5)]"
  syntax:
    content: public bool CheckForUpdate ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se uma nova atualização está disponível. caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Deployment.Application.ApplicationDeployment.CheckForUpdate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: '[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]emitir esta exceção imediatamente se chamar o método CheckForUpdate enquanto uma atualização já está em curso.'
  - type: System.Deployment.Application.DeploymentDownloadException
    commentId: T:System.Deployment.Application.DeploymentDownloadException
    description: "Não é possível transferir o manifesto de implementação."
  - type: System.Deployment.Application.InvalidDeploymentException
    commentId: T:System.Deployment.Application.InvalidDeploymentException
    description: "O manifesto de implementação está danificado. Provavelmente, terá de voltar a implementar a aplicação para corrigir este problema."
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdate(System.Boolean)
  id: CheckForUpdate(System.Boolean)
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: CheckForUpdate(Boolean)
  nameWithType: ApplicationDeployment.CheckForUpdate(Boolean)
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdate(Boolean)
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Verifica <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation*>para determinar se uma nova atualização está disponível.</xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation*>"
  syntax:
    content: public bool CheckForUpdate (bool persistUpdateCheckResult);
    parameters:
    - id: persistUpdateCheckResult
      type: System.Boolean
      description: "Se <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, a atualização será automaticamente aplicada e não será apresentada nenhuma caixa de diálogo."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se uma nova atualização está disponível. caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Deployment.Application.ApplicationDeployment.CheckForUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync
  id: CheckForUpdateAsync
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: CheckForUpdateAsync()
  nameWithType: ApplicationDeployment.CheckForUpdateAsync()
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Verifica <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation*>assíncrona para determinar se uma nova atualização está disponível.</xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation*>"
  remarks: "CheckForUpdateAsync devolve imediatamente e inicia um thread separado para transferir a aplicação atualizada. Quando o método é concluído ou foi cancelado, gera o <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted>eventos.</xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted> Pode utilizar <xref:System.ComponentModel.AsyncCompletedEventArgs>este processador de eventos para determinar se a operação foi cancelada ou se foi levantada uma excepção durante a atualização.</xref:System.ComponentModel.AsyncCompletedEventArgs>       Pode cancelar uma atualização assíncrona, chamando <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel%2A>.</xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel%2A>      > [!NOTE] > Se <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A>deteta que está disponível uma atualização, e o utilizador escolher não instalá-lo, [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] pedirá ao utilizador que está disponível uma atualização na próxima vez que a aplicação é executada.</xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> Não é possível desativar a pedir. (Se a aplicação é uma atualização necessária, [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] instalará sem pedir confirmação.)"
  example:
  - "The following example checks for an update asynchronously, and installs the update if one exists.  \n  \n [!code-cs[ClickOnceAPI#1](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#1)]\n [!code-cpp[ClickOnceAPI#1](~/add/codesnippet/cpp/m-system.deployment.appl_3_1.cpp)]\n [!code-vb[ClickOnceAPI#1](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#1)]"
  syntax:
    content: public void CheckForUpdateAsync ();
    parameters: []
  overload: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: '[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]emitir esta exceção imediatamente se chamar o método CheckForUpdateAsync enquanto uma atualização já está em curso.'
  - type: System.Deployment.Application.DeploymentDownloadException
    commentId: T:System.Deployment.Application.DeploymentDownloadException
    description: "Não é possível transferir o manifesto de implementação. Esta exceção é apresentado no <xref:System.ComponentModel.AsyncCompletedEventArgs.Error*>propriedade o <xref href=&quot;System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted&quot;> </xref> eventos.</xref:System.ComponentModel.AsyncCompletedEventArgs.Error*>"
  - type: System.Deployment.Application.InvalidDeploymentException
    commentId: T:System.Deployment.Application.InvalidDeploymentException
    description: "O manifesto de implementação está danificado. Provavelmente, terá de voltar a implementar a aplicação para corrigir este problema. Esta exceção é apresentado no <xref:System.ComponentModel.AsyncCompletedEventArgs.Error*>propriedade o <xref href=&quot;System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted&quot;> </xref> eventos.</xref:System.ComponentModel.AsyncCompletedEventArgs.Error*>"
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel
  id: CheckForUpdateAsyncCancel
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: CheckForUpdateAsyncCancel()
  nameWithType: ApplicationDeployment.CheckForUpdateAsyncCancel()
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Cancela a verificação de atualização assíncrona."
  remarks: "Utilize este método para cancelar uma verificação de atualização iniciada com o <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A>método.</xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A>       Este método não cancelará a qualquer atualização em segundo plano que pode já estar em curso, tal como uma atualização foi iniciado como parte de uma subscrição. Para obter mais informações sobre as subscrições, consulte [escolher uma estratégia de atualização de ClickOnce](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void CheckForUpdateAsyncCancel ();
    parameters: []
  overload: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted
  id: CheckForUpdateCompleted
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: CheckForUpdateCompleted
  nameWithType: ApplicationDeployment.CheckForUpdateCompleted
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted
  type: Event
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Ocorre quando <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync*>foi concluída.</xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync*>"
  remarks: "O <xref:System.Deployment.Application.CheckForUpdateCompletedEventArgs>classe irá informá-lo, entre outras coisas, a versão da atualização, como grandes a atualização é e se a atualização disponível é necessária ou opcional.</xref:System.Deployment.Application.CheckForUpdateCompletedEventArgs>"
  example:
  - "The following code example uses CheckForUpdateCompleted to decide whether to ask the user to install the available application update. If the update is a mandatory upgrade, the CheckForUpdateCompleted event handler does not prompt the user. The example requires that you deploy a Windows Forms application that includes a <xref:System.Windows.Forms.StatusStrip> control, and that this control contain a <xref:System.Windows.Forms.ToolStripStatusLabel> control named `downloadStatus`.  \n  \n [!code-cs[ClickOnceAPI#1](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#1)]\n [!code-cpp[ClickOnceAPI#1](~/add/codesnippet/cpp/e-system.deployment.appl_2_1.cpp)]\n [!code-vb[ClickOnceAPI#1](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#1)]"
  syntax:
    content: public event System.Deployment.Application.CheckForUpdateCompletedEventHandler CheckForUpdateCompleted;
    return:
      type: System.Deployment.Application.CheckForUpdateCompletedEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged
  id: CheckForUpdateProgressChanged
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: CheckForUpdateProgressChanged
  nameWithType: ApplicationDeployment.CheckForUpdateProgressChanged
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged
  type: Event
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Ocorre quando uma atualização de progresso está disponível um <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync*>chamar.</xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync*>"
  remarks: "Relatórios de CheckForUpdateProgressChanged o estado de transferência da implementação da aplicação de manifestam. Isto pode ser informações importantes para os utilizadores que estiver a transferir a implementação através de ligações de rede lenta."
  example:
  - "The following code example uses the CheckForUpdateProgressChanged event to inform the user how much of the deployment manifest is left to download. The example requires that you deploy a Windows Forms application that includes a <xref:System.Windows.Forms.StatusStrip> control, and that this control contain a <xref:System.Windows.Forms.ToolStripStatusLabel> control named `downloadStatus`..  \n  \n [!code-cs[ClickOnceAPI#1](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#1)]\n [!code-cpp[ClickOnceAPI#1](~/add/codesnippet/cpp/d621aa2f-b92e-4e9d-b698-_1.cpp)]\n [!code-vb[ClickOnceAPI#1](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#1)]"
  syntax:
    content: public event System.Deployment.Application.DeploymentProgressChangedEventHandler CheckForUpdateProgressChanged;
    return:
      type: System.Deployment.Application.DeploymentProgressChangedEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.CurrentDeployment
  id: CurrentDeployment
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: CurrentDeployment
  nameWithType: ApplicationDeployment.CurrentDeployment
  fullName: System.Deployment.Application.ApplicationDeployment.CurrentDeployment
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Devolve o atual <xref href=&quot;System.Deployment.Application.ApplicationDeployment&quot;> </xref> para esta implementação."
  remarks: "Não é possível criar instâncias do <xref:System.Deployment.Application.ApplicationDeployment>diretamente na sua aplicação; tem de obter uma instância válida através da propriedade CurrentDeployment.</xref:System.Deployment.Application.ApplicationDeployment>       A propriedade estática CurrentDeployment é válida apenas a partir de dentro de uma aplicação que foi implementada utilizando [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]. Tenta chamar esta propriedade de não -[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] aplicações irão gerar uma exceção. Se estiver a desenvolver uma aplicação que podem ou não pode ser implementada utilizando [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)], utilize o <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A>propriedade para testar se o programa de atual é um [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] aplicação.</xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A>"
  example:
  - "The following code example retrieves CurrentDeployment and checks to determine whether the application has been updated in the past three days.  \n  \n [!code-cs[ClickOnceAPI#3](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#3)]\n [!code-cpp[ClickOnceAPI#3](~/add/codesnippet/cpp/p-system.deployment.appl_12_1.cpp)]\n [!code-vb[ClickOnceAPI#3](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#3)]"
  syntax:
    content: public static System.Deployment.Application.ApplicationDeployment CurrentDeployment { get; }
    return:
      type: System.Deployment.Application.ApplicationDeployment
      description: "A implementação atual."
  overload: System.Deployment.Application.ApplicationDeployment.CurrentDeployment*
  exceptions:
  - type: System.Deployment.Application.InvalidDeploymentException
    commentId: T:System.Deployment.Application.InvalidDeploymentException
    description: "Tentou chamar esta propriedade estática a partir de um não -[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] aplicação."
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.CurrentVersion
  id: CurrentVersion
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: CurrentVersion
  nameWithType: ApplicationDeployment.CurrentVersion
  fullName: System.Deployment.Application.ApplicationDeployment.CurrentVersion
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Obtém a versão da implementação para a instância em execução atual da aplicação."
  remarks: "CurrentVersion variam de <xref:System.Deployment.Application.ApplicationDeployment.UpdatedVersion%2A>se uma nova atualização tenha sido instalada, mas ainda não ter chamado <xref:System.Windows.Forms.Application.Restart%2A>.</xref:System.Windows.Forms.Application.Restart%2A> </xref:System.Deployment.Application.ApplicationDeployment.UpdatedVersion%2A> Se o manifesto de implementação está configurado para executar atualizações automáticas, pode comparar estes dois valores para determinar se deve reiniciar a aplicação."
  example:
  - "The following code example defines a method that determines whether [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] has updated the application.  \n  \n [!code-cs[ClickOnceAPI#3](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#3)]\n [!code-cpp[ClickOnceAPI#3](~/add/codesnippet/cpp/p-system.deployment.appl_7_1.cpp)]\n [!code-vb[ClickOnceAPI#3](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#3)]"
  syntax:
    content: public Version CurrentVersion { get; }
    return:
      type: System.Version
      description: "A versão de implementação atual."
  overload: System.Deployment.Application.ApplicationDeployment.CurrentVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.DataDirectory
  id: DataDirectory
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: DataDirectory
  nameWithType: ApplicationDeployment.DataDirectory
  fullName: System.Deployment.Application.ApplicationDeployment.DataDirectory
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Obtém o caminho para o [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] diretório de dados."
  syntax:
    content: public string DataDirectory { get; }
    return:
      type: System.String
      description: "Uma cadeia que contém o caminho para o diretório da aplicação dados no disco local."
  overload: System.Deployment.Application.ApplicationDeployment.DataDirectory*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)
  id: DownloadFileGroup(System.String)
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: DownloadFileGroup(String)
  nameWithType: ApplicationDeployment.DownloadFileGroup(String)
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(String)
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Transfere um conjunto de ficheiros opcionais a pedido."
  remarks: "Num [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] aplicação, os ficheiros marcado como &quot;opcionais&quot; no manifesto da aplicação não são transferidos durante a inicialização ou atualização. Pode utilizar o método DownloadFileGroup para transferir todos os ficheiros que pertençam a um grupo nomeado a pedido, para que não consumir recursos de rede e espaço em disco até que tem a certeza de que o utilizador necessita deles. Por exemplo, determinados utilizadores poderão ter de utilizar um pacote de análise de dados incluído na sua aplicação numa base diária, enquanto outros utilizadores nunca podem invocá-lo.       Para utilizar uma assemblagem que transferiram com DownloadFileGroup, anexe um serviço de escuta de eventos para o <xref:System.AppDomain.AssemblyResolve>evento de <xref:System.AppDomain.CurrentDomain%2A>.</xref:System.AppDomain.CurrentDomain%2A> </xref:System.AppDomain.AssemblyResolve> Por exemplo, consulte =[explicação passo a passo: transferir assemblagens a pedido com o ClickOnce implementação API utilizando o estruturador](~/add/includes/ajax-current-ext-md.md).       Todos os ficheiros são transferidos para o [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] cache da aplicação e estão isoladas, por conseguinte, para a versão atual da aplicação. Imaginemos que depois de uma aplicação transfere um grupo de ficheiros, o utilizador instala uma nova versão da aplicação, mas reverte mais tarde para a versão anterior da aplicação. Neste caso, a versão anterior continuará a ter cópias dos ficheiros transferidos originalmente. Para obter mais informações sobre como aceder a ficheiros de dados, consulte [aceder ao Local e remoto dados em aplicações ClickOnce](~/add/includes/ajax-current-ext-md.md).       DownloadFileGroup funciona nas aplicações parcialmente fidedignas, ou seja, em qualquer [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] restrito de aplicação com permissão. No entanto, se tentar carregar assemblagens dinamicamente, a aplicação irá necessitar de fidedignidade total.       Transferir a pedido dos ficheiros de dados não é atualmente suportada.       A aplicação não será possível responder ao utilizador até que o método DownloadFileGroup devolve de entrada. Se precisar de transferir ficheiros sem interromper o fluxo de trabalho do utilizador, utilize o <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>método em vez disso.</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>       Não é possível transferir um ficheiro único pelo respetivo nome de ficheiro autónomo. Para transferir um ficheiro único, atribua-lhe um nome de grupo no seu [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] implementação e transferência grupo através deste método."
  example:
  - "The following code example demonstrates how to load an assembly on demand by listening for the <xref:System.AppDomain.AssemblyResolve> event.  \n  \n [!code-cs[ClickOnceOnDemandCmdLine#2](~/add/codesnippet/csharp/6f3e5fcc-9a7b-4ff6-a5e4-_1.cs)]"
  syntax:
    content: public void DownloadFileGroup (string groupName);
    parameters:
    - id: groupName
      type: System.String
      description: "O grupo com o nome dos ficheiros para transferir. Todos os ficheiros marcado como &quot;opcionais&quot; num [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] aplicação requer um nome de grupo."
  overload: System.Deployment.Application.ApplicationDeployment.DownloadFileGroup*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O <code> groupName </code> parâmetro é nulo ou comprimento zero."
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String)
  id: DownloadFileGroupAsync(System.String)
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: DownloadFileGroupAsync(String)
  nameWithType: ApplicationDeployment.DownloadFileGroupAsync(String)
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(String)
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Transfere, a pedido, um conjunto de ficheiros opcionais em segundo plano."
  remarks: "Num [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] aplicação, os ficheiros marcado como &quot;opcionais&quot; no manifesto da aplicação não são transferidos durante a inicialização ou atualização. Pode utilizar o método DownloadFileGroupAsync para transferir todos os ficheiros que pertençam a um grupo nomeado a pedido, para que não consumir recursos de rede e espaço em disco até que tem a certeza de que o utilizador necessita deles. Esta abordagem funciona não apenas para ficheiros estáticos, mas também para assemblagens que uma aplicação pode ou não precisar. Por exemplo, determinados utilizadores poderão ter de utilizar um pacote de análise de dados incluído na sua aplicação numa base diária, enquanto outros utilizadores nunca podem invocá-lo.       Para transferir assemblagens a pedido, anexar um serviço de escuta de eventos para o <xref:System.AppDomain.AssemblyResolve>evento de <xref:System.AppDomain.CurrentDomain%2A>.</xref:System.AppDomain.CurrentDomain%2A> </xref:System.AppDomain.AssemblyResolve> Por exemplo, consulte [explicação passo a passo: transferir assemblagens a pedido com a API de implementação ClickOnce](~/add/includes/ajax-current-ext-md.md).       Todas as assemblagens são transferidas para o [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] cache da aplicação.       Todos os ficheiros estáticos são transferidos para o [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] diretório de dados da aplicação e a estão isoladas, por conseguinte, para a versão atual da aplicação. Imaginemos que depois de uma aplicação transfere um grupo de ficheiros, o utilizador instala uma nova versão da aplicação, mas reverte mais tarde para a versão anterior da aplicação. Neste caso, a versão anterior continuará a ter cópias dos ficheiros transferidos originalmente. Para obter mais informações sobre como aceder a ficheiros estáticos, consulte [aceder ao Local e remoto dados em aplicações ClickOnce](~/add/includes/ajax-current-ext-md.md).       Pode transferir a vários grupos de ficheiros em simultâneo utilizando <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>.</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> Pode distinguir entre eles, utilizando o <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs.Group%2A>propriedade o <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs>classe, que é transmitida para o <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged>eventos.</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged> </xref:System.Deployment.Application.DeploymentProgressChangedEventArgs> </xref:System.Deployment.Application.DeploymentProgressChangedEventArgs.Group%2A> Se precisar de transmitir o estado mais complexo, pode utilizar <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>passem um `state` objeto.</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>       <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>funciona em aplicações parcialmente fidedignas, ou seja, em qualquer [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] restrito de aplicação com permissão.</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> No entanto, se está a tentar carregar assemblagens dinamicamente, a aplicação irá necessitar de fidedignidade total.       Transferir a pedido dos ficheiros de dados não é atualmente suportada.       Não é possível transferir um ficheiro único pelo respetivo nome de ficheiro autónomo. Para transferir um ficheiro único, atribua-lhe um nome de grupo no seu [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] implementação e transferência grupo através deste método.       Para cancelar uma transferência assíncrona, chame o <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel%2A>método.</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel%2A>"
  syntax:
    content: public void DownloadFileGroupAsync (string groupName);
    parameters:
    - id: groupName
      type: System.String
      description: "O grupo com o nome dos ficheiros para transferir. Todos os ficheiros marcado como &quot;opcionais&quot; num [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] aplicação requer um nome de grupo."
  overload: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O <code> groupName </code> parâmetro é nulo ou comprimento zero."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Não é possível iniciar mais do que uma transferência de <code> groupName </code> cada vez."
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String,System.Object)
  id: DownloadFileGroupAsync(System.String,System.Object)
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: DownloadFileGroupAsync(String,Object)
  nameWithType: ApplicationDeployment.DownloadFileGroupAsync(String,Object)
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(String,Object)
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Transfere, a pedido, um conjunto de ficheiros opcionais em segundo plano e passa a um fragmento do Estado da aplicação para as chamadas de retorno de eventos."
  remarks: "Num [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] aplicação, os ficheiros marcado como &quot;opcionais&quot; no manifesto da aplicação não são transferidos durante a inicialização ou atualização. Pode utilizar o <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>método para transferir todos os ficheiros que pertençam a um grupo nomeado a pedido, para que não consumir recursos de rede e espaço em disco até que tem a certeza de que o utilizador necessita deles.</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> Esta abordagem funciona não apenas para ficheiros estáticos, mas também para assemblagens que uma aplicação pode ou não precisar. Por exemplo, determinados utilizadores poderão ter de utilizar um pacote de análise de dados incluído na sua aplicação numa base diária, enquanto outros utilizadores nunca podem invocá-lo. Para transferir assemblagens a pedido, anexar um serviço de escuta de eventos para o <xref:System.AppDomain.AssemblyResolve>evento de <xref:System.AppDomain.CurrentDomain%2A>.</xref:System.AppDomain.CurrentDomain%2A> </xref:System.AppDomain.AssemblyResolve>       Pode transferir em simultâneo vários grupos de ficheiros utilizando o método DownloadFileGroupAsync. Pode distinguir entre eles, utilizando o <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs.Group%2A>propriedade o <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs>classe, que é transmitida para o <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged>eventos.</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged> </xref:System.Deployment.Application.DeploymentProgressChangedEventArgs> </xref:System.Deployment.Application.DeploymentProgressChangedEventArgs.Group%2A> Se precisar de transmitir um Estado mais complexo, pode utilizar DownloadFileGroupAsync passem um `state` objeto.       Todos os ficheiros estáticos são transferidos para o [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] diretório de dados da aplicação e a estão isoladas, por conseguinte, para a versão atual da aplicação. Para obter mais informações sobre como aceder a ficheiros estáticos, consulte [aceder ao Local e remoto dados em aplicações ClickOnce](~/add/includes/ajax-current-ext-md.md). . Vamos supor que que depois de uma aplicação transfere um grupo de ficheiros, o utilizador instala uma nova versão da aplicação, mas utilizador posterior reverte para a versão anterior da aplicação. Neste caso, a versão anterior continuará a ter cópias dos ficheiros transferidos originalmente.       <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>funciona em aplicações parcialmente fidedignas, ou seja, em qualquer [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] restrito de aplicação com permissão.</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> No entanto, se está a tentar carregar assemblagens dinamicamente, a aplicação irá necessitar de fidedignidade total.       Transferir a pedido dos ficheiros de dados não é atualmente suportada.       Para cancelar uma transferência assíncrona, chame o <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel%2A>método.</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel%2A>"
  syntax:
    content: public void DownloadFileGroupAsync (string groupName, object userState);
    parameters:
    - id: groupName
      type: System.String
      description: "O grupo com o nome dos ficheiros para transferir. Todos os ficheiros marcado como &quot;opcionais&quot; num [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] aplicação requer um nome de grupo."
    - id: userState
      type: System.Object
      description: "Um objeto arbitrário que contém informações de estado para a operação assíncrona."
  overload: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O <code> groupName </code> parâmetro é nulo ou comprimento zero."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Não é possível iniciar mais do que uma transferência de <code> groupName </code> cada vez."
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel(System.String)
  id: DownloadFileGroupAsyncCancel(System.String)
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: DownloadFileGroupAsyncCancel(String)
  nameWithType: ApplicationDeployment.DownloadFileGroupAsyncCancel(String)
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel(String)
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Cancela uma transferência de ficheiro assíncrona."
  syntax:
    content: public void DownloadFileGroupAsyncCancel (string groupName);
    parameters:
    - id: groupName
      type: System.String
      description: "O grupo com o nome dos ficheiros para transferir. Todos os ficheiros marcado como &quot;opcionais&quot; num [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] aplicação requer um nome de grupo."
  overload: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>groupName</code>Não é possível <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupCompleted
  id: DownloadFileGroupCompleted
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: DownloadFileGroupCompleted
  nameWithType: ApplicationDeployment.DownloadFileGroupCompleted
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupCompleted
  type: Event
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Ocorre no thread de aplicação principal quando uma transferência de ficheiros estiver concluída."
  remarks: "O evento DownloadFileGroupCompleted denomina-se no thread principal da aplicação. É seguro chamar controlos de Windows Forms da sua aplicação diretamente nesta chamada de retorno de thread.       Verifique o <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>propriedade o <xref:System.ComponentModel.AsyncCompletedEventArgs>fornecida para esta chamada de retorno.</xref:System.ComponentModel.AsyncCompletedEventArgs> </xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> Se esta propriedade é `null`, a transferência foi concluída com êxito; se não for `null`, a instalação não teve êxito e pode encontrar mais informações sobre a falha da instalação através do <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>propriedade.</xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>"
  example:
  - "The following code example downloads a group of Help files in the background. The example requires that you deploy a Windows Forms application that includes a <xref:System.Windows.Forms.StatusStrip> control, and that this control contain a <xref:System.Windows.Forms.ToolStripStatusLabel> control named `downloadStatus`..  \n  \n [!code-cs[ClickOnceAPI#8](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#8)]\n [!code-cpp[ClickOnceAPI#8](~/add/codesnippet/cpp/d8c90486-6b41-4c55-b911-_1.cpp)]\n [!code-vb[ClickOnceAPI#8](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#8)]"
  syntax:
    content: public event System.Deployment.Application.DownloadFileGroupCompletedEventHandler DownloadFileGroupCompleted;
    return:
      type: System.Deployment.Application.DownloadFileGroupCompletedEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged
  id: DownloadFileGroupProgressChanged
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: DownloadFileGroupProgressChanged
  nameWithType: ApplicationDeployment.DownloadFileGroupProgressChanged
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged
  type: Event
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Ocorre quando as informações de estado estão disponíveis uma operação de transferência de ficheiros iniciada por uma chamada para <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync*>.</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync*>"
  remarks: "O evento DownloadFileGroupProgressChanged denomina-se no thread principal da aplicação. É seguro chamar controlos de Windows Forms da sua aplicação diretamente nesta chamada de retorno de thread.       Utilize as informações fornecidas no <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs>para comunicar informações de progresso para os seus utilizadores.</xref:System.Deployment.Application.DeploymentProgressChangedEventArgs>"
  example:
  - "The following code example downloads a group of Help files in the background. The example requires that you deploy a Windows Forms application that includes a <xref:System.Windows.Forms.StatusStrip> control, and that this control contain a <xref:System.Windows.Forms.ToolStripStatusLabel> control named `downloadStatus`.  \n  \n [!code-cs[ClickOnceAPI#8](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#8)]\n [!code-cpp[ClickOnceAPI#8](~/add/codesnippet/cpp/dd149587-df74-4c6a-9251-_1.cpp)]\n [!code-vb[ClickOnceAPI#8](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#8)]"
  syntax:
    content: public event System.Deployment.Application.DeploymentProgressChangedEventHandler DownloadFileGroupProgressChanged;
    return:
      type: System.Deployment.Application.DeploymentProgressChangedEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded(System.String)
  id: IsFileGroupDownloaded(System.String)
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: IsFileGroupDownloaded(String)
  nameWithType: ApplicationDeployment.IsFileGroupDownloaded(String)
  fullName: System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded(String)
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Verifica se o grupo de ficheiros nomeado já tenha sido transferido para o computador cliente."
  remarks: "IsFileGroupDownloaded funciona numa aplicação sem qualquer exigências de segurança parcialmente fidedigna.       Quando atualizar uma aplicação, [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] copia os ficheiros de dados a pedido da versão anterior para o diretório de dados a nova versão. Se transferir uma nova versão destes ficheiros, deve remover quaisquer dados que pretende manter a versão antiga e movê-la para a nova versão."
  example:
  - "The following code example downloads all of the files in the `HelpFiles` group to disk.  \n  \n [!code-cs[ClickOnceAPI#8](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#8)]\n [!code-cpp[ClickOnceAPI#8](~/add/codesnippet/cpp/ff7c4993-a9b0-4966-b9a0-_1.cpp)]\n [!code-vb[ClickOnceAPI#8](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#8)]"
  syntax:
    content: public bool IsFileGroupDownloaded (string groupName);
    parameters:
    - id: groupName
      type: System.String
      description: "O grupo com o nome dos ficheiros para transferir. Todos os ficheiros marcado como &quot;opcionais&quot; num [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] aplicação requer um nome de grupo."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o grupo de ficheiros já tenha sido transferido para a versão atual desta aplicação; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Se instalou uma nova versão da aplicação e a nova versão não tem adicionados, removidos ou alterar ficheiros no grupo de ficheiros, IsFileGroupDownloaded devolve <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded*
  exceptions:
  - type: System.Deployment.Application.InvalidDeploymentException
    commentId: T:System.Deployment.Application.InvalidDeploymentException
    description: "<code>groupName</code>Não é um grupo de ficheiros está definido no manifesto da aplicação."
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.IsFirstRun
  id: IsFirstRun
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: IsFirstRun
  nameWithType: ApplicationDeployment.IsFirstRun
  fullName: System.Deployment.Application.ApplicationDeployment.IsFirstRun
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Obtém um valor que indica se esta for a primeira vez que esta aplicação foi executada no computador cliente."
  remarks: "Utilize IsFirstRun para determinar se é preciso executar quaisquer operações de inicialização de uma única na primeira vez que a aplicação for executada.       Não parta do princípio que uma definição de IsFirstRun de `true` indica que esta instância de uma aplicação é o primeiro para mostrar a respetiva interface de utilizador para o utilizador. Devido à forma como o sistema agendas de processos, uma instância da aplicação pode ter a respetiva propriedade IsFirstRun definida como `true`, mas de outra instância pode ser o primeiro a compor no ecrã. O valor desta propriedade é reposto sempre que o utilizador atualiza a partir de uma versão para a seguinte. Se pretender efetuar uma operação só de tempo muito primeiro de qualquer versão da aplicação é executada, terá de efetuar um teste adicional, tais como a verificar a existência de um ficheiro que criou na primeira vez ou armazenar uma através do sinalizador **definições da aplicação**."
  example:
  - "The following code example uses IsFirstRun to decide whether to check for an update to the file group `HelpFiles`. If one or more of the files have been updated, it calls <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> to obtain the new versions.  \n  \n [!code-cs[ClickOnceAPI#9](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#9)]\n [!code-vb[ClickOnceAPI#9](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#9)]"
  syntax:
    content: public bool IsFirstRun { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se esta versão da aplicação nunca foi executada no computador cliente antes de; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Deployment.Application.ApplicationDeployment.IsFirstRun*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed
  id: IsNetworkDeployed
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: IsNetworkDeployed
  nameWithType: ApplicationDeployment.IsNetworkDeployed
  fullName: System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Obtém um valor que indica se a aplicação atual é um [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] aplicação."
  remarks: "Se pretender que a aplicação para executar ambos no interior e fora de um [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] IsNetworkDeployed de teste de implementação (por exemplo, se tiver de depurar a aplicação no computador local antes de o implementar), antes de aceder a <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A>propriedade.</xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A>       Irá devolver IsNetworkDeployed `true` , independentemente se a aplicação está instalada ou alojada online, e independentemente se foi instalado de um Web site, a partilha de ficheiros ou o CD-ROM."
  example:
  - "The following code example retrieves <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> by using IsNetworkDeployed first to ensure that the reference is not `null`.  \n  \n [!code-cs[ClickOnceAPI#2](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#2)]\n [!code-cpp[ClickOnceAPI#2](~/add/codesnippet/cpp/p-system.deployment.appl_0_1.cpp)]"
  syntax:
    content: public static bool IsNetworkDeployed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se se tratar de um [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] da aplicação; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck
  id: TimeOfLastUpdateCheck
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: TimeOfLastUpdateCheck
  nameWithType: ApplicationDeployment.TimeOfLastUpdateCheck
  fullName: System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Obtém a data e a hora [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] última verificação de uma atualização da aplicação."
  remarks: "A [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] aplicação pode ser configurada para atualizações de subscrição. Neste cenário, [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] consulta a localização de implementação de uma aplicação automaticamente em intervalos definidos no manifesto de implementação e determina se existe uma atualização disponível. TimeOfLastUpdateCheck devolve a hora da última verificação de atualização, independentemente da que foi iniciada por uma subscrição ou através de uma verificação explícita de <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A>, <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A>, <xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A>, <xref:System.Deployment.Application.ApplicationDeployment.Update%2A>, ou <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>método.</xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> </xref:System.Deployment.Application.ApplicationDeployment.Update%2A> </xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A> </xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A> </xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A>       Se a verificação de atualização não foi efetuada uma vez que a aplicação foi instalada, TimeOfLastUpdateCheck devolve a hora de instalação."
  example:
  - "The following code example checks whether a [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] application has been checked for available updates in the past three days.  \n  \n [!code-cs[ClickOnceAPI#3](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#3)]\n [!code-cpp[ClickOnceAPI#3](~/add/codesnippet/cpp/p-system.deployment.appl_8_1.cpp)]\n [!code-vb[ClickOnceAPI#3](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#3)]"
  syntax:
    content: public DateTime TimeOfLastUpdateCheck { get; }
    return:
      type: System.DateTime
      description: "O <xref:System.DateTime>da última verificação de atualização.</xref:System.DateTime>"
  overload: System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.Update
  id: Update
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: Update()
  nameWithType: ApplicationDeployment.Update()
  fullName: System.Deployment.Application.ApplicationDeployment.Update()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Inicia uma transferência síncrona e a instalação da versão mais recente desta aplicação."
  remarks: "Uma aplicação é considerada atualizado quando publica uma nova versão da aplicação a localização especificada pela <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>, e o número de versão no manifesto de implementação da aplicação é superior ao número de versão da aplicação atualmente instalado no computador do utilizador.</xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>       A chamada de atualização irá bloquear até que a atualização foi transferida para o computador cliente e instalada para o [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] cache; durante este período, a aplicação não será responder ao utilizador. Se pretender manter a capacidade de resposta de aplicação ou apresentar um relatório de progresso durante a transferência, utilize o <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>método em vez disso.</xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>       A atualização transfere todos os ficheiros que não estão marcados como &quot;opcional&quot; no manifesto da aplicação. Pode transferir ficheiros opcionais a pedido utilizando o <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>ou <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>método.</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> </xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>       [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]Pode já estar a atualizar a aplicação automaticamente quando chamar o método de atualização; Se isto acontecer, as chamadas para este método irão gerar um <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException>       Se atualizou um ou mais ficheiros na sua implementação, mas não tiver atualizado o manifesto da aplicação, receberá um <xref:System.Deployment.Application.InvalidDeploymentException>.</xref:System.Deployment.Application.InvalidDeploymentException> Maioria do tempo, voltar a implementar o [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] aplicação resolve este problema. Também irá receber esta exceção, se uma assinatura de chave pública num manifesto de implementação ou o manifesto da aplicação é inválida ou em falta.       Uma atualização pode solicitar um nível mais elevado de confiança no computador local, a versão anterior da aplicação. Se a aplicação utilizar a implementação de aplicação fidedigno, o Gestor de fidedignidade de runtime (CLR) de idioma comum examina o manifesto de implementação para determinar se contém uma licença de confiança válida. Se o manifesto de implementação não contém uma licença de confiança válida, [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] interrompe a instalação e emite um <xref:System.Deployment.Application.TrustNotGrantedException>.</xref:System.Deployment.Application.TrustNotGrantedException> O método de atualização nunca apresentará uma linha de pedir ao utilizador se pretende conceder a permissão da aplicação para ser executada."
  example:
  - "The following code example checks for an application update; if an update is available, it installs it synchronously.  \n  \n [!code-cs[ClickOnceAPI#6](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#6)]\n [!code-cpp[ClickOnceAPI#6](~/add/codesnippet/cpp/m-system.deployment.appl_6_1.cpp)]\n [!code-vb[ClickOnceAPI#6](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#6)]"
  syntax:
    content: public bool Update ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se tiver sido atualizada uma aplicação; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Deployment.Application.ApplicationDeployment.Update*
  exceptions:
  - type: System.Deployment.Application.TrustNotGrantedException
    commentId: T:System.Deployment.Application.TrustNotGrantedException
    description: "O computador local não concedeu a aplicação o nível de permissão que solicitou a execução."
  - type: System.Deployment.Application.InvalidDeploymentException
    commentId: T:System.Deployment.Application.InvalidDeploymentException
    description: "O [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] implementação está danificada. Para sugestões sobre como diagnosticar e corrigir o problema, consulte [implementações de resolução de problemas de ClickOnce](~/add/includes/ajax-current-ext-md.md)."
  - type: System.Deployment.Application.DeploymentDownloadException
    commentId: T:System.Deployment.Application.DeploymentDownloadException
    description: "Não foi possível transferir a nova implementação a partir da sua localização na rede."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A aplicação está atualmente a ser atualizada."
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.UpdateAsync
  id: UpdateAsync
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: UpdateAsync()
  nameWithType: ApplicationDeployment.UpdateAsync()
  fullName: System.Deployment.Application.ApplicationDeployment.UpdateAsync()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Inicia uma transferência assíncrona e a instalação da versão mais recente desta aplicação."
  remarks: "Uma aplicação é considerada atualizado quando publica uma nova versão da aplicação a localização especificada pela <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>, e o número de versão no manifesto de implementação da aplicação é superior ao número de versão da aplicação atualmente instalado no computador do utilizador.</xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>       Ao transferir a atualização, [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] irá elevar o <xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged>processador de eventos no thread de aplicação principal para o informar sobre o estado da transferência.</xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged> Quando a atualização assíncrona conclusão ou encontra uma exceção, [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] irá elevar o <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted>eventos no thread de aplicação principal.</xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted> Examine o <xref:System.ComponentModel.AsyncCompletedEventArgs>fornecido a este evento para determinar se a atualização foi bem-sucedida.</xref:System.ComponentModel.AsyncCompletedEventArgs>       Se UpdateAsync emite uma exceção, [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] chamadas <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted>e define o <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>propriedade <xref:System.ComponentModel.AsyncCompletedEventArgs>a exceção foi emitida.</xref:System.ComponentModel.AsyncCompletedEventArgs> </xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> </xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted>       UpdateAsync irá transferir todos os ficheiros numa implementação não marcados como &quot;opcional&quot; no manifesto da aplicação. Pode transferir ficheiros opcionais a pedido utilizando o <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>ou <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>método.</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> </xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>       [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]Pode já estar a atualizar a aplicação automaticamente quando chamar o método UpdateAsync; Se isto acontecer, as chamadas para este método irão gerar um <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException>       Se atualizou um ou mais ficheiros na sua implementação, mas não tiver atualizado o manifesto da aplicação, receberá um <xref:System.Deployment.Application.InvalidDeploymentException>.</xref:System.Deployment.Application.InvalidDeploymentException> Na maioria das vezes, reconstrua o manifesto da aplicação resolve este problema. Também irá receber esta exceção, se uma assinatura de chave pública num manifesto de implementação ou o manifesto da aplicação é inválida ou em falta.       Uma atualização pode solicitar um nível mais elevado de confiança no computador local, a versão anterior da aplicação. Se a aplicação utilizar a implementação de aplicação fidedigno, o Gestor de fidedignidade de runtime (CLR) de idioma comum examina o manifesto de implementação para determinar se contém uma licença de confiança válida. Se o manifesto de implementação não contém uma licença de confiança válida, [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] interrompe a instalação e emite um <xref:System.Deployment.Application.TrustNotGrantedException>.</xref:System.Deployment.Application.TrustNotGrantedException> UpdateAsync nunca apresentará uma linha de pedir ao utilizador se pretende conceder a permissão da aplicação para ser executada."
  example:
  - "The following code example determines whether a new update is available at application load time; if a required update is available, it installs the update asynchronously. The example requires that you deploy a Windows Forms application that includes a <xref:System.Windows.Forms.StatusStrip> control, and that this control contain a <xref:System.Windows.Forms.ToolStripStatusLabel> control named `downloadStatus`.  \n  \n [!code-cs[ClickOnceAPI#1](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#1)]\n [!code-cpp[ClickOnceAPI#1](~/add/codesnippet/cpp/m-system.deployment.appl_2_1.cpp)]\n [!code-vb[ClickOnceAPI#1](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#1)]"
  syntax:
    content: public void UpdateAsync ();
    parameters: []
  overload: System.Deployment.Application.ApplicationDeployment.UpdateAsync*
  exceptions:
  - type: System.Deployment.Application.TrustNotGrantedException
    commentId: T:System.Deployment.Application.TrustNotGrantedException
    description: "O computador local não concedeu esta aplicação o nível de permissão que solicitou a execução."
  - type: System.Deployment.Application.InvalidDeploymentException
    commentId: T:System.Deployment.Application.InvalidDeploymentException
    description: "O [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] implementação está danificada. Para sugestões sobre como diagnosticar e corrigir o problema, consulte [implementações de resolução de problemas de ClickOnce](~/add/includes/ajax-current-ext-md.md)."
  - type: System.Deployment.Application.DeploymentDownloadException
    commentId: T:System.Deployment.Application.DeploymentDownloadException
    description: "Não foi possível transferir a nova implementação a partir da sua localização na rede."
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel
  id: UpdateAsyncCancel
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: UpdateAsyncCancel()
  nameWithType: ApplicationDeployment.UpdateAsyncCancel()
  fullName: System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Cancela uma atualização assíncrona iniciada pelo <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync*>.</xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync*>"
  remarks: "UpdateAsyncCancel apenas cancela uma atualização iniciada por uma chamada para <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>; cancele a uma atualização foi iniciada como parte de uma subscrição.</xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>"
  syntax:
    content: public void UpdateAsyncCancel ();
    parameters: []
  overload: System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.UpdateCompleted
  id: UpdateCompleted
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: UpdateCompleted
  nameWithType: ApplicationDeployment.UpdateCompleted
  fullName: System.Deployment.Application.ApplicationDeployment.UpdateCompleted
  type: Event
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Ocorre quando [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] concluiu a atualização da aplicação como resultado de uma chamada para <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync*>.</xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync*>"
  remarks: "O evento UpdateCompleted denomina-se no thread principal da aplicação. Pode chamar controlos de Windows Forms da sua aplicação diretamente nesta chamada de retorno sem uma exceção a acionar.       Verifique o <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>propriedade o <xref:System.ComponentModel.AsyncCompletedEventArgs>fornecida para esta chamada de retorno.</xref:System.ComponentModel.AsyncCompletedEventArgs> </xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> Se esta propriedade é `null`, a instalação foi bem sucedida; caso não seja `null`, a instalação não teve êxito e pode encontrar mais informações sobre esta falha de instalação através do <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>propriedade.</xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> Após a atualização tenha sido transferida, terá de chamar o <xref:System.Windows.Forms.Application.Restart%2A>método no <xref:System.Windows.Forms.Application>para utilizar a versão mais recente da aplicação.</xref:System.Windows.Forms.Application> </xref:System.Windows.Forms.Application.Restart%2A>       Se a instalação da atualização foi cancelada por uma chamada para <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel%2A>, a <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A>propriedade o <xref:System.ComponentModel.AsyncCompletedEventArgs>classe será `true`.</xref:System.ComponentModel.AsyncCompletedEventArgs> </xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> </xref:System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel%2A>       Para utilizar este processador de eventos, a aplicação tem de importar ambos o <xref:System.Deployment.Application>e <xref:System.ComponentModel>espaços de nomes.</xref:System.ComponentModel> </xref:System.Deployment.Application>"
  example:
  - "The following code example determines at application load time whether a new update is available; if a required update is available, it installs the update asynchronously. The example requires that you deploy a Windows Forms application that includes a <xref:System.Windows.Forms.StatusStrip> control, and that this control contain a <xref:System.Windows.Forms.ToolStripStatusLabel> control named `downloadStatus`.  \n  \n [!code-cs[ClickOnceAPI#1](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#1)]\n [!code-cpp[ClickOnceAPI#1](~/add/codesnippet/cpp/e-system.deployment.appl_3_1.cpp)]\n [!code-vb[ClickOnceAPI#1](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#1)]"
  syntax:
    content: public event System.ComponentModel.AsyncCompletedEventHandler UpdateCompleted;
    return:
      type: System.ComponentModel.AsyncCompletedEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName
  id: UpdatedApplicationFullName
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: UpdatedApplicationFullName
  nameWithType: ApplicationDeployment.UpdatedApplicationFullName
  fullName: System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Obtém o nome completo da aplicação depois de este tiver sido atualizado."
  syntax:
    content: public string UpdatedApplicationFullName { get; }
    return:
      type: System.String
      description: "A <xref:System.String>que contém o nome completo da aplicação.</xref:System.String>"
  overload: System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.UpdatedVersion
  id: UpdatedVersion
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: UpdatedVersion
  nameWithType: ApplicationDeployment.UpdatedVersion
  fullName: System.Deployment.Application.ApplicationDeployment.UpdatedVersion
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Obtém a versão da atualização que foi transferida recentemente."
  remarks: "UpdatedVersion difere <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A>se uma nova atualização tenha sido instalada, mas ainda não ter chamado <xref:System.Windows.Forms.Application.Restart%2A> <xref:System.Windows.Forms.Application>.</xref:System.Windows.Forms.Application> </xref:System.Windows.Forms.Application.Restart%2A> </xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A> Se o manifesto de implementação da aplicação está configurado para executar atualizações automáticas, pode comparar estes dois valores para determinar se deve reiniciar a aplicação.       Se não tiver sido atualizada a aplicação, UpdatedVersion devolve o mesmo valor que <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A>.</xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A>"
  example:
  - "The following code example defines a method that determines whether [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] has updated the application.  \n  \n [!code-cs[ClickOnceAPI#4](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#4)]\n [!code-cpp[ClickOnceAPI#4](~/add/codesnippet/cpp/p-system.deployment.appl_5_1.cpp)]\n [!code-vb[ClickOnceAPI#4](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#4)]"
  syntax:
    content: public Version UpdatedVersion { get; }
    return:
      type: System.Version
      description: "O <xref:System.Version>que descreve a versão da atualização.</xref:System.Version>"
  overload: System.Deployment.Application.ApplicationDeployment.UpdatedVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.UpdateLocation
  id: UpdateLocation
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: UpdateLocation
  nameWithType: ApplicationDeployment.UpdateLocation
  fullName: System.Deployment.Application.ApplicationDeployment.UpdateLocation
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Obtém o Web site ou uma partilha de ficheiros a partir do qual esta aplicação de atualizações de si próprio."
  remarks: "UpdateLocation pode ser diferente do Web site utilizado para transferir a aplicação inicialmente se a implementação da aplicação está configurada para utilizar o redirecionamento de atualização.       Este valor pode ser alterado apenas num manifesto de implementação da aplicação."
  syntax:
    content: public Uri UpdateLocation { get; }
    return:
      type: System.Uri
      description: "O caminho de atualização, expressado como um HTTP, HTTPS ou o URL de ficheiro; ou como um Windows de rede (UNC) do caminho do ficheiro."
  overload: System.Deployment.Application.ApplicationDeployment.UpdateLocation*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged
  id: UpdateProgressChanged
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: UpdateProgressChanged
  nameWithType: ApplicationDeployment.UpdateProgressChanged
  fullName: System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged
  type: Event
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Ocorre quando [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] tem novas informações de estado de uma operação de atualização iniciada ao chamar o <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync*>método.</xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync*>"
  remarks: "O evento UpdateProgressChanged denomina-se no thread principal da aplicação. Pode chamar controlos de Windows Forms da sua aplicação diretamente nesta chamada de retorno sem uma exceção a acionar."
  example:
  - "The following code example determines at application load time whether a new update is available; if a required update is available, it installs the update asynchronously.  \n  \n [!code-cs[ClickOnceAPI#1](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#1)]\n [!code-cpp[ClickOnceAPI#1](~/add/codesnippet/cpp/e-system.deployment.appl_1_1.cpp)]\n [!code-vb[ClickOnceAPI#1](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#1)]"
  syntax:
    content: public event System.Deployment.Application.DeploymentProgressChangedEventHandler UpdateProgressChanged;
    return:
      type: System.Deployment.Application.DeploymentProgressChangedEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Deployment.Application.DeploymentDownloadException
  parent: System.Deployment.Application
  isExternal: false
  name: DeploymentDownloadException
  nameWithType: DeploymentDownloadException
  fullName: System.Deployment.Application.DeploymentDownloadException
- uid: System.Deployment.Application.InvalidDeploymentException
  parent: System.Deployment.Application
  isExternal: false
  name: InvalidDeploymentException
  nameWithType: InvalidDeploymentException
  fullName: System.Deployment.Application.InvalidDeploymentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Deployment.Application.TrustNotGrantedException
  parent: System.Deployment.Application
  isExternal: false
  name: TrustNotGrantedException
  nameWithType: TrustNotGrantedException
  fullName: System.Deployment.Application.TrustNotGrantedException
- uid: System.Deployment.Application.ApplicationDeployment.ActivationUri
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: ActivationUri
  nameWithType: ApplicationDeployment.ActivationUri
  fullName: System.Deployment.Application.ApplicationDeployment.ActivationUri
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForDetailedUpdate()
  nameWithType: ApplicationDeployment.CheckForDetailedUpdate()
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate()
- uid: System.Deployment.Application.UpdateCheckInfo
  parent: System.Deployment.Application
  isExternal: false
  name: UpdateCheckInfo
  nameWithType: UpdateCheckInfo
  fullName: System.Deployment.Application.UpdateCheckInfo
- uid: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate(System.Boolean)
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForDetailedUpdate(Boolean)
  nameWithType: ApplicationDeployment.CheckForDetailedUpdate(Boolean)
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdate
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForUpdate()
  nameWithType: ApplicationDeployment.CheckForUpdate()
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdate()
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdate(System.Boolean)
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForUpdate(Boolean)
  nameWithType: ApplicationDeployment.CheckForUpdate(Boolean)
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdate(Boolean)
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForUpdateAsync()
  nameWithType: ApplicationDeployment.CheckForUpdateAsync()
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync()
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForUpdateAsyncCancel()
  nameWithType: ApplicationDeployment.CheckForUpdateAsyncCancel()
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel()
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForUpdateCompleted
  nameWithType: ApplicationDeployment.CheckForUpdateCompleted
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted
- uid: System.Deployment.Application.CheckForUpdateCompletedEventHandler
  parent: System.Deployment.Application
  isExternal: false
  name: CheckForUpdateCompletedEventHandler
  nameWithType: CheckForUpdateCompletedEventHandler
  fullName: System.Deployment.Application.CheckForUpdateCompletedEventHandler
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForUpdateProgressChanged
  nameWithType: ApplicationDeployment.CheckForUpdateProgressChanged
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged
- uid: System.Deployment.Application.DeploymentProgressChangedEventHandler
  parent: System.Deployment.Application
  isExternal: false
  name: DeploymentProgressChangedEventHandler
  nameWithType: DeploymentProgressChangedEventHandler
  fullName: System.Deployment.Application.DeploymentProgressChangedEventHandler
- uid: System.Deployment.Application.ApplicationDeployment.CurrentDeployment
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CurrentDeployment
  nameWithType: ApplicationDeployment.CurrentDeployment
  fullName: System.Deployment.Application.ApplicationDeployment.CurrentDeployment
- uid: System.Deployment.Application.ApplicationDeployment
  parent: System.Deployment.Application
  isExternal: false
  name: ApplicationDeployment
  nameWithType: ApplicationDeployment
  fullName: System.Deployment.Application.ApplicationDeployment
- uid: System.Deployment.Application.ApplicationDeployment.CurrentVersion
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CurrentVersion
  nameWithType: ApplicationDeployment.CurrentVersion
  fullName: System.Deployment.Application.ApplicationDeployment.CurrentVersion
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Deployment.Application.ApplicationDeployment.DataDirectory
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DataDirectory
  nameWithType: ApplicationDeployment.DataDirectory
  fullName: System.Deployment.Application.ApplicationDeployment.DataDirectory
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DownloadFileGroup(String)
  nameWithType: ApplicationDeployment.DownloadFileGroup(String)
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(String)
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String)
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DownloadFileGroupAsync(String)
  nameWithType: ApplicationDeployment.DownloadFileGroupAsync(String)
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(String)
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String,System.Object)
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DownloadFileGroupAsync(String,Object)
  nameWithType: ApplicationDeployment.DownloadFileGroupAsync(String,Object)
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(String,Object)
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel(System.String)
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DownloadFileGroupAsyncCancel(String)
  nameWithType: ApplicationDeployment.DownloadFileGroupAsyncCancel(String)
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel(String)
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupCompleted
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DownloadFileGroupCompleted
  nameWithType: ApplicationDeployment.DownloadFileGroupCompleted
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupCompleted
- uid: System.Deployment.Application.DownloadFileGroupCompletedEventHandler
  parent: System.Deployment.Application
  isExternal: false
  name: DownloadFileGroupCompletedEventHandler
  nameWithType: DownloadFileGroupCompletedEventHandler
  fullName: System.Deployment.Application.DownloadFileGroupCompletedEventHandler
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DownloadFileGroupProgressChanged
  nameWithType: ApplicationDeployment.DownloadFileGroupProgressChanged
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged
- uid: System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded(System.String)
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: IsFileGroupDownloaded(String)
  nameWithType: ApplicationDeployment.IsFileGroupDownloaded(String)
  fullName: System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded(String)
- uid: System.Deployment.Application.ApplicationDeployment.IsFirstRun
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: IsFirstRun
  nameWithType: ApplicationDeployment.IsFirstRun
  fullName: System.Deployment.Application.ApplicationDeployment.IsFirstRun
- uid: System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: IsNetworkDeployed
  nameWithType: ApplicationDeployment.IsNetworkDeployed
  fullName: System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed
- uid: System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: TimeOfLastUpdateCheck
  nameWithType: ApplicationDeployment.TimeOfLastUpdateCheck
  fullName: System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Deployment.Application.ApplicationDeployment.Update
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: Update()
  nameWithType: ApplicationDeployment.Update()
  fullName: System.Deployment.Application.ApplicationDeployment.Update()
- uid: System.Deployment.Application.ApplicationDeployment.UpdateAsync
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdateAsync()
  nameWithType: ApplicationDeployment.UpdateAsync()
  fullName: System.Deployment.Application.ApplicationDeployment.UpdateAsync()
- uid: System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdateAsyncCancel()
  nameWithType: ApplicationDeployment.UpdateAsyncCancel()
  fullName: System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel()
- uid: System.Deployment.Application.ApplicationDeployment.UpdateCompleted
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdateCompleted
  nameWithType: ApplicationDeployment.UpdateCompleted
  fullName: System.Deployment.Application.ApplicationDeployment.UpdateCompleted
- uid: System.ComponentModel.AsyncCompletedEventHandler
  parent: System.ComponentModel
  isExternal: true
  name: AsyncCompletedEventHandler
  nameWithType: AsyncCompletedEventHandler
  fullName: System.ComponentModel.AsyncCompletedEventHandler
- uid: System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdatedApplicationFullName
  nameWithType: ApplicationDeployment.UpdatedApplicationFullName
  fullName: System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName
- uid: System.Deployment.Application.ApplicationDeployment.UpdatedVersion
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdatedVersion
  nameWithType: ApplicationDeployment.UpdatedVersion
  fullName: System.Deployment.Application.ApplicationDeployment.UpdatedVersion
- uid: System.Deployment.Application.ApplicationDeployment.UpdateLocation
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdateLocation
  nameWithType: ApplicationDeployment.UpdateLocation
  fullName: System.Deployment.Application.ApplicationDeployment.UpdateLocation
- uid: System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdateProgressChanged
  nameWithType: ApplicationDeployment.UpdateProgressChanged
  fullName: System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged
- uid: System.Deployment.Application.ApplicationDeployment.ActivationUri*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: ActivationUri
  nameWithType: ApplicationDeployment.ActivationUri
- uid: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForDetailedUpdate
  nameWithType: ApplicationDeployment.CheckForDetailedUpdate
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdate*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForUpdate
  nameWithType: ApplicationDeployment.CheckForUpdate
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForUpdateAsync
  nameWithType: ApplicationDeployment.CheckForUpdateAsync
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForUpdateAsyncCancel
  nameWithType: ApplicationDeployment.CheckForUpdateAsyncCancel
- uid: System.Deployment.Application.ApplicationDeployment.CurrentDeployment*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CurrentDeployment
  nameWithType: ApplicationDeployment.CurrentDeployment
- uid: System.Deployment.Application.ApplicationDeployment.CurrentVersion*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CurrentVersion
  nameWithType: ApplicationDeployment.CurrentVersion
- uid: System.Deployment.Application.ApplicationDeployment.DataDirectory*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DataDirectory
  nameWithType: ApplicationDeployment.DataDirectory
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroup*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DownloadFileGroup
  nameWithType: ApplicationDeployment.DownloadFileGroup
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DownloadFileGroupAsync
  nameWithType: ApplicationDeployment.DownloadFileGroupAsync
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DownloadFileGroupAsyncCancel
  nameWithType: ApplicationDeployment.DownloadFileGroupAsyncCancel
- uid: System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: IsFileGroupDownloaded
  nameWithType: ApplicationDeployment.IsFileGroupDownloaded
- uid: System.Deployment.Application.ApplicationDeployment.IsFirstRun*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: IsFirstRun
  nameWithType: ApplicationDeployment.IsFirstRun
- uid: System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: IsNetworkDeployed
  nameWithType: ApplicationDeployment.IsNetworkDeployed
- uid: System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: TimeOfLastUpdateCheck
  nameWithType: ApplicationDeployment.TimeOfLastUpdateCheck
- uid: System.Deployment.Application.ApplicationDeployment.Update*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: Update
  nameWithType: ApplicationDeployment.Update
- uid: System.Deployment.Application.ApplicationDeployment.UpdateAsync*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdateAsync
  nameWithType: ApplicationDeployment.UpdateAsync
- uid: System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdateAsyncCancel
  nameWithType: ApplicationDeployment.UpdateAsyncCancel
- uid: System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdatedApplicationFullName
  nameWithType: ApplicationDeployment.UpdatedApplicationFullName
- uid: System.Deployment.Application.ApplicationDeployment.UpdatedVersion*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdatedVersion
  nameWithType: ApplicationDeployment.UpdatedVersion
- uid: System.Deployment.Application.ApplicationDeployment.UpdateLocation*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdateLocation
  nameWithType: ApplicationDeployment.UpdateLocation
