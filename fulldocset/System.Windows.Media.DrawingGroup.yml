### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.DrawingGroup
  id: DrawingGroup
  children:
  - System.Windows.Media.DrawingGroup.#ctor
  - System.Windows.Media.DrawingGroup.Append
  - System.Windows.Media.DrawingGroup.BitmapEffect
  - System.Windows.Media.DrawingGroup.BitmapEffectInput
  - System.Windows.Media.DrawingGroup.BitmapEffectInputProperty
  - System.Windows.Media.DrawingGroup.BitmapEffectProperty
  - System.Windows.Media.DrawingGroup.Children
  - System.Windows.Media.DrawingGroup.ChildrenProperty
  - System.Windows.Media.DrawingGroup.ClipGeometry
  - System.Windows.Media.DrawingGroup.ClipGeometryProperty
  - System.Windows.Media.DrawingGroup.Clone
  - System.Windows.Media.DrawingGroup.CloneCurrentValue
  - System.Windows.Media.DrawingGroup.CreateInstanceCore
  - System.Windows.Media.DrawingGroup.GuidelineSet
  - System.Windows.Media.DrawingGroup.GuidelineSetProperty
  - System.Windows.Media.DrawingGroup.Opacity
  - System.Windows.Media.DrawingGroup.OpacityMask
  - System.Windows.Media.DrawingGroup.OpacityMaskProperty
  - System.Windows.Media.DrawingGroup.OpacityProperty
  - System.Windows.Media.DrawingGroup.Open
  - System.Windows.Media.DrawingGroup.Transform
  - System.Windows.Media.DrawingGroup.TransformProperty
  langs:
  - csharp
  name: DrawingGroup
  nameWithType: DrawingGroup
  fullName: System.Windows.Media.DrawingGroup
  type: Class
  summary: "Represents a collection of drawings that can be operated upon as a single drawing."
  remarks: "Use a DrawingGroup to combine multiple drawings into a single, composite drawing. Unlike other <xref:System.Windows.Media.Drawing> objects, you can apply a <xref:System.Windows.Media.DrawingGroup.Transform%2A>, <xref:System.Windows.Media.DrawingGroup.BitmapEffect%2A>, <xref:System.Windows.Media.DrawingGroup.Opacity%2A> setting, <xref:System.Windows.Media.DrawingGroup.OpacityMask%2A>, <xref:System.Windows.Media.DrawingGroup.ClipGeometry%2A>, or a <xref:System.Windows.Media.DrawingGroup.GuidelineSet%2A> to a DrawingGroup. The flexibility of this class enables you to create complex scenes.       Because DrawingGroup is also a <xref:System.Windows.Media.Drawing>, it can contain other DrawingGroup objects.       For more information about <xref:System.Windows.Media.Drawing> objects, see [Drawing Objects Overview](~/add/includes/ajax-current-ext-md.md).       **Freezable Features:** Because it inherits from the <xref:System.Windows.Freezable> class, the DrawingGroup class provides several special features: DrawingGroup objects can be declared as , shared among multiple objects, made read-only to improve performance, cloned, and made thread-safe. For more information about the different features provided by <xref:System.Windows.Freezable> objects, see [Freezable Objects Overview](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("Children")]

      public sealed class DrawingGroup : System.Windows.Media.Drawing
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  - System.Windows.Media.Drawing
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Media.Drawing.Bounds
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.DrawingGroup.#ctor
  id: '#ctor'
  parent: System.Windows.Media.DrawingGroup
  langs:
  - csharp
  name: DrawingGroup()
  nameWithType: DrawingGroup.DrawingGroup()
  fullName: System.Windows.Media.DrawingGroup.DrawingGroup()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Media.DrawingGroup&quot;></xref> class."
  syntax:
    content: public DrawingGroup ();
    parameters: []
  overload: System.Windows.Media.DrawingGroup.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.DrawingGroup.Append
  id: Append
  parent: System.Windows.Media.DrawingGroup
  langs:
  - csharp
  name: Append()
  nameWithType: DrawingGroup.Append()
  fullName: System.Windows.Media.DrawingGroup.Append()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Opens the <xref href=&quot;System.Windows.Media.DrawingGroup&quot;></xref> in order to populate its <xref:System.Windows.Media.DrawingGroup.Children*>. This method enables you to append additional <xref:System.Windows.Media.DrawingGroup.Children*> to this <xref href=&quot;System.Windows.Media.DrawingGroup&quot;></xref>."
  remarks: "You must close the <xref:System.Windows.Media.DrawingContext> before you can render this <xref:System.Windows.Media.DrawingGroup>."
  syntax:
    content: public System.Windows.Media.DrawingContext Append ();
    parameters: []
    return:
      type: System.Windows.Media.DrawingContext
      description: "A <xref href=&quot;System.Windows.Media.DrawingContext&quot;></xref> that you can use to describe the contents of this <xref href=&quot;System.Windows.Media.DrawingGroup&quot;></xref> object."
  overload: System.Windows.Media.DrawingGroup.Append*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.DrawingGroup.BitmapEffect
  id: BitmapEffect
  parent: System.Windows.Media.DrawingGroup
  langs:
  - csharp
  name: BitmapEffect
  nameWithType: DrawingGroup.BitmapEffect
  fullName: System.Windows.Media.DrawingGroup.BitmapEffect
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Gets or sets the <xref href=&quot;System.Windows.Media.Effects.BitmapEffect&quot;></xref> to apply to this <xref href=&quot;System.Windows.Media.DrawingGroup&quot;></xref>."
  remarks: "For more information about bitmap effects and how they work, see [Bitmap Effects Overview](~/add/includes/ajax-current-ext-md.md).       <xref:System.Windows.Media.DrawingGroup> operations are applied in the following order:      -   <xref:System.Windows.Media.DrawingGroup.OpacityMask%2A>      -   <xref:System.Windows.Media.DrawingGroup.Opacity%2A>      -   BitmapEffect      -   <xref:System.Windows.Media.DrawingGroup.ClipGeometry%2A>      -   <xref:System.Windows.Media.DrawingGroup.Transform%2A>      <a name=&quot;dependencyPropertyInfo_BitmapEffect&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Media.DrawingGroup.BitmapEffectProperty>|   |Metadata properties set to `true`|None|"
  example:
  - "This example shows how to apply a <xref:System.Windows.Media.Effects.BitmapEffect> to a drawing. Use a <xref:System.Windows.Media.Effects.BitmapEffect> to blur or emboss, or to apply other visual effects to rendered content.  \n  \n Only <xref:System.Windows.Media.DrawingGroup> objects support bitmap effects. To apply a bitmap effect to another type of <xref:System.Windows.Media.Drawing> object, add it to a <xref:System.Windows.Media.DrawingGroup> and set the BitmapEffect property of the <xref:System.Windows.Media.DrawingGroup> object.  \n  \n> [!NOTE]\n>  [!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)] bitmap effects are software rendered. Any object that applies a <xref:System.Windows.Media.Effects.BitmapEffect> is also rendered in the software. Avoid using a <xref:System.Windows.Media.Effects.BitmapEffect> in large visuals or animations because this scenario can cause a decrease in system performance.  \n  \n The following example uses a <xref:System.Windows.Media.DrawingGroup> to apply a <xref:System.Windows.Media.Effects.BlurBitmapEffect> to several <xref:System.Windows.Media.GeometryDrawing> objects.  \n  \n The following illustration shows the output from this example.  \n  \n ![DrawingGroup with a BlurBitmapEffect](~/add/media/graphicsmm-bitmap.png \"DrawingGroup with a BlurBitmapEffect\")  \n  \n [!code-cs[DrawingMiscSnippets_snip#DrawingGroupBitmapEffectExampleWholePage](~/add/codesnippet/csharp/DrawingMiscSnippets_snip.misc_snippets/BitmapEffectExample.cs#drawinggroupbitmapeffectexamplewholepage)]\n [!code-xml[DrawingMiscSnippets_snip#DrawingGroupBitmapEffectExampleWholePage](~/add/codesnippet/xaml/DrawingMiscSnippets_snip.misc_snippets/BitmapEffectExample.xaml#drawinggroupbitmapeffectexamplewholepage)]"
  syntax:
    content: public System.Windows.Media.Effects.BitmapEffect BitmapEffect { get; set; }
    return:
      type: System.Windows.Media.Effects.BitmapEffect
      description: "The <xref href=&quot;System.Windows.Media.Effects.BitmapEffect&quot;></xref> to apply to this <xref href=&quot;System.Windows.Media.DrawingGroup&quot;></xref>. The default is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Media.DrawingGroup.BitmapEffect*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.DrawingGroup.BitmapEffectInput
  id: BitmapEffectInput
  parent: System.Windows.Media.DrawingGroup
  langs:
  - csharp
  name: BitmapEffectInput
  nameWithType: DrawingGroup.BitmapEffectInput
  fullName: System.Windows.Media.DrawingGroup.BitmapEffectInput
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Gets or sets the region where the <xref href=&quot;System.Windows.Media.DrawingGroup&quot;></xref> applies its <xref:System.Windows.Media.DrawingGroup.BitmapEffect*> and, optionally, a <xref href=&quot;System.Windows.Media.Imaging.BitmapSource&quot;></xref> to use as input for its <xref:System.Windows.Media.DrawingGroup.BitmapEffect*>."
  remarks: "<a name=&quot;dependencyPropertyInfo_BitmapEffectInput&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Media.DrawingGroup.BitmapEffectInputProperty>|   |Metadata properties set to `true`|None|"
  syntax:
    content: public System.Windows.Media.Effects.BitmapEffectInput BitmapEffectInput { get; set; }
    return:
      type: System.Windows.Media.Effects.BitmapEffectInput
      description: "The region where the <xref:System.Windows.Media.DrawingGroup.BitmapEffect*> of the <xref href=&quot;System.Windows.Media.DrawingGroup&quot;></xref> is applied and, optionally, the <xref href=&quot;System.Windows.Media.Imaging.BitmapSource&quot;></xref> to use as input; or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the <xref:System.Windows.Media.DrawingGroup.BitmapEffect*> applies to the whole <xref href=&quot;System.Windows.Media.DrawingGroup&quot;></xref> and uses the <xref href=&quot;System.Windows.Media.DrawingGroup&quot;></xref> as its input. The default is<xref uid=&quot;langword_csharp_ null&quot; name=&quot; null&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Media.DrawingGroup.BitmapEffectInput*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.DrawingGroup.BitmapEffectInputProperty
  id: BitmapEffectInputProperty
  parent: System.Windows.Media.DrawingGroup
  langs:
  - csharp
  name: BitmapEffectInputProperty
  nameWithType: DrawingGroup.BitmapEffectInputProperty
  fullName: System.Windows.Media.DrawingGroup.BitmapEffectInputProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Identifies the <xref:System.Windows.Media.DrawingGroup.BitmapEffectInput*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty BitmapEffectInputProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.DrawingGroup.BitmapEffectProperty
  id: BitmapEffectProperty
  parent: System.Windows.Media.DrawingGroup
  langs:
  - csharp
  name: BitmapEffectProperty
  nameWithType: DrawingGroup.BitmapEffectProperty
  fullName: System.Windows.Media.DrawingGroup.BitmapEffectProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Identifies the <xref:System.Windows.Media.DrawingGroup.BitmapEffect*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty BitmapEffectProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.DrawingGroup.Children
  id: Children
  parent: System.Windows.Media.DrawingGroup
  langs:
  - csharp
  name: Children
  nameWithType: DrawingGroup.Children
  fullName: System.Windows.Media.DrawingGroup.Children
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Gets or sets the <xref href=&quot;System.Windows.Media.Drawing&quot;></xref> objects that are contained in this <xref href=&quot;System.Windows.Media.DrawingGroup&quot;></xref>."
  remarks: "The z-order of the child items in a <xref:System.Windows.Media.DrawingGroup> is determined by the order of the child items in the <xref:System.Windows.Media.DrawingCollection> of the <xref:System.Windows.Media.DrawingGroup>. Each child drawing is under the next child in the collection.      <a name=&quot;dependencyPropertyInfo_Children&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Media.DrawingGroup.ChildrenProperty>|   |Metadata properties set to `true`|None|"
  syntax:
    content: public System.Windows.Media.DrawingCollection Children { get; set; }
    return:
      type: System.Windows.Media.DrawingCollection
      description: "A collection of the <xref href=&quot;System.Windows.Media.Drawing&quot;></xref> objects in this <xref href=&quot;System.Windows.Media.DrawingGroup&quot;></xref>. The default is an empty <xref href=&quot;System.Windows.Media.DrawingCollection&quot;></xref>."
  overload: System.Windows.Media.DrawingGroup.Children*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.DrawingGroup.ChildrenProperty
  id: ChildrenProperty
  parent: System.Windows.Media.DrawingGroup
  langs:
  - csharp
  name: ChildrenProperty
  nameWithType: DrawingGroup.ChildrenProperty
  fullName: System.Windows.Media.DrawingGroup.ChildrenProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Identifies the <xref:System.Windows.Media.DrawingGroup.Children*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty ChildrenProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.DrawingGroup.ClipGeometry
  id: ClipGeometry
  parent: System.Windows.Media.DrawingGroup
  langs:
  - csharp
  name: ClipGeometry
  nameWithType: DrawingGroup.ClipGeometry
  fullName: System.Windows.Media.DrawingGroup.ClipGeometry
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Gets or sets the clip region of this <xref href=&quot;System.Windows.Media.DrawingGroup&quot;></xref>."
  remarks: "Drawings outside the geometry are clipped from the <xref:System.Windows.Media.DrawingGroup> when it is rendered. The geometry does not have to be rectangular; for example, you can use an <xref:System.Windows.Media.EllipseGeometry> to clip to an elliptical shape.       <xref:System.Windows.Media.DrawingGroup> operations are applied in the following order:      1.  <xref:System.Windows.Media.DrawingGroup.OpacityMask%2A>      2.  <xref:System.Windows.Media.DrawingGroup.Opacity%2A>      3.  <xref:System.Windows.Media.DrawingGroup.BitmapEffect%2A>      4.  ClipGeometry      5.  <xref:System.Windows.Media.DrawingGroup.GuidelineSet%2A>      6.  <xref:System.Windows.Media.DrawingGroup.Transform%2A>      <a name=&quot;dependencyPropertyInfo_ClipGeometry&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Media.DrawingGroup.ClipGeometryProperty>|   |Metadata properties set to `true`|None|"
  example:
  - "This example shows how to define a clip region for a <xref:System.Windows.Media.Drawing>.  \n  \n Use a <xref:System.Windows.Media.DrawingGroup> to define a clip for a <xref:System.Windows.Media.Drawing>. The <xref:System.Windows.Media.DrawingGroup> class is the only type of <xref:System.Windows.Media.Drawing> object that enables you to define your own clip region.  \n  \n Use a <xref:System.Windows.Media.Geometry> to describe the clip and apply it to the ClipGeometry property of the <xref:System.Windows.Media.DrawingGroup> object.  \n  \n The illustration shows the <xref:System.Windows.Media.DrawingGroup> before and after the elliptical clip is applied.  \n  \n ![DrawingGroup with a defined clip region](~/add/media/graphicsmm-clipgeom.png \"DrawingGroup with a defined clip region\")  \n  \n The following example uses a <xref:System.Windows.Media.DrawingGroup> to apply a ClipGeometry to several <xref:System.Windows.Media.GeometryDrawing> objects.  \n  \n [!code-cs[DrawingMiscSnippets_snip#DrawingGroupClipGeometryExampleWholePage](~/add/codesnippet/csharp/DrawingMiscSnippets_snip.misc_snippets/ClipExample.cs#drawinggroupclipgeometryexamplewholepage)]\n [!code-xml[DrawingMiscSnippets_snip#DrawingGroupClipGeometryExampleWholePage](~/add/codesnippet/xaml/DrawingMiscSnippets_snip.misc_snippets/ClipExample.xaml#drawinggroupclipgeometryexamplewholepage)]"
  syntax:
    content: public System.Windows.Media.Geometry ClipGeometry { get; set; }
    return:
      type: System.Windows.Media.Geometry
      description: "The <xref href=&quot;System.Windows.Media.Geometry&quot;></xref> that is used to clip this <xref href=&quot;System.Windows.Media.DrawingGroup&quot;></xref>. The default is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Media.DrawingGroup.ClipGeometry*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.DrawingGroup.ClipGeometryProperty
  id: ClipGeometryProperty
  parent: System.Windows.Media.DrawingGroup
  langs:
  - csharp
  name: ClipGeometryProperty
  nameWithType: DrawingGroup.ClipGeometryProperty
  fullName: System.Windows.Media.DrawingGroup.ClipGeometryProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Identifies the <xref:System.Windows.Media.DrawingGroup.ClipGeometry*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty ClipGeometryProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.DrawingGroup.Clone
  id: Clone
  parent: System.Windows.Media.DrawingGroup
  langs:
  - csharp
  name: Clone()
  nameWithType: DrawingGroup.Clone()
  fullName: System.Windows.Media.DrawingGroup.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Creates a modifiable deep copy of this <xref href=&quot;System.Windows.Media.DrawingGroup&quot;></xref> and makes deep copies of its values."
  remarks: "Use this method to produce modifiable copies of read-only <xref:System.Windows.Freezable> objects. For convenience, this method shadows the inherited version with a strongly typed implementation.       When this method copies dependency properties, it copies resource references and data bindings even though they might no longer resolve. It does not copy animations or their current values.       For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>."
  syntax:
    content: public System.Windows.Media.DrawingGroup Clone ();
    parameters: []
    return:
      type: System.Windows.Media.DrawingGroup
      description: "A modifiable clone of the current object. The <xref:System.Windows.Freezable.IsFrozen*> property of the cloned object returns <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> even if the <xref:System.Windows.Freezable.IsFrozen*> property of the source is <xref uid=&quot;langword_csharp_true.&quot; name=&quot;true.&quot; href=&quot;&quot;></xref>"
  overload: System.Windows.Media.DrawingGroup.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.DrawingGroup.CloneCurrentValue
  id: CloneCurrentValue
  parent: System.Windows.Media.DrawingGroup
  langs:
  - csharp
  name: CloneCurrentValue()
  nameWithType: DrawingGroup.CloneCurrentValue()
  fullName: System.Windows.Media.DrawingGroup.CloneCurrentValue()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Creates a modifiable deep copy of this <xref href=&quot;System.Windows.Media.DrawingGroup&quot;></xref> object and makes deep copies of its current values."
  remarks: "Use this method to produce modifiable copies of read-only <xref:System.Windows.Freezable> objects. For convenience, this method shadows the inherited version with a strongly typed implementation.       This method does not copy resource references, data bindings, and animations, although it does copy their current values.       For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>."
  syntax:
    content: public System.Windows.Media.DrawingGroup CloneCurrentValue ();
    parameters: []
    return:
      type: System.Windows.Media.DrawingGroup
      description: "A modifiable clone of the current object. The <xref:System.Windows.Freezable.IsFrozen*> property of the cloned object is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> even if the <xref:System.Windows.Freezable.IsFrozen*> property of the source is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Media.DrawingGroup.CloneCurrentValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.DrawingGroup.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Media.DrawingGroup
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: DrawingGroup.CreateInstanceCore()
  fullName: System.Windows.Media.DrawingGroup.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "To be added."
  overload: System.Windows.Media.DrawingGroup.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.DrawingGroup.GuidelineSet
  id: GuidelineSet
  parent: System.Windows.Media.DrawingGroup
  langs:
  - csharp
  name: GuidelineSet
  nameWithType: DrawingGroup.GuidelineSet
  fullName: System.Windows.Media.DrawingGroup.GuidelineSet
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Gets or sets the <xref href=&quot;System.Windows.Media.GuidelineSet&quot;></xref> to apply to this <xref href=&quot;System.Windows.Media.DrawingGroup&quot;></xref>."
  remarks: "The <xref:System.Windows.Media.DrawingGroup.Transform%2A> of this <xref:System.Windows.Media.DrawingGroup> is applied after the GuidelineSet. As a result, the GuidelineSet is transformed along with the contents of the <xref:System.Windows.Media.DrawingGroup>.      <a name=&quot;dependencyPropertyInfo_GuidelineSet&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Media.DrawingGroup.GuidelineSetProperty>|   |Metadata properties set to `true`|None|"
  syntax:
    content: public System.Windows.Media.GuidelineSet GuidelineSet { get; set; }
    return:
      type: System.Windows.Media.GuidelineSet
      description: "The <xref href=&quot;System.Windows.Media.GuidelineSet&quot;></xref> to apply to this <xref href=&quot;System.Windows.Media.DrawingGroup&quot;></xref>. The default is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Media.DrawingGroup.GuidelineSet*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.DrawingGroup.GuidelineSetProperty
  id: GuidelineSetProperty
  parent: System.Windows.Media.DrawingGroup
  langs:
  - csharp
  name: GuidelineSetProperty
  nameWithType: DrawingGroup.GuidelineSetProperty
  fullName: System.Windows.Media.DrawingGroup.GuidelineSetProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Identifies the <xref:System.Windows.Media.DrawingGroup.GuidelineSet*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty GuidelineSetProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.DrawingGroup.Opacity
  id: Opacity
  parent: System.Windows.Media.DrawingGroup
  langs:
  - csharp
  name: Opacity
  nameWithType: DrawingGroup.Opacity
  fullName: System.Windows.Media.DrawingGroup.Opacity
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Gets or sets the opacity of this <xref href=&quot;System.Windows.Media.DrawingGroup&quot;></xref>."
  remarks: "A value of `1` specifies that the <xref:System.Windows.Media.DrawingGroup> is completely opaque; a value of `0` specifies that it is completely transparent. A value that is less than 0 is treated as 0, and a value that is larger than 1 is treated as 1.       Another way to control the opacity of a <xref:System.Windows.Media.GeometryDrawing> is to specify the <xref:System.Windows.Media.Brush.Opacity%2A> of its <xref:System.Windows.Media.Brush>.       <xref:System.Windows.Media.DrawingGroup> operations are applied in the following order:      1.  <xref:System.Windows.Media.DrawingGroup.OpacityMask%2A>      2.  Opacity      3.  <xref:System.Windows.Media.DrawingGroup.BitmapEffect%2A>      4.  <xref:System.Windows.Media.DrawingGroup.ClipGeometry%2A>      5.  <xref:System.Windows.Media.DrawingGroup.GuidelineSet%2A>      6.  <xref:System.Windows.Media.DrawingGroup.Transform%2A>      <a name=&quot;dependencyPropertyInfo_Opacity&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Media.DrawingGroup.OpacityProperty>|   |Metadata properties set to `true`|None|"
  example:
  - "This example shows how to modify the opacity of a <xref:System.Windows.Media.Drawing>. The <xref:System.Windows.Media.DrawingGroup> class is the only type of <xref:System.Windows.Media.Drawing> object that has an Opacity property.  \n  \n To change the opacity of a <xref:System.Windows.Media.Drawing> object, add it to a <xref:System.Windows.Media.DrawingGroup> and set the Opacity property of the <xref:System.Windows.Media.DrawingGroup> object.  \n  \n The Opacity setting of the <xref:System.Windows.Media.DrawingGroup> object is multiplied by the opacity of its child drawings; for example, if a <xref:System.Windows.Media.DrawingGroup> has an Opacity of 0.5 and it contains a <xref:System.Windows.Media.GeometryDrawing> that has a 50 percent opaque <xref:System.Windows.Media.GeometryDrawing.Brush%2A>, the brush is 25 percent opaque (0.5 * 0.5).  \n  \n To alter the opacity of select portions of a drawing, use an <xref:System.Windows.Media.DrawingGroup.OpacityMask%2A>.  \n  \n The following example uses a <xref:System.Windows.Media.DrawingGroup> to combine several <xref:System.Windows.Media.GeometryDrawing> objects. The example also sets the opacity of the <xref:System.Windows.Media.DrawingGroup> object to 0.25 so that the drawings are 25 percent opaque.  \n  \n This illustration shows the <xref:System.Windows.Media.DrawingGroup> before and after its Opacity is set to 0.25.  \n  \n ![DrawingGroups with different opacity settings](~/add/media/graphicsmm-opacity.png \"DrawingGroups with different opacity settings\")  \n  \n [!code-cs[DrawingMiscSnippets_snip#DrawingGroupOpacityExampleWholePage](~/add/codesnippet/csharp/DrawingMiscSnippets_snip.misc_snippets/OpacityExample.cs#drawinggroupopacityexamplewholepage)]\n [!code-xml[DrawingMiscSnippets_snip#DrawingGroupOpacityExampleWholePage](~/add/codesnippet/xaml/DrawingMiscSnippets_snip.misc_snippets/OpacityExample.xaml#drawinggroupopacityexamplewholepage)]"
  syntax:
    content: public double Opacity { get; set; }
    return:
      type: System.Double
      description: "A value between 0 and 1, inclusive, that describes the opacity of this <xref href=&quot;System.Windows.Media.DrawingGroup&quot;></xref>. The default is `1`."
  overload: System.Windows.Media.DrawingGroup.Opacity*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.DrawingGroup.OpacityMask
  id: OpacityMask
  parent: System.Windows.Media.DrawingGroup
  langs:
  - csharp
  name: OpacityMask
  nameWithType: DrawingGroup.OpacityMask
  fullName: System.Windows.Media.DrawingGroup.OpacityMask
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Gets or sets the brush used to alter the opacity of select regions of this <xref href=&quot;System.Windows.Media.DrawingGroup&quot;></xref>."
  remarks: "The <xref:System.Windows.Media.Brush> is mapped to the <xref:System.Windows.Media.DrawingGroup>. The opacity value of each pixel of the mapped <xref:System.Windows.Media.Brush> is used to determine the resulting opacity of each corresponding pixel of the <xref:System.Windows.Media.DrawingGroup>. Only the opacity value of each color in the brush is used for this processing; all other color information is ignored.       The opacity that this property specifies is multiplied with the <xref:System.Windows.Media.DrawingGroup.Opacity%2A> value of the <xref:System.Windows.Media.DrawingGroup> object. For more information about opacity masks and how they work, see [Opacity Masks Overview](~/add/includes/ajax-current-ext-md.md).       <xref:System.Windows.Media.DrawingGroup> operations are applied in the following order:      1.  OpacityMask      2.  <xref:System.Windows.Media.DrawingGroup.Opacity%2A>      3.  <xref:System.Windows.Media.DrawingGroup.BitmapEffect%2A>      4.  <xref:System.Windows.Media.DrawingGroup.ClipGeometry%2A>      5.  <xref:System.Windows.Media.DrawingGroup.GuidelineSet%2A>      6.  <xref:System.Windows.Media.DrawingGroup.Transform%2A>      <a name=&quot;dependencyPropertyInfo_OpacityMask&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Media.DrawingGroup.OpacityMaskProperty>|   |Metadata properties set to `true`|None|"
  example:
  - "This example shows how to apply an opacity mask to a <xref:System.Windows.Media.Drawing>. The <xref:System.Windows.Media.DrawingGroup> class is the only type of <xref:System.Windows.Media.Drawing> object that supports opacity masks.  \n  \n To apply an opacity mask to a <xref:System.Windows.Media.Drawing> object, add it to a <xref:System.Windows.Media.DrawingGroup> and set the OpacityMask property of the <xref:System.Windows.Media.DrawingGroup> object.  \n  \n The following illustration shows three views of the <xref:System.Windows.Media.DrawingGroup>: the drawing without an opacity mask, the opacity mask alone, and the <xref:System.Windows.Media.DrawingGroup> after the opacity mask is applied.  \n  \n ![A DrawingGroup with an opacity mask](~/add/media/graphicsmm-opmask.png \"A DrawingGroup with an opacity mask\")  \n  \n The following example uses a <xref:System.Windows.Media.RadialGradientBrush> as an opacity mask for a <xref:System.Windows.Media.DrawingGroup>.  \n  \n> [!NOTE]\n>  Although this example uses a <xref:System.Windows.Media.RadialGradientBrush> as an opacity mask, <xref:System.Windows.Media.LinearGradientBrush>, <xref:System.Windows.Media.DrawingBrush>, <xref:System.Windows.Media.ImageBrush>, and <xref:System.Windows.Media.VisualBrush> objects can also make good opacity masks. For more information about opacity masks and how they work, see the [Opacity Masks Overview](../Topic/Opacity%20Masks%20Overview.md).  \n  \n [!code-cs[DrawingMiscSnippets_snip#DrawingGroupOpacityMaskExampleWholePage](~/add/codesnippet/csharp/DrawingMiscSnippets_snip.misc_snippets/OpacityMaskExample.cs#drawinggroupopacitymaskexamplewholepage)]\n [!code-xml[DrawingMiscSnippets_snip#DrawingGroupOpacityMaskExampleWholePage](~/add/codesnippet/xaml/DrawingMiscSnippets_snip.misc_snippets/OpacityMaskExample.xaml#drawinggroupopacitymaskexamplewholepage)]"
  syntax:
    content: public System.Windows.Media.Brush OpacityMask { get; set; }
    return:
      type: System.Windows.Media.Brush
      description: "A <xref href=&quot;System.Windows.Media.Brush&quot;></xref> that describes the opacity of this <xref href=&quot;System.Windows.Media.DrawingGroup&quot;></xref>; <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> indicates that no opacity mask exists and the opacity is uniform. The default is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Media.DrawingGroup.OpacityMask*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.DrawingGroup.OpacityMaskProperty
  id: OpacityMaskProperty
  parent: System.Windows.Media.DrawingGroup
  langs:
  - csharp
  name: OpacityMaskProperty
  nameWithType: DrawingGroup.OpacityMaskProperty
  fullName: System.Windows.Media.DrawingGroup.OpacityMaskProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Identifies the <xref:System.Windows.Media.DrawingGroup.OpacityMask*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty OpacityMaskProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.DrawingGroup.OpacityProperty
  id: OpacityProperty
  parent: System.Windows.Media.DrawingGroup
  langs:
  - csharp
  name: OpacityProperty
  nameWithType: DrawingGroup.OpacityProperty
  fullName: System.Windows.Media.DrawingGroup.OpacityProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Identifies the <xref:System.Windows.Media.DrawingGroup.Opacity*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty OpacityProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.DrawingGroup.Open
  id: Open
  parent: System.Windows.Media.DrawingGroup
  langs:
  - csharp
  name: Open()
  nameWithType: DrawingGroup.Open()
  fullName: System.Windows.Media.DrawingGroup.Open()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Opens the <xref href=&quot;System.Windows.Media.DrawingGroup&quot;></xref> in order to populate its <xref:System.Windows.Media.DrawingGroup.Children*> and clears any existing <xref:System.Windows.Media.DrawingGroup.Children*>."
  remarks: "You must close the <xref:System.Windows.Media.DrawingContext> before you can render this <xref:System.Windows.Media.DrawingGroup> object."
  syntax:
    content: public System.Windows.Media.DrawingContext Open ();
    parameters: []
    return:
      type: System.Windows.Media.DrawingContext
      description: "A <xref href=&quot;System.Windows.Media.DrawingContext&quot;></xref> that can be used to describe the contents of this <xref href=&quot;System.Windows.Media.DrawingGroup&quot;></xref> object."
  overload: System.Windows.Media.DrawingGroup.Open*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.DrawingGroup.Transform
  id: Transform
  parent: System.Windows.Media.DrawingGroup
  langs:
  - csharp
  name: Transform
  nameWithType: DrawingGroup.Transform
  fullName: System.Windows.Media.DrawingGroup.Transform
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Gets or sets the <xref href=&quot;System.Windows.Media.Transform&quot;></xref> that is applied to this <xref href=&quot;System.Windows.Media.DrawingGroup&quot;></xref>."
  remarks: "To apply multiple transforms to a single <xref:System.Windows.Media.DrawingGroup>, use a <xref:System.Windows.Media.TransformGroup>.       <xref:System.Windows.Media.DrawingGroup> operations are applied in the following order:      1.  <xref:System.Windows.Media.DrawingGroup.OpacityMask%2A>      2.  <xref:System.Windows.Media.DrawingGroup.Opacity%2A>      3.  <xref:System.Windows.Media.DrawingGroup.BitmapEffect%2A>      4.  <xref:System.Windows.Media.DrawingGroup.ClipGeometry%2A>      5.  <xref:System.Windows.Media.DrawingGroup.GuidelineSet%2A>      6.  Transform      <a name=&quot;dependencyPropertyInfo_Transform&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Media.DrawingGroup.TransformProperty>|   |Metadata properties set to `true`|None|"
  example:
  - "This example shows how to apply a Transform to a <xref:System.Windows.Media.Drawing>. To transform a <xref:System.Windows.Media.Drawing> object, you add it to a <xref:System.Windows.Media.DrawingGroup> and set the Transform property of the <xref:System.Windows.Media.DrawingGroup> object.  \n  \n The <xref:System.Windows.Media.DrawingGroup> class is the only type of <xref:System.Windows.Media.Drawing> object that supports transforms. To apply multiple transforms to a single <xref:System.Windows.Media.DrawingGroup>, use a <xref:System.Windows.Media.TransformGroup>.  \n  \n The following example uses a <xref:System.Windows.Media.DrawingGroup> to combine several <xref:System.Windows.Media.GeometryDrawing> objects and then transforms them by using a <xref:System.Windows.Media.RotateTransform>.  \n  \n The illustration shows the <xref:System.Windows.Media.DrawingGroup> before and after the <xref:System.Windows.Media.RotateTransform> is applied.  \n  \n ![A rotated DrawingGroup](~/add/media/graphicsmm-rotate.png \"A rotated DrawingGroup\")  \n  \n [!code-cs[DrawingMiscSnippets_snip#DrawingGroupTransformExampleWholePage](~/add/codesnippet/csharp/DrawingMiscSnippets_snip.misc_snippets/TransformExample.cs#drawinggrouptransformexamplewholepage)]\n [!code-xml[DrawingMiscSnippets_snip#DrawingGroupTransformExampleWholePage](~/add/codesnippet/xaml/DrawingMiscSnippets_snip.misc_snippets/TransformExample.xaml#drawinggrouptransformexamplewholepage)]"
  syntax:
    content: public System.Windows.Media.Transform Transform { get; set; }
    return:
      type: System.Windows.Media.Transform
      description: "The transformation to apply to this <xref href=&quot;System.Windows.Media.DrawingGroup&quot;></xref>. The default is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Media.DrawingGroup.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.DrawingGroup.TransformProperty
  id: TransformProperty
  parent: System.Windows.Media.DrawingGroup
  langs:
  - csharp
  name: TransformProperty
  nameWithType: DrawingGroup.TransformProperty
  fullName: System.Windows.Media.DrawingGroup.TransformProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Identifies the <xref:System.Windows.Media.DrawingGroup.Transform*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty TransformProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Drawing
  isExternal: false
  name: System.Windows.Media.Drawing
- uid: System.Windows.Media.DrawingGroup.#ctor
  parent: System.Windows.Media.DrawingGroup
  isExternal: false
  name: DrawingGroup()
  nameWithType: DrawingGroup.DrawingGroup()
  fullName: System.Windows.Media.DrawingGroup.DrawingGroup()
- uid: System.Windows.Media.DrawingGroup.Append
  parent: System.Windows.Media.DrawingGroup
  isExternal: false
  name: Append()
  nameWithType: DrawingGroup.Append()
  fullName: System.Windows.Media.DrawingGroup.Append()
- uid: System.Windows.Media.DrawingContext
  parent: System.Windows.Media
  isExternal: false
  name: DrawingContext
  nameWithType: DrawingContext
  fullName: System.Windows.Media.DrawingContext
- uid: System.Windows.Media.DrawingGroup.BitmapEffect
  parent: System.Windows.Media.DrawingGroup
  isExternal: false
  name: BitmapEffect
  nameWithType: DrawingGroup.BitmapEffect
  fullName: System.Windows.Media.DrawingGroup.BitmapEffect
- uid: System.Windows.Media.Effects.BitmapEffect
  parent: System.Windows.Media.Effects
  isExternal: false
  name: BitmapEffect
  nameWithType: BitmapEffect
  fullName: System.Windows.Media.Effects.BitmapEffect
- uid: System.Windows.Media.DrawingGroup.BitmapEffectInput
  parent: System.Windows.Media.DrawingGroup
  isExternal: false
  name: BitmapEffectInput
  nameWithType: DrawingGroup.BitmapEffectInput
  fullName: System.Windows.Media.DrawingGroup.BitmapEffectInput
- uid: System.Windows.Media.Effects.BitmapEffectInput
  parent: System.Windows.Media.Effects
  isExternal: false
  name: BitmapEffectInput
  nameWithType: BitmapEffectInput
  fullName: System.Windows.Media.Effects.BitmapEffectInput
- uid: System.Windows.Media.DrawingGroup.BitmapEffectInputProperty
  parent: System.Windows.Media.DrawingGroup
  isExternal: false
  name: BitmapEffectInputProperty
  nameWithType: DrawingGroup.BitmapEffectInputProperty
  fullName: System.Windows.Media.DrawingGroup.BitmapEffectInputProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Media.DrawingGroup.BitmapEffectProperty
  parent: System.Windows.Media.DrawingGroup
  isExternal: false
  name: BitmapEffectProperty
  nameWithType: DrawingGroup.BitmapEffectProperty
  fullName: System.Windows.Media.DrawingGroup.BitmapEffectProperty
- uid: System.Windows.Media.DrawingGroup.Children
  parent: System.Windows.Media.DrawingGroup
  isExternal: false
  name: Children
  nameWithType: DrawingGroup.Children
  fullName: System.Windows.Media.DrawingGroup.Children
- uid: System.Windows.Media.DrawingCollection
  parent: System.Windows.Media
  isExternal: false
  name: DrawingCollection
  nameWithType: DrawingCollection
  fullName: System.Windows.Media.DrawingCollection
- uid: System.Windows.Media.DrawingGroup.ChildrenProperty
  parent: System.Windows.Media.DrawingGroup
  isExternal: false
  name: ChildrenProperty
  nameWithType: DrawingGroup.ChildrenProperty
  fullName: System.Windows.Media.DrawingGroup.ChildrenProperty
- uid: System.Windows.Media.DrawingGroup.ClipGeometry
  parent: System.Windows.Media.DrawingGroup
  isExternal: false
  name: ClipGeometry
  nameWithType: DrawingGroup.ClipGeometry
  fullName: System.Windows.Media.DrawingGroup.ClipGeometry
- uid: System.Windows.Media.Geometry
  parent: System.Windows.Media
  isExternal: false
  name: Geometry
  nameWithType: Geometry
  fullName: System.Windows.Media.Geometry
- uid: System.Windows.Media.DrawingGroup.ClipGeometryProperty
  parent: System.Windows.Media.DrawingGroup
  isExternal: false
  name: ClipGeometryProperty
  nameWithType: DrawingGroup.ClipGeometryProperty
  fullName: System.Windows.Media.DrawingGroup.ClipGeometryProperty
- uid: System.Windows.Media.DrawingGroup.Clone
  parent: System.Windows.Media.DrawingGroup
  isExternal: false
  name: Clone()
  nameWithType: DrawingGroup.Clone()
  fullName: System.Windows.Media.DrawingGroup.Clone()
- uid: System.Windows.Media.DrawingGroup
  parent: System.Windows.Media
  isExternal: false
  name: DrawingGroup
  nameWithType: DrawingGroup
  fullName: System.Windows.Media.DrawingGroup
- uid: System.Windows.Media.DrawingGroup.CloneCurrentValue
  parent: System.Windows.Media.DrawingGroup
  isExternal: false
  name: CloneCurrentValue()
  nameWithType: DrawingGroup.CloneCurrentValue()
  fullName: System.Windows.Media.DrawingGroup.CloneCurrentValue()
- uid: System.Windows.Media.DrawingGroup.CreateInstanceCore
  parent: System.Windows.Media.DrawingGroup
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: DrawingGroup.CreateInstanceCore()
  fullName: System.Windows.Media.DrawingGroup.CreateInstanceCore()
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.DrawingGroup.GuidelineSet
  parent: System.Windows.Media.DrawingGroup
  isExternal: false
  name: GuidelineSet
  nameWithType: DrawingGroup.GuidelineSet
  fullName: System.Windows.Media.DrawingGroup.GuidelineSet
- uid: System.Windows.Media.GuidelineSet
  parent: System.Windows.Media
  isExternal: false
  name: GuidelineSet
  nameWithType: GuidelineSet
  fullName: System.Windows.Media.GuidelineSet
- uid: System.Windows.Media.DrawingGroup.GuidelineSetProperty
  parent: System.Windows.Media.DrawingGroup
  isExternal: false
  name: GuidelineSetProperty
  nameWithType: DrawingGroup.GuidelineSetProperty
  fullName: System.Windows.Media.DrawingGroup.GuidelineSetProperty
- uid: System.Windows.Media.DrawingGroup.Opacity
  parent: System.Windows.Media.DrawingGroup
  isExternal: false
  name: Opacity
  nameWithType: DrawingGroup.Opacity
  fullName: System.Windows.Media.DrawingGroup.Opacity
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Media.DrawingGroup.OpacityMask
  parent: System.Windows.Media.DrawingGroup
  isExternal: false
  name: OpacityMask
  nameWithType: DrawingGroup.OpacityMask
  fullName: System.Windows.Media.DrawingGroup.OpacityMask
- uid: System.Windows.Media.Brush
  parent: System.Windows.Media
  isExternal: false
  name: Brush
  nameWithType: Brush
  fullName: System.Windows.Media.Brush
- uid: System.Windows.Media.DrawingGroup.OpacityMaskProperty
  parent: System.Windows.Media.DrawingGroup
  isExternal: false
  name: OpacityMaskProperty
  nameWithType: DrawingGroup.OpacityMaskProperty
  fullName: System.Windows.Media.DrawingGroup.OpacityMaskProperty
- uid: System.Windows.Media.DrawingGroup.OpacityProperty
  parent: System.Windows.Media.DrawingGroup
  isExternal: false
  name: OpacityProperty
  nameWithType: DrawingGroup.OpacityProperty
  fullName: System.Windows.Media.DrawingGroup.OpacityProperty
- uid: System.Windows.Media.DrawingGroup.Open
  parent: System.Windows.Media.DrawingGroup
  isExternal: false
  name: Open()
  nameWithType: DrawingGroup.Open()
  fullName: System.Windows.Media.DrawingGroup.Open()
- uid: System.Windows.Media.DrawingGroup.Transform
  parent: System.Windows.Media.DrawingGroup
  isExternal: false
  name: Transform
  nameWithType: DrawingGroup.Transform
  fullName: System.Windows.Media.DrawingGroup.Transform
- uid: System.Windows.Media.Transform
  parent: System.Windows.Media
  isExternal: false
  name: Transform
  nameWithType: Transform
  fullName: System.Windows.Media.Transform
- uid: System.Windows.Media.DrawingGroup.TransformProperty
  parent: System.Windows.Media.DrawingGroup
  isExternal: false
  name: TransformProperty
  nameWithType: DrawingGroup.TransformProperty
  fullName: System.Windows.Media.DrawingGroup.TransformProperty
- uid: System.Windows.Media.DrawingGroup.#ctor*
  parent: System.Windows.Media.DrawingGroup
  isExternal: false
  name: DrawingGroup
  nameWithType: DrawingGroup.DrawingGroup
- uid: System.Windows.Media.DrawingGroup.Append*
  parent: System.Windows.Media.DrawingGroup
  isExternal: false
  name: Append
  nameWithType: DrawingGroup.Append
- uid: System.Windows.Media.DrawingGroup.BitmapEffect*
  parent: System.Windows.Media.DrawingGroup
  isExternal: false
  name: BitmapEffect
  nameWithType: DrawingGroup.BitmapEffect
- uid: System.Windows.Media.DrawingGroup.BitmapEffectInput*
  parent: System.Windows.Media.DrawingGroup
  isExternal: false
  name: BitmapEffectInput
  nameWithType: DrawingGroup.BitmapEffectInput
- uid: System.Windows.Media.DrawingGroup.Children*
  parent: System.Windows.Media.DrawingGroup
  isExternal: false
  name: Children
  nameWithType: DrawingGroup.Children
- uid: System.Windows.Media.DrawingGroup.ClipGeometry*
  parent: System.Windows.Media.DrawingGroup
  isExternal: false
  name: ClipGeometry
  nameWithType: DrawingGroup.ClipGeometry
- uid: System.Windows.Media.DrawingGroup.Clone*
  parent: System.Windows.Media.DrawingGroup
  isExternal: false
  name: Clone
  nameWithType: DrawingGroup.Clone
- uid: System.Windows.Media.DrawingGroup.CloneCurrentValue*
  parent: System.Windows.Media.DrawingGroup
  isExternal: false
  name: CloneCurrentValue
  nameWithType: DrawingGroup.CloneCurrentValue
- uid: System.Windows.Media.DrawingGroup.CreateInstanceCore*
  parent: System.Windows.Media.DrawingGroup
  isExternal: false
  name: CreateInstanceCore
  nameWithType: DrawingGroup.CreateInstanceCore
- uid: System.Windows.Media.DrawingGroup.GuidelineSet*
  parent: System.Windows.Media.DrawingGroup
  isExternal: false
  name: GuidelineSet
  nameWithType: DrawingGroup.GuidelineSet
- uid: System.Windows.Media.DrawingGroup.Opacity*
  parent: System.Windows.Media.DrawingGroup
  isExternal: false
  name: Opacity
  nameWithType: DrawingGroup.Opacity
- uid: System.Windows.Media.DrawingGroup.OpacityMask*
  parent: System.Windows.Media.DrawingGroup
  isExternal: false
  name: OpacityMask
  nameWithType: DrawingGroup.OpacityMask
- uid: System.Windows.Media.DrawingGroup.Open*
  parent: System.Windows.Media.DrawingGroup
  isExternal: false
  name: Open
  nameWithType: DrawingGroup.Open
- uid: System.Windows.Media.DrawingGroup.Transform*
  parent: System.Windows.Media.DrawingGroup
  isExternal: false
  name: Transform
  nameWithType: DrawingGroup.Transform
