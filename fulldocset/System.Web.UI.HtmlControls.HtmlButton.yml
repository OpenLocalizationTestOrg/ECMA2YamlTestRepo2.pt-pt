### YamlMime:ManagedReference
items:
- uid: System.Web.UI.HtmlControls.HtmlButton
  id: HtmlButton
  children:
  - System.Web.UI.HtmlControls.HtmlButton.#ctor
  - System.Web.UI.HtmlControls.HtmlButton.CausesValidation
  - System.Web.UI.HtmlControls.HtmlButton.OnPreRender(System.EventArgs)
  - System.Web.UI.HtmlControls.HtmlButton.OnServerClick(System.EventArgs)
  - System.Web.UI.HtmlControls.HtmlButton.RaisePostBackEvent(System.String)
  - System.Web.UI.HtmlControls.HtmlButton.RenderAttributes(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.HtmlControls.HtmlButton.ServerClick
  - System.Web.UI.HtmlControls.HtmlButton.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  - System.Web.UI.HtmlControls.HtmlButton.ValidationGroup
  langs:
  - csharp
  name: HtmlButton
  nameWithType: HtmlButton
  fullName: System.Web.UI.HtmlControls.HtmlButton
  type: Class
  summary: "Allows programmatic access to the HTML <xref uid=&quot;langword_csharp_&lt;button&gt;&quot; name=&quot;&lt;button&gt;&quot; href=&quot;&quot;></xref> tag on the server."
  remarks: "The `<button>` element allows Web developers to create user interface (UI) form buttons that can be composed of embedded HTML elements, including other server controls.      > [!NOTE] >  The `<button>` element is defined in the HTML 4.0 specification and is supported only in Microsoft Internet Explorer version 4.0 and later. To create UI form buttons for use in other browsers, consider using the <xref:System.Web.UI.HtmlControls.HtmlInputImage> class.       To perform a set of custom instructions when the HtmlButton control is clicked, provide a custom event handler for the <xref:System.Web.UI.HtmlControls.HtmlButton.ServerClick> event.      > [!NOTE] >  The HtmlButton control renders ECMAScript to the client browser. The client browser must have ECMAScript enabled for this control to function properly. For more information on client script, see [Client Script in ASP.NET Web Pages](~/add/includes/ajax-current-ext-md.md).       For a list of initial property values for an instance of HtmlButton, see the <xref:System.Web.UI.HtmlControls.HtmlButton.%23ctor%2A> constructor.      > [!CAUTION] >  This control can be used to display user input, which might include malicious client script. Check any information that is sent from a client for executable script, SQL statements, or other code before displaying it in your application. ASP.NET provides an input request validation feature to block script and HTML in user input. Validation server controls are also provided to assess user input. For more information, see [Validation Server Control Syntax](http://msdn.microsoft.com/en-us/96d2c59e-693c-4079-9b53-b3ff0d9e9133)."
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.UI.HtmlControls.HtmlButton.ServerClick> event to display the name entered in the text box.  \n  \n [!code-vb[Classic HtmlButton Example#1](~/add/codesnippet/visualbasic/t-system.web.ui.htmlcont_8_1.aspx)]\n [!code-cs[Classic HtmlButton Example#1](~/add/codesnippet/csharp/t-system.web.ui.htmlcont_8_1.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("ServerClick")]

      [System.Web.UI.SupportsEventValidation]

      public class HtmlButton : System.Web.UI.HtmlControls.HtmlContainerControl, System.Web.UI.IPostBackEventHandler
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.HtmlControls.HtmlControl
  - System.Web.UI.HtmlControls.HtmlContainerControl
  implements:
  - System.Web.UI.IPostBackEventHandler
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableTheming
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnInit(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.SkinID
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.TrackViewState
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  - System.Web.UI.HtmlControls.HtmlContainerControl.CreateControlCollection
  - System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml
  - System.Web.UI.HtmlControls.HtmlContainerControl.InnerText
  - System.Web.UI.HtmlControls.HtmlContainerControl.LoadViewState(System.Object)
  - System.Web.UI.HtmlControls.HtmlContainerControl.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.HtmlControls.HtmlContainerControl.RenderEndTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.HtmlControls.HtmlControl.Attributes
  - System.Web.UI.HtmlControls.HtmlControl.Disabled
  - System.Web.UI.HtmlControls.HtmlControl.GetAttribute(System.String)
  - System.Web.UI.HtmlControls.HtmlControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.HtmlControls.HtmlControl.SetAttribute(System.String,System.String)
  - System.Web.UI.HtmlControls.HtmlControl.Style
  - System.Web.UI.HtmlControls.HtmlControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.HtmlControls.HtmlControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.HtmlControls.HtmlControl.TagName
  - System.Web.UI.HtmlControls.HtmlControl.ViewStateIgnoresCase
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlButton.#ctor
  id: '#ctor'
  parent: System.Web.UI.HtmlControls.HtmlButton
  langs:
  - csharp
  name: HtmlButton()
  nameWithType: HtmlButton.HtmlButton()
  fullName: System.Web.UI.HtmlControls.HtmlButton.HtmlButton()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.UI.HtmlControls.HtmlButton&quot;></xref> class."
  remarks: "Use this constructor to create and initialize a new instance of the <xref:System.Web.UI.HtmlControls.HtmlButton> control.       The following table shows the initial property value for an instance of <xref:System.Web.UI.HtmlControls.HtmlButton>.      |Property|Initial value|   |--------------|-------------------|   |<xref:System.Web.UI.HtmlControls.HtmlControl.TagName%2A>|The &quot;button&quot; literal string.|"
  example:
  - "The following code example demonstrates how to dynamically add an <xref:System.Web.UI.HtmlControls.HtmlButton> control to the Web Forms page.  \n  \n [!code-vb[HtmlButtonConstructor#1](~/add/codesnippet/visualbasic/m-system.web.ui.htmlcont_26_1.aspx)]\n [!code-cs[HtmlButtonConstructor#1](~/add/codesnippet/csharp/m-system.web.ui.htmlcont_26_1.aspx)]"
  syntax:
    content: public HtmlButton ();
    parameters: []
  overload: System.Web.UI.HtmlControls.HtmlButton.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlButton.CausesValidation
  id: CausesValidation
  parent: System.Web.UI.HtmlControls.HtmlButton
  langs:
  - csharp
  name: CausesValidation
  nameWithType: HtmlButton.CausesValidation
  fullName: System.Web.UI.HtmlControls.HtmlButton.CausesValidation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "Gets or sets a value indicating whether validation is performed when the <xref href=&quot;System.Web.UI.HtmlControls.HtmlButton&quot;></xref> control is clicked."
  remarks: "By default, page validation is performed when an <xref:System.Web.UI.HtmlControls.HtmlButton> control is clicked. Page validation determines whether the input controls associated with a validation control on the page all pass the validation rules specified by the validation control.       You can specify or determine whether validation is performed on both the client and the server when an <xref:System.Web.UI.HtmlControls.HtmlButton> control is clicked by using the CausesValidation property. To prevent validation from being performed, set the CausesValidation property to `false`.       This property is commonly used in the event handler for the <xref:System.Web.UI.HtmlControls.HtmlButton.ServerClick> event to prevent page validation from occurring when a Cancel or Reset button is clicked."
  example:
  - "The following code example demonstrates how to use the CausesValidation property to prevent page validation from occurring. Note that the <xref:System.Web.UI.WebControls.BaseValidator.Validate%2A> method activates each validation control independently.  \n  \n [!code-vb[HtmlButtonCausesValidation#1](~/add/codesnippet/visualbasic/p-system.web.ui.htmlcont_59_1.aspx)]\n [!code-cs[HtmlButtonCausesValidation#1](~/add/codesnippet/csharp/p-system.web.ui.htmlcont_59_1.aspx)]"
  syntax:
    content: public virtual bool CausesValidation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if validation is performed when the <xref href=&quot;System.Web.UI.HtmlControls.HtmlButton&quot;></xref> control is clicked; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default value is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.HtmlControls.HtmlButton.CausesValidation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlButton.OnPreRender(System.EventArgs)
  id: OnPreRender(System.EventArgs)
  parent: System.Web.UI.HtmlControls.HtmlButton
  langs:
  - csharp
  name: OnPreRender(EventArgs)
  nameWithType: HtmlButton.OnPreRender(EventArgs)
  fullName: System.Web.UI.HtmlControls.HtmlButton.OnPreRender(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "Raises the <xref href=&quot;System.Web.UI.Control.PreRender&quot;></xref> event and registers client script for generating a postback."
  remarks: "The OnPreRender method is used primarily by control developers extending the functionality of the <xref:System.Web.UI.HtmlControls.HtmlButton> control."
  example:
  - "The following code example demonstrates how to override the OnPreRender method in a custom server control so that it always displays the <xref:System.Web.UI.HtmlControls.HtmlButton> with bold text.  \n  \n [!code-vb[CustomHtmlButtonOnPreRender#1](~/add/codesnippet/visualbasic/m-system.web.ui.htmlcont_23_1.aspx)]\n [!code-cs[CustomHtmlButtonOnPreRender#1](~/add/codesnippet/csharp/m-system.web.ui.htmlcont_23_1.aspx)]  \n  \n [!code-cs[CustomHtmlButtonOnPreRender#2](~/add/codesnippet/csharp/m-system.web.ui.htmlcont_23_2.cs)]\n [!code-vb[CustomHtmlButtonOnPreRender#2](~/add/codesnippet/visualbasic/m-system.web.ui.htmlcont_23_2.vb)]"
  syntax:
    content: protected override void OnPreRender (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains event data."
  overload: System.Web.UI.HtmlControls.HtmlButton.OnPreRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlButton.OnServerClick(System.EventArgs)
  id: OnServerClick(System.EventArgs)
  parent: System.Web.UI.HtmlControls.HtmlButton
  langs:
  - csharp
  name: OnServerClick(EventArgs)
  nameWithType: HtmlButton.OnServerClick(EventArgs)
  fullName: System.Web.UI.HtmlControls.HtmlButton.OnServerClick(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "Raises the <xref href=&quot;System.Web.UI.HtmlControls.HtmlButton.ServerClick&quot;></xref> event. This allows you to provide a custom handler for the event."
  remarks: "The <xref:System.Web.UI.HtmlControls.HtmlButton.ServerClick> event is raised when the <xref:System.Web.UI.HtmlControls.HtmlButton> control is clicked. This event causes a round trip to occur from the client to the server and back. It is deliberately different from the client-side `OnClick` event. If a conflict exists between code run with a <xref:System.Web.UI.HtmlControls.HtmlButton.ServerClick> event and code run by a client-side `OnClick` event, the server-side event instructions will override the client-side code.       Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The OnServerClick method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  example:
  - "The following code example demonstrates how to declaratively specify and code an event handler for the <xref:System.Web.UI.HtmlControls.HtmlButton.ServerClick> event. When the <xref:System.Web.UI.HtmlControls.HtmlButton> control is clicked, the value entered in the text box is displayed.  \n  \n [!code-vb[Classic HtmlButton Example#1](~/add/codesnippet/visualbasic/m-system.web.ui.htmlcont_33_1.aspx)]\n [!code-cs[Classic HtmlButton Example#1](~/add/codesnippet/csharp/m-system.web.ui.htmlcont_33_1.aspx)]  \n  \n The following code example demonstrates how to programmatically specify and code an event handler for the <xref:System.Web.UI.HtmlControls.HtmlButton.ServerClick> event.  \n  \n [!code-vb[HtmlButtonConstructor#1](~/add/codesnippet/visualbasic/m-system.web.ui.htmlcont_33_2.aspx)]\n [!code-cs[HtmlButtonConstructor#1](~/add/codesnippet/csharp/m-system.web.ui.htmlcont_33_2.aspx)]"
  syntax:
    content: protected virtual void OnServerClick (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "A &lt;xref:System.EventArgs?displayProperty=fullName&gt; that contains the event data."
  overload: System.Web.UI.HtmlControls.HtmlButton.OnServerClick*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlButton.RaisePostBackEvent(System.String)
  id: RaisePostBackEvent(System.String)
  parent: System.Web.UI.HtmlControls.HtmlButton
  langs:
  - csharp
  name: RaisePostBackEvent(String)
  nameWithType: HtmlButton.RaisePostBackEvent(String)
  fullName: System.Web.UI.HtmlControls.HtmlButton.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "Raises events for the <xref href=&quot;System.Web.UI.HtmlControls.HtmlButton&quot;></xref> control when it posts back to the server."
  remarks: "The RaisePostBackEvent method is used by the <xref:System.Web.UI.HtmlControls.HtmlButton> control, when it is clicked, to raise a <xref:System.Web.UI.HtmlControls.HtmlButton.ServerClick> event.       If the <xref:System.Web.UI.HtmlControls.HtmlButton.CausesValidation%2A> property is `true`, the <xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName> method is called using the group of controls specified in the <xref:System.Web.UI.HtmlControls.HtmlButton.ValidationGroup%2A> property.       This method is used primarily by control developers extending the functionality of the <xref:System.Web.UI.HtmlControls.HtmlButton> control."
  syntax:
    content: protected virtual void RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "The argument for the event."
  overload: System.Web.UI.HtmlControls.HtmlButton.RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlButton.RenderAttributes(System.Web.UI.HtmlTextWriter)
  id: RenderAttributes(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.HtmlControls.HtmlButton
  langs:
  - csharp
  name: RenderAttributes(HtmlTextWriter)
  nameWithType: HtmlButton.RenderAttributes(HtmlTextWriter)
  fullName: System.Web.UI.HtmlControls.HtmlButton.RenderAttributes(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "Renders the <xref href=&quot;System.Web.UI.HtmlControls.HtmlButton&quot;></xref> control&quot;s attributes to the specified <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref> object."
  remarks: "The RenderAttributes method writes the `onclick` attribute of the rendered <xref:System.Web.UI.HtmlControls.HtmlButton> control, and then calls the base <xref:System.Web.UI.HtmlControls.HtmlControl.RenderAttributes%2A?displayProperty=fullName> method.       The RenderAttributes method is used primarily by control developers extending the functionality of the <xref:System.Web.UI.HtmlControls.HtmlButton> control."
  example:
  - "The following code example demonstrates how to override the RenderAttributes method in a custom server control so that a title is always displayed for the <xref:System.Web.UI.HtmlControls.HtmlButton> control.  \n  \n [!code-cs[CustomHtmlButtonRenderAttributes#1](~/add/codesnippet/csharp/ea295bbf-8841-481e-ab76-_1.aspx)]\n [!code-vb[CustomHtmlButtonRenderAttributes#1](~/add/codesnippet/visualbasic/ea295bbf-8841-481e-ab76-_1.aspx)]  \n  \n [!code-vb[CustomHtmlButtonRenderAttributes#2](~/add/codesnippet/visualbasic/ea295bbf-8841-481e-ab76-_2.vb)]\n [!code-cs[CustomHtmlButtonRenderAttributes#2](~/add/codesnippet/csharp/ea295bbf-8841-481e-ab76-_2.cs)]"
  syntax:
    content: protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "The <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref> that contains the output stream to render on the client."
  overload: System.Web.UI.HtmlControls.HtmlButton.RenderAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlButton.ServerClick
  id: ServerClick
  parent: System.Web.UI.HtmlControls.HtmlButton
  langs:
  - csharp
  name: ServerClick
  nameWithType: HtmlButton.ServerClick
  fullName: System.Web.UI.HtmlControls.HtmlButton.ServerClick
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "Occurs when the user clicks an <xref href=&quot;System.Web.UI.HtmlControls.HtmlButton&quot;></xref> control on the client Web page."
  remarks: "The ServerClick event is raised when the <xref:System.Web.UI.HtmlControls.HtmlButton> control is clicked. This server event causes a round trip to occur from the client to the server and back. It is deliberately different from the client-side `OnClick` event. If a conflict exists between code run with a ServerClick event and code run by a client-side `OnClick` event, the server-side event instructions will override the client-side code.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to declaratively specify and code an event handler for the ServerClick event. When the <xref:System.Web.UI.HtmlControls.HtmlButton> control is clicked, the value entered in the text box is displayed.  \n  \n [!code-vb[Classic HtmlButton Example#1](~/add/codesnippet/visualbasic/e-system.web.ui.htmlcont_0_1.aspx)]\n [!code-cs[Classic HtmlButton Example#1](~/add/codesnippet/csharp/e-system.web.ui.htmlcont_0_1.aspx)]  \n  \n The following code example demonstrates how to programmatically specify and code an event handler for the ServerClick event.  \n  \n [!code-vb[HtmlButtonConstructor#1](~/add/codesnippet/visualbasic/e-system.web.ui.htmlcont_0_2.aspx)]\n [!code-cs[HtmlButtonConstructor#1](~/add/codesnippet/csharp/e-system.web.ui.htmlcont_0_2.aspx)]"
  syntax:
    content: public event EventHandler ServerClick;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlButton.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  id: System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  isEii: true
  parent: System.Web.UI.HtmlControls.HtmlButton
  langs:
  - csharp
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: HtmlButton.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.HtmlControls.HtmlButton.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "Raises events for the <xref href=&quot;System.Web.UI.HtmlControls.HtmlButton&quot;></xref> control when it posts back to the server."
  syntax:
    content: void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "The event arguments."
  overload: System.Web.UI.HtmlControls.HtmlButton.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlButton.ValidationGroup
  id: ValidationGroup
  parent: System.Web.UI.HtmlControls.HtmlButton
  langs:
  - csharp
  name: ValidationGroup
  nameWithType: HtmlButton.ValidationGroup
  fullName: System.Web.UI.HtmlControls.HtmlButton.ValidationGroup
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "Gets or sets the group of controls for which the <xref href=&quot;System.Web.UI.HtmlControls.HtmlButton&quot;></xref> causes validation when it posts back to the server."
  remarks: "Validation groups allow you to assign validation controls on a page to a specific category. Each validation group can be validated independently from other validation groups on the page. Use the ValidationGroup property to specify the name of the validation group for which the <xref:System.Web.UI.HtmlControls.HtmlButton> control causes validation when it posts back to the server.       This property has an effect only when the value of the <xref:System.Web.UI.HtmlControls.HtmlButton.CausesValidation%2A> property is set to `true`. When you specify a value for the ValidationGroup property, only the validation controls that are part of the specified group are validated when the <xref:System.Web.UI.HtmlControls.HtmlButton> control posts back to the server. If you do not specify a value for this property and the <xref:System.Web.UI.HtmlControls.HtmlButton.CausesValidation%2A> property is set to `true`, all validation controls on the page that are not assigned to a validation group are validated when the control posts back to the server."
  example:
  - "The following code example demonstrates how to use the ValidationGroup property to specify the controls to validate when an <xref:System.Web.UI.HtmlControls.HtmlButton> control posts back to the server. The page contains two text boxes to capture data from the user and two <xref:System.Web.UI.WebControls.RequiredFieldValidator> controls to ensure that the user does not leave a text box blank. The <xref:System.Web.UI.WebControls.RequiredFieldValidator> control for the first text box is in the `CityInfoGroup` validation group and the <xref:System.Web.UI.WebControls.RequiredFieldValidator> control for the second box is in the `StateInfoGroup` validation group. When the `CityQueryButton` is clicked, only the control in the `CityInfoGroup` validation group is validated. When the `StateQueryButton` is clicked, only the control in the `StateInfoGroup` validation group is validated.  \n  \n [!code-vb[HtmlButtonValidationGroup#1](~/add/codesnippet/visualbasic/p-system.web.ui.htmlcont_34_1.aspx)]\n [!code-cs[HtmlButtonValidationGroup#1](~/add/codesnippet/csharp/p-system.web.ui.htmlcont_34_1.aspx)]"
  syntax:
    content: public virtual string ValidationGroup { get; set; }
    return:
      type: System.String
      description: "The group of controls for which the <xref href=&quot;System.Web.UI.HtmlControls.HtmlButton&quot;></xref> control causes validation when it posts back to the server. The default value is an empty string (&quot;&quot;) indicating that this property is not set."
  overload: System.Web.UI.HtmlControls.HtmlButton.ValidationGroup*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.HtmlControls.HtmlContainerControl
  isExternal: false
  name: System.Web.UI.HtmlControls.HtmlContainerControl
- uid: System.Web.UI.HtmlControls.HtmlButton.#ctor
  parent: System.Web.UI.HtmlControls.HtmlButton
  isExternal: false
  name: HtmlButton()
  nameWithType: HtmlButton.HtmlButton()
  fullName: System.Web.UI.HtmlControls.HtmlButton.HtmlButton()
- uid: System.Web.UI.HtmlControls.HtmlButton.CausesValidation
  parent: System.Web.UI.HtmlControls.HtmlButton
  isExternal: false
  name: CausesValidation
  nameWithType: HtmlButton.CausesValidation
  fullName: System.Web.UI.HtmlControls.HtmlButton.CausesValidation
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.HtmlControls.HtmlButton.OnPreRender(System.EventArgs)
  parent: System.Web.UI.HtmlControls.HtmlButton
  isExternal: false
  name: OnPreRender(EventArgs)
  nameWithType: HtmlButton.OnPreRender(EventArgs)
  fullName: System.Web.UI.HtmlControls.HtmlButton.OnPreRender(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.HtmlControls.HtmlButton.OnServerClick(System.EventArgs)
  parent: System.Web.UI.HtmlControls.HtmlButton
  isExternal: false
  name: OnServerClick(EventArgs)
  nameWithType: HtmlButton.OnServerClick(EventArgs)
  fullName: System.Web.UI.HtmlControls.HtmlButton.OnServerClick(EventArgs)
- uid: System.Web.UI.HtmlControls.HtmlButton.RaisePostBackEvent(System.String)
  parent: System.Web.UI.HtmlControls.HtmlButton
  isExternal: false
  name: RaisePostBackEvent(String)
  nameWithType: HtmlButton.RaisePostBackEvent(String)
  fullName: System.Web.UI.HtmlControls.HtmlButton.RaisePostBackEvent(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.HtmlControls.HtmlButton.RenderAttributes(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.HtmlControls.HtmlButton
  isExternal: false
  name: RenderAttributes(HtmlTextWriter)
  nameWithType: HtmlButton.RenderAttributes(HtmlTextWriter)
  fullName: System.Web.UI.HtmlControls.HtmlButton.RenderAttributes(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.HtmlControls.HtmlButton.ServerClick
  parent: System.Web.UI.HtmlControls.HtmlButton
  isExternal: false
  name: ServerClick
  nameWithType: HtmlButton.ServerClick
  fullName: System.Web.UI.HtmlControls.HtmlButton.ServerClick
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.HtmlControls.HtmlButton.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  parent: System.Web.UI.HtmlControls.HtmlButton
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: HtmlButton.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.HtmlControls.HtmlButton.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
- uid: System.Web.UI.HtmlControls.HtmlButton.ValidationGroup
  parent: System.Web.UI.HtmlControls.HtmlButton
  isExternal: false
  name: ValidationGroup
  nameWithType: HtmlButton.ValidationGroup
  fullName: System.Web.UI.HtmlControls.HtmlButton.ValidationGroup
- uid: System.Web.UI.HtmlControls.HtmlButton.#ctor*
  parent: System.Web.UI.HtmlControls.HtmlButton
  isExternal: false
  name: HtmlButton
  nameWithType: HtmlButton.HtmlButton
- uid: System.Web.UI.HtmlControls.HtmlButton.CausesValidation*
  parent: System.Web.UI.HtmlControls.HtmlButton
  isExternal: false
  name: CausesValidation
  nameWithType: HtmlButton.CausesValidation
- uid: System.Web.UI.HtmlControls.HtmlButton.OnPreRender*
  parent: System.Web.UI.HtmlControls.HtmlButton
  isExternal: false
  name: OnPreRender
  nameWithType: HtmlButton.OnPreRender
- uid: System.Web.UI.HtmlControls.HtmlButton.OnServerClick*
  parent: System.Web.UI.HtmlControls.HtmlButton
  isExternal: false
  name: OnServerClick
  nameWithType: HtmlButton.OnServerClick
- uid: System.Web.UI.HtmlControls.HtmlButton.RaisePostBackEvent*
  parent: System.Web.UI.HtmlControls.HtmlButton
  isExternal: false
  name: RaisePostBackEvent
  nameWithType: HtmlButton.RaisePostBackEvent
- uid: System.Web.UI.HtmlControls.HtmlButton.RenderAttributes*
  parent: System.Web.UI.HtmlControls.HtmlButton
  isExternal: false
  name: RenderAttributes
  nameWithType: HtmlButton.RenderAttributes
- uid: System.Web.UI.HtmlControls.HtmlButton.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  parent: System.Web.UI.HtmlControls.HtmlButton
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
  nameWithType: HtmlButton.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
- uid: System.Web.UI.HtmlControls.HtmlButton.ValidationGroup*
  parent: System.Web.UI.HtmlControls.HtmlButton
  isExternal: false
  name: ValidationGroup
  nameWithType: HtmlButton.ValidationGroup
