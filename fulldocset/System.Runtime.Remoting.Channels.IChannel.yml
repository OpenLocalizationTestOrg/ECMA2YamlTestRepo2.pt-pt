### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.Channels.IChannel
  id: IChannel
  children:
  - System.Runtime.Remoting.Channels.IChannel.ChannelName
  - System.Runtime.Remoting.Channels.IChannel.ChannelPriority
  - System.Runtime.Remoting.Channels.IChannel.Parse(System.String,System.String@)
  langs:
  - csharp
  name: IChannel
  nameWithType: IChannel
  fullName: System.Runtime.Remoting.Channels.IChannel
  type: Interface
  summary: "Fornece conduits mensagens entre limites de sistema de interação remota."
  remarks: "Limites de comunicação remota podem ser <xref:System.Runtime.Remoting.Contexts.Context>s, <xref:System.AppDomain>s processos, computadores ou.</xref:System.AppDomain> </xref:System.Runtime.Remoting.Contexts.Context> Uma aplicação pode cruzada estes limites apenas por através dos canais. Estes crossings podem ser entrada e saída. Um canal pode escutar um ponto final para mensagens de entrada, enviar para um ponto final para mensagens de saída, ou ambos. Esta opção fornece um ponto de extensibilidade no tempo de execução para o plug-in protocolos uma vasta gama, apesar do tempo de execução poderá não estar na outra extremidade do canal.       Objetos de tempo de execução podem ser utilizados para representar um conjunto avançado e grande de semântica e entidades. O canal fornece o ponto de extensibilidade para converter as mensagens de e para os protocolos específicos. Se existirem tempos de execução em ambas as extremidades do canal, é criado um canal virtual entre dois ends, para ligar os cliente e servidor sink as cadeias em ambos os lados do limite.       A parte do cliente do canal está localizada no final de uma cadeia de receptores de contexto de cliente. A parte do servidor do canal está localizada no início da cadeia de receptores de contexto de servidor. As mensagens são entregues para o canal de cliente utilizando o <xref:System.Runtime.Remoting.Messaging.IMessageSink>interface, viajar através do canal e, em seguida, são recebidos pelo canal do servidor.</xref:System.Runtime.Remoting.Messaging.IMessageSink> O canal de servidor fornece a mensagem para o primeiro receptor de contexto de servidor.       Canais devem expor a interface IChannel, que fornece propriedades informativas, como o <xref:System.Runtime.Remoting.Channels.IChannel.ChannelName%2A>e <xref:System.Runtime.Remoting.Channels.IChannel.ChannelPriority%2A>Propriedades.</xref:System.Runtime.Remoting.Channels.IChannel.ChannelPriority%2A> </xref:System.Runtime.Remoting.Channels.IChannel.ChannelName%2A> Canais podem ser registados com o <xref:System.Runtime.Remoting.Channels.ChannelServices.RegisterChannel%2A?displayProperty=fullName>método.</xref:System.Runtime.Remoting.Channels.ChannelServices.RegisterChannel%2A?displayProperty=fullName>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IChannel
  implements: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.IChannel.ChannelName
  id: ChannelName
  parent: System.Runtime.Remoting.Channels.IChannel
  langs:
  - csharp
  name: ChannelName
  nameWithType: IChannel.ChannelName
  fullName: System.Runtime.Remoting.Channels.IChannel.ChannelName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Channels
  summary: "Obtém o nome do canal."
  remarks: ''
  example:
  - >-
    [!code-cpp[HttpServerChannel_Server_Client#2](~/add/codesnippet/cpp/p-system.runtime.remotin_0_1.cpp)]
     [!code-cs[HttpServerChannel_Server_Client#2](~/add/codesnippet/csharp/p-system.runtime.remotin_0_1.cs)]
     [!code-vb[HttpServerChannel_Server_Client#2](~/add/codesnippet/visualbasic/p-system.runtime.remotin_0_1.vb)]
  syntax:
    content: public string ChannelName { get; }
    return:
      type: System.String
      description: "O nome do canal."
  overload: System.Runtime.Remoting.Channels.IChannel.ChannelName*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador imediato não tem permissão de infraestrutura."
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.IChannel.ChannelPriority
  id: ChannelPriority
  parent: System.Runtime.Remoting.Channels.IChannel
  langs:
  - csharp
  name: ChannelPriority
  nameWithType: IChannel.ChannelPriority
  fullName: System.Runtime.Remoting.Channels.IChannel.ChannelPriority
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Channels
  summary: "Obtém a prioridade do canal."
  remarks: "Números superiores indicam maior prioridade, para que um canal com a prioridade de 50 tenha uma prioridade mais alta do que um canal com prioridade 25. O canal de domínio de aplicação cruzada tem uma prioridade de 100.       Canais de cliente com maior prioridade recebem a primeira oportunidade para ligar a um objeto remoto especificado por um URL ou uma entrada de dados de canal específico da <xref:System.Runtime.Remoting.ObjRef>.</xref:System.Runtime.Remoting.ObjRef>       Para canais de servidor, a prioridade indica a ordem em que os seus dados de canal irão aparecer num <xref:System.Runtime.Remoting.ObjRef>, que por sua vez, afeta a ordem na qual os clientes irão tentar ligar ao objeto de servidor.</xref:System.Runtime.Remoting.ObjRef> Se o servidor está a escutar um canal HTTP com prioridade 50 e um canal TCP com prioridade 25 e o cliente foi registado um HTTP e TCP canal, em seguida, o cliente irá utilizar o canal HTTP para falar com o servidor."
  example:
  - >-
    [!code-cs[HttpServerChannel_Server_Client#5](~/add/codesnippet/csharp/p-system.runtime.remotin_5_1.cs)]
     [!code-vb[HttpServerChannel_Server_Client#5](~/add/codesnippet/visualbasic/p-system.runtime.remotin_5_1.vb)]
     [!code-cpp[HttpServerChannel_Server_Client#5](~/add/codesnippet/cpp/p-system.runtime.remotin_5_1.cpp)]
  syntax:
    content: public int ChannelPriority { get; }
    return:
      type: System.Int32
      description: "Um número inteiro que indica a prioridade do canal."
  overload: System.Runtime.Remoting.Channels.IChannel.ChannelPriority*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador imediato não tem permissão de infraestrutura."
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.IChannel.Parse(System.String,System.String@)
  id: Parse(System.String,System.String@)
  parent: System.Runtime.Remoting.Channels.IChannel
  langs:
  - csharp
  name: Parse(String,String)
  nameWithType: IChannel.Parse(String,String)
  fullName: System.Runtime.Remoting.Channels.IChannel.Parse(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Channels
  summary: "Devolve o objeto URI, como um parâmetro out e o URI do canal atual como o valor de retorno."
  remarks: ''
  example:
  - >-
    [!code-cs[HttpServerChannel_Server_Client#5](~/add/codesnippet/csharp/m-system.runtime.remotin_15_1.cs)]
     [!code-vb[HttpServerChannel_Server_Client#5](~/add/codesnippet/visualbasic/m-system.runtime.remotin_15_1.vb)]
     [!code-cpp[HttpServerChannel_Server_Client#5](~/add/codesnippet/cpp/m-system.runtime.remotin_15_1.cpp)]
  syntax:
    content: public string Parse (string url, out string objectURI);
    parameters:
    - id: url
      type: System.String
      description: "O URL do objeto."
    - id: objectURI
      type: System.String
      description: "Quando este método devolve, contém um <xref:System.String>que detém o objeto URI.</xref:System.String> Este parâmetro é transmitido não inicializado."
    return:
      type: System.String
      description: "O URI do canal atual, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o URI não pertence a este canal."
  overload: System.Runtime.Remoting.Channels.IChannel.Parse*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador imediato não tem permissão de infraestrutura."
  platform:
  - net462
references:
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Runtime.Remoting.Channels.IChannel.ChannelName
  parent: System.Runtime.Remoting.Channels.IChannel
  isExternal: false
  name: ChannelName
  nameWithType: IChannel.ChannelName
  fullName: System.Runtime.Remoting.Channels.IChannel.ChannelName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.Channels.IChannel.ChannelPriority
  parent: System.Runtime.Remoting.Channels.IChannel
  isExternal: false
  name: ChannelPriority
  nameWithType: IChannel.ChannelPriority
  fullName: System.Runtime.Remoting.Channels.IChannel.ChannelPriority
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.Remoting.Channels.IChannel.Parse(System.String,System.String@)
  parent: System.Runtime.Remoting.Channels.IChannel
  isExternal: false
  name: Parse(String,String)
  nameWithType: IChannel.Parse(String,String)
  fullName: System.Runtime.Remoting.Channels.IChannel.Parse(String,String)
- uid: System.Runtime.Remoting.Channels.IChannel.ChannelName*
  parent: System.Runtime.Remoting.Channels.IChannel
  isExternal: false
  name: ChannelName
  nameWithType: IChannel.ChannelName
- uid: System.Runtime.Remoting.Channels.IChannel.ChannelPriority*
  parent: System.Runtime.Remoting.Channels.IChannel
  isExternal: false
  name: ChannelPriority
  nameWithType: IChannel.ChannelPriority
- uid: System.Runtime.Remoting.Channels.IChannel.Parse*
  parent: System.Runtime.Remoting.Channels.IChannel
  isExternal: false
  name: Parse
  nameWithType: IChannel.Parse
