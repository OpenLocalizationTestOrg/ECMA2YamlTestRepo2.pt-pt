### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.TreeNodeCollection
  id: TreeNodeCollection
  children:
  - System.Web.UI.WebControls.TreeNodeCollection.#ctor
  - System.Web.UI.WebControls.TreeNodeCollection.#ctor(System.Web.UI.WebControls.TreeNode)
  - System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)
  - System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)
  - System.Web.UI.WebControls.TreeNodeCollection.Clear
  - System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)
  - System.Web.UI.WebControls.TreeNodeCollection.CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)
  - System.Web.UI.WebControls.TreeNodeCollection.Count
  - System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator
  - System.Web.UI.WebControls.TreeNodeCollection.IndexOf(System.Web.UI.WebControls.TreeNode)
  - System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized
  - System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)
  - System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)
  - System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)
  - System.Web.UI.WebControls.TreeNodeCollection.SyncRoot
  - System.Web.UI.WebControls.TreeNodeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#TrackViewState
  langs:
  - csharp
  name: TreeNodeCollection
  nameWithType: TreeNodeCollection
  fullName: System.Web.UI.WebControls.TreeNodeCollection
  type: Class
  summary: "Representa uma coleção de <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objetos no <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controlo. Esta classe não pode ser herdada."
  remarks: "A classe de TreeNodeCollection é utilizada para armazenar e gerir uma coleção de <xref:System.Web.UI.WebControls.TreeNode>objetos no <xref:System.Web.UI.WebControls.TreeView>controlo.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeNode> O <xref:System.Web.UI.WebControls.TreeView>controlo utiliza a classe de TreeNodeCollection em duas as respetivas propriedades.</xref:System.Web.UI.WebControls.TreeView> Armazena os respetivos nós raiz no <xref:System.Web.UI.WebControls.TreeView.Nodes%2A>propriedade e respetivos nós selecionados no <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A>propriedade.</xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> </xref:System.Web.UI.WebControls.TreeView.Nodes%2A> A coleção de TreeNodeCollection também é utilizada para o <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>propriedade para armazenar os nós subordinados (se aplicável).</xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>       A classe de TreeNodeCollection suporta várias formas de aceder aos itens na coleção:-Utilize o <xref:System.Web.UI.WebControls.TreeNodeCollection.Item%2A>indexador para obter um <xref:System.Web.UI.WebControls.TreeNode>objeto diretamente num índice baseado em zero específico.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeCollection.Item%2A>      -Utilize o <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A>método para criar um enumerador que pode ser utilizado para iterar através da coleção.</xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A>      -Utilizar `foreach` (c#) ou `For Each` (Visual Basic) para iterar através da coleção.      -Utilize o <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A>método para copiar o conteúdo da coleção para um <xref:System.Array>objeto.</xref:System.Array> </xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A>       Pode gerir programaticamente o TreeNodeCollection através da adição e remoção de <xref:System.Web.UI.WebControls.TreeNode>objetos.</xref:System.Web.UI.WebControls.TreeNode> Para adicionar nós à coleção, utilize o <xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A>ou <xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A>método.</xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A> </xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A> Para remover nós da coleção, utilize o <xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A>, <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A>, ou <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A>método.</xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A> </xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A> </xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A>      > [!NOTE] > Quando o <xref:System.Web.UI.WebControls.TreeView>controlo está vinculado a uma origem de dados, o <xref:System.Web.UI.WebControls.TreeView.Nodes%2A>e <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>coleções são preenchidas automaticamente sempre que ocorre o enlace.</xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> </xref:System.Web.UI.WebControls.TreeView.Nodes%2A> </xref:System.Web.UI.WebControls.TreeView> Quaisquer alterações às coleções entre enlaces serão perdidas. Para manter estas alterações, atualizar a origem de dados ou reconstruir manualmente a coleção sempre que vincular.       O TreeNodeCollection contém propriedades e métodos que lhe permitem obter informações sobre a própria coleção. Para determinar o número de itens está na coleção, utilize o <xref:System.Web.UI.WebControls.TreeNodeCollection.Count%2A>propriedade.</xref:System.Web.UI.WebControls.TreeNodeCollection.Count%2A> Se pretende determinar se a coleção contém uma determinada <xref:System.Web.UI.WebControls.TreeNode>objeto, utilize o <xref:System.Web.UI.WebControls.TreeNodeCollection.Contains%2A>método.</xref:System.Web.UI.WebControls.TreeNodeCollection.Contains%2A> </xref:System.Web.UI.WebControls.TreeNode> Para obter o índice de uma <xref:System.Web.UI.WebControls.TreeNode>objeto da coleção, utilize o <xref:System.Web.UI.WebControls.TreeNodeCollection.IndexOf%2A>método.</xref:System.Web.UI.WebControls.TreeNodeCollection.IndexOf%2A> </xref:System.Web.UI.WebControls.TreeNode>"
  example:
  - "The following example demonstrates how to programmatically add nodes to and remove them from a TreeNodeCollection. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> and <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> properties return a TreeNodeCollection object.  \n  \n [!code-cs[TreeNodeCollectionAdd#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_136_1.aspx)]\n [!code-vb[TreeNodeCollectionAdd#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_136_1.aspx)]"
  syntax:
    content: 'public sealed class TreeNodeCollection : System.Collections.ICollection, System.Web.UI.IStateManager'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  - System.Web.UI.IStateManager
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: TreeNodeCollection()
  nameWithType: TreeNodeCollection.TreeNodeCollection()
  fullName: System.Web.UI.WebControls.TreeNodeCollection.TreeNodeCollection()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> classe utilizando os valores predefinidos."
  remarks: "Utilize este construtor para inicializar uma nova instância do <xref:System.Web.UI.WebControls.TreeNodeCollection>classe utilizando os valores predefinidos.</xref:System.Web.UI.WebControls.TreeNodeCollection> Este construtor é usado normalmente quando criar uma coleção de nós raiz em que um nó principal (ou o proprietário) não é necessário.      > [!NOTE] > Ao criar uma coleção de nós não raiz, deve utilizar o construtor sobrecarregado, que utiliza o `owner` parâmetro, em vez deste construtor, para especificar o nó principal.       Este construtor é utilizado principalmente pelos programadores de controlo."
  syntax:
    content: public TreeNodeCollection ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNodeCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.#ctor(System.Web.UI.WebControls.TreeNode)
  id: '#ctor(System.Web.UI.WebControls.TreeNode)'
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: TreeNodeCollection(TreeNode)
  nameWithType: TreeNodeCollection.TreeNodeCollection(TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.TreeNodeCollection(TreeNode)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> classe utilizando o nó principal especificado (ou o proprietário)."
  remarks: "Utilize este construtor para inicializar uma nova instância do <xref:System.Web.UI.WebControls.TreeNodeCollection>classe utilizando o nó principal especificado (ou o proprietário).</xref:System.Web.UI.WebControls.TreeNodeCollection> Este construtor é usado normalmente quando criar uma coleção de nós não raiz onde tem de especificar o nó principal.      > [!NOTE] > Ao criar uma coleção de nós raiz, considere utilizar o construtor predefinido porque o nós raiz não tem um nó principal.       Este construtor é utilizado principalmente pelos programadores de controlo."
  syntax:
    content: public TreeNodeCollection (System.Web.UI.WebControls.TreeNode owner);
    parameters:
    - id: owner
      type: System.Web.UI.WebControls.TreeNode
      description: "O <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objeto que representa o nó principal da coleção."
  overload: System.Web.UI.WebControls.TreeNodeCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)
  id: Add(System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: Add(TreeNode)
  nameWithType: TreeNodeCollection.Add(TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Add(TreeNode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Acrescenta especificado <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objeto até ao fim do <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> objeto."
  remarks: "Utilize o método Add a acrescentar o <xref:System.Web.UI.WebControls.TreeNode>objeto ao fim do <xref:System.Web.UI.WebControls.TreeNodeCollection>.</xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNode> especificado      > [!NOTE] > O <xref:System.Web.UI.WebControls.TreeNodeCollection>permite adicionar referências nulo (Nothing em Visual Basic), bem como duplicado <xref:System.Web.UI.WebControls.TreeNode>objetos.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeCollection>       Como alternativa, pode inserir um <xref:System.Web.UI.WebControls.TreeNode>objeto o <xref:System.Web.UI.WebControls.TreeNodeCollection>num índice específico utilizando o <xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A>método.</xref:System.Web.UI.WebControls.TreeNodeCollection.AddAt%2A> </xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNode>"
  example:
  - "The following example demonstrates how to use the Add method to programmatically add a node to the <xref:System.Web.UI.WebControls.TreeNodeCollection>. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> and <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> properties each return a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \n  \n [!code-cs[TreeNodeCollectionAdd#1](~/add/codesnippet/csharp/370e49fd-05e7-49aa-a3d5-_1.aspx)]\n [!code-vb[TreeNodeCollectionAdd#1](~/add/codesnippet/visualbasic/370e49fd-05e7-49aa-a3d5-_1.aspx)]"
  syntax:
    content: public void Add (System.Web.UI.WebControls.TreeNode child);
    parameters:
    - id: child
      type: System.Web.UI.WebControls.TreeNode
      description: "O <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objeto a acrescentar."
  overload: System.Web.UI.WebControls.TreeNodeCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)
  id: AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: AddAt(Int32,TreeNode)
  nameWithType: TreeNodeCollection.AddAt(Int32,TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.AddAt(Int32,TreeNode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Insere especificado <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objeto um <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> objeto na localização de índice especificado."
  remarks: "Utilize o método AddAt para inserir especificado <xref:System.Web.UI.WebControls.TreeNode>objeto o <xref:System.Web.UI.WebControls.TreeNodeCollection>o índice baseado em zero especificado.</xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNode>      > [!NOTE] > O <xref:System.Web.UI.WebControls.TreeNodeCollection>permite-lhe inserir referências nulo (Nothing em Visual Basic), bem como duplicado <xref:System.Web.UI.WebControls.TreeNode>objetos.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeCollection>       Como alternativa, pode acrescentar um <xref:System.Web.UI.WebControls.TreeNode>objeto até ao fim do <xref:System.Web.UI.WebControls.TreeNodeCollection>utilizando o <xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A>método.</xref:System.Web.UI.WebControls.TreeNodeCollection.Add%2A> </xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNode>"
  example:
  - "The following example demonstrates how to use the AddAt method to programmatically add a node to the <xref:System.Web.UI.WebControls.TreeNodeCollection>. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> and <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> properties each return a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \n  \n [!code-cs[TreeNodeCollectionAdd#1](~/add/codesnippet/csharp/646d7369-5544-4d90-8475-_1.aspx)]\n [!code-vb[TreeNodeCollectionAdd#1](~/add/codesnippet/visualbasic/646d7369-5544-4d90-8475-_1.aspx)]"
  syntax:
    content: public void AddAt (int index, System.Web.UI.WebControls.TreeNode child);
    parameters:
    - id: index
      type: System.Int32
      description: "A localização de índice baseado em zero no qual pretende inserir a <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objeto."
    - id: child
      type: System.Web.UI.WebControls.TreeNode
      description: "O <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> o objeto a adicionar."
  overload: System.Web.UI.WebControls.TreeNodeCollection.AddAt*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>child</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.Clear
  id: Clear
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: TreeNodeCollection.Clear()
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Esvazia o <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> objeto."
  remarks: "Utilize o método Clear para remover todos os <xref:System.Web.UI.WebControls.TreeNode>objetos de <xref:System.Web.UI.WebControls.TreeNodeCollection>.</xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNode>      > [!NOTE] > Para remover um nó individual da coleção, utilize o <xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A>ou <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A>método.</xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A> </xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A>"
  example:
  - "The following example demonstrates how to use the Clear method to programmatically empty a <xref:System.Web.UI.WebControls.TreeNodeCollection>. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> and <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> properties return a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \n  \n [!code-cs[TreeNodeCollectionAdd#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_111_1.aspx)]\n [!code-vb[TreeNodeCollectionAdd#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_111_1.aspx)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNodeCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)
  id: Contains(System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: Contains(TreeNode)
  nameWithType: TreeNodeCollection.Contains(TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Contains(TreeNode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Determina se especificado <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objeto se encontra na coleção."
  remarks: "Utilizar o método contém para determinar se um <xref:System.Web.UI.WebControls.TreeNode>objeto está contido no <xref:System.Web.UI.WebControls.TreeNodeCollection>.</xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNode> Este método é normalmente utilizado para testar a existência de um <xref:System.Web.UI.WebControls.TreeNode>objeto antes de executar uma tarefa, tal como adicionar ou remover o nó de coleção.</xref:System.Web.UI.WebControls.TreeNode>"
  example:
  - "The following example demonstrates how to use the Contains method to determine whether the selected node is in the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> collection. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> property returns a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \n  \n [!code-vb[TreeNodeCollectionIndexOf#1](~/add/codesnippet/visualbasic/8b0f37ed-79bf-4881-ba56-_1.aspx)]\n [!code-cs[TreeNodeCollectionIndexOf#1](~/add/codesnippet/csharp/8b0f37ed-79bf-4881-ba56-_1.aspx)]"
  syntax:
    content: public bool Contains (System.Web.UI.WebControls.TreeNode c);
    parameters:
    - id: c
      type: System.Web.UI.WebControls.TreeNode
      description: "O <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objeto localizar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se especificado <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objeto está contido na coleção; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNodeCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)
  id: CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: CopyTo(TreeNode[],Int32)
  nameWithType: TreeNodeCollection.CopyTo(TreeNode[],Int32)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.CopyTo(TreeNode[],Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Copia todos os itens do <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> objeto para uma matriz unidimensional compatível de <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objetos, que começa no índice especificado na matriz de destino."
  remarks: "Utilize o método CopyTo para copiar o conteúdo do <xref:System.Web.UI.WebControls.TreeNodeCollection>para especificado baseado em zero <xref:System.Array?displayProperty=fullName>objeto.</xref:System.Array?displayProperty=fullName> </xref:System.Web.UI.WebControls.TreeNodeCollection> Itens são copiados a partir do índice da matriz de destino especificado. Com o <xref:System.Array?displayProperty=fullName>objeto, em seguida, pode utilizar a sintaxe de matriz para aceder aos itens no <xref:System.Web.UI.WebControls.TreeNodeCollection>.</xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Array?displayProperty=fullName>       Como alternativa, também pode utilizar o <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A>método para criar um enumerador que pode ser utilizado para aceder aos itens na coleção.</xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A>"
  example:
  - "The following example demonstrates how to use the CopyTo method to copy the values of a <xref:System.Web.UI.WebControls.TreeNodeCollection> into an array. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> property returns a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \n  \n [!code-cs[TreeNodeCollectionCopyTo#1](~/add/codesnippet/csharp/a62bb2b9-1097-48cf-a7f1-_1.aspx)]\n [!code-vb[TreeNodeCollectionCopyTo#1](~/add/codesnippet/visualbasic/a62bb2b9-1097-48cf-a7f1-_1.aspx)]"
  syntax:
    content: public void CopyTo (System.Web.UI.WebControls.TreeNode[] nodeArray, int index);
    parameters:
    - id: nodeArray
      type: System.Web.UI.WebControls.TreeNode[]
      description: "Uma matriz baseada em zero do <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objetos que recebe os itens copiados do <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref>."
    - id: index
      type: System.Int32
      description: "A posição da matriz de destino no qual pretende iniciar a receber o conteúdo copiado."
  overload: System.Web.UI.WebControls.TreeNodeCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.Count
  id: Count
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: Count
  nameWithType: TreeNodeCollection.Count
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém o número de itens a <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> objeto."
  remarks: "Utilize a propriedade de contagem para determinar o número de itens na <xref:System.Web.UI.WebControls.TreeNodeCollection>.</xref:System.Web.UI.WebControls.TreeNodeCollection> Esta propriedade é normalmente utilizada quando repetir uma coleção para determinar o limite superior da coleção. A propriedade contagem também costuma é utilizada para determinar se uma coleção está vazia."
  example:
  - "The following example demonstrates how to use the Count property to determine the number of items in the <xref:System.Web.UI.WebControls.TreeNodeCollection>. It then performs a preorder traversal of the <xref:System.Web.UI.WebControls.TreeView> control to display the text of each node.  \n  \n [!code-cs[TreeNodeCollectionCount#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_146_1.aspx)]\n [!code-vb[TreeNodeCollectionCount#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_146_1.aspx)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "O número de itens a <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNodeCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: TreeNodeCollection.GetEnumerator()
  fullName: System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Devolve um enumerador que pode ser utilizado para iterar através de um <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> objeto."
  remarks: "Utilize o método GetEnumerator para criar um enumerador que pode ser facilmente iterated através de obter cada item no <xref:System.Web.UI.WebControls.TreeNodeCollection>.</xref:System.Web.UI.WebControls.TreeNodeCollection> Para obter o item atualmente indicado no enumerador, utilize o <xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>propriedade.</xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName> Utilize o <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>método para mover para o item seguinte.</xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName> Se precisar de mover o enumerador de volta para o início da coleção, utilize o <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>método.</xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>      > [!NOTE] > Depois de criar um enumerador ou utilizar o <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>método, tem de chamar o <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>método.</xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName> </xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName> Caso contrário, o item representado pelo <xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>propriedade está definida.</xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>       Como alternativa, também pode utilizar o <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A>método para criar um <xref:System.Array?displayProperty=fullName>objetos que podem ser utilizados para aceder aos itens na coleção.</xref:System.Array?displayProperty=fullName> </xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> Outra alternativa consiste em utilizar um `foreach` ou `For Each` estrutura para iterar através da coleção."
  example:
  - "The following example demonstrates how to use the GetEnumerator method to create an enumerator that contains root nodes of the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-cs[TreeNodeCollectionGetEnumerator#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_193_1.aspx)]\n [!code-vb[TreeNodeCollectionGetEnumerator#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_193_1.aspx)]"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Um enumerador que pode ser utilizado para iterar através de <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.IndexOf(System.Web.UI.WebControls.TreeNode)
  id: IndexOf(System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: IndexOf(TreeNode)
  nameWithType: TreeNodeCollection.IndexOf(TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.IndexOf(TreeNode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Determina o índice especificado da <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objeto."
  remarks: "Utilize o método IndexOf para determinar o índice baseado em zero do especificado <xref:System.Web.UI.WebControls.TreeNode>objeto o <xref:System.Web.UI.WebControls.TreeNodeCollection>objeto.</xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNode> Se o nó não se encontra na coleção, o método devolve -1.      > [!NOTE] > Se o nó especificado aparece várias vezes na coleção, o índice da primeira ocorrência é devolvido."
  example:
  - "The following example demonstrates how to use the IndexOf method to determine the index of a root node. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> property returns a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \n  \n [!code-vb[TreeNodeCollectionIndexOf#1](~/add/codesnippet/visualbasic/be69754f-ce4e-4152-80b4-_1.aspx)]\n [!code-cs[TreeNodeCollectionIndexOf#1](~/add/codesnippet/csharp/be69754f-ce4e-4152-80b4-_1.aspx)]"
  syntax:
    content: public int IndexOf (System.Web.UI.WebControls.TreeNode value);
    parameters:
    - id: value
      type: System.Web.UI.WebControls.TreeNode
      description: "O <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objeto localizar."
    return:
      type: System.Int32
      description: "O índice baseado em zero da primeira ocorrência de <code> value </code> dentro de <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref>, se encontrado; caso contrário, -1."
  overload: System.Web.UI.WebControls.TreeNodeCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: TreeNodeCollection.IsSynchronized
  fullName: System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um valor que indica se o acesso à <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> é sincronizado (seguros para threads)."
  remarks: "A propriedade IsSynchronized é utilizada para indicar se o acesso à <xref:System.Web.UI.WebControls.TreeNodeCollection>é sincronizado (seguros para threads).</xref:System.Web.UI.WebControls.TreeNodeCollection> Esta propriedade é derivada de <xref:System.Collections.ICollection?displayProperty=fullName>classe e seja substituída para devolver sempre `false`.</xref:System.Collections.ICollection?displayProperty=fullName>       Para obter mais informações sobre a propriedade IsSynchronized, consulte o <xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName>propriedade o <xref:System.Collections.ICollection?displayProperty=fullName>interface.</xref:System.Collections.ICollection?displayProperty=fullName> </xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: TreeNodeCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém o <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objeto no índice especificado no <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> objeto."
  remarks: "Utilize este indexador para aceder a um <xref:System.Web.UI.WebControls.TreeNode>de objeto do <xref:System.Web.UI.WebControls.TreeNodeCollection>no índice especificado utilizando a notação de matriz.</xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNode> O indexador permite-lhe modificar ou substituir um <xref:System.Web.UI.WebControls.TreeNode>objeto na coleção diretamente.</xref:System.Web.UI.WebControls.TreeNode> A coleção é baseado em zero."
  example:
  - "The following example demonstrates how to use the indexer to access an element in the <xref:System.Web.UI.WebControls.TreeNodeCollection>. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> and <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> properties return a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \n  \n [!code-cs[TreeNodeCollectionAdd#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1077_1.aspx)]\n [!code-vb[TreeNodeCollectionAdd#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1077_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNode this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "O índice baseado em zero do <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> o objeto a obter."
    return:
      type: System.Web.UI.WebControls.TreeNode
      description: "O <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objeto no índice especificado no <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNodeCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)
  id: Remove(System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: Remove(TreeNode)
  nameWithType: TreeNodeCollection.Remove(TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Remove(TreeNode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Remove o especificado <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> de objeto do <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> objeto."
  remarks: "Utilize o método de remover para remover o nó especificado da coleção. Todos os itens que se seguem nesse nó, em seguida, são movidos para cima para preencher a posição vacant. Os índices dos itens movidos também são atualizados.      > [!NOTE] > O <xref:System.Web.UI.WebControls.TreeNodeCollection>podem conter referências nulo (Nothing em Visual Basic), bem como duplicado <xref:System.Web.UI.WebControls.TreeNode>objetos.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeCollection>       Como alternativa, pode remover um nó de um índice específico utilizando o <xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A>método.</xref:System.Web.UI.WebControls.TreeNodeCollection.RemoveAt%2A> Também pode remover todos os nós na coleção utilizando o <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A>método.</xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A>"
  example:
  - "The following example demonstrates how to use the Remove method to programmatically remove a node from the <xref:System.Web.UI.WebControls.TreeNodeCollection>. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> and <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> properties each return a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \n  \n [!code-cs[TreeNodeCollectionAdd#1](~/add/codesnippet/csharp/f8fda58d-8ad1-430c-83d7-_1.aspx)]\n [!code-vb[TreeNodeCollectionAdd#1](~/add/codesnippet/visualbasic/f8fda58d-8ad1-430c-83d7-_1.aspx)]"
  syntax:
    content: public void Remove (System.Web.UI.WebControls.TreeNode value);
    parameters:
    - id: value
      type: System.Web.UI.WebControls.TreeNode
      description: "O <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objeto para remover."
  overload: System.Web.UI.WebControls.TreeNodeCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: TreeNodeCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Remove o <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objeto na localização do índice especificado o <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> objeto."
  remarks: "Utilize o método do RemoveAt para remover o <xref:System.Web.UI.WebControls.TreeNode>objeto na localização especificada índice baseado em zero de um <xref:System.Web.UI.WebControls.TreeNodeCollection>.</xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNode> Todos os itens que se seguem nesse nó, em seguida, são movidos para cima para preencher a posição vacant. Os índices dos itens movidos também são atualizados.      > [!NOTE] > O <xref:System.Web.UI.WebControls.TreeNodeCollection>podem conter referências nulo (Nothing em Visual Basic), bem como duplicado <xref:System.Web.UI.WebControls.TreeNode>objetos.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeCollection>       Como alternativa, pode remover específico <xref:System.Web.UI.WebControls.TreeNode>objeto utilizando o <xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A>método.</xref:System.Web.UI.WebControls.TreeNodeCollection.Remove%2A> </xref:System.Web.UI.WebControls.TreeNode> Também pode remover todos os nós na coleção utilizando o <xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A>método.</xref:System.Web.UI.WebControls.TreeNodeCollection.Clear%2A>"
  example:
  - "The following example demonstrates how to use the RemoveAt method to programmatically remove a node from the <xref:System.Web.UI.WebControls.TreeNodeCollection>. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> and <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> properties each return a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \n  \n [!code-cs[TreeNodeCollectionAdd#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_37_1.aspx)]\n [!code-vb[TreeNodeCollectionAdd#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_37_1.aspx)]"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "A localização de índice baseado em zero do nó para remover."
  overload: System.Web.UI.WebControls.TreeNodeCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.SyncRoot
  id: SyncRoot
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: TreeNodeCollection.SyncRoot
  fullName: System.Web.UI.WebControls.TreeNodeCollection.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um objeto que pode ser utilizado para sincronizar acesso para o <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> objeto."
  remarks: "A propriedade SyncRoot fornece uma versão sincronizada a <xref:System.Web.UI.WebControls.TreeNodeCollection>que podem ser utilizados com a sincronização (thread) do código.</xref:System.Web.UI.WebControls.TreeNodeCollection>      > [!CAUTION] > O <xref:System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized%2A>propriedade desta classe sempre devolve `false`, que indica que o <xref:System.Web.UI.WebControls.TreeNodeCollection>classe não está sincronizada (não seguros para threads).</xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized%2A>       Sincronizar código tem de efetuar operações no objeto SyncRoot do <xref:System.Web.UI.WebControls.TreeNodeCollection>, não diretamente no <xref:System.Web.UI.WebControls.TreeNodeCollection>propriamente dito.</xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNodeCollection> Isto assegura um funcionamento correto de coleções que são derivadas de outros objetos. Especificamente, mantém sincronização adequada com outros threads que podem ser simultaneamente modificar o <xref:System.Web.UI.WebControls.TreeNodeCollection>objeto.</xref:System.Web.UI.WebControls.TreeNodeCollection>      > [!NOTE] > O objeto devolvido nesta implementação é o <xref:System.Collections.ArrayList?displayProperty=fullName>objecto utilizado para armazenar o <xref:System.Web.UI.WebControls.TreeNode>objetos na coleção.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Collections.ArrayList?displayProperty=fullName>       Enumerar através de uma coleção intrinsecamente não é um procedimento seguro para thread. Mesmo quando uma coleção está sincronizada, outros threads ainda foi possível modificar a coleção, o que faz com que o enumerador acionar uma excepção. Para garantir a segurança de thread durante a enumeração, pode bloquear a coleção durante a enumeração de toda ou detetar exceções resultantes das alterações efetuadas por outros threads.       Para mais informações sobre o <xref:System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot%2A>propriedade, consulte o <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName>propriedade o <xref:System.Collections.ICollection?displayProperty=fullName>interface.</xref:System.Collections.ICollection?displayProperty=fullName> </xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot%2A>"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "A &lt;xref:System.Object?displayProperty=fullName&gt; que podem ser utilizados para sincronizar acesso para o <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNodeCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: TreeNodeCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Copia todos os itens do <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> objeto para um ecrã compatível com unidimensional &lt;xref:System.Array?displayProperty=fullName&gt;, começando no índice especificado na matriz de destino."
  remarks: "Utilize o <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A>método para copiar o conteúdo do <xref:System.Web.UI.WebControls.TreeNodeCollection>para especificado baseado em zero <xref:System.Array?displayProperty=fullName>objeto.</xref:System.Array?displayProperty=fullName> </xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> Itens são copiados a partir do índice da matriz de destino especificado. Com o <xref:System.Array?displayProperty=fullName>objeto, em seguida, pode utilizar a sintaxe de matriz para aceder aos itens no <xref:System.Web.UI.WebControls.TreeNodeCollection>.</xref:System.Web.UI.WebControls.TreeNodeCollection> </xref:System.Array?displayProperty=fullName>       Como alternativa, também pode utilizar o <xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A>método para criar um enumerador que pode ser utilizado para aceder aos itens na coleção.</xref:System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator%2A>"
  example:
  - "The following example demonstrates how to use the <xref:System.Web.UI.WebControls.TreeNodeCollection.CopyTo%2A> method to copy the values of a <xref:System.Web.UI.WebControls.TreeNodeCollection> into an array. Notice that the <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> property returns a <xref:System.Web.UI.WebControls.TreeNodeCollection> object.  \n  \n [!code-cs[TreeNodeCollectionCopyTo#1](~/add/codesnippet/csharp/58422549-a31a-41f3-a6a6-_1.aspx)]\n [!code-vb[TreeNodeCollectionCopyTo#1](~/add/codesnippet/visualbasic/58422549-a31a-41f3-a6a6-_1.aspx)]"
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "Um baseado em zero &lt;xref:System.Array?displayProperty=fullName&gt; objeto que recebe os itens copiados do <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref>."
    - id: index
      type: System.Int32
      description: "A posição da matriz de destino no qual pretende iniciar a receber o conteúdo copiado."
  overload: System.Web.UI.WebControls.TreeNodeCollection.System#Collections#ICollection#CopyTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>Não é uma matriz de <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objetos."
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#IsTrackingViewState
  id: System#Web#UI#IStateManager#IsTrackingViewState
  isEii: true
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Web.UI.IStateManager.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> objeto está a guardar as alterações para o estado de vista."
  syntax:
    content: bool System.Web.UI.IStateManager.IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o controlo está marcado para guardar Estado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  id: System#Web#UI#IStateManager#LoadViewState(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Web.UI.IStateManager.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Carrega a <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> objeto do anteriormente guardado o estado de visualização."
  syntax:
    content: void IStateManager.LoadViewState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "A &lt;xref:System.Object?displayProperty=fullName&gt; que contém os valores de estado de vista guardado."
  overload: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#SaveViewState
  id: System#Web#UI#IStateManager#SaveViewState
  isEii: true
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Web.UI.IStateManager.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Guarda as alterações para ver o estado para um &lt;xref:System.Object?displayProperty=fullName&gt;."
  syntax:
    content: object IStateManager.SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "O &lt;xref:System.Object?displayProperty=fullName&gt; que contém as alterações de estado de vista."
  overload: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#TrackViewState
  id: System#Web#UI#IStateManager#TrackViewState
  isEii: true
  parent: System.Web.UI.WebControls.TreeNodeCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Web.UI.IStateManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Indica o <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> para controlar as alterações para o estado de vista."
  remarks: "Depois deste método foi chamado no controlo de servidor, o <xref:System.Web.UI.Control.IsTrackingViewState%2A>irá devolver a propriedade `true`.</xref:System.Web.UI.Control.IsTrackingViewState%2A>"
  syntax:
    content: void IStateManager.TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#TrackViewState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.UI.WebControls.TreeNodeCollection.#ctor
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: TreeNodeCollection()
  nameWithType: TreeNodeCollection.TreeNodeCollection()
  fullName: System.Web.UI.WebControls.TreeNodeCollection.TreeNodeCollection()
- uid: System.Web.UI.WebControls.TreeNodeCollection.#ctor(System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: TreeNodeCollection(TreeNode)
  nameWithType: TreeNodeCollection.TreeNodeCollection(TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.TreeNodeCollection(TreeNode)
- uid: System.Web.UI.WebControls.TreeNode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNode
  nameWithType: TreeNode
  fullName: System.Web.UI.WebControls.TreeNode
- uid: System.Web.UI.WebControls.TreeNodeCollection.Add(System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Add(TreeNode)
  nameWithType: TreeNodeCollection.Add(TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Add(TreeNode)
- uid: System.Web.UI.WebControls.TreeNodeCollection.AddAt(System.Int32,System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: AddAt(Int32,TreeNode)
  nameWithType: TreeNodeCollection.AddAt(Int32,TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.AddAt(Int32,TreeNode)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.TreeNodeCollection.Clear
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Clear()
  nameWithType: TreeNodeCollection.Clear()
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Clear()
- uid: System.Web.UI.WebControls.TreeNodeCollection.Contains(System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Contains(TreeNode)
  nameWithType: TreeNodeCollection.Contains(TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Contains(TreeNode)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.TreeNodeCollection.CopyTo(System.Web.UI.WebControls.TreeNode[],System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: CopyTo(TreeNode[],Int32)
  nameWithType: TreeNodeCollection.CopyTo(TreeNode[],Int32)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.CopyTo(TreeNode[],Int32)
- uid: System.Web.UI.WebControls.TreeNode[]
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNode
  nameWithType: TreeNode
  fullName: System.Web.UI.WebControls.TreeNode[]
  spec.csharp:
  - uid: System.Web.UI.WebControls.TreeNode
    name: TreeNode
    nameWithType: TreeNode
    fullName: TreeNode[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.TreeNodeCollection.Count
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Count
  nameWithType: TreeNodeCollection.Count
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Count
- uid: System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: TreeNodeCollection.GetEnumerator()
  fullName: System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.UI.WebControls.TreeNodeCollection.IndexOf(System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: IndexOf(TreeNode)
  nameWithType: TreeNodeCollection.IndexOf(TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.IndexOf(TreeNode)
- uid: System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: TreeNodeCollection.IsSynchronized
  fullName: System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized
- uid: System.Web.UI.WebControls.TreeNodeCollection.Item(System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: TreeNodeCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Item(Int32)
- uid: System.Web.UI.WebControls.TreeNodeCollection.Remove(System.Web.UI.WebControls.TreeNode)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Remove(TreeNode)
  nameWithType: TreeNodeCollection.Remove(TreeNode)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.Remove(TreeNode)
- uid: System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: TreeNodeCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.RemoveAt(Int32)
- uid: System.Web.UI.WebControls.TreeNodeCollection.SyncRoot
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: SyncRoot
  nameWithType: TreeNodeCollection.SyncRoot
  fullName: System.Web.UI.WebControls.TreeNodeCollection.SyncRoot
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: TreeNodeCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#IsTrackingViewState
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Web.UI.IStateManager.LoadViewState(Object)
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#SaveViewState
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Web.UI.IStateManager.SaveViewState()
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#TrackViewState
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.TreeNodeCollection.System.Web.UI.IStateManager.TrackViewState()
- uid: System.Web.UI.WebControls.TreeNodeCollection.#ctor*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: TreeNodeCollection
  nameWithType: TreeNodeCollection.TreeNodeCollection
- uid: System.Web.UI.WebControls.TreeNodeCollection.Add*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Add
  nameWithType: TreeNodeCollection.Add
- uid: System.Web.UI.WebControls.TreeNodeCollection.AddAt*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: AddAt
  nameWithType: TreeNodeCollection.AddAt
- uid: System.Web.UI.WebControls.TreeNodeCollection.Clear*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Clear
  nameWithType: TreeNodeCollection.Clear
- uid: System.Web.UI.WebControls.TreeNodeCollection.Contains*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Contains
  nameWithType: TreeNodeCollection.Contains
- uid: System.Web.UI.WebControls.TreeNodeCollection.CopyTo*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: CopyTo
  nameWithType: TreeNodeCollection.CopyTo
- uid: System.Web.UI.WebControls.TreeNodeCollection.Count*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Count
  nameWithType: TreeNodeCollection.Count
- uid: System.Web.UI.WebControls.TreeNodeCollection.GetEnumerator*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: TreeNodeCollection.GetEnumerator
- uid: System.Web.UI.WebControls.TreeNodeCollection.IndexOf*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: IndexOf
  nameWithType: TreeNodeCollection.IndexOf
- uid: System.Web.UI.WebControls.TreeNodeCollection.IsSynchronized*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: TreeNodeCollection.IsSynchronized
- uid: System.Web.UI.WebControls.TreeNodeCollection.Item*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Item
  nameWithType: TreeNodeCollection.Item
- uid: System.Web.UI.WebControls.TreeNodeCollection.Remove*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: Remove
  nameWithType: TreeNodeCollection.Remove
- uid: System.Web.UI.WebControls.TreeNodeCollection.RemoveAt*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: RemoveAt
  nameWithType: TreeNodeCollection.RemoveAt
- uid: System.Web.UI.WebControls.TreeNodeCollection.SyncRoot*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: SyncRoot
  nameWithType: TreeNodeCollection.SyncRoot
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Collections#ICollection#CopyTo*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: TreeNodeCollection.System.Collections.ICollection.CopyTo
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#IsTrackingViewState*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#LoadViewState*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.LoadViewState
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#SaveViewState*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.SaveViewState
- uid: System.Web.UI.WebControls.TreeNodeCollection.System#Web#UI#IStateManager#TrackViewState*
  parent: System.Web.UI.WebControls.TreeNodeCollection
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState
  nameWithType: TreeNodeCollection.System.Web.UI.IStateManager.TrackViewState
