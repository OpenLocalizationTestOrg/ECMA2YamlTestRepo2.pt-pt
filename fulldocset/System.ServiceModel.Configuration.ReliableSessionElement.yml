### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Configuration.ReliableSessionElement
  id: ReliableSessionElement
  children:
  - System.ServiceModel.Configuration.ReliableSessionElement.#ctor
  - System.ServiceModel.Configuration.ReliableSessionElement.AcknowledgementInterval
  - System.ServiceModel.Configuration.ReliableSessionElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)
  - System.ServiceModel.Configuration.ReliableSessionElement.BindingElementType
  - System.ServiceModel.Configuration.ReliableSessionElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)
  - System.ServiceModel.Configuration.ReliableSessionElement.CreateBindingElement
  - System.ServiceModel.Configuration.ReliableSessionElement.FlowControlEnabled
  - System.ServiceModel.Configuration.ReliableSessionElement.InactivityTimeout
  - System.ServiceModel.Configuration.ReliableSessionElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)
  - System.ServiceModel.Configuration.ReliableSessionElement.MaxPendingChannels
  - System.ServiceModel.Configuration.ReliableSessionElement.MaxRetryCount
  - System.ServiceModel.Configuration.ReliableSessionElement.MaxTransferWindowSize
  - System.ServiceModel.Configuration.ReliableSessionElement.Ordered
  - System.ServiceModel.Configuration.ReliableSessionElement.Properties
  - System.ServiceModel.Configuration.ReliableSessionElement.ReliableMessagingVersion
  langs:
  - csharp
  name: ReliableSessionElement
  nameWithType: ReliableSessionElement
  fullName: System.ServiceModel.Configuration.ReliableSessionElement
  type: Class
  summary: "Represents configuration setting for WS-Reliable Messaging."
  remarks: "When this element is added to a custom binding, the resulting channel can support exactly-once delivery assurances."
  syntax:
    content: 'public sealed class ReliableSessionElement : System.ServiceModel.Configuration.BindingElementExtensionElement'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  - System.ServiceModel.Configuration.ServiceModelConfigurationElement
  - System.ServiceModel.Configuration.ServiceModelExtensionElement
  - System.ServiceModel.Configuration.BindingElementExtensionElement
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.ResetModified
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  - System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
  - System.ServiceModel.Configuration.ServiceModelExtensionElement.ConfigurationElementName
  - System.ServiceModel.Configuration.ServiceModelExtensionElement.IsModified
  - System.ServiceModel.Configuration.ServiceModelExtensionElement.Reset(System.Configuration.ConfigurationElement)
  - System.ServiceModel.Configuration.ServiceModelExtensionElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: ReliableSessionElement()
  nameWithType: ReliableSessionElement.ReliableSessionElement()
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.ReliableSessionElement()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Initializes a new instance of the <xref href=&quot;System.ServiceModel.Configuration.ReliableSessionElement&quot;></xref> class."
  syntax:
    content: public ReliableSessionElement ();
    parameters: []
  overload: System.ServiceModel.Configuration.ReliableSessionElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.AcknowledgementInterval
  id: AcknowledgementInterval
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: AcknowledgementInterval
  nameWithType: ReliableSessionElement.AcknowledgementInterval
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.AcknowledgementInterval
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets or sets the interval of time that a destination waits before sending an acknowledgment to the message source on reliable channels that are created by the factory."
  syntax:
    content: public TimeSpan AcknowledgementInterval { get; set; }
    return:
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan> that specifies the interval of time that a service waits until sending an acknowledgment to the message source. The default value is 2 seconds."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.AcknowledgementInterval*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)
  id: ApplyConfiguration(System.ServiceModel.Channels.BindingElement)
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: ApplyConfiguration(BindingElement)
  nameWithType: ReliableSessionElement.ApplyConfiguration(BindingElement)
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.ApplyConfiguration(BindingElement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Applies the content of a specified binding element to this binding configuration section."
  syntax:
    content: public override void ApplyConfiguration (System.ServiceModel.Channels.BindingElement bindingElement);
    parameters:
    - id: bindingElement
      type: System.ServiceModel.Channels.BindingElement
      description: "A binding element."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.ApplyConfiguration*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.BindingElementType
  id: BindingElementType
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: BindingElementType
  nameWithType: ReliableSessionElement.BindingElementType
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.BindingElementType
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets the type of this binding element."
  syntax:
    content: public override Type BindingElementType { get; }
    return:
      type: System.Type
      description: "The type of this binding element."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.BindingElementType*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)
  id: CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: CopyFrom(ServiceModelExtensionElement)
  nameWithType: ReliableSessionElement.CopyFrom(ServiceModelExtensionElement)
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.CopyFrom(ServiceModelExtensionElement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Copies the content of the specified configuration section to this configuration section."
  syntax:
    content: public override void CopyFrom (System.ServiceModel.Configuration.ServiceModelExtensionElement from);
    parameters:
    - id: from
      type: System.ServiceModel.Configuration.ServiceModelExtensionElement
      description: "The configuration section to be copied."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.CopyFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.CreateBindingElement
  id: CreateBindingElement
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: CreateBindingElement()
  nameWithType: ReliableSessionElement.CreateBindingElement()
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.CreateBindingElement()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  syntax:
    content: protected override System.ServiceModel.Channels.BindingElement CreateBindingElement ();
    parameters: []
    return:
      type: System.ServiceModel.Channels.BindingElement
      description: "To be added."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.CreateBindingElement*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.FlowControlEnabled
  id: FlowControlEnabled
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: FlowControlEnabled
  nameWithType: ReliableSessionElement.FlowControlEnabled
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.FlowControlEnabled
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets or sets a value that indicates whether advanced flow control, a Microsoft-specific implementation of flow control for WS-Reliable messaging, is activated."
  syntax:
    content: public bool FlowControlEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if advanced flow control, a Microsoft-specific implementation of flow control for WS-Reliable messaging, is activated; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.FlowControlEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.InactivityTimeout
  id: InactivityTimeout
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: InactivityTimeout
  nameWithType: ReliableSessionElement.InactivityTimeout
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.InactivityTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets or sets a <xref:System.TimeSpan> value that specifies the maximum duration the channel allows the other communicating party not to send any messages before faulting the channel."
  remarks: "Activity on a channel is defined as receiving an application or infrastructure message. This property controls the maximum amount of time to keep an inactive session alive. If there is a longer time with no activity, the session is aborted by the infrastructure and the channel faults."
  syntax:
    content: public TimeSpan InactivityTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan> value that specifies the maximum duration the channel allows the other communicating party not to send any messages before faulting the channel. The default is 00:10:00."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.InactivityTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)
  id: InitializeFrom(System.ServiceModel.Channels.BindingElement)
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: InitializeFrom(BindingElement)
  nameWithType: ReliableSessionElement.InitializeFrom(BindingElement)
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.InitializeFrom(BindingElement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  syntax:
    content: protected override void InitializeFrom (System.ServiceModel.Channels.BindingElement bindingElement);
    parameters:
    - id: bindingElement
      type: System.ServiceModel.Channels.BindingElement
      description: "To be added."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.InitializeFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.MaxPendingChannels
  id: MaxPendingChannels
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: MaxPendingChannels
  nameWithType: ReliableSessionElement.MaxPendingChannels
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.MaxPendingChannels
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets or sets the maximum number of channels that can wait to be accepted on the listener."
  remarks: "This value should be an integer between 1 and 16384 inclusively.       Channels are pending when they are waiting to be accepted. Once that limit is reached, no channels are created. Rather, they are put in pending mode until this number goes down (by accepting pending channels). This limit is for each factory.       When the threshold is reached and a remote application tries to establish a new reliable session, the request is denied and the open operation that prompted this faults. This limit does not apply to the number of pending outgoing channels."
  syntax:
    content: public int MaxPendingChannels { get; set; }
    return:
      type: System.Int32
      description: "The maximum number of channels that can wait to be accepted on the listener. The default is 128."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.MaxPendingChannels*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.MaxRetryCount
  id: MaxRetryCount
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: MaxRetryCount
  nameWithType: ReliableSessionElement.MaxRetryCount
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.MaxRetryCount
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets or sets the maximum number of times a reliable channel attempts to retransmit a message it has not received an acknowledgment for, by calling Send on its underlying channel."
  remarks: "This value should be an integer greater than zero. If an acknowledgment is not received after the last retransmission, the channel faults.       A message is considered to be transferred if its delivery at the recipient is acknowledged by the recipient.       If an acknowledgment is not received within a certain amount of time for a message that has been transmitted, the infrastructure automatically retransmits the message. The infrastructure tries to resend the message for, at most, the number of times specified by this property. If an acknowledgment is not received after the last retransmission, the channel faults.       The infrastructure uses an exponential back-off algorithm to determine when to retransmit, based on a computed average round-trip time. The time initially starts at 1 second before retransmission and doubling the delay with every attempt, which results in approximately 8.5 minutes passing between the first transmission attempt and the last retransmission attempt. The time for the first retransmission attempt is adjusted according to the calculated round-trip time and the resulting stretch of time that those attempts take varies accordingly. This allows the retransmission time to dynamically adapt to varying network conditions."
  syntax:
    content: public int MaxRetryCount { get; set; }
    return:
      type: System.Int32
      description: "The maximum number of times a reliable channel attempts to retransmit a message it has not received an acknowledgment for, by calling Send on its underlying channel. The minimum value is 1; the maximum 20; and the default value is 8."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.MaxRetryCount*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.MaxTransferWindowSize
  id: MaxTransferWindowSize
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: MaxTransferWindowSize
  nameWithType: ReliableSessionElement.MaxTransferWindowSize
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.MaxTransferWindowSize
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets or sets the maximum size of the buffer."
  remarks: "On the client, this property defines the maximum size of the buffer used by a reliable channel to hold messages not yet acknowledged by the receiver. The unit of the quota is a message. If the buffer is full, further Send operations are blocked.       On the receiver, this property defines the maximum size of the buffer used by the channel to store incoming messages not yet dispatched to the application. If the buffer is full, further messages are silently dropped by the receiver and require retransmission by the client."
  syntax:
    content: public int MaxTransferWindowSize { get; set; }
    return:
      type: System.Int32
      description: "The maximum size of the buffer. Valid values are from 1 to 4096 inclusive."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.MaxTransferWindowSize*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.Ordered
  id: Ordered
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: Ordered
  nameWithType: ReliableSessionElement.Ordered
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.Ordered
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets or sets a value that specifies whether messages are guaranteed to arrive in the order they were sent."
  syntax:
    content: public bool Ordered { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if messages are guaranteed to arrive in the order they were sent; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if messages can arrive out of order. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.Ordered*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.Properties
  id: Properties
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: Properties
  nameWithType: ReliableSessionElement.Properties
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.Properties
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "To be added."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.ReliableMessagingVersion
  id: ReliableMessagingVersion
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: ReliableMessagingVersion
  nameWithType: ReliableSessionElement.ReliableMessagingVersion
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.ReliableMessagingVersion
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets or sets the version of WS-ReliableMessaging specified by the configuration element."
  remarks: 'There are currently two versions of the WS-ReliableMessaging protocol supported by [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]: WS-ReliableMessaging1.1 and WS-ReliableMessagingFebruary2005. The default version is WS-ReliableMessagingFebruary2005.'
  syntax:
    content: public System.ServiceModel.ReliableMessagingVersion ReliableMessagingVersion { get; set; }
    return:
      type: System.ServiceModel.ReliableMessagingVersion
      description: "An instance derived from <xref href=&quot;System.ServiceModel.ReliableMessagingVersion&quot;></xref> that represents the version of the WS-ReliableMessaging protocol used by the configuration element."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.ReliableMessagingVersion*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Configuration.BindingElementExtensionElement
  isExternal: false
  name: System.ServiceModel.Configuration.BindingElementExtensionElement
- uid: System.ServiceModel.Configuration.ReliableSessionElement.#ctor
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: ReliableSessionElement()
  nameWithType: ReliableSessionElement.ReliableSessionElement()
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.ReliableSessionElement()
- uid: System.ServiceModel.Configuration.ReliableSessionElement.AcknowledgementInterval
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: AcknowledgementInterval
  nameWithType: ReliableSessionElement.AcknowledgementInterval
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.AcknowledgementInterval
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.Configuration.ReliableSessionElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: ApplyConfiguration(BindingElement)
  nameWithType: ReliableSessionElement.ApplyConfiguration(BindingElement)
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.ApplyConfiguration(BindingElement)
- uid: System.ServiceModel.Channels.BindingElement
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingElement
  nameWithType: BindingElement
  fullName: System.ServiceModel.Channels.BindingElement
- uid: System.ServiceModel.Configuration.ReliableSessionElement.BindingElementType
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: BindingElementType
  nameWithType: ReliableSessionElement.BindingElementType
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.BindingElementType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.Configuration.ReliableSessionElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: CopyFrom(ServiceModelExtensionElement)
  nameWithType: ReliableSessionElement.CopyFrom(ServiceModelExtensionElement)
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.CopyFrom(ServiceModelExtensionElement)
- uid: System.ServiceModel.Configuration.ServiceModelExtensionElement
  parent: System.ServiceModel.Configuration
  isExternal: false
  name: ServiceModelExtensionElement
  nameWithType: ServiceModelExtensionElement
  fullName: System.ServiceModel.Configuration.ServiceModelExtensionElement
- uid: System.ServiceModel.Configuration.ReliableSessionElement.CreateBindingElement
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: CreateBindingElement()
  nameWithType: ReliableSessionElement.CreateBindingElement()
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.CreateBindingElement()
- uid: System.ServiceModel.Configuration.ReliableSessionElement.FlowControlEnabled
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: FlowControlEnabled
  nameWithType: ReliableSessionElement.FlowControlEnabled
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.FlowControlEnabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Configuration.ReliableSessionElement.InactivityTimeout
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: InactivityTimeout
  nameWithType: ReliableSessionElement.InactivityTimeout
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.InactivityTimeout
- uid: System.ServiceModel.Configuration.ReliableSessionElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: InitializeFrom(BindingElement)
  nameWithType: ReliableSessionElement.InitializeFrom(BindingElement)
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.InitializeFrom(BindingElement)
- uid: System.ServiceModel.Configuration.ReliableSessionElement.MaxPendingChannels
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: MaxPendingChannels
  nameWithType: ReliableSessionElement.MaxPendingChannels
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.MaxPendingChannels
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.Configuration.ReliableSessionElement.MaxRetryCount
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: MaxRetryCount
  nameWithType: ReliableSessionElement.MaxRetryCount
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.MaxRetryCount
- uid: System.ServiceModel.Configuration.ReliableSessionElement.MaxTransferWindowSize
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: MaxTransferWindowSize
  nameWithType: ReliableSessionElement.MaxTransferWindowSize
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.MaxTransferWindowSize
- uid: System.ServiceModel.Configuration.ReliableSessionElement.Ordered
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: Ordered
  nameWithType: ReliableSessionElement.Ordered
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.Ordered
- uid: System.ServiceModel.Configuration.ReliableSessionElement.Properties
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: Properties
  nameWithType: ReliableSessionElement.Properties
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.ServiceModel.Configuration.ReliableSessionElement.ReliableMessagingVersion
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: ReliableMessagingVersion
  nameWithType: ReliableSessionElement.ReliableMessagingVersion
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.ReliableMessagingVersion
- uid: System.ServiceModel.ReliableMessagingVersion
  parent: System.ServiceModel
  isExternal: false
  name: ReliableMessagingVersion
  nameWithType: ReliableMessagingVersion
  fullName: System.ServiceModel.ReliableMessagingVersion
- uid: System.ServiceModel.Configuration.ReliableSessionElement.#ctor*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: ReliableSessionElement
  nameWithType: ReliableSessionElement.ReliableSessionElement
- uid: System.ServiceModel.Configuration.ReliableSessionElement.AcknowledgementInterval*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: AcknowledgementInterval
  nameWithType: ReliableSessionElement.AcknowledgementInterval
- uid: System.ServiceModel.Configuration.ReliableSessionElement.ApplyConfiguration*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: ApplyConfiguration
  nameWithType: ReliableSessionElement.ApplyConfiguration
- uid: System.ServiceModel.Configuration.ReliableSessionElement.BindingElementType*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: BindingElementType
  nameWithType: ReliableSessionElement.BindingElementType
- uid: System.ServiceModel.Configuration.ReliableSessionElement.CopyFrom*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: CopyFrom
  nameWithType: ReliableSessionElement.CopyFrom
- uid: System.ServiceModel.Configuration.ReliableSessionElement.CreateBindingElement*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: CreateBindingElement
  nameWithType: ReliableSessionElement.CreateBindingElement
- uid: System.ServiceModel.Configuration.ReliableSessionElement.FlowControlEnabled*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: FlowControlEnabled
  nameWithType: ReliableSessionElement.FlowControlEnabled
- uid: System.ServiceModel.Configuration.ReliableSessionElement.InactivityTimeout*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: InactivityTimeout
  nameWithType: ReliableSessionElement.InactivityTimeout
- uid: System.ServiceModel.Configuration.ReliableSessionElement.InitializeFrom*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: InitializeFrom
  nameWithType: ReliableSessionElement.InitializeFrom
- uid: System.ServiceModel.Configuration.ReliableSessionElement.MaxPendingChannels*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: MaxPendingChannels
  nameWithType: ReliableSessionElement.MaxPendingChannels
- uid: System.ServiceModel.Configuration.ReliableSessionElement.MaxRetryCount*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: MaxRetryCount
  nameWithType: ReliableSessionElement.MaxRetryCount
- uid: System.ServiceModel.Configuration.ReliableSessionElement.MaxTransferWindowSize*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: MaxTransferWindowSize
  nameWithType: ReliableSessionElement.MaxTransferWindowSize
- uid: System.ServiceModel.Configuration.ReliableSessionElement.Ordered*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: Ordered
  nameWithType: ReliableSessionElement.Ordered
- uid: System.ServiceModel.Configuration.ReliableSessionElement.Properties*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: Properties
  nameWithType: ReliableSessionElement.Properties
- uid: System.ServiceModel.Configuration.ReliableSessionElement.ReliableMessagingVersion*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: ReliableMessagingVersion
  nameWithType: ReliableSessionElement.ReliableMessagingVersion
