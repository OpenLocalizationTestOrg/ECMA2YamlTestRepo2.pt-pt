### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Configuration.ReliableSessionElement
  id: ReliableSessionElement
  children:
  - System.ServiceModel.Configuration.ReliableSessionElement.#ctor
  - System.ServiceModel.Configuration.ReliableSessionElement.AcknowledgementInterval
  - System.ServiceModel.Configuration.ReliableSessionElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)
  - System.ServiceModel.Configuration.ReliableSessionElement.BindingElementType
  - System.ServiceModel.Configuration.ReliableSessionElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)
  - System.ServiceModel.Configuration.ReliableSessionElement.CreateBindingElement
  - System.ServiceModel.Configuration.ReliableSessionElement.FlowControlEnabled
  - System.ServiceModel.Configuration.ReliableSessionElement.InactivityTimeout
  - System.ServiceModel.Configuration.ReliableSessionElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)
  - System.ServiceModel.Configuration.ReliableSessionElement.MaxPendingChannels
  - System.ServiceModel.Configuration.ReliableSessionElement.MaxRetryCount
  - System.ServiceModel.Configuration.ReliableSessionElement.MaxTransferWindowSize
  - System.ServiceModel.Configuration.ReliableSessionElement.Ordered
  - System.ServiceModel.Configuration.ReliableSessionElement.Properties
  - System.ServiceModel.Configuration.ReliableSessionElement.ReliableMessagingVersion
  langs:
  - csharp
  name: ReliableSessionElement
  nameWithType: ReliableSessionElement
  fullName: System.ServiceModel.Configuration.ReliableSessionElement
  type: Class
  summary: "Representa a definição de configuração para mensagens WS-Reliable."
  remarks: "Quando este elemento é adicionado a um enlace personalizado, o canal resultante pode suportar exatamente-uma vez garantias de entrega."
  syntax:
    content: 'public sealed class ReliableSessionElement : System.ServiceModel.Configuration.BindingElementExtensionElement'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  - System.ServiceModel.Configuration.ServiceModelConfigurationElement
  - System.ServiceModel.Configuration.ServiceModelExtensionElement
  - System.ServiceModel.Configuration.BindingElementExtensionElement
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.ResetModified
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  - System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
  - System.ServiceModel.Configuration.ServiceModelExtensionElement.ConfigurationElementName
  - System.ServiceModel.Configuration.ServiceModelExtensionElement.IsModified
  - System.ServiceModel.Configuration.ServiceModelExtensionElement.Reset(System.Configuration.ConfigurationElement)
  - System.ServiceModel.Configuration.ServiceModelExtensionElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: ReliableSessionElement()
  nameWithType: ReliableSessionElement.ReliableSessionElement()
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.ReliableSessionElement()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ServiceModel.Configuration.ReliableSessionElement&quot;> </xref> classe."
  syntax:
    content: public ReliableSessionElement ();
    parameters: []
  overload: System.ServiceModel.Configuration.ReliableSessionElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.AcknowledgementInterval
  id: AcknowledgementInterval
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: AcknowledgementInterval
  nameWithType: ReliableSessionElement.AcknowledgementInterval
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.AcknowledgementInterval
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Obtém ou define o intervalo de tempo que um destino aguarda antes de enviar uma confirmação para a origem da mensagem em canais fidedignos criados pela fábrica."
  syntax:
    content: public TimeSpan AcknowledgementInterval { get; set; }
    return:
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>que especifica o intervalo de tempo que um serviço aguarda até enviar uma confirmação para a origem da mensagem.</xref:System.TimeSpan> O valor predefinido é de 2 segundos."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.AcknowledgementInterval*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)
  id: ApplyConfiguration(System.ServiceModel.Channels.BindingElement)
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: ApplyConfiguration(BindingElement)
  nameWithType: ReliableSessionElement.ApplyConfiguration(BindingElement)
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.ApplyConfiguration(BindingElement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Aplica-se o conteúdo de um elemento de enlace especificadas para esta secção de configuração do enlace."
  syntax:
    content: public override void ApplyConfiguration (System.ServiceModel.Channels.BindingElement bindingElement);
    parameters:
    - id: bindingElement
      type: System.ServiceModel.Channels.BindingElement
      description: "Um elemento de enlace."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.ApplyConfiguration*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.BindingElementType
  id: BindingElementType
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: BindingElementType
  nameWithType: ReliableSessionElement.BindingElementType
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.BindingElementType
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Obtém o tipo deste elemento de enlace."
  syntax:
    content: public override Type BindingElementType { get; }
    return:
      type: System.Type
      description: "O tipo deste elemento de enlace."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.BindingElementType*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)
  id: CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: CopyFrom(ServiceModelExtensionElement)
  nameWithType: ReliableSessionElement.CopyFrom(ServiceModelExtensionElement)
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.CopyFrom(ServiceModelExtensionElement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Copia o conteúdo da secção de configuração especificada para esta secção de configuração."
  syntax:
    content: public override void CopyFrom (System.ServiceModel.Configuration.ServiceModelExtensionElement from);
    parameters:
    - id: from
      type: System.ServiceModel.Configuration.ServiceModelExtensionElement
      description: "A secção de configuração para ser copiado."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.CopyFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.CreateBindingElement
  id: CreateBindingElement
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: CreateBindingElement()
  nameWithType: ReliableSessionElement.CreateBindingElement()
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.CreateBindingElement()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  syntax:
    content: protected override System.ServiceModel.Channels.BindingElement CreateBindingElement ();
    parameters: []
    return:
      type: System.ServiceModel.Channels.BindingElement
      description: "A adicionar."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.CreateBindingElement*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.FlowControlEnabled
  id: FlowControlEnabled
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: FlowControlEnabled
  nameWithType: ReliableSessionElement.FlowControlEnabled
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.FlowControlEnabled
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Obtém ou define um valor que indica se o controlo de fluxo avançadas, uma implementação específica da Microsoft do controlo de fluxo de mensagens WS-Reliable está ativado."
  syntax:
    content: public bool FlowControlEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se avançadas de controlo de fluxo, uma implementação específica da Microsoft do controlo de fluxo de mensagens WS-Reliable, é ativado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.FlowControlEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.InactivityTimeout
  id: InactivityTimeout
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: InactivityTimeout
  nameWithType: ReliableSessionElement.InactivityTimeout
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.InactivityTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Obtém ou define um <xref:System.TimeSpan>valor que especifica a duração máxima do canal permite ao outro interlocutor para não envie mensagens antes de originar falha no canal.</xref:System.TimeSpan>"
  remarks: "Atividade de num canal está definida como receber uma mensagem de infraestrutura ou de aplicação. Esta propriedade controla a quantidade máxima de tempo para manter uma sessão inativa alive. Se existir um período de tempo mais longo com nenhuma atividade, a sessão foi abortada, a infraestrutura e de falhas de canal."
  syntax:
    content: public TimeSpan InactivityTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>valor que especifica a duração máxima do canal permite ao outro interlocutor para não envie mensagens antes de originar falha no canal.</xref:System.TimeSpan> A predefinição é 00:10:00."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.InactivityTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)
  id: InitializeFrom(System.ServiceModel.Channels.BindingElement)
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: InitializeFrom(BindingElement)
  nameWithType: ReliableSessionElement.InitializeFrom(BindingElement)
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.InitializeFrom(BindingElement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  syntax:
    content: protected override void InitializeFrom (System.ServiceModel.Channels.BindingElement bindingElement);
    parameters:
    - id: bindingElement
      type: System.ServiceModel.Channels.BindingElement
      description: "A adicionar."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.InitializeFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.MaxPendingChannels
  id: MaxPendingChannels
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: MaxPendingChannels
  nameWithType: ReliableSessionElement.MaxPendingChannels
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.MaxPendingChannels
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Obtém ou define o número máximo de canais que podem aguardar serem aceites pelo serviço de escuta."
  remarks: "Este valor deve ser um número inteiro entre 1 e 16384, inclusivamente.       Existem canais pendentes quando estão a aguardar para ser aceite. Assim que esse limite é atingido, não existem canais são criados. Em vez disso, estes são colocados em pendentes modo até que este número ficar (ao aceitar pendentes canais). Este limite é de cada fábrica.       Quando o limiar for atingido e uma aplicação remota tenta estabelecer uma sessão fiável novo, o pedido é negado e a operação de abertura-lhe pedido que esta falhas. Este limite não é aplicável para o número de pendentes canais de saída."
  syntax:
    content: public int MaxPendingChannels { get; set; }
    return:
      type: System.Int32
      description: "O número máximo de canais que podem aguardar serem aceites pelo serviço de escuta. A predefinição é de 128."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.MaxPendingChannels*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.MaxRetryCount
  id: MaxRetryCount
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: MaxRetryCount
  nameWithType: ReliableSessionElement.MaxRetryCount
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.MaxRetryCount
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Obtém ou define o número máximo de vezes que um canal fidedigno tenta retransmitir uma mensagem não recebeu uma confirmação, chamando Send no canal subjacente para."
  remarks: "Este valor deve ser um número inteiro maior que zero. Se uma confirmação não foram recebida após a última retransmissão, as falhas de canal.       Uma mensagem é considerada a serem transferidos, se a entrega no destinatário é reconhecida por destinatário.       Se não foi recebida uma confirmação dentro de um determinado período de tempo de uma mensagem que foi transmitida a infraestrutura retransmits automaticamente a mensagem. A infraestrutura de tenta reenviar a mensagem para, no máximo, o número de vezes especificado por esta propriedade. Se uma confirmação não foram recebida após a última retransmissão, as falhas de canal.       A infraestrutura utiliza um algoritmo de término exponencial para determinar quando deve retransmitir, com base em vez reportadas round-trip média calculada. O tempo inicialmente comece em 1 segundo antes retransmissão e duplicando o atraso com cada tentativa, o que resulta em aproximadamente 8.5 minutos passar entre a primeira tentativa de transmissão e a última tentativa de retransmissão. A hora para a primeira tentativa de retransmissão é ajustada, de acordo com a hora reportadas round-trip calculada e o stretch resultante de tempo que demorar essas tentativas varia em conformidade. Isto permite que o tempo de retransmissão para adaptar-se dinamicamente para condições de rede diferentes."
  syntax:
    content: public int MaxRetryCount { get; set; }
    return:
      type: System.Int32
      description: "O número máximo de vezes que um canal fidedigno tenta retransmitir uma mensagem não recebeu uma confirmação, chamando para enviar no canal subjacente. O valor mínimo é 1; 20 máximo; e o valor predefinido é de 8."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.MaxRetryCount*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.MaxTransferWindowSize
  id: MaxTransferWindowSize
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: MaxTransferWindowSize
  nameWithType: ReliableSessionElement.MaxTransferWindowSize
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.MaxTransferWindowSize
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Obtém ou define o tamanho máximo da memória intermédia."
  remarks: "No cliente, esta propriedade define o tamanho máximo da memória intermédia utilizado por um canal fiável para armazenar mensagens ainda não confirmadas pelo recetor. A unidade da quota de é uma mensagem. Se a memória intermédia está cheia, mais operações de envio estão bloqueadas.       No recetor, esta propriedade define o tamanho máximo da memória intermédia utilizado pelo canal para armazenar mensagens a receber não ainda distribuídas à aplicação. Se a memória intermédia está cheia, mais mensagens silenciosamente são ignoradas pelo recetor e requerem retransmissão pelo cliente."
  syntax:
    content: public int MaxTransferWindowSize { get; set; }
    return:
      type: System.Int32
      description: "O tamanho máximo da memória intermédia. Os valores válidos são entre 1 a 4096, inclusive."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.MaxTransferWindowSize*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.Ordered
  id: Ordered
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: Ordered
  nameWithType: ReliableSessionElement.Ordered
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.Ordered
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Obtém ou define um valor que especifica se mensagens garantidas cheguem pela ordem que foram enviadas."
  syntax:
    content: public bool Ordered { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se as mensagens são garantidas cheguem pela ordem em que são enviadas; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se podem chegam mensagens fora de ordem. A predefinição é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.Ordered*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.Properties
  id: Properties
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: Properties
  nameWithType: ReliableSessionElement.Properties
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.Properties
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "A adicionar."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.ReliableSessionElement.ReliableMessagingVersion
  id: ReliableMessagingVersion
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  langs:
  - csharp
  name: ReliableMessagingVersion
  nameWithType: ReliableSessionElement.ReliableMessagingVersion
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.ReliableMessagingVersion
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Obtém ou define a versão do WS-ReliableMessaging especificado pelo elemento de configuração."
  remarks: 'Não existem atualmente duas versões do protocolo WS-ReliableMessaging suportado pelo [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]: WS-ReliableMessaging1.1 e WS-ReliableMessagingFebruary2005. A versão predefinida é WS ReliableMessagingFebruary2005.'
  syntax:
    content: public System.ServiceModel.ReliableMessagingVersion ReliableMessagingVersion { get; set; }
    return:
      type: System.ServiceModel.ReliableMessagingVersion
      description: "Uma instância derivado <xref href=&quot;System.ServiceModel.ReliableMessagingVersion&quot;> </xref> que representa a versão do protocolo WS-ReliableMessaging utilizada pelo elemento de configuração."
  overload: System.ServiceModel.Configuration.ReliableSessionElement.ReliableMessagingVersion*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Configuration.BindingElementExtensionElement
  isExternal: false
  name: System.ServiceModel.Configuration.BindingElementExtensionElement
- uid: System.ServiceModel.Configuration.ReliableSessionElement.#ctor
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: ReliableSessionElement()
  nameWithType: ReliableSessionElement.ReliableSessionElement()
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.ReliableSessionElement()
- uid: System.ServiceModel.Configuration.ReliableSessionElement.AcknowledgementInterval
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: AcknowledgementInterval
  nameWithType: ReliableSessionElement.AcknowledgementInterval
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.AcknowledgementInterval
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.Configuration.ReliableSessionElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: ApplyConfiguration(BindingElement)
  nameWithType: ReliableSessionElement.ApplyConfiguration(BindingElement)
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.ApplyConfiguration(BindingElement)
- uid: System.ServiceModel.Channels.BindingElement
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingElement
  nameWithType: BindingElement
  fullName: System.ServiceModel.Channels.BindingElement
- uid: System.ServiceModel.Configuration.ReliableSessionElement.BindingElementType
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: BindingElementType
  nameWithType: ReliableSessionElement.BindingElementType
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.BindingElementType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.Configuration.ReliableSessionElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: CopyFrom(ServiceModelExtensionElement)
  nameWithType: ReliableSessionElement.CopyFrom(ServiceModelExtensionElement)
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.CopyFrom(ServiceModelExtensionElement)
- uid: System.ServiceModel.Configuration.ServiceModelExtensionElement
  parent: System.ServiceModel.Configuration
  isExternal: false
  name: ServiceModelExtensionElement
  nameWithType: ServiceModelExtensionElement
  fullName: System.ServiceModel.Configuration.ServiceModelExtensionElement
- uid: System.ServiceModel.Configuration.ReliableSessionElement.CreateBindingElement
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: CreateBindingElement()
  nameWithType: ReliableSessionElement.CreateBindingElement()
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.CreateBindingElement()
- uid: System.ServiceModel.Configuration.ReliableSessionElement.FlowControlEnabled
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: FlowControlEnabled
  nameWithType: ReliableSessionElement.FlowControlEnabled
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.FlowControlEnabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Configuration.ReliableSessionElement.InactivityTimeout
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: InactivityTimeout
  nameWithType: ReliableSessionElement.InactivityTimeout
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.InactivityTimeout
- uid: System.ServiceModel.Configuration.ReliableSessionElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: InitializeFrom(BindingElement)
  nameWithType: ReliableSessionElement.InitializeFrom(BindingElement)
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.InitializeFrom(BindingElement)
- uid: System.ServiceModel.Configuration.ReliableSessionElement.MaxPendingChannels
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: MaxPendingChannels
  nameWithType: ReliableSessionElement.MaxPendingChannels
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.MaxPendingChannels
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.Configuration.ReliableSessionElement.MaxRetryCount
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: MaxRetryCount
  nameWithType: ReliableSessionElement.MaxRetryCount
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.MaxRetryCount
- uid: System.ServiceModel.Configuration.ReliableSessionElement.MaxTransferWindowSize
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: MaxTransferWindowSize
  nameWithType: ReliableSessionElement.MaxTransferWindowSize
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.MaxTransferWindowSize
- uid: System.ServiceModel.Configuration.ReliableSessionElement.Ordered
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: Ordered
  nameWithType: ReliableSessionElement.Ordered
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.Ordered
- uid: System.ServiceModel.Configuration.ReliableSessionElement.Properties
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: Properties
  nameWithType: ReliableSessionElement.Properties
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.ServiceModel.Configuration.ReliableSessionElement.ReliableMessagingVersion
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: ReliableMessagingVersion
  nameWithType: ReliableSessionElement.ReliableMessagingVersion
  fullName: System.ServiceModel.Configuration.ReliableSessionElement.ReliableMessagingVersion
- uid: System.ServiceModel.ReliableMessagingVersion
  parent: System.ServiceModel
  isExternal: false
  name: ReliableMessagingVersion
  nameWithType: ReliableMessagingVersion
  fullName: System.ServiceModel.ReliableMessagingVersion
- uid: System.ServiceModel.Configuration.ReliableSessionElement.#ctor*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: ReliableSessionElement
  nameWithType: ReliableSessionElement.ReliableSessionElement
- uid: System.ServiceModel.Configuration.ReliableSessionElement.AcknowledgementInterval*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: AcknowledgementInterval
  nameWithType: ReliableSessionElement.AcknowledgementInterval
- uid: System.ServiceModel.Configuration.ReliableSessionElement.ApplyConfiguration*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: ApplyConfiguration
  nameWithType: ReliableSessionElement.ApplyConfiguration
- uid: System.ServiceModel.Configuration.ReliableSessionElement.BindingElementType*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: BindingElementType
  nameWithType: ReliableSessionElement.BindingElementType
- uid: System.ServiceModel.Configuration.ReliableSessionElement.CopyFrom*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: CopyFrom
  nameWithType: ReliableSessionElement.CopyFrom
- uid: System.ServiceModel.Configuration.ReliableSessionElement.CreateBindingElement*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: CreateBindingElement
  nameWithType: ReliableSessionElement.CreateBindingElement
- uid: System.ServiceModel.Configuration.ReliableSessionElement.FlowControlEnabled*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: FlowControlEnabled
  nameWithType: ReliableSessionElement.FlowControlEnabled
- uid: System.ServiceModel.Configuration.ReliableSessionElement.InactivityTimeout*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: InactivityTimeout
  nameWithType: ReliableSessionElement.InactivityTimeout
- uid: System.ServiceModel.Configuration.ReliableSessionElement.InitializeFrom*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: InitializeFrom
  nameWithType: ReliableSessionElement.InitializeFrom
- uid: System.ServiceModel.Configuration.ReliableSessionElement.MaxPendingChannels*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: MaxPendingChannels
  nameWithType: ReliableSessionElement.MaxPendingChannels
- uid: System.ServiceModel.Configuration.ReliableSessionElement.MaxRetryCount*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: MaxRetryCount
  nameWithType: ReliableSessionElement.MaxRetryCount
- uid: System.ServiceModel.Configuration.ReliableSessionElement.MaxTransferWindowSize*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: MaxTransferWindowSize
  nameWithType: ReliableSessionElement.MaxTransferWindowSize
- uid: System.ServiceModel.Configuration.ReliableSessionElement.Ordered*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: Ordered
  nameWithType: ReliableSessionElement.Ordered
- uid: System.ServiceModel.Configuration.ReliableSessionElement.Properties*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: Properties
  nameWithType: ReliableSessionElement.Properties
- uid: System.ServiceModel.Configuration.ReliableSessionElement.ReliableMessagingVersion*
  parent: System.ServiceModel.Configuration.ReliableSessionElement
  isExternal: false
  name: ReliableMessagingVersion
  nameWithType: ReliableSessionElement.ReliableMessagingVersion
