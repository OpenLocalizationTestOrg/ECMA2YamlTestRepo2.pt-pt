### YamlMime:ManagedReference
items:
- uid: System.Text.DecoderExceptionFallbackBuffer
  id: DecoderExceptionFallbackBuffer
  children:
  - System.Text.DecoderExceptionFallbackBuffer.#ctor
  - System.Text.DecoderExceptionFallbackBuffer.Fallback(System.Byte[],System.Int32)
  - System.Text.DecoderExceptionFallbackBuffer.GetNextChar
  - System.Text.DecoderExceptionFallbackBuffer.MovePrevious
  - System.Text.DecoderExceptionFallbackBuffer.Remaining
  langs:
  - csharp
  name: DecoderExceptionFallbackBuffer
  nameWithType: DecoderExceptionFallbackBuffer
  fullName: System.Text.DecoderExceptionFallbackBuffer
  type: Class
  summary: "Throws <xref:System.Text.DecoderFallbackException> when an encoded input byte sequence cannot be converted to a decoded output character. This class cannot be inherited."
  remarks: "A common reason for an encoding or decoding operation to fail is if the underlying encoding class does not provide a mapping between a character and an equivalent byte sequence. If the input byte sequence cannot be converted to an output character, the decoding operation calls the [Fallback(Byte\\[\\],â€‚Int32)](assetId:///M:System.Text.DecoderExceptionFallbackBuffer.Fallback(System.Byte[],System.Int32)?qualifyHint=False&autoUpgrade=True) method, which throws <xref:System.Text.DecoderFallbackException>.  \n  \n The <xref:System.Text.DecoderFallbackBuffer?displayProperty=fullName> class, which represents a data buffer used in a decoding operation, is the base class for the DecoderExceptionFallbackBuffer class. However, instead of a data buffer, the DecoderExceptionFallbackBuffer class represents a standard behavior in which an exception is thrown if a decoding operation fails. No actual data buffer exists, and the members designed to manipulate such a buffer do no significant work."
  syntax:
    content: 'public sealed class DecoderExceptionFallbackBuffer : System.Text.DecoderFallbackBuffer'
  inheritance:
  - System.Text.DecoderFallbackBuffer
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Text.DecoderExceptionFallbackBuffer.#ctor
  id: '#ctor'
  parent: System.Text.DecoderExceptionFallbackBuffer
  langs:
  - csharp
  name: DecoderExceptionFallbackBuffer()
  nameWithType: DecoderExceptionFallbackBuffer.DecoderExceptionFallbackBuffer()
  fullName: System.Text.DecoderExceptionFallbackBuffer.DecoderExceptionFallbackBuffer()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "Initializes a new instance of the <xref href=&quot;System.Text.DecoderExceptionFallbackBuffer&quot;></xref> class."
  syntax:
    content: public DecoderExceptionFallbackBuffer ();
    parameters: []
  overload: System.Text.DecoderExceptionFallbackBuffer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Text.DecoderExceptionFallbackBuffer.Fallback(System.Byte[],System.Int32)
  id: Fallback(System.Byte[],System.Int32)
  parent: System.Text.DecoderExceptionFallbackBuffer
  langs:
  - csharp
  name: Fallback(Byte[],Int32)
  nameWithType: DecoderExceptionFallbackBuffer.Fallback(Byte[],Int32)
  fullName: System.Text.DecoderExceptionFallbackBuffer.Fallback(Byte[],Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "Throws <xref:System.Text.DecoderFallbackException> when the input byte sequence cannot be decoded. The nominal return value is not used."
  remarks: "The <xref:System.Text.Encoding.GetBytes%2A> and <xref:System.Text.Decoder.Convert%2A> methods call Fallback if they encounter an unknown byte in their input. In response, the Fallback method always throws <xref:System.Text.DecoderFallbackException> and displays the input data. The Fallback method nominally indicates whether an exception is thrown if an input byte sequence cannot be decoded."
  syntax:
    content: public override bool Fallback (byte[] bytesUnknown, int index);
    parameters:
    - id: bytesUnknown
      type: System.Byte[]
      description: "An input array of bytes."
    - id: index
      type: System.Int32
      description: "The index position of a byte in the input."
    return:
      type: System.Boolean
      description: "None. No value is returned because the Fallback method always throws an exception.       The nominal return value is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>. A return value is defined, although it is unchanging, because this method implements an abstract method."
  overload: System.Text.DecoderExceptionFallbackBuffer.Fallback*
  exceptions:
  - type: System.Text.DecoderFallbackException
    commentId: T:System.Text.DecoderFallbackException
    description: "This method always throws an exception that reports the value and index position of the input byte that cannot be decoded."
  platform:
  - net462
- uid: System.Text.DecoderExceptionFallbackBuffer.GetNextChar
  id: GetNextChar
  parent: System.Text.DecoderExceptionFallbackBuffer
  langs:
  - csharp
  name: GetNextChar()
  nameWithType: DecoderExceptionFallbackBuffer.GetNextChar()
  fullName: System.Text.DecoderExceptionFallbackBuffer.GetNextChar()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "Retrieves the next character in the exception data buffer."
  remarks: "Because <xref:System.Text.DecoderExceptionFallbackBuffer> has no actual exception data buffer, the GetNextChar method always returns the Unicode NULL character."
  syntax:
    content: public override char GetNextChar ();
    parameters: []
    return:
      type: System.Char
      description: "The return value is always the Unicode character NULL (U+0000).       A return value is defined, although it is unchanging, because this method implements an abstract method."
  overload: System.Text.DecoderExceptionFallbackBuffer.GetNextChar*
  exceptions: []
  platform:
  - net462
- uid: System.Text.DecoderExceptionFallbackBuffer.MovePrevious
  id: MovePrevious
  parent: System.Text.DecoderExceptionFallbackBuffer
  langs:
  - csharp
  name: MovePrevious()
  nameWithType: DecoderExceptionFallbackBuffer.MovePrevious()
  fullName: System.Text.DecoderExceptionFallbackBuffer.MovePrevious()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "Causes the next call to <xref:System.Text.DecoderExceptionFallbackBuffer.GetNextChar*> to access the exception data buffer character position that is prior to the current position."
  remarks: "Because <xref:System.Text.DecoderExceptionFallbackBuffer> has no actual exception data buffer, the MovePrevious method always returns `false`."
  syntax:
    content: public override bool MovePrevious ();
    parameters: []
    return:
      type: System.Boolean
      description: "The return value is always <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.       A return value is defined, although it is unchanging, because this method implements an abstract method."
  overload: System.Text.DecoderExceptionFallbackBuffer.MovePrevious*
  exceptions: []
  platform:
  - net462
- uid: System.Text.DecoderExceptionFallbackBuffer.Remaining
  id: Remaining
  parent: System.Text.DecoderExceptionFallbackBuffer
  langs:
  - csharp
  name: Remaining
  nameWithType: DecoderExceptionFallbackBuffer.Remaining
  fullName: System.Text.DecoderExceptionFallbackBuffer.Remaining
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Text
  summary: "Gets the number of characters in the current <xref href=&quot;System.Text.DecoderExceptionFallbackBuffer&quot;></xref> object that remain to be processed."
  remarks: "Because <xref:System.Text.DecoderExceptionFallbackBuffer> has no actual exception data buffer, the Remaining property always returns zero."
  syntax:
    content: public override int Remaining { get; }
    return:
      type: System.Int32
      description: "The return value is always zero.       A return value is defined, although it is unchanging, because this method implements an abstract method."
  overload: System.Text.DecoderExceptionFallbackBuffer.Remaining*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Text.DecoderFallbackBuffer
  isExternal: false
  name: System.Text.DecoderFallbackBuffer
- uid: System.Text.DecoderFallbackException
  isExternal: true
  name: System.Text.DecoderFallbackException
- uid: System.Text.DecoderExceptionFallbackBuffer.#ctor
  parent: System.Text.DecoderExceptionFallbackBuffer
  isExternal: false
  name: DecoderExceptionFallbackBuffer()
  nameWithType: DecoderExceptionFallbackBuffer.DecoderExceptionFallbackBuffer()
  fullName: System.Text.DecoderExceptionFallbackBuffer.DecoderExceptionFallbackBuffer()
- uid: System.Text.DecoderExceptionFallbackBuffer.Fallback(System.Byte[],System.Int32)
  parent: System.Text.DecoderExceptionFallbackBuffer
  isExternal: false
  name: Fallback(Byte[],Int32)
  nameWithType: DecoderExceptionFallbackBuffer.Fallback(Byte[],Int32)
  fullName: System.Text.DecoderExceptionFallbackBuffer.Fallback(Byte[],Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Text.DecoderExceptionFallbackBuffer.GetNextChar
  parent: System.Text.DecoderExceptionFallbackBuffer
  isExternal: false
  name: GetNextChar()
  nameWithType: DecoderExceptionFallbackBuffer.GetNextChar()
  fullName: System.Text.DecoderExceptionFallbackBuffer.GetNextChar()
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Text.DecoderExceptionFallbackBuffer.MovePrevious
  parent: System.Text.DecoderExceptionFallbackBuffer
  isExternal: false
  name: MovePrevious()
  nameWithType: DecoderExceptionFallbackBuffer.MovePrevious()
  fullName: System.Text.DecoderExceptionFallbackBuffer.MovePrevious()
- uid: System.Text.DecoderExceptionFallbackBuffer.Remaining
  parent: System.Text.DecoderExceptionFallbackBuffer
  isExternal: false
  name: Remaining
  nameWithType: DecoderExceptionFallbackBuffer.Remaining
  fullName: System.Text.DecoderExceptionFallbackBuffer.Remaining
- uid: System.Text.DecoderExceptionFallbackBuffer.#ctor*
  parent: System.Text.DecoderExceptionFallbackBuffer
  isExternal: false
  name: DecoderExceptionFallbackBuffer
  nameWithType: DecoderExceptionFallbackBuffer.DecoderExceptionFallbackBuffer
- uid: System.Text.DecoderExceptionFallbackBuffer.Fallback*
  parent: System.Text.DecoderExceptionFallbackBuffer
  isExternal: false
  name: Fallback
  nameWithType: DecoderExceptionFallbackBuffer.Fallback
- uid: System.Text.DecoderExceptionFallbackBuffer.GetNextChar*
  parent: System.Text.DecoderExceptionFallbackBuffer
  isExternal: false
  name: GetNextChar
  nameWithType: DecoderExceptionFallbackBuffer.GetNextChar
- uid: System.Text.DecoderExceptionFallbackBuffer.MovePrevious*
  parent: System.Text.DecoderExceptionFallbackBuffer
  isExternal: false
  name: MovePrevious
  nameWithType: DecoderExceptionFallbackBuffer.MovePrevious
- uid: System.Text.DecoderExceptionFallbackBuffer.Remaining*
  parent: System.Text.DecoderExceptionFallbackBuffer
  isExternal: false
  name: Remaining
  nameWithType: DecoderExceptionFallbackBuffer.Remaining
