### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.SymbolStore.ISymbolWriter
  id: ISymbolWriter
  children:
  - System.Diagnostics.SymbolStore.ISymbolWriter.Close
  - System.Diagnostics.SymbolStore.ISymbolWriter.CloseMethod
  - System.Diagnostics.SymbolStore.ISymbolWriter.CloseNamespace
  - System.Diagnostics.SymbolStore.ISymbolWriter.CloseScope(System.Int32)
  - System.Diagnostics.SymbolStore.ISymbolWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)
  - System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  - System.Diagnostics.SymbolStore.ISymbolWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  - System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  - System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  - System.Diagnostics.SymbolStore.ISymbolWriter.Initialize(System.IntPtr,System.String,System.Boolean)
  - System.Diagnostics.SymbolStore.ISymbolWriter.OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)
  - System.Diagnostics.SymbolStore.ISymbolWriter.OpenNamespace(System.String)
  - System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)
  - System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)
  - System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)
  - System.Diagnostics.SymbolStore.ISymbolWriter.SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])
  - System.Diagnostics.SymbolStore.ISymbolWriter.SetUnderlyingWriter(System.IntPtr)
  - System.Diagnostics.SymbolStore.ISymbolWriter.SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)
  - System.Diagnostics.SymbolStore.ISymbolWriter.UsingNamespace(System.String)
  langs:
  - csharp
  name: ISymbolWriter
  nameWithType: ISymbolWriter
  fullName: System.Diagnostics.SymbolStore.ISymbolWriter
  type: Interface
  summary: "Representa um escritor de símbolo para código gerido."
  remarks: "A interface ISymbolWriter fornece métodos que definem a documentos, pontos de sequência, lexical âmbitos e variáveis.      > [!NOTE] > Esta interface é o homólogo gerido do `ISymUnmanagedWriter` interface, o que é uma das interfaces de arquivo de símbolo de não gerido que fornece uma maneira de ler e escrever as informações de símbolo de depuração."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface ISymbolWriter
  implements: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.Close
  id: Close
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  langs:
  - csharp
  name: Close()
  nameWithType: ISymbolWriter.Close()
  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.Close()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "Fecha <xref href=&quot;System.Diagnostics.SymbolStore.ISymbolWriter&quot;> </xref> e consolida os símbolos para o arquivo de símbolo."
  remarks: "Após esta chamada <xref:System.Diagnostics.SymbolStore.ISymbolWriter>fica inválido para obter atualizações.</xref:System.Diagnostics.SymbolStore.ISymbolWriter>"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Diagnostics.SymbolStore.ISymbolWriter.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.CloseMethod
  id: CloseMethod
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  langs:
  - csharp
  name: CloseMethod()
  nameWithType: ISymbolWriter.CloseMethod()
  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.CloseMethod()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "Fecha o método atual."
  remarks: "Depois de um método estiver fechado, não é possível definir um símbolo de dentro da mesma."
  syntax:
    content: public void CloseMethod ();
    parameters: []
  overload: System.Diagnostics.SymbolStore.ISymbolWriter.CloseMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.CloseNamespace
  id: CloseNamespace
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  langs:
  - csharp
  name: CloseNamespace()
  nameWithType: ISymbolWriter.CloseNamespace()
  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.CloseNamespace()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "Fecha o espaço de nomes mais recente."
  syntax:
    content: public void CloseNamespace ();
    parameters: []
  overload: System.Diagnostics.SymbolStore.ISymbolWriter.CloseNamespace*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.CloseScope(System.Int32)
  id: CloseScope(System.Int32)
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  langs:
  - csharp
  name: CloseScope(Int32)
  nameWithType: ISymbolWriter.CloseScope(Int32)
  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.CloseScope(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "Fecha o âmbito lexical atual."
  remarks: "Depois de um âmbito estiver fechado, não é possível definir uma variável de dentro da mesma."
  syntax:
    content: public void CloseScope (int endOffset);
    parameters:
    - id: endOffset
      type: System.Int32
      description: "Os pontos de decorridos desde a última instrução no âmbito."
  overload: System.Diagnostics.SymbolStore.ISymbolWriter.CloseScope*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)
  id: DefineDocument(System.String,System.Guid,System.Guid,System.Guid)
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  langs:
  - csharp
  name: DefineDocument(String,Guid,Guid,Guid)
  nameWithType: ISymbolWriter.DefineDocument(String,Guid,Guid,Guid)
  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.DefineDocument(String,Guid,Guid,Guid)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "Define um documento de origem."
  syntax:
    content: public System.Diagnostics.SymbolStore.ISymbolDocumentWriter DefineDocument (string url, Guid language, Guid languageVendor, Guid documentType);
    parameters:
    - id: url
      type: System.String
      description: "O URL que identifica o documento."
    - id: language
      type: System.Guid
      description: "O idioma do documento. Este parâmetro pode ser <xref:System.Guid>.</xref:System.Guid>"
    - id: languageVendor
      type: System.Guid
      description: "A identidade do fornecedor para o idioma do documento. Este parâmetro pode ser <xref:System.Guid>.</xref:System.Guid>"
    - id: documentType
      type: System.Guid
      description: "O tipo do documento. Este parâmetro pode ser <xref:System.Guid>.</xref:System.Guid>"
    return:
      type: System.Diagnostics.SymbolStore.ISymbolDocumentWriter
      description: "O objecto que representa o documento."
  overload: System.Diagnostics.SymbolStore.ISymbolWriter.DefineDocument*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  id: DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  langs:
  - csharp
  name: DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
  nameWithType: ISymbolWriter.DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "Define um campo num tipo ou um campo global."
  remarks: "O método DefineField define uma única variável que não pertence a um método através da utilização de campos especificados em classes, os campos de bits e assim sucessivamente."
  syntax:
    content: public void DefineField (System.Diagnostics.SymbolStore.SymbolToken parent, string name, System.Reflection.FieldAttributes attributes, byte[] signature, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3);
    parameters:
    - id: parent
      type: System.Diagnostics.SymbolStore.SymbolToken
      description: "O tipo de metadados ou o método de token."
    - id: name
      type: System.String
      description: "O nome do campo."
    - id: attributes
      type: System.Reflection.FieldAttributes
      description: "Uma combinação bit a bit dos atributos de campo."
    - id: signature
      type: System.Byte[]
      description: "A assinatura de campo."
    - id: addrKind
      type: System.Diagnostics.SymbolStore.SymAddressKind
      description: "O endereço de tipos para `addr1` e `addr2`."
    - id: addr1
      type: System.Int32
      description: "O primeiro endereço para a especificação de campo."
    - id: addr2
      type: System.Int32
      description: "O segundo endereço para a especificação de campo."
    - id: addr3
      type: System.Int32
      description: "O terceiro endereço para a especificação de campo."
  overload: System.Diagnostics.SymbolStore.ISymbolWriter.DefineField*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  id: DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  langs:
  - csharp
  name: DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
  nameWithType: ISymbolWriter.DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "Define uma única variável global."
  syntax:
    content: public void DefineGlobalVariable (string name, System.Reflection.FieldAttributes attributes, byte[] signature, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3);
    parameters:
    - id: name
      type: System.String
      description: "O nome de variável global."
    - id: attributes
      type: System.Reflection.FieldAttributes
      description: "Uma combinação bit a bit dos atributos de variável global."
    - id: signature
      type: System.Byte[]
      description: "A assinatura de variável global."
    - id: addrKind
      type: System.Diagnostics.SymbolStore.SymAddressKind
      description: "O endereço de tipos para `addr1`, `addr2`, e `addr3`."
    - id: addr1
      type: System.Int32
      description: "O primeiro endereço para a especificação de variável global."
    - id: addr2
      type: System.Int32
      description: "O segundo endereço para a especificação de variável global."
    - id: addr3
      type: System.Int32
      description: "O terceiro endereço para a especificação de variável global."
  overload: System.Diagnostics.SymbolStore.ISymbolWriter.DefineGlobalVariable*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  langs:
  - csharp
  name: DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)
  nameWithType: ISymbolWriter.DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "Define uma única variável no âmbito lexical atual."
  remarks: "O `startOffset` e `endOffset` parâmetros são opcionais. Se o respetivo valor é zero, são ignoradas e a variável é definida em todo o âmbito de todo. Se o respetivo valor é diferente de zero, a variável se encontrem dentro os desvios de âmbito atual.       Pode chamar DefineLocalVariable várias vezes para uma variável com o mesmo nome que ocorre várias vezes em intervalos de deslocamento diferentes ao longo de um âmbito. (Neste caso, os desvios de início e de fim não pode sobrepor.)"
  syntax:
    content: public void DefineLocalVariable (string name, System.Reflection.FieldAttributes attributes, byte[] signature, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3, int startOffset, int endOffset);
    parameters:
    - id: name
      type: System.String
      description: "O nome da variável local."
    - id: attributes
      type: System.Reflection.FieldAttributes
      description: "Uma combinação bit a bit dos atributos variável locais."
    - id: signature
      type: System.Byte[]
      description: "A assinatura de variável local."
    - id: addrKind
      type: System.Diagnostics.SymbolStore.SymAddressKind
      description: "O endereço de tipos para `addr1`, `addr2`, e `addr3`."
    - id: addr1
      type: System.Int32
      description: "O primeiro endereço para a especificação de variável local."
    - id: addr2
      type: System.Int32
      description: "O segundo endereço para a especificação de variável local."
    - id: addr3
      type: System.Int32
      description: "O terceiro endereço para a especificação de variável local."
    - id: startOffset
      type: System.Int32
      description: "O desvio de início para a variável. Se este parâmetro for zero, é ignorada e a variável é definida em todo o âmbito de todo. Se o parâmetro é diferente de zero, a variável se encontrem dentro os desvios de âmbito atual."
    - id: endOffset
      type: System.Int32
      description: "O desvio de fim da variável. Se este parâmetro for zero, é ignorada e a variável é definida em todo o âmbito de todo. Se o parâmetro é diferente de zero, a variável se encontrem dentro os desvios de âmbito atual."
  overload: System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  id: DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  langs:
  - csharp
  name: DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)
  nameWithType: ISymbolWriter.DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "Define um único parâmetro do método atual. O tipo de cada parâmetro é obtido a partir da respetiva posição dentro de assinatura do método."
  remarks: "Se os parâmetros são definidos nos metadados para um determinado método, não dispõe de defini-las novamente com as chamadas para este método. Leitores de símbolo tem de verificar estes nos metadados normal primeiro e, em seguida, utilizar o arquivo de símbolo."
  syntax:
    content: public void DefineParameter (string name, System.Reflection.ParameterAttributes attributes, int sequence, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3);
    parameters:
    - id: name
      type: System.String
      description: "O nome do parâmetro."
    - id: attributes
      type: System.Reflection.ParameterAttributes
      description: "Uma combinação bit a bit dos atributos de parâmetro."
    - id: sequence
      type: System.Int32
      description: "A assinatura de parâmetro."
    - id: addrKind
      type: System.Diagnostics.SymbolStore.SymAddressKind
      description: "O endereço de tipos para `addr1`, `addr2`, e `addr3`."
    - id: addr1
      type: System.Int32
      description: "O primeiro endereço para a especificação do parâmetro."
    - id: addr2
      type: System.Int32
      description: "O segundo endereço para a especificação do parâmetro."
    - id: addr3
      type: System.Int32
      description: "O terceiro endereço para a especificação do parâmetro."
  overload: System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  id: DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  langs:
  - csharp
  name: DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])
  nameWithType: ISymbolWriter.DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])
  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "Define um grupo de pontos da sequência o método atual."
  remarks: "Cada linha e cada coluna define o início de uma instrução num método. As matrizes de devem ser ordenadas por ordem de desvios ascendente. O desvio é sempre o deslocamento desde o início do método, em bytes."
  syntax:
    content: public void DefineSequencePoints (System.Diagnostics.SymbolStore.ISymbolDocumentWriter document, int[] offsets, int[] lines, int[] columns, int[] endLines, int[] endColumns);
    parameters:
    - id: document
      type: System.Diagnostics.SymbolStore.ISymbolDocumentWriter
      description: "O objeto de documento para o qual estão a ser definidos os pontos de sequência."
    - id: offsets
      type: System.Int32[]
      description: "Os desvios de ponto de sequência é medido desde o início dos métodos."
    - id: lines
      type: System.Int32[]
      description: "As linhas de documentos para os pontos de sequência."
    - id: columns
      type: System.Int32[]
      description: "As posições de documentos para os pontos de sequência."
    - id: endLines
      type: System.Int32[]
      description: "As linhas de fim do documento para os pontos de sequência."
    - id: endColumns
      type: System.Int32[]
      description: "As posições de fim do documento para os pontos de sequência."
  overload: System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.Initialize(System.IntPtr,System.String,System.Boolean)
  id: Initialize(System.IntPtr,System.String,System.Boolean)
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  langs:
  - csharp
  name: Initialize(IntPtr,String,Boolean)
  nameWithType: ISymbolWriter.Initialize(IntPtr,String,Boolean)
  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.Initialize(IntPtr,String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "Define a interface de emitter metadados para associar um escritor."
  remarks: "Inicializar também define o nome de ficheiro de saída onde os símbolos de depuração são escritos. Este método pode ser chamado uma vez e tem de ser chamado antes de quaisquer outros métodos de escritor."
  syntax:
    content: public void Initialize (IntPtr emitter, string filename, bool fFullBuild);
    parameters:
    - id: emitter
      type: System.IntPtr
      description: "A interface de emitter de metadados."
    - id: filename
      type: System.String
      description: "O nome de ficheiro para o qual os símbolos de depuração são escritos. Alguns escritores necessitam de um nome de ficheiro e outros não. Se não for especificado um nome de ficheiro para um escritor que utilize nomes de ficheiro, este parâmetro é ignorado."
    - id: fFullBuild
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Indica a que se trata de uma reconstrução completa; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> indica que se trata de uma compilação incremental."
  overload: System.Diagnostics.SymbolStore.ISymbolWriter.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)
  id: OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  langs:
  - csharp
  name: OpenMethod(SymbolToken)
  nameWithType: ISymbolWriter.OpenMethod(SymbolToken)
  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.OpenMethod(SymbolToken)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "Abre-se um método para colocar as informações de símbolo em."
  remarks: "O método especificado torna-se o método atual para chamadas definir a sequência pontos, parâmetros e lexical âmbitos. Não há um âmbito lexical implícito à volta o método completo. Voltar a abrir um método que foi anteriormente fechado apague qualquer símbolos definidos anteriormente para o método."
  syntax:
    content: public void OpenMethod (System.Diagnostics.SymbolStore.SymbolToken method);
    parameters:
    - id: method
      type: System.Diagnostics.SymbolStore.SymbolToken
      description: "O token de metadados para o método de ser aberta."
  overload: System.Diagnostics.SymbolStore.ISymbolWriter.OpenMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.OpenNamespace(System.String)
  id: OpenNamespace(System.String)
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  langs:
  - csharp
  name: OpenNamespace(String)
  nameWithType: ISymbolWriter.OpenNamespace(String)
  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.OpenNamespace(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "É aberto um novo espaço de nomes."
  remarks: "Chame este método antes de definir métodos ou variáveis que existe num espaço de nomes. Espaços de nomes podem ser aninhados."
  syntax:
    content: public void OpenNamespace (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome do novo espaço de nomes."
  overload: System.Diagnostics.SymbolStore.ISymbolWriter.OpenNamespace*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)
  id: OpenScope(System.Int32)
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  langs:
  - csharp
  name: OpenScope(Int32)
  nameWithType: ISymbolWriter.OpenScope(Int32)
  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "É aberto um novo âmbito lexical no método atual."
  remarks: "Este âmbito torna-se o novo âmbito atual e é feito por uma pilha de âmbitos. Âmbitos tem formam uma hierarquia. Colaterais não são permitidas sobrepor.       Os identificadores de âmbito são válidos apenas no método atual."
  syntax:
    content: public int OpenScope (int startOffset);
    parameters:
    - id: startOffset
      type: System.Int32
      description: "O desvio em bytes, a partir do início do método para a primeira instrução no âmbito lexical."
    return:
      type: System.Int32
      description: "Um identificador de âmbito opaco que pode ser utilizado com <> </> *> para definir os desvios de início e de fim de um âmbito numa altura posterior. Neste caso, os desvios transmitido a OpenScope e <> </> *> são ignorados. Um identificador de âmbito só é válido no método atual."
  overload: System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)
  id: SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  langs:
  - csharp
  name: SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)
  nameWithType: ISymbolWriter.SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "Especifica o verdadeiro início e fim de um método dentro de um ficheiro de origem. Utilize SetMethodSourceRange para especificar o grau de um método, independentemente dos pontos de sequência que existem dentro do método."
  syntax:
    content: public void SetMethodSourceRange (System.Diagnostics.SymbolStore.ISymbolDocumentWriter startDoc, int startLine, int startColumn, System.Diagnostics.SymbolStore.ISymbolDocumentWriter endDoc, int endLine, int endColumn);
    parameters:
    - id: startDoc
      type: System.Diagnostics.SymbolStore.ISymbolDocumentWriter
      description: "O documento que contém a posição inicial."
    - id: startLine
      type: System.Int32
      description: "O número de linha inicial."
    - id: startColumn
      type: System.Int32
      description: "A coluna de partida."
    - id: endDoc
      type: System.Diagnostics.SymbolStore.ISymbolDocumentWriter
      description: "O documento que contém a posição final."
    - id: endLine
      type: System.Int32
      description: "O número de linha final."
    - id: endColumn
      type: System.Int32
      description: "O número de coluna final."
  overload: System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)
  id: SetScopeRange(System.Int32,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  langs:
  - csharp
  name: SetScopeRange(Int32,Int32,Int32)
  nameWithType: ISymbolWriter.SetScopeRange(Int32,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "Define o intervalo de desfasamento para o âmbito lexical especificado."
  syntax:
    content: public void SetScopeRange (int scopeID, int startOffset, int endOffset);
    parameters:
    - id: scopeID
      type: System.Int32
      description: "O identificador do âmbito lexical."
    - id: startOffset
      type: System.Int32
      description: "O deslocamento de byte do início de âmbito lexical."
    - id: endOffset
      type: System.Int32
      description: "O deslocamento de byte do final do âmbito lexical."
  overload: System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])
  id: SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  langs:
  - csharp
  name: SetSymAttribute(SymbolToken,String,Byte[])
  nameWithType: ISymbolWriter.SetSymAttribute(SymbolToken,String,Byte[])
  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.SetSymAttribute(SymbolToken,String,Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "Define um atributo quando o nome de atributo e o valor do atributo."
  remarks: "O método SetSymAttribute só está associado à informações simbólicas e não é um atributo personalizado de metadados."
  syntax:
    content: public void SetSymAttribute (System.Diagnostics.SymbolStore.SymbolToken parent, string name, byte[] data);
    parameters:
    - id: parent
      type: System.Diagnostics.SymbolStore.SymbolToken
      description: "O token de metadados para as quais o atributo é definido."
    - id: name
      type: System.String
      description: "O nome de atributo."
    - id: data
      type: System.Byte[]
      description: "O valor do atributo."
  overload: System.Diagnostics.SymbolStore.ISymbolWriter.SetSymAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.SetUnderlyingWriter(System.IntPtr)
  id: SetUnderlyingWriter(System.IntPtr)
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  langs:
  - csharp
  name: SetUnderlyingWriter(IntPtr)
  nameWithType: ISymbolWriter.SetUnderlyingWriter(IntPtr)
  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.SetUnderlyingWriter(IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "Define o subjacente <xref uid=&quot;langword_csharp_ISymUnmanagedWriter&quot; name=&quot;ISymUnmanagedWriter&quot; href=&quot;&quot;> </xref> (correspondente não gerido interface) que um gerido <xref href=&quot;System.Diagnostics.SymbolStore.ISymbolWriter&quot;> </xref> utiliza para emitir símbolos."
  remarks: "Subjacentes `ISymUnmanagedWriter` (a interface não gerida correspondente) representa um escritor de símbolo para código gerido. A interface fornece métodos para definir a documentos, pontos de sequência, lexical âmbitos e variáveis."
  syntax:
    content: public void SetUnderlyingWriter (IntPtr underlyingWriter);
    parameters:
    - id: underlyingWriter
      type: System.IntPtr
      description: "Um apontador para código que representa o escritor subjacente."
  overload: System.Diagnostics.SymbolStore.ISymbolWriter.SetUnderlyingWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)
  id: SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  langs:
  - csharp
  name: SetUserEntryPoint(SymbolToken)
  nameWithType: ISymbolWriter.SetUserEntryPoint(SymbolToken)
  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.SetUserEntryPoint(SymbolToken)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "Identifica o método definido pelo utilizador como o ponto de entrada para o módulo atual."
  remarks: "Isto é normalmente o método principal, em vez dos stubs gerado pelo compilador antes o método principal."
  syntax:
    content: public void SetUserEntryPoint (System.Diagnostics.SymbolStore.SymbolToken entryMethod);
    parameters:
    - id: entryMethod
      type: System.Diagnostics.SymbolStore.SymbolToken
      description: "O token de metadados para o método que é a entrada de utilizador do ponto."
  overload: System.Diagnostics.SymbolStore.ISymbolWriter.SetUserEntryPoint*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.UsingNamespace(System.String)
  id: UsingNamespace(System.String)
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  langs:
  - csharp
  name: UsingNamespace(String)
  nameWithType: ISymbolWriter.UsingNamespace(String)
  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.UsingNamespace(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics.SymbolStore
  summary: "Especifica que o nome de espaço de nomes especificado, completamente qualificado é utilizado no âmbito lexical aberto."
  remarks: "Fechar o âmbito atual impede que este âmbito de utilizar o espaço de nomes. O espaço de nomes continuará a ser utilizada em todos os âmbitos que herdam o âmbito de abrir atual."
  syntax:
    content: public void UsingNamespace (string fullName);
    parameters:
    - id: fullName
      type: System.String
      description: "O nome completamente qualificado do espaço de nomes."
  overload: System.Diagnostics.SymbolStore.ISymbolWriter.UsingNamespace*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.Close
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  isExternal: false
  name: Close()
  nameWithType: ISymbolWriter.Close()
  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.Close()
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.CloseMethod
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  isExternal: false
  name: CloseMethod()
  nameWithType: ISymbolWriter.CloseMethod()
  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.CloseMethod()
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.CloseNamespace
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  isExternal: false
  name: CloseNamespace()
  nameWithType: ISymbolWriter.CloseNamespace()
  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.CloseNamespace()
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.CloseScope(System.Int32)
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  isExternal: false
  name: CloseScope(Int32)
  nameWithType: ISymbolWriter.CloseScope(Int32)
  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.CloseScope(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  isExternal: false
  name: DefineDocument(String,Guid,Guid,Guid)
  nameWithType: ISymbolWriter.DefineDocument(String,Guid,Guid,Guid)
  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.DefineDocument(String,Guid,Guid,Guid)
- uid: System.Diagnostics.SymbolStore.ISymbolDocumentWriter
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolDocumentWriter
  nameWithType: ISymbolDocumentWriter
  fullName: System.Diagnostics.SymbolStore.ISymbolDocumentWriter
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  isExternal: false
  name: DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
  nameWithType: ISymbolWriter.DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
- uid: System.Diagnostics.SymbolStore.SymbolToken
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: SymbolToken
  nameWithType: SymbolToken
  fullName: System.Diagnostics.SymbolStore.SymbolToken
- uid: System.Reflection.FieldAttributes
  parent: System.Reflection
  isExternal: true
  name: FieldAttributes
  nameWithType: FieldAttributes
  fullName: System.Reflection.FieldAttributes
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.SymbolStore.SymAddressKind
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: SymAddressKind
  nameWithType: SymAddressKind
  fullName: System.Diagnostics.SymbolStore.SymAddressKind
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  isExternal: false
  name: DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
  nameWithType: ISymbolWriter.DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  isExternal: false
  name: DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)
  nameWithType: ISymbolWriter.DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  isExternal: false
  name: DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)
  nameWithType: ISymbolWriter.DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)
- uid: System.Reflection.ParameterAttributes
  parent: System.Reflection
  isExternal: true
  name: ParameterAttributes
  nameWithType: ParameterAttributes
  fullName: System.Reflection.ParameterAttributes
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  isExternal: false
  name: DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])
  nameWithType: ISymbolWriter.DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])
  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.Initialize(System.IntPtr,System.String,System.Boolean)
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  isExternal: false
  name: Initialize(IntPtr,String,Boolean)
  nameWithType: ISymbolWriter.Initialize(IntPtr,String,Boolean)
  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.Initialize(IntPtr,String,Boolean)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  isExternal: false
  name: OpenMethod(SymbolToken)
  nameWithType: ISymbolWriter.OpenMethod(SymbolToken)
  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.OpenMethod(SymbolToken)
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.OpenNamespace(System.String)
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  isExternal: false
  name: OpenNamespace(String)
  nameWithType: ISymbolWriter.OpenNamespace(String)
  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.OpenNamespace(String)
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  isExternal: false
  name: OpenScope(Int32)
  nameWithType: ISymbolWriter.OpenScope(Int32)
  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(Int32)
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  isExternal: false
  name: SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)
  nameWithType: ISymbolWriter.SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  isExternal: false
  name: SetScopeRange(Int32,Int32,Int32)
  nameWithType: ISymbolWriter.SetScopeRange(Int32,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange(Int32,Int32,Int32)
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  isExternal: false
  name: SetSymAttribute(SymbolToken,String,Byte[])
  nameWithType: ISymbolWriter.SetSymAttribute(SymbolToken,String,Byte[])
  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.SetSymAttribute(SymbolToken,String,Byte[])
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.SetUnderlyingWriter(System.IntPtr)
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  isExternal: false
  name: SetUnderlyingWriter(IntPtr)
  nameWithType: ISymbolWriter.SetUnderlyingWriter(IntPtr)
  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.SetUnderlyingWriter(IntPtr)
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  isExternal: false
  name: SetUserEntryPoint(SymbolToken)
  nameWithType: ISymbolWriter.SetUserEntryPoint(SymbolToken)
  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.SetUserEntryPoint(SymbolToken)
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.UsingNamespace(System.String)
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  isExternal: false
  name: UsingNamespace(String)
  nameWithType: ISymbolWriter.UsingNamespace(String)
  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.UsingNamespace(String)
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.Close*
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  isExternal: false
  name: Close
  nameWithType: ISymbolWriter.Close
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.CloseMethod*
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  isExternal: false
  name: CloseMethod
  nameWithType: ISymbolWriter.CloseMethod
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.CloseNamespace*
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  isExternal: false
  name: CloseNamespace
  nameWithType: ISymbolWriter.CloseNamespace
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.CloseScope*
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  isExternal: false
  name: CloseScope
  nameWithType: ISymbolWriter.CloseScope
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.DefineDocument*
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  isExternal: false
  name: DefineDocument
  nameWithType: ISymbolWriter.DefineDocument
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.DefineField*
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  isExternal: false
  name: DefineField
  nameWithType: ISymbolWriter.DefineField
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.DefineGlobalVariable*
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  isExternal: false
  name: DefineGlobalVariable
  nameWithType: ISymbolWriter.DefineGlobalVariable
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable*
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  isExternal: false
  name: DefineLocalVariable
  nameWithType: ISymbolWriter.DefineLocalVariable
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter*
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  isExternal: false
  name: DefineParameter
  nameWithType: ISymbolWriter.DefineParameter
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints*
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  isExternal: false
  name: DefineSequencePoints
  nameWithType: ISymbolWriter.DefineSequencePoints
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.Initialize*
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  isExternal: false
  name: Initialize
  nameWithType: ISymbolWriter.Initialize
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.OpenMethod*
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  isExternal: false
  name: OpenMethod
  nameWithType: ISymbolWriter.OpenMethod
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.OpenNamespace*
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  isExternal: false
  name: OpenNamespace
  nameWithType: ISymbolWriter.OpenNamespace
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope*
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  isExternal: false
  name: OpenScope
  nameWithType: ISymbolWriter.OpenScope
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange*
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  isExternal: false
  name: SetMethodSourceRange
  nameWithType: ISymbolWriter.SetMethodSourceRange
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange*
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  isExternal: false
  name: SetScopeRange
  nameWithType: ISymbolWriter.SetScopeRange
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.SetSymAttribute*
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  isExternal: false
  name: SetSymAttribute
  nameWithType: ISymbolWriter.SetSymAttribute
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.SetUnderlyingWriter*
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  isExternal: false
  name: SetUnderlyingWriter
  nameWithType: ISymbolWriter.SetUnderlyingWriter
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.SetUserEntryPoint*
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  isExternal: false
  name: SetUserEntryPoint
  nameWithType: ISymbolWriter.SetUserEntryPoint
- uid: System.Diagnostics.SymbolStore.ISymbolWriter.UsingNamespace*
  parent: System.Diagnostics.SymbolStore.ISymbolWriter
  isExternal: false
  name: UsingNamespace
  nameWithType: ISymbolWriter.UsingNamespace
