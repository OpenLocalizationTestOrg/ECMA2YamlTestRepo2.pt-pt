### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler
  id: WindowsUserNameSecurityTokenHandler
  children:
  - System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.#ctor
  - System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.CanValidateToken
  - System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  langs:
  - csharp
  name: WindowsUserNameSecurityTokenHandler
  nameWithType: WindowsUserNameSecurityTokenHandler
  fullName: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler
  type: Class
  summary: "Defines a <xref href=&quot;System.IdentityModel.Tokens.SecurityTokenHandler&quot;></xref> that processes Windows Username tokens."
  remarks: "The WindowsUserNameSecurityTokenHandler class extends the <xref:System.IdentityModel.Tokens.UserNameSecurityTokenHandler> class to add validation of tokens."
  syntax:
    content: 'public class WindowsUserNameSecurityTokenHandler : System.IdentityModel.Tokens.UserNameSecurityTokenHandler'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityTokenHandler
  - System.IdentityModel.Tokens.UserNameSecurityTokenHandler
  implements: []
  inheritedMembers:
  - System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)
  - System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.SecurityTokenHandler.Configuration
  - System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection
  - System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)
  - System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)
  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)
  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)
  - System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanWriteToken
  - System.IdentityModel.Tokens.UserNameSecurityTokenHandler.GetTokenTypeIdentifiers
  - System.IdentityModel.Tokens.UserNameSecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.UserNameSecurityTokenHandler.RetainPassword
  - System.IdentityModel.Tokens.UserNameSecurityTokenHandler.TokenType
  - System.IdentityModel.Tokens.UserNameSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  platform:
  - net462
- uid: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler
  langs:
  - csharp
  name: WindowsUserNameSecurityTokenHandler()
  nameWithType: WindowsUserNameSecurityTokenHandler.WindowsUserNameSecurityTokenHandler()
  fullName: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.WindowsUserNameSecurityTokenHandler()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Initializes a new instance of the <xref href=&quot;System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler&quot;></xref> class."
  syntax:
    content: public WindowsUserNameSecurityTokenHandler ();
    parameters: []
  overload: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.CanValidateToken
  id: CanValidateToken
  parent: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler
  langs:
  - csharp
  name: CanValidateToken
  nameWithType: WindowsUserNameSecurityTokenHandler.CanValidateToken
  fullName: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.CanValidateToken
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets a value that indicates whether this handler supports validation of tokens of type <xref href=&quot;System.IdentityModel.Tokens.UserNameSecurityToken&quot;></xref>."
  syntax:
    content: public override bool CanValidateToken { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the handler supports validation of tokens of type <xref href=&quot;System.IdentityModel.Tokens.UserNameSecurityToken&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.CanValidateToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  id: ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler
  langs:
  - csharp
  name: ValidateToken(SecurityToken)
  nameWithType: WindowsUserNameSecurityTokenHandler.ValidateToken(SecurityToken)
  fullName: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.ValidateToken(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Validates the specified token and returns its claims."
  syntax:
    content: public override System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity> ValidateToken (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "The token to validate. An instance of <xref href=&quot;System.IdentityModel.Tokens.UserNameSecurityToken&quot;></xref>."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}
      description: "The identities that are contained in the token."
  overload: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.ValidateToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>token</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>token</code> is not assignable from <xref href=\"System.IdentityModel.Tokens.UserNameSecurityToken\"></xref>.  \n  \n -or-  \n  \n The <xref:System.IdentityModel.Tokens.UserNameSecurityToken.UserName*> property of the specified token is not of the form `user\\domain`."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IdentityModel.Tokens.SecurityTokenValidationException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenValidationException
    description: "LogonUser using the specified token failed."
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.UserNameSecurityTokenHandler
  isExternal: false
  name: System.IdentityModel.Tokens.UserNameSecurityTokenHandler
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IdentityModel.Tokens.SecurityTokenValidationException
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenValidationException
  nameWithType: SecurityTokenValidationException
  fullName: System.IdentityModel.Tokens.SecurityTokenValidationException
- uid: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.#ctor
  parent: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler
  isExternal: false
  name: WindowsUserNameSecurityTokenHandler()
  nameWithType: WindowsUserNameSecurityTokenHandler.WindowsUserNameSecurityTokenHandler()
  fullName: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.WindowsUserNameSecurityTokenHandler()
- uid: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.CanValidateToken
  parent: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler
  isExternal: false
  name: CanValidateToken
  nameWithType: WindowsUserNameSecurityTokenHandler.CanValidateToken
  fullName: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.CanValidateToken
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler
  isExternal: false
  name: ValidateToken(SecurityToken)
  nameWithType: WindowsUserNameSecurityTokenHandler.ValidateToken(SecurityToken)
  fullName: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.ValidateToken(SecurityToken)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<ClaimsIdentity>
  nameWithType: ReadOnlyCollection<ClaimsIdentity>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Security.Claims.ClaimsIdentity>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.ClaimsIdentity
    name: ClaimsIdentity
    nameWithType: ClaimsIdentity
    fullName: ClaimsIdentity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.#ctor*
  parent: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler
  isExternal: false
  name: WindowsUserNameSecurityTokenHandler
  nameWithType: WindowsUserNameSecurityTokenHandler.WindowsUserNameSecurityTokenHandler
- uid: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.CanValidateToken*
  parent: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler
  isExternal: false
  name: CanValidateToken
  nameWithType: WindowsUserNameSecurityTokenHandler.CanValidateToken
- uid: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.ValidateToken*
  parent: System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler
  isExternal: false
  name: ValidateToken
  nameWithType: WindowsUserNameSecurityTokenHandler.ValidateToken
