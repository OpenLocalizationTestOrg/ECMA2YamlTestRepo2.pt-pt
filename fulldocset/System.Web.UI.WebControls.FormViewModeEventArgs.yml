### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.FormViewModeEventArgs
  id: FormViewModeEventArgs
  children:
  - System.Web.UI.WebControls.FormViewModeEventArgs.#ctor(System.Web.UI.WebControls.FormViewMode,System.Boolean)
  - System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit
  - System.Web.UI.WebControls.FormViewModeEventArgs.NewMode
  langs:
  - csharp
  name: FormViewModeEventArgs
  nameWithType: FormViewModeEventArgs
  fullName: System.Web.UI.WebControls.FormViewModeEventArgs
  type: Class
  summary: "Disponibiliza dados para o <xref href=&quot;System.Web.UI.WebControls.FormView.ModeChanging&quot;> </xref> eventos."
  remarks: "O <xref:System.Web.UI.WebControls.FormView.ModeChanging>o evento é gerado quando um <xref:System.Web.UI.WebControls.FormView>controlo tenta alternar entre editar, insert e modo só de leitura, mas antes do modo, na verdade, as alterações.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ModeChanging> Isto permite-lhe fornecer um método de processamento de eventos que executa uma rotina personalizada, como configurar o <xref:System.Web.UI.WebControls.FormView>controlar para um modo específico ou cancelar a alteração do modo, sempre que este evento ocorre.</xref:System.Web.UI.WebControls.FormView>       A <xref:System.Web.UI.WebControls.FormViewInsertEventArgs>é transmitido um objeto para o método de processamento de eventos, que lhe permite determinar o modo a que o <xref:System.Web.UI.WebControls.FormView>controlo está a alterar, para determinar se o <xref:System.Web.UI.WebControls.FormView.ModeChanging>evento foi gerado em resultado do utilizador cancelar uma operação de edição ou inserir ou para indicar que a alteração do modo deve ser cancelada.</xref:System.Web.UI.WebControls.FormView.ModeChanging> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormViewInsertEventArgs> Para determinar o modo de novo, utilize o <xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A>propriedade.</xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A> Também pode utilizar o <xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A>propriedade programaticamente especificar um modo para o qual pretende alterar defini-la como uma das alternativo o <xref:System.Web.UI.WebControls.FormViewMode>valores de enumeração.</xref:System.Web.UI.WebControls.FormViewMode> </xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A> Utilize o <xref:System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit%2A>propriedade para determinar se este evento foi gerado em resultado do utilizador cancelar uma edição ou a operação de inserção.</xref:System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit%2A> Para cancelar a alteração do modo, defina o <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>propriedade `true`.</xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       Para obter mais informações sobre como lidar com eventos, consulte [NIB: consumir eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Para obter uma lista de valores de propriedade inicial para uma instância da classe FormViewModeEventArgs, consulte o <xref:System.Web.UI.WebControls.FormViewModeEventArgs.%23ctor%2A>construtor.</xref:System.Web.UI.WebControls.FormViewModeEventArgs.%23ctor%2A>"
  example:
  - "The following example demonstrates how to use the FormViewModeEventArgs object passed to the event-handling method for the <xref:System.Web.UI.WebControls.FormView.ModeChanging> event to hide the pager row when the <xref:System.Web.UI.WebControls.FormView> control transitions to edit mode.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[FormViewModeEventArgs#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_17_1.aspx)]\n [!code-cs[FormViewModeEventArgs#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_17_1.aspx)]"
  syntax:
    content: 'public class FormViewModeEventArgs : System.ComponentModel.CancelEventArgs'
  inheritance:
  - System.ComponentModel.CancelEventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewModeEventArgs.#ctor(System.Web.UI.WebControls.FormViewMode,System.Boolean)
  id: '#ctor(System.Web.UI.WebControls.FormViewMode,System.Boolean)'
  parent: System.Web.UI.WebControls.FormViewModeEventArgs
  langs:
  - csharp
  name: FormViewModeEventArgs(FormViewMode,Boolean)
  nameWithType: FormViewModeEventArgs.FormViewModeEventArgs(FormViewMode,Boolean)
  fullName: System.Web.UI.WebControls.FormViewModeEventArgs.FormViewModeEventArgs(FormViewMode,Boolean)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.FormViewModeEventArgs&quot;> </xref> classe."
  remarks: "Utilize este construtor para inicializar uma nova instância de <xref:System.Web.UI.WebControls.FormViewModeEventArgs>classe.</xref:System.Web.UI.WebControls.FormViewModeEventArgs>       A tabela seguinte mostra os valores de propriedade inicial para uma instância de <xref:System.Web.UI.WebControls.FormViewModeEventArgs>classe.</xref:System.Web.UI.WebControls.FormViewModeEventArgs>      | Propriedade | Valor inicial |   |--------------|-------------------|   | <xref:System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit%2A>| O valor da `cancelingEdit` parâmetro. |   | <xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A>| O valor da `mode` parâmetro. |      > [!NOTE] > Este construtor é utilizado principalmente pelos programadores de controlo quando gerar eventos.</xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A> </xref:System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit%2A>"
  syntax:
    content: public FormViewModeEventArgs (System.Web.UI.WebControls.FormViewMode mode, bool cancelingEdit);
    parameters:
    - id: mode
      type: System.Web.UI.WebControls.FormViewMode
      description: "Um do <xref href=&quot;System.Web.UI.WebControls.FormViewMode&quot;> </xref> valores de enumeração."
    - id: cancelingEdit
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para indicar o <xref href=&quot;System.Web.UI.WebControls.FormView.ModeChanging&quot;> </xref> evento foi gerado em resultado do utilizador cancelar uma operação de edição; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.FormViewModeEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit
  id: CancelingEdit
  parent: System.Web.UI.WebControls.FormViewModeEventArgs
  langs:
  - csharp
  name: CancelingEdit
  nameWithType: FormViewModeEventArgs.CancelingEdit
  fullName: System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Web.UI.WebControls.FormView.ModeChanging&quot;> </xref> evento foi gerado em resultado do utilizador cancelar uma operação de edição."
  remarks: "O <xref:System.Web.UI.WebControls.FormView.ModeChanging>o evento é gerado quando um <xref:System.Web.UI.WebControls.FormView>controlo tenta alternar entre editar, insert e modo só de leitura, mas antes do modo, na verdade, as alterações.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ModeChanging> Utilize a propriedade CancelingEdit para determinar se o <xref:System.Web.UI.WebControls.FormView.ModeChanging>evento foi gerado em resultado do utilizador cancelar uma operação de edição ou insert.</xref:System.Web.UI.WebControls.FormView.ModeChanging> Por exemplo, pode querer repor o <xref:System.Web.UI.WebControls.FormView>controlo sempre que o utilizador cancela uma operação de edição.</xref:System.Web.UI.WebControls.FormView>"
  example:
  - "The following example demonstrates how to use the CancelingEdit property to determine whether a mode change is the result of the user canceling an edit operation.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[FormViewModeEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_623_1.aspx)]\n [!code-cs[FormViewModeEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_623_1.aspx)]"
  syntax:
    content: public bool CancelingEdit { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para indicar o <xref href=&quot;System.Web.UI.WebControls.FormView.ModeChanging&quot;> </xref> evento foi gerado em resultado do utilizador cancelar uma operação de edição; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewModeEventArgs.NewMode
  id: NewMode
  parent: System.Web.UI.WebControls.FormViewModeEventArgs
  langs:
  - csharp
  name: NewMode
  nameWithType: FormViewModeEventArgs.NewMode
  fullName: System.Web.UI.WebControls.FormViewModeEventArgs.NewMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o modo a que o <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controlo está a mudar."
  remarks: "Utilize a propriedade NewMode para determinar o modo a que o <xref:System.Web.UI.WebControls.FormView>controlo está a mudar.</xref:System.Web.UI.WebControls.FormView> Por exemplo, poderá querer configurar a <xref:System.Web.UI.WebControls.FormView>controlo com base no modo a que as alterações.</xref:System.Web.UI.WebControls.FormView> Também pode utilizar esta propriedade para especificar o modo a que o <xref:System.Web.UI.WebControls.FormView>controlar as alterações ao defini-la como uma do <xref:System.Web.UI.WebControls.FormViewMode>valores de enumeração.</xref:System.Web.UI.WebControls.FormViewMode> </xref:System.Web.UI.WebControls.FormView>"
  example:
  - "The following example demonstrates how to use the NewMode property to determine the mode to which the <xref:System.Web.UI.WebControls.FormView> control is transitioning.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[FormViewModeEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_376_1.aspx)]\n [!code-cs[FormViewModeEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_376_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.FormViewMode NewMode { get; set; }
    return:
      type: System.Web.UI.WebControls.FormViewMode
      description: "Um do <xref href=&quot;System.Web.UI.WebControls.FormViewMode&quot;> </xref> valores de enumeração."
  overload: System.Web.UI.WebControls.FormViewModeEventArgs.NewMode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.CancelEventArgs
  isExternal: false
  name: System.ComponentModel.CancelEventArgs
- uid: System.Web.UI.WebControls.FormViewModeEventArgs.#ctor(System.Web.UI.WebControls.FormViewMode,System.Boolean)
  parent: System.Web.UI.WebControls.FormViewModeEventArgs
  isExternal: false
  name: FormViewModeEventArgs(FormViewMode,Boolean)
  nameWithType: FormViewModeEventArgs.FormViewModeEventArgs(FormViewMode,Boolean)
  fullName: System.Web.UI.WebControls.FormViewModeEventArgs.FormViewModeEventArgs(FormViewMode,Boolean)
- uid: System.Web.UI.WebControls.FormViewMode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewMode
  nameWithType: FormViewMode
  fullName: System.Web.UI.WebControls.FormViewMode
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit
  parent: System.Web.UI.WebControls.FormViewModeEventArgs
  isExternal: false
  name: CancelingEdit
  nameWithType: FormViewModeEventArgs.CancelingEdit
  fullName: System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit
- uid: System.Web.UI.WebControls.FormViewModeEventArgs.NewMode
  parent: System.Web.UI.WebControls.FormViewModeEventArgs
  isExternal: false
  name: NewMode
  nameWithType: FormViewModeEventArgs.NewMode
  fullName: System.Web.UI.WebControls.FormViewModeEventArgs.NewMode
- uid: System.Web.UI.WebControls.FormViewModeEventArgs.#ctor*
  parent: System.Web.UI.WebControls.FormViewModeEventArgs
  isExternal: false
  name: FormViewModeEventArgs
  nameWithType: FormViewModeEventArgs.FormViewModeEventArgs
- uid: System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit*
  parent: System.Web.UI.WebControls.FormViewModeEventArgs
  isExternal: false
  name: CancelingEdit
  nameWithType: FormViewModeEventArgs.CancelingEdit
- uid: System.Web.UI.WebControls.FormViewModeEventArgs.NewMode*
  parent: System.Web.UI.WebControls.FormViewModeEventArgs
  isExternal: false
  name: NewMode
  nameWithType: FormViewModeEventArgs.NewMode
