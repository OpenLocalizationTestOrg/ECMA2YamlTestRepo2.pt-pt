### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.FormViewModeEventArgs
  id: FormViewModeEventArgs
  children:
  - System.Web.UI.WebControls.FormViewModeEventArgs.#ctor(System.Web.UI.WebControls.FormViewMode,System.Boolean)
  - System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit
  - System.Web.UI.WebControls.FormViewModeEventArgs.NewMode
  langs:
  - csharp
  name: FormViewModeEventArgs
  nameWithType: FormViewModeEventArgs
  fullName: System.Web.UI.WebControls.FormViewModeEventArgs
  type: Class
  summary: "Provides data for the <xref href=&quot;System.Web.UI.WebControls.FormView.ModeChanging&quot;></xref> event."
  remarks: "The <xref:System.Web.UI.WebControls.FormView.ModeChanging> event is raised when a <xref:System.Web.UI.WebControls.FormView> control attempts to switch between edit, insert, and read-only mode, but before the mode actually changes. This allows you to provide an event-handling method that performs a custom routine, such as configuring the <xref:System.Web.UI.WebControls.FormView> control for a specific mode or canceling the mode change, whenever this event occurs.       A <xref:System.Web.UI.WebControls.FormViewInsertEventArgs> object is passed to the event-handling method, which allows you to determine the mode to which the <xref:System.Web.UI.WebControls.FormView> control is changing, to determine whether the <xref:System.Web.UI.WebControls.FormView.ModeChanging> event was raised as a result of the user canceling an edit or insert operation, or to indicate that the mode change should be canceled. To determine the new mode, use the <xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A> property. You can also use the <xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A> property to programmatically specify an alternate mode to which to change by setting it to one of the <xref:System.Web.UI.WebControls.FormViewMode> enumeration values. Use the <xref:System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit%2A> property to determine whether this event was raised as the result of the user canceling an edit or insert operation. To cancel the mode change, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `true`.       For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       For a list of initial property values for an instance of the FormViewModeEventArgs class, see the <xref:System.Web.UI.WebControls.FormViewModeEventArgs.%23ctor%2A> constructor."
  example:
  - "The following example demonstrates how to use the FormViewModeEventArgs object passed to the event-handling method for the <xref:System.Web.UI.WebControls.FormView.ModeChanging> event to hide the pager row when the <xref:System.Web.UI.WebControls.FormView> control transitions to edit mode.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[FormViewModeEventArgs#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_17_1.aspx)]\n [!code-cs[FormViewModeEventArgs#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_17_1.aspx)]"
  syntax:
    content: 'public class FormViewModeEventArgs : System.ComponentModel.CancelEventArgs'
  inheritance:
  - System.ComponentModel.CancelEventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewModeEventArgs.#ctor(System.Web.UI.WebControls.FormViewMode,System.Boolean)
  id: '#ctor(System.Web.UI.WebControls.FormViewMode,System.Boolean)'
  parent: System.Web.UI.WebControls.FormViewModeEventArgs
  langs:
  - csharp
  name: FormViewModeEventArgs(FormViewMode,Boolean)
  nameWithType: FormViewModeEventArgs.FormViewModeEventArgs(FormViewMode,Boolean)
  fullName: System.Web.UI.WebControls.FormViewModeEventArgs.FormViewModeEventArgs(FormViewMode,Boolean)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.UI.WebControls.FormViewModeEventArgs&quot;></xref> class."
  remarks: "Use this constructor to initialize a new instance of the <xref:System.Web.UI.WebControls.FormViewModeEventArgs> class.       The following table shows initial property values for an instance of the <xref:System.Web.UI.WebControls.FormViewModeEventArgs> class.      |Property|Initial Value|   |--------------|-------------------|   |<xref:System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit%2A>|The value of the `cancelingEdit` parameter.|   |<xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A>|The value of the `mode` parameter.|      > [!NOTE] >  This constructor is used primarily by control developers when raising events."
  syntax:
    content: public FormViewModeEventArgs (System.Web.UI.WebControls.FormViewMode mode, bool cancelingEdit);
    parameters:
    - id: mode
      type: System.Web.UI.WebControls.FormViewMode
      description: "One of the <xref href=&quot;System.Web.UI.WebControls.FormViewMode&quot;></xref> enumeration values."
    - id: cancelingEdit
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to indicate the <xref href=&quot;System.Web.UI.WebControls.FormView.ModeChanging&quot;></xref> event was raised as a result of the user canceling an edit operation; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.FormViewModeEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit
  id: CancelingEdit
  parent: System.Web.UI.WebControls.FormViewModeEventArgs
  langs:
  - csharp
  name: CancelingEdit
  nameWithType: FormViewModeEventArgs.CancelingEdit
  fullName: System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets a value indicating whether the <xref href=&quot;System.Web.UI.WebControls.FormView.ModeChanging&quot;></xref> event was raised as a result of the user canceling an edit operation."
  remarks: "The <xref:System.Web.UI.WebControls.FormView.ModeChanging> event is raised when a <xref:System.Web.UI.WebControls.FormView> control attempts to switch between edit, insert, and read-only mode, but before the mode actually changes. Use the CancelingEdit property to determine whether the <xref:System.Web.UI.WebControls.FormView.ModeChanging> event was raised as a result of the user canceling an edit or insert operation. For example, you might want to reset the <xref:System.Web.UI.WebControls.FormView> control whenever the user cancels an edit operation."
  example:
  - "The following example demonstrates how to use the CancelingEdit property to determine whether a mode change is the result of the user canceling an edit operation.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[FormViewModeEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_623_1.aspx)]\n [!code-cs[FormViewModeEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_623_1.aspx)]"
  syntax:
    content: public bool CancelingEdit { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to indicate the <xref href=&quot;System.Web.UI.WebControls.FormView.ModeChanging&quot;></xref> event was raised as a result of the user canceling an edit operation; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormViewModeEventArgs.NewMode
  id: NewMode
  parent: System.Web.UI.WebControls.FormViewModeEventArgs
  langs:
  - csharp
  name: NewMode
  nameWithType: FormViewModeEventArgs.NewMode
  fullName: System.Web.UI.WebControls.FormViewModeEventArgs.NewMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the mode to which the <xref href=&quot;System.Web.UI.WebControls.FormView&quot;></xref> control is changing."
  remarks: "Use the NewMode property to determine the mode to which the <xref:System.Web.UI.WebControls.FormView> control is changing. For example, you might want to configure the <xref:System.Web.UI.WebControls.FormView> control based on the mode to which it changes. You can also use this property to specify the mode to which the <xref:System.Web.UI.WebControls.FormView> control changes by setting it to one of the <xref:System.Web.UI.WebControls.FormViewMode> enumeration values."
  example:
  - "The following example demonstrates how to use the NewMode property to determine the mode to which the <xref:System.Web.UI.WebControls.FormView> control is transitioning.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[FormViewModeEventArgs#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_376_1.aspx)]\n [!code-cs[FormViewModeEventArgs#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_376_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.FormViewMode NewMode { get; set; }
    return:
      type: System.Web.UI.WebControls.FormViewMode
      description: "One of the <xref href=&quot;System.Web.UI.WebControls.FormViewMode&quot;></xref> enumeration values."
  overload: System.Web.UI.WebControls.FormViewModeEventArgs.NewMode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.CancelEventArgs
  isExternal: false
  name: System.ComponentModel.CancelEventArgs
- uid: System.Web.UI.WebControls.FormViewModeEventArgs.#ctor(System.Web.UI.WebControls.FormViewMode,System.Boolean)
  parent: System.Web.UI.WebControls.FormViewModeEventArgs
  isExternal: false
  name: FormViewModeEventArgs(FormViewMode,Boolean)
  nameWithType: FormViewModeEventArgs.FormViewModeEventArgs(FormViewMode,Boolean)
  fullName: System.Web.UI.WebControls.FormViewModeEventArgs.FormViewModeEventArgs(FormViewMode,Boolean)
- uid: System.Web.UI.WebControls.FormViewMode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewMode
  nameWithType: FormViewMode
  fullName: System.Web.UI.WebControls.FormViewMode
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit
  parent: System.Web.UI.WebControls.FormViewModeEventArgs
  isExternal: false
  name: CancelingEdit
  nameWithType: FormViewModeEventArgs.CancelingEdit
  fullName: System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit
- uid: System.Web.UI.WebControls.FormViewModeEventArgs.NewMode
  parent: System.Web.UI.WebControls.FormViewModeEventArgs
  isExternal: false
  name: NewMode
  nameWithType: FormViewModeEventArgs.NewMode
  fullName: System.Web.UI.WebControls.FormViewModeEventArgs.NewMode
- uid: System.Web.UI.WebControls.FormViewModeEventArgs.#ctor*
  parent: System.Web.UI.WebControls.FormViewModeEventArgs
  isExternal: false
  name: FormViewModeEventArgs
  nameWithType: FormViewModeEventArgs.FormViewModeEventArgs
- uid: System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit*
  parent: System.Web.UI.WebControls.FormViewModeEventArgs
  isExternal: false
  name: CancelingEdit
  nameWithType: FormViewModeEventArgs.CancelingEdit
- uid: System.Web.UI.WebControls.FormViewModeEventArgs.NewMode*
  parent: System.Web.UI.WebControls.FormViewModeEventArgs
  isExternal: false
  name: NewMode
  nameWithType: FormViewModeEventArgs.NewMode
