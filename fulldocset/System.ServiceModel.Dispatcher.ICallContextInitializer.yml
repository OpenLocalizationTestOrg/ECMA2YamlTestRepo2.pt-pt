### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.ICallContextInitializer
  id: ICallContextInitializer
  children:
  - System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke(System.Object)
  - System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(System.ServiceModel.InstanceContext,System.ServiceModel.IClientChannel,System.ServiceModel.Channels.Message)
  langs:
  - csharp
  name: ICallContextInitializer
  nameWithType: ICallContextInitializer
  fullName: System.ServiceModel.Dispatcher.ICallContextInitializer
  type: Interface
  summary: "Defines the methods that enable the initialization and recycling of thread-local storage with the thread that invokes user code."
  remarks: "Implement the ICallContextInitializer interface and add it to the <xref:System.ServiceModel.Dispatcher.DispatchOperation.CallContextInitializers%2A?displayProperty=fullName> property to initialize and clean up thread-local storage for the thread that invokes user code. Typical usage is to set some value, such as impersonation or changing the <xref:System.Globalization.CultureInfo?displayProperty=fullName>. If you wanted to establish some custom context, this is the extension point to initialize the static context property, which is then available for developers in the course of the operation."
  syntax:
    content: public interface ICallContextInitializer
  implements: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke(System.Object)
  id: AfterInvoke(System.Object)
  parent: System.ServiceModel.Dispatcher.ICallContextInitializer
  langs:
  - csharp
  name: AfterInvoke(Object)
  nameWithType: ICallContextInitializer.AfterInvoke(Object)
  fullName: System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke(Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Implement to participate in cleaning up the thread that invoked the operation."
  remarks: "Use this method to perform any necessary cleaning up of the operation thread."
  syntax:
    content: public void AfterInvoke (object correlationState);
    parameters:
    - id: correlationState
      type: System.Object
      description: "The correlation object returned from the <xref:System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke*> method."
  overload: System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(System.ServiceModel.InstanceContext,System.ServiceModel.IClientChannel,System.ServiceModel.Channels.Message)
  id: BeforeInvoke(System.ServiceModel.InstanceContext,System.ServiceModel.IClientChannel,System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Dispatcher.ICallContextInitializer
  langs:
  - csharp
  name: BeforeInvoke(InstanceContext,IClientChannel,Message)
  nameWithType: ICallContextInitializer.BeforeInvoke(InstanceContext,IClientChannel,Message)
  fullName: System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(InstanceContext,IClientChannel,Message)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "Implement to participate in the initialization of the operation thread."
  remarks: "Implement the BeforeInvoke method to initialize and clean up thread-local storage for the thread that invokes user code. Typical usage is to set some value, such as impersonation or changing the <xref:System.Globalization.CultureInfo?displayProperty=fullName>. If you wanted to establish some custom context, this is the extension point to initialize the static context property, which is then available for developers in the course of the operation."
  syntax:
    content: public object BeforeInvoke (System.ServiceModel.InstanceContext instanceContext, System.ServiceModel.IClientChannel channel, System.ServiceModel.Channels.Message message);
    parameters:
    - id: instanceContext
      type: System.ServiceModel.InstanceContext
      description: "The service instance for the operation."
    - id: channel
      type: System.ServiceModel.IClientChannel
      description: "The client channel."
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "The incoming message."
    return:
      type: System.Object
      description: "A correlation object passed back as the parameter of the <xref:System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke*> method."
  overload: System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke(System.Object)
  parent: System.ServiceModel.Dispatcher.ICallContextInitializer
  isExternal: false
  name: AfterInvoke(Object)
  nameWithType: ICallContextInitializer.AfterInvoke(Object)
  fullName: System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(System.ServiceModel.InstanceContext,System.ServiceModel.IClientChannel,System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Dispatcher.ICallContextInitializer
  isExternal: false
  name: BeforeInvoke(InstanceContext,IClientChannel,Message)
  nameWithType: ICallContextInitializer.BeforeInvoke(InstanceContext,IClientChannel,Message)
  fullName: System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(InstanceContext,IClientChannel,Message)
- uid: System.ServiceModel.InstanceContext
  parent: System.ServiceModel
  isExternal: true
  name: InstanceContext
  nameWithType: InstanceContext
  fullName: System.ServiceModel.InstanceContext
- uid: System.ServiceModel.IClientChannel
  parent: System.ServiceModel
  isExternal: true
  name: IClientChannel
  nameWithType: IClientChannel
  fullName: System.ServiceModel.IClientChannel
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke*
  parent: System.ServiceModel.Dispatcher.ICallContextInitializer
  isExternal: false
  name: AfterInvoke
  nameWithType: ICallContextInitializer.AfterInvoke
- uid: System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke*
  parent: System.ServiceModel.Dispatcher.ICallContextInitializer
  isExternal: false
  name: BeforeInvoke
  nameWithType: ICallContextInitializer.BeforeInvoke
