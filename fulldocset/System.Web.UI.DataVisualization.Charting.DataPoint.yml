### YamlMime:ManagedReference
items:
- uid: System.Web.UI.DataVisualization.Charting.DataPoint
  id: DataPoint
  children:
  - System.Web.UI.DataVisualization.Charting.DataPoint.#ctor
  - System.Web.UI.DataVisualization.Charting.DataPoint.#ctor(System.Web.UI.DataVisualization.Charting.Series)
  - System.Web.UI.DataVisualization.Charting.DataPoint.#ctor(System.Double,System.Double)
  - System.Web.UI.DataVisualization.Charting.DataPoint.#ctor(System.Double,System.Double[])
  - System.Web.UI.DataVisualization.Charting.DataPoint.#ctor(System.Double,System.String)
  - System.Web.UI.DataVisualization.Charting.DataPoint.Clone
  - System.Web.UI.DataVisualization.Charting.DataPoint.GetValueByName(System.String)
  - System.Web.UI.DataVisualization.Charting.DataPoint.IsEmpty
  - System.Web.UI.DataVisualization.Charting.DataPoint.Name
  - System.Web.UI.DataVisualization.Charting.DataPoint.SetValueXY(System.Object,System.Object[])
  - System.Web.UI.DataVisualization.Charting.DataPoint.SetValueY(System.Object[])
  - System.Web.UI.DataVisualization.Charting.DataPoint.XValue
  - System.Web.UI.DataVisualization.Charting.DataPoint.YValues
  langs:
  - csharp
  name: DataPoint
  nameWithType: DataPoint
  fullName: System.Web.UI.DataVisualization.Charting.DataPoint
  type: Class
  summary: "Represents a data point that is stored in the <xref href=&quot;System.Web.UI.DataVisualization.Charting.DataPointCollection&quot;></xref> class."
  remarks: "The DataPoint class stores properties associated with data as well as data point values. For example, a data point has a value, but it also has a color property, background image property, background gradient property, and so forth. For more information about data point properties, see the <xref:System.Web.UI.DataVisualization.Charting.DataPointCustomProperties> class overview topic.       Each data point consists of an X-value and one or more Y-values. The X-value can be zero, or you can set this explicitly.       Only one Y-value per point is required for all chart types except bubble, candlestick and stock charts. These chart types require more than one Y-value because one data point consists of multiple values. For example, to plot one stock chart column, four values are required: high, low, open and close values.       Data can be added at either design time or run time; you can also use data-binding at run time."
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("YValues")]

      [System.ComponentModel.TypeConverter("System.Web.UI.Design.DataVisualization.Charting.DataPointConverter, System.Web.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")]

      [System.Web.UI.Themeable(false)]

      public class DataPoint : System.Web.UI.DataVisualization.Charting.DataPointCustomProperties
  inheritance:
  - System.Object
  - System.Web.UI.DataVisualization.Charting.ChartElement
  - System.Web.UI.DataVisualization.Charting.ChartNamedElement
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties
  implements: []
  inheritedMembers:
  - System.Web.UI.DataVisualization.Charting.ChartElement.Dispose
  - System.Web.UI.DataVisualization.Charting.ChartElement.Dispose(System.Boolean)
  - System.Web.UI.DataVisualization.Charting.ChartElement.Equals(System.Object)
  - System.Web.UI.DataVisualization.Charting.ChartElement.GetHashCode
  - System.Web.UI.DataVisualization.Charting.ChartElement.Tag
  - System.Web.UI.DataVisualization.Charting.ChartElement.ToString
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.AxisLabel
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.BackGradientStyle
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.BackHatchStyle
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.BackImage
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.BackImageAlignment
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.BackImageTransparentColor
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.BackImageWrapMode
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.BackSecondaryColor
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.BorderColor
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.BorderDashStyle
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.BorderWidth
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.Color
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.CustomProperties
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.CustomPropertiesExtended
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.DeleteCustomProperty(System.String)
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.Font
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.GetCustomProperty(System.String)
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.IsCustomPropertySet(System.String)
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.IsValueShownAsLabel
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.IsVisibleInLegend
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.Item(System.Int32)
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.Item(System.String)
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.Label
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.LabelAngle
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.LabelBackColor
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.LabelBorderColor
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.LabelBorderDashStyle
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.LabelBorderWidth
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.LabelForeColor
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.LabelFormat
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.LabelMapAreaAttributes
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.LabelPostBackValue
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.LabelToolTip
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.LabelUrl
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.LegendMapAreaAttributes
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.LegendPostBackValue
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.LegendText
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.LegendToolTip
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.LegendUrl
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.MapAreaAttributes
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.MarkerBorderColor
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.MarkerBorderWidth
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.MarkerColor
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.MarkerImage
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.MarkerImageTransparentColor
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.MarkerSize
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.MarkerStyle
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.PostBackValue
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.ResetIsValueShownAsLabel
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.ResetIsVisibleInLegend
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.SetCustomProperty(System.String,System.String)
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.SetDefault(System.Boolean)
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.ToolTip
  - System.Web.UI.DataVisualization.Charting.DataPointCustomProperties.Url
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.DataPoint.#ctor
  id: '#ctor'
  parent: System.Web.UI.DataVisualization.Charting.DataPoint
  langs:
  - csharp
  name: DataPoint()
  nameWithType: DataPoint.DataPoint()
  fullName: System.Web.UI.DataVisualization.Charting.DataPoint.DataPoint()
  type: Constructor
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.UI.DataVisualization.Charting.DataPoint&quot;></xref> class."
  remarks: "This constructor can be used to create and initialize a new instance of the <xref:System.Web.UI.DataVisualization.Charting.DataPoint> class.       However, it is highly recommended that you instead add data points at run time, using the <xref:System.Web.UI.DataVisualization.Charting.Series.Points%2A> collection property."
  syntax:
    content: public DataPoint ();
    parameters: []
  overload: System.Web.UI.DataVisualization.Charting.DataPoint.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.DataPoint.#ctor(System.Web.UI.DataVisualization.Charting.Series)
  id: '#ctor(System.Web.UI.DataVisualization.Charting.Series)'
  parent: System.Web.UI.DataVisualization.Charting.DataPoint
  langs:
  - csharp
  name: DataPoint(Series)
  nameWithType: DataPoint.DataPoint(Series)
  fullName: System.Web.UI.DataVisualization.Charting.DataPoint.DataPoint(Series)
  type: Constructor
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.UI.DataVisualization.Charting.DataPoint&quot;></xref> class, and sets the <xref href=&quot;System.Web.UI.DataVisualization.Charting.Series&quot;></xref> that the data point belongs to."
  remarks: "This constructor can be used to create and initialize a new instance of the <xref:System.Web.UI.DataVisualization.Charting.DataPoint> class.       However, it is highly recommended that you instead add data points at run time, using the <xref:System.Web.UI.DataVisualization.Charting.Series.Points%2A> collection property."
  syntax:
    content: public DataPoint (System.Web.UI.DataVisualization.Charting.Series series);
    parameters:
    - id: series
      type: System.Web.UI.DataVisualization.Charting.Series
      description: "The <xref href=&quot;System.Web.UI.DataVisualization.Charting.Series&quot;></xref> object that the data point belongs to."
  overload: System.Web.UI.DataVisualization.Charting.DataPoint.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.DataPoint.#ctor(System.Double,System.Double)
  id: '#ctor(System.Double,System.Double)'
  parent: System.Web.UI.DataVisualization.Charting.DataPoint
  langs:
  - csharp
  name: DataPoint(Double,Double)
  nameWithType: DataPoint.DataPoint(Double,Double)
  fullName: System.Web.UI.DataVisualization.Charting.DataPoint.DataPoint(Double,Double)
  type: Constructor
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.UI.DataVisualization.Charting.DataPoint&quot;></xref> class with the specified X and Y-value."
  remarks: "This constructor can be used to create and initialize a new instance of the <xref:System.Web.UI.DataVisualization.Charting.DataPoint> class.       However, it is highly recommended that you instead add data points at run time, using the <xref:System.Web.UI.DataVisualization.Charting.Series.Points%2A> collection property."
  syntax:
    content: public DataPoint (double xValue, double yValue);
    parameters:
    - id: xValue
      type: System.Double
      description: "The X-value of the data point."
    - id: yValue
      type: System.Double
      description: "The Y-value of the data point."
  overload: System.Web.UI.DataVisualization.Charting.DataPoint.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.DataPoint.#ctor(System.Double,System.Double[])
  id: '#ctor(System.Double,System.Double[])'
  parent: System.Web.UI.DataVisualization.Charting.DataPoint
  langs:
  - csharp
  name: DataPoint(Double,Double[])
  nameWithType: DataPoint.DataPoint(Double,Double[])
  fullName: System.Web.UI.DataVisualization.Charting.DataPoint.DataPoint(Double,Double[])
  type: Constructor
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.UI.DataVisualization.Charting.DataPoint&quot;></xref> class with the specified X-value and an array of Y-values."
  remarks: "This constructor can be used to create and initialize a new instance of the <xref:System.Web.UI.DataVisualization.Charting.DataPoint> class.       However, it is highly recommended that you instead add data points at run time, using the <xref:System.Web.UI.DataVisualization.Charting.Series.Points%2A> collection property."
  syntax:
    content: public DataPoint (double xValue, double[] yValues);
    parameters:
    - id: xValue
      type: System.Double
      description: "The X-value."
    - id: yValues
      type: System.Double[]
      description: "An array of Y-values."
  overload: System.Web.UI.DataVisualization.Charting.DataPoint.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.DataPoint.#ctor(System.Double,System.String)
  id: '#ctor(System.Double,System.String)'
  parent: System.Web.UI.DataVisualization.Charting.DataPoint
  langs:
  - csharp
  name: DataPoint(Double,String)
  nameWithType: DataPoint.DataPoint(Double,String)
  fullName: System.Web.UI.DataVisualization.Charting.DataPoint.DataPoint(Double,String)
  type: Constructor
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.UI.DataVisualization.Charting.DataPoint&quot;></xref> class with the specified X-value and Y-values."
  remarks: "This constructor can be used to create and initialize a new instance of the <xref:System.Web.UI.DataVisualization.Charting.DataPoint> class.       However, it is highly recommended that you instead add data points at run time, using the <xref:System.Web.UI.DataVisualization.Charting.Series.Points%2A> collection property."
  syntax:
    content: public DataPoint (double xValue, string yValues);
    parameters:
    - id: xValue
      type: System.Double
      description: "The X-value of the data point."
    - id: yValues
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref> of Y-values separated by commas."
  overload: System.Web.UI.DataVisualization.Charting.DataPoint.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.DataPoint.Clone
  id: Clone
  parent: System.Web.UI.DataVisualization.Charting.DataPoint
  langs:
  - csharp
  name: Clone()
  nameWithType: DataPoint.Clone()
  fullName: System.Web.UI.DataVisualization.Charting.DataPoint.Clone()
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "Returns an exact copy of the data point."
  remarks: "Use the Clone method to obtain an exact copy of the data point."
  syntax:
    content: public System.Web.UI.DataVisualization.Charting.DataPoint Clone ();
    parameters: []
    return:
      type: System.Web.UI.DataVisualization.Charting.DataPoint
      description: "A cloned <xref href=&quot;System.Web.UI.DataVisualization.Charting.DataPoint&quot;></xref> object."
  overload: System.Web.UI.DataVisualization.Charting.DataPoint.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.DataPoint.GetValueByName(System.String)
  id: GetValueByName(System.String)
  parent: System.Web.UI.DataVisualization.Charting.DataPoint
  langs:
  - csharp
  name: GetValueByName(String)
  nameWithType: DataPoint.GetValueByName(String)
  fullName: System.Web.UI.DataVisualization.Charting.DataPoint.GetValueByName(String)
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "Returns a data point that is specified by its name. This is a helper function."
  syntax:
    content: public double GetValueByName (string valueName);
    parameters:
    - id: valueName
      type: System.String
      description: "Point value names. X, Y, Y2..."
    return:
      type: System.Double
      description: "A <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref> value that represents a data point."
  overload: System.Web.UI.DataVisualization.Charting.DataPoint.GetValueByName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.DataPoint.IsEmpty
  id: IsEmpty
  parent: System.Web.UI.DataVisualization.Charting.DataPoint
  langs:
  - csharp
  name: IsEmpty
  nameWithType: DataPoint.IsEmpty
  fullName: System.Web.UI.DataVisualization.Charting.DataPoint.IsEmpty
  type: Property
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "Gets or sets a flag that indicates whether a data point is marked as empty."
  remarks: "Set this property to `true` to mark a data point as an empty point.       Alternatively one of the `InsertEmptyPoints` methods in the <xref:System.Web.UI.DataVisualization.Charting.DataManipulator> class can be used to mark missing data as empty points.       The <xref:System.Web.UI.DataVisualization.Charting.Series.EmptyPointStyle%2A> property determines how empty points are displayed."
  syntax:
    content: public bool IsEmpty { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the point is marked as an empty point; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default value is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.DataVisualization.Charting.DataPoint.IsEmpty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.DataPoint.Name
  id: Name
  parent: System.Web.UI.DataVisualization.Charting.DataPoint
  langs:
  - csharp
  name: Name
  nameWithType: DataPoint.Name
  fullName: System.Web.UI.DataVisualization.Charting.DataPoint.Name
  type: Property
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "Gets or sets the name of the data point."
  syntax:
    content: public override string Name { get; set; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref> value that represents the name of the data point."
  overload: System.Web.UI.DataVisualization.Charting.DataPoint.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.DataPoint.SetValueXY(System.Object,System.Object[])
  id: SetValueXY(System.Object,System.Object[])
  parent: System.Web.UI.DataVisualization.Charting.DataPoint
  langs:
  - csharp
  name: SetValueXY(Object,Object[])
  nameWithType: DataPoint.SetValueXY(Object,Object[])
  fullName: System.Web.UI.DataVisualization.Charting.DataPoint.SetValueXY(Object,Object[])
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "Sets the X-value and one or more Y-values of the data point."
  remarks: "Use the SetValueXY method to set the value(s) of a data point at run-time.       Note that if you set the X-value to a value other than zero (0), a scatter plot will be generated. For further details, see the Remarks section of the <xref:System.Web.UI.DataVisualization.Charting.DataPoint.XValue%2A> property.       Refer to the following table for a complete listing of valid .NET Framework types that can be used for the object type parameter.      ||||   |-|-|-|   |String|DateTime|Double|   |Decimal|Single|Int32|   |UInt32|Int64|UInt64|"
  syntax:
    content: public void SetValueXY (object xValue, object[] yValue);
    parameters:
    - id: xValue
      type: System.Object
      description: "The X-value of the data point."
    - id: yValue
      type: System.Object[]
      description: "A list of Y-values of the data point."
  overload: System.Web.UI.DataVisualization.Charting.DataPoint.SetValueXY*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.DataPoint.SetValueY(System.Object[])
  id: SetValueY(System.Object[])
  parent: System.Web.UI.DataVisualization.Charting.DataPoint
  langs:
  - csharp
  name: SetValueY(Object[])
  nameWithType: DataPoint.SetValueY(Object[])
  fullName: System.Web.UI.DataVisualization.Charting.DataPoint.SetValueY(Object[])
  type: Method
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "Sets the Y-value(s) of a single data point."
  remarks: "The SetValueY property is used to set the Y-value(s) of a data point at run time.       Only one Y-value per point is required for all chart types except for bubble, candlestick and stock charts. These chart types require more than one Y-value because one data point consists of multiple values. For example, to plot one stock chart column, four values are required: high, low, open and close values.       This property returns an array of `double` values when used to retrieve multiple Y-values.      > [!IMPORTANT] >  The <xref:System.Web.UI.DataVisualization.Charting.Series.YValuesPerPoint%2A> property determines the maximum number of Y-values that all data points in a <xref:System.Web.UI.DataVisualization.Charting.Series> can have. If you specify more than the allowable number of Y-values, an exception will be raised.   >    >  Refer to the following table for a complete listing of valid .NET Framework types that can be used for the object type parameter:      ||||   |-|-|-|   |String|DateTime|Double|   |Decimal|Single|Int32|   |UInt32|Int64|UInt64|"
  syntax:
    content: public void SetValueY (object[] yValue);
    parameters:
    - id: yValue
      type: System.Object[]
      description: "The Y-value(s) of a <xref href=&quot;System.Web.UI.DataVisualization.Charting.DataPoint&quot;></xref> object in the collection. Formatted as one or more values separated by commas."
  overload: System.Web.UI.DataVisualization.Charting.DataPoint.SetValueY*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.DataPoint.XValue
  id: XValue
  parent: System.Web.UI.DataVisualization.Charting.DataPoint
  langs:
  - csharp
  name: XValue
  nameWithType: DataPoint.XValue
  fullName: System.Web.UI.DataVisualization.Charting.DataPoint.XValue
  type: Property
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "Gets or sets the X-value of a data point."
  remarks: "All chart types can be displayed as either scatter plots or as non-scatter plots, because both X-values and Y-values can be set. Setting an X-value will result in a scatter plot, whereas not setting this property—which is equivalent to setting it to zero—will result in a non-scatter plot. For example, to draw a point chart type, add data points that have X-values of zero. To display a traditional scatter chart, add data points that have X-values other than zero.       The X-values of data points are not required to be set. If they are not set, data points are plotted sequentially, using their index values from the <xref:System.Web.UI.DataVisualization.Charting.DataPointCollection>."
  syntax:
    content: public double XValue { get; set; }
    return:
      type: System.Double
      description: "A <xref uid=&quot;langword_csharp_double&quot; name=&quot;double&quot; href=&quot;&quot;></xref> that represents the X-value of a data point."
  overload: System.Web.UI.DataVisualization.Charting.DataPoint.XValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.DataVisualization.Charting.DataPoint.YValues
  id: YValues
  parent: System.Web.UI.DataVisualization.Charting.DataPoint
  langs:
  - csharp
  name: YValues
  nameWithType: DataPoint.YValues
  fullName: System.Web.UI.DataVisualization.Charting.DataPoint.YValues
  type: Property
  assemblies:
  - System.Web.DataVisualization
  namespace: System.Web.UI.DataVisualization.Charting
  summary: "Gets or sets the Y-value(s) of a data point."
  remarks: "The YValues property is used to set the Y-values of data points.       Only one Y-value per point is required for all chart types except bubble, candlestick and stock charts. These chart types require more than one Y-value because one data point consists of multiple values. For example, to plot one stock chart column, four values are required: high, low, open and close values.       The YValues property returns an array of `double` values when used to retrieve the Y-values.       **Important** The <xref:System.Web.UI.DataVisualization.Charting.Series.YValuesPerPoint%2A> property determines the maximum number of Y-values that all data points in a <xref:System.Web.UI.DataVisualization.Charting.Series> can have. If you specify more than the allowable number of Y-values, an exception will be raised."
  syntax:
    content: public double[] YValues { get; set; }
    return:
      type: System.Double[]
      description: "An array of <xref uid=&quot;langword_csharp_double&quot; name=&quot;double&quot; href=&quot;&quot;></xref> values that represent the Y-value(s) of a data point."
  overload: System.Web.UI.DataVisualization.Charting.DataPoint.YValues*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.DataVisualization.Charting.DataPointCustomProperties
  isExternal: false
  name: System.Web.UI.DataVisualization.Charting.DataPointCustomProperties
- uid: System.Web.UI.DataVisualization.Charting.DataPoint.#ctor
  parent: System.Web.UI.DataVisualization.Charting.DataPoint
  isExternal: false
  name: DataPoint()
  nameWithType: DataPoint.DataPoint()
  fullName: System.Web.UI.DataVisualization.Charting.DataPoint.DataPoint()
- uid: System.Web.UI.DataVisualization.Charting.DataPoint.#ctor(System.Web.UI.DataVisualization.Charting.Series)
  parent: System.Web.UI.DataVisualization.Charting.DataPoint
  isExternal: false
  name: DataPoint(Series)
  nameWithType: DataPoint.DataPoint(Series)
  fullName: System.Web.UI.DataVisualization.Charting.DataPoint.DataPoint(Series)
- uid: System.Web.UI.DataVisualization.Charting.Series
  parent: System.Web.UI.DataVisualization.Charting
  isExternal: false
  name: Series
  nameWithType: Series
  fullName: System.Web.UI.DataVisualization.Charting.Series
- uid: System.Web.UI.DataVisualization.Charting.DataPoint.#ctor(System.Double,System.Double)
  parent: System.Web.UI.DataVisualization.Charting.DataPoint
  isExternal: false
  name: DataPoint(Double,Double)
  nameWithType: DataPoint.DataPoint(Double,Double)
  fullName: System.Web.UI.DataVisualization.Charting.DataPoint.DataPoint(Double,Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Web.UI.DataVisualization.Charting.DataPoint.#ctor(System.Double,System.Double[])
  parent: System.Web.UI.DataVisualization.Charting.DataPoint
  isExternal: false
  name: DataPoint(Double,Double[])
  nameWithType: DataPoint.DataPoint(Double,Double[])
  fullName: System.Web.UI.DataVisualization.Charting.DataPoint.DataPoint(Double,Double[])
- uid: System.Double[]
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double[]
  spec.csharp:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: Double[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.DataVisualization.Charting.DataPoint.#ctor(System.Double,System.String)
  parent: System.Web.UI.DataVisualization.Charting.DataPoint
  isExternal: false
  name: DataPoint(Double,String)
  nameWithType: DataPoint.DataPoint(Double,String)
  fullName: System.Web.UI.DataVisualization.Charting.DataPoint.DataPoint(Double,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.DataVisualization.Charting.DataPoint.Clone
  parent: System.Web.UI.DataVisualization.Charting.DataPoint
  isExternal: false
  name: Clone()
  nameWithType: DataPoint.Clone()
  fullName: System.Web.UI.DataVisualization.Charting.DataPoint.Clone()
- uid: System.Web.UI.DataVisualization.Charting.DataPoint
  parent: System.Web.UI.DataVisualization.Charting
  isExternal: false
  name: DataPoint
  nameWithType: DataPoint
  fullName: System.Web.UI.DataVisualization.Charting.DataPoint
- uid: System.Web.UI.DataVisualization.Charting.DataPoint.GetValueByName(System.String)
  parent: System.Web.UI.DataVisualization.Charting.DataPoint
  isExternal: false
  name: GetValueByName(String)
  nameWithType: DataPoint.GetValueByName(String)
  fullName: System.Web.UI.DataVisualization.Charting.DataPoint.GetValueByName(String)
- uid: System.Web.UI.DataVisualization.Charting.DataPoint.IsEmpty
  parent: System.Web.UI.DataVisualization.Charting.DataPoint
  isExternal: false
  name: IsEmpty
  nameWithType: DataPoint.IsEmpty
  fullName: System.Web.UI.DataVisualization.Charting.DataPoint.IsEmpty
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.DataVisualization.Charting.DataPoint.Name
  parent: System.Web.UI.DataVisualization.Charting.DataPoint
  isExternal: false
  name: Name
  nameWithType: DataPoint.Name
  fullName: System.Web.UI.DataVisualization.Charting.DataPoint.Name
- uid: System.Web.UI.DataVisualization.Charting.DataPoint.SetValueXY(System.Object,System.Object[])
  parent: System.Web.UI.DataVisualization.Charting.DataPoint
  isExternal: false
  name: SetValueXY(Object,Object[])
  nameWithType: DataPoint.SetValueXY(Object,Object[])
  fullName: System.Web.UI.DataVisualization.Charting.DataPoint.SetValueXY(Object,Object[])
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.DataVisualization.Charting.DataPoint.SetValueY(System.Object[])
  parent: System.Web.UI.DataVisualization.Charting.DataPoint
  isExternal: false
  name: SetValueY(Object[])
  nameWithType: DataPoint.SetValueY(Object[])
  fullName: System.Web.UI.DataVisualization.Charting.DataPoint.SetValueY(Object[])
- uid: System.Web.UI.DataVisualization.Charting.DataPoint.XValue
  parent: System.Web.UI.DataVisualization.Charting.DataPoint
  isExternal: false
  name: XValue
  nameWithType: DataPoint.XValue
  fullName: System.Web.UI.DataVisualization.Charting.DataPoint.XValue
- uid: System.Web.UI.DataVisualization.Charting.DataPoint.YValues
  parent: System.Web.UI.DataVisualization.Charting.DataPoint
  isExternal: false
  name: YValues
  nameWithType: DataPoint.YValues
  fullName: System.Web.UI.DataVisualization.Charting.DataPoint.YValues
- uid: System.Web.UI.DataVisualization.Charting.DataPoint.#ctor*
  parent: System.Web.UI.DataVisualization.Charting.DataPoint
  isExternal: false
  name: DataPoint
  nameWithType: DataPoint.DataPoint
- uid: System.Web.UI.DataVisualization.Charting.DataPoint.Clone*
  parent: System.Web.UI.DataVisualization.Charting.DataPoint
  isExternal: false
  name: Clone
  nameWithType: DataPoint.Clone
- uid: System.Web.UI.DataVisualization.Charting.DataPoint.GetValueByName*
  parent: System.Web.UI.DataVisualization.Charting.DataPoint
  isExternal: false
  name: GetValueByName
  nameWithType: DataPoint.GetValueByName
- uid: System.Web.UI.DataVisualization.Charting.DataPoint.IsEmpty*
  parent: System.Web.UI.DataVisualization.Charting.DataPoint
  isExternal: false
  name: IsEmpty
  nameWithType: DataPoint.IsEmpty
- uid: System.Web.UI.DataVisualization.Charting.DataPoint.Name*
  parent: System.Web.UI.DataVisualization.Charting.DataPoint
  isExternal: false
  name: Name
  nameWithType: DataPoint.Name
- uid: System.Web.UI.DataVisualization.Charting.DataPoint.SetValueXY*
  parent: System.Web.UI.DataVisualization.Charting.DataPoint
  isExternal: false
  name: SetValueXY
  nameWithType: DataPoint.SetValueXY
- uid: System.Web.UI.DataVisualization.Charting.DataPoint.SetValueY*
  parent: System.Web.UI.DataVisualization.Charting.DataPoint
  isExternal: false
  name: SetValueY
  nameWithType: DataPoint.SetValueY
- uid: System.Web.UI.DataVisualization.Charting.DataPoint.XValue*
  parent: System.Web.UI.DataVisualization.Charting.DataPoint
  isExternal: false
  name: XValue
  nameWithType: DataPoint.XValue
- uid: System.Web.UI.DataVisualization.Charting.DataPoint.YValues*
  parent: System.Web.UI.DataVisualization.Charting.DataPoint
  isExternal: false
  name: YValues
  nameWithType: DataPoint.YValues
