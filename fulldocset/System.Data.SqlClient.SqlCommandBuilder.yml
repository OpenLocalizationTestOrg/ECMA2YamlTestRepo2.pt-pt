### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlCommandBuilder
  id: SqlCommandBuilder
  children:
  - System.Data.SqlClient.SqlCommandBuilder.#ctor
  - System.Data.SqlClient.SqlCommandBuilder.#ctor(System.Data.SqlClient.SqlDataAdapter)
  - System.Data.SqlClient.SqlCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  - System.Data.SqlClient.SqlCommandBuilder.CatalogLocation
  - System.Data.SqlClient.SqlCommandBuilder.CatalogSeparator
  - System.Data.SqlClient.SqlCommandBuilder.DataAdapter
  - System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)
  - System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand
  - System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)
  - System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand
  - System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)
  - System.Data.SqlClient.SqlCommandBuilder.GetParameterName(System.Int32)
  - System.Data.SqlClient.SqlCommandBuilder.GetParameterName(System.String)
  - System.Data.SqlClient.SqlCommandBuilder.GetParameterPlaceholder(System.Int32)
  - System.Data.SqlClient.SqlCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)
  - System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand
  - System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)
  - System.Data.SqlClient.SqlCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)
  - System.Data.SqlClient.SqlCommandBuilder.QuoteIdentifier(System.String)
  - System.Data.SqlClient.SqlCommandBuilder.QuotePrefix
  - System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix
  - System.Data.SqlClient.SqlCommandBuilder.SchemaSeparator
  - System.Data.SqlClient.SqlCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  - System.Data.SqlClient.SqlCommandBuilder.UnquoteIdentifier(System.String)
  langs:
  - csharp
  name: SqlCommandBuilder
  nameWithType: SqlCommandBuilder
  fullName: System.Data.SqlClient.SqlCommandBuilder
  type: Class
  summary: "Gera automaticamente os comandos de tabela única que são utilizados para reconciliar as alterações efetuadas a um <xref href=&quot;System.Data.DataSet&quot;> </xref> a base de dados do SQL Server associados. Esta classe não pode ser herdada."
  remarks: "O <xref:System.Data.SqlClient.SqlDataAdapter>não gerar automaticamente as instruções Transact-SQL necessárias para reconciliar as alterações efetuadas a um <xref:System.Data.DataSet>com a instância do SQL Server associada.</xref:System.Data.DataSet> </xref:System.Data.SqlClient.SqlDataAdapter> No entanto, pode criar um objeto de SqlCommandBuilder para gerar automaticamente instruções Transact-SQL para atualizações de tabela única se definir a <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>propriedade de <xref:System.Data.SqlClient.SqlDataAdapter>.</xref:System.Data.SqlClient.SqlDataAdapter> </xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> Em seguida, quaisquer instruções Transact-SQL adicionais que não definidas foram geradas pelo SqlCommandBuilder.       O SqlCommandBuilder regista-se automaticamente como um serviço de escuta para <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating>eventos sempre que definiu o <xref:System.Data.SqlClient.SqlCommandBuilder.DataAdapter%2A>propriedade.</xref:System.Data.SqlClient.SqlCommandBuilder.DataAdapter%2A> </xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> Só pode associar um <xref:System.Data.SqlClient.SqlDataAdapter>ou SqlCommandBuilder objeto entre si de uma só vez.</xref:System.Data.SqlClient.SqlDataAdapter>       Para gerar instruções INSERT, UPDATE ou DELETE, utiliza o SqlCommandBuilder o <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>propriedade obter automaticamente um conjunto de metadados necessário.</xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> Se alterar o <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>depois dos metadados de obtenção, tal como após a primeira atualização, deve chamar o <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>método para atualizar os metadados.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> </xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>       O `SelectCommand` também tem de devolver pelo menos uma chave primária ou uma coluna exclusiva. Se nenhum estiverem presentes, um **InvalidOperation** exceção é gerada e os comandos não são gerados.       O SqlCommandBuilder também utiliza o <xref:System.Data.SqlClient.SqlCommand.Connection%2A>, <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>e <xref:System.Data.SqlClient.SqlCommand.Transaction%2A>Propriedades referenciada pelo <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>.</xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> </xref:System.Data.SqlClient.SqlCommand.Transaction%2A> </xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> </xref:System.Data.SqlClient.SqlCommand.Connection%2A> O utilizador deve chamar <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>se um ou mais destas propriedades forem modificados, ou se o <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>em si é substituído.</xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> </xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> Caso contrário o <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, e <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A>Propriedades manter os respetivos valores anteriores.</xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> </xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A> </xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>       Se chamar <xref:System.ComponentModel.Component.Dispose%2A>, o SqlCommandBuilder é desassociar o <xref:System.Data.SqlClient.SqlDataAdapter>, e os comandos gerados já não são utilizados.</xref:System.Data.SqlClient.SqlDataAdapter> </xref:System.ComponentModel.Component.Dispose%2A>"
  example:
  - "The following example uses the <xref:System.Data.SqlClient.SqlCommand>, along <xref:System.Data.SqlClient.SqlDataAdapter> and <xref:System.Data.SqlClient.SqlConnection>, to select rows from a data source. The example is passed a connection string, a query string that is a Transact-SQL SELECT statement, and a string that is the name of the database table. The example then creates a SqlCommandBuilder.  \n  \n [!code-vb[Classic WebData SqlCommandBuilder#1](~/add/codesnippet/visualbasic/t-system.data.sqlclient._12_1.vb)]\n [!code-cs[Classic WebData SqlCommandBuilder#1](~/add/codesnippet/csharp/t-system.data.sqlclient._12_1.cs)]"
  syntax:
    content: 'public sealed class SqlCommandBuilder : System.Data.Common.DbCommandBuilder'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbCommandBuilder
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DbCommandBuilder.ConflictOption
  - System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)
  - System.Data.Common.DbCommandBuilder.RefreshSchema
  - System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)
  - System.Data.Common.DbCommandBuilder.SetAllValues
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommandBuilder.#ctor
  id: '#ctor'
  parent: System.Data.SqlClient.SqlCommandBuilder
  langs:
  - csharp
  name: SqlCommandBuilder()
  nameWithType: SqlCommandBuilder.SqlCommandBuilder()
  fullName: System.Data.SqlClient.SqlCommandBuilder.SqlCommandBuilder()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.SqlClient.SqlCommandBuilder&quot;> </xref> classe."
  syntax:
    content: public SqlCommandBuilder ();
    parameters: []
  overload: System.Data.SqlClient.SqlCommandBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommandBuilder.#ctor(System.Data.SqlClient.SqlDataAdapter)
  id: '#ctor(System.Data.SqlClient.SqlDataAdapter)'
  parent: System.Data.SqlClient.SqlCommandBuilder
  langs:
  - csharp
  name: SqlCommandBuilder(SqlDataAdapter)
  nameWithType: SqlCommandBuilder.SqlCommandBuilder(SqlDataAdapter)
  fullName: System.Data.SqlClient.SqlCommandBuilder.SqlCommandBuilder(SqlDataAdapter)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.SqlClient.SqlCommandBuilder&quot;> </xref> classe associada com <xref href=&quot;System.Data.SqlClient.SqlDataAdapter&quot;> </xref> objeto."
  remarks: "O <xref:System.Data.SqlClient.SqlCommandBuilder>regista-se automaticamente como um serviço de escuta para <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating>eventos gerados pelo <xref:System.Data.SqlClient.SqlDataAdapter>especificadas nesta propriedade.</xref:System.Data.SqlClient.SqlDataAdapter> </xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> </xref:System.Data.SqlClient.SqlCommandBuilder>       Quando cria uma nova instância do <xref:System.Data.SqlClient.SqlCommandBuilder>, qualquer existente <xref:System.Data.SqlClient.SqlCommandBuilder>associada a este <xref:System.Data.SqlClient.SqlDataAdapter>é libertado.</xref:System.Data.SqlClient.SqlDataAdapter> </xref:System.Data.SqlClient.SqlCommandBuilder> </xref:System.Data.SqlClient.SqlCommandBuilder>"
  syntax:
    content: public SqlCommandBuilder (System.Data.SqlClient.SqlDataAdapter adapter);
    parameters:
    - id: adapter
      type: System.Data.SqlClient.SqlDataAdapter
      description: "O nome do <xref href=&quot;System.Data.SqlClient.SqlDataAdapter&quot;> </xref>."
  overload: System.Data.SqlClient.SqlCommandBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  id: ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  parent: System.Data.SqlClient.SqlCommandBuilder
  langs:
  - csharp
  name: ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  nameWithType: SqlCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  fullName: System.Data.SqlClient.SqlCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override void ApplyParameterInfo (System.Data.Common.DbParameter parameter, System.Data.DataRow datarow, System.Data.StatementType statementType, bool whereClause);
    parameters:
    - id: parameter
      type: System.Data.Common.DbParameter
      description: "A adicionar."
    - id: datarow
      type: System.Data.DataRow
      description: "A adicionar."
    - id: statementType
      type: System.Data.StatementType
      description: "A adicionar."
    - id: whereClause
      type: System.Boolean
      description: "A adicionar."
  overload: System.Data.SqlClient.SqlCommandBuilder.ApplyParameterInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommandBuilder.CatalogLocation
  id: CatalogLocation
  parent: System.Data.SqlClient.SqlCommandBuilder
  langs:
  - csharp
  name: CatalogLocation
  nameWithType: SqlCommandBuilder.CatalogLocation
  fullName: System.Data.SqlClient.SqlCommandBuilder.CatalogLocation
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Define ou obtém o <xref href=&quot;System.Data.Common.CatalogLocation&quot;> </xref> para uma instância do <xref href=&quot;System.Data.SqlClient.SqlCommandBuilder&quot;> </xref> classe."
  syntax:
    content: public override System.Data.Common.CatalogLocation CatalogLocation { get; set; }
    return:
      type: System.Data.Common.CatalogLocation
      description: "A <xref href=&quot;System.Data.Common.CatalogLocation&quot;></xref> object."
  overload: System.Data.SqlClient.SqlCommandBuilder.CatalogLocation*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommandBuilder.CatalogSeparator
  id: CatalogSeparator
  parent: System.Data.SqlClient.SqlCommandBuilder
  langs:
  - csharp
  name: CatalogSeparator
  nameWithType: SqlCommandBuilder.CatalogSeparator
  fullName: System.Data.SqlClient.SqlCommandBuilder.CatalogSeparator
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Define ou obtém uma cadeia utilizada como o separador de catálogo para uma instância do <xref href=&quot;System.Data.SqlClient.SqlCommandBuilder&quot;> </xref> classe."
  syntax:
    content: public override string CatalogSeparator { get; set; }
    return:
      type: System.String
      description: "Uma cadeia que indica o separador de catálogo para utilização com uma instância do <xref href=&quot;System.Data.SqlClient.SqlCommandBuilder&quot;> </xref> classe."
  overload: System.Data.SqlClient.SqlCommandBuilder.CatalogSeparator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommandBuilder.DataAdapter
  id: DataAdapter
  parent: System.Data.SqlClient.SqlCommandBuilder
  langs:
  - csharp
  name: DataAdapter
  nameWithType: SqlCommandBuilder.DataAdapter
  fullName: System.Data.SqlClient.SqlCommandBuilder.DataAdapter
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém ou define um <xref href=&quot;System.Data.SqlClient.SqlDataAdapter&quot;> </xref> objeto para o qual Transact-SQL instruções são geradas automaticamente."
  remarks: "O <xref:System.Data.SqlClient.SqlCommandBuilder>regista-se automaticamente como um serviço de escuta para <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating>eventos gerados pelo <xref:System.Data.SqlClient.SqlDataAdapter>especificadas nesta propriedade.</xref:System.Data.SqlClient.SqlDataAdapter> </xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> </xref:System.Data.SqlClient.SqlCommandBuilder>       Quando cria uma nova instância do <xref:System.Data.SqlClient.SqlCommandBuilder>, qualquer existente <xref:System.Data.SqlClient.SqlCommandBuilder>associada a este <xref:System.Data.SqlClient.SqlDataAdapter>é libertado.</xref:System.Data.SqlClient.SqlDataAdapter> </xref:System.Data.SqlClient.SqlCommandBuilder> </xref:System.Data.SqlClient.SqlCommandBuilder>"
  syntax:
    content: public System.Data.SqlClient.SqlDataAdapter DataAdapter { get; set; }
    return:
      type: System.Data.SqlClient.SqlDataAdapter
      description: "A <xref href=&quot;System.Data.SqlClient.SqlDataAdapter&quot;></xref> object."
  overload: System.Data.SqlClient.SqlCommandBuilder.DataAdapter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)
  id: DeriveParameters(System.Data.SqlClient.SqlCommand)
  parent: System.Data.SqlClient.SqlCommandBuilder
  langs:
  - csharp
  name: DeriveParameters(SqlCommand)
  nameWithType: SqlCommandBuilder.DeriveParameters(SqlCommand)
  fullName: System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(SqlCommand)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém informações de parâmetro do procedimento armazenado especificado no <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> e preenche o <xref:System.Data.SqlClient.SqlCommand.Parameters*>coleção de especificado <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> objeto.</xref:System.Data.SqlClient.SqlCommand.Parameters*>"
  remarks: "`DeriveParameters`substitui quaisquer informações de parâmetro existente para o `SqlDbCommand`.       `DeriveParameters`necessita de uma chamada adicional para a base de dados para obter as informações. Se as informações do parâmetro são conhecidas seguinte com antecedência, é mais eficiente para preencher a coleção de parâmetros ao definir explicitamente as informações.       Só pode utilizar `DeriveParameters` com procedimentos armazenados. Não é possível utilizar `DeriveParameters` com procedimentos armazenados expandidos. Não é possível utilizar `DeriveParameters` para preencher o <xref:System.Data.SqlClient.SqlParameterCollection>com instruções Transact-SQL arbitrários, como uma instrução SELECT parametrizada.</xref:System.Data.SqlClient.SqlParameterCollection>       Para obter mais informações, consulte [configurar parâmetros e tipos de dados de parâmetro](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static void DeriveParameters (System.Data.SqlClient.SqlCommand command);
    parameters:
    - id: command
      type: System.Data.SqlClient.SqlCommand
      description: "O <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> referenciar o procedimento armazenado a partir da qual as informações do parâmetro são derivada. Os parâmetros derivados são adicionados para o <xref:System.Data.SqlClient.SqlCommand.Parameters*>coleção do <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>.</xref:System.Data.SqlClient.SqlCommand.Parameters*>"
  overload: System.Data.SqlClient.SqlCommandBuilder.DeriveParameters*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O texto do comando não é um nome de procedimento armazenado válido."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand
  id: GetDeleteCommand
  parent: System.Data.SqlClient.SqlCommandBuilder
  langs:
  - csharp
  name: GetDeleteCommand()
  nameWithType: SqlCommandBuilder.GetDeleteCommand()
  fullName: System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém automaticamente gerado <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> objeto necessário para efetuar eliminações na base de dados."
  remarks: "Uma aplicação pode utilizar o método de GetDeleteCommand para fins de resolução de problemas ou informativas porque devolve o <xref:System.Data.SqlClient.SqlCommand>objeto para ser executada.</xref:System.Data.SqlClient.SqlCommand>       Também pode utilizar GetDeleteCommand como a base de um comando de modificação. Por exemplo, pode chamar GetDeleteCommand e modificar o <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>valor e, em seguida, de definir explicitamente que no <xref:System.Data.SqlClient.SqlDataAdapter>.</xref:System.Data.SqlClient.SqlDataAdapter> </xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>       Depois da instrução SQL é gerada pela primeira vez, a aplicação tem de chamar explicitamente <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>se alterar a instrução de qualquer forma.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> Caso contrário, o GetDeleteCommand ainda utilizará as informações da instrução anterior, o que poderá não estar correta. As instruções SQL primeiro são geradas quando a aplicação chama um <xref:System.Data.Common.DbDataAdapter.Update%2A>ou GetDeleteCommand.</xref:System.Data.Common.DbDataAdapter.Update%2A>       Para obter mais informações, consulte [gerar comandos com CommandBuilders](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Data.SqlClient.SqlCommand GetDeleteCommand ();
    parameters: []
    return:
      type: System.Data.SqlClient.SqlCommand
      description: "Gerado automaticamente <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> objeto necessário para efetuar as eliminações."
  overload: System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)
  id: GetDeleteCommand(System.Boolean)
  parent: System.Data.SqlClient.SqlCommandBuilder
  langs:
  - csharp
  name: GetDeleteCommand(Boolean)
  nameWithType: SqlCommandBuilder.GetDeleteCommand(Boolean)
  fullName: System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém automaticamente gerado <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> objeto que é necessário para efetuar eliminações na base de dados."
  remarks: "Uma aplicação pode utilizar o <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A>método para resolução de problemas ou informativa fins porque devolve o <xref:System.Data.SqlClient.SqlCommand>objeto para ser executada.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A>       Também pode utilizar <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A>como base de um comando de modificação.</xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> Por exemplo, pode chamar <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A>e modificar o <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>valor e, em seguida, de definir explicitamente que no <xref:System.Data.SqlClient.SqlDataAdapter>.</xref:System.Data.SqlClient.SqlDataAdapter> </xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> </xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A>       Depois da instrução SQL é gerada pela primeira vez, a aplicação tem de chamar explicitamente <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>se alterar a instrução de qualquer forma.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> Caso contrário, o <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A>ainda irá utilizar as informações da instrução anterior, o que poderá não estar correta.</xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> As instruções SQL primeiro são geradas quando a aplicação chama um <xref:System.Data.Common.DbDataAdapter.Update%2A>ou <xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A>.</xref:System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand%2A> </xref:System.Data.Common.DbDataAdapter.Update%2A>       O comportamento predefinido, ao gerar nomes de parâmetros, consiste em utilizar @p1, @p2, e assim sucessivamente para os vários parâmetros. Transmitir `true` para o `useColumnsForParameterNames` parâmetro permite forçar o <xref:System.Data.OleDb.OleDbCommandBuilder>para gerar os parâmetros com base nos nomes de colunas em vez disso.</xref:System.Data.OleDb.OleDbCommandBuilder> Isto é concluída com êxito apenas se as seguintes condições são cumpridas: - <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>devolvidos pelo **GetSchema** chamada de método e encontrado no <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation>coleção foi especificada e o comprimento é igual ou maior do que o nome do parâmetro gerado.</xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> </xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>      -O nome do parâmetro gerado cumpre os critérios especificados no <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>devolvidos pelo **GetSchema** método chamada e encontrados no <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation>expressão regular da coleção.</xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> </xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>      -A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>devolveu o **GetSchema** chamada de método e encontrado no <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation>coleção é especificada.</xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> </xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>       Para obter mais informações, consulte [gerar comandos com CommandBuilders](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Data.SqlClient.SqlCommand GetDeleteCommand (bool useColumnsForParameterNames);
    parameters:
    - id: useColumnsForParameterNames
      type: System.Boolean
      description: "Se <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, gerar nomes de parâmetro de correspondência de nomes de coluna se possível. Se <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, gerar @p1, @p2, e assim sucessivamente."
    return:
      type: System.Data.SqlClient.SqlCommand
      description: "Gerado automaticamente <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> objeto que é necessário para efetuar as eliminações."
  overload: System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand
  id: GetInsertCommand
  parent: System.Data.SqlClient.SqlCommandBuilder
  langs:
  - csharp
  name: GetInsertCommand()
  nameWithType: SqlCommandBuilder.GetInsertCommand()
  fullName: System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém automaticamente gerado <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> objeto necessário para efetuar inserções na base de dados."
  remarks: "Uma aplicação pode utilizar o método de GetInsertCommand para fins de resolução de problemas ou informativas porque devolve o <xref:System.Data.SqlClient.SqlCommand>objeto para ser executada.</xref:System.Data.SqlClient.SqlCommand>       Também pode utilizar GetInsertCommand como a base de um comando de modificação. Por exemplo, pode chamar GetInsertCommand e modificar o <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>valor e, em seguida, de definir explicitamente que no <xref:System.Data.SqlClient.SqlDataAdapter>.</xref:System.Data.SqlClient.SqlDataAdapter> </xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>       Depois da instrução de Transact-SQL é gerada pela primeira vez, a aplicação tem de chamar explicitamente <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>se alterar a instrução de qualquer forma.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> Caso contrário, o GetInsertCommand ainda utilizará as informações da instrução anterior, o que poderá não estar correta. As instruções Transact-SQL, primeiro são geradas quando a aplicação chama um <xref:System.Data.Common.DbDataAdapter.Update%2A>ou GetInsertCommand.</xref:System.Data.Common.DbDataAdapter.Update%2A>       Para obter mais informações, consulte [gerar comandos com CommandBuilders](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Data.SqlClient.SqlCommand GetInsertCommand ();
    parameters: []
    return:
      type: System.Data.SqlClient.SqlCommand
      description: "Gerado automaticamente <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> necessário para efetuar inserções de objeto."
  overload: System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)
  id: GetInsertCommand(System.Boolean)
  parent: System.Data.SqlClient.SqlCommandBuilder
  langs:
  - csharp
  name: GetInsertCommand(Boolean)
  nameWithType: SqlCommandBuilder.GetInsertCommand(Boolean)
  fullName: System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém automaticamente gerado <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> objeto que é necessário para efetuar inserções na base de dados."
  remarks: "Uma aplicação pode utilizar o <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A>método para resolução de problemas ou informativa fins porque devolve o <xref:System.Data.SqlClient.SqlCommand>objeto para ser executada.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A>       Também pode utilizar <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A>como base de um comando de modificação.</xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> Por exemplo, pode chamar <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A>e modificar o <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>valor e, em seguida, de definir explicitamente que no <xref:System.Data.SqlClient.SqlDataAdapter>.</xref:System.Data.SqlClient.SqlDataAdapter> </xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> </xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A>       Depois da instrução de Transact-SQL é gerada pela primeira vez, a aplicação tem de chamar explicitamente <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>se alterar a instrução de qualquer forma.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> Caso contrário, o <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A>ainda irá utilizar as informações da instrução anterior, o que poderá não estar correta.</xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> As instruções Transact-SQL, primeiro são geradas quando a aplicação chama um <xref:System.Data.Common.DbDataAdapter.Update%2A>ou <xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A>.</xref:System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand%2A> </xref:System.Data.Common.DbDataAdapter.Update%2A>       O comportamento predefinido, ao gerar nomes de parâmetros, consiste em utilizar @p1, @p2, e assim sucessivamente para os vários parâmetros. Transmitir `true` para o `useColumnsForParameterNames` parâmetro permite forçar o <xref:System.Data.OleDb.OleDbCommandBuilder>para gerar os parâmetros com base nos nomes de colunas em vez disso.</xref:System.Data.OleDb.OleDbCommandBuilder> Isto é concluída com êxito apenas se as seguintes condições são cumpridas: - <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>devolvidos pelo **GetSchema** chamada de método e encontrado no <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation>coleção foi especificada e o comprimento é igual ou maior do que o nome do parâmetro gerado.</xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> </xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>      -O nome do parâmetro gerado cumpre os critérios especificados no <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>devolvidos pelo **GetSchema** método chamada e encontrados no <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation>expressão regular da coleção.</xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> </xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>      -A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>devolveu o **GetSchema** chamada de método e encontrado no <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation>coleção é especificada.</xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> </xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>       Para obter mais informações, consulte [gerar comandos com CommandBuilders](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Data.SqlClient.SqlCommand GetInsertCommand (bool useColumnsForParameterNames);
    parameters:
    - id: useColumnsForParameterNames
      type: System.Boolean
      description: "Se <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, gerar nomes de parâmetro de correspondência de nomes de coluna se possível. Se <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, gerar @p1, @p2, e assim sucessivamente."
    return:
      type: System.Data.SqlClient.SqlCommand
      description: "Gerado automaticamente <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> objeto que é necessário para efetuar inserções."
  overload: System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommandBuilder.GetParameterName(System.Int32)
  id: GetParameterName(System.Int32)
  parent: System.Data.SqlClient.SqlCommandBuilder
  langs:
  - csharp
  name: GetParameterName(Int32)
  nameWithType: SqlCommandBuilder.GetParameterName(Int32)
  fullName: System.Data.SqlClient.SqlCommandBuilder.GetParameterName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override string GetParameterName (int parameterOrdinal);
    parameters:
    - id: parameterOrdinal
      type: System.Int32
      description: "A adicionar."
    return:
      type: System.String
      description: "A adicionar."
  overload: System.Data.SqlClient.SqlCommandBuilder.GetParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommandBuilder.GetParameterName(System.String)
  id: GetParameterName(System.String)
  parent: System.Data.SqlClient.SqlCommandBuilder
  langs:
  - csharp
  name: GetParameterName(String)
  nameWithType: SqlCommandBuilder.GetParameterName(String)
  fullName: System.Data.SqlClient.SqlCommandBuilder.GetParameterName(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override string GetParameterName (string parameterName);
    parameters:
    - id: parameterName
      type: System.String
      description: "A adicionar."
    return:
      type: System.String
      description: "A adicionar."
  overload: System.Data.SqlClient.SqlCommandBuilder.GetParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommandBuilder.GetParameterPlaceholder(System.Int32)
  id: GetParameterPlaceholder(System.Int32)
  parent: System.Data.SqlClient.SqlCommandBuilder
  langs:
  - csharp
  name: GetParameterPlaceholder(Int32)
  nameWithType: SqlCommandBuilder.GetParameterPlaceholder(Int32)
  fullName: System.Data.SqlClient.SqlCommandBuilder.GetParameterPlaceholder(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override string GetParameterPlaceholder (int parameterOrdinal);
    parameters:
    - id: parameterOrdinal
      type: System.Int32
      description: "A adicionar."
    return:
      type: System.String
      description: "A adicionar."
  overload: System.Data.SqlClient.SqlCommandBuilder.GetParameterPlaceholder*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)
  id: GetSchemaTable(System.Data.Common.DbCommand)
  parent: System.Data.SqlClient.SqlCommandBuilder
  langs:
  - csharp
  name: GetSchemaTable(DbCommand)
  nameWithType: SqlCommandBuilder.GetSchemaTable(DbCommand)
  fullName: System.Data.SqlClient.SqlCommandBuilder.GetSchemaTable(DbCommand)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.DataTable GetSchemaTable (System.Data.Common.DbCommand srcCommand);
    parameters:
    - id: srcCommand
      type: System.Data.Common.DbCommand
      description: "A adicionar."
    return:
      type: System.Data.DataTable
      description: "A adicionar."
  overload: System.Data.SqlClient.SqlCommandBuilder.GetSchemaTable*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand
  id: GetUpdateCommand
  parent: System.Data.SqlClient.SqlCommandBuilder
  langs:
  - csharp
  name: GetUpdateCommand()
  nameWithType: SqlCommandBuilder.GetUpdateCommand()
  fullName: System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém automaticamente gerado <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> objeto necessário para efetuar atualizações na base de dados."
  remarks: "Uma aplicação pode utilizar o método de GetUpdateCommand para fins de resolução de problemas ou informativas porque devolve o <xref:System.Data.SqlClient.SqlCommand>objeto para ser executada.</xref:System.Data.SqlClient.SqlCommand>       Também pode utilizar GetUpdateCommand como a base de um comando de modificação. Por exemplo, pode chamar GetUpdateCommand e modificar o <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>valor e, em seguida, de definir explicitamente que no <xref:System.Data.SqlClient.SqlDataAdapter>.</xref:System.Data.SqlClient.SqlDataAdapter> </xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>       Depois da instrução de Transact-SQL é gerada pela primeira vez, a aplicação tem de chamar explicitamente <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>se alterar a instrução de qualquer forma.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> Caso contrário, o GetUpdateCommand ainda utilizará as informações da instrução anterior, o que poderá não estar correta. As instruções Transact-SQL, primeiro são geradas quando a aplicação chama um <xref:System.Data.Common.DbDataAdapter.Update%2A>ou GetUpdateCommand.</xref:System.Data.Common.DbDataAdapter.Update%2A>       Para obter mais informações, consulte [gerar comandos com CommandBuilders](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Data.SqlClient.SqlCommand GetUpdateCommand ();
    parameters: []
    return:
      type: System.Data.SqlClient.SqlCommand
      description: "Gerado automaticamente <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> objeto que é necessário para efetuar atualizações."
  overload: System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)
  id: GetUpdateCommand(System.Boolean)
  parent: System.Data.SqlClient.SqlCommandBuilder
  langs:
  - csharp
  name: GetUpdateCommand(Boolean)
  nameWithType: SqlCommandBuilder.GetUpdateCommand(Boolean)
  fullName: System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém automaticamente gerado <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> objeto necessário para efetuar atualizações na base de dados."
  remarks: "Uma aplicação pode utilizar o <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A>método para resolução de problemas ou informativa fins porque devolve o <xref:System.Data.SqlClient.SqlCommand>objeto para ser executada.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A>       Também pode utilizar <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A>como base de um comando de modificação.</xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> Por exemplo, pode chamar <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A>e modificar o <xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A>valor e, em seguida, de definir explicitamente que no <xref:System.Data.SqlClient.SqlDataAdapter>.</xref:System.Data.SqlClient.SqlDataAdapter> </xref:System.Data.SqlClient.SqlCommand.CommandTimeout%2A> </xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A>       Depois da instrução de Transact-SQL é gerada pela primeira vez, a aplicação tem de chamar explicitamente <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>se alterar a instrução de qualquer forma.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> Caso contrário, o <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A>ainda irá utilizar as informações da instrução anterior, o que poderá não estar correta.</xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> As instruções Transact-SQL, primeiro são geradas quando a aplicação chama um <xref:System.Data.Common.DbDataAdapter.Update%2A>ou <xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A>.</xref:System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand%2A> </xref:System.Data.Common.DbDataAdapter.Update%2A>       O comportamento predefinido, ao gerar nomes de parâmetros, consiste em utilizar @p1, @p2, e assim sucessivamente para os vários parâmetros. Transmitir `true` para o `useColumnsForParameterNames` parâmetro permite forçar o <xref:System.Data.OleDb.OleDbCommandBuilder>para gerar os parâmetros com base nos nomes de colunas em vez disso.</xref:System.Data.OleDb.OleDbCommandBuilder> Isto é concluída com êxito apenas se as seguintes condições são cumpridas: - <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>devolvidos pelo **GetSchema** chamada de método e encontrado no <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation>coleção foi especificada e o comprimento é igual ou maior do que o nome do parâmetro gerado.</xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> </xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>      -O nome do parâmetro gerado cumpre os critérios especificados no <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>devolvidos pelo **GetSchema** método chamada e encontrados no <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation>expressão regular da coleção.</xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> </xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>      -A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>devolveu o **GetSchema** chamada de método e encontrado no <xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation>coleção é especificada.</xref:System.Data.Common.DbMetaDataCollectionNames.DataSourceInformation> </xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>       Para obter mais informações, consulte [gerar comandos com CommandBuilders](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Data.SqlClient.SqlCommand GetUpdateCommand (bool useColumnsForParameterNames);
    parameters:
    - id: useColumnsForParameterNames
      type: System.Boolean
      description: "Se <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, gerar nomes de parâmetro de correspondência de nomes de coluna se possível. Se <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, gerar @p1, @p2, e assim sucessivamente."
    return:
      type: System.Data.SqlClient.SqlCommand
      description: "Gerado automaticamente <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> objeto necessário para efetuar atualizações."
  overload: System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)
  id: InitializeCommand(System.Data.Common.DbCommand)
  parent: System.Data.SqlClient.SqlCommandBuilder
  langs:
  - csharp
  name: InitializeCommand(DbCommand)
  nameWithType: SqlCommandBuilder.InitializeCommand(DbCommand)
  fullName: System.Data.SqlClient.SqlCommandBuilder.InitializeCommand(DbCommand)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.DbCommand InitializeCommand (System.Data.Common.DbCommand command);
    parameters:
    - id: command
      type: System.Data.Common.DbCommand
      description: "A adicionar."
    return:
      type: System.Data.Common.DbCommand
      description: "A adicionar."
  overload: System.Data.SqlClient.SqlCommandBuilder.InitializeCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommandBuilder.QuoteIdentifier(System.String)
  id: QuoteIdentifier(System.String)
  parent: System.Data.SqlClient.SqlCommandBuilder
  langs:
  - csharp
  name: QuoteIdentifier(String)
  nameWithType: SqlCommandBuilder.QuoteIdentifier(String)
  fullName: System.Data.SqlClient.SqlCommandBuilder.QuoteIdentifier(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Fornecido um identificador unquoted no caso de catálogo correto, devolve o correto entre aspas formulário esse identificador. Isto inclui corretamente escape qualquer aspas no identificador de incorporados."
  syntax:
    content: public override string QuoteIdentifier (string unquotedIdentifier);
    parameters:
    - id: unquotedIdentifier
      type: System.String
      description: "O identificador unquoted original."
    return:
      type: System.String
      description: "A versão delimitada por aspas do identificador. Incorporados aspas dentro do identificador estão corretamente caráter de escape correto."
  overload: System.Data.SqlClient.SqlCommandBuilder.QuoteIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommandBuilder.QuotePrefix
  id: QuotePrefix
  parent: System.Data.SqlClient.SqlCommandBuilder
  langs:
  - csharp
  name: QuotePrefix
  nameWithType: SqlCommandBuilder.QuotePrefix
  fullName: System.Data.SqlClient.SqlCommandBuilder.QuotePrefix
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém ou define o caráter inicial ou carateres da utilizar ao especificar os objetos de base de dados do SQL Server, como tabelas ou colunas, cujos nomes contêm carateres como espaços ou tokens reservados."
  remarks: >-
    > [!NOTE]

    >  Although you cannot change the QuotePrefix or <xref:System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix%2A> properties after an insert, update, or delete command has been generated, you can change their settings after calling the `Update` method of a DataAdapter.
  syntax:
    content: public override string QuotePrefix { get; set; }
    return:
      type: System.String
      description: "O caráter inicial ou carateres da utilizar. A predefinição é uma cadeia vazia."
  overload: System.Data.SqlClient.SqlCommandBuilder.QuotePrefix*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Esta propriedade não pode ser alterada depois de uma INSERT, UPDATE, ou foi gerado comando DELETE."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix
  id: QuoteSuffix
  parent: System.Data.SqlClient.SqlCommandBuilder
  langs:
  - csharp
  name: QuoteSuffix
  nameWithType: SqlCommandBuilder.QuoteSuffix
  fullName: System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém ou define o caráter ou carateres da utilizar ao especificar os objetos de base de dados do SQL Server, como tabelas ou colunas, cujos nomes contêm carateres como espaços ou tokens reservados final."
  remarks: >-
    > [!NOTE]

    >  Although you cannot change the <xref:System.Data.SqlClient.SqlCommandBuilder.QuotePrefix%2A> or QuoteSuffix properties after an insert, update, or delete operation has been generated, you can change their settings after calling the `Update` method of a DataAdapter.
  syntax:
    content: public override string QuoteSuffix { get; set; }
    return:
      type: System.String
      description: "O caráter final ou o carateres para utilizar. A predefinição é uma cadeia vazia."
  overload: System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Esta propriedade não pode ser alterada depois de um insert, update ou o comando delete foi gerado."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommandBuilder.SchemaSeparator
  id: SchemaSeparator
  parent: System.Data.SqlClient.SqlCommandBuilder
  langs:
  - csharp
  name: SchemaSeparator
  nameWithType: SqlCommandBuilder.SchemaSeparator
  fullName: System.Data.SqlClient.SqlCommandBuilder.SchemaSeparator
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém ou define o carácter a ser utilizado para o separador entre o identificador de esquema e quaisquer outros identificadores."
  remarks: "Geralmente, os servidores de base de dados indicam o esquema para um identificador ao separar o nome do esquema do identificador com caráter de algumas. Por exemplo, SQL Server utiliza um período, a criação de identificadores de conclusão, tais como Person.CustomerName, onde &quot;Pessoa&quot; é o nome de esquema e &quot;NomeDoCliente&quot; é o identificador. Definição desta propriedade permite aos programadores alterar este comportamento."
  syntax:
    content: public override string SchemaSeparator { get; set; }
    return:
      type: System.String
      description: "O carácter a ser utilizado como o separador de esquema."
  overload: System.Data.SqlClient.SqlCommandBuilder.SchemaSeparator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  id: SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  parent: System.Data.SqlClient.SqlCommandBuilder
  langs:
  - csharp
  name: SetRowUpdatingHandler(DbDataAdapter)
  nameWithType: SqlCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
  fullName: System.Data.SqlClient.SqlCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override void SetRowUpdatingHandler (System.Data.Common.DbDataAdapter adapter);
    parameters:
    - id: adapter
      type: System.Data.Common.DbDataAdapter
      description: "A adicionar."
  overload: System.Data.SqlClient.SqlCommandBuilder.SetRowUpdatingHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlCommandBuilder.UnquoteIdentifier(System.String)
  id: UnquoteIdentifier(System.String)
  parent: System.Data.SqlClient.SqlCommandBuilder
  langs:
  - csharp
  name: UnquoteIdentifier(String)
  nameWithType: SqlCommandBuilder.UnquoteIdentifier(String)
  fullName: System.Data.SqlClient.SqlCommandBuilder.UnquoteIdentifier(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Fornecido um identificador delimitado por aspas, devolve o formato correto unquoted esse identificador. Isto inclui corretamente unescaping qualquer aspas no identificador de incorporados."
  syntax:
    content: public override string UnquoteIdentifier (string quotedIdentifier);
    parameters:
    - id: quotedIdentifier
      type: System.String
      description: "O identificador que terão as respetivas aspas incorporadas removidas."
    return:
      type: System.String
      description: "O identificador unquoted, com aspas incorporados unescaped corretamente."
  overload: System.Data.SqlClient.SqlCommandBuilder.UnquoteIdentifier*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: System.Data.Common.DbCommandBuilder
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.SqlClient.SqlCommandBuilder.#ctor
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: SqlCommandBuilder()
  nameWithType: SqlCommandBuilder.SqlCommandBuilder()
  fullName: System.Data.SqlClient.SqlCommandBuilder.SqlCommandBuilder()
- uid: System.Data.SqlClient.SqlCommandBuilder.#ctor(System.Data.SqlClient.SqlDataAdapter)
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: SqlCommandBuilder(SqlDataAdapter)
  nameWithType: SqlCommandBuilder.SqlCommandBuilder(SqlDataAdapter)
  fullName: System.Data.SqlClient.SqlCommandBuilder.SqlCommandBuilder(SqlDataAdapter)
- uid: System.Data.SqlClient.SqlDataAdapter
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlDataAdapter
  nameWithType: SqlDataAdapter
  fullName: System.Data.SqlClient.SqlDataAdapter
- uid: System.Data.SqlClient.SqlCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  nameWithType: SqlCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  fullName: System.Data.SqlClient.SqlCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
- uid: System.Data.Common.DbParameter
  parent: System.Data.Common
  isExternal: false
  name: DbParameter
  nameWithType: DbParameter
  fullName: System.Data.Common.DbParameter
- uid: System.Data.DataRow
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: System.Data.StatementType
  parent: System.Data
  isExternal: false
  name: StatementType
  nameWithType: StatementType
  fullName: System.Data.StatementType
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlClient.SqlCommandBuilder.CatalogLocation
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: CatalogLocation
  nameWithType: SqlCommandBuilder.CatalogLocation
  fullName: System.Data.SqlClient.SqlCommandBuilder.CatalogLocation
- uid: System.Data.Common.CatalogLocation
  parent: System.Data.Common
  isExternal: false
  name: CatalogLocation
  nameWithType: CatalogLocation
  fullName: System.Data.Common.CatalogLocation
- uid: System.Data.SqlClient.SqlCommandBuilder.CatalogSeparator
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: CatalogSeparator
  nameWithType: SqlCommandBuilder.CatalogSeparator
  fullName: System.Data.SqlClient.SqlCommandBuilder.CatalogSeparator
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlClient.SqlCommandBuilder.DataAdapter
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: DataAdapter
  nameWithType: SqlCommandBuilder.DataAdapter
  fullName: System.Data.SqlClient.SqlCommandBuilder.DataAdapter
- uid: System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(System.Data.SqlClient.SqlCommand)
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: DeriveParameters(SqlCommand)
  nameWithType: SqlCommandBuilder.DeriveParameters(SqlCommand)
  fullName: System.Data.SqlClient.SqlCommandBuilder.DeriveParameters(SqlCommand)
- uid: System.Data.SqlClient.SqlCommand
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlCommand
  nameWithType: SqlCommand
  fullName: System.Data.SqlClient.SqlCommand
- uid: System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: GetDeleteCommand()
  nameWithType: SqlCommandBuilder.GetDeleteCommand()
  fullName: System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand()
- uid: System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(System.Boolean)
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: GetDeleteCommand(Boolean)
  nameWithType: SqlCommandBuilder.GetDeleteCommand(Boolean)
  fullName: System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand(Boolean)
- uid: System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: GetInsertCommand()
  nameWithType: SqlCommandBuilder.GetInsertCommand()
  fullName: System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand()
- uid: System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(System.Boolean)
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: GetInsertCommand(Boolean)
  nameWithType: SqlCommandBuilder.GetInsertCommand(Boolean)
  fullName: System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand(Boolean)
- uid: System.Data.SqlClient.SqlCommandBuilder.GetParameterName(System.Int32)
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: GetParameterName(Int32)
  nameWithType: SqlCommandBuilder.GetParameterName(Int32)
  fullName: System.Data.SqlClient.SqlCommandBuilder.GetParameterName(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.SqlClient.SqlCommandBuilder.GetParameterName(System.String)
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: GetParameterName(String)
  nameWithType: SqlCommandBuilder.GetParameterName(String)
  fullName: System.Data.SqlClient.SqlCommandBuilder.GetParameterName(String)
- uid: System.Data.SqlClient.SqlCommandBuilder.GetParameterPlaceholder(System.Int32)
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: GetParameterPlaceholder(Int32)
  nameWithType: SqlCommandBuilder.GetParameterPlaceholder(Int32)
  fullName: System.Data.SqlClient.SqlCommandBuilder.GetParameterPlaceholder(Int32)
- uid: System.Data.SqlClient.SqlCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: GetSchemaTable(DbCommand)
  nameWithType: SqlCommandBuilder.GetSchemaTable(DbCommand)
  fullName: System.Data.SqlClient.SqlCommandBuilder.GetSchemaTable(DbCommand)
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.Common.DbCommand
  parent: System.Data.Common
  isExternal: false
  name: DbCommand
  nameWithType: DbCommand
  fullName: System.Data.Common.DbCommand
- uid: System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: GetUpdateCommand()
  nameWithType: SqlCommandBuilder.GetUpdateCommand()
  fullName: System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand()
- uid: System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(System.Boolean)
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: GetUpdateCommand(Boolean)
  nameWithType: SqlCommandBuilder.GetUpdateCommand(Boolean)
  fullName: System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand(Boolean)
- uid: System.Data.SqlClient.SqlCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: InitializeCommand(DbCommand)
  nameWithType: SqlCommandBuilder.InitializeCommand(DbCommand)
  fullName: System.Data.SqlClient.SqlCommandBuilder.InitializeCommand(DbCommand)
- uid: System.Data.SqlClient.SqlCommandBuilder.QuoteIdentifier(System.String)
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: QuoteIdentifier(String)
  nameWithType: SqlCommandBuilder.QuoteIdentifier(String)
  fullName: System.Data.SqlClient.SqlCommandBuilder.QuoteIdentifier(String)
- uid: System.Data.SqlClient.SqlCommandBuilder.QuotePrefix
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: QuotePrefix
  nameWithType: SqlCommandBuilder.QuotePrefix
  fullName: System.Data.SqlClient.SqlCommandBuilder.QuotePrefix
- uid: System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: QuoteSuffix
  nameWithType: SqlCommandBuilder.QuoteSuffix
  fullName: System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix
- uid: System.Data.SqlClient.SqlCommandBuilder.SchemaSeparator
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: SchemaSeparator
  nameWithType: SqlCommandBuilder.SchemaSeparator
  fullName: System.Data.SqlClient.SqlCommandBuilder.SchemaSeparator
- uid: System.Data.SqlClient.SqlCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: SetRowUpdatingHandler(DbDataAdapter)
  nameWithType: SqlCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
  fullName: System.Data.SqlClient.SqlCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
- uid: System.Data.Common.DbDataAdapter
  parent: System.Data.Common
  isExternal: false
  name: DbDataAdapter
  nameWithType: DbDataAdapter
  fullName: System.Data.Common.DbDataAdapter
- uid: System.Data.SqlClient.SqlCommandBuilder.UnquoteIdentifier(System.String)
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: UnquoteIdentifier(String)
  nameWithType: SqlCommandBuilder.UnquoteIdentifier(String)
  fullName: System.Data.SqlClient.SqlCommandBuilder.UnquoteIdentifier(String)
- uid: System.Data.SqlClient.SqlCommandBuilder.#ctor*
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: SqlCommandBuilder
  nameWithType: SqlCommandBuilder.SqlCommandBuilder
- uid: System.Data.SqlClient.SqlCommandBuilder.ApplyParameterInfo*
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: ApplyParameterInfo
  nameWithType: SqlCommandBuilder.ApplyParameterInfo
- uid: System.Data.SqlClient.SqlCommandBuilder.CatalogLocation*
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: CatalogLocation
  nameWithType: SqlCommandBuilder.CatalogLocation
- uid: System.Data.SqlClient.SqlCommandBuilder.CatalogSeparator*
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: CatalogSeparator
  nameWithType: SqlCommandBuilder.CatalogSeparator
- uid: System.Data.SqlClient.SqlCommandBuilder.DataAdapter*
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: DataAdapter
  nameWithType: SqlCommandBuilder.DataAdapter
- uid: System.Data.SqlClient.SqlCommandBuilder.DeriveParameters*
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: DeriveParameters
  nameWithType: SqlCommandBuilder.DeriveParameters
- uid: System.Data.SqlClient.SqlCommandBuilder.GetDeleteCommand*
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: GetDeleteCommand
  nameWithType: SqlCommandBuilder.GetDeleteCommand
- uid: System.Data.SqlClient.SqlCommandBuilder.GetInsertCommand*
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: GetInsertCommand
  nameWithType: SqlCommandBuilder.GetInsertCommand
- uid: System.Data.SqlClient.SqlCommandBuilder.GetParameterName*
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: GetParameterName
  nameWithType: SqlCommandBuilder.GetParameterName
- uid: System.Data.SqlClient.SqlCommandBuilder.GetParameterPlaceholder*
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: GetParameterPlaceholder
  nameWithType: SqlCommandBuilder.GetParameterPlaceholder
- uid: System.Data.SqlClient.SqlCommandBuilder.GetSchemaTable*
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: GetSchemaTable
  nameWithType: SqlCommandBuilder.GetSchemaTable
- uid: System.Data.SqlClient.SqlCommandBuilder.GetUpdateCommand*
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: GetUpdateCommand
  nameWithType: SqlCommandBuilder.GetUpdateCommand
- uid: System.Data.SqlClient.SqlCommandBuilder.InitializeCommand*
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: InitializeCommand
  nameWithType: SqlCommandBuilder.InitializeCommand
- uid: System.Data.SqlClient.SqlCommandBuilder.QuoteIdentifier*
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: QuoteIdentifier
  nameWithType: SqlCommandBuilder.QuoteIdentifier
- uid: System.Data.SqlClient.SqlCommandBuilder.QuotePrefix*
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: QuotePrefix
  nameWithType: SqlCommandBuilder.QuotePrefix
- uid: System.Data.SqlClient.SqlCommandBuilder.QuoteSuffix*
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: QuoteSuffix
  nameWithType: SqlCommandBuilder.QuoteSuffix
- uid: System.Data.SqlClient.SqlCommandBuilder.SchemaSeparator*
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: SchemaSeparator
  nameWithType: SqlCommandBuilder.SchemaSeparator
- uid: System.Data.SqlClient.SqlCommandBuilder.SetRowUpdatingHandler*
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: SetRowUpdatingHandler
  nameWithType: SqlCommandBuilder.SetRowUpdatingHandler
- uid: System.Data.SqlClient.SqlCommandBuilder.UnquoteIdentifier*
  parent: System.Data.SqlClient.SqlCommandBuilder
  isExternal: false
  name: UnquoteIdentifier
  nameWithType: SqlCommandBuilder.UnquoteIdentifier
