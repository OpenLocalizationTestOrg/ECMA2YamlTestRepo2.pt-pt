### YamlMime:ManagedReference
items:
- uid: System.Collections.CaseInsensitiveHashCodeProvider
  id: CaseInsensitiveHashCodeProvider
  children:
  - System.Collections.CaseInsensitiveHashCodeProvider.#ctor
  - System.Collections.CaseInsensitiveHashCodeProvider.#ctor(System.Globalization.CultureInfo)
  - System.Collections.CaseInsensitiveHashCodeProvider.Default
  - System.Collections.CaseInsensitiveHashCodeProvider.DefaultInvariant
  - System.Collections.CaseInsensitiveHashCodeProvider.GetHashCode(System.Object)
  langs:
  - csharp
  name: CaseInsensitiveHashCodeProvider
  nameWithType: CaseInsensitiveHashCodeProvider
  fullName: System.Collections.CaseInsensitiveHashCodeProvider
  type: Class
  summary: "Supplies a hash code for an object, using a hashing algorithm that ignores the case of strings."
  remarks: "CaseInsensitiveHashCodeProvider implements the <xref:System.Collections.IHashCodeProvider> interface supporting case-insensitive comparisons on strings, just as <xref:System.Collections.CaseInsensitiveComparer> implements the <xref:System.Collections.IComparer> interface supporting case-insensitive comparisons on strings.       The objects used as keys by a <xref:System.Collections.Hashtable> are required to override the <xref:System.Object.GetHashCode%2A?displayProperty=fullName> method (or the <xref:System.Collections.IHashCodeProvider> interface) and the <xref:System.Object.Equals%2A?displayProperty=fullName> method (or the <xref:System.Collections.IComparer> interface). The implementation of both methods or interfaces must handle case sensitivity the same way; otherwise, the <xref:System.Collections.Hashtable> might behave incorrectly. For example, when creating a <xref:System.Collections.Hashtable>, you must use this class with the <xref:System.Collections.CaseInsensitiveComparer> class or any case-insensitive <xref:System.Collections.IComparer> implementation."
  example:
  - "The following code example creates a case-sensitive hash table and a case-insensitive hash table and demonstrates the difference in their behavior, even if both contain the same elements.  \n  \n [!code-cpp[System.Collections.CaseInsensitive#1](~/add/codesnippet/cpp/t-system.collections.cas_1_1.cpp)]\n [!code-cs[System.Collections.CaseInsensitive#1](~/add/codesnippet/csharp/t-system.collections.cas_1_1.cs)]\n [!code-vb[System.Collections.CaseInsensitive#1](~/add/codesnippet/visualbasic/t-system.collections.cas_1_1.vb)]"
  syntax:
    content: >-
      [System.Obsolete("Please use StringComparer instead.")]

      [System.Runtime.InteropServices.ComVisible(true)]

      public class CaseInsensitiveHashCodeProvider : System.Collections.IHashCodeProvider
  inheritance:
  - System.Object
  implements:
  - System.Collections.IHashCodeProvider
  inheritedMembers: []
  platform:
  - net462
- uid: System.Collections.CaseInsensitiveHashCodeProvider.#ctor
  id: '#ctor'
  parent: System.Collections.CaseInsensitiveHashCodeProvider
  langs:
  - csharp
  name: CaseInsensitiveHashCodeProvider()
  nameWithType: CaseInsensitiveHashCodeProvider.CaseInsensitiveHashCodeProvider()
  fullName: System.Collections.CaseInsensitiveHashCodeProvider.CaseInsensitiveHashCodeProvider()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Initializes a new instance of the <xref href=&quot;System.Collections.CaseInsensitiveHashCodeProvider&quot;></xref> class using the &lt;xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=fullName&gt; of the current thread."
  remarks: "When the <xref:System.Collections.CaseInsensitiveHashCodeProvider> instance is created using this constructor, the <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=fullName> of the current thread is saved. Comparison procedures use the saved culture to determine the casing rules; therefore, hash code comparisons might have different results depending on the culture. For more information on culture-specific comparisons, see the <xref:System.Globalization> namespace and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example creates a case-sensitive hash table and a case-insensitive hash table and demonstrates the difference in their behavior, even if both contain the same elements.  \n  \n [!code-cpp[System.Collections.CaseInsensitive#1](~/add/codesnippet/cpp/m-system.collections.cas_0_1.cpp)]\n [!code-cs[System.Collections.CaseInsensitive#1](~/add/codesnippet/csharp/m-system.collections.cas_0_1.cs)]\n [!code-vb[System.Collections.CaseInsensitive#1](~/add/codesnippet/visualbasic/m-system.collections.cas_0_1.vb)]"
  syntax:
    content: public CaseInsensitiveHashCodeProvider ();
    parameters: []
  overload: System.Collections.CaseInsensitiveHashCodeProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.CaseInsensitiveHashCodeProvider.#ctor(System.Globalization.CultureInfo)
  id: '#ctor(System.Globalization.CultureInfo)'
  parent: System.Collections.CaseInsensitiveHashCodeProvider
  langs:
  - csharp
  name: CaseInsensitiveHashCodeProvider(CultureInfo)
  nameWithType: CaseInsensitiveHashCodeProvider.CaseInsensitiveHashCodeProvider(CultureInfo)
  fullName: System.Collections.CaseInsensitiveHashCodeProvider.CaseInsensitiveHashCodeProvider(CultureInfo)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Initializes a new instance of the <xref href=&quot;System.Collections.CaseInsensitiveHashCodeProvider&quot;></xref> class using the specified &lt;xref:System.Globalization.CultureInfo?displayProperty=fullName&gt;."
  remarks: "Comparison procedures use the specified <xref:System.Globalization.CultureInfo?displayProperty=fullName> to determine the casing rules. Hash code comparisons might have different results depending on the culture. For more information on culture-specific comparisons, see the <xref:System.Globalization> namespace and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example creates a case-sensitive hash table and a case-insensitive hash table and demonstrates the difference in their behavior, even if both contain the same elements.  \n  \n [!code-cpp[System.Collections.CaseInsensitive#1](~/add/codesnippet/cpp/dc171b76-efd0-4f9c-ac68-_1.cpp)]\n [!code-cs[System.Collections.CaseInsensitive#1](~/add/codesnippet/csharp/dc171b76-efd0-4f9c-ac68-_1.cs)]\n [!code-vb[System.Collections.CaseInsensitive#1](~/add/codesnippet/visualbasic/dc171b76-efd0-4f9c-ac68-_1.vb)]"
  syntax:
    content: public CaseInsensitiveHashCodeProvider (System.Globalization.CultureInfo culture);
    parameters:
    - id: culture
      type: System.Globalization.CultureInfo
      description: "The &lt;xref:System.Globalization.CultureInfo?displayProperty=fullName&gt; to use for the new <xref href=&quot;System.Collections.CaseInsensitiveHashCodeProvider&quot;></xref>."
  overload: System.Collections.CaseInsensitiveHashCodeProvider.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>culture</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.CaseInsensitiveHashCodeProvider.Default
  id: Default
  parent: System.Collections.CaseInsensitiveHashCodeProvider
  langs:
  - csharp
  name: Default
  nameWithType: CaseInsensitiveHashCodeProvider.Default
  fullName: System.Collections.CaseInsensitiveHashCodeProvider.Default
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Gets an instance of <xref href=&quot;System.Collections.CaseInsensitiveHashCodeProvider&quot;></xref> that is associated with the &lt;xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=fullName&gt; of the current thread and that is always available."
  remarks: "When the <xref:System.Collections.CaseInsensitiveHashCodeProvider> instance is created using the parameterless constructor, the <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=fullName> of the current thread is saved. Comparison procedures use the saved culture to determine the casing rules; therefore, hash code comparisons might have different results depending on the culture. For more information on culture-specific comparisons, see the <xref:System.Globalization> namespace and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static System.Collections.CaseInsensitiveHashCodeProvider Default { get; }
    return:
      type: System.Collections.CaseInsensitiveHashCodeProvider
      description: "An instance of <xref href=&quot;System.Collections.CaseInsensitiveHashCodeProvider&quot;></xref> that is associated with the &lt;xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=fullName&gt; of the current thread."
  overload: System.Collections.CaseInsensitiveHashCodeProvider.Default*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.CaseInsensitiveHashCodeProvider.DefaultInvariant
  id: DefaultInvariant
  parent: System.Collections.CaseInsensitiveHashCodeProvider
  langs:
  - csharp
  name: DefaultInvariant
  nameWithType: CaseInsensitiveHashCodeProvider.DefaultInvariant
  fullName: System.Collections.CaseInsensitiveHashCodeProvider.DefaultInvariant
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Gets an instance of <xref href=&quot;System.Collections.CaseInsensitiveHashCodeProvider&quot;></xref> that is associated with &lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName&gt; and that is always available."
  remarks: "Comparison procedures use the <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName> to determine the casing rules. Hash code comparisons might have different results depending on the culture. For more information on culture-specific comparisons, see the <xref:System.Globalization> namespace and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example creates a case-sensitive hash table and a case-insensitive hash table and demonstrates the difference in their behavior, even if both contain the same elements.  \n  \n [!code-cpp[System.Collections.CaseInsensitive#1](~/add/codesnippet/cpp/p-system.collections.cas_0_1.cpp)]\n [!code-cs[System.Collections.CaseInsensitive#1](~/add/codesnippet/csharp/p-system.collections.cas_0_1.cs)]\n [!code-vb[System.Collections.CaseInsensitive#1](~/add/codesnippet/visualbasic/p-system.collections.cas_0_1.vb)]"
  syntax:
    content: public static System.Collections.CaseInsensitiveHashCodeProvider DefaultInvariant { get; }
    return:
      type: System.Collections.CaseInsensitiveHashCodeProvider
      description: "An instance of <xref href=&quot;System.Collections.CaseInsensitiveHashCodeProvider&quot;></xref> that is associated with &lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName&gt;."
  overload: System.Collections.CaseInsensitiveHashCodeProvider.DefaultInvariant*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.CaseInsensitiveHashCodeProvider.GetHashCode(System.Object)
  id: GetHashCode(System.Object)
  parent: System.Collections.CaseInsensitiveHashCodeProvider
  langs:
  - csharp
  name: GetHashCode(Object)
  nameWithType: CaseInsensitiveHashCodeProvider.GetHashCode(Object)
  fullName: System.Collections.CaseInsensitiveHashCodeProvider.GetHashCode(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "Returns a hash code for the given object, using a hashing algorithm that ignores the case of strings."
  remarks: "The return value from this method must not be persisted for two reasons. First, the hash function of a class might be altered to generate a better distribution, thereby rendering any values from the old hash function useless. Second, the default implementation of this class does not guarantee that the same value will be returned by different instances."
  syntax:
    content: public int GetHashCode (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "The <xref:System.Object> for which a hash code is to be returned."
    return:
      type: System.Int32
      description: "A hash code for the given object, using a hashing algorithm that ignores the case of strings."
  overload: System.Collections.CaseInsensitiveHashCodeProvider.GetHashCode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>obj</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Collections.CaseInsensitiveHashCodeProvider.#ctor
  parent: System.Collections.CaseInsensitiveHashCodeProvider
  isExternal: false
  name: CaseInsensitiveHashCodeProvider()
  nameWithType: CaseInsensitiveHashCodeProvider.CaseInsensitiveHashCodeProvider()
  fullName: System.Collections.CaseInsensitiveHashCodeProvider.CaseInsensitiveHashCodeProvider()
- uid: System.Collections.CaseInsensitiveHashCodeProvider.#ctor(System.Globalization.CultureInfo)
  parent: System.Collections.CaseInsensitiveHashCodeProvider
  isExternal: false
  name: CaseInsensitiveHashCodeProvider(CultureInfo)
  nameWithType: CaseInsensitiveHashCodeProvider.CaseInsensitiveHashCodeProvider(CultureInfo)
  fullName: System.Collections.CaseInsensitiveHashCodeProvider.CaseInsensitiveHashCodeProvider(CultureInfo)
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Collections.CaseInsensitiveHashCodeProvider.Default
  parent: System.Collections.CaseInsensitiveHashCodeProvider
  isExternal: false
  name: Default
  nameWithType: CaseInsensitiveHashCodeProvider.Default
  fullName: System.Collections.CaseInsensitiveHashCodeProvider.Default
- uid: System.Collections.CaseInsensitiveHashCodeProvider
  parent: System.Collections
  isExternal: false
  name: CaseInsensitiveHashCodeProvider
  nameWithType: CaseInsensitiveHashCodeProvider
  fullName: System.Collections.CaseInsensitiveHashCodeProvider
- uid: System.Collections.CaseInsensitiveHashCodeProvider.DefaultInvariant
  parent: System.Collections.CaseInsensitiveHashCodeProvider
  isExternal: false
  name: DefaultInvariant
  nameWithType: CaseInsensitiveHashCodeProvider.DefaultInvariant
  fullName: System.Collections.CaseInsensitiveHashCodeProvider.DefaultInvariant
- uid: System.Collections.CaseInsensitiveHashCodeProvider.GetHashCode(System.Object)
  parent: System.Collections.CaseInsensitiveHashCodeProvider
  isExternal: false
  name: GetHashCode(Object)
  nameWithType: CaseInsensitiveHashCodeProvider.GetHashCode(Object)
  fullName: System.Collections.CaseInsensitiveHashCodeProvider.GetHashCode(Object)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.CaseInsensitiveHashCodeProvider.#ctor*
  parent: System.Collections.CaseInsensitiveHashCodeProvider
  isExternal: false
  name: CaseInsensitiveHashCodeProvider
  nameWithType: CaseInsensitiveHashCodeProvider.CaseInsensitiveHashCodeProvider
- uid: System.Collections.CaseInsensitiveHashCodeProvider.Default*
  parent: System.Collections.CaseInsensitiveHashCodeProvider
  isExternal: false
  name: Default
  nameWithType: CaseInsensitiveHashCodeProvider.Default
- uid: System.Collections.CaseInsensitiveHashCodeProvider.DefaultInvariant*
  parent: System.Collections.CaseInsensitiveHashCodeProvider
  isExternal: false
  name: DefaultInvariant
  nameWithType: CaseInsensitiveHashCodeProvider.DefaultInvariant
- uid: System.Collections.CaseInsensitiveHashCodeProvider.GetHashCode*
  parent: System.Collections.CaseInsensitiveHashCodeProvider
  isExternal: false
  name: GetHashCode
  nameWithType: CaseInsensitiveHashCodeProvider.GetHashCode
