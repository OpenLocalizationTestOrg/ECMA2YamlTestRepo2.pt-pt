### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.ImageButton
  id: ImageButton
  children:
  - System.Web.UI.WebControls.ImageButton.#ctor
  - System.Web.UI.WebControls.ImageButton.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.ImageButton.CausesValidation
  - System.Web.UI.WebControls.ImageButton.Click
  - System.Web.UI.WebControls.ImageButton.Command
  - System.Web.UI.WebControls.ImageButton.CommandArgument
  - System.Web.UI.WebControls.ImageButton.CommandName
  - System.Web.UI.WebControls.ImageButton.Enabled
  - System.Web.UI.WebControls.ImageButton.GenerateEmptyAlternateText
  - System.Web.UI.WebControls.ImageButton.GetPostBackOptions
  - System.Web.UI.WebControls.ImageButton.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.UI.WebControls.ImageButton.OnClick(System.Web.UI.ImageClickEventArgs)
  - System.Web.UI.WebControls.ImageButton.OnClientClick
  - System.Web.UI.WebControls.ImageButton.OnCommand(System.Web.UI.WebControls.CommandEventArgs)
  - System.Web.UI.WebControls.ImageButton.OnPreRender(System.EventArgs)
  - System.Web.UI.WebControls.ImageButton.PostBackUrl
  - System.Web.UI.WebControls.ImageButton.RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.ImageButton.RaisePostDataChangedEvent
  - System.Web.UI.WebControls.ImageButton.SupportsDisabledAttribute
  - System.Web.UI.WebControls.ImageButton.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.UI.WebControls.ImageButton.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent
  - System.Web.UI.WebControls.ImageButton.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.ImageButton.System#Web#UI#WebControls#IButtonControl#Text
  - System.Web.UI.WebControls.ImageButton.TagKey
  - System.Web.UI.WebControls.ImageButton.Text
  - System.Web.UI.WebControls.ImageButton.ValidationGroup
  langs:
  - csharp
  name: ImageButton
  nameWithType: ImageButton
  fullName: System.Web.UI.WebControls.ImageButton
  type: Class
  summary: "A control that displays an image and responds to mouse clicks on the image."
  remarks: "In this topic:      -   [Introduction](#introduction)      -   [Determining Where the User Clicked](#DeterminingWhereTheUserClicked)      -   [ImageButton Controls and Validation](#ButtonControlsAndValidation)      -   [Accessibility](#accessibility)      -   [Declarative Syntax](#DeclarativeSyntax)      <a name=&quot;introduction&quot;></a>    ## Introduction    Use the ImageButton control to display an image that responds to mouse clicks.       Both the <xref:System.Web.UI.WebControls.ImageButton.Click> and <xref:System.Web.UI.WebControls.ImageButton.Command> events are raised when the ImageButton control is clicked.       You can use the <xref:System.Web.UI.WebControls.ImageButton.OnCommand%2A> event handler to make the ImageButton control behave like a Command button. A command name can be associated with the control by using the <xref:System.Web.UI.WebControls.ImageButton.CommandName%2A> property. This allows multiple ImageButton controls to be placed on the same Web page. The value of the <xref:System.Web.UI.WebControls.ImageButton.CommandName%2A> property can then be programmatically identified in the <xref:System.Web.UI.WebControls.ImageButton.OnCommand%2A> event handler to determine the appropriate action to perform when each ImageButton control is clicked. The <xref:System.Web.UI.WebControls.ImageButton.CommandArgument%2A> property can also be used to pass additional information about the command, such as specifying ascending order.       Using the ImageButton control is similar to using the ASP.NET <xref:System.Web.UI.WebControls.Button> control. For more information, see [Button Web Server Controls Content Map](~/add/includes/ajax-current-ext-md.md). and the class overview for the <xref:System.Web.UI.WebControls.Button> control.      <a name=&quot;DeterminingWhereTheUserClicked&quot;></a>    ## Determining Where the User Clicked    By using the <xref:System.Web.UI.WebControls.ImageButton.OnClick%2A> event handler, you can programmatically determine the coordinates where the image is clicked. You can then code a response, based on the values of the coordinates. Note that the origin (0, 0) is located at the upper left corner of the image.      <a name=&quot;ButtonControlsAndValidation&quot;></a>    ## ImageButton Controls and Validation    By default, page validation is performed when an ImageButton control is clicked. Page validation determines whether the input controls associated with a validation control on the page all pass the validation rules specified by the validation control. To prevent page validation from occurring, set the <xref:System.Web.UI.WebControls.ImageButton.CausesValidation%2A> property to `false`.      <a name=&quot;accessibility&quot;></a>    ## Accessibility    For information about how to configure this control so that it generates markup that conforms to accessibility standards, see [Accessibility in Visual Studio and ASP.NET](~/add/includes/ajax-current-ext-md.md) and [ASP.NET Controls and Accessibility](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;DeclarativeSyntax&quot;></a>    ## Declarative Syntax      ```   <asp:ImageButton       AccessKey=&quot;string&quot;       AlternateText=&quot;string&quot;       BackColor=&quot;color name|#dddddd&quot;       BorderColor=&quot;color name|#dddddd&quot;       BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|           Inset|Outset&quot;       BorderWidth=&quot;size&quot;       CausesValidation=&quot;True|False&quot;       CommandArgument=&quot;string&quot;       CommandName=&quot;string&quot;       CssClass=&quot;string&quot;       DescriptionUrl=&quot;uri&quot;       Enabled=&quot;True|False&quot;       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       ForeColor=&quot;color name|#dddddd&quot;       Height=&quot;size&quot;       ID=&quot;string&quot;       ImageAlign=&quot;NotSet|Left|Right|Baseline|Top|Middle|Bottom|           AbsBottom|AbsMiddle|TextTop&quot;       ImageUrl=&quot;uri&quot;       OnClick=&quot;Click event handler&quot;       OnClientClick=&quot;string&quot;       OnCommand=&quot;Command event handler&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnUnload=&quot;Unload event handler&quot;       PostBackUrl=&quot;uri&quot;       runat=&quot;server&quot;       SkinID=&quot;string&quot;       Style=&quot;string&quot;       TabIndex=&quot;integer&quot;       ToolTip=&quot;string&quot;       ValidationGroup=&quot;string&quot;       Visible=&quot;True|False&quot;       Width=&quot;size&quot;   />   ```"
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=192874).  \n  \n The following code example demonstrates how to create an ImageButton control that displays the coordinates at which an image is clicked.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Classic ImageButton.Click Example#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_287_1.aspx)]\n [!code-vb[Classic ImageButton.Click Example#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_287_1.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("Click")]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.PreviewControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.SupportsEventValidation]

      public class ImageButton : System.Web.UI.WebControls.Image, System.Web.UI.IPostBackDataHandler, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.IButtonControl
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.WebControls.WebControl
  - System.Web.UI.WebControls.Image
  implements:
  - System.Web.UI.IPostBackDataHandler
  - System.Web.UI.IPostBackEventHandler
  - System.Web.UI.WebControls.IButtonControl
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnInit(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  - System.Web.UI.WebControls.Image.AlternateText
  - System.Web.UI.WebControls.Image.DescriptionUrl
  - System.Web.UI.WebControls.Image.Font
  - System.Web.UI.WebControls.Image.ImageAlign
  - System.Web.UI.WebControls.Image.ImageUrl
  - System.Web.UI.WebControls.Image.RenderContents(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.AccessKey
  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Attributes
  - System.Web.UI.WebControls.WebControl.BackColor
  - System.Web.UI.WebControls.WebControl.BorderColor
  - System.Web.UI.WebControls.WebControl.BorderStyle
  - System.Web.UI.WebControls.WebControl.BorderWidth
  - System.Web.UI.WebControls.WebControl.ControlStyle
  - System.Web.UI.WebControls.WebControl.ControlStyleCreated
  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  - System.Web.UI.WebControls.WebControl.CreateControlStyle
  - System.Web.UI.WebControls.WebControl.CssClass
  - System.Web.UI.WebControls.WebControl.DisabledCssClass
  - System.Web.UI.WebControls.WebControl.EnableTheming
  - System.Web.UI.WebControls.WebControl.ForeColor
  - System.Web.UI.WebControls.WebControl.HasAttributes
  - System.Web.UI.WebControls.WebControl.Height
  - System.Web.UI.WebControls.WebControl.IsEnabled
  - System.Web.UI.WebControls.WebControl.LoadViewState(System.Object)
  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.SaveViewState
  - System.Web.UI.WebControls.WebControl.SkinID
  - System.Web.UI.WebControls.WebControl.Style
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.WebControls.WebControl.TabIndex
  - System.Web.UI.WebControls.WebControl.TagName
  - System.Web.UI.WebControls.WebControl.ToolTip
  - System.Web.UI.WebControls.WebControl.TrackViewState
  - System.Web.UI.WebControls.WebControl.Width
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageButton.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.ImageButton
  langs:
  - csharp
  name: ImageButton()
  nameWithType: ImageButton.ImageButton()
  fullName: System.Web.UI.WebControls.ImageButton.ImageButton()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.UI.WebControls.ImageButton&quot;></xref> class."
  remarks: "Use this constructor to create and initialize a new instance of the <xref:System.Web.UI.WebControls.ImageButton> class."
  example:
  - "The following example demonstrates how to create and initialize a new instance of the <xref:System.Web.UI.WebControls.ImageButton> class.  \n  \n [!code-cs[Classic ImageButton.ImageButton Example#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_98_1.cs)]\n [!code-vb[Classic ImageButton.ImageButton Example#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_98_1.vb)]"
  syntax:
    content: public ImageButton ();
    parameters: []
  overload: System.Web.UI.WebControls.ImageButton.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageButton.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  id: AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.ImageButton
  langs:
  - csharp
  name: AddAttributesToRender(HtmlTextWriter)
  nameWithType: ImageButton.AddAttributesToRender(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.ImageButton.AddAttributesToRender(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Adds the attributes of an <xref href=&quot;System.Web.UI.WebControls.ImageButton&quot;></xref> to the output stream for rendering on the client."
  remarks: "The <xref:System.Web.UI.WebControls.ImageButton.OnPreRender%2A> method is used primarily by control developers when deriving a custom class from the <xref:System.Web.UI.WebControls.ImageButton> control."
  example:
  - "The following code example demonstrates how to override the AddAttributesToRender method in a custom server control so that the <xref:System.Web.UI.WebControls.ImageButton> text always appears with a thin border.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. The first part of this code sample must be copied into an empty text file that has an .aspx extension. The second part must be saved as a code file (either .cs for C# or .vb for Visual Basic). For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[CustomImageButtonAddAttributesToRender#1](~/add/codesnippet/csharp/820d54c2-202d-4ba3-a773-_1.aspx)]\n [!code-vb[CustomImageButtonAddAttributesToRender#1](~/add/codesnippet/visualbasic/820d54c2-202d-4ba3-a773-_1.aspx)]  \n[!code-cs[CustomImageButtonAddAttributesToRender#2](~/add/codesnippet/csharp/820d54c2-202d-4ba3-a773-_2.cs)]\n[!code-vb[CustomImageButtonAddAttributesToRender#2](~/add/codesnippet/visualbasic/820d54c2-202d-4ba3-a773-_2.vb)]"
  syntax:
    content: protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "The output stream to render on the client."
  overload: System.Web.UI.WebControls.ImageButton.AddAttributesToRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageButton.CausesValidation
  id: CausesValidation
  parent: System.Web.UI.WebControls.ImageButton
  langs:
  - csharp
  name: CausesValidation
  nameWithType: ImageButton.CausesValidation
  fullName: System.Web.UI.WebControls.ImageButton.CausesValidation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets a value indicating whether validation is performed when the <xref href=&quot;System.Web.UI.WebControls.ImageButton&quot;></xref> control is clicked."
  remarks: "By default, page validation is performed when an <xref:System.Web.UI.WebControls.ImageButton> control is clicked. Page validation determines whether the input controls associated with a validation control on the page all pass the validation rules specified by the validation control.       You can specify or determine whether validation is performed on both the client and the server when an <xref:System.Web.UI.WebControls.ImageButton> control is clicked by using the CausesValidation property. To prevent validation from being performed, set the CausesValidation property to `false`.       This property is commonly set to `false` for a Reset or Clear button to prevent validation from being performed when the button is clicked.       When the value of the CausesValidation property is set to `true`, you can also use the <xref:System.Web.UI.WebControls.ImageButton.ValidationGroup%2A> property to specify the name of the validation group for which the <xref:System.Web.UI.WebControls.ImageButton> control causes validation.       This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates how to use the CausesValidation property to prevent page validation from occurring. Notice how the <xref:System.Web.UI.WebControls.BaseValidator.Validate%2A> method activates each validation control independently.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[ImageButtonCausesValidation#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_248_1.aspx)]\n [!code-cs[ImageButtonCausesValidation#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_248_1.aspx)]"
  syntax:
    content: public virtual bool CausesValidation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if validation is performed when the <xref href=&quot;System.Web.UI.WebControls.ImageButton&quot;></xref> control is clicked; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default value is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.ImageButton.CausesValidation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageButton.Click
  id: Click
  parent: System.Web.UI.WebControls.ImageButton
  langs:
  - csharp
  name: Click
  nameWithType: ImageButton.Click
  fullName: System.Web.UI.WebControls.ImageButton.Click
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Occurs when the <xref href=&quot;System.Web.UI.WebControls.ImageButton&quot;></xref> is clicked."
  remarks: "The Click event is raised when the <xref:System.Web.UI.WebControls.ImageButton> control is clicked.      > [!NOTE] >  This event causes the page to be posted back to the server.       For more information about handling events, see [How to: Consume Events in a Web Forms Application](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates how to specify and code a handler for the Click event to display the coordinates at which the user clicks the image.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Classic ImageButton.Click Example#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_114_1.aspx)]\n [!code-vb[Classic ImageButton.Click Example#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_114_1.aspx)]"
  syntax:
    content: public event System.Web.UI.ImageClickEventHandler Click;
    return:
      type: System.Web.UI.ImageClickEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageButton.Command
  id: Command
  parent: System.Web.UI.WebControls.ImageButton
  langs:
  - csharp
  name: Command
  nameWithType: ImageButton.Command
  fullName: System.Web.UI.WebControls.ImageButton.Command
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Occurs when the <xref href=&quot;System.Web.UI.WebControls.ImageButton&quot;></xref> is clicked."
  remarks: "The Command event is raised when an <xref:System.Web.UI.WebControls.ImageButton> control is clicked.      > [!NOTE] >  The Command event is raised through the control hierarchy in the form of the `BubbleEvent`.      > [!NOTE] >  This event causes the page to post back to the server.       For more information about handling events, see [How to: Consume Events in a Web Forms Application](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates how to specify and code a handler for the Command event to determine which <xref:System.Web.UI.WebControls.ImageButton> control is clicked.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[Classic ImageButton.CommandArgument Example#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_2_1.aspx)]\n [!code-cs[Classic ImageButton.CommandArgument Example#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_2_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.CommandEventHandler Command;
    return:
      type: System.Web.UI.WebControls.CommandEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageButton.CommandArgument
  id: CommandArgument
  parent: System.Web.UI.WebControls.ImageButton
  langs:
  - csharp
  name: CommandArgument
  nameWithType: ImageButton.CommandArgument
  fullName: System.Web.UI.WebControls.ImageButton.CommandArgument
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets an optional argument that provides additional information about the <xref:System.Web.UI.WebControls.ImageButton.CommandName*> property."
  remarks: "Sometimes, multiple <xref:System.Web.UI.WebControls.ImageButton> controls are related and share the same value for the <xref:System.Web.UI.WebControls.ImageButton.CommandName%2A> property, such as `Sort`. Use this property to supplement the <xref:System.Web.UI.WebControls.ImageButton.CommandName%2A> property with additional information about the command to perform, such as `Ascending`. The values of the <xref:System.Web.UI.WebControls.ImageButton.CommandName%2A> and CommandArgument properties are typically used in the <xref:System.Web.UI.WebControls.ImageButton.OnCommand%2A> event handler to determine the action to perform when the <xref:System.Web.UI.WebControls.ImageButton> control is clicked.       This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates how to use the CommandArgument property to associate a command argument with an <xref:System.Web.UI.WebControls.ImageButton> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[Classic ImageButton.CommandArgument Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1085_1.aspx)]\n [!code-cs[Classic ImageButton.CommandArgument Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1085_1.aspx)]"
  syntax:
    content: public string CommandArgument { get; set; }
    return:
      type: System.String
      description: "An optional argument that supplements the <xref:System.Web.UI.WebControls.ImageButton.CommandName*> property."
  overload: System.Web.UI.WebControls.ImageButton.CommandArgument*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageButton.CommandName
  id: CommandName
  parent: System.Web.UI.WebControls.ImageButton
  langs:
  - csharp
  name: CommandName
  nameWithType: ImageButton.CommandName
  fullName: System.Web.UI.WebControls.ImageButton.CommandName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the command name associated with the <xref href=&quot;System.Web.UI.WebControls.ImageButton&quot;></xref> control."
  remarks: "Use this property to specify the command to perform when the <xref:System.Web.UI.WebControls.ImageButton> control is clicked, such as `Sort`, `Cancel`, or `Edit`. This allows multiple <xref:System.Web.UI.WebControls.ImageButton> controls to be placed on the same Web page. The value in this property can then be programmatically identified in the <xref:System.Web.UI.WebControls.ImageButton.OnCommand%2A> event handler to determine the appropriate action to perform when each <xref:System.Web.UI.WebControls.ImageButton> control is clicked.       Supplemental information about the command, such as specifying ascending sort order, can be included by using the <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> property.       This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates how to use the CommandName property to associate a command name with an <xref:System.Web.UI.WebControls.ImageButton> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Classic ImageButton.CommandName Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_479_1.aspx)]\n [!code-vb[Classic ImageButton.CommandName Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_479_1.aspx)]"
  syntax:
    content: public string CommandName { get; set; }
    return:
      type: System.String
      description: "The command name associated with the <xref href=&quot;System.Web.UI.WebControls.ImageButton&quot;></xref> control. The default value is &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  overload: System.Web.UI.WebControls.ImageButton.CommandName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageButton.Enabled
  id: Enabled
  parent: System.Web.UI.WebControls.ImageButton
  langs:
  - csharp
  name: Enabled
  nameWithType: ImageButton.Enabled
  fullName: System.Web.UI.WebControls.ImageButton.Enabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets a value indicating whether the <xref href=&quot;System.Web.UI.WebControls.ImageButton&quot;></xref> can be clicked to perform a post back to the server."
  remarks: "Use the Enabled property to specify whether an <xref:System.Web.UI.WebControls.ImageButton> can be clicked to perform a post back to the server. If you set this property to `false`, the control renders on the page, but does not raise a post back event when clicked."
  example:
  - "The following code example demonstrates how to use the Enabled property. The page contains two <xref:System.Web.UI.WebControls.ImageButton> controls. The Enabled property is set to `true` for the `EnabledImageButton` image button, causing it to post back to the server when clicked. The Enabled property is set to `false` for the `NotEnabledImageButton` image button, causing it to render on the page, but not post back to the server when clicked.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[ImageButton.Enabled#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_797_1.aspx)]\n [!code-cs[ImageButton.Enabled#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_797_1.aspx)]"
  syntax:
    content: public override bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the control is enabled; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.ImageButton.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageButton.GenerateEmptyAlternateText
  id: GenerateEmptyAlternateText
  parent: System.Web.UI.WebControls.ImageButton
  langs:
  - csharp
  name: GenerateEmptyAlternateText
  nameWithType: ImageButton.GenerateEmptyAlternateText
  fullName: System.Web.UI.WebControls.ImageButton.GenerateEmptyAlternateText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets a value indicating whether the control generates an alternate-text attribute for an empty string value."
  remarks: "By default, the <xref:System.Web.UI.WebControls.ImageButton> control renders the <xref:System.Web.UI.WebControls.Image.AlternateText%2A> property using an `alt` attribute. When the <xref:System.Web.UI.WebControls.Image.AlternateText%2A> property is not set, the <xref:System.Web.UI.WebControls.ImageButton> control does not include the `alt` attribute to specify the alternate-text in the control rendering.       The XHTML document type definition requires the `alt` attribute on image controls. However, accessibility best practices recommend that image controls that do not convey information relevant to the context of the Web page should not specify an `alt` attribute. You can meet both XHTML and accessibility requirements by setting the <xref:System.Web.UI.WebControls.Image.AlternateText%2A> property to `true`.       This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override bool GenerateEmptyAlternateText { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>, indicating that the <xref href=&quot;System.Web.UI.WebControls.ImageButton&quot;></xref> control does not generate an alternate-text attribute when the <xref:System.Web.UI.WebControls.Image.AlternateText*> property is empty."
  overload: System.Web.UI.WebControls.ImageButton.GenerateEmptyAlternateText*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "An attempt was made to set this property."
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageButton.GetPostBackOptions
  id: GetPostBackOptions
  parent: System.Web.UI.WebControls.ImageButton
  langs:
  - csharp
  name: GetPostBackOptions()
  nameWithType: ImageButton.GetPostBackOptions()
  fullName: System.Web.UI.WebControls.ImageButton.GetPostBackOptions()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Creates a <xref href=&quot;System.Web.UI.PostBackOptions&quot;></xref> object that represents the <xref href=&quot;System.Web.UI.WebControls.ImageButton&quot;></xref> control&quot;s postback behavior."
  remarks: "The GetPostBackOptions method creates a <xref:System.Web.UI.PostBackOptions> object that represents the <xref:System.Web.UI.WebControls.ImageButton> control&quot;s postback behavior. The <xref:System.Web.UI.PostBackOptions> object is then typically passed to the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%29?displayProperty=fullName> method, which is used to obtain a reference to a client-side script function that, when invoked, causes the server to postback to the page.       This method is used primarily by control developers when extending the <xref:System.Web.UI.WebControls.ImageButton> class."
  syntax:
    content: protected virtual System.Web.UI.PostBackOptions GetPostBackOptions ();
    parameters: []
    return:
      type: System.Web.UI.PostBackOptions
      description: "A <xref href=&quot;System.Web.UI.PostBackOptions&quot;></xref> that represents the <xref href=&quot;System.Web.UI.WebControls.ImageButton&quot;></xref> control&quot;s postback behavior."
  overload: System.Web.UI.WebControls.ImageButton.GetPostBackOptions*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageButton.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  id: LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.UI.WebControls.ImageButton
  langs:
  - csharp
  name: LoadPostData(String,NameValueCollection)
  nameWithType: ImageButton.LoadPostData(String,NameValueCollection)
  fullName: System.Web.UI.WebControls.ImageButton.LoadPostData(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Processes posted data for the <xref href=&quot;System.Web.UI.WebControls.ImageButton&quot;></xref> control."
  remarks: "The LoadPostData member is used primarily by control developers when deriving a custom class from the <xref:System.Web.UI.WebControls.ImageButton> control.       The <xref:System.Web.UI.WebControls.ImageButton> checks to see if the x and y values were posted, which indicates that the image was clicked by the user. The <xref:System.Web.UI.WebControls.ImageButton> then registers with the page that it wants to raise an event during the event-processing phase."
  syntax:
    content: protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);
    parameters:
    - id: postDataKey
      type: System.String
      description: "The key value used to index an entry in the collection."
    - id: postCollection
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;></xref> that contains post information."
    return:
      type: System.Boolean
      description: "Returns <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> for all cases."
  overload: System.Web.UI.WebControls.ImageButton.LoadPostData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageButton.OnClick(System.Web.UI.ImageClickEventArgs)
  id: OnClick(System.Web.UI.ImageClickEventArgs)
  parent: System.Web.UI.WebControls.ImageButton
  langs:
  - csharp
  name: OnClick(ImageClickEventArgs)
  nameWithType: ImageButton.OnClick(ImageClickEventArgs)
  fullName: System.Web.UI.WebControls.ImageButton.OnClick(ImageClickEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Raises the <xref href=&quot;System.Web.UI.WebControls.ImageButton.Click&quot;></xref> event and allows you to handle the <xref href=&quot;System.Web.UI.WebControls.ImageButton.Click&quot;></xref> event directly."
  remarks: "The <xref:System.Web.UI.WebControls.ImageButton.Click> event is raised when the <xref:System.Web.UI.WebControls.ImageButton> control is clicked. By using the OnClick event handler, you can programmatically determine the coordinates where the image is clicked. You can then code a response, based on the values of these coordinates. Note that the origin (0, 0) is located at the upper left corner of the image.       Raising an event invokes the event handler through a delegate. For more information, see [How to: Consume Events in a Web Forms Application](~/add/includes/ajax-current-ext-md.md).       The OnClick method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  example:
  - "The following example demonstrates how to specify and code a handler for the <xref:System.Web.UI.WebControls.ImageButton.Click> event to display the coordinates where the user clicks the image.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Classic ImageButton.Click Example#1](~/add/codesnippet/csharp/52805beb-543e-4da0-86c3-_1.aspx)]\n [!code-vb[Classic ImageButton.Click Example#1](~/add/codesnippet/visualbasic/52805beb-543e-4da0-86c3-_1.aspx)]"
  syntax:
    content: protected virtual void OnClick (System.Web.UI.ImageClickEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.ImageClickEventArgs
      description: "A <xref href=&quot;System.Web.UI.ImageClickEventArgs&quot;></xref> that contains the event data."
  overload: System.Web.UI.WebControls.ImageButton.OnClick*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageButton.OnClientClick
  id: OnClientClick
  parent: System.Web.UI.WebControls.ImageButton
  langs:
  - csharp
  name: OnClientClick
  nameWithType: ImageButton.OnClientClick
  fullName: System.Web.UI.WebControls.ImageButton.OnClientClick
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the client-side script that executes when an <xref href=&quot;System.Web.UI.WebControls.ImageButton&quot;></xref> control&quot;s <xref href=&quot;System.Web.UI.WebControls.ImageButton.Click&quot;></xref> event is raised."
  remarks: "Use the OnClientClick property to specify additional client-side script that executes when an <xref:System.Web.UI.WebControls.ImageButton> control&quot;s <xref:System.Web.UI.WebControls.ImageButton.Click> event is raised. The script that you specify for this property is rendered in the <xref:System.Web.UI.WebControls.ImageButton> control&quot;s `OnClick` attribute in addition to the control&quot;s predefined client-side script.       This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual string OnClientClick { get; set; }
    return:
      type: System.String
      description: "The client-side script that executes when an <xref href=&quot;System.Web.UI.WebControls.ImageButton&quot;></xref> control&quot;s <xref href=&quot;System.Web.UI.WebControls.ImageButton.Click&quot;></xref> event is raised."
  overload: System.Web.UI.WebControls.ImageButton.OnClientClick*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageButton.OnCommand(System.Web.UI.WebControls.CommandEventArgs)
  id: OnCommand(System.Web.UI.WebControls.CommandEventArgs)
  parent: System.Web.UI.WebControls.ImageButton
  langs:
  - csharp
  name: OnCommand(CommandEventArgs)
  nameWithType: ImageButton.OnCommand(CommandEventArgs)
  fullName: System.Web.UI.WebControls.ImageButton.OnCommand(CommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Raises the <xref href=&quot;System.Web.UI.WebControls.ImageButton.Command&quot;></xref> event and allows you to handle the <xref href=&quot;System.Web.UI.WebControls.ImageButton.Command&quot;></xref> event directly."
  remarks: "The <xref:System.Web.UI.WebControls.ImageButton.Command> event is raised when the <xref:System.Web.UI.WebControls.ImageButton> control is clicked. The OnCommand event handler is used to make the <xref:System.Web.UI.WebControls.ImageButton> control behave like a Command button. A command name can be associated with the control by using the <xref:System.Web.UI.WebControls.ImageButton.CommandName%2A> property. This allows multiple <xref:System.Web.UI.WebControls.ImageButton> controls to be placed on the Web page. The value in this property can then be programmatically identified in the OnCommand event handler to determine the appropriate action to perform when each <xref:System.Web.UI.WebControls.ImageButton> control is clicked. The <xref:System.Web.UI.WebControls.ImageButton.CommandArgument%2A> property can also be used to pass additional information about the command, such as specifying ascending order.      > [!NOTE] >  The <xref:System.Web.UI.WebControls.ImageButton.Command> event is raised through the control hierarchy in the form of the `BubbleEvent`.       Raising an event invokes the event handler through a delegate. For more information, see [How to: Consume Events in a Web Forms Application](~/add/includes/ajax-current-ext-md.md).       The OnCommand method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class."
  example:
  - "The following example demonstrates how to specify and code a handler for the <xref:System.Web.UI.WebControls.ImageButton.Command> event to determine which <xref:System.Web.UI.WebControls.ImageButton> control is clicked.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[Classic ImageButton.CommandArgument Example#1](~/add/codesnippet/visualbasic/fe4cd651-7d85-4b82-8dbd-_1.aspx)]\n [!code-cs[Classic ImageButton.CommandArgument Example#1](~/add/codesnippet/csharp/fe4cd651-7d85-4b82-8dbd-_1.aspx)]"
  syntax:
    content: protected virtual void OnCommand (System.Web.UI.WebControls.CommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.CommandEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.CommandEventArgs&quot;></xref> that contains the event data."
  overload: System.Web.UI.WebControls.ImageButton.OnCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageButton.OnPreRender(System.EventArgs)
  id: OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.ImageButton
  langs:
  - csharp
  name: OnPreRender(EventArgs)
  nameWithType: ImageButton.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.ImageButton.OnPreRender(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Determines whether the image has been clicked prior to rendering on the client."
  remarks: "The OnPreRender method is used primarily by control developers when deriving a custom class from the <xref:System.Web.UI.WebControls.ImageButton> control."
  example:
  - "The following code example demonstrates how to override the OnPreRender method so that it always displays a thin border in a custom <xref:System.Web.UI.WebControls.ImageButton> server control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. The first part of the code sample must be copied into an empty text file that has an .aspx extension. The second part must be in a .cs file (for C#) or a .vb file (for Visual Basic). For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[CustomImageButtonOnPreRender#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_29_1.aspx)]\n [!code-cs[CustomImageButtonOnPreRender#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_29_1.aspx)]  \n[!code-vb[CustomImageButtonOnPreRender#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_29_2.vb)]\n[!code-cs[CustomImageButtonOnPreRender#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_29_2.cs)]"
  syntax:
    content: protected override void OnPreRender (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> object that contains the event data."
  overload: System.Web.UI.WebControls.ImageButton.OnPreRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageButton.PostBackUrl
  id: PostBackUrl
  parent: System.Web.UI.WebControls.ImageButton
  langs:
  - csharp
  name: PostBackUrl
  nameWithType: ImageButton.PostBackUrl
  fullName: System.Web.UI.WebControls.ImageButton.PostBackUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the URL of the page to post to from the current page when the <xref href=&quot;System.Web.UI.WebControls.ImageButton&quot;></xref> control is clicked."
  remarks: "The PostBackUrl property allows you to perform a cross-page post using the <xref:System.Web.UI.WebControls.ImageButton> control. Set the PostBackUrl property to the URL of the Web page to post to when the <xref:System.Web.UI.WebControls.ImageButton> control is clicked. For example, specifying `Page2.aspx` causes the page that contains the <xref:System.Web.UI.WebControls.ImageButton> control to post to `Page2.aspx`. If you do not specify a value for the PostBackUrl property, the page posts back to itself.      > [!IMPORTANT] >  When performing a cross-page postback with controls with server-side validation, you should check that the page&quot;s <xref:System.Web.UI.Page.IsValid%2A> property is `true` before processing the postback. In the case of a cross-page postback, the page to check is the PreviousPage. The following Visual Basic code shows how this is done:      ```   Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load           If Page.PreviousPage.IsValid Then               &quot; Handle the post back           Else               Response.Write(&quot;Invalid&quot;)           End If   End Sub   ```       For more information on cross-page posting techniques, see [Cross-Page Posting in ASP.NET Web Forms](~/add/includes/ajax-current-ext-md.md).       This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to use the PostBackUrl property to perform a cross-page post. When the user clicks the <xref:System.Web.UI.WebControls.ImageButton> control, the page posts the value entered in the text box to the target page specified by the PostBackUrl property. To run this sample, you must also create a file for the target page in the same directory as this code example. The code for the target page is provided in the next example.  \n  \n [!code-vb[ImageButton.PostBackUrlProperty#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_7_1.aspx)]\n [!code-cs[ImageButton.PostBackUrlProperty#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_7_1.aspx)]  \n  \n The following code example demonstrates how to use the <xref:System.Web.UI.Page.PreviousPage%2A?displayProperty=fullName> property to access a value that was posted from another page using the <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> property. This page gets the string that was posted from the previous page and displays it to the user. If you attempt to run this code example directly, you will get an error because the value of the `Text` field will be `null`. Instead, use this code to create a target page and place the file in the same directory as the code for the previous example. The name of the file must correspond to the value specified for the <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> property in the previous example. When you run the code for the previous example, this page will execute automatically when the cross-page post occurs.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[ImageButton.PostBackUrlPage2#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_7_2.aspx)]\n [!code-cs[ImageButton.PostBackUrlPage2#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_7_2.aspx)]"
  syntax:
    content: public virtual string PostBackUrl { get; set; }
    return:
      type: System.String
      description: "The URL of the Web page to post to from the current page when the <xref href=&quot;System.Web.UI.WebControls.ImageButton&quot;></xref> control is clicked. The default value is an empty string (&quot;&quot;), which causes the page to post back to itself."
  overload: System.Web.UI.WebControls.ImageButton.PostBackUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageButton.RaisePostBackEvent(System.String)
  id: RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.ImageButton
  langs:
  - csharp
  name: RaisePostBackEvent(String)
  nameWithType: ImageButton.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.ImageButton.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Raises events for the <xref href=&quot;System.Web.UI.WebControls.ImageButton&quot;></xref> control when it posts back to the server."
  remarks: "The RaisePostBackEvent member is used primarily by control developers when deriving a custom class from the <xref:System.Web.UI.WebControls.ImageButton> control.       This method is used internally by the <xref:System.Web.UI.WebControls.ImageButton> control, when it is clicked, to raise a <xref:System.Web.UI.WebControls.ImageButton.Click> event and, if defined, a <xref:System.Web.UI.WebControls.ImageButton.Command> event."
  syntax:
    content: protected virtual void RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "The argument for the event."
  overload: System.Web.UI.WebControls.ImageButton.RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageButton.RaisePostDataChangedEvent
  id: RaisePostDataChangedEvent
  parent: System.Web.UI.WebControls.ImageButton
  langs:
  - csharp
  name: RaisePostDataChangedEvent()
  nameWithType: ImageButton.RaisePostDataChangedEvent()
  fullName: System.Web.UI.WebControls.ImageButton.RaisePostDataChangedEvent()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Notifies the ASP.NET application that the state of the <xref href=&quot;System.Web.UI.WebControls.ImageButton&quot;></xref> control has changed."
  remarks: "The RaisePostDataChangedEvent member is used primarily by control developers when deriving a custom class from the <xref:System.Web.UI.WebControls.ImageButton> control.       This method can be overridden in a derived class to raise change events for the <xref:System.Web.UI.WebControls.ImageButton> control when it posts back to the server."
  syntax:
    content: protected virtual void RaisePostDataChangedEvent ();
    parameters: []
  overload: System.Web.UI.WebControls.ImageButton.RaisePostDataChangedEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageButton.SupportsDisabledAttribute
  id: SupportsDisabledAttribute
  parent: System.Web.UI.WebControls.ImageButton
  langs:
  - csharp
  name: SupportsDisabledAttribute
  nameWithType: ImageButton.SupportsDisabledAttribute
  fullName: System.Web.UI.WebControls.ImageButton.SupportsDisabledAttribute
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets a value that indicates whether the control should set the <xref uid=&quot;langword_csharp_disabled&quot; name=&quot;disabled&quot; href=&quot;&quot;></xref> attribute of the rendered HTML element to &quot;disabled&quot; when the control&quot;s <xref:System.Web.UI.WebControls.WebControl.IsEnabled*> property is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  remarks: "This property indicates how ASP.NET should render HTML for a control when the control is disabled. If this property is `true`, ASP.NET renders a `disabled` attribute when a control is disabled. If this property is `false`, ASP.NET renders a `class` attribute when a control is disabled. For more information, see <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A?displayProperty=fullName>."
  syntax:
    content: public override bool SupportsDisabledAttribute { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the &lt;xref:System.Web.UI.Control.RenderingCompatibility%2A?displayProperty=fullName&gt; property indicates an ASP.NET version lower than `4.0`; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.ImageButton.SupportsDisabledAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageButton.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  id: System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  isEii: true
  parent: System.Web.UI.WebControls.ImageButton
  langs:
  - csharp
  name: System.Web.UI.IPostBackDataHandler.LoadPostData(String,NameValueCollection)
  nameWithType: ImageButton.System.Web.UI.IPostBackDataHandler.LoadPostData(String,NameValueCollection)
  fullName: System.Web.UI.WebControls.ImageButton.System.Web.UI.IPostBackDataHandler.LoadPostData(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "For a description of this member, see &lt;xref:System.Web.UI.IPostBackDataHandler.LoadPostData%2A?displayProperty=fullName&gt;."
  remarks: "The <xref:System.Web.UI.IPostBackDataHandler.LoadPostData%2A?displayProperty=fullName> method is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.ImageButton> instance is cast to an <xref:System.Web.UI.IPostBackDataHandler> interface."
  syntax:
    content: bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);
    parameters:
    - id: postDataKey
      type: System.String
      description: "The key identifier for the control, used to index the `postCollection`."
    - id: postCollection
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;></xref> collection that contains value information indexed by control identifiers."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the server control&quot;s state changes as a result of the postback; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.ImageButton.System#Web#UI#IPostBackDataHandler#LoadPostData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageButton.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent
  id: System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent
  isEii: true
  parent: System.Web.UI.WebControls.ImageButton
  langs:
  - csharp
  name: System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent()
  nameWithType: ImageButton.System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent()
  fullName: System.Web.UI.WebControls.ImageButton.System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "For a description of this member, see &lt;xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A?displayProperty=fullName&gt;."
  remarks: "The <xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A?displayProperty=fullName> method is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.ImageButton> instance is cast to an <xref:System.Web.UI.IPostBackDataHandler> interface."
  syntax:
    content: void IPostBackDataHandler.RaisePostDataChangedEvent ();
    parameters: []
  overload: System.Web.UI.WebControls.ImageButton.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageButton.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  id: System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  isEii: true
  parent: System.Web.UI.WebControls.ImageButton
  langs:
  - csharp
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: ImageButton.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.ImageButton.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "For a description of this member, see &lt;xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A?displayProperty=fullName&gt;."
  remarks: "The <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A?displayProperty=fullName> method is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.ImageButton> instance is cast to an <xref:System.Web.UI.IPostBackEventHandler> interface."
  syntax:
    content: void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "The argument for the event"
  overload: System.Web.UI.WebControls.ImageButton.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageButton.System#Web#UI#WebControls#IButtonControl#Text
  id: System#Web#UI#WebControls#IButtonControl#Text
  isEii: true
  parent: System.Web.UI.WebControls.ImageButton
  langs:
  - csharp
  name: System.Web.UI.WebControls.IButtonControl.Text
  nameWithType: ImageButton.System.Web.UI.WebControls.IButtonControl.Text
  fullName: System.Web.UI.WebControls.ImageButton.System.Web.UI.WebControls.IButtonControl.Text
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "For a description of this member, see &lt;xref:System.Web.UI.WebControls.IButtonControl.Text%2A?displayProperty=fullName&gt;."
  remarks: "The <xref:System.Web.UI.WebControls.IButtonControl.Text%2A> member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.ImageButton> instance is cast to an <xref:System.Web.UI.WebControls.IButtonControl> interface."
  syntax:
    content: string System.Web.UI.WebControls.IButtonControl.Text { get; set; }
    return:
      type: System.String
      description: "The text caption that is displayed for the button."
  overload: System.Web.UI.WebControls.ImageButton.System#Web#UI#WebControls#IButtonControl#Text*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageButton.TagKey
  id: TagKey
  parent: System.Web.UI.WebControls.ImageButton
  langs:
  - csharp
  name: TagKey
  nameWithType: ImageButton.TagKey
  fullName: System.Web.UI.WebControls.ImageButton.TagKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets the <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;></xref> value that corresponds to the <xref href=&quot;System.Web.UI.WebControls.ImageButton&quot;></xref> control."
  remarks: "The TagKey property is used primarily by control developers when deriving a custom class from the <xref:System.Web.UI.WebControls.ImageButton> control.       Use the TagKey property to determine the <xref:System.Web.UI.HtmlTextWriterTag> value associated with an <xref:System.Web.UI.WebControls.ImageButton> control. This property overrides the base implementation to always return `HtmlTextWriterTag.Input`."
  example:
  - "The following code example demonstrates how to override the TagKey method in a custom <xref:System.Web.UI.WebControls.ImageButton> control so that it always returns an Input tag.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. The first part of the code sample must be copied into an empty text file that has an .aspx extension. The second part must be in a .cs file (for C#) or a .vb file (for Visual Basic). For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[CustomImageButtonTagKey#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1313_1.aspx)]\n [!code-cs[CustomImageButtonTagKey#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1313_1.aspx)]  \n[!code-cs[CustomImageButtonTagKey#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1313_2.cs)]\n[!code-vb[CustomImageButtonTagKey#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1313_2.vb)]"
  syntax:
    content: protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }
    return:
      type: System.Web.UI.HtmlTextWriterTag
      description: "An <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;></xref> enumeration value."
  overload: System.Web.UI.WebControls.ImageButton.TagKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageButton.Text
  id: Text
  parent: System.Web.UI.WebControls.ImageButton
  langs:
  - csharp
  name: Text
  nameWithType: ImageButton.Text
  fullName: System.Web.UI.WebControls.ImageButton.Text
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the value of the <xref href=&quot;System.Web.UI.WebControls.ImageButton&quot;></xref> control&quot;s <xref:System.Web.UI.WebControls.Image.AlternateText*> property."
  remarks: "The Text property is not intended to be called directly from your code."
  syntax:
    content: protected virtual string Text { get; set; }
    return:
      type: System.String
      description: "The value of the <xref href=&quot;System.Web.UI.WebControls.ImageButton&quot;></xref> control&quot;s <xref:System.Web.UI.WebControls.Image.AlternateText*> property."
  overload: System.Web.UI.WebControls.ImageButton.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ImageButton.ValidationGroup
  id: ValidationGroup
  parent: System.Web.UI.WebControls.ImageButton
  langs:
  - csharp
  name: ValidationGroup
  nameWithType: ImageButton.ValidationGroup
  fullName: System.Web.UI.WebControls.ImageButton.ValidationGroup
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the group of controls for which the <xref href=&quot;System.Web.UI.WebControls.ImageButton&quot;></xref> control causes validation when it posts back to the server."
  remarks: "Validation groups allow you to assign validation controls on a page to a specific category. Each validation group can be validated independently of other validation groups on the page. Use the ValidationGroup property to specify the name of the validation group for which the <xref:System.Web.UI.WebControls.ImageButton> control causes validation when it posts back to the server. This property has an effect only when the value of the <xref:System.Web.UI.WebControls.ImageButton.CausesValidation%2A> property is set to `true`. When you specify a value for the ValidationGroup property, only the validation controls that are part of the specified group are validated when the <xref:System.Web.UI.WebControls.ImageButton> control posts back to the server. If you do not specify a value for this property and the <xref:System.Web.UI.WebControls.ImageButton.CausesValidation%2A> property is set to `true`, all validation controls on the page that are not assigned to a validation group are validated when the control posts back to the server.       This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to use the ValidationGroup property to specify the controls to validate when an <xref:System.Web.UI.WebControls.ImageButton> control posts back to the server. The page contains three text boxes to capture data from the user and three <xref:System.Web.UI.WebControls.RequiredFieldValidator> controls to ensure that the user does not leave a text box blank. The <xref:System.Web.UI.WebControls.RequiredFieldValidator> controls for the first two text boxes are in the `PersonalInfoGroup` validation group and the <xref:System.Web.UI.WebControls.RequiredFieldValidator> control for the third text box is in the `LocationInfoGroup` validation group. When `ImageButton1` is clicked, only the controls in validation group `PersonalInfoGroup` are validated. When `ImageButton2` is clicked, only the control in validation group `LocationInfoGroup` is validated.  \n  \n [!code-vb[ImageButton.ValidationGroup#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_283_1.aspx)]\n [!code-cs[ImageButton.ValidationGroup#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_283_1.aspx)]"
  syntax:
    content: public virtual string ValidationGroup { get; set; }
    return:
      type: System.String
      description: "The group of controls for which the <xref href=&quot;System.Web.UI.WebControls.ImageButton&quot;></xref> control causes validation when it posts back to the server. The default value is an empty string (&quot;&quot;)."
  overload: System.Web.UI.WebControls.ImageButton.ValidationGroup*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.Image
  isExternal: false
  name: System.Web.UI.WebControls.Image
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Web.UI.WebControls.ImageButton.#ctor
  parent: System.Web.UI.WebControls.ImageButton
  isExternal: false
  name: ImageButton()
  nameWithType: ImageButton.ImageButton()
  fullName: System.Web.UI.WebControls.ImageButton.ImageButton()
- uid: System.Web.UI.WebControls.ImageButton.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.ImageButton
  isExternal: false
  name: AddAttributesToRender(HtmlTextWriter)
  nameWithType: ImageButton.AddAttributesToRender(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.ImageButton.AddAttributesToRender(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.ImageButton.CausesValidation
  parent: System.Web.UI.WebControls.ImageButton
  isExternal: false
  name: CausesValidation
  nameWithType: ImageButton.CausesValidation
  fullName: System.Web.UI.WebControls.ImageButton.CausesValidation
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.ImageButton.Click
  parent: System.Web.UI.WebControls.ImageButton
  isExternal: false
  name: Click
  nameWithType: ImageButton.Click
  fullName: System.Web.UI.WebControls.ImageButton.Click
- uid: System.Web.UI.ImageClickEventHandler
  parent: System.Web.UI
  isExternal: false
  name: ImageClickEventHandler
  nameWithType: ImageClickEventHandler
  fullName: System.Web.UI.ImageClickEventHandler
- uid: System.Web.UI.WebControls.ImageButton.Command
  parent: System.Web.UI.WebControls.ImageButton
  isExternal: false
  name: Command
  nameWithType: ImageButton.Command
  fullName: System.Web.UI.WebControls.ImageButton.Command
- uid: System.Web.UI.WebControls.CommandEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: CommandEventHandler
  nameWithType: CommandEventHandler
  fullName: System.Web.UI.WebControls.CommandEventHandler
- uid: System.Web.UI.WebControls.ImageButton.CommandArgument
  parent: System.Web.UI.WebControls.ImageButton
  isExternal: false
  name: CommandArgument
  nameWithType: ImageButton.CommandArgument
  fullName: System.Web.UI.WebControls.ImageButton.CommandArgument
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.ImageButton.CommandName
  parent: System.Web.UI.WebControls.ImageButton
  isExternal: false
  name: CommandName
  nameWithType: ImageButton.CommandName
  fullName: System.Web.UI.WebControls.ImageButton.CommandName
- uid: System.Web.UI.WebControls.ImageButton.Enabled
  parent: System.Web.UI.WebControls.ImageButton
  isExternal: false
  name: Enabled
  nameWithType: ImageButton.Enabled
  fullName: System.Web.UI.WebControls.ImageButton.Enabled
- uid: System.Web.UI.WebControls.ImageButton.GenerateEmptyAlternateText
  parent: System.Web.UI.WebControls.ImageButton
  isExternal: false
  name: GenerateEmptyAlternateText
  nameWithType: ImageButton.GenerateEmptyAlternateText
  fullName: System.Web.UI.WebControls.ImageButton.GenerateEmptyAlternateText
- uid: System.Web.UI.WebControls.ImageButton.GetPostBackOptions
  parent: System.Web.UI.WebControls.ImageButton
  isExternal: false
  name: GetPostBackOptions()
  nameWithType: ImageButton.GetPostBackOptions()
  fullName: System.Web.UI.WebControls.ImageButton.GetPostBackOptions()
- uid: System.Web.UI.PostBackOptions
  parent: System.Web.UI
  isExternal: false
  name: PostBackOptions
  nameWithType: PostBackOptions
  fullName: System.Web.UI.PostBackOptions
- uid: System.Web.UI.WebControls.ImageButton.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.UI.WebControls.ImageButton
  isExternal: false
  name: LoadPostData(String,NameValueCollection)
  nameWithType: ImageButton.LoadPostData(String,NameValueCollection)
  fullName: System.Web.UI.WebControls.ImageButton.LoadPostData(String,NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.UI.WebControls.ImageButton.OnClick(System.Web.UI.ImageClickEventArgs)
  parent: System.Web.UI.WebControls.ImageButton
  isExternal: false
  name: OnClick(ImageClickEventArgs)
  nameWithType: ImageButton.OnClick(ImageClickEventArgs)
  fullName: System.Web.UI.WebControls.ImageButton.OnClick(ImageClickEventArgs)
- uid: System.Web.UI.ImageClickEventArgs
  parent: System.Web.UI
  isExternal: false
  name: ImageClickEventArgs
  nameWithType: ImageClickEventArgs
  fullName: System.Web.UI.ImageClickEventArgs
- uid: System.Web.UI.WebControls.ImageButton.OnClientClick
  parent: System.Web.UI.WebControls.ImageButton
  isExternal: false
  name: OnClientClick
  nameWithType: ImageButton.OnClientClick
  fullName: System.Web.UI.WebControls.ImageButton.OnClientClick
- uid: System.Web.UI.WebControls.ImageButton.OnCommand(System.Web.UI.WebControls.CommandEventArgs)
  parent: System.Web.UI.WebControls.ImageButton
  isExternal: false
  name: OnCommand(CommandEventArgs)
  nameWithType: ImageButton.OnCommand(CommandEventArgs)
  fullName: System.Web.UI.WebControls.ImageButton.OnCommand(CommandEventArgs)
- uid: System.Web.UI.WebControls.CommandEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: CommandEventArgs
  nameWithType: CommandEventArgs
  fullName: System.Web.UI.WebControls.CommandEventArgs
- uid: System.Web.UI.WebControls.ImageButton.OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.ImageButton
  isExternal: false
  name: OnPreRender(EventArgs)
  nameWithType: ImageButton.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.ImageButton.OnPreRender(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.ImageButton.PostBackUrl
  parent: System.Web.UI.WebControls.ImageButton
  isExternal: false
  name: PostBackUrl
  nameWithType: ImageButton.PostBackUrl
  fullName: System.Web.UI.WebControls.ImageButton.PostBackUrl
- uid: System.Web.UI.WebControls.ImageButton.RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.ImageButton
  isExternal: false
  name: RaisePostBackEvent(String)
  nameWithType: ImageButton.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.ImageButton.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.ImageButton.RaisePostDataChangedEvent
  parent: System.Web.UI.WebControls.ImageButton
  isExternal: false
  name: RaisePostDataChangedEvent()
  nameWithType: ImageButton.RaisePostDataChangedEvent()
  fullName: System.Web.UI.WebControls.ImageButton.RaisePostDataChangedEvent()
- uid: System.Web.UI.WebControls.ImageButton.SupportsDisabledAttribute
  parent: System.Web.UI.WebControls.ImageButton
  isExternal: false
  name: SupportsDisabledAttribute
  nameWithType: ImageButton.SupportsDisabledAttribute
  fullName: System.Web.UI.WebControls.ImageButton.SupportsDisabledAttribute
- uid: System.Web.UI.WebControls.ImageButton.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.UI.WebControls.ImageButton
  isExternal: false
  name: System.Web.UI.IPostBackDataHandler.LoadPostData(String,NameValueCollection)
  nameWithType: ImageButton.System.Web.UI.IPostBackDataHandler.LoadPostData(String,NameValueCollection)
  fullName: System.Web.UI.WebControls.ImageButton.System.Web.UI.IPostBackDataHandler.LoadPostData(String,NameValueCollection)
- uid: System.Web.UI.WebControls.ImageButton.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent
  parent: System.Web.UI.WebControls.ImageButton
  isExternal: false
  name: System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent()
  nameWithType: ImageButton.System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent()
  fullName: System.Web.UI.WebControls.ImageButton.System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent()
- uid: System.Web.UI.WebControls.ImageButton.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.ImageButton
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: ImageButton.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.ImageButton.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.ImageButton.System#Web#UI#WebControls#IButtonControl#Text
  parent: System.Web.UI.WebControls.ImageButton
  isExternal: false
  name: System.Web.UI.WebControls.IButtonControl.Text
  nameWithType: ImageButton.System.Web.UI.WebControls.IButtonControl.Text
  fullName: System.Web.UI.WebControls.ImageButton.System.Web.UI.WebControls.IButtonControl.Text
- uid: System.Web.UI.WebControls.ImageButton.TagKey
  parent: System.Web.UI.WebControls.ImageButton
  isExternal: false
  name: TagKey
  nameWithType: ImageButton.TagKey
  fullName: System.Web.UI.WebControls.ImageButton.TagKey
- uid: System.Web.UI.HtmlTextWriterTag
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriterTag
  nameWithType: HtmlTextWriterTag
  fullName: System.Web.UI.HtmlTextWriterTag
- uid: System.Web.UI.WebControls.ImageButton.Text
  parent: System.Web.UI.WebControls.ImageButton
  isExternal: false
  name: Text
  nameWithType: ImageButton.Text
  fullName: System.Web.UI.WebControls.ImageButton.Text
- uid: System.Web.UI.WebControls.ImageButton.ValidationGroup
  parent: System.Web.UI.WebControls.ImageButton
  isExternal: false
  name: ValidationGroup
  nameWithType: ImageButton.ValidationGroup
  fullName: System.Web.UI.WebControls.ImageButton.ValidationGroup
- uid: System.Web.UI.WebControls.ImageButton.#ctor*
  parent: System.Web.UI.WebControls.ImageButton
  isExternal: false
  name: ImageButton
  nameWithType: ImageButton.ImageButton
- uid: System.Web.UI.WebControls.ImageButton.AddAttributesToRender*
  parent: System.Web.UI.WebControls.ImageButton
  isExternal: false
  name: AddAttributesToRender
  nameWithType: ImageButton.AddAttributesToRender
- uid: System.Web.UI.WebControls.ImageButton.CausesValidation*
  parent: System.Web.UI.WebControls.ImageButton
  isExternal: false
  name: CausesValidation
  nameWithType: ImageButton.CausesValidation
- uid: System.Web.UI.WebControls.ImageButton.CommandArgument*
  parent: System.Web.UI.WebControls.ImageButton
  isExternal: false
  name: CommandArgument
  nameWithType: ImageButton.CommandArgument
- uid: System.Web.UI.WebControls.ImageButton.CommandName*
  parent: System.Web.UI.WebControls.ImageButton
  isExternal: false
  name: CommandName
  nameWithType: ImageButton.CommandName
- uid: System.Web.UI.WebControls.ImageButton.Enabled*
  parent: System.Web.UI.WebControls.ImageButton
  isExternal: false
  name: Enabled
  nameWithType: ImageButton.Enabled
- uid: System.Web.UI.WebControls.ImageButton.GenerateEmptyAlternateText*
  parent: System.Web.UI.WebControls.ImageButton
  isExternal: false
  name: GenerateEmptyAlternateText
  nameWithType: ImageButton.GenerateEmptyAlternateText
- uid: System.Web.UI.WebControls.ImageButton.GetPostBackOptions*
  parent: System.Web.UI.WebControls.ImageButton
  isExternal: false
  name: GetPostBackOptions
  nameWithType: ImageButton.GetPostBackOptions
- uid: System.Web.UI.WebControls.ImageButton.LoadPostData*
  parent: System.Web.UI.WebControls.ImageButton
  isExternal: false
  name: LoadPostData
  nameWithType: ImageButton.LoadPostData
- uid: System.Web.UI.WebControls.ImageButton.OnClick*
  parent: System.Web.UI.WebControls.ImageButton
  isExternal: false
  name: OnClick
  nameWithType: ImageButton.OnClick
- uid: System.Web.UI.WebControls.ImageButton.OnClientClick*
  parent: System.Web.UI.WebControls.ImageButton
  isExternal: false
  name: OnClientClick
  nameWithType: ImageButton.OnClientClick
- uid: System.Web.UI.WebControls.ImageButton.OnCommand*
  parent: System.Web.UI.WebControls.ImageButton
  isExternal: false
  name: OnCommand
  nameWithType: ImageButton.OnCommand
- uid: System.Web.UI.WebControls.ImageButton.OnPreRender*
  parent: System.Web.UI.WebControls.ImageButton
  isExternal: false
  name: OnPreRender
  nameWithType: ImageButton.OnPreRender
- uid: System.Web.UI.WebControls.ImageButton.PostBackUrl*
  parent: System.Web.UI.WebControls.ImageButton
  isExternal: false
  name: PostBackUrl
  nameWithType: ImageButton.PostBackUrl
- uid: System.Web.UI.WebControls.ImageButton.RaisePostBackEvent*
  parent: System.Web.UI.WebControls.ImageButton
  isExternal: false
  name: RaisePostBackEvent
  nameWithType: ImageButton.RaisePostBackEvent
- uid: System.Web.UI.WebControls.ImageButton.RaisePostDataChangedEvent*
  parent: System.Web.UI.WebControls.ImageButton
  isExternal: false
  name: RaisePostDataChangedEvent
  nameWithType: ImageButton.RaisePostDataChangedEvent
- uid: System.Web.UI.WebControls.ImageButton.SupportsDisabledAttribute*
  parent: System.Web.UI.WebControls.ImageButton
  isExternal: false
  name: SupportsDisabledAttribute
  nameWithType: ImageButton.SupportsDisabledAttribute
- uid: System.Web.UI.WebControls.ImageButton.System#Web#UI#IPostBackDataHandler#LoadPostData*
  parent: System.Web.UI.WebControls.ImageButton
  isExternal: false
  name: System.Web.UI.IPostBackDataHandler.LoadPostData
  nameWithType: ImageButton.System.Web.UI.IPostBackDataHandler.LoadPostData
- uid: System.Web.UI.WebControls.ImageButton.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent*
  parent: System.Web.UI.WebControls.ImageButton
  isExternal: false
  name: System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent
  nameWithType: ImageButton.System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent
- uid: System.Web.UI.WebControls.ImageButton.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  parent: System.Web.UI.WebControls.ImageButton
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
  nameWithType: ImageButton.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
- uid: System.Web.UI.WebControls.ImageButton.System#Web#UI#WebControls#IButtonControl#Text*
  parent: System.Web.UI.WebControls.ImageButton
  isExternal: false
  name: System.Web.UI.WebControls.IButtonControl.Text
  nameWithType: ImageButton.System.Web.UI.WebControls.IButtonControl.Text
- uid: System.Web.UI.WebControls.ImageButton.TagKey*
  parent: System.Web.UI.WebControls.ImageButton
  isExternal: false
  name: TagKey
  nameWithType: ImageButton.TagKey
- uid: System.Web.UI.WebControls.ImageButton.Text*
  parent: System.Web.UI.WebControls.ImageButton
  isExternal: false
  name: Text
  nameWithType: ImageButton.Text
- uid: System.Web.UI.WebControls.ImageButton.ValidationGroup*
  parent: System.Web.UI.WebControls.ImageButton
  isExternal: false
  name: ValidationGroup
  nameWithType: ImageButton.ValidationGroup
