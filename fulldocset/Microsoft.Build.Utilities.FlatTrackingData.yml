### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.Utilities.FlatTrackingData
  id: FlatTrackingData
  children:
  - Microsoft.Build.Utilities.FlatTrackingData.#ctor(Microsoft.Build.Framework.ITaskItem[],System.Boolean)
  - Microsoft.Build.Utilities.FlatTrackingData.#ctor(Microsoft.Build.Framework.ITaskItem[],System.DateTime)
  - Microsoft.Build.Utilities.FlatTrackingData.#ctor(Microsoft.Build.Framework.ITask,Microsoft.Build.Framework.ITaskItem[],System.Boolean)
  - Microsoft.Build.Utilities.FlatTrackingData.#ctor(Microsoft.Build.Framework.ITask,Microsoft.Build.Framework.ITaskItem[],System.DateTime)
  - Microsoft.Build.Utilities.FlatTrackingData.#ctor(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],System.DateTime)
  - Microsoft.Build.Utilities.FlatTrackingData.#ctor(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],System.DateTime,System.String[],System.Collections.Generic.IDictionary{System.String,System.DateTime})
  - Microsoft.Build.Utilities.FlatTrackingData.DependencyTable
  - Microsoft.Build.Utilities.FlatTrackingData.FileIsExcludedFromDependencyCheck(System.String)
  - Microsoft.Build.Utilities.FlatTrackingData.FinalizeTLogs(System.Boolean,Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[])
  - Microsoft.Build.Utilities.FlatTrackingData.GetLastWriteTimeUtc(System.String)
  - Microsoft.Build.Utilities.FlatTrackingData.IsUpToDate(Microsoft.Build.Utilities.Task,Microsoft.Build.Utilities.UpToDateCheckType,Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[])
  - Microsoft.Build.Utilities.FlatTrackingData.IsUpToDate(Microsoft.Build.Utilities.TaskLoggingHelper,Microsoft.Build.Utilities.UpToDateCheckType,Microsoft.Build.Utilities.FlatTrackingData,Microsoft.Build.Utilities.FlatTrackingData)
  - Microsoft.Build.Utilities.FlatTrackingData.MissingFiles
  - Microsoft.Build.Utilities.FlatTrackingData.NewestFileName
  - Microsoft.Build.Utilities.FlatTrackingData.NewestFileTime
  - Microsoft.Build.Utilities.FlatTrackingData.NewestFileTimeUtc
  - Microsoft.Build.Utilities.FlatTrackingData.NewestTLogFileName
  - Microsoft.Build.Utilities.FlatTrackingData.NewestTLogTime
  - Microsoft.Build.Utilities.FlatTrackingData.NewestTLogTimeUtc
  - Microsoft.Build.Utilities.FlatTrackingData.OldestFileName
  - Microsoft.Build.Utilities.FlatTrackingData.OldestFileTime
  - Microsoft.Build.Utilities.FlatTrackingData.OldestFileTimeUtc
  - Microsoft.Build.Utilities.FlatTrackingData.SaveTlog
  - Microsoft.Build.Utilities.FlatTrackingData.SaveTlog(Microsoft.Build.Utilities.DependencyFilter)
  - Microsoft.Build.Utilities.FlatTrackingData.SkipMissingFiles
  - Microsoft.Build.Utilities.FlatTrackingData.TlogFiles
  - Microsoft.Build.Utilities.FlatTrackingData.TlogsAvailable
  - Microsoft.Build.Utilities.FlatTrackingData.TreatRootMarkersAsEntries
  - Microsoft.Build.Utilities.FlatTrackingData.UpdateFileEntryDetails
  langs:
  - csharp
  name: FlatTrackingData
  nameWithType: FlatTrackingData
  fullName: Microsoft.Build.Utilities.FlatTrackingData
  type: Class
  summary: "This class is used to track file dependencies during a build."
  syntax:
    content: public class FlatTrackingData
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.FlatTrackingData.#ctor(Microsoft.Build.Framework.ITaskItem[],System.Boolean)
  id: '#ctor(Microsoft.Build.Framework.ITaskItem[],System.Boolean)'
  parent: Microsoft.Build.Utilities.FlatTrackingData
  langs:
  - csharp
  name: FlatTrackingData(ITaskItem[],Boolean)
  nameWithType: FlatTrackingData.FlatTrackingData(ITaskItem[],Boolean)
  fullName: Microsoft.Build.Utilities.FlatTrackingData.FlatTrackingData(ITaskItem[],Boolean)
  type: Constructor
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Constructor"
  syntax:
    content: public FlatTrackingData (Microsoft.Build.Framework.ITaskItem[] tlogFiles, bool skipMissingFiles);
    parameters:
    - id: tlogFiles
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "The .write. tlog files to interpret"
    - id: skipMissingFiles
      type: System.Boolean
      description: "Ignore files that do not exist on disk"
  overload: Microsoft.Build.Utilities.FlatTrackingData.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.FlatTrackingData.#ctor(Microsoft.Build.Framework.ITaskItem[],System.DateTime)
  id: '#ctor(Microsoft.Build.Framework.ITaskItem[],System.DateTime)'
  parent: Microsoft.Build.Utilities.FlatTrackingData
  langs:
  - csharp
  name: FlatTrackingData(ITaskItem[],DateTime)
  nameWithType: FlatTrackingData.FlatTrackingData(ITaskItem[],DateTime)
  fullName: Microsoft.Build.Utilities.FlatTrackingData.FlatTrackingData(ITaskItem[],DateTime)
  type: Constructor
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Constructor"
  syntax:
    content: public FlatTrackingData (Microsoft.Build.Framework.ITaskItem[] tlogFiles, DateTime missingFileTimeUtc);
    parameters:
    - id: tlogFiles
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "The .write. tlog files to interpret"
    - id: missingFileTimeUtc
      type: System.DateTime
      description: "The DateTime that should be recorded for missing file."
  overload: Microsoft.Build.Utilities.FlatTrackingData.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.FlatTrackingData.#ctor(Microsoft.Build.Framework.ITask,Microsoft.Build.Framework.ITaskItem[],System.Boolean)
  id: '#ctor(Microsoft.Build.Framework.ITask,Microsoft.Build.Framework.ITaskItem[],System.Boolean)'
  parent: Microsoft.Build.Utilities.FlatTrackingData
  langs:
  - csharp
  name: FlatTrackingData(ITask,ITaskItem[],Boolean)
  nameWithType: FlatTrackingData.FlatTrackingData(ITask,ITaskItem[],Boolean)
  fullName: Microsoft.Build.Utilities.FlatTrackingData.FlatTrackingData(ITask,ITaskItem[],Boolean)
  type: Constructor
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Constructor"
  syntax:
    content: public FlatTrackingData (Microsoft.Build.Framework.ITask ownerTask, Microsoft.Build.Framework.ITaskItem[] tlogFiles, bool skipMissingFiles);
    parameters:
    - id: ownerTask
      type: Microsoft.Build.Framework.ITask
      description: "The task that is using file tracker"
    - id: tlogFiles
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "The tlog files to interpret"
    - id: skipMissingFiles
      type: System.Boolean
      description: "Ignore files that do not exist on disk"
  overload: Microsoft.Build.Utilities.FlatTrackingData.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.FlatTrackingData.#ctor(Microsoft.Build.Framework.ITask,Microsoft.Build.Framework.ITaskItem[],System.DateTime)
  id: '#ctor(Microsoft.Build.Framework.ITask,Microsoft.Build.Framework.ITaskItem[],System.DateTime)'
  parent: Microsoft.Build.Utilities.FlatTrackingData
  langs:
  - csharp
  name: FlatTrackingData(ITask,ITaskItem[],DateTime)
  nameWithType: FlatTrackingData.FlatTrackingData(ITask,ITaskItem[],DateTime)
  fullName: Microsoft.Build.Utilities.FlatTrackingData.FlatTrackingData(ITask,ITaskItem[],DateTime)
  type: Constructor
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Constructor"
  syntax:
    content: public FlatTrackingData (Microsoft.Build.Framework.ITask ownerTask, Microsoft.Build.Framework.ITaskItem[] tlogFiles, DateTime missingFileTimeUtc);
    parameters:
    - id: ownerTask
      type: Microsoft.Build.Framework.ITask
      description: "The task that is using file tracker"
    - id: tlogFiles
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "The tlog files to interpret"
    - id: missingFileTimeUtc
      type: System.DateTime
      description: "The DateTime that should be recorded for missing file."
  overload: Microsoft.Build.Utilities.FlatTrackingData.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.FlatTrackingData.#ctor(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],System.DateTime)
  id: '#ctor(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],System.DateTime)'
  parent: Microsoft.Build.Utilities.FlatTrackingData
  langs:
  - csharp
  name: FlatTrackingData(ITaskItem[],ITaskItem[],DateTime)
  nameWithType: FlatTrackingData.FlatTrackingData(ITaskItem[],ITaskItem[],DateTime)
  fullName: Microsoft.Build.Utilities.FlatTrackingData.FlatTrackingData(ITaskItem[],ITaskItem[],DateTime)
  type: Constructor
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Constructor"
  syntax:
    content: public FlatTrackingData (Microsoft.Build.Framework.ITaskItem[] tlogFiles, Microsoft.Build.Framework.ITaskItem[] tlogFilesToIgnore, DateTime missingFileTimeUtc);
    parameters:
    - id: tlogFiles
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "The .write. tlog files to interpret"
    - id: tlogFilesToIgnore
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "The TLogs to ignore."
    - id: missingFileTimeUtc
      type: System.DateTime
      description: "The DateTime that should be recorded for missing file."
  overload: Microsoft.Build.Utilities.FlatTrackingData.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.FlatTrackingData.#ctor(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],System.DateTime,System.String[],System.Collections.Generic.IDictionary{System.String,System.DateTime})
  id: '#ctor(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],System.DateTime,System.String[],System.Collections.Generic.IDictionary{System.String,System.DateTime})'
  parent: Microsoft.Build.Utilities.FlatTrackingData
  langs:
  - csharp
  name: FlatTrackingData(ITaskItem[],ITaskItem[],DateTime,String[],IDictionary<String,DateTime>)
  nameWithType: FlatTrackingData.FlatTrackingData(ITaskItem[],ITaskItem[],DateTime,String[],IDictionary<String,DateTime>)
  fullName: Microsoft.Build.Utilities.FlatTrackingData.FlatTrackingData(ITaskItem[],ITaskItem[],DateTime,String[],IDictionary<String,DateTime>)
  type: Constructor
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Constructor"
  syntax:
    content: public FlatTrackingData (Microsoft.Build.Framework.ITaskItem[] tlogFiles, Microsoft.Build.Framework.ITaskItem[] tlogFilesToIgnore, DateTime missingFileTimeUtc, string[] excludedInputPaths, System.Collections.Generic.IDictionary<string,DateTime> sharedLastWriteTimeUtcCache);
    parameters:
    - id: tlogFiles
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "The .tlog files to interpret"
    - id: tlogFilesToIgnore
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "The .tlog files to ignore"
    - id: missingFileTimeUtc
      type: System.DateTime
      description: "The date and time that should be recorded for missing file."
    - id: excludedInputPaths
      type: System.String[]
      description: "The set of paths that contain files to be ignored, including any subdirectories."
    - id: sharedLastWriteTimeUtcCache
      type: System.Collections.Generic.IDictionary{System.String,System.DateTime}
      description: "Cache to be used which can be shared between multiple `FlatTrackingData` instances."
  overload: Microsoft.Build.Utilities.FlatTrackingData.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.FlatTrackingData.DependencyTable
  id: DependencyTable
  parent: Microsoft.Build.Utilities.FlatTrackingData
  langs:
  - csharp
  name: DependencyTable
  nameWithType: FlatTrackingData.DependencyTable
  fullName: Microsoft.Build.Utilities.FlatTrackingData.DependencyTable
  type: Property
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Gets the dependency table."
  syntax:
    content: public System.Collections.Generic.IDictionary<string,DateTime> DependencyTable { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.DateTime}
      description: "Returns the dependency table."
  overload: Microsoft.Build.Utilities.FlatTrackingData.DependencyTable*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.FlatTrackingData.FileIsExcludedFromDependencyCheck(System.String)
  id: FileIsExcludedFromDependencyCheck(System.String)
  parent: Microsoft.Build.Utilities.FlatTrackingData
  langs:
  - csharp
  name: FileIsExcludedFromDependencyCheck(String)
  nameWithType: FlatTrackingData.FileIsExcludedFromDependencyCheck(String)
  fullName: Microsoft.Build.Utilities.FlatTrackingData.FileIsExcludedFromDependencyCheck(String)
  type: Method
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Returns <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the specified file is excluded from tracked dependency checking."
  syntax:
    content: public bool FileIsExcludedFromDependencyCheck (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "Name of the file to test."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the file is excluded."
  overload: Microsoft.Build.Utilities.FlatTrackingData.FileIsExcludedFromDependencyCheck*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.FlatTrackingData.FinalizeTLogs(System.Boolean,Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[])
  id: FinalizeTLogs(System.Boolean,Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[])
  parent: Microsoft.Build.Utilities.FlatTrackingData
  langs:
  - csharp
  name: FinalizeTLogs(Boolean,ITaskItem[],ITaskItem[],ITaskItem[])
  nameWithType: FlatTrackingData.FinalizeTLogs(Boolean,ITaskItem[],ITaskItem[],ITaskItem[])
  fullName: Microsoft.Build.Utilities.FlatTrackingData.FinalizeTLogs(Boolean,ITaskItem[],ITaskItem[],ITaskItem[])
  type: Method
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Compact and finalize the Tlogs based on the success of the tracked execution."
  remarks: "Once tracked operations have been completed then we need to compact / finalize the Tlogs based on the success of the tracked execution. If it fails, then we clean out the TLogs. If it succeeds then we clean temporary files from the TLogs and re-write them."
  syntax:
    content: public static void FinalizeTLogs (bool trackedOperationsSucceeded, Microsoft.Build.Framework.ITaskItem[] readTLogNames, Microsoft.Build.Framework.ITaskItem[] writeTLogNames, Microsoft.Build.Framework.ITaskItem[] trackedFilesToRemoveFromTLogs);
    parameters:
    - id: trackedOperationsSucceeded
      type: System.Boolean
      description: "True indicates that tracked operations succeeded."
    - id: readTLogNames
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "TLogs to be read."
    - id: writeTLogNames
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "TLogs to be written."
    - id: trackedFilesToRemoveFromTLogs
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "Tracked files to be removed from TLogs."
  overload: Microsoft.Build.Utilities.FlatTrackingData.FinalizeTLogs*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.FlatTrackingData.GetLastWriteTimeUtc(System.String)
  id: GetLastWriteTimeUtc(System.String)
  parent: Microsoft.Build.Utilities.FlatTrackingData
  langs:
  - csharp
  name: GetLastWriteTimeUtc(String)
  nameWithType: FlatTrackingData.GetLastWriteTimeUtc(String)
  fullName: Microsoft.Build.Utilities.FlatTrackingData.GetLastWriteTimeUtc(String)
  type: Method
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Returns cached value for last write time of file. Updates the cache the first            time the file is checked."
  syntax:
    content: public DateTime GetLastWriteTimeUtc (string file);
    parameters:
    - id: file
      type: System.String
      description: "Name of the file"
    return:
      type: System.DateTime
      description: "the last write time of the file."
  overload: Microsoft.Build.Utilities.FlatTrackingData.GetLastWriteTimeUtc*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.FlatTrackingData.IsUpToDate(Microsoft.Build.Utilities.Task,Microsoft.Build.Utilities.UpToDateCheckType,Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[])
  id: IsUpToDate(Microsoft.Build.Utilities.Task,Microsoft.Build.Utilities.UpToDateCheckType,Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[])
  parent: Microsoft.Build.Utilities.FlatTrackingData
  langs:
  - csharp
  name: IsUpToDate(Task,UpToDateCheckType,ITaskItem[],ITaskItem[])
  nameWithType: FlatTrackingData.IsUpToDate(Task,UpToDateCheckType,ITaskItem[],ITaskItem[])
  fullName: Microsoft.Build.Utilities.FlatTrackingData.IsUpToDate(Task,UpToDateCheckType,ITaskItem[],ITaskItem[])
  type: Method
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Checks to see if the tracking data indicates that everything is up to date according to UpToDateCheckType."
  remarks: "If things are not up to date, then the TLogs are compacted to remove all entries in preparation to re-track execution of work."
  syntax:
    content: public static bool IsUpToDate (Microsoft.Build.Utilities.Task hostTask, Microsoft.Build.Utilities.UpToDateCheckType upToDateCheckType, Microsoft.Build.Framework.ITaskItem[] readTLogNames, Microsoft.Build.Framework.ITaskItem[] writeTLogNames);
    parameters:
    - id: hostTask
      type: Microsoft.Build.Utilities.Task
      description: "The host task."
    - id: upToDateCheckType
      type: Microsoft.Build.Utilities.UpToDateCheckType
      description: "UpToDateCheckType"
    - id: readTLogNames
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "The array of read tlogs"
    - id: writeTLogNames
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "The array of write tlogs"
    return:
      type: System.Boolean
      description: "Returns true if everything is up to date; false otherwise."
  overload: Microsoft.Build.Utilities.FlatTrackingData.IsUpToDate*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.FlatTrackingData.IsUpToDate(Microsoft.Build.Utilities.TaskLoggingHelper,Microsoft.Build.Utilities.UpToDateCheckType,Microsoft.Build.Utilities.FlatTrackingData,Microsoft.Build.Utilities.FlatTrackingData)
  id: IsUpToDate(Microsoft.Build.Utilities.TaskLoggingHelper,Microsoft.Build.Utilities.UpToDateCheckType,Microsoft.Build.Utilities.FlatTrackingData,Microsoft.Build.Utilities.FlatTrackingData)
  parent: Microsoft.Build.Utilities.FlatTrackingData
  langs:
  - csharp
  name: IsUpToDate(TaskLoggingHelper,UpToDateCheckType,FlatTrackingData,FlatTrackingData)
  nameWithType: FlatTrackingData.IsUpToDate(TaskLoggingHelper,UpToDateCheckType,FlatTrackingData,FlatTrackingData)
  fullName: Microsoft.Build.Utilities.FlatTrackingData.IsUpToDate(TaskLoggingHelper,UpToDateCheckType,FlatTrackingData,FlatTrackingData)
  type: Method
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Simple check of up to date state according to the tracking data and the UpToDateCheckType."
  remarks: "No tracking log compaction will take place when using this overload"
  syntax:
    content: public static bool IsUpToDate (Microsoft.Build.Utilities.TaskLoggingHelper Log, Microsoft.Build.Utilities.UpToDateCheckType upToDateCheckType, Microsoft.Build.Utilities.FlatTrackingData inputs, Microsoft.Build.Utilities.FlatTrackingData outputs);
    parameters:
    - id: Log
      type: Microsoft.Build.Utilities.TaskLoggingHelper
      description: "TaskLoggingHelper from the host task"
    - id: upToDateCheckType
      type: Microsoft.Build.Utilities.UpToDateCheckType
      description: "UpToDateCheckType to use"
    - id: inputs
      type: Microsoft.Build.Utilities.FlatTrackingData
      description: "FlatTrackingData structure containing the inputs"
    - id: outputs
      type: Microsoft.Build.Utilities.FlatTrackingData
      description: "FlatTrackingData structure containing the outputs"
    return:
      type: System.Boolean
      description: "Returns true if everything is up to date; false otherwise."
  overload: Microsoft.Build.Utilities.FlatTrackingData.IsUpToDate*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.FlatTrackingData.MissingFiles
  id: MissingFiles
  parent: Microsoft.Build.Utilities.FlatTrackingData
  langs:
  - csharp
  name: MissingFiles
  nameWithType: FlatTrackingData.MissingFiles
  fullName: Microsoft.Build.Utilities.FlatTrackingData.MissingFiles
  type: Property
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Gets or sets missing files that have been detected in the TLog"
  syntax:
    content: public System.Collections.Generic.List<string> MissingFiles { get; set; }
    return:
      type: System.Collections.Generic.List{System.String}
      description: "Returns missing files that have been detected in the TLog"
  overload: Microsoft.Build.Utilities.FlatTrackingData.MissingFiles*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.FlatTrackingData.NewestFileName
  id: NewestFileName
  parent: Microsoft.Build.Utilities.FlatTrackingData
  langs:
  - csharp
  name: NewestFileName
  nameWithType: FlatTrackingData.NewestFileName
  fullName: Microsoft.Build.Utilities.FlatTrackingData.NewestFileName
  type: Property
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Gets or sets the path for the newest file we have seen."
  syntax:
    content: public string NewestFileName { get; set; }
    return:
      type: System.String
      description: "Returns the path for the newest file we have seen."
  overload: Microsoft.Build.Utilities.FlatTrackingData.NewestFileName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.FlatTrackingData.NewestFileTime
  id: NewestFileTime
  parent: Microsoft.Build.Utilities.FlatTrackingData
  langs:
  - csharp
  name: NewestFileTime
  nameWithType: FlatTrackingData.NewestFileTime
  fullName: Microsoft.Build.Utilities.FlatTrackingData.NewestFileTime
  type: Property
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Gets or sets the time for the newest file we have seen"
  syntax:
    content: public DateTime NewestFileTime { get; set; }
    return:
      type: System.DateTime
      description: "Returns the time for the newest file we have seen."
  overload: Microsoft.Build.Utilities.FlatTrackingData.NewestFileTime*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.FlatTrackingData.NewestFileTimeUtc
  id: NewestFileTimeUtc
  parent: Microsoft.Build.Utilities.FlatTrackingData
  langs:
  - csharp
  name: NewestFileTimeUtc
  nameWithType: FlatTrackingData.NewestFileTimeUtc
  fullName: Microsoft.Build.Utilities.FlatTrackingData.NewestFileTimeUtc
  type: Property
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Gets or sets the UTC time for the newest file we have seen."
  syntax:
    content: public DateTime NewestFileTimeUtc { get; set; }
    return:
      type: System.DateTime
      description: "Returns the UTC time for the newest file we have seen."
  overload: Microsoft.Build.Utilities.FlatTrackingData.NewestFileTimeUtc*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.FlatTrackingData.NewestTLogFileName
  id: NewestTLogFileName
  parent: Microsoft.Build.Utilities.FlatTrackingData
  langs:
  - csharp
  name: NewestTLogFileName
  nameWithType: FlatTrackingData.NewestTLogFileName
  fullName: Microsoft.Build.Utilities.FlatTrackingData.NewestTLogFileName
  type: Property
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Gets or sets the path of the newest TLog file."
  syntax:
    content: public string NewestTLogFileName { get; set; }
    return:
      type: System.String
      description: "Returns the path of the newest TLog file."
  overload: Microsoft.Build.Utilities.FlatTrackingData.NewestTLogFileName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.FlatTrackingData.NewestTLogTime
  id: NewestTLogTime
  parent: Microsoft.Build.Utilities.FlatTrackingData
  langs:
  - csharp
  name: NewestTLogTime
  nameWithType: FlatTrackingData.NewestTLogTime
  fullName: Microsoft.Build.Utilities.FlatTrackingData.NewestTLogTime
  type: Property
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Gets or sets the time of the newest Tlog."
  syntax:
    content: public DateTime NewestTLogTime { get; set; }
    return:
      type: System.DateTime
      description: "Returns the time of the newest Tlog."
  overload: Microsoft.Build.Utilities.FlatTrackingData.NewestTLogTime*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.FlatTrackingData.NewestTLogTimeUtc
  id: NewestTLogTimeUtc
  parent: Microsoft.Build.Utilities.FlatTrackingData
  langs:
  - csharp
  name: NewestTLogTimeUtc
  nameWithType: FlatTrackingData.NewestTLogTimeUtc
  fullName: Microsoft.Build.Utilities.FlatTrackingData.NewestTLogTimeUtc
  type: Property
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Gets or sets the UTC time of the newest Tlog."
  syntax:
    content: public DateTime NewestTLogTimeUtc { get; set; }
    return:
      type: System.DateTime
      description: "Returns the time of the newest Tlog."
  overload: Microsoft.Build.Utilities.FlatTrackingData.NewestTLogTimeUtc*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.FlatTrackingData.OldestFileName
  id: OldestFileName
  parent: Microsoft.Build.Utilities.FlatTrackingData
  langs:
  - csharp
  name: OldestFileName
  nameWithType: FlatTrackingData.OldestFileName
  fullName: Microsoft.Build.Utilities.FlatTrackingData.OldestFileName
  type: Property
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Gets or sets the path for the oldest file we have seen."
  syntax:
    content: public string OldestFileName { get; set; }
    return:
      type: System.String
      description: "Returns the path for the oldest file we have seen."
  overload: Microsoft.Build.Utilities.FlatTrackingData.OldestFileName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.FlatTrackingData.OldestFileTime
  id: OldestFileTime
  parent: Microsoft.Build.Utilities.FlatTrackingData
  langs:
  - csharp
  name: OldestFileTime
  nameWithType: FlatTrackingData.OldestFileTime
  fullName: Microsoft.Build.Utilities.FlatTrackingData.OldestFileTime
  type: Property
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Gets or sets the time for the oldest file we have seen."
  syntax:
    content: public DateTime OldestFileTime { get; set; }
    return:
      type: System.DateTime
      description: "Returns the time for the oldest file we have seen."
  overload: Microsoft.Build.Utilities.FlatTrackingData.OldestFileTime*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.FlatTrackingData.OldestFileTimeUtc
  id: OldestFileTimeUtc
  parent: Microsoft.Build.Utilities.FlatTrackingData
  langs:
  - csharp
  name: OldestFileTimeUtc
  nameWithType: FlatTrackingData.OldestFileTimeUtc
  fullName: Microsoft.Build.Utilities.FlatTrackingData.OldestFileTimeUtc
  type: Property
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Gets or sets the UTC time for the oldest file we have seen."
  syntax:
    content: public DateTime OldestFileTimeUtc { get; set; }
    return:
      type: System.DateTime
      description: "Returns the UTC time for the oldest file we have seen."
  overload: Microsoft.Build.Utilities.FlatTrackingData.OldestFileTimeUtc*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.FlatTrackingData.SaveTlog
  id: SaveTlog
  parent: Microsoft.Build.Utilities.FlatTrackingData
  langs:
  - csharp
  name: SaveTlog()
  nameWithType: FlatTrackingData.SaveTlog()
  fullName: Microsoft.Build.Utilities.FlatTrackingData.SaveTlog()
  type: Method
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "This method will re-write the tlogs from the output table."
  syntax:
    content: public void SaveTlog ();
    parameters: []
  overload: Microsoft.Build.Utilities.FlatTrackingData.SaveTlog*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.FlatTrackingData.SaveTlog(Microsoft.Build.Utilities.DependencyFilter)
  id: SaveTlog(Microsoft.Build.Utilities.DependencyFilter)
  parent: Microsoft.Build.Utilities.FlatTrackingData
  langs:
  - csharp
  name: SaveTlog(DependencyFilter)
  nameWithType: FlatTrackingData.SaveTlog(DependencyFilter)
  fullName: Microsoft.Build.Utilities.FlatTrackingData.SaveTlog(DependencyFilter)
  type: Method
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "This method will re-write the tlogs from the current table"
  syntax:
    content: public void SaveTlog (Microsoft.Build.Utilities.DependencyFilter includeInTLog);
    parameters:
    - id: includeInTLog
      type: Microsoft.Build.Utilities.DependencyFilter
      description: "The dependency filter."
  overload: Microsoft.Build.Utilities.FlatTrackingData.SaveTlog*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.FlatTrackingData.SkipMissingFiles
  id: SkipMissingFiles
  parent: Microsoft.Build.Utilities.FlatTrackingData
  langs:
  - csharp
  name: SkipMissingFiles
  nameWithType: FlatTrackingData.SkipMissingFiles
  fullName: Microsoft.Build.Utilities.FlatTrackingData.SkipMissingFiles
  type: Property
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Gets or sets a switch that specifies whether files in the TLog, but which no longer exist, be skipped or recorded."
  syntax:
    content: public bool SkipMissingFiles { get; set; }
    return:
      type: System.Boolean
      description: "Returns the switch that specifies whether files in the TLog, but which no longer exist, be skipped or recorded."
  overload: Microsoft.Build.Utilities.FlatTrackingData.SkipMissingFiles*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.FlatTrackingData.TlogFiles
  id: TlogFiles
  parent: Microsoft.Build.Utilities.FlatTrackingData
  langs:
  - csharp
  name: TlogFiles
  nameWithType: FlatTrackingData.TlogFiles
  fullName: Microsoft.Build.Utilities.FlatTrackingData.TlogFiles
  type: Property
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Gets or sets the TLog files that back this structure."
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem[] TlogFiles { get; set; }
    return:
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "Returns the TLog files that back this structure."
  overload: Microsoft.Build.Utilities.FlatTrackingData.TlogFiles*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.FlatTrackingData.TlogsAvailable
  id: TlogsAvailable
  parent: Microsoft.Build.Utilities.FlatTrackingData
  langs:
  - csharp
  name: TlogsAvailable
  nameWithType: FlatTrackingData.TlogsAvailable
  fullName: Microsoft.Build.Utilities.FlatTrackingData.TlogsAvailable
  type: Property
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Gets or sets a switch that specifies whether all the TLogs that were passed to us are available on disk."
  syntax:
    content: public bool TlogsAvailable { get; set; }
    return:
      type: System.Boolean
      description: "Returns a switch that specifies whether all the TLogs that were passed to us are available on disk."
  overload: Microsoft.Build.Utilities.FlatTrackingData.TlogsAvailable*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.FlatTrackingData.TreatRootMarkersAsEntries
  id: TreatRootMarkersAsEntries
  parent: Microsoft.Build.Utilities.FlatTrackingData
  langs:
  - csharp
  name: TreatRootMarkersAsEntries
  nameWithType: FlatTrackingData.TreatRootMarkersAsEntries
  fullName: Microsoft.Build.Utilities.FlatTrackingData.TreatRootMarkersAsEntries
  type: Property
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Gets or sets a switch that specifies whether root markers in the TLog be treated as file accesses, or only as markers."
  syntax:
    content: public bool TreatRootMarkersAsEntries { get; set; }
    return:
      type: System.Boolean
      description: "Returns a switch that specifies whether root markers in the TLog be treated as file accesses, or only as markers."
  overload: Microsoft.Build.Utilities.FlatTrackingData.TreatRootMarkersAsEntries*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Utilities.FlatTrackingData.UpdateFileEntryDetails
  id: UpdateFileEntryDetails
  parent: Microsoft.Build.Utilities.FlatTrackingData
  langs:
  - csharp
  name: UpdateFileEntryDetails()
  nameWithType: FlatTrackingData.UpdateFileEntryDetails()
  fullName: Microsoft.Build.Utilities.FlatTrackingData.UpdateFileEntryDetails()
  type: Method
  assemblies:
  - Microsoft.Build.Utilities.v4.0
  namespace: Microsoft.Build.Utilities
  summary: "Update the current state of entry details for the dependency table"
  syntax:
    content: public void UpdateFileEntryDetails ();
    parameters: []
  overload: Microsoft.Build.Utilities.FlatTrackingData.UpdateFileEntryDetails*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: Microsoft.Build.Utilities.FlatTrackingData.#ctor(Microsoft.Build.Framework.ITaskItem[],System.Boolean)
  parent: Microsoft.Build.Utilities.FlatTrackingData
  isExternal: false
  name: FlatTrackingData(ITaskItem[],Boolean)
  nameWithType: FlatTrackingData.FlatTrackingData(ITaskItem[],Boolean)
  fullName: Microsoft.Build.Utilities.FlatTrackingData.FlatTrackingData(ITaskItem[],Boolean)
- uid: Microsoft.Build.Framework.ITaskItem[]
  parent: Microsoft.Build.Framework
  isExternal: false
  name: ITaskItem
  nameWithType: ITaskItem
  fullName: Microsoft.Build.Framework.ITaskItem[]
  spec.csharp:
  - uid: Microsoft.Build.Framework.ITaskItem
    name: ITaskItem
    nameWithType: ITaskItem
    fullName: ITaskItem[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.Utilities.FlatTrackingData.#ctor(Microsoft.Build.Framework.ITaskItem[],System.DateTime)
  parent: Microsoft.Build.Utilities.FlatTrackingData
  isExternal: false
  name: FlatTrackingData(ITaskItem[],DateTime)
  nameWithType: FlatTrackingData.FlatTrackingData(ITaskItem[],DateTime)
  fullName: Microsoft.Build.Utilities.FlatTrackingData.FlatTrackingData(ITaskItem[],DateTime)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Microsoft.Build.Utilities.FlatTrackingData.#ctor(Microsoft.Build.Framework.ITask,Microsoft.Build.Framework.ITaskItem[],System.Boolean)
  parent: Microsoft.Build.Utilities.FlatTrackingData
  isExternal: false
  name: FlatTrackingData(ITask,ITaskItem[],Boolean)
  nameWithType: FlatTrackingData.FlatTrackingData(ITask,ITaskItem[],Boolean)
  fullName: Microsoft.Build.Utilities.FlatTrackingData.FlatTrackingData(ITask,ITaskItem[],Boolean)
- uid: Microsoft.Build.Framework.ITask
  parent: Microsoft.Build.Framework
  isExternal: false
  name: ITask
  nameWithType: ITask
  fullName: Microsoft.Build.Framework.ITask
- uid: Microsoft.Build.Utilities.FlatTrackingData.#ctor(Microsoft.Build.Framework.ITask,Microsoft.Build.Framework.ITaskItem[],System.DateTime)
  parent: Microsoft.Build.Utilities.FlatTrackingData
  isExternal: false
  name: FlatTrackingData(ITask,ITaskItem[],DateTime)
  nameWithType: FlatTrackingData.FlatTrackingData(ITask,ITaskItem[],DateTime)
  fullName: Microsoft.Build.Utilities.FlatTrackingData.FlatTrackingData(ITask,ITaskItem[],DateTime)
- uid: Microsoft.Build.Utilities.FlatTrackingData.#ctor(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],System.DateTime)
  parent: Microsoft.Build.Utilities.FlatTrackingData
  isExternal: false
  name: FlatTrackingData(ITaskItem[],ITaskItem[],DateTime)
  nameWithType: FlatTrackingData.FlatTrackingData(ITaskItem[],ITaskItem[],DateTime)
  fullName: Microsoft.Build.Utilities.FlatTrackingData.FlatTrackingData(ITaskItem[],ITaskItem[],DateTime)
- uid: Microsoft.Build.Utilities.FlatTrackingData.#ctor(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],System.DateTime,System.String[],System.Collections.Generic.IDictionary{System.String,System.DateTime})
  parent: Microsoft.Build.Utilities.FlatTrackingData
  isExternal: false
  name: FlatTrackingData(ITaskItem[],ITaskItem[],DateTime,String[],IDictionary<String,DateTime>)
  nameWithType: FlatTrackingData.FlatTrackingData(ITaskItem[],ITaskItem[],DateTime,String[],IDictionary<String,DateTime>)
  fullName: Microsoft.Build.Utilities.FlatTrackingData.FlatTrackingData(ITaskItem[],ITaskItem[],DateTime,String[],IDictionary<String,DateTime>)
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Collections.Generic.IDictionary{System.String,System.DateTime}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,DateTime>
  nameWithType: IDictionary<String,DateTime>
  fullName: System.Collections.Generic.IDictionary<System.String,System.DateTime>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.DateTime>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Utilities.FlatTrackingData.DependencyTable
  parent: Microsoft.Build.Utilities.FlatTrackingData
  isExternal: false
  name: DependencyTable
  nameWithType: FlatTrackingData.DependencyTable
  fullName: Microsoft.Build.Utilities.FlatTrackingData.DependencyTable
- uid: Microsoft.Build.Utilities.FlatTrackingData.FileIsExcludedFromDependencyCheck(System.String)
  parent: Microsoft.Build.Utilities.FlatTrackingData
  isExternal: false
  name: FileIsExcludedFromDependencyCheck(String)
  nameWithType: FlatTrackingData.FileIsExcludedFromDependencyCheck(String)
  fullName: Microsoft.Build.Utilities.FlatTrackingData.FileIsExcludedFromDependencyCheck(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.Utilities.FlatTrackingData.FinalizeTLogs(System.Boolean,Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[])
  parent: Microsoft.Build.Utilities.FlatTrackingData
  isExternal: false
  name: FinalizeTLogs(Boolean,ITaskItem[],ITaskItem[],ITaskItem[])
  nameWithType: FlatTrackingData.FinalizeTLogs(Boolean,ITaskItem[],ITaskItem[],ITaskItem[])
  fullName: Microsoft.Build.Utilities.FlatTrackingData.FinalizeTLogs(Boolean,ITaskItem[],ITaskItem[],ITaskItem[])
- uid: Microsoft.Build.Utilities.FlatTrackingData.GetLastWriteTimeUtc(System.String)
  parent: Microsoft.Build.Utilities.FlatTrackingData
  isExternal: false
  name: GetLastWriteTimeUtc(String)
  nameWithType: FlatTrackingData.GetLastWriteTimeUtc(String)
  fullName: Microsoft.Build.Utilities.FlatTrackingData.GetLastWriteTimeUtc(String)
- uid: Microsoft.Build.Utilities.FlatTrackingData.IsUpToDate(Microsoft.Build.Utilities.Task,Microsoft.Build.Utilities.UpToDateCheckType,Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[])
  parent: Microsoft.Build.Utilities.FlatTrackingData
  isExternal: false
  name: IsUpToDate(Task,UpToDateCheckType,ITaskItem[],ITaskItem[])
  nameWithType: FlatTrackingData.IsUpToDate(Task,UpToDateCheckType,ITaskItem[],ITaskItem[])
  fullName: Microsoft.Build.Utilities.FlatTrackingData.IsUpToDate(Task,UpToDateCheckType,ITaskItem[],ITaskItem[])
- uid: Microsoft.Build.Utilities.Task
  parent: Microsoft.Build.Utilities
  isExternal: false
  name: Task
  nameWithType: Task
  fullName: Microsoft.Build.Utilities.Task
- uid: Microsoft.Build.Utilities.UpToDateCheckType
  parent: Microsoft.Build.Utilities
  isExternal: false
  name: UpToDateCheckType
  nameWithType: UpToDateCheckType
  fullName: Microsoft.Build.Utilities.UpToDateCheckType
- uid: Microsoft.Build.Utilities.FlatTrackingData.IsUpToDate(Microsoft.Build.Utilities.TaskLoggingHelper,Microsoft.Build.Utilities.UpToDateCheckType,Microsoft.Build.Utilities.FlatTrackingData,Microsoft.Build.Utilities.FlatTrackingData)
  parent: Microsoft.Build.Utilities.FlatTrackingData
  isExternal: false
  name: IsUpToDate(TaskLoggingHelper,UpToDateCheckType,FlatTrackingData,FlatTrackingData)
  nameWithType: FlatTrackingData.IsUpToDate(TaskLoggingHelper,UpToDateCheckType,FlatTrackingData,FlatTrackingData)
  fullName: Microsoft.Build.Utilities.FlatTrackingData.IsUpToDate(TaskLoggingHelper,UpToDateCheckType,FlatTrackingData,FlatTrackingData)
- uid: Microsoft.Build.Utilities.TaskLoggingHelper
  parent: Microsoft.Build.Utilities
  isExternal: false
  name: TaskLoggingHelper
  nameWithType: TaskLoggingHelper
  fullName: Microsoft.Build.Utilities.TaskLoggingHelper
- uid: Microsoft.Build.Utilities.FlatTrackingData
  parent: Microsoft.Build.Utilities
  isExternal: false
  name: FlatTrackingData
  nameWithType: FlatTrackingData
  fullName: Microsoft.Build.Utilities.FlatTrackingData
- uid: Microsoft.Build.Utilities.FlatTrackingData.MissingFiles
  parent: Microsoft.Build.Utilities.FlatTrackingData
  isExternal: false
  name: MissingFiles
  nameWithType: FlatTrackingData.MissingFiles
  fullName: Microsoft.Build.Utilities.FlatTrackingData.MissingFiles
- uid: System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: List<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Utilities.FlatTrackingData.NewestFileName
  parent: Microsoft.Build.Utilities.FlatTrackingData
  isExternal: false
  name: NewestFileName
  nameWithType: FlatTrackingData.NewestFileName
  fullName: Microsoft.Build.Utilities.FlatTrackingData.NewestFileName
- uid: Microsoft.Build.Utilities.FlatTrackingData.NewestFileTime
  parent: Microsoft.Build.Utilities.FlatTrackingData
  isExternal: false
  name: NewestFileTime
  nameWithType: FlatTrackingData.NewestFileTime
  fullName: Microsoft.Build.Utilities.FlatTrackingData.NewestFileTime
- uid: Microsoft.Build.Utilities.FlatTrackingData.NewestFileTimeUtc
  parent: Microsoft.Build.Utilities.FlatTrackingData
  isExternal: false
  name: NewestFileTimeUtc
  nameWithType: FlatTrackingData.NewestFileTimeUtc
  fullName: Microsoft.Build.Utilities.FlatTrackingData.NewestFileTimeUtc
- uid: Microsoft.Build.Utilities.FlatTrackingData.NewestTLogFileName
  parent: Microsoft.Build.Utilities.FlatTrackingData
  isExternal: false
  name: NewestTLogFileName
  nameWithType: FlatTrackingData.NewestTLogFileName
  fullName: Microsoft.Build.Utilities.FlatTrackingData.NewestTLogFileName
- uid: Microsoft.Build.Utilities.FlatTrackingData.NewestTLogTime
  parent: Microsoft.Build.Utilities.FlatTrackingData
  isExternal: false
  name: NewestTLogTime
  nameWithType: FlatTrackingData.NewestTLogTime
  fullName: Microsoft.Build.Utilities.FlatTrackingData.NewestTLogTime
- uid: Microsoft.Build.Utilities.FlatTrackingData.NewestTLogTimeUtc
  parent: Microsoft.Build.Utilities.FlatTrackingData
  isExternal: false
  name: NewestTLogTimeUtc
  nameWithType: FlatTrackingData.NewestTLogTimeUtc
  fullName: Microsoft.Build.Utilities.FlatTrackingData.NewestTLogTimeUtc
- uid: Microsoft.Build.Utilities.FlatTrackingData.OldestFileName
  parent: Microsoft.Build.Utilities.FlatTrackingData
  isExternal: false
  name: OldestFileName
  nameWithType: FlatTrackingData.OldestFileName
  fullName: Microsoft.Build.Utilities.FlatTrackingData.OldestFileName
- uid: Microsoft.Build.Utilities.FlatTrackingData.OldestFileTime
  parent: Microsoft.Build.Utilities.FlatTrackingData
  isExternal: false
  name: OldestFileTime
  nameWithType: FlatTrackingData.OldestFileTime
  fullName: Microsoft.Build.Utilities.FlatTrackingData.OldestFileTime
- uid: Microsoft.Build.Utilities.FlatTrackingData.OldestFileTimeUtc
  parent: Microsoft.Build.Utilities.FlatTrackingData
  isExternal: false
  name: OldestFileTimeUtc
  nameWithType: FlatTrackingData.OldestFileTimeUtc
  fullName: Microsoft.Build.Utilities.FlatTrackingData.OldestFileTimeUtc
- uid: Microsoft.Build.Utilities.FlatTrackingData.SaveTlog
  parent: Microsoft.Build.Utilities.FlatTrackingData
  isExternal: false
  name: SaveTlog()
  nameWithType: FlatTrackingData.SaveTlog()
  fullName: Microsoft.Build.Utilities.FlatTrackingData.SaveTlog()
- uid: Microsoft.Build.Utilities.FlatTrackingData.SaveTlog(Microsoft.Build.Utilities.DependencyFilter)
  parent: Microsoft.Build.Utilities.FlatTrackingData
  isExternal: false
  name: SaveTlog(DependencyFilter)
  nameWithType: FlatTrackingData.SaveTlog(DependencyFilter)
  fullName: Microsoft.Build.Utilities.FlatTrackingData.SaveTlog(DependencyFilter)
- uid: Microsoft.Build.Utilities.DependencyFilter
  parent: Microsoft.Build.Utilities
  isExternal: false
  name: DependencyFilter
  nameWithType: DependencyFilter
  fullName: Microsoft.Build.Utilities.DependencyFilter
- uid: Microsoft.Build.Utilities.FlatTrackingData.SkipMissingFiles
  parent: Microsoft.Build.Utilities.FlatTrackingData
  isExternal: false
  name: SkipMissingFiles
  nameWithType: FlatTrackingData.SkipMissingFiles
  fullName: Microsoft.Build.Utilities.FlatTrackingData.SkipMissingFiles
- uid: Microsoft.Build.Utilities.FlatTrackingData.TlogFiles
  parent: Microsoft.Build.Utilities.FlatTrackingData
  isExternal: false
  name: TlogFiles
  nameWithType: FlatTrackingData.TlogFiles
  fullName: Microsoft.Build.Utilities.FlatTrackingData.TlogFiles
- uid: Microsoft.Build.Utilities.FlatTrackingData.TlogsAvailable
  parent: Microsoft.Build.Utilities.FlatTrackingData
  isExternal: false
  name: TlogsAvailable
  nameWithType: FlatTrackingData.TlogsAvailable
  fullName: Microsoft.Build.Utilities.FlatTrackingData.TlogsAvailable
- uid: Microsoft.Build.Utilities.FlatTrackingData.TreatRootMarkersAsEntries
  parent: Microsoft.Build.Utilities.FlatTrackingData
  isExternal: false
  name: TreatRootMarkersAsEntries
  nameWithType: FlatTrackingData.TreatRootMarkersAsEntries
  fullName: Microsoft.Build.Utilities.FlatTrackingData.TreatRootMarkersAsEntries
- uid: Microsoft.Build.Utilities.FlatTrackingData.UpdateFileEntryDetails
  parent: Microsoft.Build.Utilities.FlatTrackingData
  isExternal: false
  name: UpdateFileEntryDetails()
  nameWithType: FlatTrackingData.UpdateFileEntryDetails()
  fullName: Microsoft.Build.Utilities.FlatTrackingData.UpdateFileEntryDetails()
- uid: Microsoft.Build.Utilities.FlatTrackingData.#ctor*
  parent: Microsoft.Build.Utilities.FlatTrackingData
  isExternal: false
  name: FlatTrackingData
  nameWithType: FlatTrackingData.FlatTrackingData
- uid: Microsoft.Build.Utilities.FlatTrackingData.DependencyTable*
  parent: Microsoft.Build.Utilities.FlatTrackingData
  isExternal: false
  name: DependencyTable
  nameWithType: FlatTrackingData.DependencyTable
- uid: Microsoft.Build.Utilities.FlatTrackingData.FileIsExcludedFromDependencyCheck*
  parent: Microsoft.Build.Utilities.FlatTrackingData
  isExternal: false
  name: FileIsExcludedFromDependencyCheck
  nameWithType: FlatTrackingData.FileIsExcludedFromDependencyCheck
- uid: Microsoft.Build.Utilities.FlatTrackingData.FinalizeTLogs*
  parent: Microsoft.Build.Utilities.FlatTrackingData
  isExternal: false
  name: FinalizeTLogs
  nameWithType: FlatTrackingData.FinalizeTLogs
- uid: Microsoft.Build.Utilities.FlatTrackingData.GetLastWriteTimeUtc*
  parent: Microsoft.Build.Utilities.FlatTrackingData
  isExternal: false
  name: GetLastWriteTimeUtc
  nameWithType: FlatTrackingData.GetLastWriteTimeUtc
- uid: Microsoft.Build.Utilities.FlatTrackingData.IsUpToDate*
  parent: Microsoft.Build.Utilities.FlatTrackingData
  isExternal: false
  name: IsUpToDate
  nameWithType: FlatTrackingData.IsUpToDate
- uid: Microsoft.Build.Utilities.FlatTrackingData.MissingFiles*
  parent: Microsoft.Build.Utilities.FlatTrackingData
  isExternal: false
  name: MissingFiles
  nameWithType: FlatTrackingData.MissingFiles
- uid: Microsoft.Build.Utilities.FlatTrackingData.NewestFileName*
  parent: Microsoft.Build.Utilities.FlatTrackingData
  isExternal: false
  name: NewestFileName
  nameWithType: FlatTrackingData.NewestFileName
- uid: Microsoft.Build.Utilities.FlatTrackingData.NewestFileTime*
  parent: Microsoft.Build.Utilities.FlatTrackingData
  isExternal: false
  name: NewestFileTime
  nameWithType: FlatTrackingData.NewestFileTime
- uid: Microsoft.Build.Utilities.FlatTrackingData.NewestFileTimeUtc*
  parent: Microsoft.Build.Utilities.FlatTrackingData
  isExternal: false
  name: NewestFileTimeUtc
  nameWithType: FlatTrackingData.NewestFileTimeUtc
- uid: Microsoft.Build.Utilities.FlatTrackingData.NewestTLogFileName*
  parent: Microsoft.Build.Utilities.FlatTrackingData
  isExternal: false
  name: NewestTLogFileName
  nameWithType: FlatTrackingData.NewestTLogFileName
- uid: Microsoft.Build.Utilities.FlatTrackingData.NewestTLogTime*
  parent: Microsoft.Build.Utilities.FlatTrackingData
  isExternal: false
  name: NewestTLogTime
  nameWithType: FlatTrackingData.NewestTLogTime
- uid: Microsoft.Build.Utilities.FlatTrackingData.NewestTLogTimeUtc*
  parent: Microsoft.Build.Utilities.FlatTrackingData
  isExternal: false
  name: NewestTLogTimeUtc
  nameWithType: FlatTrackingData.NewestTLogTimeUtc
- uid: Microsoft.Build.Utilities.FlatTrackingData.OldestFileName*
  parent: Microsoft.Build.Utilities.FlatTrackingData
  isExternal: false
  name: OldestFileName
  nameWithType: FlatTrackingData.OldestFileName
- uid: Microsoft.Build.Utilities.FlatTrackingData.OldestFileTime*
  parent: Microsoft.Build.Utilities.FlatTrackingData
  isExternal: false
  name: OldestFileTime
  nameWithType: FlatTrackingData.OldestFileTime
- uid: Microsoft.Build.Utilities.FlatTrackingData.OldestFileTimeUtc*
  parent: Microsoft.Build.Utilities.FlatTrackingData
  isExternal: false
  name: OldestFileTimeUtc
  nameWithType: FlatTrackingData.OldestFileTimeUtc
- uid: Microsoft.Build.Utilities.FlatTrackingData.SaveTlog*
  parent: Microsoft.Build.Utilities.FlatTrackingData
  isExternal: false
  name: SaveTlog
  nameWithType: FlatTrackingData.SaveTlog
- uid: Microsoft.Build.Utilities.FlatTrackingData.SkipMissingFiles*
  parent: Microsoft.Build.Utilities.FlatTrackingData
  isExternal: false
  name: SkipMissingFiles
  nameWithType: FlatTrackingData.SkipMissingFiles
- uid: Microsoft.Build.Utilities.FlatTrackingData.TlogFiles*
  parent: Microsoft.Build.Utilities.FlatTrackingData
  isExternal: false
  name: TlogFiles
  nameWithType: FlatTrackingData.TlogFiles
- uid: Microsoft.Build.Utilities.FlatTrackingData.TlogsAvailable*
  parent: Microsoft.Build.Utilities.FlatTrackingData
  isExternal: false
  name: TlogsAvailable
  nameWithType: FlatTrackingData.TlogsAvailable
- uid: Microsoft.Build.Utilities.FlatTrackingData.TreatRootMarkersAsEntries*
  parent: Microsoft.Build.Utilities.FlatTrackingData
  isExternal: false
  name: TreatRootMarkersAsEntries
  nameWithType: FlatTrackingData.TreatRootMarkersAsEntries
- uid: Microsoft.Build.Utilities.FlatTrackingData.UpdateFileEntryDetails*
  parent: Microsoft.Build.Utilities.FlatTrackingData
  isExternal: false
  name: UpdateFileEntryDetails
  nameWithType: FlatTrackingData.UpdateFileEntryDetails
