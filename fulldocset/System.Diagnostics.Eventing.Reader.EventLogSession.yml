### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.Eventing.Reader.EventLogSession
  id: EventLogSession
  children:
  - System.Diagnostics.Eventing.Reader.EventLogSession.#ctor
  - System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String)
  - System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String,System.String,System.String,System.Security.SecureString,System.Diagnostics.Eventing.Reader.SessionAuthentication)
  - System.Diagnostics.Eventing.Reader.EventLogSession.CancelCurrentOperations
  - System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String)
  - System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String,System.String)
  - System.Diagnostics.Eventing.Reader.EventLogSession.Dispose
  - System.Diagnostics.Eventing.Reader.EventLogSession.Dispose(System.Boolean)
  - System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)
  - System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean)
  - System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)
  - System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean,System.Globalization.CultureInfo)
  - System.Diagnostics.Eventing.Reader.EventLogSession.GetLogInformation(System.String,System.Diagnostics.Eventing.Reader.PathType)
  - System.Diagnostics.Eventing.Reader.EventLogSession.GetLogNames
  - System.Diagnostics.Eventing.Reader.EventLogSession.GetProviderNames
  - System.Diagnostics.Eventing.Reader.EventLogSession.GlobalSession
  langs:
  - csharp
  name: EventLogSession
  nameWithType: EventLogSession
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession
  type: Class
  summary: "Used to access the Event Log service on the local computer or a remote computer so you can manage and gather information about the event logs and event providers on the computer."
  remarks: ''
  example:
  - 'For example code using this class, see [How To: Query for Events](http://msdn.microsoft.com/en-us/5231a436-4cf2-4539-90d2-a04813aba069), [How to: Retrieve Information About an Event Publisher](http://msdn.microsoft.com/en-us/2a3e897f-25a9-4dad-8541-171ac49970a3) or [How to: Configure and Read Event Log Properties](http://msdn.microsoft.com/en-us/2d2b00b3-2d1d-4567-a47e-3f5a7c1955ac).'
  syntax:
    content: 'public class EventLogSession : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.#ctor
  id: '#ctor'
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  langs:
  - csharp
  name: EventLogSession()
  nameWithType: EventLogSession.EventLogSession()
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.EventLogSession()
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Initializes a new <xref href=&quot;System.Diagnostics.Eventing.Reader.EventLogSession&quot;></xref> object, establishes a connection with the local Event Log service."
  syntax:
    content: public EventLogSession ();
    parameters: []
  overload: System.Diagnostics.Eventing.Reader.EventLogSession.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  langs:
  - csharp
  name: EventLogSession(String)
  nameWithType: EventLogSession.EventLogSession(String)
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.EventLogSession(String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Initializes a new <xref href=&quot;System.Diagnostics.Eventing.Reader.EventLogSession&quot;></xref> object, and establishes a connection with the Event Log service on the specified computer. The credentials (user name and password) of the user who calls the method is used for the credentials to access the remote computer."
  syntax:
    content: public EventLogSession (string server);
    parameters:
    - id: server
      type: System.String
      description: "The name of the computer on which to connect to the Event Log service."
  overload: System.Diagnostics.Eventing.Reader.EventLogSession.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String,System.String,System.String,System.Security.SecureString,System.Diagnostics.Eventing.Reader.SessionAuthentication)
  id: '#ctor(System.String,System.String,System.String,System.Security.SecureString,System.Diagnostics.Eventing.Reader.SessionAuthentication)'
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  langs:
  - csharp
  name: EventLogSession(String,String,String,SecureString,SessionAuthentication)
  nameWithType: EventLogSession.EventLogSession(String,String,String,SecureString,SessionAuthentication)
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.EventLogSession(String,String,String,SecureString,SessionAuthentication)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Initializes a new <xref href=&quot;System.Diagnostics.Eventing.Reader.EventLogSession&quot;></xref> object, and establishes a connection with the Event Log service on the specified computer. The specified credentials (user name and password) are used for the credentials to access the remote computer."
  syntax:
    content: public EventLogSession (string server, string domain, string user, System.Security.SecureString password, System.Diagnostics.Eventing.Reader.SessionAuthentication logOnType);
    parameters:
    - id: server
      type: System.String
      description: "The name of the computer on which to connect to the Event Log service."
    - id: domain
      type: System.String
      description: "The domain of the specified user."
    - id: user
      type: System.String
      description: "The user name used to connect to the remote computer."
    - id: password
      type: System.Security.SecureString
      description: "The password used to connect to the remote computer."
    - id: logOnType
      type: System.Diagnostics.Eventing.Reader.SessionAuthentication
      description: "The type of connection to use for the connection to the remote computer."
  overload: System.Diagnostics.Eventing.Reader.EventLogSession.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.CancelCurrentOperations
  id: CancelCurrentOperations
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  langs:
  - csharp
  name: CancelCurrentOperations()
  nameWithType: EventLogSession.CancelCurrentOperations()
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.CancelCurrentOperations()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Cancels any operations (such as reading an event log or subscribing to an event log) that are currently active for the Event Log service that this session object is connected to."
  syntax:
    content: public void CancelCurrentOperations ();
    parameters: []
  overload: System.Diagnostics.Eventing.Reader.EventLogSession.CancelCurrentOperations*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String)
  id: ClearLog(System.String)
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  langs:
  - csharp
  name: ClearLog(String)
  nameWithType: EventLogSession.ClearLog(String)
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Clears events from the specified event log."
  remarks: ''
  example:
  - 'For example code using this class, see [How To: Export, Archive, and Clear Event Logs](http://msdn.microsoft.com/en-us/7753ff87-f402-41ac-ac64-767e04dd1773).'
  syntax:
    content: public void ClearLog (string logName);
    parameters:
    - id: logName
      type: System.String
      description: "The name of the event log to clear all the events from."
  overload: System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String,System.String)
  id: ClearLog(System.String,System.String)
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  langs:
  - csharp
  name: ClearLog(String,String)
  nameWithType: EventLogSession.ClearLog(String,String)
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(String,String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Clears events from the specified event log, and saves the cleared events to the specified file."
  remarks: ''
  example:
  - 'For example code using this class, see [How To: Export, Archive, and Clear Event Logs](http://msdn.microsoft.com/en-us/7753ff87-f402-41ac-ac64-767e04dd1773).'
  syntax:
    content: public void ClearLog (string logName, string backupPath);
    parameters:
    - id: logName
      type: System.String
      description: "The name of the event log to clear all the events from."
    - id: backupPath
      type: System.String
      description: "The path to the file in which the cleared events will be saved. The file should end in .evtx."
  overload: System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.Dispose
  id: Dispose
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  langs:
  - csharp
  name: Dispose()
  nameWithType: EventLogSession.Dispose()
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.Dispose()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Releases all the resources used by this object."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Diagnostics.Eventing.Reader.EventLogSession.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: EventLogSession.Dispose(Boolean)
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Releases the unmanaged resources used by this object, and optionally releases the managed resources."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to release both managed and unmanaged resources; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to release only unmanaged resources."
  overload: System.Diagnostics.Eventing.Reader.EventLogSession.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)
  id: ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  langs:
  - csharp
  name: ExportLog(String,PathType,String,String)
  nameWithType: EventLogSession.ExportLog(String,PathType,String,String)
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(String,PathType,String,String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Exports events into an external log file. The events are stored without the event messages."
  syntax:
    content: public void ExportLog (string path, System.Diagnostics.Eventing.Reader.PathType pathType, string query, string targetFilePath);
    parameters:
    - id: path
      type: System.String
      description: "The name of the event log to export events from, or the path to the event log file to export events from."
    - id: pathType
      type: System.Diagnostics.Eventing.Reader.PathType
      description: "Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file."
    - id: query
      type: System.String
      description: "The query used to select the events to export.  Only the events returned from the query will be exported."
    - id: targetFilePath
      type: System.String
      description: "The path to the log file (ends in .evtx) in which the exported events will be stored after this method is executed."
  overload: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean)
  id: ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean)
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  langs:
  - csharp
  name: ExportLog(String,PathType,String,String,Boolean)
  nameWithType: EventLogSession.ExportLog(String,PathType,String,String,Boolean)
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(String,PathType,String,String,Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Exports events into an external log file. A flag can be set to indicate that the method will continue exporting events even if the specified query fails for some logs. The events are stored without the event messages."
  syntax:
    content: public void ExportLog (string path, System.Diagnostics.Eventing.Reader.PathType pathType, string query, string targetFilePath, bool tolerateQueryErrors);
    parameters:
    - id: path
      type: System.String
      description: "The name of the event log to export events from, or the path to the event log file to export events from."
    - id: pathType
      type: System.Diagnostics.Eventing.Reader.PathType
      description: "Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file."
    - id: query
      type: System.String
      description: "The query used to select the events to export. Only the events returned from the query will be exported."
    - id: targetFilePath
      type: System.String
      description: "The path to the log file (ends in .evtx) in which the exported events will be stored after this method is executed."
    - id: tolerateQueryErrors
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> indicates that the method will continue exporting events even if the specified query fails for some logs, and <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> indicates that this method will not continue to export events when the specified query fails."
  overload: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)
  id: ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  langs:
  - csharp
  name: ExportLogAndMessages(String,PathType,String,String)
  nameWithType: EventLogSession.ExportLogAndMessages(String,PathType,String,String)
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(String,PathType,String,String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Exports events and their messages into an external log file."
  remarks: "The event messages are exported in the default language."
  example:
  - 'For example code using this class, see [How to: Export, Archive, and Clear Event Logs](https://msdn.microsoft.com/library/bb671203.aspx).'
  syntax:
    content: public void ExportLogAndMessages (string path, System.Diagnostics.Eventing.Reader.PathType pathType, string query, string targetFilePath);
    parameters:
    - id: path
      type: System.String
      description: "The name of the event log to export events from, or the path to the event log file to export events from."
    - id: pathType
      type: System.Diagnostics.Eventing.Reader.PathType
      description: "Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file."
    - id: query
      type: System.String
      description: "The query used to select the events to export.  Only the events returned from the query will be exported."
    - id: targetFilePath
      type: System.String
      description: "The path to the log file (ends in .evtx) in which the exported events will be stored after this method is executed."
  overload: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean,System.Globalization.CultureInfo)
  id: ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean,System.Globalization.CultureInfo)
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  langs:
  - csharp
  name: ExportLogAndMessages(String,PathType,String,String,Boolean,CultureInfo)
  nameWithType: EventLogSession.ExportLogAndMessages(String,PathType,String,String,Boolean,CultureInfo)
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(String,PathType,String,String,Boolean,CultureInfo)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Exports events and their messages into an external log file. A flag can be set to indicate that the method will continue exporting events even if the specified query fails for some logs. The event messages are exported in the specified language."
  remarks: ''
  example:
  - 'For example code using this class, see [How to: Export, Archive, and Clear Event Logs](https://msdn.microsoft.com/library/bb671203.aspx).'
  syntax:
    content: public void ExportLogAndMessages (string path, System.Diagnostics.Eventing.Reader.PathType pathType, string query, string targetFilePath, bool tolerateQueryErrors, System.Globalization.CultureInfo targetCultureInfo);
    parameters:
    - id: path
      type: System.String
      description: "The name of the event log to export events from, or the path to the event log file to export events from."
    - id: pathType
      type: System.Diagnostics.Eventing.Reader.PathType
      description: "Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file."
    - id: query
      type: System.String
      description: "The query used to select the events to export.  Only the events returned from the query will be exported."
    - id: targetFilePath
      type: System.String
      description: "The path to the log file (ends in .evtx) in which the exported events will be stored after this method is executed."
    - id: tolerateQueryErrors
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> indicates that the method will continue exporting events even if the specified query fails for some logs, and <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> indicates that this method will not continue to export events when the specified query fails."
    - id: targetCultureInfo
      type: System.Globalization.CultureInfo
      description: "The culture that specifies which language that the exported event messages will be in."
  overload: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.GetLogInformation(System.String,System.Diagnostics.Eventing.Reader.PathType)
  id: GetLogInformation(System.String,System.Diagnostics.Eventing.Reader.PathType)
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  langs:
  - csharp
  name: GetLogInformation(String,PathType)
  nameWithType: EventLogSession.GetLogInformation(String,PathType)
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.GetLogInformation(String,PathType)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Gets an object that contains runtime information for the specified event log."
  syntax:
    content: public System.Diagnostics.Eventing.Reader.EventLogInformation GetLogInformation (string logName, System.Diagnostics.Eventing.Reader.PathType pathType);
    parameters:
    - id: logName
      type: System.String
      description: "The name of the event log to get information about, or the path to the event log file to get information about."
    - id: pathType
      type: System.Diagnostics.Eventing.Reader.PathType
      description: "Specifies whether the string used in the path parameter specifies the name of an event log, or the path to an event log file."
    return:
      type: System.Diagnostics.Eventing.Reader.EventLogInformation
      description: "Returns an <xref href=&quot;System.Diagnostics.Eventing.Reader.EventLogInformation&quot;></xref> object that contains information about the specified log."
  overload: System.Diagnostics.Eventing.Reader.EventLogSession.GetLogInformation*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.GetLogNames
  id: GetLogNames
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  langs:
  - csharp
  name: GetLogNames()
  nameWithType: EventLogSession.GetLogNames()
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.GetLogNames()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Gets an enumerable collection of all the event log names that are registered with the Event Log service."
  syntax:
    content: public System.Collections.Generic.IEnumerable<string> GetLogNames ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "Returns an enumerable collection of strings that contain the event log names."
  overload: System.Diagnostics.Eventing.Reader.EventLogSession.GetLogNames*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.GetProviderNames
  id: GetProviderNames
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  langs:
  - csharp
  name: GetProviderNames()
  nameWithType: EventLogSession.GetProviderNames()
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.GetProviderNames()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Gets an enumerable collection of all the event provider names that are registered with the Event Log service. An event provider is an application that publishes events to an event log."
  syntax:
    content: public System.Collections.Generic.IEnumerable<string> GetProviderNames ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "Returns an enumerable collection of strings that contain the event provider names."
  overload: System.Diagnostics.Eventing.Reader.EventLogSession.GetProviderNames*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.GlobalSession
  id: GlobalSession
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  langs:
  - csharp
  name: GlobalSession
  nameWithType: EventLogSession.GlobalSession
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.GlobalSession
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing.Reader
  summary: "Gets a static predefined session object that is connected to the Event Log service on the local computer."
  syntax:
    content: public static System.Diagnostics.Eventing.Reader.EventLogSession GlobalSession { get; }
    return:
      type: System.Diagnostics.Eventing.Reader.EventLogSession
      description: "Returns an <xref href=&quot;System.Diagnostics.Eventing.Reader.EventLogSession&quot;></xref> object that is a predefined session object that is connected to the Event Log service on the local computer."
  overload: System.Diagnostics.Eventing.Reader.EventLogSession.GlobalSession*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.#ctor
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: EventLogSession()
  nameWithType: EventLogSession.EventLogSession()
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.EventLogSession()
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String)
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: EventLogSession(String)
  nameWithType: EventLogSession.EventLogSession(String)
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.EventLogSession(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String,System.String,System.String,System.Security.SecureString,System.Diagnostics.Eventing.Reader.SessionAuthentication)
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: EventLogSession(String,String,String,SecureString,SessionAuthentication)
  nameWithType: EventLogSession.EventLogSession(String,String,String,SecureString,SessionAuthentication)
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.EventLogSession(String,String,String,SecureString,SessionAuthentication)
- uid: System.Security.SecureString
  parent: System.Security
  isExternal: false
  name: SecureString
  nameWithType: SecureString
  fullName: System.Security.SecureString
- uid: System.Diagnostics.Eventing.Reader.SessionAuthentication
  parent: System.Diagnostics.Eventing.Reader
  isExternal: false
  name: SessionAuthentication
  nameWithType: SessionAuthentication
  fullName: System.Diagnostics.Eventing.Reader.SessionAuthentication
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.CancelCurrentOperations
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: CancelCurrentOperations()
  nameWithType: EventLogSession.CancelCurrentOperations()
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.CancelCurrentOperations()
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String)
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: ClearLog(String)
  nameWithType: EventLogSession.ClearLog(String)
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(String)
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String,System.String)
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: ClearLog(String,String)
  nameWithType: EventLogSession.ClearLog(String,String)
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(String,String)
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.Dispose
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: Dispose()
  nameWithType: EventLogSession.Dispose()
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.Dispose()
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.Dispose(System.Boolean)
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: EventLogSession.Dispose(Boolean)
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: ExportLog(String,PathType,String,String)
  nameWithType: EventLogSession.ExportLog(String,PathType,String,String)
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(String,PathType,String,String)
- uid: System.Diagnostics.Eventing.Reader.PathType
  parent: System.Diagnostics.Eventing.Reader
  isExternal: false
  name: PathType
  nameWithType: PathType
  fullName: System.Diagnostics.Eventing.Reader.PathType
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean)
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: ExportLog(String,PathType,String,String,Boolean)
  nameWithType: EventLogSession.ExportLog(String,PathType,String,String,Boolean)
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(String,PathType,String,String,Boolean)
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: ExportLogAndMessages(String,PathType,String,String)
  nameWithType: EventLogSession.ExportLogAndMessages(String,PathType,String,String)
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(String,PathType,String,String)
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean,System.Globalization.CultureInfo)
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: ExportLogAndMessages(String,PathType,String,String,Boolean,CultureInfo)
  nameWithType: EventLogSession.ExportLogAndMessages(String,PathType,String,String,Boolean,CultureInfo)
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(String,PathType,String,String,Boolean,CultureInfo)
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.GetLogInformation(System.String,System.Diagnostics.Eventing.Reader.PathType)
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: GetLogInformation(String,PathType)
  nameWithType: EventLogSession.GetLogInformation(String,PathType)
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.GetLogInformation(String,PathType)
- uid: System.Diagnostics.Eventing.Reader.EventLogInformation
  parent: System.Diagnostics.Eventing.Reader
  isExternal: false
  name: EventLogInformation
  nameWithType: EventLogInformation
  fullName: System.Diagnostics.Eventing.Reader.EventLogInformation
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.GetLogNames
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: GetLogNames()
  nameWithType: EventLogSession.GetLogNames()
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.GetLogNames()
- uid: System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.GetProviderNames
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: GetProviderNames()
  nameWithType: EventLogSession.GetProviderNames()
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.GetProviderNames()
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.GlobalSession
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: GlobalSession
  nameWithType: EventLogSession.GlobalSession
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.GlobalSession
- uid: System.Diagnostics.Eventing.Reader.EventLogSession
  parent: System.Diagnostics.Eventing.Reader
  isExternal: false
  name: EventLogSession
  nameWithType: EventLogSession
  fullName: System.Diagnostics.Eventing.Reader.EventLogSession
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.#ctor*
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: EventLogSession
  nameWithType: EventLogSession.EventLogSession
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.CancelCurrentOperations*
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: CancelCurrentOperations
  nameWithType: EventLogSession.CancelCurrentOperations
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog*
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: ClearLog
  nameWithType: EventLogSession.ClearLog
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.Dispose*
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: Dispose
  nameWithType: EventLogSession.Dispose
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog*
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: ExportLog
  nameWithType: EventLogSession.ExportLog
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages*
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: ExportLogAndMessages
  nameWithType: EventLogSession.ExportLogAndMessages
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.GetLogInformation*
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: GetLogInformation
  nameWithType: EventLogSession.GetLogInformation
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.GetLogNames*
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: GetLogNames
  nameWithType: EventLogSession.GetLogNames
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.GetProviderNames*
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: GetProviderNames
  nameWithType: EventLogSession.GetProviderNames
- uid: System.Diagnostics.Eventing.Reader.EventLogSession.GlobalSession*
  parent: System.Diagnostics.Eventing.Reader.EventLogSession
  isExternal: false
  name: GlobalSession
  nameWithType: EventLogSession.GlobalSession
