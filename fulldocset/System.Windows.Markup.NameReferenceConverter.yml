### YamlMime:ManagedReference
items:
- uid: System.Windows.Markup.NameReferenceConverter
  id: NameReferenceConverter
  children:
  - System.Windows.Markup.NameReferenceConverter.#ctor
  - System.Windows.Markup.NameReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Windows.Markup.NameReferenceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Windows.Markup.NameReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.Windows.Markup.NameReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  langs:
  - csharp
  name: NameReferenceConverter
  nameWithType: NameReferenceConverter
  fullName: System.Windows.Markup.NameReferenceConverter
  type: Class
  summary: "Provides type conversion to convert a string name into an object reference to the object with that name, or to return the name of an object from the object graph."
  remarks: "This class provides a type converter wrapper around two services.       The <xref:System.Windows.Markup.NameReferenceConverter.ConvertFrom%2A> implementation uses <xref:System.Xaml.IXamlNameResolver> service from context to perform the resolution of an object by name in XAML. This is part of the relevant XAML reader and XAML writer implementations in .NET Framework XAML Services. Proper function of this converter requires that the <xref:System.Xaml.IXamlNameResolver> service is available from service context.       The <xref:System.Windows.Markup.NameReferenceConverter.ConvertTo%2A> implementation uses <xref:System.Xaml.IXamlNameProvider> service from context to perform the resolution of a reference name for an object during save/serialization. This is part of the relevant reader and writer implementations and their context. Proper function of this converter requires that there be an underlying <xref:System.Xaml.IXamlNameProvider> service available.       This type converter implementation is atypical for the <xref:System.ComponentModel.TypeConverter> base type because it is not scoped to a discrete conversion type. It can potentially convert any object to and from a referencing name so long as that object could have a name assigned to it in XAML, and the supporting context has the necessary services to return results.       As part of general services support, the System.Xaml base implementation of <xref:System.Xaml.XamlObjectWriter> and <xref:System.Xaml.XamlXmlWriter> provide <xref:System.Xaml.IXamlNameProvider> and <xref:System.Xaml.IXamlNameResolver> services for use by NameReferenceConverter. The name basis for these services uses either `x:Name` or a <xref:System.Windows.Markup.RuntimeNamePropertyAttribute> attributed alias property."
  syntax:
    content: 'public class NameReferenceConverter : System.ComponentModel.TypeConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Markup.NameReferenceConverter.#ctor
  id: '#ctor'
  parent: System.Windows.Markup.NameReferenceConverter
  langs:
  - csharp
  name: NameReferenceConverter()
  nameWithType: NameReferenceConverter.NameReferenceConverter()
  fullName: System.Windows.Markup.NameReferenceConverter.NameReferenceConverter()
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Windows.Markup
  summary: "Initializes a new instance of the <see cref=&quot;T:System.Windows.Markup.NameReferenceConverter&quot;></see> class."
  syntax:
    content: public NameReferenceConverter ();
    parameters: []
  overload: System.Windows.Markup.NameReferenceConverter.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Markup.NameReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Markup.NameReferenceConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: NameReferenceConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Windows.Markup.NameReferenceConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Windows.Markup
  summary: "Returns whether this converter can convert an object of one type to another object."
  remarks: "This implementation can only process a `sourceType` of <xref:System.String>. Other types return `false`."
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "An  that provides a format context."
    - id: sourceType
      type: System.Type
      description: "A <xref:System.Type> that represents the type you want to convert from."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Windows.Markup.NameReferenceConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Markup.NameReferenceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Markup.NameReferenceConverter
  langs:
  - csharp
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: NameReferenceConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Windows.Markup.NameReferenceConverter.CanConvertTo(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Windows.Markup
  summary: "Returns a value that indicates whether the converter can convert an object to the specified destination type."
  remarks: "A `destinationType` that references the <xref:System.String> type returns `true`; all other `destinationType` values return `false`.       This method returns false if `context` is `null`, or if <xref:System.Xaml.IXamlNameProvider> cannot be obtained as a service from `context`."
  syntax:
    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "An  that provides a format context."
    - id: destinationType
      type: System.Type
      description: "The type to convert to."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Windows.Markup.NameReferenceConverter.CanConvertTo*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Markup.NameReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Windows.Markup.NameReferenceConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: NameReferenceConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Windows.Markup.NameReferenceConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Windows.Markup
  summary: "Converts the provided object to another object, using the specified context and culture information."
  remarks: "Only a <xref:System.String> input provides a conversion result."
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "An  that provides a format context."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "The <xref:System.Globalization.CultureInfo> to use as the current culture."
    - id: value
      type: System.Object
      description: "The reference name string to convert."
    return:
      type: System.Object
      description: "To be added."
  overload: System.Windows.Markup.NameReferenceConverter.ConvertFrom*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n    value is a null string or empty string.  \n  \n -or-  \n  \n  service is missing or invalid."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n    context is ."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Windows.Markup.NameReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Windows.Markup.NameReferenceConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: NameReferenceConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Windows.Markup.NameReferenceConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Windows.Markup
  summary: "Converts an object to the specified type. This is intended to return XAML reference names for objects in an object graph."
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "An  that provides a format context."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "The <xref:System.Globalization.CultureInfo> to use as the current culture."
    - id: value
      type: System.Object
      description: "The object to retrieve the reference name for."
    - id: destinationType
      type: System.Type
      description: "The type to return. You should always reference the <xref:System.String> type."
    return:
      type: System.Object
      description: "To be added."
  overload: System.Windows.Markup.NameReferenceConverter.ConvertTo*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "\n     service is missing or invalid."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n    context is ."
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.Windows.Markup.NameReferenceConverter.#ctor
  parent: System.Windows.Markup.NameReferenceConverter
  isExternal: false
  name: NameReferenceConverter()
  nameWithType: NameReferenceConverter.NameReferenceConverter()
  fullName: System.Windows.Markup.NameReferenceConverter.NameReferenceConverter()
- uid: System.Windows.Markup.NameReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Markup.NameReferenceConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: NameReferenceConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Windows.Markup.NameReferenceConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Markup.NameReferenceConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Markup.NameReferenceConverter
  isExternal: false
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: NameReferenceConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Windows.Markup.NameReferenceConverter.CanConvertTo(ITypeDescriptorContext,Type)
- uid: System.Windows.Markup.NameReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Windows.Markup.NameReferenceConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: NameReferenceConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Windows.Markup.NameReferenceConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Windows.Markup.NameReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Windows.Markup.NameReferenceConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: NameReferenceConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Windows.Markup.NameReferenceConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.Windows.Markup.NameReferenceConverter.#ctor*
  parent: System.Windows.Markup.NameReferenceConverter
  isExternal: false
  name: NameReferenceConverter
  nameWithType: NameReferenceConverter.NameReferenceConverter
- uid: System.Windows.Markup.NameReferenceConverter.CanConvertFrom*
  parent: System.Windows.Markup.NameReferenceConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: NameReferenceConverter.CanConvertFrom
- uid: System.Windows.Markup.NameReferenceConverter.CanConvertTo*
  parent: System.Windows.Markup.NameReferenceConverter
  isExternal: false
  name: CanConvertTo
  nameWithType: NameReferenceConverter.CanConvertTo
- uid: System.Windows.Markup.NameReferenceConverter.ConvertFrom*
  parent: System.Windows.Markup.NameReferenceConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: NameReferenceConverter.ConvertFrom
- uid: System.Windows.Markup.NameReferenceConverter.ConvertTo*
  parent: System.Windows.Markup.NameReferenceConverter
  isExternal: false
  name: ConvertTo
  nameWithType: NameReferenceConverter.ConvertTo
