### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.SecurityMessageProperty
  id: SecurityMessageProperty
  children:
  - System.ServiceModel.Security.SecurityMessageProperty.#ctor
  - System.ServiceModel.Security.SecurityMessageProperty.CreateCopy
  - System.ServiceModel.Security.SecurityMessageProperty.Dispose
  - System.ServiceModel.Security.SecurityMessageProperty.ExternalAuthorizationPolicies
  - System.ServiceModel.Security.SecurityMessageProperty.GetOrCreate(System.ServiceModel.Channels.Message)
  - System.ServiceModel.Security.SecurityMessageProperty.HasIncomingSupportingTokens
  - System.ServiceModel.Security.SecurityMessageProperty.IncomingSupportingTokens
  - System.ServiceModel.Security.SecurityMessageProperty.InitiatorToken
  - System.ServiceModel.Security.SecurityMessageProperty.OutgoingSupportingTokens
  - System.ServiceModel.Security.SecurityMessageProperty.ProtectionToken
  - System.ServiceModel.Security.SecurityMessageProperty.RecipientToken
  - System.ServiceModel.Security.SecurityMessageProperty.SenderIdPrefix
  - System.ServiceModel.Security.SecurityMessageProperty.ServiceSecurityContext
  - System.ServiceModel.Security.SecurityMessageProperty.TransportToken
  langs:
  - csharp
  name: SecurityMessageProperty
  nameWithType: SecurityMessageProperty
  fullName: System.ServiceModel.Security.SecurityMessageProperty
  type: Class
  summary: "Contains security-related properties and is attached to a message."
  remarks: "Client authentication results are translated into an instance of <xref:System.ServiceModel.ServiceSecurityContext>, which is attached to the message using a SecurityMessageProperty. This property can be used by higher layers to implement custom authorization logic."
  syntax:
    content: 'public class SecurityMessageProperty : IDisposable, System.ServiceModel.Channels.IMessageProperty'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.ServiceModel.Channels.IMessageProperty
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityMessageProperty.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Security.SecurityMessageProperty
  langs:
  - csharp
  name: SecurityMessageProperty()
  nameWithType: SecurityMessageProperty.SecurityMessageProperty()
  fullName: System.ServiceModel.Security.SecurityMessageProperty.SecurityMessageProperty()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Initializes a new instance of the <xref href=&quot;System.ServiceModel.Security.SecurityMessageProperty&quot;></xref> class."
  syntax:
    content: public SecurityMessageProperty ();
    parameters: []
  overload: System.ServiceModel.Security.SecurityMessageProperty.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityMessageProperty.CreateCopy
  id: CreateCopy
  parent: System.ServiceModel.Security.SecurityMessageProperty
  langs:
  - csharp
  name: CreateCopy()
  nameWithType: SecurityMessageProperty.CreateCopy()
  fullName: System.ServiceModel.Security.SecurityMessageProperty.CreateCopy()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Clones the current instance of this class."
  remarks: "To access any objects in the <xref:System.ServiceModel.Security.SecurityMessageProperty>, such as <xref:System.ServiceModel.Security.SecurityMessageProperty.ServiceSecurityContext%2A>, <xref:System.ServiceModel.Security.SecurityMessageProperty.TransportToken%2A>, or <xref:System.ServiceModel.Security.SecurityMessageProperty.IncomingSupportingTokens%2A>), a copy must be created because these properties are undefined after the message is disposed of."
  syntax:
    content: public System.ServiceModel.Channels.IMessageProperty CreateCopy ();
    parameters: []
    return:
      type: System.ServiceModel.Channels.IMessageProperty
      description: "A <xref:System.ServiceModel.Channels.IMessageProperty> cloned from the current instance of this class."
  overload: System.ServiceModel.Security.SecurityMessageProperty.CreateCopy*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityMessageProperty.Dispose
  id: Dispose
  parent: System.ServiceModel.Security.SecurityMessageProperty
  langs:
  - csharp
  name: Dispose()
  nameWithType: SecurityMessageProperty.Dispose()
  fullName: System.ServiceModel.Security.SecurityMessageProperty.Dispose()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Disposes of the current instance of this class."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.ServiceModel.Security.SecurityMessageProperty.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityMessageProperty.ExternalAuthorizationPolicies
  id: ExternalAuthorizationPolicies
  parent: System.ServiceModel.Security.SecurityMessageProperty
  langs:
  - csharp
  name: ExternalAuthorizationPolicies
  nameWithType: SecurityMessageProperty.ExternalAuthorizationPolicies
  fullName: System.ServiceModel.Security.SecurityMessageProperty.ExternalAuthorizationPolicies
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Gets or sets a collection of external authorization policies."
  remarks: "By default, <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> is called on these authorization policies as part of the process that creates the <xref:System.ServiceModel.ServiceSecurityContext>."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> ExternalAuthorizationPolicies { get; set; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of type <xref href=&quot;System.IdentityModel.Policy.IAuthorizationPolicy&quot;></xref>."
  overload: System.ServiceModel.Security.SecurityMessageProperty.ExternalAuthorizationPolicies*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityMessageProperty.GetOrCreate(System.ServiceModel.Channels.Message)
  id: GetOrCreate(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Security.SecurityMessageProperty
  langs:
  - csharp
  name: GetOrCreate(Message)
  nameWithType: SecurityMessageProperty.GetOrCreate(Message)
  fullName: System.ServiceModel.Security.SecurityMessageProperty.GetOrCreate(Message)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Gets or creates an instance of this class from the specified message."
  syntax:
    content: public static System.ServiceModel.Security.SecurityMessageProperty GetOrCreate (System.ServiceModel.Channels.Message message);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "The <xref:System.ServiceModel.Channels.Message>."
    return:
      type: System.ServiceModel.Security.SecurityMessageProperty
      description: "An instance of <xref href=&quot;System.ServiceModel.Security.SecurityMessageProperty&quot;></xref>."
  overload: System.ServiceModel.Security.SecurityMessageProperty.GetOrCreate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityMessageProperty.HasIncomingSupportingTokens
  id: HasIncomingSupportingTokens
  parent: System.ServiceModel.Security.SecurityMessageProperty
  langs:
  - csharp
  name: HasIncomingSupportingTokens
  nameWithType: SecurityMessageProperty.HasIncomingSupportingTokens
  fullName: System.ServiceModel.Security.SecurityMessageProperty.HasIncomingSupportingTokens
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Indicates whether the incoming message contains at least one supporting security token."
  remarks: "Supporting tokens provide additional claims beyond those contained in the principal tokens for the binding. Supporting tokens can be scoped at a different scope than the binding."
  syntax:
    content: public bool HasIncomingSupportingTokens { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <xref:System.ServiceModel.Security.SecurityMessageProperty.IncomingSupportingTokens*> contains at least one entry; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.Security.SecurityMessageProperty.HasIncomingSupportingTokens*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityMessageProperty.IncomingSupportingTokens
  id: IncomingSupportingTokens
  parent: System.ServiceModel.Security.SecurityMessageProperty
  langs:
  - csharp
  name: IncomingSupportingTokens
  nameWithType: SecurityMessageProperty.IncomingSupportingTokens
  fullName: System.ServiceModel.Security.SecurityMessageProperty.IncomingSupportingTokens
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Gets or sets a collection of incoming supporting tokens."
  remarks: "Supporting tokens provide additional claims beyond those contained in the principal tokens for the binding. Supporting tokens can be scoped at a different scope than the binding."
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.ServiceModel.Security.SupportingTokenSpecification> IncomingSupportingTokens { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.ServiceModel.Security.SupportingTokenSpecification}
      description: "A &lt;xref:System.Collections.ObjectModel.Collection%601&gt; of type <xref href=&quot;System.ServiceModel.Security.SupportingTokenSpecification&quot;></xref>."
  overload: System.ServiceModel.Security.SecurityMessageProperty.IncomingSupportingTokens*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityMessageProperty.InitiatorToken
  id: InitiatorToken
  parent: System.ServiceModel.Security.SecurityMessageProperty
  langs:
  - csharp
  name: InitiatorToken
  nameWithType: SecurityMessageProperty.InitiatorToken
  fullName: System.ServiceModel.Security.SecurityMessageProperty.InitiatorToken
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Gets or sets the <xref href=&quot;System.ServiceModel.Security.SecurityTokenSpecification&quot;></xref> initiator token for this message."
  remarks: "If the message pattern requires multiple messages, the Initiator Token is used for the message signature from initiator to the recipient, and for encryption from recipient to initiator."
  syntax:
    content: public System.ServiceModel.Security.SecurityTokenSpecification InitiatorToken { get; set; }
    return:
      type: System.ServiceModel.Security.SecurityTokenSpecification
      description: "The <xref href=&quot;System.ServiceModel.Security.SecurityTokenSpecification&quot;></xref> initiator token for this message."
  overload: System.ServiceModel.Security.SecurityMessageProperty.InitiatorToken*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityMessageProperty.OutgoingSupportingTokens
  id: OutgoingSupportingTokens
  parent: System.ServiceModel.Security.SecurityMessageProperty
  langs:
  - csharp
  name: OutgoingSupportingTokens
  nameWithType: SecurityMessageProperty.OutgoingSupportingTokens
  fullName: System.ServiceModel.Security.SecurityMessageProperty.OutgoingSupportingTokens
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Gets a collection of outgoing <xref href=&quot;System.ServiceModel.Security.SupportingTokenSpecification&quot;></xref> objects."
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.ServiceModel.Security.SupportingTokenSpecification> OutgoingSupportingTokens { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.ServiceModel.Security.SupportingTokenSpecification}
      description: "A collection of outgoing supporting tokens."
  overload: System.ServiceModel.Security.SecurityMessageProperty.OutgoingSupportingTokens*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityMessageProperty.ProtectionToken
  id: ProtectionToken
  parent: System.ServiceModel.Security.SecurityMessageProperty
  langs:
  - csharp
  name: ProtectionToken
  nameWithType: SecurityMessageProperty.ProtectionToken
  fullName: System.ServiceModel.Security.SecurityMessageProperty.ProtectionToken
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Gets or sets the <xref href=&quot;System.ServiceModel.Security.SecurityTokenSpecification&quot;></xref> protection token for this message."
  remarks: "Protection Tokens are used in symmetric security bindings for signing and encryption."
  syntax:
    content: public System.ServiceModel.Security.SecurityTokenSpecification ProtectionToken { get; set; }
    return:
      type: System.ServiceModel.Security.SecurityTokenSpecification
      description: "The <xref href=&quot;System.ServiceModel.Security.SecurityTokenSpecification&quot;></xref> protection token for this message."
  overload: System.ServiceModel.Security.SecurityMessageProperty.ProtectionToken*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityMessageProperty.RecipientToken
  id: RecipientToken
  parent: System.ServiceModel.Security.SecurityMessageProperty
  langs:
  - csharp
  name: RecipientToken
  nameWithType: SecurityMessageProperty.RecipientToken
  fullName: System.ServiceModel.Security.SecurityMessageProperty.RecipientToken
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Gets or sets the <xref href=&quot;System.ServiceModel.Security.SecurityTokenSpecification&quot;></xref> recipient token for this message."
  remarks: "If the message pattern requires multiple messages, the Recipient Token is used for encryption from initiator to recipient, and for the message signature from recipient to initiator."
  syntax:
    content: public System.ServiceModel.Security.SecurityTokenSpecification RecipientToken { get; set; }
    return:
      type: System.ServiceModel.Security.SecurityTokenSpecification
      description: "The <xref href=&quot;System.ServiceModel.Security.SecurityTokenSpecification&quot;></xref> recipient token for this message."
  overload: System.ServiceModel.Security.SecurityMessageProperty.RecipientToken*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityMessageProperty.SenderIdPrefix
  id: SenderIdPrefix
  parent: System.ServiceModel.Security.SecurityMessageProperty
  langs:
  - csharp
  name: SenderIdPrefix
  nameWithType: SecurityMessageProperty.SenderIdPrefix
  fullName: System.ServiceModel.Security.SecurityMessageProperty.SenderIdPrefix
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Gets or sets the sender ID prefix for this message."
  syntax:
    content: public string SenderIdPrefix { get; set; }
    return:
      type: System.String
      description: "The sender ID prefix for this message."
  overload: System.ServiceModel.Security.SecurityMessageProperty.SenderIdPrefix*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The property value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "No character of the property value is alphabetic, numeric, or equal to &quot;_&quot;, &quot;.&quot;, or &quot;-&quot;."
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityMessageProperty.ServiceSecurityContext
  id: ServiceSecurityContext
  parent: System.ServiceModel.Security.SecurityMessageProperty
  langs:
  - csharp
  name: ServiceSecurityContext
  nameWithType: SecurityMessageProperty.ServiceSecurityContext
  fullName: System.ServiceModel.Security.SecurityMessageProperty.ServiceSecurityContext
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Gets or sets the <xref href=&quot;System.ServiceModel.ServiceSecurityContext&quot;></xref> for this message."
  remarks: "Use this class to obtain information about the runtime security context. A security context is created when a client is successfully authenticated. The security information from the client and for the current service instance can be obtained from an instance of this class.       A common use of the class is to retrieve the current set of claims for the purpose of authorizing a client when accessing a method."
  syntax:
    content: public System.ServiceModel.ServiceSecurityContext ServiceSecurityContext { get; set; }
    return:
      type: System.ServiceModel.ServiceSecurityContext
      description: "The <xref href=&quot;System.ServiceModel.ServiceSecurityContext&quot;></xref> object for this message."
  overload: System.ServiceModel.Security.SecurityMessageProperty.ServiceSecurityContext*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.SecurityMessageProperty.TransportToken
  id: TransportToken
  parent: System.ServiceModel.Security.SecurityMessageProperty
  langs:
  - csharp
  name: TransportToken
  nameWithType: SecurityMessageProperty.TransportToken
  fullName: System.ServiceModel.Security.SecurityMessageProperty.TransportToken
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Gets or sets the <xref href=&quot;System.ServiceModel.Security.SecurityTokenSpecification&quot;></xref> transport token for this message."
  remarks: "A Transport Token provides security at the transport level. A token used by HTTPS is an example of a Transport Token."
  syntax:
    content: public System.ServiceModel.Security.SecurityTokenSpecification TransportToken { get; set; }
    return:
      type: System.ServiceModel.Security.SecurityTokenSpecification
      description: "The <xref href=&quot;System.ServiceModel.Security.SecurityTokenSpecification&quot;></xref> transport token for this message."
  overload: System.ServiceModel.Security.SecurityMessageProperty.TransportToken*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ServiceModel.Security.SecurityMessageProperty.#ctor
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: SecurityMessageProperty()
  nameWithType: SecurityMessageProperty.SecurityMessageProperty()
  fullName: System.ServiceModel.Security.SecurityMessageProperty.SecurityMessageProperty()
- uid: System.ServiceModel.Security.SecurityMessageProperty.CreateCopy
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: CreateCopy()
  nameWithType: SecurityMessageProperty.CreateCopy()
  fullName: System.ServiceModel.Security.SecurityMessageProperty.CreateCopy()
- uid: System.ServiceModel.Channels.IMessageProperty
  parent: System.ServiceModel.Channels
  isExternal: true
  name: IMessageProperty
  nameWithType: IMessageProperty
  fullName: System.ServiceModel.Channels.IMessageProperty
- uid: System.ServiceModel.Security.SecurityMessageProperty.Dispose
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: Dispose()
  nameWithType: SecurityMessageProperty.Dispose()
  fullName: System.ServiceModel.Security.SecurityMessageProperty.Dispose()
- uid: System.ServiceModel.Security.SecurityMessageProperty.ExternalAuthorizationPolicies
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: ExternalAuthorizationPolicies
  nameWithType: SecurityMessageProperty.ExternalAuthorizationPolicies
  fullName: System.ServiceModel.Security.SecurityMessageProperty.ExternalAuthorizationPolicies
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<IAuthorizationPolicy>
  nameWithType: ReadOnlyCollection<IAuthorizationPolicy>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Policy.IAuthorizationPolicy
    name: IAuthorizationPolicy
    nameWithType: IAuthorizationPolicy
    fullName: IAuthorizationPolicy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Security.SecurityMessageProperty.GetOrCreate(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: GetOrCreate(Message)
  nameWithType: SecurityMessageProperty.GetOrCreate(Message)
  fullName: System.ServiceModel.Security.SecurityMessageProperty.GetOrCreate(Message)
- uid: System.ServiceModel.Security.SecurityMessageProperty
  parent: System.ServiceModel.Security
  isExternal: false
  name: SecurityMessageProperty
  nameWithType: SecurityMessageProperty
  fullName: System.ServiceModel.Security.SecurityMessageProperty
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.ServiceModel.Security.SecurityMessageProperty.HasIncomingSupportingTokens
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: HasIncomingSupportingTokens
  nameWithType: SecurityMessageProperty.HasIncomingSupportingTokens
  fullName: System.ServiceModel.Security.SecurityMessageProperty.HasIncomingSupportingTokens
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Security.SecurityMessageProperty.IncomingSupportingTokens
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: IncomingSupportingTokens
  nameWithType: SecurityMessageProperty.IncomingSupportingTokens
  fullName: System.ServiceModel.Security.SecurityMessageProperty.IncomingSupportingTokens
- uid: System.Collections.ObjectModel.Collection{System.ServiceModel.Security.SupportingTokenSpecification}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<SupportingTokenSpecification>
  nameWithType: Collection<SupportingTokenSpecification>
  fullName: System.Collections.ObjectModel.Collection<System.ServiceModel.Security.SupportingTokenSpecification>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.ServiceModel.Security.SupportingTokenSpecification>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Security.SupportingTokenSpecification
    name: SupportingTokenSpecification
    nameWithType: SupportingTokenSpecification
    fullName: SupportingTokenSpecification
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Security.SecurityMessageProperty.InitiatorToken
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: InitiatorToken
  nameWithType: SecurityMessageProperty.InitiatorToken
  fullName: System.ServiceModel.Security.SecurityMessageProperty.InitiatorToken
- uid: System.ServiceModel.Security.SecurityTokenSpecification
  parent: System.ServiceModel.Security
  isExternal: false
  name: SecurityTokenSpecification
  nameWithType: SecurityTokenSpecification
  fullName: System.ServiceModel.Security.SecurityTokenSpecification
- uid: System.ServiceModel.Security.SecurityMessageProperty.OutgoingSupportingTokens
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: OutgoingSupportingTokens
  nameWithType: SecurityMessageProperty.OutgoingSupportingTokens
  fullName: System.ServiceModel.Security.SecurityMessageProperty.OutgoingSupportingTokens
- uid: System.ServiceModel.Security.SecurityMessageProperty.ProtectionToken
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: ProtectionToken
  nameWithType: SecurityMessageProperty.ProtectionToken
  fullName: System.ServiceModel.Security.SecurityMessageProperty.ProtectionToken
- uid: System.ServiceModel.Security.SecurityMessageProperty.RecipientToken
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: RecipientToken
  nameWithType: SecurityMessageProperty.RecipientToken
  fullName: System.ServiceModel.Security.SecurityMessageProperty.RecipientToken
- uid: System.ServiceModel.Security.SecurityMessageProperty.SenderIdPrefix
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: SenderIdPrefix
  nameWithType: SecurityMessageProperty.SenderIdPrefix
  fullName: System.ServiceModel.Security.SecurityMessageProperty.SenderIdPrefix
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Security.SecurityMessageProperty.ServiceSecurityContext
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: ServiceSecurityContext
  nameWithType: SecurityMessageProperty.ServiceSecurityContext
  fullName: System.ServiceModel.Security.SecurityMessageProperty.ServiceSecurityContext
- uid: System.ServiceModel.ServiceSecurityContext
  parent: System.ServiceModel
  isExternal: false
  name: ServiceSecurityContext
  nameWithType: ServiceSecurityContext
  fullName: System.ServiceModel.ServiceSecurityContext
- uid: System.ServiceModel.Security.SecurityMessageProperty.TransportToken
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: TransportToken
  nameWithType: SecurityMessageProperty.TransportToken
  fullName: System.ServiceModel.Security.SecurityMessageProperty.TransportToken
- uid: System.ServiceModel.Security.SecurityMessageProperty.#ctor*
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: SecurityMessageProperty
  nameWithType: SecurityMessageProperty.SecurityMessageProperty
- uid: System.ServiceModel.Security.SecurityMessageProperty.CreateCopy*
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: CreateCopy
  nameWithType: SecurityMessageProperty.CreateCopy
- uid: System.ServiceModel.Security.SecurityMessageProperty.Dispose*
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: Dispose
  nameWithType: SecurityMessageProperty.Dispose
- uid: System.ServiceModel.Security.SecurityMessageProperty.ExternalAuthorizationPolicies*
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: ExternalAuthorizationPolicies
  nameWithType: SecurityMessageProperty.ExternalAuthorizationPolicies
- uid: System.ServiceModel.Security.SecurityMessageProperty.GetOrCreate*
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: GetOrCreate
  nameWithType: SecurityMessageProperty.GetOrCreate
- uid: System.ServiceModel.Security.SecurityMessageProperty.HasIncomingSupportingTokens*
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: HasIncomingSupportingTokens
  nameWithType: SecurityMessageProperty.HasIncomingSupportingTokens
- uid: System.ServiceModel.Security.SecurityMessageProperty.IncomingSupportingTokens*
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: IncomingSupportingTokens
  nameWithType: SecurityMessageProperty.IncomingSupportingTokens
- uid: System.ServiceModel.Security.SecurityMessageProperty.InitiatorToken*
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: InitiatorToken
  nameWithType: SecurityMessageProperty.InitiatorToken
- uid: System.ServiceModel.Security.SecurityMessageProperty.OutgoingSupportingTokens*
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: OutgoingSupportingTokens
  nameWithType: SecurityMessageProperty.OutgoingSupportingTokens
- uid: System.ServiceModel.Security.SecurityMessageProperty.ProtectionToken*
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: ProtectionToken
  nameWithType: SecurityMessageProperty.ProtectionToken
- uid: System.ServiceModel.Security.SecurityMessageProperty.RecipientToken*
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: RecipientToken
  nameWithType: SecurityMessageProperty.RecipientToken
- uid: System.ServiceModel.Security.SecurityMessageProperty.SenderIdPrefix*
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: SenderIdPrefix
  nameWithType: SecurityMessageProperty.SenderIdPrefix
- uid: System.ServiceModel.Security.SecurityMessageProperty.ServiceSecurityContext*
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: ServiceSecurityContext
  nameWithType: SecurityMessageProperty.ServiceSecurityContext
- uid: System.ServiceModel.Security.SecurityMessageProperty.TransportToken*
  parent: System.ServiceModel.Security.SecurityMessageProperty
  isExternal: false
  name: TransportToken
  nameWithType: SecurityMessageProperty.TransportToken
