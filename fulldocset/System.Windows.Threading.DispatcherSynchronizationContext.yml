### YamlMime:ManagedReference
items:
- uid: System.Windows.Threading.DispatcherSynchronizationContext
  id: DispatcherSynchronizationContext
  children:
  - System.Windows.Threading.DispatcherSynchronizationContext.#ctor
  - System.Windows.Threading.DispatcherSynchronizationContext.#ctor(System.Windows.Threading.Dispatcher)
  - System.Windows.Threading.DispatcherSynchronizationContext.#ctor(System.Windows.Threading.Dispatcher,System.Windows.Threading.DispatcherPriority)
  - System.Windows.Threading.DispatcherSynchronizationContext.CreateCopy
  - System.Windows.Threading.DispatcherSynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)
  - System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)
  - System.Windows.Threading.DispatcherSynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)
  langs:
  - csharp
  name: DispatcherSynchronizationContext
  nameWithType: DispatcherSynchronizationContext
  fullName: System.Windows.Threading.DispatcherSynchronizationContext
  type: Class
  summary: "Fornece um contexto de sincronização para [!INCLUDE[TLA#tla_wpf](~/add/includes/tlasharptla-wpf-md.md)]."
  remarks: "Se um <xref:System.Windows.Threading.Dispatcher>não for especificado, a criação da instância DispatcherSynchronizationContext atual <xref:System.Windows.Threading.Dispatcher>está associado a DispatcherSynchronizationContext.</xref:System.Windows.Threading.Dispatcher> </xref:System.Windows.Threading.Dispatcher>      <a name=&quot;xamlTextUsage_DispatcherSynchronizationContext&quot;></a># # Utilização de texto XAML"
  syntax:
    content: 'public sealed class DispatcherSynchronizationContext : System.Threading.SynchronizationContext'
  inheritance:
  - System.Threading.SynchronizationContext
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherSynchronizationContext.#ctor
  id: '#ctor'
  parent: System.Windows.Threading.DispatcherSynchronizationContext
  langs:
  - csharp
  name: DispatcherSynchronizationContext()
  nameWithType: DispatcherSynchronizationContext.DispatcherSynchronizationContext()
  fullName: System.Windows.Threading.DispatcherSynchronizationContext.DispatcherSynchronizationContext()
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.Threading.DispatcherSynchronizationContext&quot;> </xref> classe utilizando atual <xref href=&quot;System.Windows.Threading.Dispatcher&quot;> </xref>."
  syntax:
    content: public DispatcherSynchronizationContext ();
    parameters: []
  overload: System.Windows.Threading.DispatcherSynchronizationContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherSynchronizationContext.#ctor(System.Windows.Threading.Dispatcher)
  id: '#ctor(System.Windows.Threading.Dispatcher)'
  parent: System.Windows.Threading.DispatcherSynchronizationContext
  langs:
  - csharp
  name: DispatcherSynchronizationContext(Dispatcher)
  nameWithType: DispatcherSynchronizationContext.DispatcherSynchronizationContext(Dispatcher)
  fullName: System.Windows.Threading.DispatcherSynchronizationContext.DispatcherSynchronizationContext(Dispatcher)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.Threading.DispatcherSynchronizationContext&quot;> </xref> classe utilizando especificado <xref href=&quot;System.Windows.Threading.Dispatcher&quot;> </xref>."
  syntax:
    content: public DispatcherSynchronizationContext (System.Windows.Threading.Dispatcher dispatcher);
    parameters:
    - id: dispatcher
      type: System.Windows.Threading.Dispatcher
      description: "O <xref href=&quot;System.Windows.Threading.Dispatcher&quot;> </xref> para associar esta <xref href=&quot;System.Windows.Threading.DispatcherSynchronizationContext&quot;> </xref> com."
  overload: System.Windows.Threading.DispatcherSynchronizationContext.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>dispatcher</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherSynchronizationContext.#ctor(System.Windows.Threading.Dispatcher,System.Windows.Threading.DispatcherPriority)
  id: '#ctor(System.Windows.Threading.Dispatcher,System.Windows.Threading.DispatcherPriority)'
  parent: System.Windows.Threading.DispatcherSynchronizationContext
  langs:
  - csharp
  name: DispatcherSynchronizationContext(Dispatcher,DispatcherPriority)
  nameWithType: DispatcherSynchronizationContext.DispatcherSynchronizationContext(Dispatcher,DispatcherPriority)
  fullName: System.Windows.Threading.DispatcherSynchronizationContext.DispatcherSynchronizationContext(Dispatcher,DispatcherPriority)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.Threading.DispatcherSynchronizationContext&quot;> </xref> classe utilizando especificado <xref href=&quot;System.Windows.Threading.Dispatcher&quot;> </xref>."
  syntax:
    content: public DispatcherSynchronizationContext (System.Windows.Threading.Dispatcher dispatcher, System.Windows.Threading.DispatcherPriority priority);
    parameters:
    - id: dispatcher
      type: System.Windows.Threading.Dispatcher
      description: "O <xref href=&quot;System.Windows.Threading.Dispatcher&quot;> </xref> para associar esta <xref href=&quot;System.Windows.Threading.DispatcherSynchronizationContext&quot;> </xref> com."
    - id: priority
      type: System.Windows.Threading.DispatcherPriority
      description: "A prioridade utilizada para enviar e publique os métodos de chamada de retorno."
  overload: System.Windows.Threading.DispatcherSynchronizationContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherSynchronizationContext.CreateCopy
  id: CreateCopy
  parent: System.Windows.Threading.DispatcherSynchronizationContext
  langs:
  - csharp
  name: CreateCopy()
  nameWithType: DispatcherSynchronizationContext.CreateCopy()
  fullName: System.Windows.Threading.DispatcherSynchronizationContext.CreateCopy()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "Cria uma cópia deste <xref href=&quot;System.Windows.Threading.DispatcherSynchronizationContext&quot;> </xref>."
  syntax:
    content: public override System.Threading.SynchronizationContext CreateCopy ();
    parameters: []
    return:
      type: System.Threading.SynchronizationContext
      description: "A cópia neste contexto de sincronização."
  overload: System.Windows.Threading.DispatcherSynchronizationContext.CreateCopy*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherSynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)
  id: Post(System.Threading.SendOrPostCallback,System.Object)
  parent: System.Windows.Threading.DispatcherSynchronizationContext
  langs:
  - csharp
  name: Post(SendOrPostCallback,Object)
  nameWithType: DispatcherSynchronizationContext.Post(SendOrPostCallback,Object)
  fullName: System.Windows.Threading.DispatcherSynchronizationContext.Post(SendOrPostCallback,Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "Invoca a chamada de retorno no contexto de sincronização no modo assíncrono."
  remarks: "O delegado é colocado na fila de emissor de uma prioridade de <xref:System.Windows.Threading.DispatcherPriority>.</xref:System.Windows.Threading.DispatcherPriority>       Post inicia um pedido assíncrono para publicar uma mensagem."
  syntax:
    content: public override void Post (System.Threading.SendOrPostCallback d, object state);
    parameters:
    - id: d
      type: System.Threading.SendOrPostCallback
      description: "O delegado para chamar."
    - id: state
      type: System.Object
      description: "O objecto transmitido para o delegado."
  overload: System.Windows.Threading.DispatcherSynchronizationContext.Post*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>d</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)
  id: Send(System.Threading.SendOrPostCallback,System.Object)
  parent: System.Windows.Threading.DispatcherSynchronizationContext
  langs:
  - csharp
  name: Send(SendOrPostCallback,Object)
  nameWithType: DispatcherSynchronizationContext.Send(SendOrPostCallback,Object)
  fullName: System.Windows.Threading.DispatcherSynchronizationContext.Send(SendOrPostCallback,Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "Invoca a chamada de retorno no contexto de sincronização de forma síncrona."
  remarks: "O delegado é colocado na fila de emissor de uma prioridade de <xref:System.Windows.Threading.DispatcherPriority>.</xref:System.Windows.Threading.DispatcherPriority>"
  syntax:
    content: public override void Send (System.Threading.SendOrPostCallback d, object state);
    parameters:
    - id: d
      type: System.Threading.SendOrPostCallback
      description: "O delegado para chamar."
    - id: state
      type: System.Object
      description: "O objecto transmitido para o delegado."
  overload: System.Windows.Threading.DispatcherSynchronizationContext.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>d</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherSynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)
  id: Wait(System.IntPtr[],System.Boolean,System.Int32)
  parent: System.Windows.Threading.DispatcherSynchronizationContext
  langs:
  - csharp
  name: Wait(IntPtr[],Boolean,Int32)
  nameWithType: DispatcherSynchronizationContext.Wait(IntPtr[],Boolean,Int32)
  fullName: System.Windows.Threading.DispatcherSynchronizationContext.Wait(IntPtr[],Boolean,Int32)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "Aguarda para qualquer ou todos os elementos na matriz especificada para receber um sinal."
  syntax:
    content: public override int Wait (IntPtr[] waitHandles, bool waitAll, int millisecondsTimeout);
    parameters:
    - id: waitHandles
      type: System.IntPtr[]
      description: "Processa uma matriz que contém o sistema operativo nativo."
    - id: waitAll
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>a aguardar para todos os identificadores; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> deve aguardar para que qualquer identificador."
    - id: millisecondsTimeout
      type: System.Int32
      description: "O número de milissegundos a aguardar, ou <xref:System.Threading.Timeout.Infinite>(-1) a aguardar indefinidamente.</xref:System.Threading.Timeout.Infinite>"
    return:
      type: System.Int32
      description: "O índice de matriz do objeto que satisfeitos a espera."
  overload: System.Windows.Threading.DispatcherSynchronizationContext.Wait*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Threading.SynchronizationContext
  isExternal: false
  name: System.Threading.SynchronizationContext
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.Threading.DispatcherSynchronizationContext.#ctor
  parent: System.Windows.Threading.DispatcherSynchronizationContext
  isExternal: false
  name: DispatcherSynchronizationContext()
  nameWithType: DispatcherSynchronizationContext.DispatcherSynchronizationContext()
  fullName: System.Windows.Threading.DispatcherSynchronizationContext.DispatcherSynchronizationContext()
- uid: System.Windows.Threading.DispatcherSynchronizationContext.#ctor(System.Windows.Threading.Dispatcher)
  parent: System.Windows.Threading.DispatcherSynchronizationContext
  isExternal: false
  name: DispatcherSynchronizationContext(Dispatcher)
  nameWithType: DispatcherSynchronizationContext.DispatcherSynchronizationContext(Dispatcher)
  fullName: System.Windows.Threading.DispatcherSynchronizationContext.DispatcherSynchronizationContext(Dispatcher)
- uid: System.Windows.Threading.Dispatcher
  parent: System.Windows.Threading
  isExternal: false
  name: Dispatcher
  nameWithType: Dispatcher
  fullName: System.Windows.Threading.Dispatcher
- uid: System.Windows.Threading.DispatcherSynchronizationContext.#ctor(System.Windows.Threading.Dispatcher,System.Windows.Threading.DispatcherPriority)
  parent: System.Windows.Threading.DispatcherSynchronizationContext
  isExternal: false
  name: DispatcherSynchronizationContext(Dispatcher,DispatcherPriority)
  nameWithType: DispatcherSynchronizationContext.DispatcherSynchronizationContext(Dispatcher,DispatcherPriority)
  fullName: System.Windows.Threading.DispatcherSynchronizationContext.DispatcherSynchronizationContext(Dispatcher,DispatcherPriority)
- uid: System.Windows.Threading.DispatcherPriority
  parent: System.Windows.Threading
  isExternal: false
  name: DispatcherPriority
  nameWithType: DispatcherPriority
  fullName: System.Windows.Threading.DispatcherPriority
- uid: System.Windows.Threading.DispatcherSynchronizationContext.CreateCopy
  parent: System.Windows.Threading.DispatcherSynchronizationContext
  isExternal: false
  name: CreateCopy()
  nameWithType: DispatcherSynchronizationContext.CreateCopy()
  fullName: System.Windows.Threading.DispatcherSynchronizationContext.CreateCopy()
- uid: System.Windows.Threading.DispatcherSynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)
  parent: System.Windows.Threading.DispatcherSynchronizationContext
  isExternal: false
  name: Post(SendOrPostCallback,Object)
  nameWithType: DispatcherSynchronizationContext.Post(SendOrPostCallback,Object)
  fullName: System.Windows.Threading.DispatcherSynchronizationContext.Post(SendOrPostCallback,Object)
- uid: System.Threading.SendOrPostCallback
  parent: System.Threading
  isExternal: true
  name: SendOrPostCallback
  nameWithType: SendOrPostCallback
  fullName: System.Threading.SendOrPostCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Threading.DispatcherSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)
  parent: System.Windows.Threading.DispatcherSynchronizationContext
  isExternal: false
  name: Send(SendOrPostCallback,Object)
  nameWithType: DispatcherSynchronizationContext.Send(SendOrPostCallback,Object)
  fullName: System.Windows.Threading.DispatcherSynchronizationContext.Send(SendOrPostCallback,Object)
- uid: System.Windows.Threading.DispatcherSynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)
  parent: System.Windows.Threading.DispatcherSynchronizationContext
  isExternal: false
  name: Wait(IntPtr[],Boolean,Int32)
  nameWithType: DispatcherSynchronizationContext.Wait(IntPtr[],Boolean,Int32)
  fullName: System.Windows.Threading.DispatcherSynchronizationContext.Wait(IntPtr[],Boolean,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IntPtr[]
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr[]
  spec.csharp:
  - uid: System.IntPtr
    name: IntPtr
    nameWithType: IntPtr
    fullName: IntPtr[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Threading.DispatcherSynchronizationContext.#ctor*
  parent: System.Windows.Threading.DispatcherSynchronizationContext
  isExternal: false
  name: DispatcherSynchronizationContext
  nameWithType: DispatcherSynchronizationContext.DispatcherSynchronizationContext
- uid: System.Windows.Threading.DispatcherSynchronizationContext.CreateCopy*
  parent: System.Windows.Threading.DispatcherSynchronizationContext
  isExternal: false
  name: CreateCopy
  nameWithType: DispatcherSynchronizationContext.CreateCopy
- uid: System.Windows.Threading.DispatcherSynchronizationContext.Post*
  parent: System.Windows.Threading.DispatcherSynchronizationContext
  isExternal: false
  name: Post
  nameWithType: DispatcherSynchronizationContext.Post
- uid: System.Windows.Threading.DispatcherSynchronizationContext.Send*
  parent: System.Windows.Threading.DispatcherSynchronizationContext
  isExternal: false
  name: Send
  nameWithType: DispatcherSynchronizationContext.Send
- uid: System.Windows.Threading.DispatcherSynchronizationContext.Wait*
  parent: System.Windows.Threading.DispatcherSynchronizationContext
  isExternal: false
  name: Wait
  nameWithType: DispatcherSynchronizationContext.Wait
