### YamlMime:ManagedReference
items:
- uid: System.Windows.Automation.InvokePattern
  id: InvokePattern
  children:
  - System.Windows.Automation.InvokePattern.Invoke
  - System.Windows.Automation.InvokePattern.InvokedEvent
  - System.Windows.Automation.InvokePattern.Pattern
  langs:
  - csharp
  name: InvokePattern
  nameWithType: InvokePattern
  fullName: System.Windows.Automation.InvokePattern
  type: Class
  summary: "Representa os controlos de iniciar ou executar uma ação única, inequívoca e não a manter o estado quando ativado."
  remarks: "Controlos suportam InvokePattern se o mesmo comportamento não está exposto através de outro padrão de controlo. Por exemplo, se o <xref:System.Windows.Automation.InvokePattern.Invoke%2A>método num controlo efetua a mesma ação como o <xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A>ou <xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A>método, o controlo não suporta InvokePattern.</xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A> </xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A> </xref:System.Windows.Automation.InvokePattern.Invoke%2A>       [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]os elementos que representam os controlos, tais como as caixas de verificação e botões de opção, a manter o estado de, em vez disso, suportam <xref:System.Windows.Automation.TogglePattern>ou <xref:System.Windows.Automation.SelectionItemPattern>.</xref:System.Windows.Automation.SelectionItemPattern> </xref:System.Windows.Automation.TogglePattern>"
  syntax:
    content: 'public class InvokePattern : System.Windows.Automation.BasePattern'
  inheritance:
  - System.Object
  - System.Windows.Automation.BasePattern
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Automation.InvokePattern.Invoke
  id: Invoke
  parent: System.Windows.Automation.InvokePattern
  langs:
  - csharp
  name: Invoke()
  nameWithType: InvokePattern.Invoke()
  fullName: System.Windows.Automation.InvokePattern.Invoke()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "Envia um pedido para ativar um controlo e iniciar a ação única, inequívoca."
  remarks: "As chamadas a Invoke devem ser devolvido imediatamente sem bloquear. No entanto, este comportamento é inteiramente depende o [!INCLUDE[TLA#tla_uiautomation](~/add/includes/tlasharptla-uiautomation-md.md)] implementação do fornecedor. Em cenários onde chamar Invoke faz com que um problema de bloqueio (como uma caixa de diálogo modal) um separado do programa auxiliar de thread poderá ser necessário para chamar o método."
  example:
  - "In the following example an <xref:System.Windows.Automation.InvokePattern>control pattern is obtained from a control and the Invoke method is called.  \n  \n [!code-cs[UIAInvokePattern_snip#101](~/add/codesnippet/csharp/UIAInvokePattern_snip/UIAInvokePattern_snippets.cs#101)]\n [!code-vb[UIAInvokePattern_snip#101](~/add/codesnippet/visualbasic/UIAInvokePattern_snip/UIAInvokePattern_snippets.vb#101)]"
  syntax:
    content: public void Invoke ();
    parameters: []
  overload: System.Windows.Automation.InvokePattern.Invoke*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O elemento não suporta o <xref href=&quot;System.Windows.Automation.InvokePattern&quot;> </xref> controlar padrão está oculto ou bloqueado."
  - type: System.Windows.Automation.ElementNotEnabledException
    commentId: T:System.Windows.Automation.ElementNotEnabledException
    description: "O elemento não está ativado. Pode ser gerado quando um fornecedor de automatização de IU tiver implementado a sua própria processamento do <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled*>propriedade.</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled*>"
  platform:
  - net462
- uid: System.Windows.Automation.InvokePattern.InvokedEvent
  id: InvokedEvent
  parent: System.Windows.Automation.InvokePattern
  langs:
  - csharp
  name: InvokedEvent
  nameWithType: InvokePattern.InvokedEvent
  fullName: System.Windows.Automation.InvokePattern.InvokedEvent
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "Identifica o evento é desencadeado quando um controlo é invocado ou ativado."
  remarks: "Este identificador é utilizado por aplicações de cliente de automatização de IU. Fornecedores de automatização de IU devem utilizar o campo equivalente na <xref:System.Windows.Automation.InvokePatternIdentifiers>.</xref:System.Windows.Automation.InvokePatternIdentifiers>       O identificador de InvokedEvent é transmitido como um parâmetro para <xref:System.Windows.Automation.Automation.AddAutomationEventHandler%2A>.</xref:System.Windows.Automation.Automation.AddAutomationEventHandler%2A>"
  example:
  - "In the following example, the event handler identifies the event as an Invoked event by comparing the <xref:System.Windows.Automation.AutomationEventArgs.EventId%2A> in the event arguments with the InvokedEvent identifier field.  \n  \n [!code-vb[UIAClient_snip#101](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#101)]\n [!code-cs[UIAClient_snip#101](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#101)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationEvent InvokedEvent;
    return:
      type: System.Windows.Automation.AutomationEvent
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.InvokePattern.Pattern
  id: Pattern
  parent: System.Windows.Automation.InvokePattern
  langs:
  - csharp
  name: Pattern
  nameWithType: InvokePattern.Pattern
  fullName: System.Windows.Automation.InvokePattern.Pattern
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "Identifica o <xref href=&quot;System.Windows.Automation.InvokePattern&quot;> </xref> padrão de controlo."
  remarks: "Este identificador é utilizado por aplicações de cliente de automatização de IU. Fornecedores de automatização de IU devem utilizar o campo equivalente na <xref:System.Windows.Automation.InvokePatternIdentifiers>.</xref:System.Windows.Automation.InvokePatternIdentifiers>       O identificador de padrão é transmitido para métodos de como <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>obter o padrão de controlo de interesse do <xref:System.Windows.Automation.AutomationElement>.</xref:System.Windows.Automation.AutomationElement> especificado</xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>"
  example:
  - "In the following example an <xref:System.Windows.Automation.InvokePattern> control pattern is obtained from a control and the <xref:System.Windows.Automation.InvokePattern.Invoke%2A> method is called.  \n  \n [!code-cs[UIAInvokePattern_snip#101](~/add/codesnippet/csharp/UIAInvokePattern_snip/UIAInvokePattern_snippets.cs#101)]\n [!code-vb[UIAInvokePattern_snip#101](~/add/codesnippet/visualbasic/UIAInvokePattern_snip/UIAInvokePattern_snippets.vb#101)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationPattern Pattern;
    return:
      type: System.Windows.Automation.AutomationPattern
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Automation.BasePattern
  isExternal: false
  name: System.Windows.Automation.BasePattern
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Automation.ElementNotEnabledException
  parent: System.Windows.Automation
  isExternal: false
  name: ElementNotEnabledException
  nameWithType: ElementNotEnabledException
  fullName: System.Windows.Automation.ElementNotEnabledException
- uid: System.Windows.Automation.InvokePattern.Invoke
  parent: System.Windows.Automation.InvokePattern
  isExternal: false
  name: Invoke()
  nameWithType: InvokePattern.Invoke()
  fullName: System.Windows.Automation.InvokePattern.Invoke()
- uid: System.Windows.Automation.InvokePattern.InvokedEvent
  parent: System.Windows.Automation.InvokePattern
  isExternal: false
  name: InvokedEvent
  nameWithType: InvokePattern.InvokedEvent
  fullName: System.Windows.Automation.InvokePattern.InvokedEvent
- uid: System.Windows.Automation.AutomationEvent
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationEvent
  nameWithType: AutomationEvent
  fullName: System.Windows.Automation.AutomationEvent
- uid: System.Windows.Automation.InvokePattern.Pattern
  parent: System.Windows.Automation.InvokePattern
  isExternal: false
  name: Pattern
  nameWithType: InvokePattern.Pattern
  fullName: System.Windows.Automation.InvokePattern.Pattern
- uid: System.Windows.Automation.AutomationPattern
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationPattern
  nameWithType: AutomationPattern
  fullName: System.Windows.Automation.AutomationPattern
- uid: System.Windows.Automation.InvokePattern.Invoke*
  parent: System.Windows.Automation.InvokePattern
  isExternal: false
  name: Invoke
  nameWithType: InvokePattern.Invoke
