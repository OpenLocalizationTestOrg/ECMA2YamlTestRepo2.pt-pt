### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.TextRenderer
  id: TextRenderer
  children:
  - System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color)
  - System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color)
  - System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color)
  - System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)
  - System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)
  - System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)
  - System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)
  - System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)
  - System.Windows.Forms.TextRenderer.MeasureText(System.String,System.Drawing.Font)
  - System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font)
  - System.Windows.Forms.TextRenderer.MeasureText(System.String,System.Drawing.Font,System.Drawing.Size)
  - System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size)
  - System.Windows.Forms.TextRenderer.MeasureText(System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)
  - System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)
  langs:
  - csharp
  name: TextRenderer
  nameWithType: TextRenderer
  fullName: System.Windows.Forms.TextRenderer
  type: Class
  summary: "Provides methods used to measure and render text. This class cannot be inherited."
  remarks: "The TextRenderer class provides a set of `static` methods that can be used for measuring and drawing text on a Windows Form control.       You can manipulate how the text is drawn by using one of the <xref:System.Windows.Forms.TextRenderer.DrawText%2A> overloads that takes a <xref:System.Windows.Forms.TextFormatFlags> parameter. For example, the default behavior of the TextRenderer is to add padding to the bounding rectangle of the drawn text to accommodate overhanging glyphs. If you need to draw a line of text without these extra spaces you should use the versions of <xref:System.Windows.Forms.TextRenderer.DrawText%2A> and <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> that take a <xref:System.Drawing.Size> and <xref:System.Windows.Forms.TextFormatFlags> parameter. For an example, see <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>.      > [!NOTE] >  The <xref:System.Windows.Forms.TextRenderer.DrawText%2A> methods of TextRenderer are not supported for printing. You should always use the <xref:System.Drawing.Graphics.DrawString%2A> methods of the <xref:System.Drawing.Graphics> class."
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.TextRenderer.DrawText%2A> method. To run this example, paste the code into a Windows Form and call `RenderText1` from the form's <xref:System.Windows.Forms.Control.Paint> event handler, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-vb[System.Windows.Forms.TextRendererExamples#2](~/add/codesnippet/visualbasic/t-system.windows.forms.t_11_1.vb)]\n [!code-cs[System.Windows.Forms.TextRendererExamples#2](~/add/codesnippet/csharp/t-system.windows.forms.t_11_1.cs)]"
  syntax:
    content: public sealed class TextRenderer
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color)
  id: DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color)
  parent: System.Windows.Forms.TextRenderer
  langs:
  - csharp
  name: DrawText(IDeviceContext,String,Font,Point,Color)
  nameWithType: TextRenderer.DrawText(IDeviceContext,String,Font,Point,Color)
  fullName: System.Windows.Forms.TextRenderer.DrawText(IDeviceContext,String,Font,Point,Color)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws the specified text at the specified location using the specified device context, font, and color."
  remarks: "You can manipulate how the text is drawn by using one of the <xref:System.Windows.Forms.TextRenderer.DrawText%2A> overloads that takes a <xref:System.Windows.Forms.TextFormatFlags> parameter.       If `font` is `null` or `forecolor` is <xref:System.Drawing.Color.Empty?displayProperty=fullName>, the DrawText method will draw the text in the font or color currently selected in the device context specified by `dc`. If `forecolor` is <xref:System.Drawing.Color.Transparent%2A>, the text will not be drawn.       The text rendering offered by the <xref:System.Windows.Forms.TextRenderer> class is based on GDI text rendering and is not supported for printing from Windows Forms. Instead, use the <xref:System.Drawing.Graphics.DrawString%2A> methods of the <xref:System.Drawing.Graphics> class.      > [!NOTE] >  The <xref:System.Windows.Forms.TextRenderer.DrawText%2A> methods that specify a <xref:System.Drawing.Point> as the upper-left corner of the drawn text do not render correctly on Windows 2000. If your application is intended for use on machines running Windows 2000, you should use one of the <xref:System.Windows.Forms.TextRenderer.DrawText%2A> methods that specify a <xref:System.Drawing.Rectangle> for the bounds of the drawn text."
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.TextRenderer.DrawText%2A> method. To run this example, paste the code into a Windows Form and call `RenderText1` from the form's <xref:System.Windows.Forms.Control.Paint> event handler, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-vb[System.Windows.Forms.TextRendererExamples#2](~/add/codesnippet/visualbasic/88cd1b3f-5cda-4431-ab43-_1.vb)]\n [!code-cs[System.Windows.Forms.TextRendererExamples#2](~/add/codesnippet/csharp/88cd1b3f-5cda-4431-ab43-_1.cs)]"
  syntax:
    content: public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Point pt, System.Drawing.Color foreColor);
    parameters:
    - id: dc
      type: System.Drawing.IDeviceContext
      description: "The device context in which to draw the text."
    - id: text
      type: System.String
      description: "The text to draw."
    - id: font
      type: System.Drawing.Font
      description: "The <xref href=&quot;System.Drawing.Font&quot;></xref> to apply to the drawn text."
    - id: pt
      type: System.Drawing.Point
      description: "The <xref href=&quot;System.Drawing.Point&quot;></xref> that represents the upper-left corner of the drawn text."
    - id: foreColor
      type: System.Drawing.Color
      description: "The <xref href=&quot;System.Drawing.Color&quot;></xref> to apply to the drawn text."
  overload: System.Windows.Forms.TextRenderer.DrawText*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>dc</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color)
  id: DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color)
  parent: System.Windows.Forms.TextRenderer
  langs:
  - csharp
  name: DrawText(IDeviceContext,String,Font,Rectangle,Color)
  nameWithType: TextRenderer.DrawText(IDeviceContext,String,Font,Rectangle,Color)
  fullName: System.Windows.Forms.TextRenderer.DrawText(IDeviceContext,String,Font,Rectangle,Color)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws the specified text within the specified bounds, using the specified device context, font, and color."
  remarks: "If `font` or `forecolor` is `null` or <xref:System.Drawing.Color?displayProperty=fullName>, respectively; the <xref:System.Windows.Forms.TextRenderer.DrawText%2A> method will draw the text in the font or color currently selected in the device context specified by `dc`. If `forecolor` is <xref:System.Drawing.Color.Transparent%2A>, the text will not be drawn.       This method will result in text that is horizontally and vertically centered in the rectangle specified by the `bounds` parameter. To change how the text is drawn, use a version of <xref:System.Windows.Forms.TextRenderer.DrawText%2A> that takes a <xref:System.Windows.Forms.TextFormatFlags> parameter type.       The text rendering offered by the <xref:System.Windows.Forms.TextRenderer> class is based on GDI text rendering and is not supported for printing from Windows Forms. Instead, use the <xref:System.Drawing.Graphics.DrawString%2A> methods of the <xref:System.Drawing.Graphics> class."
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.TextRenderer.DrawText%2A> method. To run this example, paste the code into a Windows Form and call `RenderText2` from the form's <xref:System.Windows.Forms.Control.Paint> event handler, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-vb[System.Windows.Forms.TextRendererExamples#3](~/add/codesnippet/visualbasic/b7b8d0c2-d636-45ff-91ca-_1.vb)]\n [!code-cs[System.Windows.Forms.TextRendererExamples#3](~/add/codesnippet/csharp/b7b8d0c2-d636-45ff-91ca-_1.cs)]"
  syntax:
    content: public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Rectangle bounds, System.Drawing.Color foreColor);
    parameters:
    - id: dc
      type: System.Drawing.IDeviceContext
      description: "The device context in which to draw the text."
    - id: text
      type: System.String
      description: "The text to draw."
    - id: font
      type: System.Drawing.Font
      description: "The <xref href=&quot;System.Drawing.Font&quot;></xref> to apply to the drawn text."
    - id: bounds
      type: System.Drawing.Rectangle
      description: "The <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that represents the bounds of the text."
    - id: foreColor
      type: System.Drawing.Color
      description: "The <xref href=&quot;System.Drawing.Color&quot;></xref> to apply to the drawn text."
  overload: System.Windows.Forms.TextRenderer.DrawText*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>dc</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color)
  id: DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color)
  parent: System.Windows.Forms.TextRenderer
  langs:
  - csharp
  name: DrawText(IDeviceContext,String,Font,Point,Color,Color)
  nameWithType: TextRenderer.DrawText(IDeviceContext,String,Font,Point,Color,Color)
  fullName: System.Windows.Forms.TextRenderer.DrawText(IDeviceContext,String,Font,Point,Color,Color)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws the specified text at the specified location, using the specified device context, font, color, and back color."
  remarks: "The `backColor` parameter is applied to the rectangular area containing the drawn text. If `font`, `backcolor` or `forecolor` is `null` or <xref:System.Drawing.Color?displayProperty=fullName>, respectively; the <xref:System.Windows.Forms.TextRenderer.DrawText%2A> method will draw the text in the font or color currently selected in the device context specified by `dc`. If `forecolor` is <xref:System.Drawing.Color.Transparent%2A>, the text will not be drawn.       You can manipulate how the text is drawn by using one of the <xref:System.Windows.Forms.TextRenderer.DrawText%2A> overloads that takes a <xref:System.Windows.Forms.TextFormatFlags> parameter.       The text rendering offered by the <xref:System.Windows.Forms.TextRenderer> class is based on GDI text rendering and is not supported for printing from Windows Forms. Instead, use the <xref:System.Drawing.Graphics.DrawString%2A> methods of the <xref:System.Drawing.Graphics> class.      > [!NOTE] >  The <xref:System.Windows.Forms.TextRenderer.DrawText%2A> methods that specify a <xref:System.Drawing.Point> as the upper-left corner of the drawn text do not render correctly on Windows 2000. If your application is intended for use on machines running Windows 2000, you should use one of the <xref:System.Windows.Forms.TextRenderer.DrawText%2A> methods that specify a <xref:System.Drawing.Rectangle> for the bounds of the drawn text."
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.TextRenderer.DrawText%2A> method. To run this example, paste the code into a Windows Form and call `RenderText3` from the form's <xref:System.Windows.Forms.Control.Paint> event handler, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-vb[System.Windows.Forms.TextRendererExamples#4](~/add/codesnippet/visualbasic/d7caa1b3-abbf-4698-b4ae-_1.vb)]\n [!code-cs[System.Windows.Forms.TextRendererExamples#4](~/add/codesnippet/csharp/d7caa1b3-abbf-4698-b4ae-_1.cs)]"
  syntax:
    content: public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Point pt, System.Drawing.Color foreColor, System.Drawing.Color backColor);
    parameters:
    - id: dc
      type: System.Drawing.IDeviceContext
      description: "The device context in which to draw the text."
    - id: text
      type: System.String
      description: "The text to draw."
    - id: font
      type: System.Drawing.Font
      description: "The <xref href=&quot;System.Drawing.Font&quot;></xref> to apply to the drawn text."
    - id: pt
      type: System.Drawing.Point
      description: "The <xref href=&quot;System.Drawing.Point&quot;></xref> that represents the upper-left corner of the drawn text."
    - id: foreColor
      type: System.Drawing.Color
      description: "The <xref href=&quot;System.Drawing.Color&quot;></xref> to apply to the drawn text."
    - id: backColor
      type: System.Drawing.Color
      description: "The <xref href=&quot;System.Drawing.Color&quot;></xref> to apply to the background area of the drawn text."
  overload: System.Windows.Forms.TextRenderer.DrawText*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>dc</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)
  id: DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)
  parent: System.Windows.Forms.TextRenderer
  langs:
  - csharp
  name: DrawText(IDeviceContext,String,Font,Point,Color,TextFormatFlags)
  nameWithType: TextRenderer.DrawText(IDeviceContext,String,Font,Point,Color,TextFormatFlags)
  fullName: System.Windows.Forms.TextRenderer.DrawText(IDeviceContext,String,Font,Point,Color,TextFormatFlags)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws the specified text at the specified location using the specified device context, font, color, and formatting instructions."
  remarks: "You can manipulate how the text is drawn by using one of the <xref:System.Windows.Forms.TextRenderer.DrawText%2A> overloads that takes a <xref:System.Windows.Forms.TextFormatFlags> parameter. For example, the default behavior of the <xref:System.Windows.Forms.TextRenderer> is to add padding to the bounding rectangle of the drawn text to accommodate overhanging glyphs. If you need to draw a line of text without these extra spaces you should use the versions of <xref:System.Windows.Forms.TextRenderer.DrawText%2A> and <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> that take a <xref:System.Drawing.Size> and <xref:System.Windows.Forms.TextFormatFlags> parameter. For an example, see <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>.       The `backColor` parameter is applied to the area within the `bounds` parameter. If `font` or `forecolor` is `null` or <xref:System.Drawing.Color.Empty?displayProperty=fullName>, respectively; the <xref:System.Windows.Forms.TextRenderer.DrawText%2A> method will draw the text in the font or color currently selected in the device context specified by `dc`. If `forecolor` is <xref:System.Drawing.Color.Transparent%2A>, the text will not be drawn.       The text rendering offered by the <xref:System.Windows.Forms.TextRenderer> class is based on GDI text rendering and is not supported for printing from Windows Forms. Instead, use the <xref:System.Drawing.Graphics.DrawString%2A> methods of the <xref:System.Drawing.Graphics> class.       The <xref:System.Windows.Forms.TextRenderer> does not support adding tab stops to drawn text, although you can expand existing tab stops using the <xref:System.Windows.Forms.TextFormatFlags> flag.      > [!NOTE] >  The <xref:System.Windows.Forms.TextRenderer.DrawText%2A> methods that specify a <xref:System.Drawing.Point> as the upper-left corner of the drawn text do not render correctly on Windows 2000. If your application is intended for use on machines running Windows 2000, you should use one of the <xref:System.Windows.Forms.TextRenderer.DrawText%2A> methods that specify a <xref:System.Drawing.Rectangle> for the bounds of the drawn text."
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.TextRenderer.DrawText%2A> method. To run this example, paste the code into a Windows Form and call `RenderText5` from the form's <xref:System.Windows.Forms.Control.Paint> event handler, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-vb[System.Windows.Forms.TextRendererExamples#6](~/add/codesnippet/visualbasic/a0dbc35b-432c-4a16-b3fb-_1.vb)]\n [!code-cs[System.Windows.Forms.TextRendererExamples#6](~/add/codesnippet/csharp/a0dbc35b-432c-4a16-b3fb-_1.cs)]"
  syntax:
    content: public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Point pt, System.Drawing.Color foreColor, System.Windows.Forms.TextFormatFlags flags);
    parameters:
    - id: dc
      type: System.Drawing.IDeviceContext
      description: "The device context in which to draw the text."
    - id: text
      type: System.String
      description: "The text to draw."
    - id: font
      type: System.Drawing.Font
      description: "The <xref href=&quot;System.Drawing.Font&quot;></xref> to apply to the drawn text."
    - id: pt
      type: System.Drawing.Point
      description: "The <xref href=&quot;System.Drawing.Point&quot;></xref> that represents the upper-left corner of the drawn text."
    - id: foreColor
      type: System.Drawing.Color
      description: "The <xref href=&quot;System.Drawing.Color&quot;></xref> to apply to the drawn text."
    - id: flags
      type: System.Windows.Forms.TextFormatFlags
      description: "A bitwise combination of the <xref href=&quot;System.Windows.Forms.TextFormatFlags&quot;></xref> values."
  overload: System.Windows.Forms.TextRenderer.DrawText*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>dc</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)
  id: DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)
  parent: System.Windows.Forms.TextRenderer
  langs:
  - csharp
  name: DrawText(IDeviceContext,String,Font,Rectangle,Color,Color)
  nameWithType: TextRenderer.DrawText(IDeviceContext,String,Font,Rectangle,Color,Color)
  fullName: System.Windows.Forms.TextRenderer.DrawText(IDeviceContext,String,Font,Rectangle,Color,Color)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws the specified text within the specified bounds using the specified device context, font, color, and back color."
  remarks: "The `backColor` parameter is applied to the area within the `bounds` parameter. If `font`, `backcolor` or `forecolor` is `null` or <xref:System.Drawing.Color>, respectively; the <xref:System.Windows.Forms.TextRenderer.DrawText%2A> method will draw the text in the font or color currently selected in the device context specified by `dc`. If `forecolor` is <xref:System.Drawing.Color.Transparent%2A>, the text will not be drawn.       This method will result in text that is horizontally and vertically centered in the rectangle specified by the `bounds` parameter. To change how the text is drawn, use a version of <xref:System.Windows.Forms.TextRenderer.DrawText%2A> that takes a <xref:System.Windows.Forms.TextFormatFlags> parameter type.       The text rendering offered by the <xref:System.Windows.Forms.TextRenderer> class is based on GDI text rendering and is not supported for printing from Windows Forms. Instead, use the <xref:System.Drawing.Graphics.DrawString%2A> methods of the <xref:System.Drawing.Graphics> class."
  example:
  - "The following code example demonstrates how to use the DrawText method. To run this example, paste the code into a Windows Form and call `RenderText4` from the form's <xref:System.Windows.Forms.Control.Paint> event handler, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-vb[System.Windows.Forms.TextRendererExamples#5](~/add/codesnippet/visualbasic/5557904b-41f7-4b39-9afc-_1.vb)]\n [!code-cs[System.Windows.Forms.TextRendererExamples#5](~/add/codesnippet/csharp/5557904b-41f7-4b39-9afc-_1.cs)]"
  syntax:
    content: public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Rectangle bounds, System.Drawing.Color foreColor, System.Drawing.Color backColor);
    parameters:
    - id: dc
      type: System.Drawing.IDeviceContext
      description: "The device context in which to draw the text."
    - id: text
      type: System.String
      description: "The text to draw."
    - id: font
      type: System.Drawing.Font
      description: "The <xref href=&quot;System.Drawing.Font&quot;></xref> to apply to the drawn text."
    - id: bounds
      type: System.Drawing.Rectangle
      description: "The <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that represents the bounds of the text."
    - id: foreColor
      type: System.Drawing.Color
      description: "The <xref href=&quot;System.Drawing.Color&quot;></xref> to apply to the drawn text."
    - id: backColor
      type: System.Drawing.Color
      description: "The <xref href=&quot;System.Drawing.Color&quot;></xref> to apply to the area represented by `bounds`."
  overload: System.Windows.Forms.TextRenderer.DrawText*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>dc</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)
  id: DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)
  parent: System.Windows.Forms.TextRenderer
  langs:
  - csharp
  name: DrawText(IDeviceContext,String,Font,Rectangle,Color,TextFormatFlags)
  nameWithType: TextRenderer.DrawText(IDeviceContext,String,Font,Rectangle,Color,TextFormatFlags)
  fullName: System.Windows.Forms.TextRenderer.DrawText(IDeviceContext,String,Font,Rectangle,Color,TextFormatFlags)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws the specified text within the specified bounds using the specified device context, font, color, and formatting instructions."
  remarks: "If `font` or `color` is `null` or <xref:System.Drawing.Color.Empty>, respectively; the <xref:System.Windows.Forms.TextRenderer.DrawText%2A> method will draw the text in the font or color currently selected in the device context specified by `dc`. If `forecolor` is <xref:System.Drawing.Color.Transparent%2A>, the text will not be drawn.       You can manipulate how the text is drawn by using one of the DrawText overloads that takes a <xref:System.Windows.Forms.TextFormatFlags> parameter. For example, the default behavior of the <xref:System.Windows.Forms.TextRenderer> is to add padding to the bounding rectangle of the drawn text to accommodate overhanging glyphs. If you need to draw a line of text without these extra spaces you should use the versions of <xref:System.Windows.Forms.TextRenderer.DrawText%2A> and <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> that take a <xref:System.Drawing.Size> and <xref:System.Windows.Forms.TextFormatFlags> parameter. For an example, see <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>.       The text rendering offered by the <xref:System.Windows.Forms.TextRenderer> class is based on GDI text rendering and is not supported for printing from Windows Forms. Instead, use the <xref:System.Drawing.Graphics.DrawString%2A> methods of the <xref:System.Drawing.Graphics> class.       The <xref:System.Windows.Forms.TextRenderer> does not support adding tab stops to drawn text, although you can expand existing tab stops using the <xref:System.Windows.Forms.TextFormatFlags> flag."
  example:
  - "The following code example demonstrates how to use the DrawText method. To run this example, paste the code into a Windows Form and call `RenderText6` from the form's <xref:System.Windows.Forms.Control.Paint> event handler, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-vb[System.Windows.Forms.TextRendererExamples#7](~/add/codesnippet/visualbasic/264ec94d-4651-4e59-b65b-_1.vb)]\n [!code-cs[System.Windows.Forms.TextRendererExamples#7](~/add/codesnippet/csharp/264ec94d-4651-4e59-b65b-_1.cs)]"
  syntax:
    content: public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Rectangle bounds, System.Drawing.Color foreColor, System.Windows.Forms.TextFormatFlags flags);
    parameters:
    - id: dc
      type: System.Drawing.IDeviceContext
      description: "The device context in which to draw the text."
    - id: text
      type: System.String
      description: "The text to draw."
    - id: font
      type: System.Drawing.Font
      description: "The <xref href=&quot;System.Drawing.Font&quot;></xref> to apply to the drawn text."
    - id: bounds
      type: System.Drawing.Rectangle
      description: "The <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that represents the bounds of the text."
    - id: foreColor
      type: System.Drawing.Color
      description: "The <xref href=&quot;System.Drawing.Color&quot;></xref> to apply to the drawn text."
    - id: flags
      type: System.Windows.Forms.TextFormatFlags
      description: "A bitwise combination of the <xref href=&quot;System.Windows.Forms.TextFormatFlags&quot;></xref> values."
  overload: System.Windows.Forms.TextRenderer.DrawText*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>dc</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)
  id: DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)
  parent: System.Windows.Forms.TextRenderer
  langs:
  - csharp
  name: DrawText(IDeviceContext,String,Font,Point,Color,Color,TextFormatFlags)
  nameWithType: TextRenderer.DrawText(IDeviceContext,String,Font,Point,Color,Color,TextFormatFlags)
  fullName: System.Windows.Forms.TextRenderer.DrawText(IDeviceContext,String,Font,Point,Color,Color,TextFormatFlags)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws the specified text at the specified location using the specified device context, font, color, back color, and formatting instructions"
  remarks: "The `backcolor` parameter is applied the rectangular area containing the drawn text. If `font` or `forecolor` is `null` or <xref:System.Drawing.Color.Empty>, respectively; the <xref:System.Windows.Forms.TextRenderer.DrawText%2A> method will draw the text in the font or color currently selected in the device context specified by `dc`. If `forecolor` is <xref:System.Drawing.Color.Transparent%2A>, the text will not be drawn.       You can manipulate how the text is drawn by using one of the <xref:System.Windows.Forms.TextRenderer.DrawText%2A> overloads that takes a <xref:System.Windows.Forms.TextFormatFlags> parameter. For example, the default behavior of the <xref:System.Windows.Forms.TextRenderer> is to add padding to the bounding rectangle of the drawn text to accommodate overhanging glyphs. If you need to draw a line of text without these extra spaces you should use the versions of <xref:System.Windows.Forms.TextRenderer.DrawText%2A> and <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> that take a <xref:System.Drawing.Size> and <xref:System.Windows.Forms.TextFormatFlags> parameter. For an example, see <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>.       The text rendering offered by the <xref:System.Windows.Forms.TextRenderer> class is based on GDI text rendering and is not supported for printing from Windows Forms. Instead, use the <xref:System.Drawing.Graphics.DrawString%2A> methods of the <xref:System.Drawing.Graphics> class.       The <xref:System.Windows.Forms.TextRenderer> does not support adding tab stops to drawn text, although you can expand existing tab stops using the <xref:System.Windows.Forms.TextFormatFlags> flag.      > [!NOTE] >  The <xref:System.Windows.Forms.TextRenderer.DrawText%2A> methods that specify a <xref:System.Drawing.Point> as the upper-left corner of the drawn text do not render correctly on Windows 2000. If your application is intended for use on machines running Windows 2000, you should use one of the <xref:System.Windows.Forms.TextRenderer.DrawText%2A> methods that specify a <xref:System.Drawing.Rectangle> for the bounds of the drawn text."
  example:
  - "The following code example demonstrates how to use the DrawText method. To run this example, paste the code into a Windows Form and call `RenderText7` from the form's <xref:System.Windows.Forms.Control.Paint> event handler, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-vb[System.Windows.Forms.TextRendererExamples#8](~/add/codesnippet/visualbasic/d827ed57-232c-4323-a307-_1.vb)]\n [!code-cs[System.Windows.Forms.TextRendererExamples#8](~/add/codesnippet/csharp/d827ed57-232c-4323-a307-_1.cs)]"
  syntax:
    content: public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Point pt, System.Drawing.Color foreColor, System.Drawing.Color backColor, System.Windows.Forms.TextFormatFlags flags);
    parameters:
    - id: dc
      type: System.Drawing.IDeviceContext
      description: "The device context in which to draw the text."
    - id: text
      type: System.String
      description: "The text to draw."
    - id: font
      type: System.Drawing.Font
      description: "The <xref href=&quot;System.Drawing.Font&quot;></xref> to apply to the drawn text."
    - id: pt
      type: System.Drawing.Point
      description: "The <xref href=&quot;System.Drawing.Point&quot;></xref> that represents the upper-left corner of the drawn text."
    - id: foreColor
      type: System.Drawing.Color
      description: "The <xref href=&quot;System.Drawing.Color&quot;></xref> to apply to the text."
    - id: backColor
      type: System.Drawing.Color
      description: "The <xref href=&quot;System.Drawing.Color&quot;></xref> to apply to the background area of the drawn text."
    - id: flags
      type: System.Windows.Forms.TextFormatFlags
      description: "A bitwise combination of the <xref href=&quot;System.Windows.Forms.TextFormatFlags&quot;></xref> values."
  overload: System.Windows.Forms.TextRenderer.DrawText*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>dc</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)
  id: DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)
  parent: System.Windows.Forms.TextRenderer
  langs:
  - csharp
  name: DrawText(IDeviceContext,String,Font,Rectangle,Color,Color,TextFormatFlags)
  nameWithType: TextRenderer.DrawText(IDeviceContext,String,Font,Rectangle,Color,Color,TextFormatFlags)
  fullName: System.Windows.Forms.TextRenderer.DrawText(IDeviceContext,String,Font,Rectangle,Color,Color,TextFormatFlags)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Draws the specified text within the specified bounds using the specified device context, font, color, back color, and formatting instructions."
  remarks: "The `backcolor` parameter is applied to the area within the `bounds` parameter`.` If `font`, `forecolor` or `backcolor` is `null` or <xref:System.Drawing.Color.Empty>, respectively; the <xref:System.Windows.Forms.TextRenderer.DrawText%2A> method will draw the text in the font or color currently selected in the device context specified by `dc`. If `forecolor` is <xref:System.Drawing.Color.Transparent%2A>, the text will not be drawn.       You can manipulate how the text is drawn by using one of the <xref:System.Windows.Forms.TextRenderer.DrawText%2A> overloads that takes a <xref:System.Windows.Forms.TextFormatFlags> parameter. For example, the default behavior of the <xref:System.Windows.Forms.TextRenderer> is to add padding to the bounding rectangle of the drawn text to accommodate overhanging glyphs. If you need to draw a line of text without these extra spaces you should use the versions of <xref:System.Windows.Forms.TextRenderer.DrawText%2A> and <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> that take a <xref:System.Drawing.Size> and <xref:System.Windows.Forms.TextFormatFlags> parameter. For an example, see <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>.       The text rendering offered by the <xref:System.Windows.Forms.TextRenderer> class is based on GDI text rendering and is not supported for printing from Windows Forms. Instead, use the <xref:System.Drawing.Graphics.DrawString%2A> methods of the <xref:System.Drawing.Graphics> class.       The <xref:System.Windows.Forms.TextRenderer> does not support adding tab stops to drawn text, although you can expand existing tab stops using the <xref:System.Windows.Forms.TextFormatFlags> flag."
  example:
  - "The following code example demonstrates how to use the DrawText method. To run this example, paste the code into a Windows Form and call `RenderText8` from the form's <xref:System.Windows.Forms.Control.Paint> event handler, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-vb[System.Windows.Forms.TextRendererExamples#9](~/add/codesnippet/visualbasic/ead8e964-6837-41c1-a2b4-_1.vb)]\n [!code-cs[System.Windows.Forms.TextRendererExamples#9](~/add/codesnippet/csharp/ead8e964-6837-41c1-a2b4-_1.cs)]"
  syntax:
    content: public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Rectangle bounds, System.Drawing.Color foreColor, System.Drawing.Color backColor, System.Windows.Forms.TextFormatFlags flags);
    parameters:
    - id: dc
      type: System.Drawing.IDeviceContext
      description: "The device context in which to draw the text."
    - id: text
      type: System.String
      description: "The text to draw."
    - id: font
      type: System.Drawing.Font
      description: "The <xref href=&quot;System.Drawing.Font&quot;></xref> to apply to the drawn text."
    - id: bounds
      type: System.Drawing.Rectangle
      description: "The <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that represents the bounds of the text."
    - id: foreColor
      type: System.Drawing.Color
      description: "The <xref href=&quot;System.Drawing.Color&quot;></xref> to apply to the text."
    - id: backColor
      type: System.Drawing.Color
      description: "The <xref href=&quot;System.Drawing.Color&quot;></xref> to apply to the area represented by `bounds`."
    - id: flags
      type: System.Windows.Forms.TextFormatFlags
      description: "A bitwise combination of the <xref href=&quot;System.Windows.Forms.TextFormatFlags&quot;></xref> values."
  overload: System.Windows.Forms.TextRenderer.DrawText*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>dc</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.TextRenderer.MeasureText(System.String,System.Drawing.Font)
  id: MeasureText(System.String,System.Drawing.Font)
  parent: System.Windows.Forms.TextRenderer
  langs:
  - csharp
  name: MeasureText(String,Font)
  nameWithType: TextRenderer.MeasureText(String,Font)
  fullName: System.Windows.Forms.TextRenderer.MeasureText(String,Font)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Provides the size, in pixels, of the specified text when drawn with the specified font."
  remarks: "The <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> method requires that the text is drawn on a single line."
  example:
  - "The following code example demonstrates how to use the MeasureText method. To run this example, paste the code into a Windows Form and call `MeasureText1` from the form's <xref:System.Windows.Forms.Control.Paint> event handler, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-vb[System.Windows.Forms.TextRendererExamples#1](~/add/codesnippet/visualbasic/4b88f460-aa24-44a4-8de7-_1.vb)]\n [!code-cs[System.Windows.Forms.TextRendererExamples#1](~/add/codesnippet/csharp/4b88f460-aa24-44a4-8de7-_1.cs)]"
  syntax:
    content: public static System.Drawing.Size MeasureText (string text, System.Drawing.Font font);
    parameters:
    - id: text
      type: System.String
      description: "The text to measure."
    - id: font
      type: System.Drawing.Font
      description: "The <xref href=&quot;System.Drawing.Font&quot;></xref> to apply to the measured text."
    return:
      type: System.Drawing.Size
      description: "The <xref href=&quot;System.Drawing.Size&quot;></xref>, in pixels, of <code>text</code> drawn on a single line with the specified <code>font</code>. You can manipulate how the text is drawn by using one of the <xref:System.Windows.Forms.TextRenderer.DrawText*> overloads that takes a <xref href=&quot;System.Windows.Forms.TextFormatFlags&quot;></xref> parameter. For example, the default behavior of the <xref href=&quot;System.Windows.Forms.TextRenderer&quot;></xref> is to add padding to the bounding rectangle of the drawn text to accommodate overhanging glyphs. If you need to draw a line of text without these extra spaces you should use the versions of <xref:System.Windows.Forms.TextRenderer.DrawText*> and <xref:System.Windows.Forms.TextRenderer.MeasureText*> that take a <xref href=&quot;System.Drawing.Size&quot;></xref> and <xref href=&quot;System.Windows.Forms.TextFormatFlags&quot;></xref> parameter. For an example, see &lt;xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29&gt;."
  overload: System.Windows.Forms.TextRenderer.MeasureText*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font)
  id: MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font)
  parent: System.Windows.Forms.TextRenderer
  langs:
  - csharp
  name: MeasureText(IDeviceContext,String,Font)
  nameWithType: TextRenderer.MeasureText(IDeviceContext,String,Font)
  fullName: System.Windows.Forms.TextRenderer.MeasureText(IDeviceContext,String,Font)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Provides the size, in pixels, of the specified text drawn with the specified font in the specified device context."
  remarks: "The MeasureText method requires that the text is drawn on a single line."
  example:
  - "The following code example demonstrates how to use one of the <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> methods. To run this example, paste the code into a Windows Form and call `DrawALineOfText` from the form's <xref:System.Windows.Forms.Control.Paint> event handler, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-vb[System.Windows.Forms.TextRendererExamples#11](~/add/codesnippet/visualbasic/3f7b25bf-7bed-4e31-89eb-_1.vb)]\n [!code-cs[System.Windows.Forms.TextRendererExamples#11](~/add/codesnippet/csharp/3f7b25bf-7bed-4e31-89eb-_1.cs)]"
  syntax:
    content: public static System.Drawing.Size MeasureText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font);
    parameters:
    - id: dc
      type: System.Drawing.IDeviceContext
      description: "The device context in which to measure the text."
    - id: text
      type: System.String
      description: "The text to measure."
    - id: font
      type: System.Drawing.Font
      description: "The <xref href=&quot;System.Drawing.Font&quot;></xref> to apply to the measured text."
    return:
      type: System.Drawing.Size
      description: "The <xref href=&quot;System.Drawing.Size&quot;></xref>, in pixels, of <code>text</code> drawn in a single line with the specified <code>font</code> in the specified device context."
  overload: System.Windows.Forms.TextRenderer.MeasureText*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextRenderer.MeasureText(System.String,System.Drawing.Font,System.Drawing.Size)
  id: MeasureText(System.String,System.Drawing.Font,System.Drawing.Size)
  parent: System.Windows.Forms.TextRenderer
  langs:
  - csharp
  name: MeasureText(String,Font,Size)
  nameWithType: TextRenderer.MeasureText(String,Font,Size)
  fullName: System.Windows.Forms.TextRenderer.MeasureText(String,Font,Size)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Provides the size, in pixels, of the specified text when drawn with the specified font, using the specified size to create an initial bounding rectangle."
  remarks: "The MeasureText method uses the `proposedSize` parameter to indicate the relationship of height to width when determining the text size. When measuring text on a single line, if the `proposedSize` parameter represents a <xref:System.Drawing.Size> with a height dimension greater than <xref:System.Int32.MaxValue?displayProperty=fullName>, the returned <xref:System.Drawing.Size> will be adjusted to reflect the actual height of the text."
  example:
  - "The following code example demonstrates how to use one of the <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> methods. To run this example, paste the code into a Windows Form and call `DrawALineOfText` from the form's <xref:System.Windows.Forms.Control.Paint> event handler, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-vb[System.Windows.Forms.TextRendererExamples#11](~/add/codesnippet/visualbasic/b4629af2-f4ea-4990-9501-_1.vb)]\n [!code-cs[System.Windows.Forms.TextRendererExamples#11](~/add/codesnippet/csharp/b4629af2-f4ea-4990-9501-_1.cs)]"
  syntax:
    content: public static System.Drawing.Size MeasureText (string text, System.Drawing.Font font, System.Drawing.Size proposedSize);
    parameters:
    - id: text
      type: System.String
      description: "The text to measure."
    - id: font
      type: System.Drawing.Font
      description: "The <xref href=&quot;System.Drawing.Font&quot;></xref> to apply to the measured text."
    - id: proposedSize
      type: System.Drawing.Size
      description: "The <xref href=&quot;System.Drawing.Size&quot;></xref> of the initial bounding rectangle."
    return:
      type: System.Drawing.Size
      description: "The <xref href=&quot;System.Drawing.Size&quot;></xref>, in pixels, of <code>text</code> drawn with the specified <code>font</code>."
  overload: System.Windows.Forms.TextRenderer.MeasureText*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size)
  id: MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size)
  parent: System.Windows.Forms.TextRenderer
  langs:
  - csharp
  name: MeasureText(IDeviceContext,String,Font,Size)
  nameWithType: TextRenderer.MeasureText(IDeviceContext,String,Font,Size)
  fullName: System.Windows.Forms.TextRenderer.MeasureText(IDeviceContext,String,Font,Size)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Provides the size, in pixels, of the specified text when drawn with the specified font in the specified device context, using the specified size to create an initial bounding rectangle for the text."
  remarks: "The MeasureText method uses the `proposedSize` parameter to indicate the relationship of height to width when determining the text size. When measuring text on a single line, if the `proposedSize` parameter represents a <xref:System.Drawing.Size> with a height dimension greater than <xref:System.Int32.MaxValue?displayProperty=fullName>, the returned <xref:System.Drawing.Size> will be adjusted to reflect the actual height of the text."
  example:
  - "The following code example demonstrates how to use one of the <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> methods. To run this example, paste the code into a Windows Form and call `DrawALineOfText` from the form's <xref:System.Windows.Forms.Control.Paint> event handler, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-vb[System.Windows.Forms.TextRendererExamples#11](~/add/codesnippet/visualbasic/99912009-69fa-4e4d-9e09-_1.vb)]\n [!code-cs[System.Windows.Forms.TextRendererExamples#11](~/add/codesnippet/csharp/99912009-69fa-4e4d-9e09-_1.cs)]"
  syntax:
    content: public static System.Drawing.Size MeasureText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Size proposedSize);
    parameters:
    - id: dc
      type: System.Drawing.IDeviceContext
      description: "The device context in which to measure the text."
    - id: text
      type: System.String
      description: "The text to measure."
    - id: font
      type: System.Drawing.Font
      description: "The <xref href=&quot;System.Drawing.Font&quot;></xref> to apply to the measured text."
    - id: proposedSize
      type: System.Drawing.Size
      description: "The <xref href=&quot;System.Drawing.Size&quot;></xref> of the initial bounding rectangle."
    return:
      type: System.Drawing.Size
      description: "The <xref href=&quot;System.Drawing.Size&quot;></xref>, in pixels, of <code>text</code> drawn with the specified <code>font</code>."
  overload: System.Windows.Forms.TextRenderer.MeasureText*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>dc</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.TextRenderer.MeasureText(System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)
  id: MeasureText(System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)
  parent: System.Windows.Forms.TextRenderer
  langs:
  - csharp
  name: MeasureText(String,Font,Size,TextFormatFlags)
  nameWithType: TextRenderer.MeasureText(String,Font,Size,TextFormatFlags)
  fullName: System.Windows.Forms.TextRenderer.MeasureText(String,Font,Size,TextFormatFlags)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Provides the size, in pixels, of the specified text when drawn with the specified font and formatting instructions, using the specified size to create the initial bounding rectangle for the text."
  remarks: "<xref:System.Windows.Forms.TextRenderer.MeasureText%2A> uses the `proposedSize` and `flags` parameters to indicate the relationship of height to width when determining the text size. When measuring text on a single line, if the `proposedSize` parameter represents a <xref:System.Drawing.Size> with a height dimension greater than <xref:System.Int32.MaxValue?displayProperty=fullName>, the returned <xref:System.Drawing.Size> will be adjusted to reflect the actual height of the text.       You can manipulate how the text is drawn by using one of the <xref:System.Windows.Forms.TextRenderer.DrawText%2A> overloads that takes a <xref:System.Windows.Forms.TextFormatFlags> parameter. For example, the default behavior of the <xref:System.Windows.Forms.TextRenderer> is to add padding to the bounding rectangle of the drawn text to accommodate overhanging glyphs. If you need to draw a line of text without these extra spaces you should use the versions of <xref:System.Windows.Forms.TextRenderer.DrawText%2A> and <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> that take a <xref:System.Drawing.Size> and <xref:System.Windows.Forms.TextFormatFlags> parameter. For an example, see <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>.      > [!NOTE] >  This overload of MeasureText will ignore a <xref:System.Windows.Forms.TextFormatFlags> value of <xref:System.Windows.Forms.TextFormatFlags> or <xref:System.Windows.Forms.TextFormatFlags>. If you are specifying a padding value other than the default, you should use the overload of <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29> that takes a <xref:System.Drawing.IDeviceContext> object."
  example:
  - "The following code example demonstrates how to use one of the <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> methods. To run this example, paste the code into a Windows Form and call `DrawALineOfText` from the form's <xref:System.Windows.Forms.Control.Paint> event handler, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-vb[System.Windows.Forms.TextRendererExamples#11](~/add/codesnippet/visualbasic/35bf8259-a700-46b3-8683-_1.vb)]\n [!code-cs[System.Windows.Forms.TextRendererExamples#11](~/add/codesnippet/csharp/35bf8259-a700-46b3-8683-_1.cs)]"
  syntax:
    content: public static System.Drawing.Size MeasureText (string text, System.Drawing.Font font, System.Drawing.Size proposedSize, System.Windows.Forms.TextFormatFlags flags);
    parameters:
    - id: text
      type: System.String
      description: "The text to measure."
    - id: font
      type: System.Drawing.Font
      description: "The <xref href=&quot;System.Drawing.Font&quot;></xref> to apply to the measured text."
    - id: proposedSize
      type: System.Drawing.Size
      description: "The <xref href=&quot;System.Drawing.Size&quot;></xref> of the initial bounding rectangle."
    - id: flags
      type: System.Windows.Forms.TextFormatFlags
      description: "The formatting instructions to apply to the measured text."
    return:
      type: System.Drawing.Size
      description: "The <xref href=&quot;System.Drawing.Size&quot;></xref>, in pixels, of <code>text</code> drawn with the specified <code>font</code> and format."
  overload: System.Windows.Forms.TextRenderer.MeasureText*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)
  id: MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)
  parent: System.Windows.Forms.TextRenderer
  langs:
  - csharp
  name: MeasureText(IDeviceContext,String,Font,Size,TextFormatFlags)
  nameWithType: TextRenderer.MeasureText(IDeviceContext,String,Font,Size,TextFormatFlags)
  fullName: System.Windows.Forms.TextRenderer.MeasureText(IDeviceContext,String,Font,Size,TextFormatFlags)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Provides the size, in pixels, of the specified text when drawn with the specified device context, font, and formatting instructions, using the specified size to create the initial bounding rectangle for the text."
  remarks: "The MeasureText method uses the `proposedSize` and `flags` parameters to indicate the relationship of height to width when determining the text size. When measuring text on a single line, if the `proposedSize` parameter represents a <xref:System.Drawing.Size> with a height dimension greater than <xref:System.Int32.MaxValue?displayProperty=fullName>, the returned <xref:System.Drawing.Size> will be adjusted to reflect the actual height of the text.       You can manipulate how the text is drawn by using one of the <xref:System.Windows.Forms.TextRenderer.DrawText%2A> overloads that takes a <xref:System.Windows.Forms.TextFormatFlags> parameter. For example, the default behavior of the <xref:System.Windows.Forms.TextRenderer> is to add padding to the bounding rectangle of the drawn text to accommodate overhanging glyphs. If you need to draw a line of text without these extra spaces, use the versions of <xref:System.Windows.Forms.TextRenderer.DrawText%2A> and <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> that take a <xref:System.Drawing.Size> and <xref:System.Windows.Forms.TextFormatFlags> parameter, as shown in the example."
  example:
  - "The following example demonstrates how to use the MeasureText and <xref:System.Windows.Forms.TextRenderer.DrawText%2A> methods to draw a single line of text in different font styles. To run this example paste the following code in a Windows Form and call `DrawALineOfText` from the form's<xref:System.Windows.Forms.Control.Paint> event handler, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-vb[System.Windows.Forms.TextRendererExamples#11](~/add/codesnippet/visualbasic/5c295813-c05e-4dac-b737-_1.vb)]\n [!code-cs[System.Windows.Forms.TextRendererExamples#11](~/add/codesnippet/csharp/5c295813-c05e-4dac-b737-_1.cs)]"
  syntax:
    content: public static System.Drawing.Size MeasureText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Size proposedSize, System.Windows.Forms.TextFormatFlags flags);
    parameters:
    - id: dc
      type: System.Drawing.IDeviceContext
      description: "The device context in which to measure the text."
    - id: text
      type: System.String
      description: "The text to measure."
    - id: font
      type: System.Drawing.Font
      description: "The <xref href=&quot;System.Drawing.Font&quot;></xref> to apply to the measured text."
    - id: proposedSize
      type: System.Drawing.Size
      description: "The <xref href=&quot;System.Drawing.Size&quot;></xref> of the initial bounding rectangle."
    - id: flags
      type: System.Windows.Forms.TextFormatFlags
      description: "The formatting instructions to apply to the measured text."
    return:
      type: System.Drawing.Size
      description: "The <xref href=&quot;System.Drawing.Size&quot;></xref>, in pixels, of <code>text</code> drawn with the specified <code>font</code> and format."
  overload: System.Windows.Forms.TextRenderer.MeasureText*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>dc</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color)
  parent: System.Windows.Forms.TextRenderer
  isExternal: false
  name: DrawText(IDeviceContext,String,Font,Point,Color)
  nameWithType: TextRenderer.DrawText(IDeviceContext,String,Font,Point,Color)
  fullName: System.Windows.Forms.TextRenderer.DrawText(IDeviceContext,String,Font,Point,Color)
- uid: System.Drawing.IDeviceContext
  parent: System.Drawing
  isExternal: false
  name: IDeviceContext
  nameWithType: IDeviceContext
  fullName: System.Drawing.IDeviceContext
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.Font
  parent: System.Drawing
  isExternal: false
  name: Font
  nameWithType: Font
  fullName: System.Drawing.Font
- uid: System.Drawing.Point
  parent: System.Drawing
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point
- uid: System.Drawing.Color
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color)
  parent: System.Windows.Forms.TextRenderer
  isExternal: false
  name: DrawText(IDeviceContext,String,Font,Rectangle,Color)
  nameWithType: TextRenderer.DrawText(IDeviceContext,String,Font,Rectangle,Color)
  fullName: System.Windows.Forms.TextRenderer.DrawText(IDeviceContext,String,Font,Rectangle,Color)
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color)
  parent: System.Windows.Forms.TextRenderer
  isExternal: false
  name: DrawText(IDeviceContext,String,Font,Point,Color,Color)
  nameWithType: TextRenderer.DrawText(IDeviceContext,String,Font,Point,Color,Color)
  fullName: System.Windows.Forms.TextRenderer.DrawText(IDeviceContext,String,Font,Point,Color,Color)
- uid: System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)
  parent: System.Windows.Forms.TextRenderer
  isExternal: false
  name: DrawText(IDeviceContext,String,Font,Point,Color,TextFormatFlags)
  nameWithType: TextRenderer.DrawText(IDeviceContext,String,Font,Point,Color,TextFormatFlags)
  fullName: System.Windows.Forms.TextRenderer.DrawText(IDeviceContext,String,Font,Point,Color,TextFormatFlags)
- uid: System.Windows.Forms.TextFormatFlags
  parent: System.Windows.Forms
  isExternal: false
  name: TextFormatFlags
  nameWithType: TextFormatFlags
  fullName: System.Windows.Forms.TextFormatFlags
- uid: System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)
  parent: System.Windows.Forms.TextRenderer
  isExternal: false
  name: DrawText(IDeviceContext,String,Font,Rectangle,Color,Color)
  nameWithType: TextRenderer.DrawText(IDeviceContext,String,Font,Rectangle,Color,Color)
  fullName: System.Windows.Forms.TextRenderer.DrawText(IDeviceContext,String,Font,Rectangle,Color,Color)
- uid: System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)
  parent: System.Windows.Forms.TextRenderer
  isExternal: false
  name: DrawText(IDeviceContext,String,Font,Rectangle,Color,TextFormatFlags)
  nameWithType: TextRenderer.DrawText(IDeviceContext,String,Font,Rectangle,Color,TextFormatFlags)
  fullName: System.Windows.Forms.TextRenderer.DrawText(IDeviceContext,String,Font,Rectangle,Color,TextFormatFlags)
- uid: System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)
  parent: System.Windows.Forms.TextRenderer
  isExternal: false
  name: DrawText(IDeviceContext,String,Font,Point,Color,Color,TextFormatFlags)
  nameWithType: TextRenderer.DrawText(IDeviceContext,String,Font,Point,Color,Color,TextFormatFlags)
  fullName: System.Windows.Forms.TextRenderer.DrawText(IDeviceContext,String,Font,Point,Color,Color,TextFormatFlags)
- uid: System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)
  parent: System.Windows.Forms.TextRenderer
  isExternal: false
  name: DrawText(IDeviceContext,String,Font,Rectangle,Color,Color,TextFormatFlags)
  nameWithType: TextRenderer.DrawText(IDeviceContext,String,Font,Rectangle,Color,Color,TextFormatFlags)
  fullName: System.Windows.Forms.TextRenderer.DrawText(IDeviceContext,String,Font,Rectangle,Color,Color,TextFormatFlags)
- uid: System.Windows.Forms.TextRenderer.MeasureText(System.String,System.Drawing.Font)
  parent: System.Windows.Forms.TextRenderer
  isExternal: false
  name: MeasureText(String,Font)
  nameWithType: TextRenderer.MeasureText(String,Font)
  fullName: System.Windows.Forms.TextRenderer.MeasureText(String,Font)
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font)
  parent: System.Windows.Forms.TextRenderer
  isExternal: false
  name: MeasureText(IDeviceContext,String,Font)
  nameWithType: TextRenderer.MeasureText(IDeviceContext,String,Font)
  fullName: System.Windows.Forms.TextRenderer.MeasureText(IDeviceContext,String,Font)
- uid: System.Windows.Forms.TextRenderer.MeasureText(System.String,System.Drawing.Font,System.Drawing.Size)
  parent: System.Windows.Forms.TextRenderer
  isExternal: false
  name: MeasureText(String,Font,Size)
  nameWithType: TextRenderer.MeasureText(String,Font,Size)
  fullName: System.Windows.Forms.TextRenderer.MeasureText(String,Font,Size)
- uid: System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size)
  parent: System.Windows.Forms.TextRenderer
  isExternal: false
  name: MeasureText(IDeviceContext,String,Font,Size)
  nameWithType: TextRenderer.MeasureText(IDeviceContext,String,Font,Size)
  fullName: System.Windows.Forms.TextRenderer.MeasureText(IDeviceContext,String,Font,Size)
- uid: System.Windows.Forms.TextRenderer.MeasureText(System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)
  parent: System.Windows.Forms.TextRenderer
  isExternal: false
  name: MeasureText(String,Font,Size,TextFormatFlags)
  nameWithType: TextRenderer.MeasureText(String,Font,Size,TextFormatFlags)
  fullName: System.Windows.Forms.TextRenderer.MeasureText(String,Font,Size,TextFormatFlags)
- uid: System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)
  parent: System.Windows.Forms.TextRenderer
  isExternal: false
  name: MeasureText(IDeviceContext,String,Font,Size,TextFormatFlags)
  nameWithType: TextRenderer.MeasureText(IDeviceContext,String,Font,Size,TextFormatFlags)
  fullName: System.Windows.Forms.TextRenderer.MeasureText(IDeviceContext,String,Font,Size,TextFormatFlags)
- uid: System.Windows.Forms.TextRenderer.DrawText*
  parent: System.Windows.Forms.TextRenderer
  isExternal: false
  name: DrawText
  nameWithType: TextRenderer.DrawText
- uid: System.Windows.Forms.TextRenderer.MeasureText*
  parent: System.Windows.Forms.TextRenderer
  isExternal: false
  name: MeasureText
  nameWithType: TextRenderer.MeasureText
