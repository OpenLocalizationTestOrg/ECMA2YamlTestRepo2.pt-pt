### YamlMime:ManagedReference
items:
- uid: System.Web.DynamicData.DynamicValidator
  id: DynamicValidator
  children:
  - System.Web.DynamicData.DynamicValidator.#ctor
  - System.Web.DynamicData.DynamicValidator.Column
  - System.Web.DynamicData.DynamicValidator.ColumnName
  - System.Web.DynamicData.DynamicValidator.ControlPropertiesValid
  - System.Web.DynamicData.DynamicValidator.EvaluateIsValid
  - System.Web.DynamicData.DynamicValidator.OnInit(System.EventArgs)
  - System.Web.DynamicData.DynamicValidator.ValidateException(System.Exception)
  - System.Web.DynamicData.DynamicValidator.ValidationException
  langs:
  - csharp
  name: DynamicValidator
  nameWithType: DynamicValidator
  fullName: System.Web.DynamicData.DynamicValidator
  type: Class
  summary: "Impõe e intercete exceções forem emitidas no modelo de dados e é apresentado o erro."
  remarks: "O controlo de DynamicValidator pode ser utilizado com campos de dados ou entidades de dados. Que intercete exceções forem emitidas no classes LINQ para SQL Server ou uma entidade em métodos de extensibilidade no modelo de dados. O controlo de DynamicValidator está associado com os controlos que aceitam intervenção do utilizador. Por exemplo, um controlo de DynamicValidator que está associado uma caixa de texto que aceita entrada de utilizador de um campo UnitsInStock numa tabela produtos intercete e apresenta a exceção é emitida se a entrada é maior ou menor do que as unidades permitidas no modelo de dados.       Por predefinição, dados dinâmicos do ASP.NET não apresenta todas as exceções do modelo de dados na página, porque algumas exceções de base de dados poderão conter informações confidenciais. Apresenta dados dinâmicos <xref:System.Web.DynamicData.DynamicValidator.ValidationException%2A>apenas valores.</xref:System.Web.DynamicData.DynamicValidator.ValidationException%2A> Se pretender que a aplicação para apresentar as outras exceções, pode criar um controlo DynamicValidator, forneça as exceções que pretende apresentar e anexar as exceções para o controlo de DynamicValidator. As exceções forem emitidas no modelo de dados serão apresentadas em todas as páginas da aplicação."
  example:
  - "The following example shows how to create a DynamicValidator control class that displays other exceptions in all pages.  \n  \n [Visual Basic]  \n  \n```  \n''' <summary>   \n''' Display other exceptions in all pages.   \n''' </summary>   \nPublic Class MyDynamicValidator   \n    Inherits DynamicValidator   \n  \n    Protected Overloads Overrides Sub ValidateException(ByVal exception As Exception)   \n        ' If it's not an exception that DynamicValidator displays find   \n        ' the innermost exception.   \n        If Not (TypeOf exception Is IDynamicValidatorException) AndAlso _  \n                Not (TypeOf exception Is ValidationException) Then   \n            While exception.InnerException IsNot Nothing   \n                exception = exception.InnerException   \n            End While   \n  \n            ' Wrap it in a ValidationException so that the base code   \n            ' does not ignore it.   \n            If ExceptionShouldBeDisplayedInPage(exception) Then   \n                exception = New ValidationException(Nothing, exception)   \n            End If   \n        End If   \n  \n        ' Call the base class for the exception that is modified.  \n        MyBase.ValidateException(exception)   \n    End Sub   \n  \n    Private Function ExceptionShouldBeDisplayedInPage(ByVal e As Exception) _  \n            As Boolean   \n        ' Add code to find the exception and   \n        ' decide whether it should be shown in the page.  \n  \n        Return True   \n    End Function   \nEnd Class  \n```  \n  \n [C#]  \n  \n```  \n/// <summary>  \n/// Display other exceptions in all pages.   \n/// </summary>  \npublic class MyDynamicValidator : DynamicValidator {  \n  \n    protected override void ValidateException(Exception exception) {  \n        // If it's not an exception that DynamicValidator displays find   \n        // the innermost exception.  \n        if (!(exception is IDynamicValidatorException) && !(exception   \n              is ValidationException)) {  \n            while (exception.InnerException != null) {  \n                exception = exception.InnerException;  \n            }  \n  \n            // Wrap it in a ValidationException so that the base code   \n            // does not ignore it.  \n            if (ExceptionShouldBeDisplayedInPage(exception)) {  \n                exception = new ValidationException(null, exception);  \n            }  \n        }  \n  \n        // Call the base class on the exception that is modified.  \n        base.ValidateException(exception);  \n    }  \n  \n    private bool ExceptionShouldBeDisplayedInPage(Exception e) {  \n        // Add your code to find the exception and  \n        // decides whether it should be shown in the page.  \n  \n           return true;  \n    }  \n}  \n```  \n  \n The following example shows how to use tag remapping in the web.config file to display the exception in all the Web pages.  \n  \n```  \n<pages>  \n  <tagMapping>  \n    <add tagType=\"System.Web.DynamicData.DynamicValidator\"   \n        mappedTagType=\"MyDynamicValidator\"/>  \n  </tagMapping>  \n</pages>  \n```"
  syntax:
    content: >-
      [System.Drawing.ToolboxBitmap(typeof(System.Web.DynamicData.DynamicValidator), "DynamicValidator.bmp")]

      public class DynamicValidator : System.Web.UI.WebControls.BaseValidator
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.WebControls.WebControl
  - System.Web.UI.WebControls.Label
  - System.Web.UI.WebControls.BaseValidator
  implements: []
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  - System.Web.UI.WebControls.BaseValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.BaseValidator.AssociatedControlID
  - System.Web.UI.WebControls.BaseValidator.CheckControlValidationProperty(System.String,System.String)
  - System.Web.UI.WebControls.BaseValidator.ControlToValidate
  - System.Web.UI.WebControls.BaseValidator.DetermineRenderUplevel
  - System.Web.UI.WebControls.BaseValidator.Display
  - System.Web.UI.WebControls.BaseValidator.EnableClientScript
  - System.Web.UI.WebControls.BaseValidator.Enabled
  - System.Web.UI.WebControls.BaseValidator.ErrorMessage
  - System.Web.UI.WebControls.BaseValidator.ForeColor
  - System.Web.UI.WebControls.BaseValidator.GetControlRenderID(System.String)
  - System.Web.UI.WebControls.BaseValidator.GetControlValidationValue(System.String)
  - System.Web.UI.WebControls.BaseValidator.GetValidationProperty(System.Object)
  - System.Web.UI.WebControls.BaseValidator.IsUnobtrusive
  - System.Web.UI.WebControls.BaseValidator.IsValid
  - System.Web.UI.WebControls.BaseValidator.OnPreRender(System.EventArgs)
  - System.Web.UI.WebControls.BaseValidator.OnUnload(System.EventArgs)
  - System.Web.UI.WebControls.BaseValidator.PropertiesValid
  - System.Web.UI.WebControls.BaseValidator.RegisterValidatorCommonScript
  - System.Web.UI.WebControls.BaseValidator.RegisterValidatorDeclaration
  - System.Web.UI.WebControls.BaseValidator.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.BaseValidator.RenderUplevel
  - System.Web.UI.WebControls.BaseValidator.SetFocusOnError
  - System.Web.UI.WebControls.BaseValidator.Text
  - System.Web.UI.WebControls.BaseValidator.Validate
  - System.Web.UI.WebControls.BaseValidator.ValidationGroup
  - System.Web.UI.WebControls.Label.AddParsedSubObject(System.Object)
  - System.Web.UI.WebControls.Label.LoadViewState(System.Object)
  - System.Web.UI.WebControls.Label.RenderContents(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.Label.SupportsDisabledAttribute
  - System.Web.UI.WebControls.Label.TagKey
  - System.Web.UI.WebControls.WebControl.AccessKey
  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Attributes
  - System.Web.UI.WebControls.WebControl.BackColor
  - System.Web.UI.WebControls.WebControl.BorderColor
  - System.Web.UI.WebControls.WebControl.BorderStyle
  - System.Web.UI.WebControls.WebControl.BorderWidth
  - System.Web.UI.WebControls.WebControl.ControlStyle
  - System.Web.UI.WebControls.WebControl.ControlStyleCreated
  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  - System.Web.UI.WebControls.WebControl.CreateControlStyle
  - System.Web.UI.WebControls.WebControl.CssClass
  - System.Web.UI.WebControls.WebControl.DisabledCssClass
  - System.Web.UI.WebControls.WebControl.EnableTheming
  - System.Web.UI.WebControls.WebControl.Font
  - System.Web.UI.WebControls.WebControl.HasAttributes
  - System.Web.UI.WebControls.WebControl.Height
  - System.Web.UI.WebControls.WebControl.IsEnabled
  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.SaveViewState
  - System.Web.UI.WebControls.WebControl.SkinID
  - System.Web.UI.WebControls.WebControl.Style
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.WebControls.WebControl.TabIndex
  - System.Web.UI.WebControls.WebControl.TagName
  - System.Web.UI.WebControls.WebControl.ToolTip
  - System.Web.UI.WebControls.WebControl.TrackViewState
  - System.Web.UI.WebControls.WebControl.Width
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicValidator.#ctor
  id: '#ctor'
  parent: System.Web.DynamicData.DynamicValidator
  langs:
  - csharp
  name: DynamicValidator()
  nameWithType: DynamicValidator.DynamicValidator()
  fullName: System.Web.DynamicData.DynamicValidator.DynamicValidator()
  type: Constructor
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.DynamicData.DynamicValidator&quot;> </xref> classe."
  syntax:
    content: public DynamicValidator ();
    parameters: []
  overload: System.Web.DynamicData.DynamicValidator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicValidator.Column
  id: Column
  parent: System.Web.DynamicData.DynamicValidator
  langs:
  - csharp
  name: Column
  nameWithType: DynamicValidator.Column
  fullName: System.Web.DynamicData.DynamicValidator.Column
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Obtém ou define a coluna para validar."
  syntax:
    content: public System.Web.DynamicData.MetaColumn Column { get; set; }
    return:
      type: System.Web.DynamicData.MetaColumn
      description: "A coluna para validar, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se a uma entidade de dados é validada."
  overload: System.Web.DynamicData.DynamicValidator.Column*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicValidator.ColumnName
  id: ColumnName
  parent: System.Web.DynamicData.DynamicValidator
  langs:
  - csharp
  name: ColumnName
  nameWithType: DynamicValidator.ColumnName
  fullName: System.Web.DynamicData.DynamicValidator.ColumnName
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Obtém o nome da coluna a validar."
  syntax:
    content: public string ColumnName { get; }
    return:
      type: System.String
      description: "O nome da coluna para validar, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se a uma entidade de dados é validada."
  overload: System.Web.DynamicData.DynamicValidator.ColumnName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicValidator.ControlPropertiesValid
  id: ControlPropertiesValid
  parent: System.Web.DynamicData.DynamicValidator
  langs:
  - csharp
  name: ControlPropertiesValid()
  nameWithType: DynamicValidator.ControlPropertiesValid()
  fullName: System.Web.DynamicData.DynamicValidator.ControlPropertiesValid()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Indica se as propriedades de especificado <xref href=&quot;System.Web.DynamicData.DynamicValidator&quot;> </xref> controlo são válidos."
  remarks: "Este método é substituído da classe base. A chamada para a classe base falha se tentar validar o controlo não tem uma propriedade de validação. Por exemplo, se o controlo é um <xref:System.Web.UI.WebControls.GridView>, a classe base irá falhar.</xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: protected override bool ControlPropertiesValid ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se as propriedades do controlo de validação especificada são válidas. caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.DynamicValidator.ControlPropertiesValid*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicValidator.EvaluateIsValid
  id: EvaluateIsValid
  parent: System.Web.DynamicData.DynamicValidator
  langs:
  - csharp
  name: EvaluateIsValid()
  nameWithType: DynamicValidator.EvaluateIsValid()
  fullName: System.Web.DynamicData.DynamicValidator.EvaluateIsValid()
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Determina se o valor no controlo de entrada para validar é válido."
  syntax:
    content: protected override bool EvaluateIsValid ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o controlo de validação que é avaliado é válido. caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.DynamicValidator.EvaluateIsValid*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicValidator.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.DynamicData.DynamicValidator
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: DynamicValidator.OnInit(EventArgs)
  fullName: System.Web.DynamicData.DynamicValidator.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Gera o <xref uid=&quot;langword_csharp_Init&quot; name=&quot;Init&quot; href=&quot;&quot;> </xref> eventos ao inicializar o <xref href=&quot;System.Web.DynamicData.DynamicValidator&quot;> </xref> controlo."
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Os dados de eventos."
  overload: System.Web.DynamicData.DynamicValidator.OnInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicValidator.ValidateException(System.Exception)
  id: ValidateException(System.Exception)
  parent: System.Web.DynamicData.DynamicValidator
  langs:
  - csharp
  name: ValidateException(Exception)
  nameWithType: DynamicValidator.ValidateException(Exception)
  fullName: System.Web.DynamicData.DynamicValidator.ValidateException(Exception)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Configura uma exceção de validação, se ocorrer uma excepção no modelo de dados."
  remarks: "Este método é denominado quando é emitida uma exceção. Falha de uma validação específicos de coluna quando uma exceção de validação contém uma exceção interna associada, mas a validação do global falhar quando ocorre uma exceção de não validação.      > [!NOTE] > Só utilize este método se a exceção é <xref:System.Web.DynamicData.DynamicValidator.ValidationException%2A>.</xref:System.Web.DynamicData.DynamicValidator.ValidationException%2A> Se a exceção é causada por um erro de base de dados, ao utilizar este método pode apresentar um erro de base de dados confidenciais"
  syntax:
    content: protected virtual void ValidateException (Exception exception);
    parameters:
    - id: exception
      type: System.Exception
      description: "A exceção é emitida."
  overload: System.Web.DynamicData.DynamicValidator.ValidateException*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicValidator.ValidationException
  id: ValidationException
  parent: System.Web.DynamicData.DynamicValidator
  langs:
  - csharp
  name: ValidationException
  nameWithType: DynamicValidator.ValidationException
  fullName: System.Web.DynamicData.DynamicValidator.ValidationException
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Obtém ou define a exceção de validação que ocorre durante a validação."
  remarks: "Esta propriedade representa a exceção de validação que é acionada se ocorrer um erro quando um valor é editado ou quando um novo valor é inserido no modelo de dados."
  syntax:
    content: protected virtual Exception ValidationException { get; set; }
    return:
      type: System.Exception
      description: "A exceção de validação que é acionada."
  overload: System.Web.DynamicData.DynamicValidator.ValidationException*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.BaseValidator
  isExternal: false
  name: System.Web.UI.WebControls.BaseValidator
- uid: System.Web.DynamicData.DynamicValidator.#ctor
  parent: System.Web.DynamicData.DynamicValidator
  isExternal: false
  name: DynamicValidator()
  nameWithType: DynamicValidator.DynamicValidator()
  fullName: System.Web.DynamicData.DynamicValidator.DynamicValidator()
- uid: System.Web.DynamicData.DynamicValidator.Column
  parent: System.Web.DynamicData.DynamicValidator
  isExternal: false
  name: Column
  nameWithType: DynamicValidator.Column
  fullName: System.Web.DynamicData.DynamicValidator.Column
- uid: System.Web.DynamicData.MetaColumn
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaColumn
  nameWithType: MetaColumn
  fullName: System.Web.DynamicData.MetaColumn
- uid: System.Web.DynamicData.DynamicValidator.ColumnName
  parent: System.Web.DynamicData.DynamicValidator
  isExternal: false
  name: ColumnName
  nameWithType: DynamicValidator.ColumnName
  fullName: System.Web.DynamicData.DynamicValidator.ColumnName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DynamicData.DynamicValidator.ControlPropertiesValid
  parent: System.Web.DynamicData.DynamicValidator
  isExternal: false
  name: ControlPropertiesValid()
  nameWithType: DynamicValidator.ControlPropertiesValid()
  fullName: System.Web.DynamicData.DynamicValidator.ControlPropertiesValid()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.DynamicData.DynamicValidator.EvaluateIsValid
  parent: System.Web.DynamicData.DynamicValidator
  isExternal: false
  name: EvaluateIsValid()
  nameWithType: DynamicValidator.EvaluateIsValid()
  fullName: System.Web.DynamicData.DynamicValidator.EvaluateIsValid()
- uid: System.Web.DynamicData.DynamicValidator.OnInit(System.EventArgs)
  parent: System.Web.DynamicData.DynamicValidator
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: DynamicValidator.OnInit(EventArgs)
  fullName: System.Web.DynamicData.DynamicValidator.OnInit(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.DynamicData.DynamicValidator.ValidateException(System.Exception)
  parent: System.Web.DynamicData.DynamicValidator
  isExternal: false
  name: ValidateException(Exception)
  nameWithType: DynamicValidator.ValidateException(Exception)
  fullName: System.Web.DynamicData.DynamicValidator.ValidateException(Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.DynamicData.DynamicValidator.ValidationException
  parent: System.Web.DynamicData.DynamicValidator
  isExternal: false
  name: ValidationException
  nameWithType: DynamicValidator.ValidationException
  fullName: System.Web.DynamicData.DynamicValidator.ValidationException
- uid: System.Web.DynamicData.DynamicValidator.#ctor*
  parent: System.Web.DynamicData.DynamicValidator
  isExternal: false
  name: DynamicValidator
  nameWithType: DynamicValidator.DynamicValidator
- uid: System.Web.DynamicData.DynamicValidator.Column*
  parent: System.Web.DynamicData.DynamicValidator
  isExternal: false
  name: Column
  nameWithType: DynamicValidator.Column
- uid: System.Web.DynamicData.DynamicValidator.ColumnName*
  parent: System.Web.DynamicData.DynamicValidator
  isExternal: false
  name: ColumnName
  nameWithType: DynamicValidator.ColumnName
- uid: System.Web.DynamicData.DynamicValidator.ControlPropertiesValid*
  parent: System.Web.DynamicData.DynamicValidator
  isExternal: false
  name: ControlPropertiesValid
  nameWithType: DynamicValidator.ControlPropertiesValid
- uid: System.Web.DynamicData.DynamicValidator.EvaluateIsValid*
  parent: System.Web.DynamicData.DynamicValidator
  isExternal: false
  name: EvaluateIsValid
  nameWithType: DynamicValidator.EvaluateIsValid
- uid: System.Web.DynamicData.DynamicValidator.OnInit*
  parent: System.Web.DynamicData.DynamicValidator
  isExternal: false
  name: OnInit
  nameWithType: DynamicValidator.OnInit
- uid: System.Web.DynamicData.DynamicValidator.ValidateException*
  parent: System.Web.DynamicData.DynamicValidator
  isExternal: false
  name: ValidateException
  nameWithType: DynamicValidator.ValidateException
- uid: System.Web.DynamicData.DynamicValidator.ValidationException*
  parent: System.Web.DynamicData.DynamicValidator
  isExternal: false
  name: ValidationException
  nameWithType: DynamicValidator.ValidationException
