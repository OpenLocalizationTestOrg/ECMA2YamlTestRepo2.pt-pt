### YamlMime:ManagedReference
items:
- uid: System.Text.RegularExpressions.RegexCompilationInfo
  id: RegexCompilationInfo
  children:
  - System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)
  - System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)
  - System.Text.RegularExpressions.RegexCompilationInfo.IsPublic
  - System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout
  - System.Text.RegularExpressions.RegexCompilationInfo.Name
  - System.Text.RegularExpressions.RegexCompilationInfo.Namespace
  - System.Text.RegularExpressions.RegexCompilationInfo.Options
  - System.Text.RegularExpressions.RegexCompilationInfo.Pattern
  langs:
  - csharp
  name: RegexCompilationInfo
  nameWithType: RegexCompilationInfo
  fullName: System.Text.RegularExpressions.RegexCompilationInfo
  type: Class
  summary: "Provides information about a regular expression that is used to compile a regular expression to a stand-alone assembly."
  remarks: "An array of RegexCompilationInfo objects is passed to the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method to provide information about each regular expression to be included in the assembly. Each compiled regular expression that is included in the assembly is represented as a class derived from <xref:System.Text.RegularExpressions.Regex>. The properties of the RegexCompilationInfo type define the regular expression&quot;s class name, its fully qualified name (that is, its namespace and its type name), its regular expression pattern, any additional options (such as whether the regular expression is case-insensitive), and a time-out interval that specifies how long the regular expression engine should search for a match.       You can instantiate a RegexCompilationInfo object by calling its overloaded class constructor."
  syntax:
    content: public class RegexCompilationInfo
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)
  id: '#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)'
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  langs:
  - csharp
  name: RegexCompilationInfo(String,RegexOptions,String,String,Boolean)
  nameWithType: RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean)
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: "Initializes a new instance of the <xref href=&quot;System.Text.RegularExpressions.RegexCompilationInfo&quot;></xref> class that contains information about a regular expression to be included in an assembly."
  remarks: "Each parameter of the RegexCompilationInfo constructor directly corresponds to a property of the <xref:System.Text.RegularExpressions.RegexCompilationInfo> class. Because all properties are read/write, their values can also be assigned directly.       The <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method generates an assembly that contains compiled regular expressions. Therefore, you should not specify <xref:System.Text.RegularExpressions.RegexOptions> as one of the values of `options`.       If `ispublic` is `true`, the compiled regular expression class is given public accessibility. That is, it can be instantiated from code that executes in any assembly. If `ispublic` is `false`, the compiled regular expression class is given `internal` (in C#) or `Friend` (in Visual Basic) accessibility. That is, it can be instantiated only from code that executes in the same assembly as the regular expression class."
  example:
  - "The following example creates and uses a compiled regular expression in two steps.  \n  \n In the first step, compile and execute the following code example. The RegexCompilationInfo constructor in the code example defines a compiled regular expression. The result of executing the code is an assembly named FishRegex.dll that contains a compiled regular expression type named `FishRegex`.  \n  \n [!code-cs[sys.txt.rgxCompInfo#1](~/add/codesnippet/csharp/7e273a6c-e154-4435-ab93-_1.cs)]\n [!code-vb[sys.txt.rgxCompInfo#1](~/add/codesnippet/visualbasic/7e273a6c-e154-4435-ab93-_1.vb)]  \n  \n In the second step, compile the following code example using a reference to FishRegex.dll, and then run the resulting executable file. The executable file matches a target string by using the `FishRegex` type, and displays the match, group, capture group, and index position of the matches in the target string.  \n  \n [!code-vb[sys.txt.rgxCompInfo#2](~/add/codesnippet/visualbasic/7e273a6c-e154-4435-ab93-_2.vb)]\n [!code-cs[sys.txt.rgxCompInfo#2](~/add/codesnippet/csharp/7e273a6c-e154-4435-ab93-_2.cs)]"
  syntax:
    content: public RegexCompilationInfo (string pattern, System.Text.RegularExpressions.RegexOptions options, string name, string fullnamespace, bool ispublic);
    parameters:
    - id: pattern
      type: System.String
      description: "The regular expression to compile."
    - id: options
      type: System.Text.RegularExpressions.RegexOptions
      description: "The regular expression options to use when compiling the regular expression."
    - id: name
      type: System.String
      description: "The name of the type that represents the compiled regular expression."
    - id: fullnamespace
      type: System.String
      description: "The namespace to which the new type belongs."
    - id: ispublic
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to make the compiled regular expression publicly visible; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Text.RegularExpressions.RegexCompilationInfo.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code> is &lt;xref:System.String?displayProperty=fullName&gt;."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pattern</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>name</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>fullnamespace</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)
  id: '#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)'
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  langs:
  - csharp
  name: RegexCompilationInfo(String,RegexOptions,String,String,Boolean,TimeSpan)
  nameWithType: RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean,TimeSpan)
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean,TimeSpan)
  type: Constructor
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: "Initializes a new instance of the <xref href=&quot;System.Text.RegularExpressions.RegexCompilationInfo&quot;></xref> class that contains information about a regular expression with a specified time-out value to be included in an assembly."
  remarks: "Each parameter of the <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> constructor directly corresponds to a property of the <xref:System.Text.RegularExpressions.RegexCompilationInfo> class. Because all properties are read/write, their values can also be assigned directly.       The <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method generates an assembly that contains compiled regular expressions. Therefore, you should not specify <xref:System.Text.RegularExpressions.RegexOptions> as one of the values of `options`.       If `ispublic` is `true`, the compiled regular expression class is given public accessibility. That is, it can be instantiated from code that executes in any assembly. If `ispublic` is `false`, the compiled regular expression class is given `internal` (in C#) or `Friend` (in Visual Basic) accessibility. That is, it can be instantiated only from code that executes in the same assembly as the regular expression class.       The `matchTimeout` parameter defines the default time-out interval for the compiled regular expression. This value represents the approximate amount of time that a compiled regular expression object will execute a single matching operation before the operation times out and the regular expression engine throws a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception during its next timing check. For additional information about the time-out value, see the <xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A> property.      > [!IMPORTANT] >  We recommend that you always set a default time-out value for a compiled regular expression. Consumers of your regular expression library can override that time-out value by passing a <xref:System.TimeSpan> value that represents the new time-out interval to this constructor overload."
  example:
  - "The following example defines a single compiled regular expression named `DuplicateChars` that identifies two or more occurrences of the same character in an input string. The compiled regular expression has a default time-out of 2 seconds. When you execute the example, it creates a class library named RegexLib.dll that contains the compiled regular expression.  \n  \n [!code-cs[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/add/codesnippet/csharp/caa070a5-44ee-405f-81e7-_1.cs)]\n [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/add/codesnippet/visualbasic/caa070a5-44ee-405f-81e7-_1.vb)]  \n  \n The regular expression pattern `(\\w)\\1+` is defined as shown in the following table.  \n  \n|Pattern|Description|  \n|-------------|-----------------|  \n|`(\\w)`|Match any word character and assign it to the first capturing group.|  \n|`\\1+`|Match one or more occurrences of the value of the first captured group.|  \n  \n The following example uses the `DuplicatedChars` regular expression to identify duplicate characters in a string array. When it calls the `DuplicatedChars` constructor, it changes the time-out interval to .5 seconds.  \n  \n [!code-cs[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/add/codesnippet/csharp/caa070a5-44ee-405f-81e7-_2.cs)]\n [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/add/codesnippet/visualbasic/caa070a5-44ee-405f-81e7-_2.vb)]"
  syntax:
    content: public RegexCompilationInfo (string pattern, System.Text.RegularExpressions.RegexOptions options, string name, string fullnamespace, bool ispublic, TimeSpan matchTimeout);
    parameters:
    - id: pattern
      type: System.String
      description: "The regular expression to compile."
    - id: options
      type: System.Text.RegularExpressions.RegexOptions
      description: "The regular expression options to use when compiling the regular expression."
    - id: name
      type: System.String
      description: "The name of the type that represents the compiled regular expression."
    - id: fullnamespace
      type: System.String
      description: "The namespace to which the new type belongs."
    - id: ispublic
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to make the compiled regular expression publicly visible; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: matchTimeout
      type: System.TimeSpan
      description: "The default time-out interval for the regular expression."
  overload: System.Text.RegularExpressions.RegexCompilationInfo.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code> is &lt;xref:System.String?displayProperty=fullName&gt;."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pattern</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>name</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>fullnamespace</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>matchTimeout</code> is negative, zero, or greater than approximately 24 days."
  platform:
  - net462
- uid: System.Text.RegularExpressions.RegexCompilationInfo.IsPublic
  id: IsPublic
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  langs:
  - csharp
  name: IsPublic
  nameWithType: RegexCompilationInfo.IsPublic
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.IsPublic
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: "Gets or sets a value that indicates whether the compiled regular expression has public visibility."
  remarks: "If the IsPublic property is `false`, the regular expression class defined by the current instance can be instantiated only by code that is executing in the assembly that contains the class. However, because the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A?displayProperty=fullName> method generates an assembly that contains only compiled regular expressions and does not allow additional code to be added, there is generally no reason to assign this property a value of `false`."
  syntax:
    content: public bool IsPublic { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the regular expression has public visibility; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Text.RegularExpressions.RegexCompilationInfo.IsPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout
  id: MatchTimeout
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  langs:
  - csharp
  name: MatchTimeout
  nameWithType: RegexCompilationInfo.MatchTimeout
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: "Gets or sets the regular expression&quot;s default time-out interval."
  remarks: "The MatchTimeout property defines the default time-out interval for the compiled regular expression. This value represents the approximate amount of time that a compiled regular expression will execute a single matching operation before the operation times out and the regular expression engine throws a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception during its next timing check.      > [!IMPORTANT] >  We recommend that you always set a default time-out value for a compiled regular expression. Consumers of your regular expression library can override that time-out value by passing a <xref:System.TimeSpan> value that represents the new time-out interval to the compiled regular expression&quot;s class constructor.       You can assign a default time-out value to a <xref:System.Text.RegularExpressions.RegexCompilationInfo> object in any of the following ways:      -   By calling the <xref:System.AppDomain.SetData%2A?displayProperty=fullName> method and providing the string representation of a <xref:System.TimeSpan> value for the &quot;REGEX_DEFAULT_MATCH_TIMEOUT&quot; property.      -   By calling the <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%2CSystem.TimeSpan%29> constructor and providing a value for the `matchTimeout` parameter.      -   By setting the value of this property.       To set a reasonable time-out interval, consider the following factors:      -   The length and complexity of the regular expression pattern. Longer and more complex regular expressions require more time than shorter and simpler ones.      -   The expected machine load. Processing takes more time on systems with high CPU and memory utilization."
  example:
  - "The following example defines a single compiled regular expression named `DuplicateChars` that identifies two or more occurrences of the same character in an input string. The compiled regular expression has a default time-out of 2 seconds. When you execute the example, it creates a class library named RegexLib.dll that contains the compiled regular expression.  \n  \n [!code-cs[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/add/codesnippet/csharp/p-system.text.regularexp_1.cs)]\n [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/add/codesnippet/visualbasic/p-system.text.regularexp_1.vb)]  \n  \n The regular expression pattern `(\\w)\\1+` is defined as shown in the following table.  \n  \n|Pattern|Description|  \n|-------------|-----------------|  \n|`(\\w)`|Match any word character and assign it to the first capturing group.|  \n|`\\1+`|Match one or more occurrences of the value of the first captured group.|  \n  \n The following example uses the `DuplicatedChars` regular expression to identify duplicate characters in a string array. When it calls the `DuplicatedChars` constructor, it changes the time-out interval to .5 seconds.  \n  \n [!code-cs[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/add/codesnippet/csharp/p-system.text.regularexp_2.cs)]\n [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/add/codesnippet/visualbasic/p-system.text.regularexp_2.vb)]"
  syntax:
    content: public TimeSpan MatchTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "The default maximum time interval that can elapse in a pattern-matching operation before a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> is thrown, or &lt;xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=fullName&gt; if time-outs are disabled."
  overload: System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Name
  id: Name
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  langs:
  - csharp
  name: Name
  nameWithType: RegexCompilationInfo.Name
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Name
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: "Gets or sets the name of the type that represents the compiled regular expression."
  remarks: "The <xref:System.Text.RegularExpressions.RegexCompilationInfo> class is used to define a compiled regular expression, which is represented as a class derived from <xref:System.Text.RegularExpressions.Regex>. The Name property defines the class name of the regular expression type, and the <xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A> and Name properties together define its fully qualified name."
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "The name of the new type."
  overload: System.Text.RegularExpressions.RegexCompilationInfo.Name*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The value for this property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The value for this property is an empty string."
  platform:
  - net462
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Namespace
  id: Namespace
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  langs:
  - csharp
  name: Namespace
  nameWithType: RegexCompilationInfo.Namespace
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Namespace
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: "Gets or sets the namespace to which the new type belongs."
  remarks: "The <xref:System.Text.RegularExpressions.RegexCompilationInfo> class is used to define a compiled regular expression, which is represented as a class derived from <xref:System.Text.RegularExpressions.Regex>. The Namespace property defines the namespace that contains the compiled regular expression type, and the Namespace and <xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A> properties together define its fully qualified name."
  syntax:
    content: public string Namespace { get; set; }
    return:
      type: System.String
      description: "The namespace of the new type."
  overload: System.Text.RegularExpressions.RegexCompilationInfo.Namespace*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The value for this property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Options
  id: Options
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  langs:
  - csharp
  name: Options
  nameWithType: RegexCompilationInfo.Options
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Options
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: "Gets or sets the options to use when compiling the regular expression."
  remarks: "The <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method generates an assembly that contains compiled regular expressions. Therefore, you do not have to specify <xref:System.Text.RegularExpressions.RegexOptions> as one of the values of this property. If it is present, the <xref:System.Text.RegularExpressions.RegexOptions> option is ignored."
  syntax:
    content: public System.Text.RegularExpressions.RegexOptions Options { get; set; }
    return:
      type: System.Text.RegularExpressions.RegexOptions
      description: "A bitwise combination of the enumeration values."
  overload: System.Text.RegularExpressions.RegexCompilationInfo.Options*
  exceptions: []
  platform:
  - net462
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Pattern
  id: Pattern
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  langs:
  - csharp
  name: Pattern
  nameWithType: RegexCompilationInfo.Pattern
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Pattern
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: "Gets or sets the regular expression to compile."
  remarks: "The Pattern property can contain any valid regular expression. If the value of the Pattern property is not a syntactically correct regular expression pattern, the call to the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method throws an <xref:System.ArgumentException>."
  syntax:
    content: public string Pattern { get; set; }
    return:
      type: System.String
      description: "The regular expression to compile."
  overload: System.Text.RegularExpressions.RegexCompilationInfo.Pattern*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The value for this property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: RegexCompilationInfo(String,RegexOptions,String,String,Boolean)
  nameWithType: RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean)
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Text.RegularExpressions.RegexOptions
  parent: System.Text.RegularExpressions
  isExternal: true
  name: RegexOptions
  nameWithType: RegexOptions
  fullName: System.Text.RegularExpressions.RegexOptions
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: RegexCompilationInfo(String,RegexOptions,String,String,Boolean,TimeSpan)
  nameWithType: RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean,TimeSpan)
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean,TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Text.RegularExpressions.RegexCompilationInfo.IsPublic
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: IsPublic
  nameWithType: RegexCompilationInfo.IsPublic
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.IsPublic
- uid: System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: MatchTimeout
  nameWithType: RegexCompilationInfo.MatchTimeout
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Name
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: Name
  nameWithType: RegexCompilationInfo.Name
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Name
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Namespace
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: Namespace
  nameWithType: RegexCompilationInfo.Namespace
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Namespace
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Options
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: Options
  nameWithType: RegexCompilationInfo.Options
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Options
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Pattern
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: Pattern
  nameWithType: RegexCompilationInfo.Pattern
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Pattern
- uid: System.Text.RegularExpressions.RegexCompilationInfo.#ctor*
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: RegexCompilationInfo
  nameWithType: RegexCompilationInfo.RegexCompilationInfo
- uid: System.Text.RegularExpressions.RegexCompilationInfo.IsPublic*
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: IsPublic
  nameWithType: RegexCompilationInfo.IsPublic
- uid: System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout*
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: MatchTimeout
  nameWithType: RegexCompilationInfo.MatchTimeout
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Name*
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: Name
  nameWithType: RegexCompilationInfo.Name
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Namespace*
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: Namespace
  nameWithType: RegexCompilationInfo.Namespace
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Options*
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: Options
  nameWithType: RegexCompilationInfo.Options
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Pattern*
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: Pattern
  nameWithType: RegexCompilationInfo.Pattern
