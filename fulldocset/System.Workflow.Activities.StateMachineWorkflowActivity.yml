### YamlMime:ManagedReference
items:
- uid: System.Workflow.Activities.StateMachineWorkflowActivity
  id: StateMachineWorkflowActivity
  children:
  - System.Workflow.Activities.StateMachineWorkflowActivity.#ctor
  - System.Workflow.Activities.StateMachineWorkflowActivity.#ctor(System.String)
  - System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName
  - System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty
  - System.Workflow.Activities.StateMachineWorkflowActivity.CurrentStateName
  - System.Workflow.Activities.StateMachineWorkflowActivity.DynamicUpdateCondition
  - System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName
  - System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty
  - System.Workflow.Activities.StateMachineWorkflowActivity.PreviousStateName
  - System.Workflow.Activities.StateMachineWorkflowActivity.SetStateQueueName
  langs:
  - csharp
  name: StateMachineWorkflowActivity
  nameWithType: StateMachineWorkflowActivity
  fullName: System.Workflow.Activities.StateMachineWorkflowActivity
  type: Class
  summary: "Serves as the root container for state machine workflows. Contains event-driven activities and states."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       The StateMachineWorkflowActivity is an activity container used to create workflows that follow a state machine model.       The StateMachineWorkflowActivity is a <xref:System.Workflow.ComponentModel.CompositeActivity>, which means the StateMachineWorkflowActivity can contain other activities. The StateMachineWorkflowActivity and the <xref:System.Workflow.Activities.EventDrivenActivity> activities are the only permitted child activities of the StateMachineWorkflowActivity. <xref:System.Workflow.Activities.EventDrivenActivity> activities are permitted because the root activity itself behaves like a state. Therefore, you can have <xref:System.Workflow.Activities.EventDrivenActivity> activities at the root level that are used by all the State activities in the StateMachineWorkflowActivity. <xref:System.Workflow.Activities.EventDrivenActivity> activities at this level provide a global mechanism for processing workflow events and automate state transitions. <xref:System.Workflow.Activities.StateActivity> activities provide a mechanism to define the various stages in the model.       The StateMachineWorkflowActivity has properties that are required for the execution of the state machine workflow. Most notably, the StateMachineWorkflowActivity has two properties that are important: <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty> and <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty>.       The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty> of the state machine is the state in which the state machine is when an instance of the state machine is created. The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty> property is mandatory and must be provided when a StateMachineWorkflowActivity is created. The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty> of the state machine is like any other state activity that is contained within the state machine. The state activity can be a direct child of the StateMachineWorkflowActivity root activity and a StateMachineWorkflowActivity can have only one <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty>.       The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty> of the StateMachineWorkflowActivity is a <xref:System.Workflow.Activities.StateActivity> activity that is designated as the end state of the StateMachineWorkflowActivity. When a transition is made to the <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty>, the workflow execution is completed. The <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty> is not mandatory. This means that you can have a StateMachineWorkflowActivity that is not completed. This does not mean that the state machine workflow is always active in memory. The StateMachineWorkflowActivity might be unloaded as it waits for an event.       StateMachineWorkflowActivity activities that never complete are especially useful in processing long running business transactions, as in the case of a purchase order received by a supplier. The fact that the purchase order was fulfilled does not mean that the purchase order process is over. The goods that are part of the purchase order might be returned or the purchase order might be amended and have additional items added to it after the fulfillment. Sometimes there might be a requirement to keep the purchase order records for an extended period of time for legal or other purposes. The fact that a workflow does not finish just means that the workflow remains in an unloaded state. There may be a case for retiring the workflows, which means that after a set period of time the workflow instance may be forced to shut down."
  example:
  - "The following code example shows how to create a new instance of the StateMachineWorkflowActivity class and use it to implement a basic state machine to transition between three states. This code example is part of the SimpleStateMachineWorkflow SDK sample from the StateMachineWorkflow.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Simple State Machine](http://msdn.microsoft.com/en-us/1974edbd-253d-4e01-9095-38ff9c3e749e).  \n  \n [!code-cs[wf_samples#181](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#181)]\n [!code-vb[wf_samples#181](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#181)]"
  syntax:
    content: >-
      [System.ComponentModel.Designer(typeof(System.Workflow.Activities.StateMachineWorkflowDesigner), typeof(System.ComponentModel.Design.IRootDesigner))]

      [System.ComponentModel.Designer(typeof(System.Workflow.Activities.StateMachineWorkflowDesigner), typeof(System.ComponentModel.Design.IDesigner))]

      [System.ComponentModel.ToolboxItem(false)]

      [System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.StateMachineWorkflowActivity), "Resources.StateMachineWorkflowActivity.png")]

      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      [System.Runtime.InteropServices.ComVisible(false)]

      [System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.StateActivityValidator))]

      public class StateMachineWorkflowActivity : System.Workflow.Activities.StateActivity
  inheritance:
  - System.Object
  - System.Workflow.ComponentModel.DependencyObject
  - System.Workflow.ComponentModel.Activity
  - System.Workflow.ComponentModel.CompositeActivity
  - System.Workflow.Activities.StateActivity
  implements: []
  inheritedMembers:
  - System.Workflow.Activities.StateActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.StateActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.StateActivity.GetDynamicActivity(System.String)
  - System.Workflow.Activities.StateActivity.Initialize(System.IServiceProvider)
  - System.Workflow.Activities.StateActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  - System.Workflow.Activities.StateActivity.OnClosed(System.IServiceProvider)
  - System.Workflow.Activities.StateActivity.StateChangeTrackingDataKey
  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty
  - System.Workflow.ComponentModel.Activity.Canceling
  - System.Workflow.ComponentModel.Activity.CancelingEvent
  - System.Workflow.ComponentModel.Activity.Clone
  - System.Workflow.ComponentModel.Activity.Closed
  - System.Workflow.ComponentModel.Activity.ClosedEvent
  - System.Workflow.ComponentModel.Activity.Compensating
  - System.Workflow.ComponentModel.Activity.CompensatingEvent
  - System.Workflow.ComponentModel.Activity.Description
  - System.Workflow.ComponentModel.Activity.Enabled
  - System.Workflow.ComponentModel.Activity.Executing
  - System.Workflow.ComponentModel.Activity.ExecutingEvent
  - System.Workflow.ComponentModel.Activity.ExecutionResult
  - System.Workflow.ComponentModel.Activity.ExecutionStatus
  - System.Workflow.ComponentModel.Activity.Faulting
  - System.Workflow.ComponentModel.Activity.FaultingEvent
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)
  - System.Workflow.ComponentModel.Activity.IsDynamicActivity
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.Name
  - System.Workflow.ComponentModel.Activity.Parent
  - System.Workflow.ComponentModel.Activity.QualifiedName
  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)
  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)
  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.StatusChanged
  - System.Workflow.ComponentModel.Activity.StatusChangedEvent
  - System.Workflow.ComponentModel.Activity.ToString
  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)
  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)
  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId
  - System.Workflow.ComponentModel.CompositeActivity.Activities
  - System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)
  - System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities
  - System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)
  - System.Workflow.ComponentModel.CompositeActivity.EnabledActivities
  - System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)
  - System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)
  - System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)
  - System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.DesignMode
  - System.Workflow.ComponentModel.DependencyObject.Dispose
  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.InitializeProperties
  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.Site
  - System.Workflow.ComponentModel.DependencyObject.UserData
  platform:
  - net462
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.#ctor
  id: '#ctor'
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  langs:
  - csharp
  name: StateMachineWorkflowActivity()
  nameWithType: StateMachineWorkflowActivity.StateMachineWorkflowActivity()
  fullName: System.Workflow.Activities.StateMachineWorkflowActivity.StateMachineWorkflowActivity()
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Initializes a new instance of the <xref href=&quot;System.Workflow.Activities.StateMachineWorkflowActivity&quot;></xref> class."
  syntax:
    content: public StateMachineWorkflowActivity ();
    parameters: []
  overload: System.Workflow.Activities.StateMachineWorkflowActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  langs:
  - csharp
  name: StateMachineWorkflowActivity(String)
  nameWithType: StateMachineWorkflowActivity.StateMachineWorkflowActivity(String)
  fullName: System.Workflow.Activities.StateMachineWorkflowActivity.StateMachineWorkflowActivity(String)
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Initializes a new instance of the <xref href=&quot;System.Workflow.Activities.StateMachineWorkflowActivity&quot;></xref> class using the name of the activity."
  syntax:
    content: public StateMachineWorkflowActivity (string name);
    parameters:
    - id: name
      type: System.String
      description: "The user-defined name of the activity."
  overload: System.Workflow.Activities.StateMachineWorkflowActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName
  id: CompletedStateName
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  langs:
  - csharp
  name: CompletedStateName
  nameWithType: StateMachineWorkflowActivity.CompletedStateName
  fullName: System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Gets or sets the end <xref href=&quot;System.Workflow.Activities.StateActivity&quot;></xref> of the workflow."
  remarks: "When a transition is made to the CompletedStateName, the workflow execution is completed. The CompletedStateName is not mandatory. This means that you can have a <xref:System.Workflow.Activities.StateMachineWorkflowActivity> that is not completed. This does not mean that the state machine workflow is always active in memory. The <xref:System.Workflow.Activities.StateMachineWorkflowActivity> might be unloaded as it waits for an event.       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)] <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName%2A> and CompletedStateName, see <xref:System.Workflow.Activities.StateMachineWorkflowActivity>."
  example:
  - "The following code example shows how to set the value of the CompletedStateName property. This code example is part of the SimpleStateMachineWorkflow SDK sample from the StateMachineWorkflow.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Simple State Machine](http://msdn.microsoft.com/en-us/1974edbd-253d-4e01-9095-38ff9c3e749e).  \n  \n [!code-cs[wf_samples#184](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#184)]\n [!code-vb[wf_samples#184](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#184)]"
  syntax:
    content: public string CompletedStateName { get; set; }
    return:
      type: System.String
      description: "The end <xref href=&quot;System.Workflow.Activities.StateActivity&quot;></xref> of the workflow."
  overload: System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty
  id: CompletedStateNameProperty
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  langs:
  - csharp
  name: CompletedStateNameProperty
  nameWithType: StateMachineWorkflowActivity.CompletedStateNameProperty
  fullName: System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Represents the <xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;></xref> that targets the <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName*> property."
  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty CompletedStateNameProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.CurrentStateName
  id: CurrentStateName
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  langs:
  - csharp
  name: CurrentStateName
  nameWithType: StateMachineWorkflowActivity.CurrentStateName
  fullName: System.Workflow.Activities.StateMachineWorkflowActivity.CurrentStateName
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Gets the name of the currently executing <xref href=&quot;System.Workflow.Activities.StateActivity&quot;></xref>."
  remarks: "The CurrentStateName property only returns the name of the current state when accessed from within the workflow, for example, from a code handler in a <xref:System.Workflow.Activities.CodeActivity> activity. The property does not work from host code because the host only has access to a copy of the workflow definition, and never to the live instance tree.       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)] how to determine the current state from the host, see the <xref:System.Workflow.Activities.StateMachineWorkflowInstance.CurrentStateName%2A> property of the <xref:System.Workflow.Activities.StateMachineWorkflowInstance> class."
  syntax:
    content: public string CurrentStateName { get; }
    return:
      type: System.String
      description: "The name of the current <xref href=&quot;System.Workflow.Activities.StateActivity&quot;></xref>."
  overload: System.Workflow.Activities.StateMachineWorkflowActivity.CurrentStateName*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.DynamicUpdateCondition
  id: DynamicUpdateCondition
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  langs:
  - csharp
  name: DynamicUpdateCondition
  nameWithType: StateMachineWorkflowActivity.DynamicUpdateCondition
  fullName: System.Workflow.Activities.StateMachineWorkflowActivity.DynamicUpdateCondition
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Gets or sets an <xref href=&quot;System.Workflow.ComponentModel.ActivityCondition&quot;></xref> that determines whether dynamic updates can be made in the workflow, when overridden in a derived class."
  remarks: ''
  example:
  - "The following example shows how to set the `DynamicUpdateCondition` property. This example is from the Ordering State Machine SDK sample. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Ordering State Machine Sample](http://msdn.microsoft.com/en-us/59272cf4-bc98-439c-bcfa-b66999ebce5c).  \n  \n [!code-cs[wf_samples#127](~/add/codesnippet/csharp/wf_snippets/snippets1.cs#127)]\n [!code-vb[wf_samples#127](~/add/codesnippet/visualbasic/wf_snippets/snippets1.vb#127)]"
  syntax:
    content: public System.Workflow.ComponentModel.ActivityCondition DynamicUpdateCondition { get; set; }
    return:
      type: System.Workflow.ComponentModel.ActivityCondition
      description: "An <xref href=&quot;System.Workflow.ComponentModel.ActivityCondition&quot;></xref> that identifies when dynamic updates can be made."
  overload: System.Workflow.Activities.StateMachineWorkflowActivity.DynamicUpdateCondition*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName
  id: InitialStateName
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  langs:
  - csharp
  name: InitialStateName
  nameWithType: StateMachineWorkflowActivity.InitialStateName
  fullName: System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Gets or sets the <xref href=&quot;System.Workflow.Activities.StateActivity&quot;></xref> in which the <xref href=&quot;System.Workflow.Activities.StateMachineWorkflowActivity&quot;></xref> is when an instance of the state machine is created."
  remarks: "The InitialStateName property is mandatory and must be provided when a <xref:System.Workflow.Activities.StateMachineWorkflowActivity> is created. The InitialStateName of the state machine is like any other state activity that is contained within the state machine. The state activity can be a direct child of the <xref:System.Workflow.Activities.StateMachineWorkflowActivity> root activity and a <xref:System.Workflow.Activities.StateMachineWorkflowActivity> can have only one InitialStateName.       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)] InitialStateName and <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName%2A>, see <xref:System.Workflow.Activities.StateMachineWorkflowActivity>."
  example:
  - "The following code example shows how to set the value of the InitialStateName property. This code example is part of the SimpleStateMachineWorkflow SDK sample from the StateMachineWorkflow.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Simple State Machine](http://msdn.microsoft.com/en-us/1974edbd-253d-4e01-9095-38ff9c3e749e).  \n  \n [!code-cs[wf_samples#184](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#184)]\n [!code-vb[wf_samples#184](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#184)]"
  syntax:
    content: public string InitialStateName { get; set; }
    return:
      type: System.String
      description: "The <xref href=&quot;System.Workflow.Activities.StateActivity&quot;></xref> in which the <xref href=&quot;System.Workflow.Activities.StateMachineWorkflowActivity&quot;></xref> is when an instance of the state machine is created."
  overload: System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty
  id: InitialStateNameProperty
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  langs:
  - csharp
  name: InitialStateNameProperty
  nameWithType: StateMachineWorkflowActivity.InitialStateNameProperty
  fullName: System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Represents the <xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;></xref> that targets the <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName*> property."
  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty InitialStateNameProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.PreviousStateName
  id: PreviousStateName
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  langs:
  - csharp
  name: PreviousStateName
  nameWithType: StateMachineWorkflowActivity.PreviousStateName
  fullName: System.Workflow.Activities.StateMachineWorkflowActivity.PreviousStateName
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Gets the name of the previously executed <xref href=&quot;System.Workflow.Activities.StateActivity&quot;></xref>."
  remarks: "The PreviousStateName property only returns the name of the previous state when accessed from within the workflow, for example, from a code handler in a <xref:System.Workflow.Activities.CodeActivity>. The property does not work from host code because the host only has access to a copy of the workflow definition, never to the live instance tree.       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)] how to determine the previous state from the host, see the <xref:System.Workflow.Activities.StateMachineWorkflowInstance.StateHistory%2A> property of the <xref:System.Workflow.Activities.StateMachineWorkflowInstance> class."
  syntax:
    content: public string PreviousStateName { get; }
    return:
      type: System.String
      description: "The name of the previous <xref href=&quot;System.Workflow.Activities.StateActivity&quot;></xref>."
  overload: System.Workflow.Activities.StateMachineWorkflowActivity.PreviousStateName*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.SetStateQueueName
  id: SetStateQueueName
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  langs:
  - csharp
  name: SetStateQueueName
  nameWithType: StateMachineWorkflowActivity.SetStateQueueName
  fullName: System.Workflow.Activities.StateMachineWorkflowActivity.SetStateQueueName
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "The name of the <xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;></xref> that is used to change the state of a <xref href=&quot;System.Workflow.Activities.StateMachineWorkflowActivity&quot;></xref>. This field is constant."
  syntax:
    content: public const string SetStateQueueName;
    return:
      type: System.String
      description: "To be added."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.Activities.StateActivity
  isExternal: false
  name: System.Workflow.Activities.StateActivity
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.#ctor
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  isExternal: false
  name: StateMachineWorkflowActivity()
  nameWithType: StateMachineWorkflowActivity.StateMachineWorkflowActivity()
  fullName: System.Workflow.Activities.StateMachineWorkflowActivity.StateMachineWorkflowActivity()
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.#ctor(System.String)
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  isExternal: false
  name: StateMachineWorkflowActivity(String)
  nameWithType: StateMachineWorkflowActivity.StateMachineWorkflowActivity(String)
  fullName: System.Workflow.Activities.StateMachineWorkflowActivity.StateMachineWorkflowActivity(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  isExternal: false
  name: CompletedStateName
  nameWithType: StateMachineWorkflowActivity.CompletedStateName
  fullName: System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  isExternal: false
  name: CompletedStateNameProperty
  nameWithType: StateMachineWorkflowActivity.CompletedStateNameProperty
  fullName: System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty
- uid: System.Workflow.ComponentModel.DependencyProperty
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Workflow.ComponentModel.DependencyProperty
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.CurrentStateName
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  isExternal: false
  name: CurrentStateName
  nameWithType: StateMachineWorkflowActivity.CurrentStateName
  fullName: System.Workflow.Activities.StateMachineWorkflowActivity.CurrentStateName
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.DynamicUpdateCondition
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  isExternal: false
  name: DynamicUpdateCondition
  nameWithType: StateMachineWorkflowActivity.DynamicUpdateCondition
  fullName: System.Workflow.Activities.StateMachineWorkflowActivity.DynamicUpdateCondition
- uid: System.Workflow.ComponentModel.ActivityCondition
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityCondition
  nameWithType: ActivityCondition
  fullName: System.Workflow.ComponentModel.ActivityCondition
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  isExternal: false
  name: InitialStateName
  nameWithType: StateMachineWorkflowActivity.InitialStateName
  fullName: System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  isExternal: false
  name: InitialStateNameProperty
  nameWithType: StateMachineWorkflowActivity.InitialStateNameProperty
  fullName: System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.PreviousStateName
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  isExternal: false
  name: PreviousStateName
  nameWithType: StateMachineWorkflowActivity.PreviousStateName
  fullName: System.Workflow.Activities.StateMachineWorkflowActivity.PreviousStateName
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.SetStateQueueName
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  isExternal: false
  name: SetStateQueueName
  nameWithType: StateMachineWorkflowActivity.SetStateQueueName
  fullName: System.Workflow.Activities.StateMachineWorkflowActivity.SetStateQueueName
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.#ctor*
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  isExternal: false
  name: StateMachineWorkflowActivity
  nameWithType: StateMachineWorkflowActivity.StateMachineWorkflowActivity
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName*
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  isExternal: false
  name: CompletedStateName
  nameWithType: StateMachineWorkflowActivity.CompletedStateName
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.CurrentStateName*
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  isExternal: false
  name: CurrentStateName
  nameWithType: StateMachineWorkflowActivity.CurrentStateName
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.DynamicUpdateCondition*
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  isExternal: false
  name: DynamicUpdateCondition
  nameWithType: StateMachineWorkflowActivity.DynamicUpdateCondition
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName*
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  isExternal: false
  name: InitialStateName
  nameWithType: StateMachineWorkflowActivity.InitialStateName
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.PreviousStateName*
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  isExternal: false
  name: PreviousStateName
  nameWithType: StateMachineWorkflowActivity.PreviousStateName
