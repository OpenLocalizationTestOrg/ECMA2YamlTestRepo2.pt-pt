### YamlMime:ManagedReference
items:
- uid: System.Workflow.Activities.StateMachineWorkflowActivity
  id: StateMachineWorkflowActivity
  children:
  - System.Workflow.Activities.StateMachineWorkflowActivity.#ctor
  - System.Workflow.Activities.StateMachineWorkflowActivity.#ctor(System.String)
  - System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName
  - System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty
  - System.Workflow.Activities.StateMachineWorkflowActivity.CurrentStateName
  - System.Workflow.Activities.StateMachineWorkflowActivity.DynamicUpdateCondition
  - System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName
  - System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty
  - System.Workflow.Activities.StateMachineWorkflowActivity.PreviousStateName
  - System.Workflow.Activities.StateMachineWorkflowActivity.SetStateQueueName
  langs:
  - csharp
  name: StateMachineWorkflowActivity
  nameWithType: StateMachineWorkflowActivity
  fullName: System.Workflow.Activities.StateMachineWorkflowActivity
  type: Class
  summary: "Funciona como o contentor de raiz para fluxos de trabalho de máquina de estado. Contém atividades condicionada por eventos e os Estados."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]O StateMachineWorkflowActivity é um contentor de actividade utilizado para criar fluxos de trabalho que se seguem um modelo de máquina de estado.       O StateMachineWorkflowActivity é um <xref:System.Workflow.ComponentModel.CompositeActivity>, que significa que o StateMachineWorkflowActivity pode conter outras atividades.</xref:System.Workflow.ComponentModel.CompositeActivity> O StateMachineWorkflowActivity e <xref:System.Workflow.Activities.EventDrivenActivity>atividades são os únicos permitido atividades subordinadas do StateMachineWorkflowActivity.</xref:System.Workflow.Activities.EventDrivenActivity> <xref:System.Workflow.Activities.EventDrivenActivity>as atividades são permitidas porque a atividade raiz próprio comporta-se como um Estado.</xref:System.Workflow.Activities.EventDrivenActivity> Por conseguinte, pode ter <xref:System.Workflow.Activities.EventDrivenActivity>atividades no nível de raiz que são utilizadas por todas as atividades de estado a StateMachineWorkflowActivity.</xref:System.Workflow.Activities.EventDrivenActivity> <xref:System.Workflow.Activities.EventDrivenActivity>Atividades neste nível de fornecem um mecanismo global de processamento de eventos de fluxo de trabalho e automatizar transições de estado.</xref:System.Workflow.Activities.EventDrivenActivity> <xref:System.Workflow.Activities.StateActivity>Atividades fornecem um mecanismo para definir várias etapas no modelo.</xref:System.Workflow.Activities.StateActivity>       O StateMachineWorkflowActivity tem propriedades que são necessárias para a execução do fluxo de trabalho de máquina de estado. Mais especificamente, o StateMachineWorkflowActivity tem duas propriedades que são importantes: <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty>e <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty>.</xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty> </xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty>       O <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty>da máquina de estado é o estado em que a máquina de estado é quando uma instância da máquina de estado é criado.</xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty> O <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty>propriedade é obrigatória e tem de ser fornecida quando é criado um StateMachineWorkflowActivity.</xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty> O <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty>da máquina de estado é como qualquer outra atividade de estado que está contida dentro da máquina de estado.</xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty> A atividade de estado pode ser um subordinado da atividade raiz StateMachineWorkflowActivity direto e um StateMachineWorkflowActivity só pode ter um <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty>.</xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty>       O <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty>o StateMachineWorkflowActivity é um <xref:System.Workflow.Activities.StateActivity>atividade que é designada como o estado de fim do StateMachineWorkflowActivity.</xref:System.Workflow.Activities.StateActivity> </xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty> Quando é efetuada uma transição para o <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty>, a execução do fluxo de trabalho foi concluída.</xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty> O <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty>não é obrigatório.</xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty> Isto significa que pode ter um StateMachineWorkflowActivity que não seja concluída. Isto significa que o fluxo de trabalho de máquina de estado está sempre ativo na memória. O StateMachineWorkflowActivity, pode ser descarregada que aguarda a um evento.       As atividades de StateMachineWorkflowActivity que nunca concluí são particularmente útil no processamento de transações de negócio, como no caso de uma nota de encomenda recebida por um fornecedor de execução longa. O facto de que a nota de encomenda foi concluída não significa que o processo de ordem de compra está acima. Poderão ser devolvidos bens que fazem parte de nota de encomenda ou a ordem de compra pode ser corrigida e itens adicionais adicionou ao mesmo após o cumprimento. Por vezes, poderá ser um requisito para manter os registos de ordem de compra durante um longo período de tempo para efeitos legais ou outros. O facto de que um fluxo de trabalho não for concluída apenas significa que o fluxo de trabalho permanece num Estado descarregado. Pode haver um incidente para extinguir os fluxos de trabalho, o que significa que depois de um período de tempo definido a instância de fluxo de trabalho poderá ser forçada a encerrar."
  example:
  - "The following code example shows how to create a new instance of the StateMachineWorkflowActivity class and use it to implement a basic state machine to transition between three states. This code example is part of the SimpleStateMachineWorkflow SDK sample from the StateMachineWorkflow.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Simple State Machine](http://msdn.microsoft.com/en-us/1974edbd-253d-4e01-9095-38ff9c3e749e).  \n  \n [!code-cs[wf_samples#181](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#181)]\n [!code-vb[wf_samples#181](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#181)]"
  syntax:
    content: >-
      [System.ComponentModel.Designer(typeof(System.Workflow.Activities.StateMachineWorkflowDesigner), typeof(System.ComponentModel.Design.IRootDesigner))]

      [System.ComponentModel.Designer(typeof(System.Workflow.Activities.StateMachineWorkflowDesigner), typeof(System.ComponentModel.Design.IDesigner))]

      [System.ComponentModel.ToolboxItem(false)]

      [System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.StateMachineWorkflowActivity), "Resources.StateMachineWorkflowActivity.png")]

      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      [System.Runtime.InteropServices.ComVisible(false)]

      [System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.StateActivityValidator))]

      public class StateMachineWorkflowActivity : System.Workflow.Activities.StateActivity
  inheritance:
  - System.Object
  - System.Workflow.ComponentModel.DependencyObject
  - System.Workflow.ComponentModel.Activity
  - System.Workflow.ComponentModel.CompositeActivity
  - System.Workflow.Activities.StateActivity
  implements: []
  inheritedMembers:
  - System.Workflow.Activities.StateActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.StateActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.StateActivity.GetDynamicActivity(System.String)
  - System.Workflow.Activities.StateActivity.Initialize(System.IServiceProvider)
  - System.Workflow.Activities.StateActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  - System.Workflow.Activities.StateActivity.OnClosed(System.IServiceProvider)
  - System.Workflow.Activities.StateActivity.StateChangeTrackingDataKey
  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty
  - System.Workflow.ComponentModel.Activity.Canceling
  - System.Workflow.ComponentModel.Activity.CancelingEvent
  - System.Workflow.ComponentModel.Activity.Clone
  - System.Workflow.ComponentModel.Activity.Closed
  - System.Workflow.ComponentModel.Activity.ClosedEvent
  - System.Workflow.ComponentModel.Activity.Compensating
  - System.Workflow.ComponentModel.Activity.CompensatingEvent
  - System.Workflow.ComponentModel.Activity.Description
  - System.Workflow.ComponentModel.Activity.Enabled
  - System.Workflow.ComponentModel.Activity.Executing
  - System.Workflow.ComponentModel.Activity.ExecutingEvent
  - System.Workflow.ComponentModel.Activity.ExecutionResult
  - System.Workflow.ComponentModel.Activity.ExecutionStatus
  - System.Workflow.ComponentModel.Activity.Faulting
  - System.Workflow.ComponentModel.Activity.FaultingEvent
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)
  - System.Workflow.ComponentModel.Activity.IsDynamicActivity
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.Name
  - System.Workflow.ComponentModel.Activity.Parent
  - System.Workflow.ComponentModel.Activity.QualifiedName
  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)
  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)
  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.StatusChanged
  - System.Workflow.ComponentModel.Activity.StatusChangedEvent
  - System.Workflow.ComponentModel.Activity.ToString
  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)
  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)
  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId
  - System.Workflow.ComponentModel.CompositeActivity.Activities
  - System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)
  - System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities
  - System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)
  - System.Workflow.ComponentModel.CompositeActivity.EnabledActivities
  - System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)
  - System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)
  - System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)
  - System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.DesignMode
  - System.Workflow.ComponentModel.DependencyObject.Dispose
  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.InitializeProperties
  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.Site
  - System.Workflow.ComponentModel.DependencyObject.UserData
  platform:
  - net462
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.#ctor
  id: '#ctor'
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  langs:
  - csharp
  name: StateMachineWorkflowActivity()
  nameWithType: StateMachineWorkflowActivity.StateMachineWorkflowActivity()
  fullName: System.Workflow.Activities.StateMachineWorkflowActivity.StateMachineWorkflowActivity()
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Workflow.Activities.StateMachineWorkflowActivity&quot;> </xref> classe."
  syntax:
    content: public StateMachineWorkflowActivity ();
    parameters: []
  overload: System.Workflow.Activities.StateMachineWorkflowActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  langs:
  - csharp
  name: StateMachineWorkflowActivity(String)
  nameWithType: StateMachineWorkflowActivity.StateMachineWorkflowActivity(String)
  fullName: System.Workflow.Activities.StateMachineWorkflowActivity.StateMachineWorkflowActivity(String)
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Workflow.Activities.StateMachineWorkflowActivity&quot;> </xref> classe com o nome da atividade."
  syntax:
    content: public StateMachineWorkflowActivity (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome definido pelo utilizador da atividade."
  overload: System.Workflow.Activities.StateMachineWorkflowActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName
  id: CompletedStateName
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  langs:
  - csharp
  name: CompletedStateName
  nameWithType: StateMachineWorkflowActivity.CompletedStateName
  fullName: System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Obtém ou define a extremidade <xref href=&quot;System.Workflow.Activities.StateActivity&quot;> </xref> do fluxo de trabalho."
  remarks: "Quando é efetuada uma transição para o CompletedStateName, a execução do fluxo de trabalho foi concluída. O CompletedStateName não é obrigatório. Isto significa que pode ter um <xref:System.Workflow.Activities.StateMachineWorkflowActivity>que não seja concluída.</xref:System.Workflow.Activities.StateMachineWorkflowActivity> Isto significa que o fluxo de trabalho de máquina de estado está sempre ativo na memória. O <xref:System.Workflow.Activities.StateMachineWorkflowActivity>, podem ser descarregadas que aguarda a um evento.</xref:System.Workflow.Activities.StateMachineWorkflowActivity>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]<xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName%2A>e CompletedStateName, consulte <xref:System.Workflow.Activities.StateMachineWorkflowActivity>.</xref:System.Workflow.Activities.StateMachineWorkflowActivity> </xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName%2A>"
  example:
  - "The following code example shows how to set the value of the CompletedStateName property. This code example is part of the SimpleStateMachineWorkflow SDK sample from the StateMachineWorkflow.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Simple State Machine](http://msdn.microsoft.com/en-us/1974edbd-253d-4e01-9095-38ff9c3e749e).  \n  \n [!code-cs[wf_samples#184](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#184)]\n [!code-vb[wf_samples#184](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#184)]"
  syntax:
    content: public string CompletedStateName { get; set; }
    return:
      type: System.String
      description: "O fim <xref href=&quot;System.Workflow.Activities.StateActivity&quot;> </xref> do fluxo de trabalho."
  overload: System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty
  id: CompletedStateNameProperty
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  langs:
  - csharp
  name: CompletedStateNameProperty
  nameWithType: StateMachineWorkflowActivity.CompletedStateNameProperty
  fullName: System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Representa o <xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;> </xref> que visa a <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName*>propriedade.</xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName*>"
  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty CompletedStateNameProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.CurrentStateName
  id: CurrentStateName
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  langs:
  - csharp
  name: CurrentStateName
  nameWithType: StateMachineWorkflowActivity.CurrentStateName
  fullName: System.Workflow.Activities.StateMachineWorkflowActivity.CurrentStateName
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Obtém o nome do atualmente em execução <xref href=&quot;System.Workflow.Activities.StateActivity&quot;> </xref>."
  remarks: "A propriedade CurrentStateName devolve apenas o nome do estado atual quando acessível a partir do fluxo de trabalho, por exemplo, a partir de um processador de código num <xref:System.Workflow.Activities.CodeActivity>atividade.</xref:System.Workflow.Activities.CodeActivity> A propriedade não funciona a partir do código de anfitrião porque o anfitrião apenas tem acesso para uma cópia da definição de fluxo de trabalho e nunca à árvore de instância em direto.       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]como determinar o estado atual do anfitrião, consulte a <xref:System.Workflow.Activities.StateMachineWorkflowInstance.CurrentStateName%2A>propriedade de <xref:System.Workflow.Activities.StateMachineWorkflowInstance>classe.</xref:System.Workflow.Activities.StateMachineWorkflowInstance> </xref:System.Workflow.Activities.StateMachineWorkflowInstance.CurrentStateName%2A>"
  syntax:
    content: public string CurrentStateName { get; }
    return:
      type: System.String
      description: "O nome da atual <xref href=&quot;System.Workflow.Activities.StateActivity&quot;> </xref>."
  overload: System.Workflow.Activities.StateMachineWorkflowActivity.CurrentStateName*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.DynamicUpdateCondition
  id: DynamicUpdateCondition
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  langs:
  - csharp
  name: DynamicUpdateCondition
  nameWithType: StateMachineWorkflowActivity.DynamicUpdateCondition
  fullName: System.Workflow.Activities.StateMachineWorkflowActivity.DynamicUpdateCondition
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Obtém ou define um <xref href=&quot;System.Workflow.ComponentModel.ActivityCondition&quot;> </xref> que determina se as atualizações dinâmicas podem ser efetuadas num fluxo de trabalho, quando substituí-lo de uma classe derivada."
  remarks: ''
  example:
  - "The following example shows how to set the `DynamicUpdateCondition` property. This example is from the Ordering State Machine SDK sample. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Ordering State Machine Sample](http://msdn.microsoft.com/en-us/59272cf4-bc98-439c-bcfa-b66999ebce5c).  \n  \n [!code-cs[wf_samples#127](~/add/codesnippet/csharp/wf_snippets/snippets1.cs#127)]\n [!code-vb[wf_samples#127](~/add/codesnippet/visualbasic/wf_snippets/snippets1.vb#127)]"
  syntax:
    content: public System.Workflow.ComponentModel.ActivityCondition DynamicUpdateCondition { get; set; }
    return:
      type: System.Workflow.ComponentModel.ActivityCondition
      description: "Um <xref href=&quot;System.Workflow.ComponentModel.ActivityCondition&quot;> </xref> que identifica o quando atualizações dinâmicas que podem ser efetuadas."
  overload: System.Workflow.Activities.StateMachineWorkflowActivity.DynamicUpdateCondition*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName
  id: InitialStateName
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  langs:
  - csharp
  name: InitialStateName
  nameWithType: StateMachineWorkflowActivity.InitialStateName
  fullName: System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Obtém ou define o <xref href=&quot;System.Workflow.Activities.StateActivity&quot;> </xref> no qual o <xref href=&quot;System.Workflow.Activities.StateMachineWorkflowActivity&quot;> </xref> quando é criada uma instância da máquina de estado."
  remarks: "A propriedade InitialStateName é obrigatória e tem de ser fornecida quando um <xref:System.Workflow.Activities.StateMachineWorkflowActivity>é criado.</xref:System.Workflow.Activities.StateMachineWorkflowActivity> InitialStateName da máquina de estado é como qualquer outra atividade de estado que está contida dentro da máquina de estado. A atividade de estado pode ser um elemento subordinado direto a <xref:System.Workflow.Activities.StateMachineWorkflowActivity>raiz atividade e um <xref:System.Workflow.Activities.StateMachineWorkflowActivity>pode ter apenas um InitialStateName.</xref:System.Workflow.Activities.StateMachineWorkflowActivity> </xref:System.Workflow.Activities.StateMachineWorkflowActivity>       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]InitialStateName e <xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName%2A>, consulte <xref:System.Workflow.Activities.StateMachineWorkflowActivity>.</xref:System.Workflow.Activities.StateMachineWorkflowActivity> </xref:System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName%2A>"
  example:
  - "The following code example shows how to set the value of the InitialStateName property. This code example is part of the SimpleStateMachineWorkflow SDK sample from the StateMachineWorkflow.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Simple State Machine](http://msdn.microsoft.com/en-us/1974edbd-253d-4e01-9095-38ff9c3e749e).  \n  \n [!code-cs[wf_samples#184](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#184)]\n [!code-vb[wf_samples#184](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#184)]"
  syntax:
    content: public string InitialStateName { get; set; }
    return:
      type: System.String
      description: "O <xref href=&quot;System.Workflow.Activities.StateActivity&quot;> </xref> no qual o <xref href=&quot;System.Workflow.Activities.StateMachineWorkflowActivity&quot;> </xref> quando é criada uma instância da máquina de estado."
  overload: System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty
  id: InitialStateNameProperty
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  langs:
  - csharp
  name: InitialStateNameProperty
  nameWithType: StateMachineWorkflowActivity.InitialStateNameProperty
  fullName: System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Representa o <xref href=&quot;System.Workflow.ComponentModel.DependencyObject&quot;> </xref> que visa a <xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName*>propriedade.</xref:System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName*>"
  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty InitialStateNameProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.PreviousStateName
  id: PreviousStateName
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  langs:
  - csharp
  name: PreviousStateName
  nameWithType: StateMachineWorkflowActivity.PreviousStateName
  fullName: System.Workflow.Activities.StateMachineWorkflowActivity.PreviousStateName
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Obtém o nome do anteriormente executados <xref href=&quot;System.Workflow.Activities.StateActivity&quot;> </xref>."
  remarks: "A propriedade PreviousStateName devolve apenas o nome do estado anterior quando acessível a partir do fluxo de trabalho, por exemplo, a partir de um processador de código <xref:System.Workflow.Activities.CodeActivity>.</xref:System.Workflow.Activities.CodeActivity> A propriedade não funciona a partir do código de anfitrião porque o anfitrião apenas tem acesso a uma cópia da definição de fluxo de trabalho, nunca à árvore de instância em direto.       [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]como determinar o estado anterior do anfitrião, consulte a <xref:System.Workflow.Activities.StateMachineWorkflowInstance.StateHistory%2A>propriedade de <xref:System.Workflow.Activities.StateMachineWorkflowInstance>classe.</xref:System.Workflow.Activities.StateMachineWorkflowInstance> </xref:System.Workflow.Activities.StateMachineWorkflowInstance.StateHistory%2A>"
  syntax:
    content: public string PreviousStateName { get; }
    return:
      type: System.String
      description: "O nome do anterior <xref href=&quot;System.Workflow.Activities.StateActivity&quot;> </xref>."
  overload: System.Workflow.Activities.StateMachineWorkflowActivity.PreviousStateName*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.SetStateQueueName
  id: SetStateQueueName
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  langs:
  - csharp
  name: SetStateQueueName
  nameWithType: StateMachineWorkflowActivity.SetStateQueueName
  fullName: System.Workflow.Activities.StateMachineWorkflowActivity.SetStateQueueName
  type: Field
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "O nome do <xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;> </xref> que é utilizado para alterar o estado de um <xref href=&quot;System.Workflow.Activities.StateMachineWorkflowActivity&quot;> </xref>. Este campo é constante."
  syntax:
    content: public const string SetStateQueueName;
    return:
      type: System.String
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.Activities.StateActivity
  isExternal: false
  name: System.Workflow.Activities.StateActivity
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.#ctor
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  isExternal: false
  name: StateMachineWorkflowActivity()
  nameWithType: StateMachineWorkflowActivity.StateMachineWorkflowActivity()
  fullName: System.Workflow.Activities.StateMachineWorkflowActivity.StateMachineWorkflowActivity()
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.#ctor(System.String)
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  isExternal: false
  name: StateMachineWorkflowActivity(String)
  nameWithType: StateMachineWorkflowActivity.StateMachineWorkflowActivity(String)
  fullName: System.Workflow.Activities.StateMachineWorkflowActivity.StateMachineWorkflowActivity(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  isExternal: false
  name: CompletedStateName
  nameWithType: StateMachineWorkflowActivity.CompletedStateName
  fullName: System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  isExternal: false
  name: CompletedStateNameProperty
  nameWithType: StateMachineWorkflowActivity.CompletedStateNameProperty
  fullName: System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateNameProperty
- uid: System.Workflow.ComponentModel.DependencyProperty
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Workflow.ComponentModel.DependencyProperty
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.CurrentStateName
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  isExternal: false
  name: CurrentStateName
  nameWithType: StateMachineWorkflowActivity.CurrentStateName
  fullName: System.Workflow.Activities.StateMachineWorkflowActivity.CurrentStateName
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.DynamicUpdateCondition
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  isExternal: false
  name: DynamicUpdateCondition
  nameWithType: StateMachineWorkflowActivity.DynamicUpdateCondition
  fullName: System.Workflow.Activities.StateMachineWorkflowActivity.DynamicUpdateCondition
- uid: System.Workflow.ComponentModel.ActivityCondition
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityCondition
  nameWithType: ActivityCondition
  fullName: System.Workflow.ComponentModel.ActivityCondition
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  isExternal: false
  name: InitialStateName
  nameWithType: StateMachineWorkflowActivity.InitialStateName
  fullName: System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  isExternal: false
  name: InitialStateNameProperty
  nameWithType: StateMachineWorkflowActivity.InitialStateNameProperty
  fullName: System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateNameProperty
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.PreviousStateName
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  isExternal: false
  name: PreviousStateName
  nameWithType: StateMachineWorkflowActivity.PreviousStateName
  fullName: System.Workflow.Activities.StateMachineWorkflowActivity.PreviousStateName
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.SetStateQueueName
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  isExternal: false
  name: SetStateQueueName
  nameWithType: StateMachineWorkflowActivity.SetStateQueueName
  fullName: System.Workflow.Activities.StateMachineWorkflowActivity.SetStateQueueName
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.#ctor*
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  isExternal: false
  name: StateMachineWorkflowActivity
  nameWithType: StateMachineWorkflowActivity.StateMachineWorkflowActivity
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.CompletedStateName*
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  isExternal: false
  name: CompletedStateName
  nameWithType: StateMachineWorkflowActivity.CompletedStateName
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.CurrentStateName*
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  isExternal: false
  name: CurrentStateName
  nameWithType: StateMachineWorkflowActivity.CurrentStateName
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.DynamicUpdateCondition*
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  isExternal: false
  name: DynamicUpdateCondition
  nameWithType: StateMachineWorkflowActivity.DynamicUpdateCondition
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.InitialStateName*
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  isExternal: false
  name: InitialStateName
  nameWithType: StateMachineWorkflowActivity.InitialStateName
- uid: System.Workflow.Activities.StateMachineWorkflowActivity.PreviousStateName*
  parent: System.Workflow.Activities.StateMachineWorkflowActivity
  isExternal: false
  name: PreviousStateName
  nameWithType: StateMachineWorkflowActivity.PreviousStateName
