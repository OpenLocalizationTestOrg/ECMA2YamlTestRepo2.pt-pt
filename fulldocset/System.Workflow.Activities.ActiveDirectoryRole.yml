### YamlMime:ManagedReference
items:
- uid: System.Workflow.Activities.ActiveDirectoryRole
  id: ActiveDirectoryRole
  children:
  - System.Workflow.Activities.ActiveDirectoryRole.GetAllReports
  - System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports
  - System.Workflow.Activities.ActiveDirectoryRole.GetEntries
  - System.Workflow.Activities.ActiveDirectoryRole.GetIdentities
  - System.Workflow.Activities.ActiveDirectoryRole.GetManager
  - System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain
  - System.Workflow.Activities.ActiveDirectoryRole.GetPeers
  - System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers
  - System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity(System.String)
  - System.Workflow.Activities.ActiveDirectoryRole.Name
  - System.Workflow.Activities.ActiveDirectoryRole.RootEntry
  - System.Workflow.Activities.ActiveDirectoryRole.System#IDisposable#Dispose
  - System.Workflow.Activities.ActiveDirectoryRole.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  langs:
  - csharp
  name: ActiveDirectoryRole
  nameWithType: ActiveDirectoryRole
  fullName: System.Workflow.Activities.ActiveDirectoryRole
  type: Class
  summary: "Representa uma função do Active Directory num ambiente de alojamento do Windows Workflow Foundation. Esta classe não pode ser herdada."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]Normalmente, o arquivo do Active Directory é utilizado para armazenar informações organizacionais para técnico. O objetivo principal para o ActiveDirectoryRole é para fazer consultas em relação a essas informações organizacionais por razões de negócio.       Funções do Active Directory, normalmente, correspondem a uma função de trabalho, título ou skill tarefa dentro do contexto da organização."
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public sealed class ActiveDirectoryRole : System.Workflow.Activities.WorkflowRole, IDisposable, System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  - System.Workflow.Activities.WorkflowRole
  implements:
  - System.IDisposable
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetAllReports
  id: GetAllReports
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: GetAllReports()
  nameWithType: ActiveDirectoryRole.GetAllReports()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetAllReports()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Devolve um <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref> que contém todas as funções de relatório para a função atual direta ou indiretamente."
  remarks: "GetAllReports devolve todos os nós abaixo do nó atual. Utilize <xref:System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports%2A>para devolver apenas os nós que estão diretamente abaixo do nó atual.</xref:System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports%2A>"
  syntax:
    content: public System.Workflow.Activities.ActiveDirectoryRole GetAllReports ();
    parameters: []
    return:
      type: System.Workflow.Activities.ActiveDirectoryRole
      description: "A <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref> que contém todas as funções que um direta ou indiretamente reportam a função atual."
  overload: System.Workflow.Activities.ActiveDirectoryRole.GetAllReports*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports
  id: GetDirectReports
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: GetDirectReports()
  nameWithType: ActiveDirectoryRole.GetDirectReports()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Devolve um <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref> que contém todas as funções que comunicam diretamente para a função atual."
  remarks: "GetDirectReports devolve apenas os nós que estão diretamente abaixo do nó atual. Para devolver todos os nós abaixo do nó atual utilize <xref:System.Workflow.Activities.ActiveDirectoryRole.GetAllReports%2A>.</xref:System.Workflow.Activities.ActiveDirectoryRole.GetAllReports%2A>"
  syntax:
    content: public System.Workflow.Activities.ActiveDirectoryRole GetDirectReports ();
    parameters: []
    return:
      type: System.Workflow.Activities.ActiveDirectoryRole
      description: "Um <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref> que contém todas as funções de relatório que diretamente para a função atual."
  overload: System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetEntries
  id: GetEntries
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: GetEntries()
  nameWithType: ActiveDirectoryRole.GetEntries()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetEntries()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Devolve a coleção genérica que contém todos os <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> objetos associados atual <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>."
  remarks: "Uma função pode ser uma coleção de objetos de segurança geral. Como tal, uma função pode conter várias identidades, por exemplo, utilizar GetEntries para devolver todos os objetos de diretório associados ao direito."
  syntax:
    content: public System.Collections.Generic.ICollection<System.DirectoryServices.DirectoryEntry> GetEntries ();
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.DirectoryServices.DirectoryEntry}
      description: "Genérica <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> coleção que está associada a atual <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>."
  overload: System.Workflow.Activities.ActiveDirectoryRole.GetEntries*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetIdentities
  id: GetIdentities
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: GetIdentities()
  nameWithType: ActiveDirectoryRole.GetIdentities()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetIdentities()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Obtém uma lista das contas do Windows NT associado genérica o <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>."
  remarks: "GetIdentities obtém todos os <xref:System.Security.Principal.SecurityIdentifier>objetos associados a <xref:System.Workflow.Activities.ActiveDirectoryRole>e cada um deles converte um valor de cadeia.</xref:System.Workflow.Activities.ActiveDirectoryRole> </xref:System.Security.Principal.SecurityIdentifier>"
  syntax:
    content: public override System.Collections.Generic.IList<string> GetIdentities ();
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
      description: "Uma lista de valores que representam as contas do Windows NT associadas genérica o <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>."
  overload: System.Workflow.Activities.ActiveDirectoryRole.GetIdentities*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetManager
  id: GetManager
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: GetManager()
  nameWithType: ActiveDirectoryRole.GetManager()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetManager()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Devolve uma função do Active Directory que contém informações sobre o Gestor de atual <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>."
  remarks: "GetManager devolve o Gestor de direto para a função atual. Devolver todas as funções acima do nó atual, utilize <xref:System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain%2A>.</xref:System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain%2A>"
  syntax:
    content: public System.Workflow.Activities.ActiveDirectoryRole GetManager ();
    parameters: []
    return:
      type: System.Workflow.Activities.ActiveDirectoryRole
      description: "O <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref> que contém informações sobre o Gestor da função atual."
  overload: System.Workflow.Activities.ActiveDirectoryRole.GetManager*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain
  id: GetManagerialChain
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: GetManagerialChain()
  nameWithType: ActiveDirectoryRole.GetManagerialChain()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Devolve a função do Active Directory que contém informações sobre a cadeia administrativa associada atual <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>."
  remarks: "GetManagerialChain devolve todos os nós acima a função atual. Para devolver apenas o Gestor de direto da função atual, utilize <xref:System.Workflow.Activities.ActiveDirectoryRole.GetManager%2A>.</xref:System.Workflow.Activities.ActiveDirectoryRole.GetManager%2A>"
  syntax:
    content: public System.Workflow.Activities.ActiveDirectoryRole GetManagerialChain ();
    parameters: []
    return:
      type: System.Workflow.Activities.ActiveDirectoryRole
      description: "O <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref> que contém informações sobre a cadeia administrativa associada com a função atual."
  overload: System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetPeers
  id: GetPeers
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: GetPeers()
  nameWithType: ActiveDirectoryRole.GetPeers()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetPeers()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Devolve uma função do Active Directory que contém informações sobre todas as operações de diretório que são supervisionados pelo Gestor de atual <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>."
  remarks: "O <xref:System.Workflow.Activities.ActiveDirectoryRole>devolvido contém informações de todos os objetos geridos pelo gestor desta função, mas não contém estas informações da função atual.</xref:System.Workflow.Activities.ActiveDirectoryRole>"
  syntax:
    content: public System.Workflow.Activities.ActiveDirectoryRole GetPeers ();
    parameters: []
    return:
      type: System.Workflow.Activities.ActiveDirectoryRole
      description: "A <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref> que contém informações sobre todas as operações de diretório que são supervisionados pelo Gestor de atual <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>."
  overload: System.Workflow.Activities.ActiveDirectoryRole.GetPeers*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers
  id: GetSecurityIdentifiers
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: GetSecurityIdentifiers()
  nameWithType: ActiveDirectoryRole.GetSecurityIdentifiers()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Devolve uma lista genérica de <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> objetos associados atual <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>."
  remarks: "GetSecurityIdentifiers verifica cada <xref:System.DirectoryServices.DirectoryEntry>devolvido pelo <xref:System.Workflow.Activities.ActiveDirectoryRole.GetEntries%2A>método para ver se a entrada tem um identificador de segurança na respetiva <xref:System.DirectoryServices.DirectoryEntry.Properties%2A>coleção.</xref:System.DirectoryServices.DirectoryEntry.Properties%2A> </xref:System.Workflow.Activities.ActiveDirectoryRole.GetEntries%2A> </xref:System.DirectoryServices.DirectoryEntry> Se o <xref:System.DirectoryServices.DirectoryEntry>tem uma propriedade, GetSecurityIdentifiers adiciona um <xref:System.Security.Principal.SecurityIdentifier>à lista de devolve.</xref:System.Security.Principal.SecurityIdentifier> </xref:System.DirectoryServices.DirectoryEntry>"
  syntax:
    content: public System.Collections.Generic.IList<System.Security.Principal.SecurityIdentifier> GetSecurityIdentifiers ();
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Security.Principal.SecurityIdentifier}
      description: "Uma lista genérica de <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> objetos associados atual <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>."
  overload: System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity(System.String)
  id: IncludesIdentity(System.String)
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: IncludesIdentity(String)
  nameWithType: ActiveDirectoryRole.IncludesIdentity(String)
  fullName: System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity(String)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Devolve um valor que indica se o <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref> contém a identidade especificada."
  remarks: "Como uma função é uma generalização de um ou mais objetos, várias identidades podem ser descritas através de uma única função. Utilize IncludesIdentity para testar a que uma identidade especificada está incluída nesta função."
  syntax:
    content: public override bool IncludesIdentity (string identity);
    parameters:
    - id: identity
      type: System.String
      description: "A identidade para o qual pretende procurar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para indicar que <code> identity </code> está incluído no <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.Name
  id: Name
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: Name
  nameWithType: ActiveDirectoryRole.Name
  fullName: System.Workflow.Activities.ActiveDirectoryRole.Name
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Obtém ou define o nome da função do Active Directory."
  remarks: "Utilize o nome para descrever a função."
  syntax:
    content: public override string Name { get; set; }
    return:
      type: System.String
      description: "O nome da função do Active Directory."
  overload: System.Workflow.Activities.ActiveDirectoryRole.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.RootEntry
  id: RootEntry
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: RootEntry
  nameWithType: ActiveDirectoryRole.RootEntry
  fullName: System.Workflow.Activities.ActiveDirectoryRole.RootEntry
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Obtém o nó do Active Directory de raiz associado a <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>."
  remarks: "A entrada de raiz é a função de segurança a cadeia de funções que não tenha nenhum gestor."
  syntax:
    content: public System.DirectoryServices.DirectoryEntry RootEntry { get; }
    return:
      type: System.DirectoryServices.DirectoryEntry
      description: "A <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> que representa o nó do Active Directory de raiz associado a <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>."
  overload: System.Workflow.Activities.ActiveDirectoryRole.RootEntry*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: System.IDisposable.Dispose()
  nameWithType: ActiveDirectoryRole.System.IDisposable.Dispose()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.System.IDisposable.Dispose()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Versões de todos os recursos utilizados pelo <xref href=&quot;System.Workflow.Activities.ActiveDirectoryRole&quot;> </xref>."
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.Workflow.Activities.ActiveDirectoryRole.System#IDisposable#Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.ActiveDirectoryRole.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Workflow.Activities.ActiveDirectoryRole
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: ActiveDirectoryRole.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Workflow.Activities.ActiveDirectoryRole.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Preenche um <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> com os dados necessários para serializar o objeto de destino."
  remarks: "A implementação de <xref:System.Workflow.Activities.ActiveDirectoryRole.System.Runtime.Serialization.ISerializable.GetObjectData%2A>permite que este objeto ser serializado.</xref:System.Workflow.Activities.ActiveDirectoryRole.System.Runtime.Serialization.ISerializable.GetObjectData%2A>"
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "O <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> para preencher com dados."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "O <xref:System.Runtime.Serialization.StreamingContext>destino para esta serialização.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Workflow.Activities.ActiveDirectoryRole.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.Activities.WorkflowRole
  isExternal: false
  name: System.Workflow.Activities.WorkflowRole
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetAllReports
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetAllReports()
  nameWithType: ActiveDirectoryRole.GetAllReports()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetAllReports()
- uid: System.Workflow.Activities.ActiveDirectoryRole
  parent: System.Workflow.Activities
  isExternal: false
  name: ActiveDirectoryRole
  nameWithType: ActiveDirectoryRole
  fullName: System.Workflow.Activities.ActiveDirectoryRole
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetDirectReports()
  nameWithType: ActiveDirectoryRole.GetDirectReports()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports()
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetEntries
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetEntries()
  nameWithType: ActiveDirectoryRole.GetEntries()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetEntries()
- uid: System.Collections.Generic.ICollection{System.DirectoryServices.DirectoryEntry}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<DirectoryEntry>
  nameWithType: ICollection<DirectoryEntry>
  fullName: System.Collections.Generic.ICollection<System.DirectoryServices.DirectoryEntry>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.DirectoryServices.DirectoryEntry>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DirectoryServices.DirectoryEntry
    name: DirectoryEntry
    nameWithType: DirectoryEntry
    fullName: DirectoryEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetIdentities
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetIdentities()
  nameWithType: ActiveDirectoryRole.GetIdentities()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetIdentities()
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetManager
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetManager()
  nameWithType: ActiveDirectoryRole.GetManager()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetManager()
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetManagerialChain()
  nameWithType: ActiveDirectoryRole.GetManagerialChain()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain()
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetPeers
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetPeers()
  nameWithType: ActiveDirectoryRole.GetPeers()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetPeers()
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetSecurityIdentifiers()
  nameWithType: ActiveDirectoryRole.GetSecurityIdentifiers()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers()
- uid: System.Collections.Generic.IList{System.Security.Principal.SecurityIdentifier}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<SecurityIdentifier>
  nameWithType: IList<SecurityIdentifier>
  fullName: System.Collections.Generic.IList<System.Security.Principal.SecurityIdentifier>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Security.Principal.SecurityIdentifier>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Principal.SecurityIdentifier
    name: SecurityIdentifier
    nameWithType: SecurityIdentifier
    fullName: SecurityIdentifier
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity(System.String)
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: IncludesIdentity(String)
  nameWithType: ActiveDirectoryRole.IncludesIdentity(String)
  fullName: System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Activities.ActiveDirectoryRole.Name
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: Name
  nameWithType: ActiveDirectoryRole.Name
  fullName: System.Workflow.Activities.ActiveDirectoryRole.Name
- uid: System.Workflow.Activities.ActiveDirectoryRole.RootEntry
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: RootEntry
  nameWithType: ActiveDirectoryRole.RootEntry
  fullName: System.Workflow.Activities.ActiveDirectoryRole.RootEntry
- uid: System.DirectoryServices.DirectoryEntry
  parent: System.DirectoryServices
  isExternal: false
  name: DirectoryEntry
  nameWithType: DirectoryEntry
  fullName: System.DirectoryServices.DirectoryEntry
- uid: System.Workflow.Activities.ActiveDirectoryRole.System#IDisposable#Dispose
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: System.IDisposable.Dispose()
  nameWithType: ActiveDirectoryRole.System.IDisposable.Dispose()
  fullName: System.Workflow.Activities.ActiveDirectoryRole.System.IDisposable.Dispose()
- uid: System.Workflow.Activities.ActiveDirectoryRole.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: ActiveDirectoryRole.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Workflow.Activities.ActiveDirectoryRole.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetAllReports*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetAllReports
  nameWithType: ActiveDirectoryRole.GetAllReports
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetDirectReports
  nameWithType: ActiveDirectoryRole.GetDirectReports
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetEntries*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetEntries
  nameWithType: ActiveDirectoryRole.GetEntries
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetIdentities*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetIdentities
  nameWithType: ActiveDirectoryRole.GetIdentities
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetManager*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetManager
  nameWithType: ActiveDirectoryRole.GetManager
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetManagerialChain
  nameWithType: ActiveDirectoryRole.GetManagerialChain
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetPeers*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetPeers
  nameWithType: ActiveDirectoryRole.GetPeers
- uid: System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: GetSecurityIdentifiers
  nameWithType: ActiveDirectoryRole.GetSecurityIdentifiers
- uid: System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: IncludesIdentity
  nameWithType: ActiveDirectoryRole.IncludesIdentity
- uid: System.Workflow.Activities.ActiveDirectoryRole.Name*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: Name
  nameWithType: ActiveDirectoryRole.Name
- uid: System.Workflow.Activities.ActiveDirectoryRole.RootEntry*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: RootEntry
  nameWithType: ActiveDirectoryRole.RootEntry
- uid: System.Workflow.Activities.ActiveDirectoryRole.System#IDisposable#Dispose*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: ActiveDirectoryRole.System.IDisposable.Dispose
- uid: System.Workflow.Activities.ActiveDirectoryRole.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Workflow.Activities.ActiveDirectoryRole
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: ActiveDirectoryRole.System.Runtime.Serialization.ISerializable.GetObjectData
