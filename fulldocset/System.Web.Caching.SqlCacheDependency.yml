### YamlMime:ManagedReference
items:
- uid: System.Web.Caching.SqlCacheDependency
  id: SqlCacheDependency
  children:
  - System.Web.Caching.SqlCacheDependency.#ctor(System.Data.SqlClient.SqlCommand)
  - System.Web.Caching.SqlCacheDependency.#ctor(System.String,System.String)
  - System.Web.Caching.SqlCacheDependency.CreateOutputCacheDependency(System.String)
  - System.Web.Caching.SqlCacheDependency.DependencyDispose
  - System.Web.Caching.SqlCacheDependency.GetUniqueID
  langs:
  - csharp
  name: SqlCacheDependency
  nameWithType: SqlCacheDependency
  fullName: System.Web.Caching.SqlCacheDependency
  type: Class
  summary: "Establishes a relationship between an item stored in an ASP.NET application&quot;s <see cref=&quot;T:System.Web.Caching.Cache&quot;></see> object and either a specific SQL Server database table or the results of a [!INCLUDE[sqprsqlong](~/add/includes/sqprsqlong-md.md)] query. This class cannot be inherited."
  remarks: "On all supported versions of SQL Server (Microsoft SQL Server 7.0, Microsoft SQL Server 2000, and SQL Server 2005) the SqlCacheDependency class monitors a specific SQL Server database table. When the table changes, items associated with the table are removed from the <xref:System.Web.Caching.Cache>, and a new version of the item is added to the <xref:System.Web.Caching.Cache>.       The SqlCacheDependency class also supports integration with the <xref:System.Data.SqlClient.SqlDependency?displayProperty=fullName> class when using a [!INCLUDE[sqprsqlong](~/add/includes/sqprsqlong-md.md)] database. The query notification mechanism of [!INCLUDE[sqprsqlong](~/add/includes/sqprsqlong-md.md)] detects changes to data that invalidate the results of an SQL query and removes any cached items associated with the SQL query from the <xref:System.Web.Caching.Cache?displayProperty=fullName>.       You can use the SqlCacheDependency class to add items to your application&quot;s <xref:System.Web.Caching.Cache> that are dependent on either a SQL Server database table or on an SQL query when using [!INCLUDE[sqprsqlong](~/add/includes/sqprsqlong-md.md)]. You can also use this class with the  directive to make an output-cached page or a user control dependent on a SQL Server database table. Finally, you can use the SqlCacheDependency class with the  page directive to make an output-cached page dependent on the results of an SQL query when using [!INCLUDE[sqprsqlong](~/add/includes/sqprsqlong-md.md)]. Query notification using [!INCLUDE[sqprsqlong](~/add/includes/sqprsqlong-md.md)] is not supported on the  directive for user controls.      > [!NOTE] >  For this class to work correctly when using table-based notifications, the database and any tables that you want to make dependencies on must have notifications enabled. You can enable notifications by calling methods of the <xref:System.Web.Caching.SqlCacheDependencyAdmin> class or by using the  command-line tool. In addition, the proper configuration settings must be included in the application&quot;s Web.config file.   >    >  Using a SqlCacheDependency object with [!INCLUDE[sqprsqlong](~/add/includes/sqprsqlong-md.md)] query notification does not require any explicit configuration. Consult the [!INCLUDE[sqprsqlong](~/add/includes/sqprsqlong-md.md)] Books Online for information about restrictions on the types of Transact-SQL queries that are allowed when using query notification.       The following example shows an ASP.NET Web.config file that enables table-based dependencies on a SQL Server database table.      ```   <configuration>     <connectionStrings>       <add name=&quot;Northwind&quot; connectionString=&quot;Data Source=(local); Initial Catalog=northwind; Integrated Security=true&quot;; providerName=&quot;System.Data.SqlClient&quot; />     </connectionStrings>     <system.web>       <caching>         <sqlCacheDependency enabled = &quot;true&quot; pollTime = &quot;60000&quot; >           <databases>             <add name=&quot;northwind&quot;                connectionStringName=&quot;Northwind&quot;               pollTime=&quot;9000000&quot;               />           </databases>         </sqlCacheDependency>       </caching>     </system.web>   </configuration>   ```"
  example:
  - "The following code example uses the <xref:System.Web.UI.WebControls.SqlDataSource> and <xref:System.Web.UI.WebControls.GridView> controls to display a database table. When the page is loaded, the page attempts to create a SqlCacheDependency object. After the SqlCacheDependency object is created, the page adds an item to the `Cache` with a dependency on the SqlCacheDependency object. You should use exception handling similar to that shown here.  \n  \n [!code-vb[CachingSamples_SqlCacheDependency#1](~/add/codesnippet/VisualBasic/t-system.web.caching.sql_1_1.aspx)]\n [!code-cs[CachingSamples_SqlCacheDependency#1](~/add/codesnippet/CSharp/t-system.web.caching.sql_1_1.aspx)]"
  syntax:
    content: 'public sealed class SqlCacheDependency : System.Web.Caching.CacheDependency'
  inheritance:
  - System.Object
  - System.Web.Caching.CacheDependency
  implements: []
  inheritedMembers:
  - System.Web.Caching.CacheDependency.Dispose
  - System.Web.Caching.CacheDependency.FinishInit
  - System.Web.Caching.CacheDependency.GetFileDependencies
  - System.Web.Caching.CacheDependency.HasChanged
  - System.Web.Caching.CacheDependency.NotifyDependencyChanged(System.Object,System.EventArgs)
  - System.Web.Caching.CacheDependency.SetUtcLastModified(System.DateTime)
  - System.Web.Caching.CacheDependency.UtcLastModified
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Caching.SqlCacheDependency.#ctor(System.Data.SqlClient.SqlCommand)
  id: '#ctor(System.Data.SqlClient.SqlCommand)'
  parent: System.Web.Caching.SqlCacheDependency
  langs:
  - csharp
  name: SqlCacheDependency(SqlCommand)
  nameWithType: SqlCacheDependency.SqlCacheDependency(SqlCommand)
  fullName: System.Web.Caching.SqlCacheDependency.SqlCacheDependency(SqlCommand)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "Initializes a new instance of the <see cref=&quot;T:System.Web.Caching.SqlCacheDependency&quot;></see> class, using the supplied <see cref=&quot;T:System.Data.SqlClient.SqlCommand&quot;></see> to create a cache-key dependency."
  remarks: "This constructor is used to create <xref:System.Web.Caching.SqlCacheDependency> objects that use the query-notification feature of [!INCLUDE[sqprsqlong](~/add/includes/sqprsqlong-md.md)] products.       SQL statements that are associated with the `sqlCmd` parameter must include the following:      -   Fully qualified table names, including the name of the table owner. For example, to refer to a table named Customersthat is owned by the database owner, the SQL statement must refer to `dbo.customers`.      -   Explicit column names in the Select statement. You cannot use the asterisk (*) wildcard character to select all columns from a table. For example, instead of `select * from dbo.customers`, you must use `select name, address, city, state from dbo.customers`.       This constructor cannot be used to associate a <xref:System.Data.SqlClient.SqlCommand> instance with a <xref:System.Web.Caching.SqlCacheDependency> instance on a page using [!INCLUDE[sqprsqlong](~/add/includes/sqprsqlong-md.md)] query notifications with page-level output caching."
  syntax:
    content: public SqlCacheDependency (System.Data.SqlClient.SqlCommand sqlCmd);
    parameters:
    - id: sqlCmd
      type: System.Data.SqlClient.SqlCommand
      description: "A  that is used to create a  object."
  overload: System.Web.Caching.SqlCacheDependency.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The sqlCmd parameter is ."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The  instance has its <xref:System.Data.SqlClient.SqlCommand.NotificationAutoEnlist%2A> property set to  and there is an  directive on the page with the  attribute set to `CommandNotification`."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Caching.SqlCacheDependency.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Web.Caching.SqlCacheDependency
  langs:
  - csharp
  name: SqlCacheDependency(String,String)
  nameWithType: SqlCacheDependency.SqlCacheDependency(String,String)
  fullName: System.Web.Caching.SqlCacheDependency.SqlCacheDependency(String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "Initializes a new instance of the <see cref=&quot;T:System.Web.Caching.SqlCacheDependency&quot;></see> class, using the supplied parameters to create a cache-key dependency."
  remarks: "This constructor is used to create <xref:System.Web.Caching.SqlCacheDependency> objects for SQL Server 7.0 and SQL Server 2000 products.       The database name passed to the `database` parameter must be defined in the application&quot;s Web.config file. For example, the following Web.config file defines a database named pubs for <xref:System.Web.Caching.SqlCacheDependency> change notifications.      ```   <configuration>     <connectionStrings>       <add name=&quot;Pubs&quot; connectionString=&quot;Data Source=(local); Initial Catalog=pubs; Integrated Security=true&quot;; providerName=&quot;System.Data.SqlClient&quot; />     </connectionStrings>     <system.web>       <caching>         <sqlCacheDependency enabled = &quot;true&quot; pollTime = &quot;60000&quot; >           <databases>             <add name=&quot;pubs&quot;                connectionStringName=&quot;pubs&quot;               pollTime=&quot;9000000&quot;               />           </databases>         </sqlCacheDependency>       </caching>     </system.web>   </configuration>   ```       Two exceptions are commonly thrown when this constructor is used: <xref:System.Web.Caching.DatabaseNotEnabledForNotificationException> and <xref:System.Web.Caching.TableNotEnabledForNotificationException>. If a <xref:System.Web.Caching.DatabaseNotEnabledForNotificationException> is thrown, you can call the <xref:System.Web.Caching.SqlCacheDependencyAdmin.EnableNotifications%2A?displayProperty=fullName> method in exception-handling code, or use the  command-line tool to set up the database for notifications. If a <xref:System.Web.Caching.TableNotEnabledForNotificationException> is thrown, you can call the <xref:System.Web.Caching.SqlCacheDependencyAdmin.EnableTableForNotifications%2A?displayProperty=fullName> method or use  to set up the table for notifications."
  example:
  - "The following code example uses this constructor to create an instance of the <xref:System.Web.Caching.SqlCacheDependency> class that is associated with a database table named Categories in a SQL Server database named Northwind.  \n  \n [!code-vb[CachingSamples_SqlCacheDependency#2](~/add/codesnippet/VisualBasic/m-system.web.caching.sql_1_1.aspx)]\n [!code-cs[CachingSamples_SqlCacheDependency#2](~/add/codesnippet/CSharp/m-system.web.caching.sql_1_1.aspx)]"
  syntax:
    content: public SqlCacheDependency (string databaseEntryName, string tableName);
    parameters:
    - id: databaseEntryName
      type: System.String
      description: "The name of a database defined in the databases element of the application&quot;s Web.config file."
    - id: tableName
      type: System.String
      description: "The name of the database table that the  is associated with."
  overload: System.Web.Caching.SqlCacheDependency.#ctor*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The internal check for  failed.  \n  \n \\- or -  \n  \n The databaseEntryName was not found in the list of databases configured for table-based notifications.  \n  \n \\- or -  \n  \n The  object could not connect to the database during initialization.  \n  \n \\- or -  \n  \n The  object encountered a permission-denied error either on the database or on the database stored procedures that support the  object."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The tableName parameter is <xref:System.String.Empty?displayProperty=fullName>."
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Polling is not enabled for the .  \n  \n \\- or -  \n  \n The polling interval is not correctly configured.  \n  \n \\- or -  \n  \n No connection string was specified in the application's configuration file.  \n  \n \\- or -  \n  \n The connection string specified in the application's configuration file could not be found.  \n  \n \\- or -  \n  \n The connection string specified in the application's configuration file is an empty string."
  - type: System.Web.Caching.DatabaseNotEnabledForNotificationException
    commentId: T:System.Web.Caching.DatabaseNotEnabledForNotificationException
    description: "The database specified in the databaseEntryName parameter is not enabled for change notifications."
  - type: System.Web.Caching.TableNotEnabledForNotificationException
    commentId: T:System.Web.Caching.TableNotEnabledForNotificationException
    description: "The database table specified in the tableName parameter is not enabled for change notifications."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n    databaseEntryName is .  \n  \n \\- or -  \n  \n tableName is ."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Caching.SqlCacheDependency.CreateOutputCacheDependency(System.String)
  id: CreateOutputCacheDependency(System.String)
  parent: System.Web.Caching.SqlCacheDependency
  langs:
  - csharp
  name: CreateOutputCacheDependency(String)
  nameWithType: SqlCacheDependency.CreateOutputCacheDependency(String)
  fullName: System.Web.Caching.SqlCacheDependency.CreateOutputCacheDependency(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "Creates a dependency relationship between an item that is stored in an ASP.NET application&quot;s <see cref=&quot;T:System.Web.Caching.OutputCache&quot;></see> object and a SQL Server database table."
  remarks: "The following markup shows a typical output-cache dependency directive.      ```   <%@ OutputCache Duration=&quot;3600&quot; SqlDependency=&quot;Northwind:Employees&quot; VaryByParam=&quot;none&quot; %>   ```"
  syntax:
    content: public static System.Web.Caching.CacheDependency CreateOutputCacheDependency (string dependency);
    parameters:
    - id: dependency
      type: System.String
      description: "The output-cache dependency directive."
    return:
      type: System.Web.Caching.CacheDependency
      description: "To be added."
  overload: System.Web.Caching.SqlCacheDependency.CreateOutputCacheDependency*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Caching.SqlCacheDependency.DependencyDispose
  id: DependencyDispose
  parent: System.Web.Caching.SqlCacheDependency
  langs:
  - csharp
  name: DependencyDispose()
  nameWithType: SqlCacheDependency.DependencyDispose()
  fullName: System.Web.Caching.SqlCacheDependency.DependencyDispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  syntax:
    content: protected override void DependencyDispose ();
    parameters: []
  overload: System.Web.Caching.SqlCacheDependency.DependencyDispose*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.Caching.SqlCacheDependency.GetUniqueID
  id: GetUniqueID
  parent: System.Web.Caching.SqlCacheDependency
  langs:
  - csharp
  name: GetUniqueID()
  nameWithType: SqlCacheDependency.GetUniqueID()
  fullName: System.Web.Caching.SqlCacheDependency.GetUniqueID()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "Retrieves a unique identifier for a <see cref=&quot;T:System.Web.Caching.SqlCacheDependency&quot;></see> object."
  remarks: "The <xref:System.Web.Caching.SqlCacheDependency> method returns an identifier used to uniquely track <xref:System.Web.Caching.SqlCacheDependency> objects associated with an item or application. The unique identifier generated when using table-based notifications is partially dependent on the change identifier generated by the database.       When using SQL Server 2005-based query notifications, the unique identifier is `null` because [!INCLUDE[sqprsqlong](~/add/includes/sqprsqlong-md.md)] does not support returning unique identifiers for individual query notifications ."
  syntax:
    content: public override string GetUniqueID ();
    parameters: []
    return:
      type: System.String
      description: "To be added."
  overload: System.Web.Caching.SqlCacheDependency.GetUniqueID*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Web.Caching.CacheDependency
  isExternal: false
  name: System.Web.Caching.CacheDependency
- uid: System.Web.Caching.SqlCacheDependency.#ctor(System.Data.SqlClient.SqlCommand)
  parent: System.Web.Caching.SqlCacheDependency
  isExternal: false
  name: SqlCacheDependency(SqlCommand)
  nameWithType: SqlCacheDependency.SqlCacheDependency(SqlCommand)
  fullName: System.Web.Caching.SqlCacheDependency.SqlCacheDependency(SqlCommand)
- uid: System.Data.SqlClient.SqlCommand
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlCommand
  nameWithType: SqlCommand
  fullName: System.Data.SqlClient.SqlCommand
- uid: System.Web.Caching.SqlCacheDependency.#ctor(System.String,System.String)
  parent: System.Web.Caching.SqlCacheDependency
  isExternal: false
  name: SqlCacheDependency(String,String)
  nameWithType: SqlCacheDependency.SqlCacheDependency(String,String)
  fullName: System.Web.Caching.SqlCacheDependency.SqlCacheDependency(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Caching.SqlCacheDependency.CreateOutputCacheDependency(System.String)
  parent: System.Web.Caching.SqlCacheDependency
  isExternal: false
  name: CreateOutputCacheDependency(String)
  nameWithType: SqlCacheDependency.CreateOutputCacheDependency(String)
  fullName: System.Web.Caching.SqlCacheDependency.CreateOutputCacheDependency(String)
- uid: System.Web.Caching.SqlCacheDependency.DependencyDispose
  parent: System.Web.Caching.SqlCacheDependency
  isExternal: false
  name: DependencyDispose()
  nameWithType: SqlCacheDependency.DependencyDispose()
  fullName: System.Web.Caching.SqlCacheDependency.DependencyDispose()
- uid: System.Web.Caching.SqlCacheDependency.GetUniqueID
  parent: System.Web.Caching.SqlCacheDependency
  isExternal: false
  name: GetUniqueID()
  nameWithType: SqlCacheDependency.GetUniqueID()
  fullName: System.Web.Caching.SqlCacheDependency.GetUniqueID()
- uid: System.Web.Caching.SqlCacheDependency.#ctor*
  parent: System.Web.Caching.SqlCacheDependency
  isExternal: false
  name: SqlCacheDependency
  nameWithType: SqlCacheDependency.SqlCacheDependency
- uid: System.Web.Caching.SqlCacheDependency.CreateOutputCacheDependency*
  parent: System.Web.Caching.SqlCacheDependency
  isExternal: false
  name: CreateOutputCacheDependency
  nameWithType: SqlCacheDependency.CreateOutputCacheDependency
- uid: System.Web.Caching.SqlCacheDependency.DependencyDispose*
  parent: System.Web.Caching.SqlCacheDependency
  isExternal: false
  name: DependencyDispose
  nameWithType: SqlCacheDependency.DependencyDispose
- uid: System.Web.Caching.SqlCacheDependency.GetUniqueID*
  parent: System.Web.Caching.SqlCacheDependency
  isExternal: false
  name: GetUniqueID
  nameWithType: SqlCacheDependency.GetUniqueID
