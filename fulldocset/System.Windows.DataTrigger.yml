### YamlMime:ManagedReference
items:
- uid: System.Windows.DataTrigger
  id: DataTrigger
  children:
  - System.Windows.DataTrigger.#ctor
  - System.Windows.DataTrigger.Binding
  - System.Windows.DataTrigger.ReceiveMarkupExtension(System.Object,System.Windows.Markup.XamlSetMarkupExtensionEventArgs)
  - System.Windows.DataTrigger.Setters
  - System.Windows.DataTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)
  - System.Windows.DataTrigger.System#Windows#Markup#IAddChild#AddText(System.String)
  - System.Windows.DataTrigger.Value
  langs:
  - csharp
  name: DataTrigger
  nameWithType: DataTrigger
  fullName: System.Windows.DataTrigger
  type: Class
  summary: "Represents a trigger that applies property values or performs actions when the bound data meets a specified condition."
  remarks: "<xref:System.Windows.Style>, <xref:System.Windows.Controls.ControlTemplate>, and <xref:System.Windows.DataTemplate> all have a triggers collection. A DataTrigger allows you to set property values when the property value of the data object matches a specified <xref:System.Windows.Condition.Value%2A>. For example, if you are displaying a list of `Employee` objects, you may want the foreground color to be different based on each `Employee&quot;s` current attendance. (For example, `Employees` who are currently on vacation are displayed with a purple foreground.) In some scenarios it may be more suitable to create a converter or to use a <xref:System.Windows.Controls.DataTemplateSelector>. For more information, see the [Data Templating Overview](~/add/includes/ajax-current-ext-md.md).       Note that you must specify both the <xref:System.Windows.DataTrigger.Binding%2A> and <xref:System.Windows.DataTrigger.Value%2A> properties on a DataTrigger for the data trigger to be meaningful. If one or both of the properties are not specified, an exception is thrown.       The <xref:System.Windows.DataTrigger.Setters%2A> property of a DataTrigger object can only consist of <xref:System.Windows.Setter> objects. Adding a <xref:System.Windows.Setter> child to a DataTrigger object implicitly adds it to the <xref:System.Windows.SetterBaseCollection> for the DataTrigger object. <xref:System.Windows.EventSetter> objects are not supported; only <xref:System.Windows.Style.Setters%2A?displayProperty=fullName> supports <xref:System.Windows.EventSetter> objects."
  example:
  - "In the following example, the <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> of the <xref:System.Windows.Controls.ListBox> is bound to *Places*, an <xref:System.Collections.ObjectModel.ObservableCollection%601> of *Place* objects. *Place* objects have properties *Name* and *State*.  \n  \n Each <xref:System.Windows.Controls.ListBoxItem> of the <xref:System.Windows.Controls.ListBox> displays a *Place* object. The <xref:System.Windows.Style> in the example is applied to each <xref:System.Windows.Controls.ListBoxItem>.  \n  \n The DataTrigger is specified such that if the *State* of the *Place* data item is \"WA\" then the foreground of the corresponding <xref:System.Windows.Controls.ListBoxItem> is set to Red.  \n  \n [!code-xml[DataTrigger#1](~/add/codesnippet/xaml/DataTrigger/Window1.xaml#1)]  \n  \n The following example shows how to use a DataTrigger, a <xref:System.Windows.Media.Animation.BeginStoryboard> action, and a <xref:System.Windows.Media.Animation.Storyboard> to animate a property when bound data meets a specified condition. The example displays inventory information in a <xref:System.Windows.Controls.ListBox> control. It uses a DataTrigger to animate the <xref:System.Windows.UIElement.Opacity%2A> of every <xref:System.Windows.Controls.ListBoxItem> that contains an out-of-stock book.  \n  \n [!code-xml[AnimatePropertyStoryboards#GraphicsMMDataTriggerStoryboardWholePage](~/add/codesnippet/xaml/AnimateProperty_Storyboards_markup/DataTriggerStoryboardExample.xaml#graphicsmmdatatriggerstoryboardwholepage)]"
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("Setters")]

      [System.Windows.Markup.XamlSetMarkupExtension("ReceiveMarkupExtension")]

      public class DataTrigger : System.Windows.TriggerBase, System.Windows.Markup.IAddChild
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.TriggerBase
  implements:
  - System.Windows.Markup.IAddChild
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  - System.Windows.TriggerBase.EnterActions
  - System.Windows.TriggerBase.ExitActions
  platform:
  - net462
- uid: System.Windows.DataTrigger.#ctor
  id: '#ctor'
  parent: System.Windows.DataTrigger
  langs:
  - csharp
  name: DataTrigger()
  nameWithType: DataTrigger.DataTrigger()
  fullName: System.Windows.DataTrigger.DataTrigger()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.DataTrigger&quot;></xref> class."
  syntax:
    content: public DataTrigger ();
    parameters: []
  overload: System.Windows.DataTrigger.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DataTrigger.Binding
  id: Binding
  parent: System.Windows.DataTrigger
  langs:
  - csharp
  name: Binding
  nameWithType: DataTrigger.Binding
  fullName: System.Windows.DataTrigger.Binding
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Gets or sets the binding that produces the property value of the data object."
  remarks: "The property value produced by this binding is compared with the value specified by the <xref:System.Windows.DataTrigger.Value%2A> property. That value is first converted to the type of the value of the binding (if possible), and then the two values are compared using the `Object.Equals` method. If the two values are equal, then the associated actions or setters are applied.       You create a binding and use the <xref:System.Windows.Data.Binding.Path%2A> property to bind to a property of a certain object (the binding source object). For example, you may bind to the *Priority* property of a *Task*. For more information, see [Data Binding Overview](~/add/includes/ajax-current-ext-md.md).       Note that you must specify both the Binding and <xref:System.Windows.DataTrigger.Value%2A> properties on a <xref:System.Windows.DataTrigger> for the data trigger to be meaningful. If one or both of the properties are not set, an exception is thrown.      <a name=&quot;xamlAttributeUsage_PriorityBinding&quot;></a>    ## XAML Attribute Usage      ```   <object property=&quot;{Binding  declaration}&quot;/>   ```      <a name=&quot;xamlPropertyElementUsage_Binding&quot;></a>    ## XAML Property Element Usage      ```   <object>     <object.Binding>       <Binding …/>     </object.Binding>   </object>   ```      <a name=&quot;xamlValues_PriorityBinding&quot;></a>    ## XAML Values    *declaration*    Zero or more attribute-assignment clauses separated by commas (,). See [Binding Markup Extension](~/add/includes/ajax-current-ext-md.md) for more information."
  example:
  - "In the following example, the <xref:System.Windows.DataTrigger> sets the <xref:System.Windows.Controls.Border.BorderBrush%2A> of the element named `border` to `Yellow` if the `TaskType` property is `TaskType.Home`.  \n  \n [!code-xml[DataTemplatingIntro#DT](~/add/codesnippet/xaml/datatemplatingsample/window1.xaml#dt)]  \n[!code-xml[DataTemplatingIntro#DataTrigger](~/add/codesnippet/xaml/datatemplatingsample/window1.xaml#datatrigger)]  \n[!code-xml[DataTemplatingIntro#AddingMore2](~/add/codesnippet/xaml/datatemplatingsample/window1.xaml#addingmore2)]  \n  \n For a detailed discussion of this example, see [Data Templating Overview](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Windows.Data.BindingBase Binding { get; set; }
    return:
      type: System.Windows.Data.BindingBase
      description: "The default value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.DataTrigger.Binding*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DataTrigger.ReceiveMarkupExtension(System.Object,System.Windows.Markup.XamlSetMarkupExtensionEventArgs)
  id: ReceiveMarkupExtension(System.Object,System.Windows.Markup.XamlSetMarkupExtensionEventArgs)
  parent: System.Windows.DataTrigger
  langs:
  - csharp
  name: ReceiveMarkupExtension(Object,XamlSetMarkupExtensionEventArgs)
  nameWithType: DataTrigger.ReceiveMarkupExtension(Object,XamlSetMarkupExtensionEventArgs)
  fullName: System.Windows.DataTrigger.ReceiveMarkupExtension(Object,XamlSetMarkupExtensionEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Handles cases where a markup extension provides a value for a property of a <xref href=&quot;System.Windows.DataTrigger&quot;></xref> object."
  remarks: "This is the method referenced by an applied <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute> attribute at the class level, which means that this method processes all attempts to set values of<xref:System.Windows.DataTrigger> with a markup extension. You do not typically call this method directly."
  syntax:
    content: public static void ReceiveMarkupExtension (object targetObject, System.Windows.Markup.XamlSetMarkupExtensionEventArgs eventArgs);
    parameters:
    - id: targetObject
      type: System.Object
      description: "The object where the markup extension sets the value."
    - id: eventArgs
      type: System.Windows.Markup.XamlSetMarkupExtensionEventArgs
      description: "Data that is relevant for markup extension processing."
  overload: System.Windows.DataTrigger.ReceiveMarkupExtension*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DataTrigger.Setters
  id: Setters
  parent: System.Windows.DataTrigger
  langs:
  - csharp
  name: Setters
  nameWithType: DataTrigger.Setters
  fullName: System.Windows.DataTrigger.Setters
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Gets a collection of <xref href=&quot;System.Windows.Setter&quot;></xref> objects, which describe the property values to apply when the data item meets the specified condition."
  remarks: "<a name=&quot;xamlPropertyElementUsage_Setters&quot;></a>    ## XAML Property Element Usage      ```   <object>     <object.Setters>       ZeroOrMoreSetters     </object.Setters>   </object>   ```      <a name=&quot;xamlValues_Setters&quot;></a>    ## XAML Values    *ZeroOrMoreSetters*    Zero or more <xref:System.Windows.Setter> objects.       A <xref:System.Windows.DataTrigger> allows you to start actions or to use <xref:System.Windows.Setter>s to apply property values when the data item meets a specified condition.       If there is more than one setter setting the same property in the same setter collection, the setter that is declared last is used.       The Setters property of a <xref:System.Windows.DataTrigger> object can only consist of <xref:System.Windows.Setter> objects. Adding a <xref:System.Windows.Setter> child to a <xref:System.Windows.DataTrigger> object implicitly adds it to the <xref:System.Windows.SetterBaseCollection> for the <xref:System.Windows.DataTrigger> object. <xref:System.Windows.EventSetter> objects are not supported; only <xref:System.Windows.Style.Setters%2A?displayProperty=fullName> supports <xref:System.Windows.EventSetter> objects."
  example:
  - "The following example shows two <xref:System.Windows.DataTrigger> objects that are defined in a <xref:System.Windows.DataTemplate>. The <xref:System.Windows.DataTemplate> is applied to *AuctionItem* data objects (not shown in this example), which have the property *SpecialFeatures*.  \n  \n The first <xref:System.Windows.DataTrigger> is specified such that if the data object has a *SpecialFeatures* value of *Color*, then the item is displayed with a `DodgerBlue` background with Navy titles. If the data object has a *SpecialFeatures* value of *Highlight*, then the second <xref:System.Windows.DataTrigger> will be active, causing the item to be displayed with an Orange border with a star.  \n  \n For the complete sample, see [Data Binding Demo](http://go.microsoft.com/fwlink/?LinkID=163703).  \n  \n [!code-xml[DataBindingLab#AuctionItemsDataTriggers](~/add/codesnippet/xaml/DataBindingLab/DataBindingLabApp.xaml#auctionitemsdatatriggers)]"
  syntax:
    content: public System.Windows.SetterBaseCollection Setters { get; }
    return:
      type: System.Windows.SetterBaseCollection
      description: "The default value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.DataTrigger.Setters*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DataTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)
  id: System#Windows#Markup#IAddChild#AddChild(System.Object)
  isEii: true
  parent: System.Windows.DataTrigger
  langs:
  - csharp
  name: System.Windows.Markup.IAddChild.AddChild(Object)
  nameWithType: DataTrigger.System.Windows.Markup.IAddChild.AddChild(Object)
  fullName: System.Windows.DataTrigger.System.Windows.Markup.IAddChild.AddChild(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Adds a child object."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.DataTrigger> instance is cast to an <xref:System.Windows.Markup.IAddChild> interface."
  syntax:
    content: void IAddChild.AddChild (object value);
    parameters:
    - id: value
      type: System.Object
      description: "The child object to add."
  overload: System.Windows.DataTrigger.System#Windows#Markup#IAddChild#AddChild*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DataTrigger.System#Windows#Markup#IAddChild#AddText(System.String)
  id: System#Windows#Markup#IAddChild#AddText(System.String)
  isEii: true
  parent: System.Windows.DataTrigger
  langs:
  - csharp
  name: System.Windows.Markup.IAddChild.AddText(String)
  nameWithType: DataTrigger.System.Windows.Markup.IAddChild.AddText(String)
  fullName: System.Windows.DataTrigger.System.Windows.Markup.IAddChild.AddText(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Adds the text content of a node to the object."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Windows.DataTrigger> instance is cast to an <xref:System.Windows.Markup.IAddChild> interface."
  syntax:
    content: void IAddChild.AddText (string text);
    parameters:
    - id: text
      type: System.String
      description: "The text to add to the object."
  overload: System.Windows.DataTrigger.System#Windows#Markup#IAddChild#AddText*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DataTrigger.Value
  id: Value
  parent: System.Windows.DataTrigger
  langs:
  - csharp
  name: Value
  nameWithType: DataTrigger.Value
  fullName: System.Windows.DataTrigger.Value
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Gets or sets the value to be compared with the property value of the data object."
  remarks: "<a name=&quot;xamlPropertyElementUsage_Value&quot;></a>    ## XAML Property Element Usage      ```   <object>     <object.Value>       Value     </object.Value>   </object>   ```       This value is compared with the property value produced by the <xref:System.Windows.DataTrigger.Binding%2A> property of the <xref:System.Windows.DataTrigger>. The comparison is a reference equality check. If the two values are equal, then the associated actions or setters are applied.       Note that you must specify both the <xref:System.Windows.DataTrigger.Binding%2A> and Value properties on a <xref:System.Windows.DataTrigger> for the data trigger to be meaningful. If one or both properties are not set, an exception will be thrown."
  example:
  - "In the following example, the <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> of the <xref:System.Windows.Controls.ListBox> is bound to *Places*, an <xref:System.Collections.ObjectModel.ObservableCollection%601> of *Place* objects. *Place* objects have properties *Name* and *State*.  \n  \n Each <xref:System.Windows.Controls.ListBoxItem> of the <xref:System.Windows.Controls.ListBox> displays a *Place* object. The <xref:System.Windows.Style> in the example is applied to each <xref:System.Windows.Controls.ListBoxItem>.  \n  \n The <xref:System.Windows.DataTrigger> is specified such that if the *State* of the *Place* data item is \"WA\" then the foreground of the corresponding <xref:System.Windows.Controls.ListBoxItem> is set to Red.  \n  \n [!code-xml[DataTrigger#1](~/add/codesnippet/xaml/DataTrigger/Window1.xaml#1)]  \n  \n The following example shows two <xref:System.Windows.DataTrigger>s that are defined in a <xref:System.Windows.DataTemplate>. The <xref:System.Windows.DataTemplate> is applied to *AuctionItem* data objects (not shown in this example), which have the property *SpecialFeatures*. See [Data Binding Demo](http://go.microsoft.com/fwlink/?LinkID=163703) for the complete example.  \n  \n The first <xref:System.Windows.DataTrigger> is specified such that if the data object has a *SpecialFeatures* value of *Color*, then the item is displayed with a DodgerBlue background with Navy titles. If the data object has a *SpecialFeatures* value of *Highlight*, then the second <xref:System.Windows.DataTrigger> will be active, causing the item to be displayed with an Orange border with a star.  \n  \n [!code-xml[DataBindingLab#AuctionItemsDataTriggers](~/add/codesnippet/xaml/DataBindingLab/DataBindingLabApp.xaml#auctionitemsdatatriggers)]"
  syntax:
    content: public object Value { get; set; }
    return:
      type: System.Object
      description: "The default value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>. See also the Exceptions section."
  overload: System.Windows.DataTrigger.Value*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Expressions are not supported. Bindings are not supported."
  platform:
  - net462
references:
- uid: System.Windows.TriggerBase
  isExternal: false
  name: System.Windows.TriggerBase
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.DataTrigger.#ctor
  parent: System.Windows.DataTrigger
  isExternal: false
  name: DataTrigger()
  nameWithType: DataTrigger.DataTrigger()
  fullName: System.Windows.DataTrigger.DataTrigger()
- uid: System.Windows.DataTrigger.Binding
  parent: System.Windows.DataTrigger
  isExternal: false
  name: Binding
  nameWithType: DataTrigger.Binding
  fullName: System.Windows.DataTrigger.Binding
- uid: System.Windows.Data.BindingBase
  parent: System.Windows.Data
  isExternal: false
  name: BindingBase
  nameWithType: BindingBase
  fullName: System.Windows.Data.BindingBase
- uid: System.Windows.DataTrigger.ReceiveMarkupExtension(System.Object,System.Windows.Markup.XamlSetMarkupExtensionEventArgs)
  parent: System.Windows.DataTrigger
  isExternal: false
  name: ReceiveMarkupExtension(Object,XamlSetMarkupExtensionEventArgs)
  nameWithType: DataTrigger.ReceiveMarkupExtension(Object,XamlSetMarkupExtensionEventArgs)
  fullName: System.Windows.DataTrigger.ReceiveMarkupExtension(Object,XamlSetMarkupExtensionEventArgs)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Markup.XamlSetMarkupExtensionEventArgs
  parent: System.Windows.Markup
  isExternal: false
  name: XamlSetMarkupExtensionEventArgs
  nameWithType: XamlSetMarkupExtensionEventArgs
  fullName: System.Windows.Markup.XamlSetMarkupExtensionEventArgs
- uid: System.Windows.DataTrigger.Setters
  parent: System.Windows.DataTrigger
  isExternal: false
  name: Setters
  nameWithType: DataTrigger.Setters
  fullName: System.Windows.DataTrigger.Setters
- uid: System.Windows.SetterBaseCollection
  parent: System.Windows
  isExternal: false
  name: SetterBaseCollection
  nameWithType: SetterBaseCollection
  fullName: System.Windows.SetterBaseCollection
- uid: System.Windows.DataTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)
  parent: System.Windows.DataTrigger
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddChild(Object)
  nameWithType: DataTrigger.System.Windows.Markup.IAddChild.AddChild(Object)
  fullName: System.Windows.DataTrigger.System.Windows.Markup.IAddChild.AddChild(Object)
- uid: System.Windows.DataTrigger.System#Windows#Markup#IAddChild#AddText(System.String)
  parent: System.Windows.DataTrigger
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddText(String)
  nameWithType: DataTrigger.System.Windows.Markup.IAddChild.AddText(String)
  fullName: System.Windows.DataTrigger.System.Windows.Markup.IAddChild.AddText(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.DataTrigger.Value
  parent: System.Windows.DataTrigger
  isExternal: false
  name: Value
  nameWithType: DataTrigger.Value
  fullName: System.Windows.DataTrigger.Value
- uid: System.Windows.DataTrigger.#ctor*
  parent: System.Windows.DataTrigger
  isExternal: false
  name: DataTrigger
  nameWithType: DataTrigger.DataTrigger
- uid: System.Windows.DataTrigger.Binding*
  parent: System.Windows.DataTrigger
  isExternal: false
  name: Binding
  nameWithType: DataTrigger.Binding
- uid: System.Windows.DataTrigger.ReceiveMarkupExtension*
  parent: System.Windows.DataTrigger
  isExternal: false
  name: ReceiveMarkupExtension
  nameWithType: DataTrigger.ReceiveMarkupExtension
- uid: System.Windows.DataTrigger.Setters*
  parent: System.Windows.DataTrigger
  isExternal: false
  name: Setters
  nameWithType: DataTrigger.Setters
- uid: System.Windows.DataTrigger.System#Windows#Markup#IAddChild#AddChild*
  parent: System.Windows.DataTrigger
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddChild
  nameWithType: DataTrigger.System.Windows.Markup.IAddChild.AddChild
- uid: System.Windows.DataTrigger.System#Windows#Markup#IAddChild#AddText*
  parent: System.Windows.DataTrigger
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddText
  nameWithType: DataTrigger.System.Windows.Markup.IAddChild.AddText
- uid: System.Windows.DataTrigger.Value*
  parent: System.Windows.DataTrigger
  isExternal: false
  name: Value
  nameWithType: DataTrigger.Value
