### YamlMime:ManagedReference
items:
- uid: System.Windows.Markup.XamlReader
  id: XamlReader
  children:
  - System.Windows.Markup.XamlReader.#ctor
  - System.Windows.Markup.XamlReader.CancelAsync
  - System.Windows.Markup.XamlReader.GetWpfSchemaContext
  - System.Windows.Markup.XamlReader.Load(System.IO.Stream)
  - System.Windows.Markup.XamlReader.Load(System.Xaml.XamlReader)
  - System.Windows.Markup.XamlReader.Load(System.Xml.XmlReader)
  - System.Windows.Markup.XamlReader.Load(System.IO.Stream,System.Windows.Markup.ParserContext)
  - System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream)
  - System.Windows.Markup.XamlReader.LoadAsync(System.Xml.XmlReader)
  - System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream,System.Windows.Markup.ParserContext)
  - System.Windows.Markup.XamlReader.LoadCompleted
  - System.Windows.Markup.XamlReader.Parse(System.String)
  - System.Windows.Markup.XamlReader.Parse(System.String,System.Windows.Markup.ParserContext)
  langs:
  - csharp
  name: XamlReader
  nameWithType: XamlReader
  fullName: System.Windows.Markup.XamlReader
  type: Class
  summary: "Lê a entrada XAML e cria um gráfico de objeto, utilizando o leitor XAML do WPF predefinido e um escritor de objeto XAML associado."
  remarks: "O síncrona <xref:System.Windows.Markup.XamlReader.Load%2A>métodos são estáticos, mas o assíncrona <xref:System.Windows.Markup.XamlReader.LoadAsync%2A>métodos não são estáticos e requerem uma instância da classe XamlReader a utilizar.</xref:System.Windows.Markup.XamlReader.LoadAsync%2A> </xref:System.Windows.Markup.XamlReader.Load%2A>       O resultado a `Load` métodos é um único objeto, que representa o objeto de raiz de uma árvore de objetos criados ou um gráfico de objeto. Gráficos de objetos que são criados pelas XamlReader normalmente são adicionados à árvore de objetos existentes de uma aplicação WPF em tempo de execução. Caso contrário, o gráfico de objeto novo é considerado desligado para fins de modelo de aplicação WPF. Isto significa que não compor: e não podem ser acedidos através de qualquer um das técnicas de árvore de objetos como aplicado à árvore de objeto principal da aplicação WPF (por exemplo, as APIs <xref:System.Windows.FrameworkElement.FindName%2A>, <xref:System.Windows.LogicalTreeHelper>, <xref:System.Windows.Media.VisualTreeHelper>).</xref:System.Windows.Media.VisualTreeHelper> </xref:System.Windows.LogicalTreeHelper> </xref:System.Windows.FrameworkElement.FindName%2A> Para obter mais informações sobre conceitos de árvore do objeto, consulte [árvores no WPF](~/add/includes/ajax-current-ext-md.md).       XamlReader suporta os seguintes cenários de principais:- **fábrica de clonagem/objeto**: sem mecanismos adicionais, um tipo de referência não pode ser geralmente incluído em mais do que uma posição numa árvore de objeto WPF. (Mecanismos adicionais que oferecem suporte para a partilha ou reutilize no WPF exemplos de objetos que se baseiam em <xref:System.Windows.Freezable>, ou fornece suporte para objetos normalmente partilhável como <xref:System.Windows.Media.Brush>que são referenciadas como um item a partir de um <xref:System.Windows.ResourceDictionary>.)</xref:System.Windows.ResourceDictionary> </xref:System.Windows.Media.Brush> </xref:System.Windows.Freezable> Uma forma de um objeto que já se encontra na árvore de objetos do clone é para serializar o objeto com <xref:System.Windows.Markup.XamlWriter.Save%2A?displayProperty=fullName>.</xref:System.Windows.Markup.XamlWriter.Save%2A?displayProperty=fullName> Em seguida, utilizar a cadeia serializada como entrada para uma chamada para <xref:System.Windows.Markup.XamlReader.Load%2A>, com uma transmissão em fluxo ou <xref:System.Xml.XmlReader>como um intermediário.</xref:System.Xml.XmlReader> </xref:System.Windows.Markup.XamlReader.Load%2A>      - **Construir os objetos com base nas informações de just-in-time**: existem outras formas de ter entrada de enlace dinâmico ou fornecido pelo utilizador alterar o estado de objetos existentes. Por exemplo foi possível utilizar o mesmo valor para definir mais do que uma propriedade ou utilizar o enlace de dados. Mas se tiver um cenário onde mesmo o tipo de objeto para criar só é determinable em tempo de execução ou interação do utilizador, em seguida, criar desse objecto através da criação de uma cadeia para <xref:System.Windows.Markup.XamlReader.Load%2A>entrada, muitas vezes, é uma técnica útil.</xref:System.Windows.Markup.XamlReader.Load%2A>      - **Utilizando técnicas de recursos existente**: O <xref:System.IO.Stream>tipo é utilizado frequentemente no outras estruturas ou tecnologias para transferência de dados ou objetos nos limites da aplicação ou para situações semelhantes.</xref:System.IO.Stream> Em seguida, pode utilizar o <xref:System.IO.Stream>técnicas para armazenar ou obter dados formatado em XAML que acaba por utilizar para criar um objeto como parte da sua aplicação.</xref:System.IO.Stream>      - **Fixo documentos:** a aplicação pode carregar locais ou transferidos documentos XPS para inclusão numa árvore de objetos de aplicações do WPF e IU.      > [!NOTE] > Nesta documentação, por vezes, descreve um gráfico de objeto, por oposição a uma árvore de objetos. Uma relação principal-subordinado strict não de existir sempre as relações de objeto de tempo de execução de uma aplicação do WPF de tempo de execução, pelo que um gráfico de objeto é uma terminologia mais amplamente aplicável. No entanto, porque o WPF também inclui dois conceptualization de árvore diferente APIs (<xref:System.Windows.LogicalTreeHelper>, <xref:System.Windows.Media.VisualTreeHelper>) metaphor a árvore ainda se aplica adequado para a maioria dos casos do mundo real no WPF.</xref:System.Windows.Media.VisualTreeHelper> </xref:System.Windows.LogicalTreeHelper> Da perspetiva de idioma XAML no entanto, o gráfico de objeto é, muitas vezes, a melhor forma de pensar sobre como os objetos são criados fora do XAML, porque o idioma XAML propriamente dito não necessariamente especificar metodologias de classe de programa auxiliar que colocar as relações mais numa estrutura de árvore novamente.      ## Segurança de acesso de código, soltas XAML e XamlReader XAML é uma linguagem de markup que representa diretamente a instanciação do objeto e a execução. Por conseguinte, os elementos criados em XAML de ter a mesma capacidade de interagir com recursos do sistema (rede acesso, / s do sistema de ficheiros, por exemplo) como equivalentes gerado does de código.       [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]suporta o [!INCLUDE[TLA2#tla_net](~/add/includes/tla2sharptla-net-md.md)] framework de segurança [!INCLUDE[TLA#tla_cas](~/add/includes/tlasharptla-cas-md.md)]. Isto significa que [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] conteúdo em execução na zona da internet tem reduzido permissões de execução. &quot;Perder XAML&quot; (páginas de noncompiled XAML interpreta em tempo de carregamento de um visualizador XAML) e [!INCLUDE[TLA#tla_xbap](~/add/includes/tlasharptla-xbap-md.md)] são normalmente executados nesta zona de internet e utilizar o mesmo conjunto de permissões.  No entanto, XAML carregada na aplicação totalmente fidedigna tem o mesmo acesso para os recursos do sistema, como a aplicação de alojamento. Para obter mais informações, consulte [segurança de fidedignidade parcial WPF](~/add/includes/ajax-current-ext-md.md).       As implicações destas instruções para XamlReader é que a estrutura da aplicação têm tomar decisões da confiança sobre o XAML que opte por carregar. Se estiver a carregar o XAML que não é fidedigno, pondere implementar a seus próprios técnica sandboxing para como carregar o gráfico de objeto resultante.       Também pode ser chamado XamlReader por código de fidedignidade parcial. Neste caso, a zona de segurança da Internet é aplicada para segurança de acesso de código. Se nada no XAML carregado é inválido na zona de segurança da Internet, é emitida uma exceção de análise XAML. Em XBAP e outros cenários que são fidedignidade parcial ao nível da plataforma, onde XamlReader faz parte da execução, receberá o mesmo comportamento de exceção de com as chamadas de fidedignidade parcial explícita.      ## WPF XAML, XAML leitores/escritores e controlo de versões de idiomas de XAML [!INCLUDE[xaml2009](~/add/includes/xaml2009-md.md)] inclui funcionalidades de idioma, tais como e. Pode utilizar assinaturas de `Load` ou `Parse` carregar XAML que utiliza estas funcionalidades. No entanto, essas funcionalidades do idioma não são suportadas para XAML que tem de ser compilada através de marcação (tais como o XAML para o **página** compilar a ação de uma aplicação WPF ou qualquer XAML que envolve a tarefa de compilação de marcação nas ações de compilação).       Tipos WPF e a tecnologia WPF suportam em geral conceitos que dependem de acesso para WPF características. Por exemplo, como o WPF implementa propriedades de dependência depende de técnicas internas para a pesquisa de membro de tipo eficiente. Acesso a estas características está ativado por XAML leitura e escrita APIs fornecidas <xref:System.Windows.Markup.XamlWriter>e XamlReader do <xref:System.Windows.Markup>espaço de nomes e assemblagem PresentationFramework.</xref:System.Windows.Markup> </xref:System.Windows.Markup.XamlWriter> No entanto, os leitores XAML de nível inferior e escritores XAML da assemblagem System.Xaml (classes com base no <xref:System.Xaml.XamlReader?displayProperty=fullName>, <xref:System.Xaml.XamlWriter?displayProperty=fullName>) não têm acesso para os aspetos internos WPF.</xref:System.Xaml.XamlWriter?displayProperty=fullName> </xref:System.Xaml.XamlReader?displayProperty=fullName> Não há nenhum dependência do System.Xaml para qualquer assemblagem WPF específicos. Sem acesso para os aspetos internos WPF, leitores de System.Xaml e escritores corretamente não é possível carregar ou guardar WPF todos os tipos ou tipos com base nos tipos WPF. Em particular, os leitores de System.Xaml e escritores não compreende o conceitos, tais como a propriedade de dependência do WPF fazer uma cópia de arquivo de propriedades nem todas as especificações como WPF utiliza estilos, dicionários de recursos e os modelos. Por conseguinte, tem uma opção para que: - Se estiver a carregar os tipos WPF e/ou estiver a utilizar o XAML no formulário BAML de qualquer forma, utilize os leitores de PresentationFramework XAML e escritores XAML.      -Se são não depender de quaisquer tipos WPF ou o formato BAML XAML e não estiver a utilizar do outra específica tecnologia leitor XAML ou implementação de escritor XAML por motivos que são específicos para essa framework, utilize os leitores de System.Xaml XAML e escritores XAML.      ## System.Xaml fazer uma cópia de implementação em .NET 4 XamlReader é a superfície de API possível chamar EndRead para o parser XAML de nível de framework WPF. O analisador XAML subjacente mesmo também efetua o XAML de tempo de execução, carregar e analisar para as aplicações do WPF que o destino [!INCLUDE[net_v30_short](~/add/includes/net-v30-short-md.md)] e [!INCLUDE[net_v35_short](~/add/includes/net-v35-short-md.md)].       Se estiver a segmentar [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)], a API externa é o mesmo, mas as partes da implementação são criadas no [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)] implementação geral de XAML na assemblagem System.Xaml, que melhora muitos dos aspetos técnicos e relatórios de análise XAML. Filtragem [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)] necessariamente envolve incluindo System.Xaml como uma referência e detalhes de implementação, tais como as exceções comunicadas podem ter System.Xaml definido tipos.      <a name=&quot;xamlTextUsage_XamlReader&quot;></a># # Utilização de texto XAML"
  example:
  - "The following example converts a <xref:System.Windows.Controls.Button> into a string using the <xref:System.Windows.Markup.XamlWriter> class.  The string is then loaded back into a <xref:System.Windows.Controls.Button> using the static <xref:System.Windows.Markup.XamlReader.Load%2A> method on the XamlReader class.  \n  \n [!code-cs[xamlreaderwritersnippets#XamlReaderLoadXmlReader](~/add/codesnippet/csharp/XamlReaderWriterSnippets/Window1.xaml.cs#xamlreaderloadxmlreader)]\n [!code-vb[xamlreaderwritersnippets#XamlReaderLoadXmlReader](~/add/codesnippet/visualbasic/xamlreaderwritersnippets/window1.xaml.vb#xamlreaderloadxmlreader)]"
  syntax:
    content: public class XamlReader
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Markup.XamlReader.#ctor
  id: '#ctor'
  parent: System.Windows.Markup.XamlReader
  langs:
  - csharp
  name: XamlReader()
  nameWithType: XamlReader.XamlReader()
  fullName: System.Windows.Markup.XamlReader.XamlReader()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.Markup.XamlReader&quot;> </xref> classe."
  syntax:
    content: public XamlReader ();
    parameters: []
  overload: System.Windows.Markup.XamlReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.XamlReader.CancelAsync
  id: CancelAsync
  parent: System.Windows.Markup.XamlReader
  langs:
  - csharp
  name: CancelAsync()
  nameWithType: XamlReader.CancelAsync()
  fullName: System.Windows.Markup.XamlReader.CancelAsync()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Interrompe a operação assíncrona carga atual, se existir uma operação de carregamento assíncrono pendente."
  remarks: "CancelAsync é uma operação assíncrona; Por conseguinte, algumas carregamento pode ocorrer antes da operação foi abortada."
  syntax:
    content: public void CancelAsync ();
    parameters: []
  overload: System.Windows.Markup.XamlReader.CancelAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.XamlReader.GetWpfSchemaContext
  id: GetWpfSchemaContext
  parent: System.Windows.Markup.XamlReader
  langs:
  - csharp
  name: GetWpfSchemaContext()
  nameWithType: XamlReader.GetWpfSchemaContext()
  fullName: System.Windows.Markup.XamlReader.GetWpfSchemaContext()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Devolve um <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> objeto que representa as definições de contexto do esquema WPF para um <xref href=&quot;System.Windows.Markup.XamlReader&quot;> </xref>."
  syntax:
    content: public static System.Xaml.XamlSchemaContext GetWpfSchemaContext ();
    parameters: []
    return:
      type: System.Xaml.XamlSchemaContext
      description: "A <xref href=&quot;System.Xaml.XamlSchemaContext&quot;> </xref> objeto que representa as definições de contexto do esquema WPF para um <xref href=&quot;System.Windows.Markup.XamlReader&quot;> </xref>."
  overload: System.Windows.Markup.XamlReader.GetWpfSchemaContext*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.XamlReader.Load(System.IO.Stream)
  id: Load(System.IO.Stream)
  parent: System.Windows.Markup.XamlReader
  langs:
  - csharp
  name: Load(Stream)
  nameWithType: XamlReader.Load(Stream)
  fullName: System.Windows.Markup.XamlReader.Load(Stream)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Lê a entrada XAML especificado no <xref:System.IO.Stream>e devolve um <xref:System.Object>que é a raiz da árvore de objetos correspondente.</xref:System.Object> </xref:System.IO.Stream>"
  remarks: ''
  example:
  - "The following example saves a <xref:System.Windows.Controls.Button> into a <xref:System.IO.MemoryStream> using the <xref:System.Windows.Markup.XamlWriter> class. The stream is then loaded back into a <xref:System.Windows.Controls.Button> using the static <xref:System.Windows.Markup.XamlReader.Load%2A> method on the <xref:System.Windows.Markup.XamlReader> class.  \n  \n [!code-cs[XamlReaderWriterSnippets#XamlReaderLoadXmlReader](~/add/codesnippet/csharp/XamlReaderWriterSnippets/Window1.xaml.cs#xamlreaderloadxmlreader)]\n [!code-vb[XamlReaderWriterSnippets#XamlReaderLoadXmlReader](~/add/codesnippet/visualbasic/xamlreaderwritersnippets/window1.xaml.vb#xamlreaderloadxmlreader)]"
  syntax:
    content: public static object Load (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "O XAML para carregar, no formato de fluxo."
    return:
      type: System.Object
      description: "O objeto na raiz da árvore de objetos criados."
  overload: System.Windows.Markup.XamlReader.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Markup.XamlReader.Load(System.Xaml.XamlReader)
  id: Load(System.Xaml.XamlReader)
  parent: System.Windows.Markup.XamlReader
  langs:
  - csharp
  name: Load(XamlReader)
  nameWithType: XamlReader.Load(XamlReader)
  fullName: System.Windows.Markup.XamlReader.Load(XamlReader)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Lê a entrada XAML através de um fornecido <xref href=&quot;System.Xaml.XamlReader&quot;> </xref> e devolve um objeto que é a raiz da árvore de objetos correspondente."
  remarks: "A entrada <xref:System.Xaml.XamlReader>pode ser <xref:System.Windows.Baml2006.Baml2006Reader>.</xref:System.Windows.Baml2006.Baml2006Reader> </xref:System.Xaml.XamlReader> Esta é a forma como pode carregar BAML em tempo de execução, ou para fins de ferramenta de localização."
  syntax:
    content: public static object Load (System.Xaml.XamlReader reader);
    parameters:
    - id: reader
      type: System.Xaml.XamlReader
      description: "A <xref href=&quot;System.Xaml.XamlReader&quot;></xref> object. Isto deve ser inicializada com entrada XAML."
    return:
      type: System.Object
      description: "O objeto que é a raiz da árvore de objetos criados."
  overload: System.Windows.Markup.XamlReader.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Markup.XamlReader.Load(System.Xml.XmlReader)
  id: Load(System.Xml.XmlReader)
  parent: System.Windows.Markup.XamlReader
  langs:
  - csharp
  name: Load(XmlReader)
  nameWithType: XamlReader.Load(XmlReader)
  fullName: System.Windows.Markup.XamlReader.Load(XmlReader)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Lê a entrada XAML especificado no <xref:System.Xml.XmlReader>e devolve um objeto que é a raiz da árvore de objetos correspondente.</xref:System.Xml.XmlReader>"
  remarks: ''
  example:
  - "The following example converts a <xref:System.Windows.Controls.Button> into a string using the <xref:System.Windows.Markup.XamlWriter> class.  The string is then loaded back into a <xref:System.Windows.Controls.Button> using the static <xref:System.Windows.Markup.XamlReader.Load%2A> method on the <xref:System.Windows.Markup.XamlReader> class.  \n  \n [!code-cs[XamlReaderWriterSnippets#XamlReaderLoadXmlReader](~/add/codesnippet/csharp/XamlReaderWriterSnippets/Window1.xaml.cs#xamlreaderloadxmlreader)]\n [!code-vb[XamlReaderWriterSnippets#XamlReaderLoadXmlReader](~/add/codesnippet/visualbasic/xamlreaderwritersnippets/window1.xaml.vb#xamlreaderloadxmlreader)]"
  syntax:
    content: public static object Load (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "O <xref:System.Xml.XmlReader>que já foi carregado o XAML a carregar no formato XML de entrada.</xref:System.Xml.XmlReader>"
    return:
      type: System.Object
      description: "O objeto que é a raiz da árvore de objetos criados."
  overload: System.Windows.Markup.XamlReader.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Markup.XamlReader.Load(System.IO.Stream,System.Windows.Markup.ParserContext)
  id: Load(System.IO.Stream,System.Windows.Markup.ParserContext)
  parent: System.Windows.Markup.XamlReader
  langs:
  - csharp
  name: Load(Stream,ParserContext)
  nameWithType: XamlReader.Load(Stream,ParserContext)
  fullName: System.Windows.Markup.XamlReader.Load(Stream,ParserContext)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Lê a entrada XAML especificado no <xref:System.IO.Stream>e devolve um objeto que é a raiz da árvore de objetos correspondente.</xref:System.IO.Stream>"
  syntax:
    content: public static object Load (System.IO.Stream stream, System.Windows.Markup.ParserContext parserContext);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "O fluxo que contém o XAML de entrada para carregar."
    - id: parserContext
      type: System.Windows.Markup.ParserContext
      description: "Informações de contexto utilizadas pelo parser."
    return:
      type: System.Object
      description: "O objeto que é a raiz da árvore de objetos criados."
  overload: System.Windows.Markup.XamlReader.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>parserContext</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream)
  id: LoadAsync(System.IO.Stream)
  parent: System.Windows.Markup.XamlReader
  langs:
  - csharp
  name: LoadAsync(Stream)
  nameWithType: XamlReader.LoadAsync(Stream)
  fullName: System.Windows.Markup.XamlReader.LoadAsync(Stream)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Lê a entrada XAML especificado no <xref:System.IO.Stream>e devolve a raiz da árvore de objetos correspondente.</xref:System.IO.Stream>"
  remarks: "Uma operação de carregamento XAML assíncrona inicialmente irá devolver um objeto que é puramente o objeto de raiz. No modo assíncrono, continua a XAML, em seguida, análise e os objetos subordinados são preenchidos na raiz de. Este é contrariamente XAML WPF típico de processamento comportamento e a interação com os conceitos WPF da duração do objeto. No interação típico (não-async), todas as propriedades de um objeto, incluindo todas as coleções subordinadas são preenchidas antes de devolver um elemento e relatórios-lo tal como carregado. Esse comportamento equivale a uma metodologia na parte inferior de segurança para a criação da árvore de onde o objeto de raiz é o último objeto fique disponível.       Que normalmente iria atribuir o objeto devolvido para algumas localização na árvore de objetos da sua aplicação WPF, com o conhecimento de que o conteúdo poderá ainda ser preencher e poderá fazer com que as atualizações do esquema incrementais se todo o conteúdo está exposto como parte da IU. Por este motivo, é típico de isolar ou virtualizar os quaisquer objetos no modo assíncrono carregados de XAML e a utilização do Estado de aplicação ou específicos da aplicação lógica para o notificar quando <xref:System.Windows.Markup.XamlReader.LoadCompleted>é processado.</xref:System.Windows.Markup.XamlReader.LoadCompleted>       Para que LoadAsync carregar XAML entrada no modo assíncrono, o elemento de raiz no XAML entrada tem de conter o atributo e o valor `x:SynchronousMode=&quot;Async&quot;`. O valor é tratado como maiúsculas confidenciais. Se a raiz de entrada de XAML não conter `x:SynchronousMode=&quot;Async&quot;`, sem exceção é acionada e a chamada é processada como um carregamento síncronos (consulte <xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%29>).</xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%29>       Apenas uma operação de carregamento assíncrono por instância do <xref:System.Windows.Markup.XamlReader>classe pode ser efetuada num momento.</xref:System.Windows.Markup.XamlReader>  Se mais do que uma operação assíncrona for tentada a mesma instância do <xref:System.Windows.Markup.XamlReader>classe um <xref:System.InvalidOperationException>é emitida.</xref:System.InvalidOperationException> </xref:System.Windows.Markup.XamlReader>"
  syntax:
    content: public object LoadAsync (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "O fluxo que contém o XAML de entrada para carregar."
    return:
      type: System.Object
      description: "O objeto que é a raiz da árvore de objetos criados."
  overload: System.Windows.Markup.XamlReader.LoadAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Várias operações de carga estão pendentes simultaneamente com o mesmo <xref href=&quot;System.Windows.Markup.XamlReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Windows.Markup.XamlReader.LoadAsync(System.Xml.XmlReader)
  id: LoadAsync(System.Xml.XmlReader)
  parent: System.Windows.Markup.XamlReader
  langs:
  - csharp
  name: LoadAsync(XmlReader)
  nameWithType: XamlReader.LoadAsync(XmlReader)
  fullName: System.Windows.Markup.XamlReader.LoadAsync(XmlReader)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Lê a entrada XAML especificado no <xref:System.Xml.XmlReader>e devolve a raiz da árvore de objetos correspondente.</xref:System.Xml.XmlReader>"
  remarks: "Uma operação de carregamento XAML assíncrona inicialmente irá devolver um objeto que é puramente o objeto de raiz. No modo assíncrono, continua a XAML, em seguida, análise e os objetos subordinados são preenchidos na raiz de. Este é contrariamente XAML WPF típico de processamento comportamento e a interação com os conceitos WPF da duração do objeto. No interação típico (não-async), todas as propriedades de um objeto, incluindo todas as coleções subordinadas são preenchidas antes de devolver um elemento e relatórios-lo tal como carregado. Esse comportamento equivale a uma metodologia na parte inferior de segurança para a criação da árvore de onde o objeto de raiz é o último objeto fique disponível.       Que normalmente iria atribuir o objeto devolvido do LoadAsync algumas localização na árvore de objetos da sua aplicação, com o conhecimento de que o conteúdo poderá ainda ser preencher e poderá fazer com que as atualizações do esquema incrementais se todo o conteúdo está exposto como parte da IU. Por este motivo, é típico de isolar ou virtualizar os quaisquer objetos no modo assíncrono carregados de XAML e a utilização do Estado de aplicação ou específicos da aplicação lógica para o notificar quando <xref:System.Windows.Markup.XamlReader.LoadCompleted>é processado.</xref:System.Windows.Markup.XamlReader.LoadCompleted>       Para que LoadAsync carregar XAML de entrada no modo assíncrono, o elemento de raiz na marcação de XAML tem de conter o atributo e o valor `x:SynchronousMode=&quot;Async&quot;`. O valor é tratado como maiúsculas confidenciais. Se a raiz de marcação XAML não conter `x:SynchronousMode=&quot;Async&quot;`, sem exceção é acionada e a chamada em vez disso, é processada como um carregamento síncronos (consulte <xref:System.Windows.Markup.XamlReader.Load%28System.Xml.XmlReader%29>).</xref:System.Windows.Markup.XamlReader.Load%28System.Xml.XmlReader%29>       Apenas uma operação de carregamento assíncrono por instância do <xref:System.Windows.Markup.XamlReader>classe pode ser efetuada num momento.</xref:System.Windows.Markup.XamlReader>  Se mais do que uma operação assíncrona for tentada a mesma instância do <xref:System.Windows.Markup.XamlReader>classe um <xref:System.InvalidOperationException>é emitida.</xref:System.InvalidOperationException> </xref:System.Windows.Markup.XamlReader>"
  syntax:
    content: public object LoadAsync (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "Existente <xref:System.Xml.XmlReader>que tem já carregados/leitura a entrada XAML.</xref:System.Xml.XmlReader>"
    return:
      type: System.Object
      description: "A raiz da árvore de objetos criados."
  overload: System.Windows.Markup.XamlReader.LoadAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Várias operações de carregamento são executadas simultaneamente com o mesmo <xref href=&quot;System.Windows.Markup.XamlReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream,System.Windows.Markup.ParserContext)
  id: LoadAsync(System.IO.Stream,System.Windows.Markup.ParserContext)
  parent: System.Windows.Markup.XamlReader
  langs:
  - csharp
  name: LoadAsync(Stream,ParserContext)
  nameWithType: XamlReader.LoadAsync(Stream,ParserContext)
  fullName: System.Windows.Markup.XamlReader.LoadAsync(Stream,ParserContext)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Lê a entrada XAML especificado no <xref:System.IO.Stream>e devolve a raiz da árvore de objetos correspondente.</xref:System.IO.Stream>"
  remarks: "Uma operação de carregamento XAML assíncrona inicialmente irá devolver um objeto que é puramente o objeto de raiz. No modo assíncrono, continua a XAML, em seguida, análise e os objetos subordinados são preenchidos na raiz de. Este é contrariamente XAML WPF típico de processamento comportamento e a interação com os conceitos WPF da duração do objeto. No interação típico (não-async), todas as propriedades de um objeto, incluindo todas as coleções subordinadas são preenchidas antes de devolver um elemento e relatórios-lo tal como carregado. Esse comportamento equivale a uma metodologia na parte inferior de segurança para a criação da árvore de onde o objeto de raiz é o último objeto fique disponível.       Que normalmente iria atribuir o objeto devolvido para algumas localização na árvore de objetos da sua aplicação, com o conhecimento de que o conteúdo poderá ainda ser preencher e poderá fazer com que as atualizações do esquema incrementais se todo o conteúdo está exposto como parte da IU. Por este motivo, é típico de isolar ou virtualizar os quaisquer objetos no modo assíncrono carregados de XAML e a utilização do Estado de aplicação ou específicos da aplicação lógica para o notificar quando <xref:System.Windows.Markup.XamlReader.LoadCompleted>é processado.</xref:System.Windows.Markup.XamlReader.LoadCompleted>       Ordem de LoadAsync carregar markup no modo assíncrono, o elemento de raiz na marcação de XAML tem de conter o atributo e o valor `x:SynchronousMode=&quot;Async&quot;`. O valor é tratado como maiúsculas confidenciais. Se a raiz de marcação XAML não conter `x:SynchronousMode=&quot;Async&quot;`, sem exceção é acionada e a chamada é processada como um carregamento síncronos (consulte <xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29>).</xref:System.Windows.Markup.XamlReader.Load%28System.IO.Stream%2CSystem.Windows.Markup.ParserContext%29>       Apenas uma operação de carregamento assíncrono por instância do <xref:System.Windows.Markup.XamlReader>classe pode ser efetuada num momento.</xref:System.Windows.Markup.XamlReader>  Se mais do que uma operação assíncrona for tentada a mesma instância do <xref:System.Windows.Markup.XamlReader>classe um <xref:System.InvalidOperationException>é emitida.</xref:System.InvalidOperationException> </xref:System.Windows.Markup.XamlReader>"
  syntax:
    content: public object LoadAsync (System.IO.Stream stream, System.Windows.Markup.ParserContext parserContext);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Um fluxo que contém o XAML de entrada para carregar."
    - id: parserContext
      type: System.Windows.Markup.ParserContext
      description: "Informações de contexto utilizadas pelo parser."
    return:
      type: System.Object
      description: "A raiz da árvore de objetos criados."
  overload: System.Windows.Markup.XamlReader.LoadAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Várias operações de carregamento são executadas simultaneamente com o mesmo <xref href=&quot;System.Windows.Markup.XamlReader&quot;> </xref>."
  platform:
  - net462
- uid: System.Windows.Markup.XamlReader.LoadCompleted
  id: LoadCompleted
  parent: System.Windows.Markup.XamlReader
  langs:
  - csharp
  name: LoadCompleted
  nameWithType: XamlReader.LoadCompleted
  fullName: System.Windows.Markup.XamlReader.LoadCompleted
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Ocorre quando uma operação assíncrona carga for concluída."
  remarks: "LoadCompleted também é desencadeado quando uma operação assíncrona carga interrompe."
  syntax:
    content: public event System.ComponentModel.AsyncCompletedEventHandler LoadCompleted;
    return:
      type: System.ComponentModel.AsyncCompletedEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.XamlReader.Parse(System.String)
  id: Parse(System.String)
  parent: System.Windows.Markup.XamlReader
  langs:
  - csharp
  name: Parse(String)
  nameWithType: XamlReader.Parse(String)
  fullName: System.Windows.Markup.XamlReader.Parse(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Lê a entrada XAML na cadeia de texto especificado e devolve um objeto que corresponde à raiz da marcação especificada."
  remarks: "As chamadas de implementação <xref:System.Windows.Markup.XamlReader.Load%2A>internamente depois de criar um fluxo a partir da cadeia.</xref:System.Windows.Markup.XamlReader.Load%2A> Consulte <xref:System.Windows.Markup.XamlReader.Load%2A>para obter informações adicionais, tais como exceções possíveis.</xref:System.Windows.Markup.XamlReader.Load%2A>"
  syntax:
    content: public static object Parse (string xamlText);
    parameters:
    - id: xamlText
      type: System.String
      description: "A entrada XAML, como uma cadeia de texto único."
    return:
      type: System.Object
      description: "A raiz da árvore de objetos criados."
  overload: System.Windows.Markup.XamlReader.Parse*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.XamlReader.Parse(System.String,System.Windows.Markup.ParserContext)
  id: Parse(System.String,System.Windows.Markup.ParserContext)
  parent: System.Windows.Markup.XamlReader
  langs:
  - csharp
  name: Parse(String,ParserContext)
  nameWithType: XamlReader.Parse(String,ParserContext)
  fullName: System.Windows.Markup.XamlReader.Parse(String,ParserContext)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Lê a marcação XAML na cadeia de texto especificado (através de uma determinada <xref href=&quot;System.Windows.Markup.ParserContext&quot;> </xref>) e devolve um objeto que corresponde à raiz da marcação especificada."
  remarks: "As chamadas de implementação <xref:System.Windows.Markup.XamlReader.Load%2A>internamente depois de criar um fluxo a partir da cadeia.</xref:System.Windows.Markup.XamlReader.Load%2A> Consulte <xref:System.Windows.Markup.XamlReader.Load%2A>para obter informações adicionais, tais como exceções possíveis.</xref:System.Windows.Markup.XamlReader.Load%2A>"
  syntax:
    content: public static object Parse (string xamlText, System.Windows.Markup.ParserContext parserContext);
    parameters:
    - id: xamlText
      type: System.String
      description: "A entrada XAML, como uma cadeia de texto único."
    - id: parserContext
      type: System.Windows.Markup.ParserContext
      description: "Informações de contexto utilizadas pelo parser."
    return:
      type: System.Object
      description: "A raiz da árvore de objetos criados."
  overload: System.Windows.Markup.XamlReader.Parse*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Markup.XamlReader.#ctor
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: XamlReader()
  nameWithType: XamlReader.XamlReader()
  fullName: System.Windows.Markup.XamlReader.XamlReader()
- uid: System.Windows.Markup.XamlReader.CancelAsync
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: CancelAsync()
  nameWithType: XamlReader.CancelAsync()
  fullName: System.Windows.Markup.XamlReader.CancelAsync()
- uid: System.Windows.Markup.XamlReader.GetWpfSchemaContext
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: GetWpfSchemaContext()
  nameWithType: XamlReader.GetWpfSchemaContext()
  fullName: System.Windows.Markup.XamlReader.GetWpfSchemaContext()
- uid: System.Xaml.XamlSchemaContext
  parent: System.Xaml
  isExternal: false
  name: XamlSchemaContext
  nameWithType: XamlSchemaContext
  fullName: System.Xaml.XamlSchemaContext
- uid: System.Windows.Markup.XamlReader.Load(System.IO.Stream)
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: Load(Stream)
  nameWithType: XamlReader.Load(Stream)
  fullName: System.Windows.Markup.XamlReader.Load(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Windows.Markup.XamlReader.Load(System.Xaml.XamlReader)
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: Load(XamlReader)
  nameWithType: XamlReader.Load(XamlReader)
  fullName: System.Windows.Markup.XamlReader.Load(XamlReader)
- uid: System.Xaml.XamlReader
  parent: System.Xaml
  isExternal: false
  name: XamlReader
  nameWithType: XamlReader
  fullName: System.Xaml.XamlReader
- uid: System.Windows.Markup.XamlReader.Load(System.Xml.XmlReader)
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: Load(XmlReader)
  nameWithType: XamlReader.Load(XmlReader)
  fullName: System.Windows.Markup.XamlReader.Load(XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Windows.Markup.XamlReader.Load(System.IO.Stream,System.Windows.Markup.ParserContext)
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: Load(Stream,ParserContext)
  nameWithType: XamlReader.Load(Stream,ParserContext)
  fullName: System.Windows.Markup.XamlReader.Load(Stream,ParserContext)
- uid: System.Windows.Markup.ParserContext
  parent: System.Windows.Markup
  isExternal: false
  name: ParserContext
  nameWithType: ParserContext
  fullName: System.Windows.Markup.ParserContext
- uid: System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream)
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: LoadAsync(Stream)
  nameWithType: XamlReader.LoadAsync(Stream)
  fullName: System.Windows.Markup.XamlReader.LoadAsync(Stream)
- uid: System.Windows.Markup.XamlReader.LoadAsync(System.Xml.XmlReader)
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: LoadAsync(XmlReader)
  nameWithType: XamlReader.LoadAsync(XmlReader)
  fullName: System.Windows.Markup.XamlReader.LoadAsync(XmlReader)
- uid: System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream,System.Windows.Markup.ParserContext)
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: LoadAsync(Stream,ParserContext)
  nameWithType: XamlReader.LoadAsync(Stream,ParserContext)
  fullName: System.Windows.Markup.XamlReader.LoadAsync(Stream,ParserContext)
- uid: System.Windows.Markup.XamlReader.LoadCompleted
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: LoadCompleted
  nameWithType: XamlReader.LoadCompleted
  fullName: System.Windows.Markup.XamlReader.LoadCompleted
- uid: System.ComponentModel.AsyncCompletedEventHandler
  parent: System.ComponentModel
  isExternal: true
  name: AsyncCompletedEventHandler
  nameWithType: AsyncCompletedEventHandler
  fullName: System.ComponentModel.AsyncCompletedEventHandler
- uid: System.Windows.Markup.XamlReader.Parse(System.String)
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: Parse(String)
  nameWithType: XamlReader.Parse(String)
  fullName: System.Windows.Markup.XamlReader.Parse(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Markup.XamlReader.Parse(System.String,System.Windows.Markup.ParserContext)
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: Parse(String,ParserContext)
  nameWithType: XamlReader.Parse(String,ParserContext)
  fullName: System.Windows.Markup.XamlReader.Parse(String,ParserContext)
- uid: System.Windows.Markup.XamlReader.#ctor*
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: XamlReader
  nameWithType: XamlReader.XamlReader
- uid: System.Windows.Markup.XamlReader.CancelAsync*
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: CancelAsync
  nameWithType: XamlReader.CancelAsync
- uid: System.Windows.Markup.XamlReader.GetWpfSchemaContext*
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: GetWpfSchemaContext
  nameWithType: XamlReader.GetWpfSchemaContext
- uid: System.Windows.Markup.XamlReader.Load*
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: Load
  nameWithType: XamlReader.Load
- uid: System.Windows.Markup.XamlReader.LoadAsync*
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: LoadAsync
  nameWithType: XamlReader.LoadAsync
- uid: System.Windows.Markup.XamlReader.Parse*
  parent: System.Windows.Markup.XamlReader
  isExternal: false
  name: Parse
  nameWithType: XamlReader.Parse
