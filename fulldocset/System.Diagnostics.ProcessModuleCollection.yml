### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.ProcessModuleCollection
  id: ProcessModuleCollection
  children:
  - System.Diagnostics.ProcessModuleCollection.#ctor
  - System.Diagnostics.ProcessModuleCollection.#ctor(System.Diagnostics.ProcessModule[])
  - System.Diagnostics.ProcessModuleCollection.Contains(System.Diagnostics.ProcessModule)
  - System.Diagnostics.ProcessModuleCollection.CopyTo(System.Diagnostics.ProcessModule[],System.Int32)
  - System.Diagnostics.ProcessModuleCollection.IndexOf(System.Diagnostics.ProcessModule)
  - System.Diagnostics.ProcessModuleCollection.Item(System.Int32)
  langs:
  - csharp
  name: ProcessModuleCollection
  nameWithType: ProcessModuleCollection
  fullName: System.Diagnostics.ProcessModuleCollection
  type: Class
  summary: "Fornece uma coleção com tipo seguro de <xref href=&quot;System.Diagnostics.ProcessModule&quot;> </xref> objetos."
  remarks: "Um módulo é um ficheiro executável ou uma biblioteca de ligação dinâmica (DLL). Cada processo consiste num ou mais módulos. Pode utilizar esta classe para iterar uma coleção de módulos do processo no sistema. Um módulo é identificado pelo respetivo nome e caminho de ficheiro completamente qualificado."
  syntax:
    content: 'public class ProcessModuleCollection : System.Collections.ReadOnlyCollectionBase'
  inheritance:
  - System.Object
  - System.Collections.ReadOnlyCollectionBase
  implements: []
  inheritedMembers:
  - System.Collections.ReadOnlyCollectionBase.Count
  - System.Collections.ReadOnlyCollectionBase.GetEnumerator
  - System.Collections.ReadOnlyCollectionBase.InnerList
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot
  platform:
  - net462
- uid: System.Diagnostics.ProcessModuleCollection.#ctor
  id: '#ctor'
  parent: System.Diagnostics.ProcessModuleCollection
  langs:
  - csharp
  name: ProcessModuleCollection()
  nameWithType: ProcessModuleCollection.ProcessModuleCollection()
  fullName: System.Diagnostics.ProcessModuleCollection.ProcessModuleCollection()
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Diagnostics.ProcessModuleCollection&quot;> </xref> classe, sem qualquer associado <xref href=&quot;System.Diagnostics.ProcessModule&quot;> </xref> instâncias."
  syntax:
    content: protected ProcessModuleCollection ();
    parameters: []
  overload: System.Diagnostics.ProcessModuleCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.ProcessModuleCollection.#ctor(System.Diagnostics.ProcessModule[])
  id: '#ctor(System.Diagnostics.ProcessModule[])'
  parent: System.Diagnostics.ProcessModuleCollection
  langs:
  - csharp
  name: ProcessModuleCollection(ProcessModule[])
  nameWithType: ProcessModuleCollection.ProcessModuleCollection(ProcessModule[])
  fullName: System.Diagnostics.ProcessModuleCollection.ProcessModuleCollection(ProcessModule[])
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Diagnostics.ProcessModuleCollection&quot;> </xref> classe, utilizando a matriz especificada de <xref href=&quot;System.Diagnostics.ProcessModule&quot;> </xref> instâncias."
  syntax:
    content: public ProcessModuleCollection (System.Diagnostics.ProcessModule[] processModules);
    parameters:
    - id: processModules
      type: System.Diagnostics.ProcessModule[]
      description: "Uma matriz de <xref href=&quot;System.Diagnostics.ProcessModule&quot;> </xref> instâncias com a qual inicializar este <xref href=&quot;System.Diagnostics.ProcessModuleCollection&quot;> </xref> instância."
  overload: System.Diagnostics.ProcessModuleCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.ProcessModuleCollection.Contains(System.Diagnostics.ProcessModule)
  id: Contains(System.Diagnostics.ProcessModule)
  parent: System.Diagnostics.ProcessModuleCollection
  langs:
  - csharp
  name: Contains(ProcessModule)
  nameWithType: ProcessModuleCollection.Contains(ProcessModule)
  fullName: System.Diagnostics.ProcessModuleCollection.Contains(ProcessModule)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Determina se o módulo de processo especificado existe na coleção."
  remarks: "Um módulo é identificado pelo respetivo nome de módulo e o caminho de ficheiro completamente qualificado."
  syntax:
    content: public bool Contains (System.Diagnostics.ProcessModule module);
    parameters:
    - id: module
      type: System.Diagnostics.ProcessModule
      description: "A <xref href=&quot;System.Diagnostics.ProcessModule&quot;> </xref> instância que indica o módulo a localizar nesta coleção."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o módulo existe na coleção; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.ProcessModuleCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.ProcessModuleCollection.CopyTo(System.Diagnostics.ProcessModule[],System.Int32)
  id: CopyTo(System.Diagnostics.ProcessModule[],System.Int32)
  parent: System.Diagnostics.ProcessModuleCollection
  langs:
  - csharp
  name: CopyTo(ProcessModule[],Int32)
  nameWithType: ProcessModuleCollection.CopyTo(ProcessModule[],Int32)
  fullName: System.Diagnostics.ProcessModuleCollection.CopyTo(ProcessModule[],Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Copia uma matriz de <xref href=&quot;System.Diagnostics.ProcessModule&quot;> </xref> instâncias para a coleção, o índice especificado."
  syntax:
    content: public void CopyTo (System.Diagnostics.ProcessModule[] array, int index);
    parameters:
    - id: array
      type: System.Diagnostics.ProcessModule[]
      description: "Uma matriz de <xref href=&quot;System.Diagnostics.ProcessModule&quot;> </xref> instâncias para adicionar à coleção."
    - id: index
      type: System.Int32
      description: "A localização na qual pode adicionar novas instâncias."
  overload: System.Diagnostics.ProcessModuleCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.ProcessModuleCollection.IndexOf(System.Diagnostics.ProcessModule)
  id: IndexOf(System.Diagnostics.ProcessModule)
  parent: System.Diagnostics.ProcessModuleCollection
  langs:
  - csharp
  name: IndexOf(ProcessModule)
  nameWithType: ProcessModuleCollection.IndexOf(ProcessModule)
  fullName: System.Diagnostics.ProcessModuleCollection.IndexOf(ProcessModule)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Fornece a localização de um módulo especificado dentro da coleção."
  syntax:
    content: public int IndexOf (System.Diagnostics.ProcessModule module);
    parameters:
    - id: module
      type: System.Diagnostics.ProcessModule
      description: "O <xref href=&quot;System.Diagnostics.ProcessModule&quot;> </xref> cujo índice é obtido."
    return:
      type: System.Int32
      description: "O índice baseado em zero que define a localização do módulo dentro de <xref href=&quot;System.Diagnostics.ProcessModuleCollection&quot;> </xref>."
  overload: System.Diagnostics.ProcessModuleCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.ProcessModuleCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Diagnostics.ProcessModuleCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: ProcessModuleCollection.Item(Int32)
  fullName: System.Diagnostics.ProcessModuleCollection.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém um índice para iterating sobre o conjunto de módulos do processo."
  syntax:
    content: public System.Diagnostics.ProcessModule this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "O valor de índice baseado em zero do módulo na coleção."
    return:
      type: System.Diagnostics.ProcessModule
      description: "A <xref href=&quot;System.Diagnostics.ProcessModule&quot;> </xref> que indexa os módulos na coleção"
  overload: System.Diagnostics.ProcessModuleCollection.Item*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Collections.ReadOnlyCollectionBase
  isExternal: false
  name: System.Collections.ReadOnlyCollectionBase
- uid: System.Diagnostics.ProcessModuleCollection.#ctor
  parent: System.Diagnostics.ProcessModuleCollection
  isExternal: false
  name: ProcessModuleCollection()
  nameWithType: ProcessModuleCollection.ProcessModuleCollection()
  fullName: System.Diagnostics.ProcessModuleCollection.ProcessModuleCollection()
- uid: System.Diagnostics.ProcessModuleCollection.#ctor(System.Diagnostics.ProcessModule[])
  parent: System.Diagnostics.ProcessModuleCollection
  isExternal: false
  name: ProcessModuleCollection(ProcessModule[])
  nameWithType: ProcessModuleCollection.ProcessModuleCollection(ProcessModule[])
  fullName: System.Diagnostics.ProcessModuleCollection.ProcessModuleCollection(ProcessModule[])
- uid: System.Diagnostics.ProcessModule[]
  parent: System.Diagnostics
  isExternal: false
  name: ProcessModule
  nameWithType: ProcessModule
  fullName: System.Diagnostics.ProcessModule[]
  spec.csharp:
  - uid: System.Diagnostics.ProcessModule
    name: ProcessModule
    nameWithType: ProcessModule
    fullName: ProcessModule[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.ProcessModuleCollection.Contains(System.Diagnostics.ProcessModule)
  parent: System.Diagnostics.ProcessModuleCollection
  isExternal: false
  name: Contains(ProcessModule)
  nameWithType: ProcessModuleCollection.Contains(ProcessModule)
  fullName: System.Diagnostics.ProcessModuleCollection.Contains(ProcessModule)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.ProcessModule
  parent: System.Diagnostics
  isExternal: false
  name: ProcessModule
  nameWithType: ProcessModule
  fullName: System.Diagnostics.ProcessModule
- uid: System.Diagnostics.ProcessModuleCollection.CopyTo(System.Diagnostics.ProcessModule[],System.Int32)
  parent: System.Diagnostics.ProcessModuleCollection
  isExternal: false
  name: CopyTo(ProcessModule[],Int32)
  nameWithType: ProcessModuleCollection.CopyTo(ProcessModule[],Int32)
  fullName: System.Diagnostics.ProcessModuleCollection.CopyTo(ProcessModule[],Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.ProcessModuleCollection.IndexOf(System.Diagnostics.ProcessModule)
  parent: System.Diagnostics.ProcessModuleCollection
  isExternal: false
  name: IndexOf(ProcessModule)
  nameWithType: ProcessModuleCollection.IndexOf(ProcessModule)
  fullName: System.Diagnostics.ProcessModuleCollection.IndexOf(ProcessModule)
- uid: System.Diagnostics.ProcessModuleCollection.Item(System.Int32)
  parent: System.Diagnostics.ProcessModuleCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: ProcessModuleCollection.Item(Int32)
  fullName: System.Diagnostics.ProcessModuleCollection.Item(Int32)
- uid: System.Diagnostics.ProcessModuleCollection.#ctor*
  parent: System.Diagnostics.ProcessModuleCollection
  isExternal: false
  name: ProcessModuleCollection
  nameWithType: ProcessModuleCollection.ProcessModuleCollection
- uid: System.Diagnostics.ProcessModuleCollection.Contains*
  parent: System.Diagnostics.ProcessModuleCollection
  isExternal: false
  name: Contains
  nameWithType: ProcessModuleCollection.Contains
- uid: System.Diagnostics.ProcessModuleCollection.CopyTo*
  parent: System.Diagnostics.ProcessModuleCollection
  isExternal: false
  name: CopyTo
  nameWithType: ProcessModuleCollection.CopyTo
- uid: System.Diagnostics.ProcessModuleCollection.IndexOf*
  parent: System.Diagnostics.ProcessModuleCollection
  isExternal: false
  name: IndexOf
  nameWithType: ProcessModuleCollection.IndexOf
- uid: System.Diagnostics.ProcessModuleCollection.Item*
  parent: System.Diagnostics.ProcessModuleCollection
  isExternal: false
  name: Item
  nameWithType: ProcessModuleCollection.Item
