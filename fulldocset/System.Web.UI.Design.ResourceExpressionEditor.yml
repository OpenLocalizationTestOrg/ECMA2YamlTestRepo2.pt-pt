### YamlMime:ManagedReference
items:
- uid: System.Web.UI.Design.ResourceExpressionEditor
  id: ResourceExpressionEditor
  children:
  - System.Web.UI.Design.ResourceExpressionEditor.#ctor
  - System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)
  - System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)
  langs:
  - csharp
  name: ResourceExpressionEditor
  nameWithType: ResourceExpressionEditor
  fullName: System.Web.UI.Design.ResourceExpressionEditor
  type: Class
  summary: "Provides properties and methods for evaluating and editing a resource expression at design time."
  remarks: "The ResourceExpressionEditor class derives from the <xref:System.Web.UI.Design.ExpressionEditor> class and provides an implementation for evaluating and associating a resource reference with a control property at design time. For example, you can bind the value of a control property to the resource expression `Resources:submitText`, which indicates that the control property value is set using the resource named `submitText`.       A visual designer host, such as [!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)], uses the ResourceExpressionEditor class to specify a resource class, key, and designer default value for a resource expression, and then evaluate the selected resource expression for design-time rendering.       When you browse the <xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A> property for a control in the design-time properties grid, the visual designer displays a dialog box to set expressions that provide the run-time value for a control property. You can select the expression type based on a list of expression prefixes. When you select the **Resources** expression prefix in the list, the visual designer uses the ResourceExpressionEditor methods to set, evaluate, and convert the expression based on the resource expression syntax. The visual designer uses the evaluated expression result to assign control property values that are rendered on the design surface.       The base <xref:System.Web.Configuration.ExpressionBuilder.ExpressionPrefix%2A?displayProperty=fullName> property for a <xref:System.Web.Compilation.ResourceExpressionBuilder> returns the string `Resources`. The <xref:System.Web.Compilation.ResourceExpressionBuilder> class is associated with the expression prefix `Resources` and the ResourceExpressionEditor implementation.       The <xref:System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression%2A> method evaluates an input resource expression. The <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> method returns the <xref:System.Web.UI.Design.ExpressionEditorSheet> implementation that is used to select the resource name, class, and designer default value, and to form a resource expression from the selected resource values."
  example:
  - "The following code example demonstrates how to bind the <xref:System.Web.UI.WebControls.HyperLink.Text%2A> property of a <xref:System.Web.UI.WebControls.HyperLink> control to a resource expression using the ResourceExpressionEditor class.  \n  \n1.  In a Web Forms project, add a new resource file named Strings.resx to the App_LocalResources directory.  \n  \n2.  Add a string named myLinkText to the Strings.resx resource file, and then set the value to the text for a <xref:System.Web.UI.WebControls.HyperLink> control.  \n  \n     For example, set the `myLinkText` string value to `This is a good link`.  \n  \n3.  In a Web Forms page, add a <xref:System.Web.UI.WebControls.HyperLink> control.  \n  \n4.  For the `Hyperlink` control, in Properties, click **Expressions**, and then click the ellipsis button (**...**).  \n  \n     The `<Hyperlinkname>`**Expressions** dialog box appears.  \n  \n5.  Under **Bindable properties**, click **Text**, and then in the **Expression type** list, enter **Resources**.  \n  \n     The resource expression properties that are defined by the <xref:System.Web.UI.Design.ResourceExpressionEditorSheet> class appear.  \n  \n6.  Under **Expression Properties** set **ClassName** to **Strings**, which is the class name for the compiled Strings.resx resource file and set **ResourceKey** to **myLinkText**, which is the string name in Strings.resx.  \n  \n The visual designer uses the ResourceExpressionEditor to assign the resource expression for the `Text` property. The following .aspx source shows an example of a property value that is set by using a resource expression.  \n  \n [!code-vb[ControlsUsingExpressions#3](~/add/codesnippet/visualbasic/t-system.web.ui.design.r_0_1.aspx)]\n [!code-cs[ControlsUsingExpressions#3](~/add/codesnippet/csharp/t-system.web.ui.design.r_0_1.aspx)]\n [!code-xml[ControlsUsingExpressions#3](~/add/codesnippet/xml/t-system.web.ui.design.r_0_1.xml)]"
  syntax:
    content: 'public class ResourceExpressionEditor : System.Web.UI.Design.ExpressionEditor'
  inheritance:
  - System.Object
  - System.Web.UI.Design.ExpressionEditor
  implements: []
  inheritedMembers:
  - System.Web.UI.Design.ExpressionEditor.ExpressionPrefix
  - System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.String,System.IServiceProvider)
  - System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.Type,System.IServiceProvider)
  platform:
  - net462
- uid: System.Web.UI.Design.ResourceExpressionEditor.#ctor
  id: '#ctor'
  parent: System.Web.UI.Design.ResourceExpressionEditor
  langs:
  - csharp
  name: ResourceExpressionEditor()
  nameWithType: ResourceExpressionEditor.ResourceExpressionEditor()
  fullName: System.Web.UI.Design.ResourceExpressionEditor.ResourceExpressionEditor()
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "Initializes a new instance of a <xref href=&quot;System.Web.UI.Design.ResourceExpressionEditor&quot;></xref> class."
  remarks: "A <xref:System.Web.UI.Design.ResourceExpressionEditor> object is configured by the base class together with an <xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A> property set to `Resources`."
  syntax:
    content: public ResourceExpressionEditor ();
    parameters: []
  overload: System.Web.UI.Design.ResourceExpressionEditor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)
  id: EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)
  parent: System.Web.UI.Design.ResourceExpressionEditor
  langs:
  - csharp
  name: EvaluateExpression(String,Object,Type,IServiceProvider)
  nameWithType: ResourceExpressionEditor.EvaluateExpression(String,Object,Type,IServiceProvider)
  fullName: System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression(String,Object,Type,IServiceProvider)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "Evaluates a resource expression and provides the design-time value for a control property."
  remarks: "The EvaluateExpression method looks up the resource that is specified by `expression`, and then returns the resource.       The visual designer uses the EvaluateExpression method to evaluate a resource expression and provide the design-time value for an associated control property. At run time, the page parser uses the <xref:System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression%2A> and <xref:System.Web.Compilation.ResourceExpressionBuilder.GetCodeExpression%2A> methods of the corresponding <xref:System.Web.Compilation.ResourceExpressionBuilder> implementation to evaluate an expression and provide the run-time value for an associated control property.       The visual designer uses the <xref:System.Web.Compilation.ResourceExpressionBuilder.ParseExpression%2A> method to parse the expression string at design time, and then calls the EvaluateExpression method with the parsed expression data."
  syntax:
    content: public override object EvaluateExpression (string expression, object parseTimeData, Type propertyType, IServiceProvider serviceProvider);
    parameters:
    - id: expression
      type: System.String
      description: "A resource expression to evaluate. `expression` does not include the <xref uid=&quot;langword_csharp_Resources&quot; name=&quot;Resources&quot; href=&quot;&quot;></xref> expression prefix."
    - id: parseTimeData
      type: System.Object
      description: "An object supplying additional parse data, in the form of a <xref href=&quot;System.Web.Compilation.ResourceExpressionFields&quot;></xref> value."
    - id: propertyType
      type: System.Type
      description: "The type of the control property."
    - id: serviceProvider
      type: System.IServiceProvider
      description: "A service provider implementation supplied by the designer host, used to obtain additional design-time services."
    return:
      type: System.Object
      description: "The object referenced by the evaluated expression string, if the expression evaluation succeeded; otherwise, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)
  id: GetExpressionEditorSheet(System.String,System.IServiceProvider)
  parent: System.Web.UI.Design.ResourceExpressionEditor
  langs:
  - csharp
  name: GetExpressionEditorSheet(String,IServiceProvider)
  nameWithType: ResourceExpressionEditor.GetExpressionEditorSheet(String,IServiceProvider)
  fullName: System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet(String,IServiceProvider)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "Returns a resource expression editor sheet that is initialized with the input expression string and service provider implementation."
  remarks: "The GetExpressionEditorSheet method returns an expression editor sheet implementation for resource expressions. The visual designer host uses the expression editor sheet in its expressions dialog box."
  syntax:
    content: public override System.Web.UI.Design.ExpressionEditorSheet GetExpressionEditorSheet (string expression, IServiceProvider serviceProvider);
    parameters:
    - id: expression
      type: System.String
      description: "A resource expression, used to initialize the expression editor sheet."
    - id: serviceProvider
      type: System.IServiceProvider
      description: "A service provider implementation supplied by the designer host, used to initialize the expression editor sheet."
    return:
      type: System.Web.UI.Design.ExpressionEditorSheet
      description: "A <xref href=&quot;System.Web.UI.Design.ResourceExpressionEditorSheet&quot;></xref> that defines the resource expression properties."
  overload: System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.Design.ExpressionEditor
  isExternal: false
  name: System.Web.UI.Design.ExpressionEditor
- uid: System.Web.UI.Design.ResourceExpressionEditor.#ctor
  parent: System.Web.UI.Design.ResourceExpressionEditor
  isExternal: false
  name: ResourceExpressionEditor()
  nameWithType: ResourceExpressionEditor.ResourceExpressionEditor()
  fullName: System.Web.UI.Design.ResourceExpressionEditor.ResourceExpressionEditor()
- uid: System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)
  parent: System.Web.UI.Design.ResourceExpressionEditor
  isExternal: false
  name: EvaluateExpression(String,Object,Type,IServiceProvider)
  nameWithType: ResourceExpressionEditor.EvaluateExpression(String,Object,Type,IServiceProvider)
  fullName: System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression(String,Object,Type,IServiceProvider)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)
  parent: System.Web.UI.Design.ResourceExpressionEditor
  isExternal: false
  name: GetExpressionEditorSheet(String,IServiceProvider)
  nameWithType: ResourceExpressionEditor.GetExpressionEditorSheet(String,IServiceProvider)
  fullName: System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet(String,IServiceProvider)
- uid: System.Web.UI.Design.ExpressionEditorSheet
  parent: System.Web.UI.Design
  isExternal: false
  name: ExpressionEditorSheet
  nameWithType: ExpressionEditorSheet
  fullName: System.Web.UI.Design.ExpressionEditorSheet
- uid: System.Web.UI.Design.ResourceExpressionEditor.#ctor*
  parent: System.Web.UI.Design.ResourceExpressionEditor
  isExternal: false
  name: ResourceExpressionEditor
  nameWithType: ResourceExpressionEditor.ResourceExpressionEditor
- uid: System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression*
  parent: System.Web.UI.Design.ResourceExpressionEditor
  isExternal: false
  name: EvaluateExpression
  nameWithType: ResourceExpressionEditor.EvaluateExpression
- uid: System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet*
  parent: System.Web.UI.Design.ResourceExpressionEditor
  isExternal: false
  name: GetExpressionEditorSheet
  nameWithType: ResourceExpressionEditor.GetExpressionEditorSheet
