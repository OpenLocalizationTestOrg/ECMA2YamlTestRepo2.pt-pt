### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.DataKeyArray
  id: DataKeyArray
  children:
  - System.Web.UI.WebControls.DataKeyArray.#ctor(System.Collections.ArrayList)
  - System.Web.UI.WebControls.DataKeyArray.CopyTo(System.Web.UI.WebControls.DataKey[],System.Int32)
  - System.Web.UI.WebControls.DataKeyArray.Count
  - System.Web.UI.WebControls.DataKeyArray.GetEnumerator
  - System.Web.UI.WebControls.DataKeyArray.IsReadOnly
  - System.Web.UI.WebControls.DataKeyArray.IsSynchronized
  - System.Web.UI.WebControls.DataKeyArray.Item(System.Int32)
  - System.Web.UI.WebControls.DataKeyArray.SyncRoot
  - System.Web.UI.WebControls.DataKeyArray.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Web.UI.WebControls.DataKeyArray.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.DataKeyArray.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataKeyArray.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.DataKeyArray.System#Web#UI#IStateManager#TrackViewState
  langs:
  - csharp
  name: DataKeyArray
  nameWithType: DataKeyArray
  fullName: System.Web.UI.WebControls.DataKeyArray
  type: Class
  summary: "Represents a collection of <xref href=&quot;System.Web.UI.WebControls.DataKey&quot;></xref> objects. This class cannot be inherited."
  remarks: "The DataKeyArray class is used to store and manage a collection of <xref:System.Web.UI.WebControls.DataKey> objects. A <xref:System.Web.UI.WebControls.DataKey> object represents the primary key of a record in a data-bound control. In general, data-bound controls that display multiple records (such as the <xref:System.Web.UI.WebControls.GridView> control) use a DataKeyArray object to store the <xref:System.Web.UI.WebControls.DataKey> objects for the records displayed in the control.       The DataKeyArray class supports several ways to access the items in the collection:      -   Use the <xref:System.Web.UI.WebControls.DataKeyArray.Item%2A> indexer to directly retrieve a <xref:System.Web.UI.WebControls.DataKey> object from the collection at a specific zero-based index.      -   Use the <xref:System.Web.UI.WebControls.DataKeyArray.GetEnumerator%2A> method to retrieve an enumerator that can be used to iterate through the collection.      -   Use the <xref:System.Web.UI.WebControls.DataKeyArray.CopyTo%2A> method to copy the items in the collection into an array, which can then be used to access the items in the collection.       To determine the total number of items in the collection, use the <xref:System.Web.UI.WebControls.DataKeyArray.Count%2A> property."
  example:
  - "The following code example demonstrates how to use the indexer to retrieve a <xref:System.Web.UI.WebControls.DataKey> object from a DataKeyArray collection.  \n  \n [!code-vb[DataKeyArrayItem#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_374_1.aspx)]\n [!code-cs[DataKeyArrayItem#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_374_1.aspx)]  \n  \n The following code example demonstrates how to iterate through a DataKeyArray collection.  \n  \n [!code-vb[DataKeyArray#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_374_2.aspx)]\n [!code-cs[DataKeyArray#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_374_2.aspx)]"
  syntax:
    content: 'public sealed class DataKeyArray : System.Collections.ICollection, System.Web.UI.IStateManager'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  - System.Web.UI.IStateManager
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataKeyArray.#ctor(System.Collections.ArrayList)
  id: '#ctor(System.Collections.ArrayList)'
  parent: System.Web.UI.WebControls.DataKeyArray
  langs:
  - csharp
  name: DataKeyArray(ArrayList)
  nameWithType: DataKeyArray.DataKeyArray(ArrayList)
  fullName: System.Web.UI.WebControls.DataKeyArray.DataKeyArray(ArrayList)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.UI.WebControls.DataKeyArray&quot;></xref> class."
  remarks: "Use this constructor to initialize a new instance of the <xref:System.Web.UI.WebControls.DataKeyArray> class using the specified <xref:System.Collections.ArrayList> object. The <xref:System.Collections.ArrayList> object contains the <xref:System.Web.UI.WebControls.DataKey> objects with which to populate the collection."
  syntax:
    content: public DataKeyArray (System.Collections.ArrayList keys);
    parameters:
    - id: keys
      type: System.Collections.ArrayList
      description: "An <xref href=&quot;System.Collections.ArrayList&quot;></xref> of <xref href=&quot;System.Web.UI.WebControls.DataKey&quot;></xref> objects with which to populate the collection."
  overload: System.Web.UI.WebControls.DataKeyArray.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataKeyArray.CopyTo(System.Web.UI.WebControls.DataKey[],System.Int32)
  id: CopyTo(System.Web.UI.WebControls.DataKey[],System.Int32)
  parent: System.Web.UI.WebControls.DataKeyArray
  langs:
  - csharp
  name: CopyTo(DataKey[],Int32)
  nameWithType: DataKeyArray.CopyTo(DataKey[],Int32)
  fullName: System.Web.UI.WebControls.DataKeyArray.CopyTo(DataKey[],Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Copies all the items from this collection to the specified array of <xref href=&quot;System.Web.UI.WebControls.DataKey&quot;></xref> objects, starting at the specified index in the array."
  remarks: "Use the CopyTo method to copy the items from the collection into the specified array, starting at the specified index. The array can then be used to access the items in the collection.      > [!NOTE] >  You must use a zero-based array for the `array` parameter."
  example:
  - "The following code example demonstrates how to use the CopyTo method to copy the <xref:System.Web.UI.WebControls.DataKey> objects from a <xref:System.Web.UI.WebControls.DataKeyArray> collection to an array of <xref:System.Web.UI.WebControls.DataKey> objects.  \n  \n [!code-vb[DataKeyArrayItem#1](~/add/codesnippet/visualbasic/eb3151d0-ba45-48b1-823b-_1.aspx)]\n [!code-cs[DataKeyArrayItem#1](~/add/codesnippet/csharp/eb3151d0-ba45-48b1-823b-_1.aspx)]"
  syntax:
    content: public void CopyTo (System.Web.UI.WebControls.DataKey[] array, int index);
    parameters:
    - id: array
      type: System.Web.UI.WebControls.DataKey[]
      description: "A zero-based array of <xref href=&quot;System.Web.UI.WebControls.DataKey&quot;></xref> objects that receives the copied items from the collection."
    - id: index
      type: System.Int32
      description: "The first index in the specified array to receive the copied contents."
  overload: System.Web.UI.WebControls.DataKeyArray.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataKeyArray.Count
  id: Count
  parent: System.Web.UI.WebControls.DataKeyArray
  langs:
  - csharp
  name: Count
  nameWithType: DataKeyArray.Count
  fullName: System.Web.UI.WebControls.DataKeyArray.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets the number of items in the collection."
  remarks: "Use the Count property to determine the number of items in the collection. The Count property is commonly used when iterating through the collection to determine its upper bound. The Count property is also commonly used to determine whether a collection is empty."
  example:
  - "The following code example demonstrates how to use the Count property to determine whether a <xref:System.Web.UI.WebControls.DataKeyArray> collection is empty.  \n  \n [!code-vb[DataKeyArrayGetEnumerator#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1232_1.aspx)]\n [!code-cs[DataKeyArrayGetEnumerator#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1232_1.aspx)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "The number of items in the collection."
  overload: System.Web.UI.WebControls.DataKeyArray.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataKeyArray.GetEnumerator
  id: GetEnumerator
  parent: System.Web.UI.WebControls.DataKeyArray
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: DataKeyArray.GetEnumerator()
  fullName: System.Web.UI.WebControls.DataKeyArray.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Returns an enumerator that contains all <xref href=&quot;System.Web.UI.WebControls.DataKey&quot;></xref> objects in the collection."
  remarks: "Use the GetEnumerator method to get an enumerator that can be iterated through linearly to access each item in the collection. To access the item at the current position in the enumerator, use the <xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName> property. Use the <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName> method to move to the next item in the collection. To move the enumerator to its initial position, use the <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName> method.      > [!NOTE] >  When you initially get the enumerator or use the <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName> method to move the enumerator to the first item in the collection, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName> method. Otherwise, the item represented by the <xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName> property is undefined."
  example:
  - "The following code example demonstrates how to iterate through the enumerator created by the GetEnumerator method.  \n  \n [!code-vb[DataKeyArrayGetEnumerator#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_125_1.aspx)]\n [!code-cs[DataKeyArrayGetEnumerator#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_125_1.aspx)]"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "An &lt;xref:System.Collections.IEnumerator?displayProperty=fullName&gt;-implemented object that contains all <xref href=&quot;System.Web.UI.WebControls.DataKey&quot;></xref> objects in the collection."
  overload: System.Web.UI.WebControls.DataKeyArray.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataKeyArray.IsReadOnly
  id: IsReadOnly
  parent: System.Web.UI.WebControls.DataKeyArray
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: DataKeyArray.IsReadOnly
  fullName: System.Web.UI.WebControls.DataKeyArray.IsReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets a value indicating whether the items in the collection can be modified."
  remarks: "Use the IsReadOnly property to determine whether the items in the <xref:System.Web.UI.WebControls.DataKeyArray> collection can be modified.      > [!NOTE] >  This property has been overridden to always return `false`, to indicate that the <xref:System.Web.UI.WebControls.DataKey> objects in the <xref:System.Web.UI.WebControls.DataKeyArray> object can be added or removed. The <xref:System.Web.UI.WebControls.DataKey> objects themselves cannot be changed."
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> in all cases."
  overload: System.Web.UI.WebControls.DataKeyArray.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataKeyArray.IsSynchronized
  id: IsSynchronized
  parent: System.Web.UI.WebControls.DataKeyArray
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: DataKeyArray.IsSynchronized
  fullName: System.Web.UI.WebControls.DataKeyArray.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets a value indicating whether the <xref href=&quot;System.Web.UI.WebControls.DataKeyArray&quot;></xref> collection is synchronized (thread safe)."
  remarks: "Use the IsSynchronized property to determine whether the <xref:System.Web.UI.WebControls.DataKeyArray> object is thread safe.      > [!NOTE] >  This property has been overridden to always return `false` to indicate that the <xref:System.Web.UI.WebControls.DataKeyArray> object is not thread safe.       For more information on the IsSynchronized property, see the <xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName> property of the <xref:System.Collections.ICollection?displayProperty=fullName> interface."
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> in all cases."
  overload: System.Web.UI.WebControls.DataKeyArray.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataKeyArray.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.WebControls.DataKeyArray
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DataKeyArray.Item(Int32)
  fullName: System.Web.UI.WebControls.DataKeyArray.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets the <xref href=&quot;System.Web.UI.WebControls.DataKey&quot;></xref> object from the collection at the specified index."
  remarks: "Use this indexer to retrieve a <xref:System.Web.UI.WebControls.DataKey> object from the collection at the specified index, using array notation. This property is read-only."
  example:
  - "The following code example demonstrates how to use the indexer to retrieve a <xref:System.Web.UI.WebControls.DataKey> object from a <xref:System.Web.UI.WebControls.DataKeyArray> collection.  \n  \n [!code-vb[DataKeyArrayItem#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_324_1.aspx)]\n [!code-cs[DataKeyArrayItem#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_324_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.DataKey this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "The index of the <xref href=&quot;System.Web.UI.WebControls.DataKey&quot;></xref> to retrieve from the collection."
    return:
      type: System.Web.UI.WebControls.DataKey
      description: "The <xref href=&quot;System.Web.UI.WebControls.DataKey&quot;></xref> at the specified index in the collection."
  overload: System.Web.UI.WebControls.DataKeyArray.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataKeyArray.SyncRoot
  id: SyncRoot
  parent: System.Web.UI.WebControls.DataKeyArray
  langs:
  - csharp
  name: SyncRoot
  nameWithType: DataKeyArray.SyncRoot
  fullName: System.Web.UI.WebControls.DataKeyArray.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets the object used to synchronize access to the collection."
  remarks: "Use the SyncRoot property to get an object that can be used to synchronize access to the collection. The object returned in this implementation is the <xref:System.Web.UI.WebControls.DataKeyArray> object itself.       For more information on the SyncRoot property, see the <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName> property of the <xref:System.Collections.ICollection?displayProperty=fullName> interface."
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "An <xref:System.Object> that can be used to synchronize access to the collection."
  overload: System.Web.UI.WebControls.DataKeyArray.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataKeyArray.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Web.UI.WebControls.DataKeyArray
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: DataKeyArray.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.DataKeyArray.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Copies all the items from this collection to the specified &lt;xref:System.Array?displayProperty=fullName&gt;, starting at the specified index in the &lt;xref:System.Array?displayProperty=fullName&gt;."
  remarks: "This implementation of the ICollection.CopyTo method is a helper method used by the <xref:System.Web.UI.WebControls.DataKeyArray> class to copy the items in the <xref:System.Web.UI.WebControls.DataKeyArray> collection into the specified <xref:System.Array?displayProperty=fullName>, starting at the specified index. The <xref:System.Array?displayProperty=fullName> can then be used to access the items in the collection.      > [!NOTE] >  You must use a zero-based <xref:System.Array?displayProperty=fullName> for the `array` parameter."
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "A zero-based &lt;xref:System.Array?displayProperty=fullName&gt; that receives the copied items from the collection."
    - id: index
      type: System.Int32
      description: "The first index in the specified &lt;xref:System.Array?displayProperty=fullName&gt; to receive the copied contents."
  overload: System.Web.UI.WebControls.DataKeyArray.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataKeyArray.System#Web#UI#IStateManager#IsTrackingViewState
  id: System#Web#UI#IStateManager#IsTrackingViewState
  isEii: true
  parent: System.Web.UI.WebControls.DataKeyArray
  langs:
  - csharp
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: DataKeyArray.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.DataKeyArray.System.Web.UI.IStateManager.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets a value indicating whether the <xref href=&quot;System.Web.UI.WebControls.DataKeyArray&quot;></xref> object is tracking its view-state changes."
  remarks: "The IStateManager.IsTrackingViewState property is used to determine whether the <xref:System.Web.UI.WebControls.DataKeyArray> object is tracking its view-state changes.      > [!NOTE] >  This property is used primarily by control developers."
  syntax:
    content: bool System.Web.UI.IStateManager.IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to indicate that the <xref href=&quot;System.Web.UI.WebControls.DataKeyArray&quot;></xref> is tracking its view-state changes; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.DataKeyArray.System#Web#UI#IStateManager#IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataKeyArray.System#Web#UI#IStateManager#LoadViewState(System.Object)
  id: System#Web#UI#IStateManager#LoadViewState(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.DataKeyArray
  langs:
  - csharp
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: DataKeyArray.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.DataKeyArray.System.Web.UI.IStateManager.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Loads the previously saved view state of the <xref href=&quot;System.Web.UI.WebControls.DataKeyArray&quot;></xref> object."
  remarks: "The IStateManager.LoadViewState method is used to load the previously saved view state of the <xref:System.Web.UI.WebControls.DataKeyArray> object."
  syntax:
    content: void IStateManager.LoadViewState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "An <xref:System.Object> that represents the state of the <xref href=&quot;System.Web.UI.WebControls.DataKeyArray&quot;></xref>."
  overload: System.Web.UI.WebControls.DataKeyArray.System#Web#UI#IStateManager#LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataKeyArray.System#Web#UI#IStateManager#SaveViewState
  id: System#Web#UI#IStateManager#SaveViewState
  isEii: true
  parent: System.Web.UI.WebControls.DataKeyArray
  langs:
  - csharp
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: DataKeyArray.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.DataKeyArray.System.Web.UI.IStateManager.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Saves the current view state of the <xref href=&quot;System.Web.UI.WebControls.DataKeyArray&quot;></xref> object."
  remarks: "The IStateManager.SaveViewState method is a helper method used by the <xref:System.Web.UI.WebControls.DataKeyArray> class to save the state of the object."
  syntax:
    content: object IStateManager.SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "An <xref:System.Object> that contains the saved state of the <xref href=&quot;System.Web.UI.WebControls.DataKeyArray&quot;></xref>."
  overload: System.Web.UI.WebControls.DataKeyArray.System#Web#UI#IStateManager#SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataKeyArray.System#Web#UI#IStateManager#TrackViewState
  id: System#Web#UI#IStateManager#TrackViewState
  isEii: true
  parent: System.Web.UI.WebControls.DataKeyArray
  langs:
  - csharp
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: DataKeyArray.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.DataKeyArray.System.Web.UI.IStateManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Marks the starting point at which to begin tracking and saving view-state changes to the <xref href=&quot;System.Web.UI.WebControls.DataKeyArray&quot;></xref> object."
  remarks: "This method is overridden to mark the starting point at which to begin tracking and saving changes to the <xref:System.Web.UI.WebControls.DataKeyArray> object as part of the object&quot;s view state."
  syntax:
    content: void IStateManager.TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.DataKeyArray.System#Web#UI#IStateManager#TrackViewState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.WebControls.DataKeyArray.#ctor(System.Collections.ArrayList)
  parent: System.Web.UI.WebControls.DataKeyArray
  isExternal: false
  name: DataKeyArray(ArrayList)
  nameWithType: DataKeyArray.DataKeyArray(ArrayList)
  fullName: System.Web.UI.WebControls.DataKeyArray.DataKeyArray(ArrayList)
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Web.UI.WebControls.DataKeyArray.CopyTo(System.Web.UI.WebControls.DataKey[],System.Int32)
  parent: System.Web.UI.WebControls.DataKeyArray
  isExternal: false
  name: CopyTo(DataKey[],Int32)
  nameWithType: DataKeyArray.CopyTo(DataKey[],Int32)
  fullName: System.Web.UI.WebControls.DataKeyArray.CopyTo(DataKey[],Int32)
- uid: System.Web.UI.WebControls.DataKey[]
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataKey
  nameWithType: DataKey
  fullName: System.Web.UI.WebControls.DataKey[]
  spec.csharp:
  - uid: System.Web.UI.WebControls.DataKey
    name: DataKey
    nameWithType: DataKey
    fullName: DataKey[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.DataKeyArray.Count
  parent: System.Web.UI.WebControls.DataKeyArray
  isExternal: false
  name: Count
  nameWithType: DataKeyArray.Count
  fullName: System.Web.UI.WebControls.DataKeyArray.Count
- uid: System.Web.UI.WebControls.DataKeyArray.GetEnumerator
  parent: System.Web.UI.WebControls.DataKeyArray
  isExternal: false
  name: GetEnumerator()
  nameWithType: DataKeyArray.GetEnumerator()
  fullName: System.Web.UI.WebControls.DataKeyArray.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.UI.WebControls.DataKeyArray.IsReadOnly
  parent: System.Web.UI.WebControls.DataKeyArray
  isExternal: false
  name: IsReadOnly
  nameWithType: DataKeyArray.IsReadOnly
  fullName: System.Web.UI.WebControls.DataKeyArray.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.DataKeyArray.IsSynchronized
  parent: System.Web.UI.WebControls.DataKeyArray
  isExternal: false
  name: IsSynchronized
  nameWithType: DataKeyArray.IsSynchronized
  fullName: System.Web.UI.WebControls.DataKeyArray.IsSynchronized
- uid: System.Web.UI.WebControls.DataKeyArray.Item(System.Int32)
  parent: System.Web.UI.WebControls.DataKeyArray
  isExternal: false
  name: Item(Int32)
  nameWithType: DataKeyArray.Item(Int32)
  fullName: System.Web.UI.WebControls.DataKeyArray.Item(Int32)
- uid: System.Web.UI.WebControls.DataKey
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataKey
  nameWithType: DataKey
  fullName: System.Web.UI.WebControls.DataKey
- uid: System.Web.UI.WebControls.DataKeyArray.SyncRoot
  parent: System.Web.UI.WebControls.DataKeyArray
  isExternal: false
  name: SyncRoot
  nameWithType: DataKeyArray.SyncRoot
  fullName: System.Web.UI.WebControls.DataKeyArray.SyncRoot
- uid: System.Web.UI.WebControls.DataKeyArray.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.WebControls.DataKeyArray
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: DataKeyArray.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.DataKeyArray.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Web.UI.WebControls.DataKeyArray.System#Web#UI#IStateManager#IsTrackingViewState
  parent: System.Web.UI.WebControls.DataKeyArray
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: DataKeyArray.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.DataKeyArray.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.DataKeyArray.System#Web#UI#IStateManager#LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.DataKeyArray
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: DataKeyArray.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.DataKeyArray.System.Web.UI.IStateManager.LoadViewState(Object)
- uid: System.Web.UI.WebControls.DataKeyArray.System#Web#UI#IStateManager#SaveViewState
  parent: System.Web.UI.WebControls.DataKeyArray
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: DataKeyArray.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.DataKeyArray.System.Web.UI.IStateManager.SaveViewState()
- uid: System.Web.UI.WebControls.DataKeyArray.System#Web#UI#IStateManager#TrackViewState
  parent: System.Web.UI.WebControls.DataKeyArray
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: DataKeyArray.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.DataKeyArray.System.Web.UI.IStateManager.TrackViewState()
- uid: System.Web.UI.WebControls.DataKeyArray.#ctor*
  parent: System.Web.UI.WebControls.DataKeyArray
  isExternal: false
  name: DataKeyArray
  nameWithType: DataKeyArray.DataKeyArray
- uid: System.Web.UI.WebControls.DataKeyArray.CopyTo*
  parent: System.Web.UI.WebControls.DataKeyArray
  isExternal: false
  name: CopyTo
  nameWithType: DataKeyArray.CopyTo
- uid: System.Web.UI.WebControls.DataKeyArray.Count*
  parent: System.Web.UI.WebControls.DataKeyArray
  isExternal: false
  name: Count
  nameWithType: DataKeyArray.Count
- uid: System.Web.UI.WebControls.DataKeyArray.GetEnumerator*
  parent: System.Web.UI.WebControls.DataKeyArray
  isExternal: false
  name: GetEnumerator
  nameWithType: DataKeyArray.GetEnumerator
- uid: System.Web.UI.WebControls.DataKeyArray.IsReadOnly*
  parent: System.Web.UI.WebControls.DataKeyArray
  isExternal: false
  name: IsReadOnly
  nameWithType: DataKeyArray.IsReadOnly
- uid: System.Web.UI.WebControls.DataKeyArray.IsSynchronized*
  parent: System.Web.UI.WebControls.DataKeyArray
  isExternal: false
  name: IsSynchronized
  nameWithType: DataKeyArray.IsSynchronized
- uid: System.Web.UI.WebControls.DataKeyArray.Item*
  parent: System.Web.UI.WebControls.DataKeyArray
  isExternal: false
  name: Item
  nameWithType: DataKeyArray.Item
- uid: System.Web.UI.WebControls.DataKeyArray.SyncRoot*
  parent: System.Web.UI.WebControls.DataKeyArray
  isExternal: false
  name: SyncRoot
  nameWithType: DataKeyArray.SyncRoot
- uid: System.Web.UI.WebControls.DataKeyArray.System#Collections#ICollection#CopyTo*
  parent: System.Web.UI.WebControls.DataKeyArray
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: DataKeyArray.System.Collections.ICollection.CopyTo
- uid: System.Web.UI.WebControls.DataKeyArray.System#Web#UI#IStateManager#IsTrackingViewState*
  parent: System.Web.UI.WebControls.DataKeyArray
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: DataKeyArray.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.DataKeyArray.System#Web#UI#IStateManager#LoadViewState*
  parent: System.Web.UI.WebControls.DataKeyArray
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState
  nameWithType: DataKeyArray.System.Web.UI.IStateManager.LoadViewState
- uid: System.Web.UI.WebControls.DataKeyArray.System#Web#UI#IStateManager#SaveViewState*
  parent: System.Web.UI.WebControls.DataKeyArray
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState
  nameWithType: DataKeyArray.System.Web.UI.IStateManager.SaveViewState
- uid: System.Web.UI.WebControls.DataKeyArray.System#Web#UI#IStateManager#TrackViewState*
  parent: System.Web.UI.WebControls.DataKeyArray
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState
  nameWithType: DataKeyArray.System.Web.UI.IStateManager.TrackViewState
