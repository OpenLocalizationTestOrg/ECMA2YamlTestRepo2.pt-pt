### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection
  id: TopLevelNameCollection
  children:
  - System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.Contains(System.DirectoryServices.ActiveDirectory.TopLevelName)
  - System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.CopyTo(System.DirectoryServices.ActiveDirectory.TopLevelName[],System.Int32)
  - System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.IndexOf(System.DirectoryServices.ActiveDirectory.TopLevelName)
  - System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.Item(System.Int32)
  langs:
  - csharp
  name: TopLevelNameCollection
  nameWithType: TopLevelNameCollection
  fullName: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection
  type: Class
  summary: "The TopLevelNameCollection class is a read-only collection that contains <see cref=&quot;T:System.DirectoryServices.ActiveDirectory.TopLevelName&quot;></see> objects."
  syntax:
    content: 'public class TopLevelNameCollection : System.Collections.ReadOnlyCollectionBase'
  inheritance:
  - System.Object
  - System.Collections.ReadOnlyCollectionBase
  implements: []
  inheritedMembers:
  - System.Collections.ReadOnlyCollectionBase.Count
  - System.Collections.ReadOnlyCollectionBase.GetEnumerator
  - System.Collections.ReadOnlyCollectionBase.InnerList
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.Contains(System.DirectoryServices.ActiveDirectory.TopLevelName)
  id: Contains(System.DirectoryServices.ActiveDirectory.TopLevelName)
  parent: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection
  langs:
  - csharp
  name: Contains(TopLevelName)
  nameWithType: TopLevelNameCollection.Contains(TopLevelName)
  fullName: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.Contains(TopLevelName)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Determines if the specified <see cref=&quot;T:System.DirectoryServices.ActiveDirectory.TopLevelName&quot;></see> object is in this collection."
  syntax:
    content: public bool Contains (System.DirectoryServices.ActiveDirectory.TopLevelName name);
    parameters:
    - id: name
      type: System.DirectoryServices.ActiveDirectory.TopLevelName
      description: "The  object to search for in this collection."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.Contains*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n    name is ."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.CopyTo(System.DirectoryServices.ActiveDirectory.TopLevelName[],System.Int32)
  id: CopyTo(System.DirectoryServices.ActiveDirectory.TopLevelName[],System.Int32)
  parent: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection
  langs:
  - csharp
  name: CopyTo(TopLevelName[],Int32)
  nameWithType: TopLevelNameCollection.CopyTo(TopLevelName[],Int32)
  fullName: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.CopyTo(TopLevelName[],Int32)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Copies all <see cref=&quot;T:System.DirectoryServices.ActiveDirectory.TopLevelName&quot;></see> objects in this collection to the specified array, starting at the specified index of the target array."
  syntax:
    content: public void CopyTo (System.DirectoryServices.ActiveDirectory.TopLevelName[] names, int index);
    parameters:
    - id: names
      type: System.DirectoryServices.ActiveDirectory.TopLevelName[]
      description: "The array of  objects that receives the elements of this collection."
    - id: index
      type: System.Int32
      description: "The zero-based index in `names` where this method starts copying this collection."
  overload: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.CopyTo*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "A call to the underlying directory service resulted in an error."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The destination array is not large enough, based on the source collection size and the index parameter that was specified."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n    names is ."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The index specified is out of range of the destination array."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.IndexOf(System.DirectoryServices.ActiveDirectory.TopLevelName)
  id: IndexOf(System.DirectoryServices.ActiveDirectory.TopLevelName)
  parent: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection
  langs:
  - csharp
  name: IndexOf(TopLevelName)
  nameWithType: TopLevelNameCollection.IndexOf(TopLevelName)
  fullName: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.IndexOf(TopLevelName)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Returns the index of the first occurrence of the specified <see cref=&quot;T:System.DirectoryServices.ActiveDirectory.TopLevelName&quot;></see> object in this collection."
  syntax:
    content: public int IndexOf (System.DirectoryServices.ActiveDirectory.TopLevelName name);
    parameters:
    - id: name
      type: System.DirectoryServices.ActiveDirectory.TopLevelName
      description: "The  object to search for in this collection."
    return:
      type: System.Int32
      description: "To be added."
  overload: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.IndexOf*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "A call to the underlying directory service resulted in an error."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n    name is ."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: TopLevelNameCollection.Item(Int32)
  fullName: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.Item(Int32)
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "The Item property gets a <see cref=&quot;T:System.DirectoryServices.ActiveDirectory.TopLevelName&quot;></see> object in this collection."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.TopLevelName this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based index of the  object to get."
    return:
      type: System.DirectoryServices.ActiveDirectory.TopLevelName
      description: "The <see cref=&quot;T:System.DirectoryServices.ActiveDirectory.TopLevelName&quot;></see> that is located at the specified index."
  overload: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The index parameter that was specified is out of range of the collection."
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Collections.ReadOnlyCollectionBase
  isExternal: false
  name: System.Collections.ReadOnlyCollectionBase
- uid: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.Contains(System.DirectoryServices.ActiveDirectory.TopLevelName)
  parent: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection
  isExternal: false
  name: Contains(TopLevelName)
  nameWithType: TopLevelNameCollection.Contains(TopLevelName)
  fullName: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.Contains(TopLevelName)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.ActiveDirectory.TopLevelName
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: TopLevelName
  nameWithType: TopLevelName
  fullName: System.DirectoryServices.ActiveDirectory.TopLevelName
- uid: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.CopyTo(System.DirectoryServices.ActiveDirectory.TopLevelName[],System.Int32)
  parent: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection
  isExternal: false
  name: CopyTo(TopLevelName[],Int32)
  nameWithType: TopLevelNameCollection.CopyTo(TopLevelName[],Int32)
  fullName: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.CopyTo(TopLevelName[],Int32)
- uid: System.DirectoryServices.ActiveDirectory.TopLevelName[]
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: TopLevelName
  nameWithType: TopLevelName
  fullName: System.DirectoryServices.ActiveDirectory.TopLevelName[]
  spec.csharp:
  - uid: System.DirectoryServices.ActiveDirectory.TopLevelName
    name: TopLevelName
    nameWithType: TopLevelName
    fullName: TopLevelName[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.IndexOf(System.DirectoryServices.ActiveDirectory.TopLevelName)
  parent: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection
  isExternal: false
  name: IndexOf(TopLevelName)
  nameWithType: TopLevelNameCollection.IndexOf(TopLevelName)
  fullName: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.IndexOf(TopLevelName)
- uid: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.Item(System.Int32)
  parent: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: TopLevelNameCollection.Item(Int32)
  fullName: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.Item(Int32)
- uid: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.Contains*
  parent: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection
  isExternal: false
  name: Contains
  nameWithType: TopLevelNameCollection.Contains
- uid: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.CopyTo*
  parent: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection
  isExternal: false
  name: CopyTo
  nameWithType: TopLevelNameCollection.CopyTo
- uid: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.IndexOf*
  parent: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection
  isExternal: false
  name: IndexOf
  nameWithType: TopLevelNameCollection.IndexOf
- uid: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.Item*
  parent: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection
  isExternal: false
  name: Item
  nameWithType: TopLevelNameCollection.Item
