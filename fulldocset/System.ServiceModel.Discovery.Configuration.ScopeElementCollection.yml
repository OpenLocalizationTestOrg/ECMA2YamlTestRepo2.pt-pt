### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Discovery.Configuration.ScopeElementCollection
  id: ScopeElementCollection
  children:
  - System.ServiceModel.Discovery.Configuration.ScopeElementCollection.#ctor
  - System.ServiceModel.Discovery.Configuration.ScopeElementCollection.GetElementKey(System.Configuration.ConfigurationElement)
  langs:
  - csharp
  name: ScopeElementCollection
  nameWithType: ScopeElementCollection
  fullName: System.ServiceModel.Discovery.Configuration.ScopeElementCollection
  type: Class
  summary: "A configuration element that contains a collection of scope elements."
  remarks: "The following example shows how to add two scope URIs for an endpoint.      ```   <configuration>       <system.serviceModel>         <services>           <service name=&quot;Microsoft.Samples.Discovery.CalculatorService&quot;                    behaviorConfiguration=&quot;calculatorServiceBehavior&quot;>             <endpoint address=&quot;&quot;                       binding=&quot;wsHttpBinding&quot;                       contract=&quot;Microsoft.Samples.Discovery.ICalculatorService&quot;                       behaviorConfiguration=&quot;ep1Behavior&quot; />              </service>         </services>         <behaviors>           <serviceBehaviors>             <behavior name=&quot;calculatorServiceBehavior&quot;>               <serviceDiscovery />             </behavior>           </serviceBehaviors>           <endpointBehaviors>             <behavior name=&quot;ep1Behavior&quot;>               <endpointDiscovery>                 <scopes>                   <add scope=&quot;http://www.mycalculator.com&quot;/>                   <add scope=&quot;ldap:///ou=engineering,o=exampleorg,c=us&quot;/>                 </scopes>               </endpointDiscovery>             </behavior>                     </endpointBehaviors>         </behaviors>         <extensions>           <behaviorExtensions>             <add name=&quot;serviceDiscovery&quot; type=&quot;System.ServiceModel.Discovery.Configuration.ServiceDiscoveryElement, System.WorkflowServiceModel, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35&quot; />             <add name=&quot;endpointDiscovery&quot; type=&quot;System.ServiceModel.Discovery.Configuration.EndpointDiscoveryElement, System.WorkflowServiceModel, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35&quot; />           </behaviorExtensions>         </extensions>       </system.serviceModel>   </configuration>   ```"
  syntax:
    content: >-
      [System.Configuration.ConfigurationCollection(typeof(System.ServiceModel.Discovery.Configuration.ScopeElement))]

      public sealed class ScopeElementCollection : System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection<System.ServiceModel.Discovery.Configuration.ScopeElement>
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  - System.Configuration.ConfigurationElementCollection
  - System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Properties
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElementCollection.AddElementName
  - System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)
  - System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElementCollection.BaseClear
  - System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)
  - System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)
  - System.Configuration.ConfigurationElementCollection.BaseGetAllKeys
  - System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)
  - System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)
  - System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)
  - System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)
  - System.Configuration.ConfigurationElementCollection.ClearElementName
  - System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)
  - System.Configuration.ConfigurationElementCollection.Count
  - System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)
  - System.Configuration.ConfigurationElementCollection.EmitClear
  - System.Configuration.ConfigurationElementCollection.Equals(System.Object)
  - System.Configuration.ConfigurationElementCollection.GetEnumerator
  - System.Configuration.ConfigurationElementCollection.GetHashCode
  - System.Configuration.ConfigurationElementCollection.IsElementName(System.String)
  - System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElementCollection.IsModified
  - System.Configuration.ConfigurationElementCollection.IsReadOnly
  - System.Configuration.ConfigurationElementCollection.IsSynchronized
  - System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElementCollection.RemoveElementName
  - System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElementCollection.ResetModified
  - System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElementCollection.SetReadOnly
  - System.Configuration.ConfigurationElementCollection.SyncRoot
  - System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate
  - System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  - System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Add(`0)
  - System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.BaseAdd(System.Configuration.ConfigurationElement)
  - System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Clear
  - System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.CollectionType
  - System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.ContainsKey(System.Object)
  - System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.CopyTo(`0[],System.Int32)
  - System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.CreateNewElement
  - System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.ElementName
  - System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.IndexOf(`0)
  - System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Item(System.Int32)
  - System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Item(System.Object)
  - System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Remove(`0)
  - System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.RemoveAt(System.Int32)
  - System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.RemoveAt(System.Object)
  platform:
  - net462
- uid: System.ServiceModel.Discovery.Configuration.ScopeElementCollection.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Discovery.Configuration.ScopeElementCollection
  langs:
  - csharp
  name: ScopeElementCollection()
  nameWithType: ScopeElementCollection.ScopeElementCollection()
  fullName: System.ServiceModel.Discovery.Configuration.ScopeElementCollection.ScopeElementCollection()
  type: Constructor
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery.Configuration
  summary: "Creates a new instance of the ScopeElementCollection class."
  syntax:
    content: public ScopeElementCollection ();
    parameters: []
  overload: System.ServiceModel.Discovery.Configuration.ScopeElementCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Discovery.Configuration.ScopeElementCollection.GetElementKey(System.Configuration.ConfigurationElement)
  id: GetElementKey(System.Configuration.ConfigurationElement)
  parent: System.ServiceModel.Discovery.Configuration.ScopeElementCollection
  langs:
  - csharp
  name: GetElementKey(ConfigurationElement)
  nameWithType: ScopeElementCollection.GetElementKey(ConfigurationElement)
  fullName: System.ServiceModel.Discovery.Configuration.ScopeElementCollection.GetElementKey(ConfigurationElement)
  type: Method
  assemblies:
  - System.ServiceModel.Discovery
  namespace: System.ServiceModel.Discovery.Configuration
  syntax:
    content: protected override object GetElementKey (System.Configuration.ConfigurationElement element);
    parameters:
    - id: element
      type: System.Configuration.ConfigurationElement
      description: "To be added."
    return:
      type: System.Object
      description: "To be added."
  overload: System.ServiceModel.Discovery.Configuration.ScopeElementCollection.GetElementKey*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1
  isExternal: false
  name: System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection<System.ServiceModel.Discovery.Configuration.ScopeElement>
- uid: System.ServiceModel.Discovery.Configuration.ScopeElementCollection.#ctor
  parent: System.ServiceModel.Discovery.Configuration.ScopeElementCollection
  isExternal: false
  name: ScopeElementCollection()
  nameWithType: ScopeElementCollection.ScopeElementCollection()
  fullName: System.ServiceModel.Discovery.Configuration.ScopeElementCollection.ScopeElementCollection()
- uid: System.ServiceModel.Discovery.Configuration.ScopeElementCollection.GetElementKey(System.Configuration.ConfigurationElement)
  parent: System.ServiceModel.Discovery.Configuration.ScopeElementCollection
  isExternal: false
  name: GetElementKey(ConfigurationElement)
  nameWithType: ScopeElementCollection.GetElementKey(ConfigurationElement)
  fullName: System.ServiceModel.Discovery.Configuration.ScopeElementCollection.GetElementKey(ConfigurationElement)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Configuration.ConfigurationElement
  parent: System.Configuration
  isExternal: false
  name: ConfigurationElement
  nameWithType: ConfigurationElement
  fullName: System.Configuration.ConfigurationElement
- uid: System.ServiceModel.Discovery.Configuration.ScopeElementCollection.#ctor*
  parent: System.ServiceModel.Discovery.Configuration.ScopeElementCollection
  isExternal: false
  name: ScopeElementCollection
  nameWithType: ScopeElementCollection.ScopeElementCollection
- uid: System.ServiceModel.Discovery.Configuration.ScopeElementCollection.GetElementKey*
  parent: System.ServiceModel.Discovery.Configuration.ScopeElementCollection
  isExternal: false
  name: GetElementKey
  nameWithType: ScopeElementCollection.GetElementKey
