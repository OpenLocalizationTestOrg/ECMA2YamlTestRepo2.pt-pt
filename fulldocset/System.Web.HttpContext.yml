### YamlMime:ManagedReference
items:
- uid: System.Web.HttpContext
  id: HttpContext
  children:
  - System.Web.HttpContext.#ctor(System.Web.HttpWorkerRequest)
  - System.Web.HttpContext.#ctor(System.Web.HttpRequest,System.Web.HttpResponse)
  - System.Web.HttpContext.AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task})
  - System.Web.HttpContext.AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task},System.Web.WebSockets.AspNetWebSocketOptions)
  - System.Web.HttpContext.AddError(System.Exception)
  - System.Web.HttpContext.AddOnRequestCompleted(System.Action{System.Web.HttpContext})
  - System.Web.HttpContext.AllErrors
  - System.Web.HttpContext.AllowAsyncDuringSyncStages
  - System.Web.HttpContext.Application
  - System.Web.HttpContext.ApplicationInstance
  - System.Web.HttpContext.AsyncPreloadMode
  - System.Web.HttpContext.Cache
  - System.Web.HttpContext.ClearError
  - System.Web.HttpContext.Current
  - System.Web.HttpContext.CurrentHandler
  - System.Web.HttpContext.CurrentNotification
  - System.Web.HttpContext.DisposeOnPipelineCompleted(System.IDisposable)
  - System.Web.HttpContext.Error
  - System.Web.HttpContext.GetAppConfig(System.String)
  - System.Web.HttpContext.GetConfig(System.String)
  - System.Web.HttpContext.GetGlobalResourceObject(System.String,System.String)
  - System.Web.HttpContext.GetGlobalResourceObject(System.String,System.String,System.Globalization.CultureInfo)
  - System.Web.HttpContext.GetLocalResourceObject(System.String,System.String)
  - System.Web.HttpContext.GetLocalResourceObject(System.String,System.String,System.Globalization.CultureInfo)
  - System.Web.HttpContext.GetSection(System.String)
  - System.Web.HttpContext.Handler
  - System.Web.HttpContext.IsCustomErrorEnabled
  - System.Web.HttpContext.IsDebuggingEnabled
  - System.Web.HttpContext.IsPostNotification
  - System.Web.HttpContext.IsWebSocketRequest
  - System.Web.HttpContext.IsWebSocketRequestUpgrading
  - System.Web.HttpContext.Items
  - System.Web.HttpContext.PageInstrumentation
  - System.Web.HttpContext.PreviousHandler
  - System.Web.HttpContext.Profile
  - System.Web.HttpContext.RemapHandler(System.Web.IHttpHandler)
  - System.Web.HttpContext.Request
  - System.Web.HttpContext.Response
  - System.Web.HttpContext.RewritePath(System.String)
  - System.Web.HttpContext.RewritePath(System.String,System.Boolean)
  - System.Web.HttpContext.RewritePath(System.String,System.String,System.String)
  - System.Web.HttpContext.RewritePath(System.String,System.String,System.String,System.Boolean)
  - System.Web.HttpContext.Server
  - System.Web.HttpContext.Session
  - System.Web.HttpContext.SetSessionStateBehavior(System.Web.SessionState.SessionStateBehavior)
  - System.Web.HttpContext.SkipAuthorization
  - System.Web.HttpContext.System#IServiceProvider#GetService(System.Type)
  - System.Web.HttpContext.ThreadAbortOnTimeout
  - System.Web.HttpContext.Timestamp
  - System.Web.HttpContext.Trace
  - System.Web.HttpContext.User
  - System.Web.HttpContext.WebSocketNegotiatedProtocol
  - System.Web.HttpContext.WebSocketRequestedProtocols
  langs:
  - csharp
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
  type: Class
  summary: "Contém todas as informações de HTTP específicos sobre um pedido HTTP individuais."
  remarks: "As classes que herdam a <xref:System.Web.IHttpModule>e <xref:System.Web.IHttpHandler>interfaces são fornecidas uma referência a um objeto de HttpContext para o atual pedido HTTP.</xref:System.Web.IHttpHandler> </xref:System.Web.IHttpModule> O objeto fornece acesso para o intrínseco <xref:System.Web.HttpContext.Request%2A>, <xref:System.Web.HttpContext.Response%2A>, e <xref:System.Web.HttpContext.Server%2A>Propriedades para o pedido.</xref:System.Web.HttpContext.Server%2A> </xref:System.Web.HttpContext.Response%2A> </xref:System.Web.HttpContext.Request%2A>"
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=192422).  \n  \n The following example demonstrates how to access and display properties of the HttpContext object. The context of the current HTTP request is accessed by using the <xref:System.Web.UI.Page.Context%2A> property of the <xref:System.Web.UI.Page> object.  \n  \n [!code-vb[System.Web.HttpContext#1](~/add/codesnippet/visualbasic/t-system.web.httpcontext_1.aspx)]\n [!code-cs[System.Web.HttpContext#1](~/add/codesnippet/csharp/t-system.web.httpcontext_1.aspx)]"
  syntax:
    content: 'public sealed class HttpContext : IServiceProvider'
  inheritance:
  - System.Object
  implements:
  - System.IServiceProvider
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.HttpContext.#ctor(System.Web.HttpWorkerRequest)
  id: '#ctor(System.Web.HttpWorkerRequest)'
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: HttpContext(HttpWorkerRequest)
  nameWithType: HttpContext.HttpContext(HttpWorkerRequest)
  fullName: System.Web.HttpContext.HttpContext(HttpWorkerRequest)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.HttpContext&quot;> </xref> classe que utiliza o objeto de pedido de trabalho especificado."
  syntax:
    content: public HttpContext (System.Web.HttpWorkerRequest wr);
    parameters:
    - id: wr
      type: System.Web.HttpWorkerRequest
      description: "O <xref href=&quot;System.Web.HttpWorkerRequest&quot;> </xref> objeto para o atual pedido HTTP."
  overload: System.Web.HttpContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.#ctor(System.Web.HttpRequest,System.Web.HttpResponse)
  id: '#ctor(System.Web.HttpRequest,System.Web.HttpResponse)'
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: HttpContext(HttpRequest,HttpResponse)
  nameWithType: HttpContext.HttpContext(HttpRequest,HttpResponse)
  fullName: System.Web.HttpContext.HttpContext(HttpRequest,HttpResponse)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.HttpContext&quot;> </xref> classe utilizando os objetos de pedido e resposta especificados."
  syntax:
    content: public HttpContext (System.Web.HttpRequest request, System.Web.HttpResponse response);
    parameters:
    - id: request
      type: System.Web.HttpRequest
      description: "O <xref href=&quot;System.Web.HttpRequest&quot;> </xref> objeto para o atual pedido HTTP."
    - id: response
      type: System.Web.HttpResponse
      description: "O <xref href=&quot;System.Web.HttpResponse&quot;> </xref> objeto para o atual pedido HTTP."
  overload: System.Web.HttpContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task})
  id: AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task})
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>)
  nameWithType: HttpContext.AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>)
  fullName: System.Web.HttpContext.AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aceita um <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> pedido utilizando a função de utilizador especificado."
  remarks: "Chamar este método é equivalente ao chamar o <xref:System.Web.HttpContext.AcceptWebSocketRequest%2A>sobrecarga de método e transmitir `null` para o `options` parâmetro.</xref:System.Web.HttpContext.AcceptWebSocketRequest%2A>"
  syntax:
    content: public void AcceptWebSocketRequest (Func<System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task> userFunc);
    parameters:
    - id: userFunc
      type: System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task}
      description: "A função de utilizador."
  overload: System.Web.HttpContext.AcceptWebSocketRequest*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>userFunc</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O pedido não é um <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> pedido."
  platform:
  - net462
- uid: System.Web.HttpContext.AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task},System.Web.WebSockets.AspNetWebSocketOptions)
  id: AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task},System.Web.WebSockets.AspNetWebSocketOptions)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>,AspNetWebSocketOptions)
  nameWithType: HttpContext.AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>,AspNetWebSocketOptions)
  fullName: System.Web.HttpContext.AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>,AspNetWebSocketOptions)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aceita um <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> pedido utilizando o objeto de função e as opções de utilizador especificado."
  syntax:
    content: public void AcceptWebSocketRequest (Func<System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task> userFunc, System.Web.WebSockets.AspNetWebSocketOptions options);
    parameters:
    - id: userFunc
      type: System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task}
      description: "A função de utilizador."
    - id: options
      type: System.Web.WebSockets.AspNetWebSocketOptions
      description: "O objeto de opções."
  overload: System.Web.HttpContext.AcceptWebSocketRequest*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>userFunc</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O pedido não é um <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> pedido."
  platform:
  - net462
- uid: System.Web.HttpContext.AddError(System.Exception)
  id: AddError(System.Exception)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: AddError(Exception)
  nameWithType: HttpContext.AddError(Exception)
  fullName: System.Web.HttpContext.AddError(Exception)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Adiciona uma exceção à coleção de exceção para o pedido HTTP atual."
  syntax:
    content: public void AddError (Exception errorInfo);
    parameters:
    - id: errorInfo
      type: System.Exception
      description: "O <xref:System.Exception>para adicionar à coleção de exceção.</xref:System.Exception>"
  overload: System.Web.HttpContext.AddError*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.AddOnRequestCompleted(System.Action{System.Web.HttpContext})
  id: AddOnRequestCompleted(System.Action{System.Web.HttpContext})
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: AddOnRequestCompleted(Action<HttpContext>)
  nameWithType: HttpContext.AddOnRequestCompleted(Action<HttpContext>)
  fullName: System.Web.HttpContext.AddOnRequestCompleted(Action<HttpContext>)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Gera um evento virtual que ocorre quando a peça HTTP do pedido está a terminar."
  remarks: "Este evento ocorre antes do <xref:System.Web.WebSockets.AspNetWebSocket>começa a ligação.</xref:System.Web.WebSockets.AspNetWebSocket>"
  syntax:
    content: public System.Web.ISubscriptionToken AddOnRequestCompleted (Action<System.Web.HttpContext> callback);
    parameters:
    - id: callback
      type: System.Action{System.Web.HttpContext}
      description: "O objeto de contexto HTTP."
    return:
      type: System.Web.ISubscriptionToken
      description: "O token de subscrição."
  overload: System.Web.HttpContext.AddOnRequestCompleted*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>callback</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.HttpContext.AllErrors
  id: AllErrors
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: AllErrors
  nameWithType: HttpContext.AllErrors
  fullName: System.Web.HttpContext.AllErrors
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém uma matriz de erros acumulados ao processar um pedido de HTTP."
  syntax:
    content: public Exception[] AllErrors { get; }
    return:
      type: System.Exception[]
      description: "Uma matriz de <xref:System.Exception>objetos para o atual pedido HTTP.</xref:System.Exception>"
  overload: System.Web.HttpContext.AllErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.AllowAsyncDuringSyncStages
  id: AllowAsyncDuringSyncStages
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: AllowAsyncDuringSyncStages
  nameWithType: HttpContext.AllowAsyncDuringSyncStages
  fullName: System.Web.HttpContext.AllowAsyncDuringSyncStages
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém ou define um valor que indica se são permitidas operações assíncronas partes do ASP.NET processar o pedido quando não são esperados."
  remarks: "Se este sinalizador não estiver definido como `true`, ASP.NET irá gerar uma exceção quando Deteta a aplicação misusing o async API. Isto pode ocorrer se tentar chamar um método assíncrono durante uma parte do pedido de processamento de pipeline de onde operações assíncronas não são esperadas, ou se houver trabalho assíncrono pendente ainda quando um processador ou módulo assíncrono sinalizar conclusão. Este comportamento destina-se como uma rede de segurança para informá-lo antecipadamente no se estiver a escrever código async que não se ajustam esperado padrões e poderá ter negativos efeitos secundários."
  syntax:
    content: public bool AllowAsyncDuringSyncStages { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Se o ASP.NET irá gerar uma exceção quando é utilizada a API assíncrona de cada vez quando não é esperado; caso contrário, <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>. O valor predefinido é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpContext.AllowAsyncDuringSyncStages*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.Application
  id: Application
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Application
  nameWithType: HttpContext.Application
  fullName: System.Web.HttpContext.Application
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém o <xref href=&quot;System.Web.HttpApplicationState&quot;> </xref> objeto para o atual pedido HTTP."
  syntax:
    content: public System.Web.HttpApplicationState Application { get; }
    return:
      type: System.Web.HttpApplicationState
      description: "O <xref href=&quot;System.Web.HttpApplicationState&quot;> </xref> para o pedido HTTP atual.       Para obter o <xref href=&quot;System.Web.HttpApplication&quot;> </xref> do objeto para o pedido HTTP atual, utilize <xref:System.Web.HttpContext.ApplicationInstance*>.</xref:System.Web.HttpContext.ApplicationInstance*> (O ASP.NET usa <xref uid=&quot;langword_csharp_ApplicationInstance&quot; name=&quot;ApplicationInstance&quot; href=&quot;&quot;> </xref> em vez de <xref uid=&quot;langword_csharp_Application&quot; name=&quot;Application&quot; href=&quot;&quot;> </xref> como um nome de propriedade para fazer referência aos atual <xref href=&quot;System.Web.HttpApplication&quot;> </xref> instância para evitar confusões entre ASP.NET e ASP clássico. Em ASP clássico, <xref uid=&quot;langword_csharp_Application&quot; name=&quot;Application&quot; href=&quot;&quot;> </xref> refere-se ao dicionário de estado da aplicação global.)"
  overload: System.Web.HttpContext.Application*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.ApplicationInstance
  id: ApplicationInstance
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: ApplicationInstance
  nameWithType: HttpContext.ApplicationInstance
  fullName: System.Web.HttpContext.ApplicationInstance
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém ou define o <xref href=&quot;System.Web.HttpApplication&quot;> </xref> objeto para o atual pedido HTTP."
  syntax:
    content: public System.Web.HttpApplication ApplicationInstance { get; set; }
    return:
      type: System.Web.HttpApplication
      description: "O <xref href=&quot;System.Web.HttpApplication&quot;> </xref> para o pedido HTTP atual.       O ASP.NET usa <xref uid=&quot;langword_csharp_ApplicationInstance&quot; name=&quot;ApplicationInstance&quot; href=&quot;&quot;> </xref> em vez de <xref uid=&quot;langword_csharp_Application&quot; name=&quot;Application&quot; href=&quot;&quot;> </xref> como um nome de propriedade para fazer referência aos atual <xref href=&quot;System.Web.HttpApplication&quot;> </xref> instância para evitar confusões entre ASP.NET e ASP clássico. Em ASP clássico, <xref uid=&quot;langword_csharp_Application&quot; name=&quot;Application&quot; href=&quot;&quot;> </xref> refere-se ao dicionário de estado da aplicação global."
  overload: System.Web.HttpContext.ApplicationInstance*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A aplicação Web está em execução em IIS 7.0 no modo integrado e foi efetuada uma tentativa de alterar o valor da propriedade a partir de um valor não nulo para <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.HttpContext.AsyncPreloadMode
  id: AsyncPreloadMode
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: AsyncPreloadMode
  nameWithType: HttpContext.AsyncPreloadMode
  fullName: System.Web.HttpContext.AsyncPreloadMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém ou define um objeto que contém sinalizadores que dizem respeito ao modo de pré-carregamento assíncrono."
  remarks: "Na primeira vez que esta propriedade é acedida, o objeto que contém sinalizadores de modo assíncrono de pré-carregamento é carregado a partir de <xref:System.Web.Configuration.HttpRuntimeSection.AsyncPreloadMode%2A>definição no ficheiro de configuração.</xref:System.Web.Configuration.HttpRuntimeSection.AsyncPreloadMode%2A>       Embora esta propriedade pode ser definida através de programação, alterar o valor da propriedade só terá efeito se a propriedade está definida antes do `ExecuteRequestHandler` passo no pipeline de pedido de ASP.NET."
  syntax:
    content: public System.Web.Configuration.AsyncPreloadModeFlags AsyncPreloadMode { get; set; }
    return:
      type: System.Web.Configuration.AsyncPreloadModeFlags
      description: "Um objeto que contém sinalizadores que dizem respeito ao modo de pré-carregamento assíncrono."
  overload: System.Web.HttpContext.AsyncPreloadMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.Cache
  id: Cache
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Cache
  nameWithType: HttpContext.Cache
  fullName: System.Web.HttpContext.Cache
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém o <xref href=&quot;System.Web.Caching.Cache&quot;> </xref> objeto para o domínio de aplicação atual."
  remarks: "Há uma instância do <xref:System.Web.Caching.Cache>classe por domínio de aplicação.</xref:System.Web.Caching.Cache> Como resultado, o <xref:System.Web.Caching.Cache>objeto é devolvido pela propriedade Cache é o <xref:System.Web.Caching.Cache>objeto para todos os pedidos no domínio de aplicação.</xref:System.Web.Caching.Cache> </xref:System.Web.Caching.Cache>"
  syntax:
    content: public System.Web.Caching.Cache Cache { get; }
    return:
      type: System.Web.Caching.Cache
      description: "O <xref href=&quot;System.Web.Caching.Cache&quot;> </xref> para o domínio de aplicação atual."
  overload: System.Web.HttpContext.Cache*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.ClearError
  id: ClearError
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: ClearError()
  nameWithType: HttpContext.ClearError()
  fullName: System.Web.HttpContext.ClearError()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Limpa todos os erros para o pedido HTTP atual."
  syntax:
    content: public void ClearError ();
    parameters: []
  overload: System.Web.HttpContext.ClearError*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.Current
  id: Current
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Current
  nameWithType: HttpContext.Current
  fullName: System.Web.HttpContext.Current
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém ou define o <xref href=&quot;System.Web.HttpContext&quot;> </xref> objeto para o atual pedido HTTP."
  remarks: "Esta propriedade é uma propriedade estática da <xref:System.Web.HttpContext>classe.</xref:System.Web.HttpContext> Os arquivos de propriedade de <xref:System.Web.HttpContext>instância que se aplica ao pedido atual.</xref:System.Web.HttpContext> As propriedades desta instância são as propriedades de não estático da <xref:System.Web.HttpContext>classe.</xref:System.Web.HttpContext>       Também pode utilizar o <xref:System.Web.UI.Page.Context%2A?displayProperty=fullName>propriedade para aceder a <xref:System.Web.HttpContext>objeto para o atual pedido HTTP.</xref:System.Web.HttpContext> </xref:System.Web.UI.Page.Context%2A?displayProperty=fullName>"
  example:
  - "The following code example uses the Current property to access the <xref:System.Web.HttpContext.AddError%2A?displayProperty=fullName> and <xref:System.Web.HttpContext.ClearError%2A?displayProperty=fullName> methods and the <xref:System.Web.HttpContext.AllErrors%2A?displayProperty=fullName> property. The example creates three custom exceptions using the <xref:System.Web.HttpContext.AddError%2A> method and uses the <xref:System.Web.HttpContext.AllErrors%2A> property to load these exceptions to an array. It then writes the array to the containing page and uses the <xref:System.Web.HttpContext.ClearError%2A> method to clear all the errors from the <xref:System.Web.UI.Page.Context%2A> property.  \n  \n```c#  \nprotected void Page_Load(object sender, EventArgs e)  \n{  \n    HttpContext context = HttpContext.Current;  \n    Response.Write(\"<p>HttpContext.Current Example:</p>\");  \n  \n    // Add three custom exceptions.  \n    context.AddError(new Exception(\"New Exception #1\"));  \n    context.AddError(new Exception(\"New Exception #2\"));  \n    context.AddError(new Exception(\"New Exception #3\"));  \n  \n    // Capture all the new Exceptions in an array.  \n    Exception[] errs = context.AllErrors;  \n  \n    foreach (Exception ex in errs)  \n    {  \n        Response.Write(\"<p>\" + Server.HtmlEncode(ex.ToString()) + \"</p>\");  \n    }  \n  \n    // Clear the exceptions so ASP.NET won't handle them.  \n    context.ClearError();  \n}  \n```  \n  \n```vb  \nProtected Sub Page_Load(sender As Object, e As EventArgs)  \nDim context As HttpContext = HttpContext.Current  \nResponse.Write(\"<p>HttpContext.Current Example:</p>\")  \n  \n' Add three custom exceptions.  \ncontext.AddError(New Exception(\"New Exception #1\"))  \ncontext.AddError(New Exception(\"New Exception #2\"))  \ncontext.AddError(New Exception(\"New Exception #3\"))  \n  \n' Capture all the new Exceptions in an array.  \nDim errs As Exception() = context.AllErrors  \n  \nFor Each ex As Exception In errs  \nResponse.Write(\"<p>\" & Server.HtmlEncode(ex.ToString()) & \"</p>\")  \nNext  \n  \n' Clear the exceptions so ASP.NET won't handle them.  \ncontext.ClearError()  \nEnd Sub  \n  \n```"
  syntax:
    content: public static System.Web.HttpContext Current { get; set; }
    return:
      type: System.Web.HttpContext
      description: "O <xref href=&quot;System.Web.HttpContext&quot;> </xref> instância para o pedido HTTP atual."
  overload: System.Web.HttpContext.Current*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.CurrentHandler
  id: CurrentHandler
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: CurrentHandler
  nameWithType: HttpContext.CurrentHandler
  fullName: System.Web.HttpContext.CurrentHandler
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém o <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> objeto que representa o processador atualmente em execução."
  remarks: "O processador atualmente em execução que é referenciado pela propriedade CurrentHandler poderá ser diferente do processador que é referenciado pelo <xref:System.Web.HttpContext.Handler%2A>propriedade.</xref:System.Web.HttpContext.Handler%2A> Isto pode acontecer quando outro processador foi pedido utilizando o <xref:System.Web.HttpServerUtility.Execute%2A>método ou <xref:System.Web.HttpServerUtility.Transfer%2A>método.</xref:System.Web.HttpServerUtility.Transfer%2A> </xref:System.Web.HttpServerUtility.Execute%2A> Quando o processador atualmente em execução conclusão do processamento, o processador anteriormente determinado é restaurado."
  syntax:
    content: public System.Web.IHttpHandler CurrentHandler { get; }
    return:
      type: System.Web.IHttpHandler
      description: "Um <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> que representa o processador atualmente em execução."
  overload: System.Web.HttpContext.CurrentHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.CurrentNotification
  id: CurrentNotification
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: CurrentNotification
  nameWithType: HttpContext.CurrentNotification
  fullName: System.Web.HttpContext.CurrentNotification
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém um <xref href=&quot;System.Web.RequestNotification&quot;> </xref> valor que indica atual <xref href=&quot;System.Web.HttpApplication&quot;> </xref> evento que está a processar."
  remarks: "A propriedade CurrentNotification requer que o modo de pipeline integrado no [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] e, pelo menos, o .NET Framework versão 3.0. Se estiver disponível, a propriedade devolve um <xref:System.Web.RequestNotification>valor.</xref:System.Web.RequestNotification> O valor da propriedade CurrentNotification indica qual o evento no <xref:System.Web.HttpApplication>instância está a processar o pedido.</xref:System.Web.HttpApplication>       A propriedade CurrentNotification não se destina a ser definido. Em vez disso, é definido por [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] durante o processamento do pedido no pipeline de ASP.NET. A definição da propriedade CurrentNotification resultará num erro de compilação.       CurrentNotification é apresentado no .NET Framework versão 3.5.  Para obter mais informações, consulte [versões e dependências](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates how to use the CurrentNotification property to determine what event of the <xref:System.Web.HttpApplication> object that is handling the current request is being processed. In the example, the event handler handles several events of the <xref:System.Web.HttpApplication> object, and the CurrentNotification property determines what code is invoked for each event being handled.  \n  \n [!code-cs[System.Web.HttpResponse.IsPostNotification#1](~/add/codesnippet/csharp/p-system.web.httpcontext_0_1.cs)]\n [!code-vb[System.Web.HttpResponse.IsPostNotification#1](~/add/codesnippet/visualbasic/p-system.web.httpcontext_0_1.vb)]"
  syntax:
    content: public System.Web.RequestNotification CurrentNotification { get; }
    return:
      type: System.Web.RequestNotification
      description: "Um do <xref href=&quot;System.Web.RequestNotification&quot;> </xref> valores."
  overload: System.Web.HttpContext.CurrentNotification*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "A operação requer o modo de pipeline integrado no [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] e, pelo menos, o .NET Framework versão 3.0."
  platform:
  - net462
- uid: System.Web.HttpContext.DisposeOnPipelineCompleted(System.IDisposable)
  id: DisposeOnPipelineCompleted(System.IDisposable)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: DisposeOnPipelineCompleted(IDisposable)
  nameWithType: HttpContext.DisposeOnPipelineCompleted(IDisposable)
  fullName: System.Web.HttpContext.DisposeOnPipelineCompleted(IDisposable)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Permite que um objeto <xref:System.IDisposable.Dispose*>método a chamar quando o <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> parte de ligação deste pedido está concluída.</xref:System.IDisposable.Dispose*>"
  remarks: "O <xref:System.IDisposable.Dispose%2A>método do objeto de destino é chamado depois de ambas a parte HTTP do pedido e a <xref:System.Web.WebSockets.AspNetWebSocket>ligação tem de terminar.</xref:System.Web.WebSockets.AspNetWebSocket> </xref:System.IDisposable.Dispose%2A> O <xref:System.Web.HttpContext>o objeto não está disponível para inspecção.</xref:System.Web.HttpContext>"
  syntax:
    content: public System.Web.ISubscriptionToken DisposeOnPipelineCompleted (IDisposable target);
    parameters:
    - id: target
      type: System.IDisposable
      description: "O objeto cuja <xref:System.IDisposable.Dispose*>método tem de ser chamado quando a <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> ligação uma parte do pedido está concluída.</xref:System.IDisposable.Dispose*>"
    return:
      type: System.Web.ISubscriptionToken
      description: "O token de subscrição."
  overload: System.Web.HttpContext.DisposeOnPipelineCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.Error
  id: Error
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Error
  nameWithType: HttpContext.Error
  fullName: System.Web.HttpContext.Error
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém o primeiro erro (se aplicável) acumulado durante HTTP processamento de pedidos."
  syntax:
    content: public Exception Error { get; }
    return:
      type: System.Exception
      description: "O primeiro <xref:System.Exception>pedido/resposta HTTP atual de processos; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se foram acumulados sem erros durante o processamento do pedido HTTP.</xref:System.Exception> A predefinição é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpContext.Error*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.GetAppConfig(System.String)
  id: GetAppConfig(System.String)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: GetAppConfig(String)
  nameWithType: HttpContext.GetAppConfig(String)
  fullName: System.Web.HttpContext.GetAppConfig(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Devolve solicitou informações de configuração para a aplicação atual."
  remarks: "O método GetAppConfig foi preterido. Utilize o <xref:System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection%2A>método o <xref:System.Web.Configuration.WebConfigurationManager>classe para obter informações de configuração para a aplicação atual.</xref:System.Web.Configuration.WebConfigurationManager> </xref:System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection%2A>"
  syntax:
    content: public static object GetAppConfig (string name);
    parameters:
    - id: name
      type: System.String
      description: "A tag de configuração de aplicação para o qual é solicitadas informações."
    return:
      type: System.Object
      description: "Um objeto que contém informações de configuração. (Converter a secção de configuração devolvido para o tipo de configuração adequado antes de utilização)."
  overload: System.Web.HttpContext.GetAppConfig*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.GetConfig(System.String)
  id: GetConfig(System.String)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: GetConfig(String)
  nameWithType: HttpContext.GetConfig(String)
  fullName: System.Web.HttpContext.GetConfig(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Devolve solicitou informações de configuração para o atual pedido HTTP."
  remarks: "O método GetConfig foi preterido. Utilize o <xref:System.Web.HttpContext.GetSection%2A>método para obter informações de configuração para o atual pedido HTTP.</xref:System.Web.HttpContext.GetSection%2A>"
  syntax:
    content: public object GetConfig (string name);
    parameters:
    - id: name
      type: System.String
      description: "A tag de configuração para o qual é solicitadas informações."
    return:
      type: System.Object
      description: "Especificado <xref href=&quot;System.Configuration.ConfigurationSection&quot;> </xref>, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se a secção de não existir, ou um objeto interno se a secção não se encontrar acessível em tempo de execução. (Converter o objeto devolvido para o tipo de configuração adequado antes de utilização)."
  overload: System.Web.HttpContext.GetConfig*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.GetGlobalResourceObject(System.String,System.String)
  id: GetGlobalResourceObject(System.String,System.String)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: GetGlobalResourceObject(String,String)
  nameWithType: HttpContext.GetGlobalResourceObject(String,String)
  fullName: System.Web.HttpContext.GetGlobalResourceObject(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém um objeto de recurso de nível de aplicação com base no especificado <> </> *> e <> </> *> propriedades."
  remarks: "O método de GetGlobalResourceObject devolve um recurso global utilizando a cultura especificada no <xref:System.Globalization.CultureInfo.CurrentUICulture%2A>propriedade.</xref:System.Globalization.CultureInfo.CurrentUICulture%2A>      > [!NOTE] > Algumas a serem editados ambientes, tais como [!INCLUDE[vwprvw](~/add/includes/vwprvw-md.md)], o editor pode acionar um momento da conceção <xref:System.Resources.MissingManifestResourceException>exceção se utilizar um ponto (.) no nome da chave de recurso global.</xref:System.Resources.MissingManifestResourceException> No entanto, isto não afeta a capacidade de editar ou guardar o ficheiro e pode ignorar o erro."
  syntax:
    content: public static object GetGlobalResourceObject (string classKey, string resourceKey);
    parameters:
    - id: classKey
      type: System.String
      description: "Uma cadeia que representa o <xref:System.Web.Compilation.ResourceExpressionFields.ClassKey*>propriedade do objeto do recurso pedido.</xref:System.Web.Compilation.ResourceExpressionFields.ClassKey*>"
    - id: resourceKey
      type: System.String
      description: "Uma cadeia que representa o <xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey*>propriedade do objeto do recurso pedido.</xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey*>"
    return:
      type: System.Object
      description: "Um <xref:System.Object>que representa o objeto de recurso de nível de aplicação pedido; caso contrário, nulo se não for encontrado um objeto de recursos ou se não for encontrado um objeto de recursos, mas não tem a propriedade pedida.</xref:System.Object>"
  overload: System.Web.HttpContext.GetGlobalResourceObject*
  exceptions:
  - type: System.Resources.MissingManifestResourceException
    commentId: T:System.Resources.MissingManifestResourceException
    description: "A resource object with the specified <code>classKey</code> parameter was not found.  \n  \n \\- or -  \n  \n The main assembly does not contain the resources for the neutral culture, and these resources are required because the appropriate satellite assembly is missing."
  platform:
  - net462
- uid: System.Web.HttpContext.GetGlobalResourceObject(System.String,System.String,System.Globalization.CultureInfo)
  id: GetGlobalResourceObject(System.String,System.String,System.Globalization.CultureInfo)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: GetGlobalResourceObject(String,String,CultureInfo)
  nameWithType: HttpContext.GetGlobalResourceObject(String,String,CultureInfo)
  fullName: System.Web.HttpContext.GetGlobalResourceObject(String,String,CultureInfo)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém um objeto de recurso de nível de aplicação com base no especificado <> </> *> e <> </> *> propriedades e o <xref:System.Globalization.CultureInfo>objeto.</xref:System.Globalization.CultureInfo>"
  remarks: "O <xref:System.Globalization.CultureInfo>objeto representa o idioma para o qual o recurso foi localizado.</xref:System.Globalization.CultureInfo> Se o recurso não está localizado para desta cultura, a pesquisa de seguir um processo de contingência para localizar um recurso adequado. Para obter mais informações, consulte [empacotamento e implementação de recursos](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Em alguns ambientes de edição, tais como o Visual Web Developer, o editor pode acionar um momento da conceção <xref:System.Resources.MissingManifestResourceException>exceção se utilizar um ponto (.) no nome da chave de recurso global.</xref:System.Resources.MissingManifestResourceException> No entanto, isto não afeta a capacidade de editar ou guardar o ficheiro e pode ignorar o erro."
  syntax:
    content: public static object GetGlobalResourceObject (string classKey, string resourceKey, System.Globalization.CultureInfo culture);
    parameters:
    - id: classKey
      type: System.String
      description: "Uma cadeia que representa o <xref:System.Web.Compilation.ResourceExpressionFields.ClassKey*>propriedade do objeto do recurso pedido.</xref:System.Web.Compilation.ResourceExpressionFields.ClassKey*>"
    - id: resourceKey
      type: System.String
      description: "Uma cadeia que representa um <xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey*>propriedade do objeto do recurso pedido.</xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey*>"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Uma cadeia que representa o <xref:System.Globalization.CultureInfo>objeto o recurso pedido.</xref:System.Globalization.CultureInfo>"
    return:
      type: System.Object
      description: "Um <xref:System.Object>que representa o objeto de recurso do pedido ao nível da aplicação que está localizada para a cultura especificada; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se não for encontrado um objeto de recursos ou se é possível localizar um objeto de recursos, mas não tem a propriedade pedida.</xref:System.Object>"
  overload: System.Web.HttpContext.GetGlobalResourceObject*
  exceptions:
  - type: System.Resources.MissingManifestResourceException
    commentId: T:System.Resources.MissingManifestResourceException
    description: "A resource object for which the specified <code>classKey</code> parameter was not found.  \n  \n \\- or -  \n  \n The main assembly does not contain the resources for the neutral culture, and these resources are required because the appropriate satellite assembly is missing."
  platform:
  - net462
- uid: System.Web.HttpContext.GetLocalResourceObject(System.String,System.String)
  id: GetLocalResourceObject(System.String,System.String)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: GetLocalResourceObject(String,String)
  nameWithType: HttpContext.GetLocalResourceObject(String,String)
  fullName: System.Web.HttpContext.GetLocalResourceObject(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém um objeto de recurso de nível de página com base no especificado <> </> *> e <> </> *> propriedades."
  remarks: "O método de GetLocalResourceObject devolve um recurso local utilizando o idioma que é especificado o <xref:System.Globalization.CultureInfo.CurrentUICulture%2A>propriedade.</xref:System.Globalization.CultureInfo.CurrentUICulture%2A>"
  syntax:
    content: public static object GetLocalResourceObject (string virtualPath, string resourceKey);
    parameters:
    - id: virtualPath
      type: System.String
      description: "O <xref:System.Web.Compilation.ExpressionBuilderContext.VirtualPath*>propriedade para o objeto de recursos locais.</xref:System.Web.Compilation.ExpressionBuilderContext.VirtualPath*>"
    - id: resourceKey
      type: System.String
      description: "Uma cadeia que representa uma <xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey*>propriedade do objeto do recurso pedido</xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey*>"
    return:
      type: System.Object
      description: "Um <xref:System.Object>que representa o objeto de recurso de nível de página pedido; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se um objeto de recurso correspondente for encontrado, mas não uma <code> resourceKey </code> parâmetro.</xref:System.Object>"
  overload: System.Web.HttpContext.GetLocalResourceObject*
  exceptions:
  - type: System.Resources.MissingManifestResourceException
    commentId: T:System.Resources.MissingManifestResourceException
    description: "Não foi encontrado um objeto de recurso especificado para <code> virtualPath </code> parâmetro."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Especificado <code> virtualPath </code> parâmetro não está no diretório de raiz da aplicação atual."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A classe de recursos para a página não foi encontrada."
  platform:
  - net462
- uid: System.Web.HttpContext.GetLocalResourceObject(System.String,System.String,System.Globalization.CultureInfo)
  id: GetLocalResourceObject(System.String,System.String,System.Globalization.CultureInfo)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: GetLocalResourceObject(String,String,CultureInfo)
  nameWithType: HttpContext.GetLocalResourceObject(String,String,CultureInfo)
  fullName: System.Web.HttpContext.GetLocalResourceObject(String,String,CultureInfo)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém um objeto de recurso de nível de página com base no especificado <> </> *> e <> </> *> propriedades e o <xref:System.Globalization.CultureInfo>objeto.</xref:System.Globalization.CultureInfo>"
  remarks: "Se o recurso não está localizado para desta cultura, a pesquisa de seguir um processo de contingência para localizar um recurso adequado. Para obter mais informações, consulte [empacotamento e implementação de recursos](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static object GetLocalResourceObject (string virtualPath, string resourceKey, System.Globalization.CultureInfo culture);
    parameters:
    - id: virtualPath
      type: System.String
      description: "O <xref:System.Web.Compilation.ExpressionBuilderContext.VirtualPath*>propriedade para o objeto de recursos locais.</xref:System.Web.Compilation.ExpressionBuilderContext.VirtualPath*>"
    - id: resourceKey
      type: System.String
      description: "Uma cadeia que representa um <xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey*>propriedade do objeto do recurso pedido.</xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey*>"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Uma cadeia que representa o <xref:System.Globalization.CultureInfo>objeto do objeto recurso pedido.</xref:System.Globalization.CultureInfo>"
    return:
      type: System.Object
      description: "Um <xref:System.Object>que representa o objeto pedido recurso local que está localizada para a cultura especificada; caso contrário <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se um objeto de recurso correspondente for encontrado, mas não uma <code> resourceKey </code> parâmetro.</xref:System.Object>"
  overload: System.Web.HttpContext.GetLocalResourceObject*
  exceptions:
  - type: System.Resources.MissingManifestResourceException
    commentId: T:System.Resources.MissingManifestResourceException
    description: "Não foi encontrado um objeto de recurso especificado para <code> virtualPath </code> parâmetro."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Especificado <code> virtualPath </code> parâmetro não está no diretório de raiz da aplicação atual."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A classe de recursos para a página não foi encontrada."
  platform:
  - net462
- uid: System.Web.HttpContext.GetSection(System.String)
  id: GetSection(System.String)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: GetSection(String)
  nameWithType: HttpContext.GetSection(String)
  fullName: System.Web.HttpContext.GetSection(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém uma secção de configuração especificado para a atual configuração da aplicação predefinido."
  syntax:
    content: public object GetSection (string sectionName);
    parameters:
    - id: sectionName
      type: System.String
      description: "O caminho da secção de configuração (no formato XPath) e o nome do elemento de configuração."
    return:
      type: System.Object
      description: "Especificado <xref href=&quot;System.Configuration.ConfigurationSection&quot;> </xref>, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se a secção de não existir, ou um objeto interno se a secção não se encontrar acessível em tempo de execução."
  overload: System.Web.HttpContext.GetSection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.Handler
  id: Handler
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Handler
  nameWithType: HttpContext.Handler
  fullName: System.Web.HttpContext.Handler
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém ou define o <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> objeto responsável por processar o pedido HTTP."
  remarks: "A propriedade de processador contém uma referência para o processador processa os pedidos de HTTP. O processador pode ser especificado utilizando o elemento ou utilizando um processador personalizado definido no código de utilizador. Para obter mais informações sobre os processadores, consulte [processadores de HTTP e a descrição geral de módulos de HTTP](~/add/includes/ajax-current-ext-md.md).       A referência para a propriedade de processador permanecer o mesmo, mesmo depois de página atual foi alterada por um método do lado do servidor, tais como o <xref:System.Web.HttpServerUtility.Execute%2A>método ou <xref:System.Web.HttpServerUtility.Transfer%2A>método.</xref:System.Web.HttpServerUtility.Transfer%2A> </xref:System.Web.HttpServerUtility.Execute%2A>"
  syntax:
    content: public System.Web.IHttpHandler Handler { get; set; }
    return:
      type: System.Web.IHttpHandler
      description: "Um <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> responsável por processar o pedido HTTP."
  overload: System.Web.HttpContext.Handler*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.IsCustomErrorEnabled
  id: IsCustomErrorEnabled
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: IsCustomErrorEnabled
  nameWithType: HttpContext.IsCustomErrorEnabled
  fullName: System.Web.HttpContext.IsCustomErrorEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém um valor que indica se os erros personalizados estão ativados para o pedido HTTP atual."
  syntax:
    content: public bool IsCustomErrorEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>se erros personalizados são ativados; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpContext.IsCustomErrorEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.IsDebuggingEnabled
  id: IsDebuggingEnabled
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: IsDebuggingEnabled
  nameWithType: HttpContext.IsDebuggingEnabled
  fullName: System.Web.HttpContext.IsDebuggingEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém um valor que indica se o pedido HTTP atual está em modo de depuração."
  syntax:
    content: public bool IsDebuggingEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o pedido estiver em modo de depuração caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpContext.IsDebuggingEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.IsPostNotification
  id: IsPostNotification
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: IsPostNotification
  nameWithType: HttpContext.IsPostNotification
  fullName: System.Web.HttpContext.IsPostNotification
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém um valor que é o atual processamento ponto do ASP.NET pipeline apenas após um <xref href=&quot;System.Web.HttpApplication&quot;> </xref> eventos concluiu o processamento."
  remarks: "A propriedade IsPostNotification só é suportada com o modo integrado no [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] e, pelo menos, o .NET Framework 3.0. Se estiver disponível, a propriedade devolve um valor booleano que indica se um evento no <xref:System.Web.HttpApplication>objeto concluiu o processamento.</xref:System.Web.HttpApplication>       A propriedade IsPostNotification não se destina a ser definido. Em vez disso, é fornecida pela [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] para o tempo de execução do ASP.NET em cada notificação. A definição da propriedade IsPostNotification resultará num erro de compilação.       Em cenários onde vários eventos do <xref:System.Web.HttpApplication>objeto são processados pelo processador de um evento, pode utilizar a propriedade IsPostNotification em combinação com a <xref:System.Web.RequestNotification>enumeração precisamente determinar onde no ciclo de vida de aplicação atual pedido está</xref:System.Web.RequestNotification> </xref:System.Web.HttpApplication>       IsPostNotification é apresentado no .NET Framework versão 3.5.  Para obter mais informações, consulte [versões e dependências](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates how to use the IsPostNotification property to determine when an event of the <xref:System.Web.HttpApplication> object has finished processing all the associated event handlers. The custom event handler in this example handles several events of the <xref:System.Web.HttpApplication> object, and the IsPostNotification property is used to determine what code is invoked after a specific event is handled.  \n  \n [!code-cs[System.Web.HttpResponse.IsPostNotification#1](~/add/codesnippet/csharp/p-system.web.httpcontext_2_1.cs)]\n [!code-vb[System.Web.HttpResponse.IsPostNotification#1](~/add/codesnippet/visualbasic/p-system.web.httpcontext_2_1.vb)]"
  syntax:
    content: public bool IsPostNotification { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>se erros personalizados são ativados; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpContext.IsPostNotification*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "A operação requer que o modo de pipeline integrado no [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] e, pelo menos, o .NET Framework 3.0."
  platform:
  - net462
- uid: System.Web.HttpContext.IsWebSocketRequest
  id: IsWebSocketRequest
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: IsWebSocketRequest
  nameWithType: HttpContext.IsWebSocketRequest
  fullName: System.Web.HttpContext.IsWebSocketRequest
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém um valor que indica se o pedido é um <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> pedido."
  remarks: "Este método devolve `true` se o pedido contém iniciais <xref:System.Web.WebSockets.AspNetWebSocket>handshake e `WebSocket` módulo do IIS está ativo.</xref:System.Web.WebSockets.AspNetWebSocket>"
  syntax:
    content: public bool IsWebSocketRequest { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o pedido é um <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> pedido; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpContext.IsWebSocketRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.IsWebSocketRequestUpgrading
  id: IsWebSocketRequestUpgrading
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: IsWebSocketRequestUpgrading
  nameWithType: HttpContext.IsWebSocketRequestUpgrading
  fullName: System.Web.HttpContext.IsWebSocketRequestUpgrading
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém um valor que indica se a ligação está a atualizar a partir de uma ligação HTTP para um <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> ligação."
  syntax:
    content: public bool IsWebSocketRequestUpgrading { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a ligação está a atualizar; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpContext.IsWebSocketRequestUpgrading*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.Items
  id: Items
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Items
  nameWithType: HttpContext.Items
  fullName: System.Web.HttpContext.Items
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém uma coleção de chave/valor que pode ser utilizada para organizar e partilhar dados entre um <xref href=&quot;System.Web.IHttpModule&quot;> </xref> interface e um <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> interface durante um pedido HTTP."
  syntax:
    content: public System.Collections.IDictionary Items { get; }
    return:
      type: System.Collections.IDictionary
      description: "Um <xref:System.Collections.IDictionary>chave/valor coleção que fornece acesso a um valor individuais na coleção por uma chave especificada.</xref:System.Collections.IDictionary>"
  overload: System.Web.HttpContext.Items*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.PageInstrumentation
  id: PageInstrumentation
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: PageInstrumentation
  nameWithType: HttpContext.PageInstrumentation
  fullName: System.Web.HttpContext.PageInstrumentation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém uma referência para a instância do serviço instrumentação de página para este pedido."
  syntax:
    content: public System.Web.Instrumentation.PageInstrumentationService PageInstrumentation { get; }
    return:
      type: System.Web.Instrumentation.PageInstrumentationService
      description: "A instância do serviço instrumentação de página para este pedido."
  overload: System.Web.HttpContext.PageInstrumentation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.PreviousHandler
  id: PreviousHandler
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: PreviousHandler
  nameWithType: HttpContext.PreviousHandler
  fullName: System.Web.HttpContext.PreviousHandler
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém o <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> objeto para o processador de principal."
  remarks: "A propriedade PreviousHandler para o último corresponde processador antes do pedido atual foi executado."
  syntax:
    content: public System.Web.IHttpHandler PreviousHandler { get; }
    return:
      type: System.Web.IHttpHandler
      description: "Um <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> instância, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se foi encontrado qualquer processador anterior."
  overload: System.Web.HttpContext.PreviousHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.Profile
  id: Profile
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Profile
  nameWithType: HttpContext.Profile
  fullName: System.Web.HttpContext.Profile
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém o <xref href=&quot;System.Web.Profile.ProfileBase&quot;> </xref> objeto para o perfil de utilizador atual."
  remarks: "Uma propriedade de perfil é utilizada para armazenamento persistente de dados estruturados com uma API de tipo seguro. Quando uma propriedade de perfil é acedida, mas nenhum valor está presente, é devolvida uma instância vazia; `null` não é devolvido."
  syntax:
    content: public System.Web.Profile.ProfileBase Profile { get; }
    return:
      type: System.Web.Profile.ProfileBase
      description: "A <xref href=&quot;System.Web.Profile.ProfileBase&quot;> </xref> se o ficheiro de configuração da aplicação contém uma definição para propriedades do perfil; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpContext.Profile*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.RemapHandler(System.Web.IHttpHandler)
  id: RemapHandler(System.Web.IHttpHandler)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: RemapHandler(IHttpHandler)
  nameWithType: HttpContext.RemapHandler(IHttpHandler)
  fullName: System.Web.HttpContext.RemapHandler(IHttpHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Permite-lhe especificar um processador para o pedido."
  remarks: "Se definir `handler` para `null`, o processador de predefinido é utilizado para processar o pedido. Pode definir `handler` para um processador de assíncrono ou para um processador síncrono. O processador tem de implementar o <xref:System.Web.IHttpHandler>interface.</xref:System.Web.IHttpHandler>"
  syntax:
    content: public void RemapHandler (System.Web.IHttpHandler handler);
    parameters:
    - id: handler
      type: System.Web.IHttpHandler
      description: "O objeto que deve processar o pedido."
  overload: System.Web.HttpContext.RemapHandler*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O método de RemapHandler foi chamado após a <xref href=&quot;System.Web.HttpApplication.MapRequestHandler&quot;> </xref> evento ocorreu."
  platform:
  - net462
- uid: System.Web.HttpContext.Request
  id: Request
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Request
  nameWithType: HttpContext.Request
  fullName: System.Web.HttpContext.Request
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém o <xref href=&quot;System.Web.HttpRequest&quot;> </xref> objeto para o atual pedido HTTP."
  remarks: "A propriedade Request fornece acesso programático para as propriedades e métodos para a <xref:System.Web.HttpRequest>classe.</xref:System.Web.HttpRequest> Porque as páginas ASP.NET contém uma referência de predefinido para o <xref:System.Web>espaço de nomes (que contém o <xref:System.Web.HttpContext>classe), pode referenciar os membros de <xref:System.Web.HttpRequest>uma página. aspx sem utilizar a referência de classe completamente qualificado para <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> </xref:System.Web.HttpRequest> </xref:System.Web.HttpContext> </xref:System.Web> Por exemplo, pode utilizar `Request.Browser` para obter as capacidades do browser do cliente. No entanto, se pretender utilizar os membros de <xref:System.Web.HttpRequest>de um módulo de code-behind do ASP.NET, tem de incluir uma referência para o <xref:System.Web>espaço de nomes no módulo e uma referência completamente qualificada para o contexto de pedido/resposta atualmente ativas e a classe no <xref:System.Web>que pretende utilizar.</xref:System.Web> </xref:System.Web> </xref:System.Web.HttpRequest> Por exemplo, numa página por detrás do código tem de especificar o nome completamente qualificado `HttpContext.Current.Request.Browser`.      > [!NOTE] > ASP.NET irá gerar uma exceção se tentar utilizar esta propriedade quando o <xref:System.Web.HttpRequest>o objeto não está disponível.</xref:System.Web.HttpRequest> Por exemplo, isto seria verdadeiro no método Application_Start do ficheiro global. asax, ou um método que é chamada do método Application_Start. Nessa altura não ainda foi criado nenhum pedido HTTP."
  syntax:
    content: public System.Web.HttpRequest Request { get; }
    return:
      type: System.Web.HttpRequest
      description: "O <xref href=&quot;System.Web.HttpRequest&quot;> </xref> para o pedido HTTP atual."
  overload: System.Web.HttpContext.Request*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "A aplicação Web está em execução no IIS 7 no modo integrado."
  platform:
  - net462
- uid: System.Web.HttpContext.Response
  id: Response
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Response
  nameWithType: HttpContext.Response
  fullName: System.Web.HttpContext.Response
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém o <xref href=&quot;System.Web.HttpResponse&quot;> </xref> objeto para a resposta HTTP atual."
  remarks: "A propriedade de resposta fornece acesso programático para as propriedades e métodos para a <xref:System.Web.HttpResponse>classe.</xref:System.Web.HttpResponse> Porque as páginas ASP.NET contém uma referência de predefinido para o <xref:System.Web>espaço de nomes (que contém o <xref:System.Web.HttpContext>classe), pode referenciar os membros de <xref:System.Web.HttpContext>uma página. aspx sem utilizar a referência de classe completamente qualificado para <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> </xref:System.Web.HttpContext> </xref:System.Web.HttpContext> </xref:System.Web> Por exemplo, pode utilizar `Response.Write(&quot;some output&quot;)` ao escrever a saída para um fluxo de saída HTTP. No entanto, se pretender utilizar os membros de <xref:System.Web.HttpResponse>de um módulo de code-behind do ASP.NET, tem de incluir uma referência para o <xref:System.Web>espaço de nomes no módulo e uma referência completamente qualificada para o contexto de pedido/resposta atualmente ativas e a classe no <xref:System.Web>que pretende utilizar.</xref:System.Web> </xref:System.Web> </xref:System.Web.HttpResponse> Por exemplo, numa página por detrás do código tem de especificar o nome completamente qualificado `HttpContext.Current.Response.Write(&quot;some output&quot;)`."
  syntax:
    content: public System.Web.HttpResponse Response { get; }
    return:
      type: System.Web.HttpResponse
      description: "O <xref href=&quot;System.Web.HttpResponse&quot;> </xref> a resposta de HTTP atual."
  overload: System.Web.HttpContext.Response*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "A aplicação Web está em execução no IIS 7 no modo integrado."
  platform:
  - net462
- uid: System.Web.HttpContext.RewritePath(System.String)
  id: RewritePath(System.String)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: RewritePath(String)
  nameWithType: HttpContext.RewritePath(String)
  fullName: System.Web.HttpContext.RewritePath(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Reescreve o URL a utilizar o caminho fornecido."
  remarks: "O método RewritePath redireciona um pedido para um recurso para um caminho diferente daquela que é indicada pelo URL pedido. Se tiver de repor o caminho virtual para que os pedidos do cliente para recursos do servidor resolver corretamente, utilize a sobrecarga deste método que utiliza o `rebaseClientPath` parâmetro e defina o parâmetro como `false`.       A conversão de URL é útil quando pretende reestruturar as páginas na sua aplicação Web e pretender certificar-se de que as pessoas que têm bookmarked URLs antigos podem ainda utilizá-los depois de ter movido as páginas. A conversão de URL permite-lhe de forma transparente reencaminhar pedidos para a nova localização de página.       Se pretender permitir que um site utilizar URLs que são mais intuitivo e são otimizados para os motores de busca, é uma alternativa mais robusta utilizar o encaminhamento de ASP.NET. Para obter mais informações, consulte [encaminhamento de ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows how to use the RewritePath method to enable a Web site to respond to URLs that do not reflect the file structure in the Web site. The first block of code is an ASP.NET Web page that is named RewritePath.aspx. It requires a query string. If the name of your site is WebSite1, the URL `http://localhost/WebSite1/RewritePath.aspx?page=1` displays \"Page 1\" in the browser. The block of code that follows the Web page is the `Application_BeginRequest` event handler in the Global.asax file. This code intercepts requests for URLs such as `http://localhost/WebSite1/page1` and converts them to the form that is required for RewritePath.aspx before they are processed. Therefore, the URL `http://localhost/WebSite1/page1` invokes RewritePath.aspx with the query-string parameter that displays \"Page 1\" in the browser. If a URL such as `http://localhost/WebSite1/page1` is received, an overload of RewritePath is invoked that enables you to provide a value for the <xref:System.Web.HttpRequest.PathInfo%2A> property as well as a query string parameter.  \n  \n [!code-cs[HttpContext_RewritePath#2](~/add/codesnippet/csharp/m-system.web.httpcontext_1.aspx)]\n [!code-vb[HttpContext_RewritePath#2](~/add/codesnippet/visualbasic/m-system.web.httpcontext_1.aspx)]  \n  \n [!code-vb[HttpContext_RewritePath#1](~/add/codesnippet/visualbasic/m-system.web.httpcontext_2.asax)]\n [!code-cs[HttpContext_RewritePath#1](~/add/codesnippet/csharp/m-system.web.httpcontext_2.asax)]"
  syntax:
    content: public void RewritePath (string path);
    parameters:
    - id: path
      type: System.String
      description: "O caminho de reescrever interno."
  overload: System.Web.HttpContext.RewritePath*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "O <code> path </code> parâmetro não está no diretório de raiz da aplicação atual."
  platform:
  - net462
- uid: System.Web.HttpContext.RewritePath(System.String,System.Boolean)
  id: RewritePath(System.String,System.Boolean)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: RewritePath(String,Boolean)
  nameWithType: HttpContext.RewritePath(String,Boolean)
  fullName: System.Web.HttpContext.RewritePath(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Reescreve o URL a utilizar o caminho indicado e um valor booleano que especifica se o caminho virtual para recursos do servidor é modificado."
  remarks: "O método de RewritePath é chamado <xref:System.Web.HttpContext.RewritePath%28System.String%29?displayProperty=fullName>método com o `rebaseClientPath` parâmetro definido como `true`.</xref:System.Web.HttpContext.RewritePath%28System.String%29?displayProperty=fullName> Para garantir que o caminho virtual que é utilizado para construir os caminhos aos recursos não está a ser modificado, defina o `rebaseClientPath` parâmetro `false`. Um cenário comum no qual pode querer definir `rebaseClientPath` para `false` é quando precisa de reescrever o URL e estiver a utilizar temas e redirecionar o URL para um recurso localizado numa pasta diferente que o recurso pedido.       A conversão de URL é útil quando pretende reestruturar as páginas na sua aplicação Web e pretender certificar-se de que as pessoas que têm bookmarked URLs antigos podem ainda utilizá-los depois de ter movido as páginas. A conversão de URL permite-lhe de forma transparente reencaminhar pedidos para a nova localização de página.       Se pretender permitir que um site utilizar URLs que são mais intuitivo e são otimizados para os motores de busca, é uma alternativa mais robusta utilizar o encaminhamento de ASP.NET. Para obter mais informações, consulte [encaminhamento de ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - For a code example, see the <xref:System.Web.HttpContext.RewritePath%28System.String%29> method overload.
  syntax:
    content: public void RewritePath (string path, bool rebaseClientPath);
    parameters:
    - id: path
      type: System.String
      description: "O caminho de reescrever interno."
    - id: rebaseClientPath
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para repor o caminho virtual; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para manter o caminho virtual inalterado."
  overload: System.Web.HttpContext.RewritePath*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "O <code> path </code> parâmetro não está no diretório de raiz da aplicação atual."
  platform:
  - net462
- uid: System.Web.HttpContext.RewritePath(System.String,System.String,System.String)
  id: RewritePath(System.String,System.String,System.String)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: RewritePath(String,String,String)
  nameWithType: HttpContext.RewritePath(String,String,String)
  fullName: System.Web.HttpContext.RewritePath(String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Reescreve o URL utilizando o caminho fornecido, as informações do caminho e as informações da cadeia de consulta."
  remarks: "O método RewritePath redireciona um pedido para um recurso a outro recurso sem alterar o URL.       O `filePath` parâmetro não inclui o `pathInfo` conteúdo de parâmetro. Para URL http://www.microsoft.com/virdir/page.html/tail, a `filePath` http://www.microsoft.com/virdir/page.html, é o parâmetro e o `pathInfo` seguimento é o parâmetro.       A conversão de URL é útil quando pretende reestruturar as páginas na sua aplicação Web e pretender certificar-se de que as pessoas que têm bookmarked URLs antigos podem ainda utilizá-los depois de ter movido as páginas. A conversão de URL permite-lhe de forma transparente reencaminhar pedidos para a nova localização de página.       Se pretender permitir que um site utilizar URLs que são mais intuitivo e são otimizados para os motores de busca, é uma alternativa mais robusta utilizar o encaminhamento de ASP.NET. Para obter mais informações, consulte [encaminhamento de ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - For a code example, including an example of this method overload, see the <xref:System.Web.HttpContext.RewritePath%28System.String%29> method overload.
  syntax:
    content: public void RewritePath (string filePath, string pathInfo, string queryString);
    parameters:
    - id: filePath
      type: System.String
      description: "O caminho de reescrever interno."
    - id: pathInfo
      type: System.String
      description: "Informações de caminho adicionais para um recurso. Para obter mais informações, consulte <xref:System.Web.HttpRequest.PathInfo*>.</xref:System.Web.HttpRequest.PathInfo*>"
    - id: queryString
      type: System.String
      description: "A cadeia de consulta do pedido."
  overload: System.Web.HttpContext.RewritePath*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O <code> path </code> parâmetro não está no diretório de raiz da aplicação atual."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "O <code> filePath </code> parâmetro não está no diretório de raiz da aplicação atual."
  platform:
  - net462
- uid: System.Web.HttpContext.RewritePath(System.String,System.String,System.String,System.Boolean)
  id: RewritePath(System.String,System.String,System.String,System.Boolean)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: RewritePath(String,String,String,Boolean)
  nameWithType: HttpContext.RewritePath(String,String,String,Boolean)
  fullName: System.Web.HttpContext.RewritePath(String,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Reescreve o URL a utilizar o caminho virtual fornecido, as informações de caminho, as informações da cadeia de consulta e um valor booleano que especifica se o caminho de ficheiro do cliente é definido para o caminho de reescrever."
  remarks: "O `filePath` parâmetro não inclui o conteúdo a `pathInfo` parâmetro. Para URL http://www.microsoft.com/virdir/page.html/tail, a `filePath` http://www.microsoft.com/virdir/page.html, é o parâmetro e o `pathInfo` seguimento é o parâmetro.       Para garantir que o caminho virtual que é utilizado para construir os caminhos aos recursos não está a ser modificado, defina o `setClientFilePath` parâmetro `false`. Um cenário comum no qual pode querer definir `setClientFilePath` para `false` é quando precisa de reescrever o URL e estiver a utilizar temas e redirecionar o URL para um recurso localizado numa pasta diferente que o recurso pedido.       A conversão de URL é útil quando pretende reestruturar as páginas na sua aplicação Web e pretender certificar-se de que as pessoas que têm bookmarked URLs antigos podem ainda utilizá-los depois de ter movido as páginas. A conversão de URL permite-lhe de forma transparente reencaminhar pedidos para a nova localização de página.       Se pretender permitir que um site utilizar URLs que são mais intuitivo e são otimizados para os motores de busca, é uma alternativa mais robusta utilizar o encaminhamento de ASP.NET. Para obter mais informações, consulte [encaminhamento de ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - For a code example, see the <xref:System.Web.HttpContext.RewritePath%28System.String%29> method overload.
  syntax:
    content: public void RewritePath (string filePath, string pathInfo, string queryString, bool setClientFilePath);
    parameters:
    - id: filePath
      type: System.String
      description: "O caminho virtual para o recurso que processa o pedido."
    - id: pathInfo
      type: System.String
      description: "Informações de caminho adicionais a utilizar para o redirecionamento de URL. Para obter mais informações, consulte <xref:System.Web.HttpRequest.PathInfo*>.</xref:System.Web.HttpRequest.PathInfo*>"
    - id: queryString
      type: System.String
      description: "A cadeia de consulta do pedido a utilizar para o redirecionamento de URL."
    - id: setClientFilePath
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para definir o caminho do ficheiro utilizado para recursos de cliente para o valor da `filePath` parâmetro; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpContext.RewritePath*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O <code> path </code> parâmetro não está no diretório de raiz da aplicação atual."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "O <code> filePath </code> parâmetro não está no diretório de raiz da aplicação atual."
  platform:
  - net462
- uid: System.Web.HttpContext.Server
  id: Server
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Server
  nameWithType: HttpContext.Server
  fullName: System.Web.HttpContext.Server
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém o <xref href=&quot;System.Web.HttpServerUtility&quot;> </xref> objeto que fornece os métodos de processar pedidos Web."
  remarks: "A propriedade de servidor fornece acesso programático para as propriedades e métodos para a <xref:System.Web.HttpServerUtility>classe.</xref:System.Web.HttpServerUtility> Porque as páginas ASP.NET contém uma referência de predefinido para o <xref:System.Web>espaço de nomes (que contém o <xref:System.Web.HttpContext>classe), pode referenciar os membros de <xref:System.Web.HttpContext>uma página. aspx sem utilizar a referência de classe completamente qualificado para <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> </xref:System.Web.HttpContext> </xref:System.Web.HttpContext> </xref:System.Web> Por exemplo, pode utilizar `Server.CreateObject(&quot;MyCOMComponent&quot;)` para criar uma instância de um objecto COM o servidor. No entanto, se pretender utilizar os membros de <xref:System.Web.HttpServerUtility>de um módulo de code-behind do ASP.NET, tem de incluir uma referência para o <xref:System.Web>espaço de nomes no módulo e uma referência completamente qualificada para o contexto de pedido/resposta atualmente ativas e a classe no <xref:System.Web>que pretende utilizar.</xref:System.Web> </xref:System.Web> </xref:System.Web.HttpServerUtility> Por exemplo, numa página por detrás do código tem de especificar o nome completamente qualificado `HttpContext.Current.Server.CreateObject(&quot;MyCOMComponent&quot;)`."
  syntax:
    content: public System.Web.HttpServerUtility Server { get; }
    return:
      type: System.Web.HttpServerUtility
      description: "O <xref href=&quot;System.Web.HttpServerUtility&quot;> </xref> para o pedido HTTP atual."
  overload: System.Web.HttpContext.Server*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.Session
  id: Session
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Session
  nameWithType: HttpContext.Session
  fullName: System.Web.HttpContext.Session
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém o <xref href=&quot;System.Web.SessionState.HttpSessionState&quot;> </xref> objeto para o atual pedido HTTP."
  remarks: "A propriedade de sessão fornece acesso programático para as propriedades e métodos para a <xref:System.Web.SessionState.HttpSessionState>classe.</xref:System.Web.SessionState.HttpSessionState>       Para utilizar o estado de sessão tem de ativá-la. Para obter informações sobre como ativar o estado da sessão, consulte **estado da sessão configurar** no [descrição geral do Estado de sessão ASP.NET](~/add/includes/ajax-current-ext-md.md).       Para obter informações sobre como guardar valores de estado da sessão, consulte [como: guardar valores no estado da sessão](~/add/includes/ajax-current-ext-md.md). Para obter informações sobre como ler os valores do Estado de sessão, consulte [como: valores de leitura do Estado de sessão](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following examples show how to save values in session state and how to read values from session state.  \n  \n These examples require:  \n  \n-   An ASP.NET application that has session state enabled.  \n  \n-   A Web Forms page class that has access to the <xref:System.Web.UI.Page.Session%2A?displayProperty=fullName> property, or any class that has access to the <xref:System.Web.HttpContext.Current%2A?displayProperty=fullName> property.  \n  \n```c#  \nstring firstName = \"Jeff\";  \nstring lastName = \"Smith\";  \nstring city = \"Seattle\";  \n  \n// Save to session state in a Web Forms page class.  \nSession[\"FirstName\"] = firstName;  \nSession[\"LastName\"] = lastName;  \nSession[\"City\"] = city;  \n  \n// Read from session state in a Web Forms page class.  \nfirstName = (string)(Session[\"FirstName\"]);  \nlastName = (string)(Session[\"LastName\"]);  \ncity = (string)(Session[\"City\"]);  \n  \n// Outside of Web Forms page class, use HttpContext.Current.  \nHttpContext context = HttpContext.Current;  \ncontext.Session[\"FirstName\"] = firstName;  \nfirstName = (string)(context.Session[\"FirstName\"]);  \n  \n```  \n  \n```vb#  \nDim firstName As String = \"Jeff\"  \nDim lastName As String = \"Smith\"  \nDim city As String = \"Seattle\"  \n  \n' Save to session state in a Web Forms page class.  \nSession(\"FirstName\") = firstName  \nSession(\"LastName\") = lastName  \nSession(\"City\") = city  \n  \n' Read from session state in a Web Forms page class.  \nfirstName = DirectCast(Session(\"FirstName\"), String)  \nlastName = DirectCast(Session(\"LastName\"), String)  \ncity = DirectCast(Session(\"City\"), String)  \n  \n' Outside of Web Forms page class, use HttpContext.Current.  \nDim context As HttpContext = HttpContext.Current  \ncontext.Session(\"FirstName\") = firstName  \nfirstName = DirectCast(context.Session(\"FirstName\"), String)  \n  \n```"
  syntax:
    content: public System.Web.SessionState.HttpSessionState Session { get; }
    return:
      type: System.Web.SessionState.HttpSessionState
      description: "O <xref href=&quot;System.Web.SessionState.HttpSessionState&quot;> </xref> objeto para o atual pedido HTTP."
  overload: System.Web.HttpContext.Session*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.SetSessionStateBehavior(System.Web.SessionState.SessionStateBehavior)
  id: SetSessionStateBehavior(System.Web.SessionState.SessionStateBehavior)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: SetSessionStateBehavior(SessionStateBehavior)
  nameWithType: HttpContext.SetSessionStateBehavior(SessionStateBehavior)
  fullName: System.Web.HttpContext.SetSessionStateBehavior(SessionStateBehavior)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Define o tipo de comportamento do Estado de sessão que é necessário para suportar um pedido de HTTP."
  remarks: "A implementação de predefinida do ASP.NET, um processador de pedidos HTTP indica se requer o estado da sessão através da implementação de <xref:System.Web.SessionState.IRequiresSessionState>interface ou a <xref:System.Web.SessionState.IReadOnlySessionState>interface.</xref:System.Web.SessionState.IReadOnlySessionState> </xref:System.Web.SessionState.IRequiresSessionState> O método SetSessionStateBehavior e <xref:System.Web.SessionState.SessionStateBehavior>enumeração permitem-lhe fornecer mais detalhes sobre que tipo de suporte do Estado de sessão é necessário para processar um pedido.</xref:System.Web.SessionState.SessionStateBehavior> Para obter mais informações, consulte o <xref:System.Web.SessionState.SessionStateBehavior>enumeração.</xref:System.Web.SessionState.SessionStateBehavior>       O método SetSessionStateBehavior tem de ser chamado antes do <xref:System.Web.HttpApplication.AcquireRequestState>eventos de pipeline.</xref:System.Web.HttpApplication.AcquireRequestState> Chamadas que ocorrem durante ou após este evento irão fazer com que um <xref:System.InvalidOperationException>exceção.</xref:System.InvalidOperationException>"
  syntax:
    content: public void SetSessionStateBehavior (System.Web.SessionState.SessionStateBehavior sessionStateBehavior);
    parameters:
    - id: sessionStateBehavior
      type: System.Web.SessionState.SessionStateBehavior
      description: "Um dos valores de enumeração que especifica o tipo de comportamento do Estado de sessão é necessário."
  overload: System.Web.HttpContext.SetSessionStateBehavior*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O método foi chamado após a <xref href=&quot;System.Web.HttpApplication.AcquireRequestState&quot;> </xref> evento foi gerado."
  platform:
  - net462
- uid: System.Web.HttpContext.SkipAuthorization
  id: SkipAuthorization
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: SkipAuthorization
  nameWithType: HttpContext.SkipAuthorization
  fullName: System.Web.HttpContext.SkipAuthorization
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém ou define um valor que especifica se o <xref href=&quot;System.Web.Security.UrlAuthorizationModule&quot;> </xref> objeto deve ignorar a verificação de autorização para o pedido atual."
  remarks: "A propriedade SkipAuthorization destina-se para utilização avançada por módulos de autenticação que necessitam de redirecionamento para uma página que permite ligações anónimas. O módulo de autenticação de formulários e o módulo de autenticação de Passport definidos como SkipAuthorization quando redirecionar para uma página de início de sessão configurados. A definição de SkipAuthorization requer o `ControlPrincipal` sinalizador para ser definido. Para obter informações sobre o `ControlPrincipal` sinalizador, consulte <xref:System.Security.Permissions.SecurityPermissionFlag>.</xref:System.Security.Permissions.SecurityPermissionFlag>"
  syntax:
    content: public bool SkipAuthorization { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <xref href=&quot;System.Web.Security.UrlAuthorizationModule&quot;> </xref> deve ignorar a verificação de autorização; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpContext.SkipAuthorization*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.System#IServiceProvider#GetService(System.Type)
  id: System#IServiceProvider#GetService(System.Type)
  isEii: true
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: System.IServiceProvider.GetService(Type)
  nameWithType: HttpContext.System.IServiceProvider.GetService(Type)
  fullName: System.Web.HttpContext.System.IServiceProvider.GetService(Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Devolve um objeto para o tipo de serviço atual."
  remarks: "Este método é útil para obterem acesso ao subjacentes <xref:System.Web.HttpWorkerRequest>objeto.</xref:System.Web.HttpWorkerRequest>"
  syntax:
    content: object IServiceProvider.GetService (Type service);
    parameters:
    - id: service
      type: System.Type
      description: "Um tipo de <xref href=&quot;System.Web.HttpContext&quot;> </xref> serviço para definir o fornecedor de serviço."
    return:
      type: System.Object
      description: "A <xref href=&quot;System.Web.HttpContext&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> não se for encontrado nenhum serviço."
  overload: System.Web.HttpContext.System#IServiceProvider#GetService*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.ThreadAbortOnTimeout
  id: ThreadAbortOnTimeout
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: ThreadAbortOnTimeout
  nameWithType: HttpContext.ThreadAbortOnTimeout
  fullName: System.Web.HttpContext.ThreadAbortOnTimeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém ou define um valor que especifica se o tempo de execução do ASP.NET deve chamar &lt;xref:System.Threading.Thread.Abort%2A?displayProperty=fullName&gt; no thread que está a servir este pedido quando o pedido exceder o tempo limite."
  remarks: "Nos processadores e módulos que estão a utilizar o <xref:System.Web.HttpRequest.TimedOutToken%2A?displayProperty=fullName>propriedade implementar cooperative cancelamento, poderá pretender desativar o <xref:System.Threading.Thread.Abort%2A?displayProperty=fullName>comportamento ASP.NET executa por predefinição, quando um pedido exceder o tempo limite.</xref:System.Threading.Thread.Abort%2A?displayProperty=fullName> </xref:System.Web.HttpRequest.TimedOutToken%2A?displayProperty=fullName> Definição desta propriedade como `false` podem ajudar a certificar-se de que rotinas de cancelamento e limpeza do disco serão executado sem ser interrompido pelo ASP.NET.       Se definir esta propriedade para `false`, ASP.NET não automaticamente apresentará uma página de erro &quot;O pedido excedido o tempo&quot; quando ocorre um tempo limite. A aplicação é responsável pela definição adequadamente o conteúdo da resposta."
  syntax:
    content: public bool ThreadAbortOnTimeout { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se &lt;xref:System.Threading.Thread.Abort%2A?displayProperty=fullName&gt; irá ser chamado quando o thread vezes terminar; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpContext.ThreadAbortOnTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.Timestamp
  id: Timestamp
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Timestamp
  nameWithType: HttpContext.Timestamp
  fullName: System.Web.HttpContext.Timestamp
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém o timestamp inicial do pedido HTTP atual."
  remarks: "Timestamp devolvida a propriedade Timestamp a hora local do servidor e é definido durante a instanciação do <xref:System.Web.HttpContext>objeto.</xref:System.Web.HttpContext> A hora local é igual a hora UTC Plus o Desvio UTC."
  syntax:
    content: public DateTime Timestamp { get; }
    return:
      type: System.DateTime
      description: "O carimbo do pedido HTTP atual."
  overload: System.Web.HttpContext.Timestamp*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.Trace
  id: Trace
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Trace
  nameWithType: HttpContext.Trace
  fullName: System.Web.HttpContext.Trace
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém o <xref href=&quot;System.Web.TraceContext&quot;> </xref> objeto para a resposta HTTP atual."
  syntax:
    content: public System.Web.TraceContext Trace { get; }
    return:
      type: System.Web.TraceContext
      description: "O <xref href=&quot;System.Web.TraceContext&quot;> </xref> a resposta de HTTP atual."
  overload: System.Web.HttpContext.Trace*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.User
  id: User
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: User
  nameWithType: HttpContext.User
  fullName: System.Web.HttpContext.User
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém ou define a informação de segurança para o pedido HTTP atual."
  remarks: "A propriedade de utilizador fornece acesso programático para as propriedades e métodos para a <xref:System.Security.Principal.IPrincipal>interface.</xref:System.Security.Principal.IPrincipal>       Porque as páginas ASP.NET contém uma referência de predefinido para o <xref:System.Web>espaço de nomes (que contém o <xref:System.Web.HttpContext>classe), pode referenciar os membros de <xref:System.Web.HttpContext>uma página. aspx sem utilizar a referência de classe completamente qualificado para <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> </xref:System.Web.HttpContext> </xref:System.Web.HttpContext> </xref:System.Web> Por exemplo, pode utilizar `User.Identity.Name` ao obter o nome do utilizador em cujo nome de processo atual está em execução. No entanto, se pretender utilizar os membros de <xref:System.Security.Principal.IPrincipal>de um módulo de code-behind do ASP.NET, tem de incluir uma referência para o <xref:System.Web>espaço de nomes no módulo e uma referência completamente qualificada para o contexto de pedido/resposta atualmente ativas e a classe no <xref:System.Web>que pretende utilizar.</xref:System.Web> </xref:System.Web> </xref:System.Security.Principal.IPrincipal> Por exemplo, numa página por detrás do código tem de especificar o nome completamente qualificado `HttpContext.Current.User.Identity.Name`."
  example:
  - "The following example shows how to access properties of the current user through the User property. Those properties are used to set the title of the Web page.  \n  \n If the application uses Windows authentication, the user name includes the domain. For example, the page title would be “Home page for DOMAIN\\username”.  \n  \n [!code-cs[System.Web.HttpContext.User#1](~/add/codesnippet/csharp/p-system.web.httpcontext_1_1.cs)]\n [!code-vb[System.Web.HttpContext.User#1](~/add/codesnippet/visualbasic/p-system.web.httpcontext_1_1.vb)]"
  syntax:
    content: public System.Security.Principal.IPrincipal User { get; set; }
    return:
      type: System.Security.Principal.IPrincipal
      description: "Informações de segurança para o atual pedido HTTP."
  overload: System.Web.HttpContext.User*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.WebSocketNegotiatedProtocol
  id: WebSocketNegotiatedProtocol
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: WebSocketNegotiatedProtocol
  nameWithType: HttpContext.WebSocketNegotiatedProtocol
  fullName: System.Web.HttpContext.WebSocketNegotiatedProtocol
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém o protocolo negociado que foi enviado a partir do servidor para o cliente para um <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> ligação."
  syntax:
    content: public string WebSocketNegotiatedProtocol { get; }
    return:
      type: System.String
      description: "O protocolo negociado."
  overload: System.Web.HttpContext.WebSocketNegotiatedProtocol*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.WebSocketRequestedProtocols
  id: WebSocketRequestedProtocols
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: WebSocketRequestedProtocols
  nameWithType: HttpContext.WebSocketRequestedProtocols
  fullName: System.Web.HttpContext.WebSocketRequestedProtocols
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém a lista ordenada de protocolos solicitada pelo cliente."
  syntax:
    content: public System.Collections.Generic.IList<string> WebSocketRequestedProtocols { get; }
    return:
      type: System.Collections.Generic.IList{System.String}
      description: "Os protocolos pedidos, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se não for um <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> pedido ou nenhuma lista estiver presente."
  overload: System.Web.HttpContext.WebSocketRequestedProtocols*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.Resources.MissingManifestResourceException
  isExternal: true
  name: System.Resources.MissingManifestResourceException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.HttpContext.#ctor(System.Web.HttpWorkerRequest)
  parent: System.Web.HttpContext
  isExternal: false
  name: HttpContext(HttpWorkerRequest)
  nameWithType: HttpContext.HttpContext(HttpWorkerRequest)
  fullName: System.Web.HttpContext.HttpContext(HttpWorkerRequest)
- uid: System.Web.HttpWorkerRequest
  parent: System.Web
  isExternal: false
  name: HttpWorkerRequest
  nameWithType: HttpWorkerRequest
  fullName: System.Web.HttpWorkerRequest
- uid: System.Web.HttpContext.#ctor(System.Web.HttpRequest,System.Web.HttpResponse)
  parent: System.Web.HttpContext
  isExternal: false
  name: HttpContext(HttpRequest,HttpResponse)
  nameWithType: HttpContext.HttpContext(HttpRequest,HttpResponse)
  fullName: System.Web.HttpContext.HttpContext(HttpRequest,HttpResponse)
- uid: System.Web.HttpRequest
  parent: System.Web
  isExternal: false
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: System.Web.HttpRequest
- uid: System.Web.HttpResponse
  parent: System.Web
  isExternal: false
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: System.Web.HttpResponse
- uid: System.Web.HttpContext.AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task})
  parent: System.Web.HttpContext
  isExternal: false
  name: AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>)
  nameWithType: HttpContext.AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>)
  fullName: System.Web.HttpContext.AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>)
- uid: System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task}
  parent: System
  isExternal: true
  name: Func<AspNetWebSocketContext,Task>
  nameWithType: Func<AspNetWebSocketContext,Task>
  fullName: System.Func<System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.WebSockets.AspNetWebSocketContext
    name: AspNetWebSocketContext
    nameWithType: AspNetWebSocketContext
    fullName: AspNetWebSocketContext
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: Task
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.HttpContext.AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task},System.Web.WebSockets.AspNetWebSocketOptions)
  parent: System.Web.HttpContext
  isExternal: false
  name: AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>,AspNetWebSocketOptions)
  nameWithType: HttpContext.AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>,AspNetWebSocketOptions)
  fullName: System.Web.HttpContext.AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>,AspNetWebSocketOptions)
- uid: System.Web.WebSockets.AspNetWebSocketOptions
  parent: System.Web.WebSockets
  isExternal: false
  name: AspNetWebSocketOptions
  nameWithType: AspNetWebSocketOptions
  fullName: System.Web.WebSockets.AspNetWebSocketOptions
- uid: System.Web.HttpContext.AddError(System.Exception)
  parent: System.Web.HttpContext
  isExternal: false
  name: AddError(Exception)
  nameWithType: HttpContext.AddError(Exception)
  fullName: System.Web.HttpContext.AddError(Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.HttpContext.AddOnRequestCompleted(System.Action{System.Web.HttpContext})
  parent: System.Web.HttpContext
  isExternal: false
  name: AddOnRequestCompleted(Action<HttpContext>)
  nameWithType: HttpContext.AddOnRequestCompleted(Action<HttpContext>)
  fullName: System.Web.HttpContext.AddOnRequestCompleted(Action<HttpContext>)
- uid: System.Web.ISubscriptionToken
  parent: System.Web
  isExternal: false
  name: ISubscriptionToken
  nameWithType: ISubscriptionToken
  fullName: System.Web.ISubscriptionToken
- uid: System.Action{System.Web.HttpContext}
  parent: System
  isExternal: true
  name: Action<HttpContext>
  nameWithType: Action<HttpContext>
  fullName: System.Action<System.Web.HttpContext>
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: Action<System.Web.HttpContext>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: HttpContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.HttpContext.AllErrors
  parent: System.Web.HttpContext
  isExternal: false
  name: AllErrors
  nameWithType: HttpContext.AllErrors
  fullName: System.Web.HttpContext.AllErrors
- uid: System.Exception[]
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception[]
  spec.csharp:
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: Exception[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.HttpContext.AllowAsyncDuringSyncStages
  parent: System.Web.HttpContext
  isExternal: false
  name: AllowAsyncDuringSyncStages
  nameWithType: HttpContext.AllowAsyncDuringSyncStages
  fullName: System.Web.HttpContext.AllowAsyncDuringSyncStages
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.HttpContext.Application
  parent: System.Web.HttpContext
  isExternal: false
  name: Application
  nameWithType: HttpContext.Application
  fullName: System.Web.HttpContext.Application
- uid: System.Web.HttpApplicationState
  parent: System.Web
  isExternal: false
  name: HttpApplicationState
  nameWithType: HttpApplicationState
  fullName: System.Web.HttpApplicationState
- uid: System.Web.HttpContext.ApplicationInstance
  parent: System.Web.HttpContext
  isExternal: false
  name: ApplicationInstance
  nameWithType: HttpContext.ApplicationInstance
  fullName: System.Web.HttpContext.ApplicationInstance
- uid: System.Web.HttpApplication
  parent: System.Web
  isExternal: false
  name: HttpApplication
  nameWithType: HttpApplication
  fullName: System.Web.HttpApplication
- uid: System.Web.HttpContext.AsyncPreloadMode
  parent: System.Web.HttpContext
  isExternal: false
  name: AsyncPreloadMode
  nameWithType: HttpContext.AsyncPreloadMode
  fullName: System.Web.HttpContext.AsyncPreloadMode
- uid: System.Web.Configuration.AsyncPreloadModeFlags
  parent: System.Web.Configuration
  isExternal: false
  name: AsyncPreloadModeFlags
  nameWithType: AsyncPreloadModeFlags
  fullName: System.Web.Configuration.AsyncPreloadModeFlags
- uid: System.Web.HttpContext.Cache
  parent: System.Web.HttpContext
  isExternal: false
  name: Cache
  nameWithType: HttpContext.Cache
  fullName: System.Web.HttpContext.Cache
- uid: System.Web.Caching.Cache
  parent: System.Web.Caching
  isExternal: false
  name: Cache
  nameWithType: Cache
  fullName: System.Web.Caching.Cache
- uid: System.Web.HttpContext.ClearError
  parent: System.Web.HttpContext
  isExternal: false
  name: ClearError()
  nameWithType: HttpContext.ClearError()
  fullName: System.Web.HttpContext.ClearError()
- uid: System.Web.HttpContext.Current
  parent: System.Web.HttpContext
  isExternal: false
  name: Current
  nameWithType: HttpContext.Current
  fullName: System.Web.HttpContext.Current
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.HttpContext.CurrentHandler
  parent: System.Web.HttpContext
  isExternal: false
  name: CurrentHandler
  nameWithType: HttpContext.CurrentHandler
  fullName: System.Web.HttpContext.CurrentHandler
- uid: System.Web.IHttpHandler
  parent: System.Web
  isExternal: false
  name: IHttpHandler
  nameWithType: IHttpHandler
  fullName: System.Web.IHttpHandler
- uid: System.Web.HttpContext.CurrentNotification
  parent: System.Web.HttpContext
  isExternal: false
  name: CurrentNotification
  nameWithType: HttpContext.CurrentNotification
  fullName: System.Web.HttpContext.CurrentNotification
- uid: System.Web.RequestNotification
  parent: System.Web
  isExternal: false
  name: RequestNotification
  nameWithType: RequestNotification
  fullName: System.Web.RequestNotification
- uid: System.Web.HttpContext.DisposeOnPipelineCompleted(System.IDisposable)
  parent: System.Web.HttpContext
  isExternal: false
  name: DisposeOnPipelineCompleted(IDisposable)
  nameWithType: HttpContext.DisposeOnPipelineCompleted(IDisposable)
  fullName: System.Web.HttpContext.DisposeOnPipelineCompleted(IDisposable)
- uid: System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Web.HttpContext.Error
  parent: System.Web.HttpContext
  isExternal: false
  name: Error
  nameWithType: HttpContext.Error
  fullName: System.Web.HttpContext.Error
- uid: System.Web.HttpContext.GetAppConfig(System.String)
  parent: System.Web.HttpContext
  isExternal: false
  name: GetAppConfig(String)
  nameWithType: HttpContext.GetAppConfig(String)
  fullName: System.Web.HttpContext.GetAppConfig(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpContext.GetConfig(System.String)
  parent: System.Web.HttpContext
  isExternal: false
  name: GetConfig(String)
  nameWithType: HttpContext.GetConfig(String)
  fullName: System.Web.HttpContext.GetConfig(String)
- uid: System.Web.HttpContext.GetGlobalResourceObject(System.String,System.String)
  parent: System.Web.HttpContext
  isExternal: false
  name: GetGlobalResourceObject(String,String)
  nameWithType: HttpContext.GetGlobalResourceObject(String,String)
  fullName: System.Web.HttpContext.GetGlobalResourceObject(String,String)
- uid: System.Web.HttpContext.GetGlobalResourceObject(System.String,System.String,System.Globalization.CultureInfo)
  parent: System.Web.HttpContext
  isExternal: false
  name: GetGlobalResourceObject(String,String,CultureInfo)
  nameWithType: HttpContext.GetGlobalResourceObject(String,String,CultureInfo)
  fullName: System.Web.HttpContext.GetGlobalResourceObject(String,String,CultureInfo)
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Web.HttpContext.GetLocalResourceObject(System.String,System.String)
  parent: System.Web.HttpContext
  isExternal: false
  name: GetLocalResourceObject(String,String)
  nameWithType: HttpContext.GetLocalResourceObject(String,String)
  fullName: System.Web.HttpContext.GetLocalResourceObject(String,String)
- uid: System.Web.HttpContext.GetLocalResourceObject(System.String,System.String,System.Globalization.CultureInfo)
  parent: System.Web.HttpContext
  isExternal: false
  name: GetLocalResourceObject(String,String,CultureInfo)
  nameWithType: HttpContext.GetLocalResourceObject(String,String,CultureInfo)
  fullName: System.Web.HttpContext.GetLocalResourceObject(String,String,CultureInfo)
- uid: System.Web.HttpContext.GetSection(System.String)
  parent: System.Web.HttpContext
  isExternal: false
  name: GetSection(String)
  nameWithType: HttpContext.GetSection(String)
  fullName: System.Web.HttpContext.GetSection(String)
- uid: System.Web.HttpContext.Handler
  parent: System.Web.HttpContext
  isExternal: false
  name: Handler
  nameWithType: HttpContext.Handler
  fullName: System.Web.HttpContext.Handler
- uid: System.Web.HttpContext.IsCustomErrorEnabled
  parent: System.Web.HttpContext
  isExternal: false
  name: IsCustomErrorEnabled
  nameWithType: HttpContext.IsCustomErrorEnabled
  fullName: System.Web.HttpContext.IsCustomErrorEnabled
- uid: System.Web.HttpContext.IsDebuggingEnabled
  parent: System.Web.HttpContext
  isExternal: false
  name: IsDebuggingEnabled
  nameWithType: HttpContext.IsDebuggingEnabled
  fullName: System.Web.HttpContext.IsDebuggingEnabled
- uid: System.Web.HttpContext.IsPostNotification
  parent: System.Web.HttpContext
  isExternal: false
  name: IsPostNotification
  nameWithType: HttpContext.IsPostNotification
  fullName: System.Web.HttpContext.IsPostNotification
- uid: System.Web.HttpContext.IsWebSocketRequest
  parent: System.Web.HttpContext
  isExternal: false
  name: IsWebSocketRequest
  nameWithType: HttpContext.IsWebSocketRequest
  fullName: System.Web.HttpContext.IsWebSocketRequest
- uid: System.Web.HttpContext.IsWebSocketRequestUpgrading
  parent: System.Web.HttpContext
  isExternal: false
  name: IsWebSocketRequestUpgrading
  nameWithType: HttpContext.IsWebSocketRequestUpgrading
  fullName: System.Web.HttpContext.IsWebSocketRequestUpgrading
- uid: System.Web.HttpContext.Items
  parent: System.Web.HttpContext
  isExternal: false
  name: Items
  nameWithType: HttpContext.Items
  fullName: System.Web.HttpContext.Items
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.HttpContext.PageInstrumentation
  parent: System.Web.HttpContext
  isExternal: false
  name: PageInstrumentation
  nameWithType: HttpContext.PageInstrumentation
  fullName: System.Web.HttpContext.PageInstrumentation
- uid: System.Web.Instrumentation.PageInstrumentationService
  parent: System.Web.Instrumentation
  isExternal: false
  name: PageInstrumentationService
  nameWithType: PageInstrumentationService
  fullName: System.Web.Instrumentation.PageInstrumentationService
- uid: System.Web.HttpContext.PreviousHandler
  parent: System.Web.HttpContext
  isExternal: false
  name: PreviousHandler
  nameWithType: HttpContext.PreviousHandler
  fullName: System.Web.HttpContext.PreviousHandler
- uid: System.Web.HttpContext.Profile
  parent: System.Web.HttpContext
  isExternal: false
  name: Profile
  nameWithType: HttpContext.Profile
  fullName: System.Web.HttpContext.Profile
- uid: System.Web.Profile.ProfileBase
  parent: System.Web.Profile
  isExternal: false
  name: ProfileBase
  nameWithType: ProfileBase
  fullName: System.Web.Profile.ProfileBase
- uid: System.Web.HttpContext.RemapHandler(System.Web.IHttpHandler)
  parent: System.Web.HttpContext
  isExternal: false
  name: RemapHandler(IHttpHandler)
  nameWithType: HttpContext.RemapHandler(IHttpHandler)
  fullName: System.Web.HttpContext.RemapHandler(IHttpHandler)
- uid: System.Web.HttpContext.Request
  parent: System.Web.HttpContext
  isExternal: false
  name: Request
  nameWithType: HttpContext.Request
  fullName: System.Web.HttpContext.Request
- uid: System.Web.HttpContext.Response
  parent: System.Web.HttpContext
  isExternal: false
  name: Response
  nameWithType: HttpContext.Response
  fullName: System.Web.HttpContext.Response
- uid: System.Web.HttpContext.RewritePath(System.String)
  parent: System.Web.HttpContext
  isExternal: false
  name: RewritePath(String)
  nameWithType: HttpContext.RewritePath(String)
  fullName: System.Web.HttpContext.RewritePath(String)
- uid: System.Web.HttpContext.RewritePath(System.String,System.Boolean)
  parent: System.Web.HttpContext
  isExternal: false
  name: RewritePath(String,Boolean)
  nameWithType: HttpContext.RewritePath(String,Boolean)
  fullName: System.Web.HttpContext.RewritePath(String,Boolean)
- uid: System.Web.HttpContext.RewritePath(System.String,System.String,System.String)
  parent: System.Web.HttpContext
  isExternal: false
  name: RewritePath(String,String,String)
  nameWithType: HttpContext.RewritePath(String,String,String)
  fullName: System.Web.HttpContext.RewritePath(String,String,String)
- uid: System.Web.HttpContext.RewritePath(System.String,System.String,System.String,System.Boolean)
  parent: System.Web.HttpContext
  isExternal: false
  name: RewritePath(String,String,String,Boolean)
  nameWithType: HttpContext.RewritePath(String,String,String,Boolean)
  fullName: System.Web.HttpContext.RewritePath(String,String,String,Boolean)
- uid: System.Web.HttpContext.Server
  parent: System.Web.HttpContext
  isExternal: false
  name: Server
  nameWithType: HttpContext.Server
  fullName: System.Web.HttpContext.Server
- uid: System.Web.HttpServerUtility
  parent: System.Web
  isExternal: false
  name: HttpServerUtility
  nameWithType: HttpServerUtility
  fullName: System.Web.HttpServerUtility
- uid: System.Web.HttpContext.Session
  parent: System.Web.HttpContext
  isExternal: false
  name: Session
  nameWithType: HttpContext.Session
  fullName: System.Web.HttpContext.Session
- uid: System.Web.SessionState.HttpSessionState
  parent: System.Web.SessionState
  isExternal: false
  name: HttpSessionState
  nameWithType: HttpSessionState
  fullName: System.Web.SessionState.HttpSessionState
- uid: System.Web.HttpContext.SetSessionStateBehavior(System.Web.SessionState.SessionStateBehavior)
  parent: System.Web.HttpContext
  isExternal: false
  name: SetSessionStateBehavior(SessionStateBehavior)
  nameWithType: HttpContext.SetSessionStateBehavior(SessionStateBehavior)
  fullName: System.Web.HttpContext.SetSessionStateBehavior(SessionStateBehavior)
- uid: System.Web.SessionState.SessionStateBehavior
  parent: System.Web.SessionState
  isExternal: false
  name: SessionStateBehavior
  nameWithType: SessionStateBehavior
  fullName: System.Web.SessionState.SessionStateBehavior
- uid: System.Web.HttpContext.SkipAuthorization
  parent: System.Web.HttpContext
  isExternal: false
  name: SkipAuthorization
  nameWithType: HttpContext.SkipAuthorization
  fullName: System.Web.HttpContext.SkipAuthorization
- uid: System.Web.HttpContext.System#IServiceProvider#GetService(System.Type)
  parent: System.Web.HttpContext
  isExternal: false
  name: System.IServiceProvider.GetService(Type)
  nameWithType: HttpContext.System.IServiceProvider.GetService(Type)
  fullName: System.Web.HttpContext.System.IServiceProvider.GetService(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.HttpContext.ThreadAbortOnTimeout
  parent: System.Web.HttpContext
  isExternal: false
  name: ThreadAbortOnTimeout
  nameWithType: HttpContext.ThreadAbortOnTimeout
  fullName: System.Web.HttpContext.ThreadAbortOnTimeout
- uid: System.Web.HttpContext.Timestamp
  parent: System.Web.HttpContext
  isExternal: false
  name: Timestamp
  nameWithType: HttpContext.Timestamp
  fullName: System.Web.HttpContext.Timestamp
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Web.HttpContext.Trace
  parent: System.Web.HttpContext
  isExternal: false
  name: Trace
  nameWithType: HttpContext.Trace
  fullName: System.Web.HttpContext.Trace
- uid: System.Web.TraceContext
  parent: System.Web
  isExternal: false
  name: TraceContext
  nameWithType: TraceContext
  fullName: System.Web.TraceContext
- uid: System.Web.HttpContext.User
  parent: System.Web.HttpContext
  isExternal: false
  name: User
  nameWithType: HttpContext.User
  fullName: System.Web.HttpContext.User
- uid: System.Security.Principal.IPrincipal
  parent: System.Security.Principal
  isExternal: true
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: System.Security.Principal.IPrincipal
- uid: System.Web.HttpContext.WebSocketNegotiatedProtocol
  parent: System.Web.HttpContext
  isExternal: false
  name: WebSocketNegotiatedProtocol
  nameWithType: HttpContext.WebSocketNegotiatedProtocol
  fullName: System.Web.HttpContext.WebSocketNegotiatedProtocol
- uid: System.Web.HttpContext.WebSocketRequestedProtocols
  parent: System.Web.HttpContext
  isExternal: false
  name: WebSocketRequestedProtocols
  nameWithType: HttpContext.WebSocketRequestedProtocols
  fullName: System.Web.HttpContext.WebSocketRequestedProtocols
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.HttpContext.#ctor*
  parent: System.Web.HttpContext
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext.HttpContext
- uid: System.Web.HttpContext.AcceptWebSocketRequest*
  parent: System.Web.HttpContext
  isExternal: false
  name: AcceptWebSocketRequest
  nameWithType: HttpContext.AcceptWebSocketRequest
- uid: System.Web.HttpContext.AddError*
  parent: System.Web.HttpContext
  isExternal: false
  name: AddError
  nameWithType: HttpContext.AddError
- uid: System.Web.HttpContext.AddOnRequestCompleted*
  parent: System.Web.HttpContext
  isExternal: false
  name: AddOnRequestCompleted
  nameWithType: HttpContext.AddOnRequestCompleted
- uid: System.Web.HttpContext.AllErrors*
  parent: System.Web.HttpContext
  isExternal: false
  name: AllErrors
  nameWithType: HttpContext.AllErrors
- uid: System.Web.HttpContext.AllowAsyncDuringSyncStages*
  parent: System.Web.HttpContext
  isExternal: false
  name: AllowAsyncDuringSyncStages
  nameWithType: HttpContext.AllowAsyncDuringSyncStages
- uid: System.Web.HttpContext.Application*
  parent: System.Web.HttpContext
  isExternal: false
  name: Application
  nameWithType: HttpContext.Application
- uid: System.Web.HttpContext.ApplicationInstance*
  parent: System.Web.HttpContext
  isExternal: false
  name: ApplicationInstance
  nameWithType: HttpContext.ApplicationInstance
- uid: System.Web.HttpContext.AsyncPreloadMode*
  parent: System.Web.HttpContext
  isExternal: false
  name: AsyncPreloadMode
  nameWithType: HttpContext.AsyncPreloadMode
- uid: System.Web.HttpContext.Cache*
  parent: System.Web.HttpContext
  isExternal: false
  name: Cache
  nameWithType: HttpContext.Cache
- uid: System.Web.HttpContext.ClearError*
  parent: System.Web.HttpContext
  isExternal: false
  name: ClearError
  nameWithType: HttpContext.ClearError
- uid: System.Web.HttpContext.Current*
  parent: System.Web.HttpContext
  isExternal: false
  name: Current
  nameWithType: HttpContext.Current
- uid: System.Web.HttpContext.CurrentHandler*
  parent: System.Web.HttpContext
  isExternal: false
  name: CurrentHandler
  nameWithType: HttpContext.CurrentHandler
- uid: System.Web.HttpContext.CurrentNotification*
  parent: System.Web.HttpContext
  isExternal: false
  name: CurrentNotification
  nameWithType: HttpContext.CurrentNotification
- uid: System.Web.HttpContext.DisposeOnPipelineCompleted*
  parent: System.Web.HttpContext
  isExternal: false
  name: DisposeOnPipelineCompleted
  nameWithType: HttpContext.DisposeOnPipelineCompleted
- uid: System.Web.HttpContext.Error*
  parent: System.Web.HttpContext
  isExternal: false
  name: Error
  nameWithType: HttpContext.Error
- uid: System.Web.HttpContext.GetAppConfig*
  parent: System.Web.HttpContext
  isExternal: false
  name: GetAppConfig
  nameWithType: HttpContext.GetAppConfig
- uid: System.Web.HttpContext.GetConfig*
  parent: System.Web.HttpContext
  isExternal: false
  name: GetConfig
  nameWithType: HttpContext.GetConfig
- uid: System.Web.HttpContext.GetGlobalResourceObject*
  parent: System.Web.HttpContext
  isExternal: false
  name: GetGlobalResourceObject
  nameWithType: HttpContext.GetGlobalResourceObject
- uid: System.Web.HttpContext.GetLocalResourceObject*
  parent: System.Web.HttpContext
  isExternal: false
  name: GetLocalResourceObject
  nameWithType: HttpContext.GetLocalResourceObject
- uid: System.Web.HttpContext.GetSection*
  parent: System.Web.HttpContext
  isExternal: false
  name: GetSection
  nameWithType: HttpContext.GetSection
- uid: System.Web.HttpContext.Handler*
  parent: System.Web.HttpContext
  isExternal: false
  name: Handler
  nameWithType: HttpContext.Handler
- uid: System.Web.HttpContext.IsCustomErrorEnabled*
  parent: System.Web.HttpContext
  isExternal: false
  name: IsCustomErrorEnabled
  nameWithType: HttpContext.IsCustomErrorEnabled
- uid: System.Web.HttpContext.IsDebuggingEnabled*
  parent: System.Web.HttpContext
  isExternal: false
  name: IsDebuggingEnabled
  nameWithType: HttpContext.IsDebuggingEnabled
- uid: System.Web.HttpContext.IsPostNotification*
  parent: System.Web.HttpContext
  isExternal: false
  name: IsPostNotification
  nameWithType: HttpContext.IsPostNotification
- uid: System.Web.HttpContext.IsWebSocketRequest*
  parent: System.Web.HttpContext
  isExternal: false
  name: IsWebSocketRequest
  nameWithType: HttpContext.IsWebSocketRequest
- uid: System.Web.HttpContext.IsWebSocketRequestUpgrading*
  parent: System.Web.HttpContext
  isExternal: false
  name: IsWebSocketRequestUpgrading
  nameWithType: HttpContext.IsWebSocketRequestUpgrading
- uid: System.Web.HttpContext.Items*
  parent: System.Web.HttpContext
  isExternal: false
  name: Items
  nameWithType: HttpContext.Items
- uid: System.Web.HttpContext.PageInstrumentation*
  parent: System.Web.HttpContext
  isExternal: false
  name: PageInstrumentation
  nameWithType: HttpContext.PageInstrumentation
- uid: System.Web.HttpContext.PreviousHandler*
  parent: System.Web.HttpContext
  isExternal: false
  name: PreviousHandler
  nameWithType: HttpContext.PreviousHandler
- uid: System.Web.HttpContext.Profile*
  parent: System.Web.HttpContext
  isExternal: false
  name: Profile
  nameWithType: HttpContext.Profile
- uid: System.Web.HttpContext.RemapHandler*
  parent: System.Web.HttpContext
  isExternal: false
  name: RemapHandler
  nameWithType: HttpContext.RemapHandler
- uid: System.Web.HttpContext.Request*
  parent: System.Web.HttpContext
  isExternal: false
  name: Request
  nameWithType: HttpContext.Request
- uid: System.Web.HttpContext.Response*
  parent: System.Web.HttpContext
  isExternal: false
  name: Response
  nameWithType: HttpContext.Response
- uid: System.Web.HttpContext.RewritePath*
  parent: System.Web.HttpContext
  isExternal: false
  name: RewritePath
  nameWithType: HttpContext.RewritePath
- uid: System.Web.HttpContext.Server*
  parent: System.Web.HttpContext
  isExternal: false
  name: Server
  nameWithType: HttpContext.Server
- uid: System.Web.HttpContext.Session*
  parent: System.Web.HttpContext
  isExternal: false
  name: Session
  nameWithType: HttpContext.Session
- uid: System.Web.HttpContext.SetSessionStateBehavior*
  parent: System.Web.HttpContext
  isExternal: false
  name: SetSessionStateBehavior
  nameWithType: HttpContext.SetSessionStateBehavior
- uid: System.Web.HttpContext.SkipAuthorization*
  parent: System.Web.HttpContext
  isExternal: false
  name: SkipAuthorization
  nameWithType: HttpContext.SkipAuthorization
- uid: System.Web.HttpContext.System#IServiceProvider#GetService*
  parent: System.Web.HttpContext
  isExternal: false
  name: System.IServiceProvider.GetService
  nameWithType: HttpContext.System.IServiceProvider.GetService
- uid: System.Web.HttpContext.ThreadAbortOnTimeout*
  parent: System.Web.HttpContext
  isExternal: false
  name: ThreadAbortOnTimeout
  nameWithType: HttpContext.ThreadAbortOnTimeout
- uid: System.Web.HttpContext.Timestamp*
  parent: System.Web.HttpContext
  isExternal: false
  name: Timestamp
  nameWithType: HttpContext.Timestamp
- uid: System.Web.HttpContext.Trace*
  parent: System.Web.HttpContext
  isExternal: false
  name: Trace
  nameWithType: HttpContext.Trace
- uid: System.Web.HttpContext.User*
  parent: System.Web.HttpContext
  isExternal: false
  name: User
  nameWithType: HttpContext.User
- uid: System.Web.HttpContext.WebSocketNegotiatedProtocol*
  parent: System.Web.HttpContext
  isExternal: false
  name: WebSocketNegotiatedProtocol
  nameWithType: HttpContext.WebSocketNegotiatedProtocol
- uid: System.Web.HttpContext.WebSocketRequestedProtocols*
  parent: System.Web.HttpContext
  isExternal: false
  name: WebSocketRequestedProtocols
  nameWithType: HttpContext.WebSocketRequestedProtocols
