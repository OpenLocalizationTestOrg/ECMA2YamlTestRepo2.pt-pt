### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlDocumentType
  id: XmlDocumentType
  children:
  - System.Xml.XmlDocumentType.#ctor(System.String,System.String,System.String,System.String,System.Xml.XmlDocument)
  - System.Xml.XmlDocumentType.CloneNode(System.Boolean)
  - System.Xml.XmlDocumentType.Entities
  - System.Xml.XmlDocumentType.InternalSubset
  - System.Xml.XmlDocumentType.IsReadOnly
  - System.Xml.XmlDocumentType.LocalName
  - System.Xml.XmlDocumentType.Name
  - System.Xml.XmlDocumentType.NodeType
  - System.Xml.XmlDocumentType.Notations
  - System.Xml.XmlDocumentType.PublicId
  - System.Xml.XmlDocumentType.SystemId
  - System.Xml.XmlDocumentType.WriteContentTo(System.Xml.XmlWriter)
  - System.Xml.XmlDocumentType.WriteTo(System.Xml.XmlWriter)
  langs:
  - csharp
  name: XmlDocumentType
  nameWithType: XmlDocumentType
  fullName: System.Xml.XmlDocumentType
  type: Class
  summary: "Representa a declaração de tipo de documento."
  remarks: "A classe de XmlDocumentType pode ser utilizada para devolver informações sobre uma declaração de tipo de documento. Utilize o <xref:System.Xml.XmlDocument.CreateDocumentType%2A?displayProperty=fullName>método para criar um objeto de XmlDocumentType.</xref:System.Xml.XmlDocument.CreateDocumentType%2A?displayProperty=fullName>"
  syntax:
    content: 'public class XmlDocumentType : System.Xml.XmlLinkedNode'
  inheritance:
  - System.Object
  - System.Xml.XmlNode
  - System.Xml.XmlLinkedNode
  implements: []
  inheritedMembers:
  - System.Xml.XmlLinkedNode.NextSibling
  - System.Xml.XmlLinkedNode.PreviousSibling
  - System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.Attributes
  - System.Xml.XmlNode.BaseURI
  - System.Xml.XmlNode.ChildNodes
  - System.Xml.XmlNode.Clone
  - System.Xml.XmlNode.CreateNavigator
  - System.Xml.XmlNode.FirstChild
  - System.Xml.XmlNode.GetEnumerator
  - System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)
  - System.Xml.XmlNode.GetPrefixOfNamespace(System.String)
  - System.Xml.XmlNode.HasChildNodes
  - System.Xml.XmlNode.InnerText
  - System.Xml.XmlNode.InnerXml
  - System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.Item(System.String)
  - System.Xml.XmlNode.Item(System.String,System.String)
  - System.Xml.XmlNode.LastChild
  - System.Xml.XmlNode.NamespaceURI
  - System.Xml.XmlNode.Normalize
  - System.Xml.XmlNode.OuterXml
  - System.Xml.XmlNode.OwnerDocument
  - System.Xml.XmlNode.ParentNode
  - System.Xml.XmlNode.Prefix
  - System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.PreviousText
  - System.Xml.XmlNode.RemoveAll
  - System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.SchemaInfo
  - System.Xml.XmlNode.SelectNodes(System.String)
  - System.Xml.XmlNode.SelectNodes(System.String,System.Xml.XmlNamespaceManager)
  - System.Xml.XmlNode.SelectSingleNode(System.String)
  - System.Xml.XmlNode.SelectSingleNode(System.String,System.Xml.XmlNamespaceManager)
  - System.Xml.XmlNode.Supports(System.String,System.String)
  - System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator
  - System.Xml.XmlNode.System#ICloneable#Clone
  - System.Xml.XmlNode.Value
  platform:
  - net462
- uid: System.Xml.XmlDocumentType.#ctor(System.String,System.String,System.String,System.String,System.Xml.XmlDocument)
  id: '#ctor(System.String,System.String,System.String,System.String,System.Xml.XmlDocument)'
  parent: System.Xml.XmlDocumentType
  langs:
  - csharp
  name: XmlDocumentType(String,String,String,String,XmlDocument)
  nameWithType: XmlDocumentType.XmlDocumentType(String,String,String,String,XmlDocument)
  fullName: System.Xml.XmlDocumentType.XmlDocumentType(String,String,String,String,XmlDocument)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Xml.XmlDocumentType&quot;> </xref> classe."
  remarks: "Não instanciar um <xref:System.Xml.XmlDocumentType>diretamente; em vez disso, utilize os membros, tais como <xref:System.Xml.XmlDocument.DocumentType%2A>obter um.</xref:System.Xml.XmlDocument.DocumentType%2A> </xref:System.Xml.XmlDocumentType>"
  syntax:
    content: protected XmlDocumentType (string name, string publicId, string systemId, string internalSubset, System.Xml.XmlDocument doc);
    parameters:
    - id: name
      type: System.String
      description: "O nome qualificado; consulte o <xref:System.Xml.XmlDocumentType.Name*>propriedade.</xref:System.Xml.XmlDocumentType.Name*>"
    - id: publicId
      type: System.String
      description: "O identificador público; consulte o <xref:System.Xml.XmlDocumentType.PublicId*>propriedade.</xref:System.Xml.XmlDocumentType.PublicId*>"
    - id: systemId
      type: System.String
      description: "O identificador de sistema; consulte o <xref:System.Xml.XmlDocumentType.SystemId*>propriedade.</xref:System.Xml.XmlDocumentType.SystemId*>"
    - id: internalSubset
      type: System.String
      description: "O subconjunto interno DTD; consulte o <xref:System.Xml.XmlDocumentType.InternalSubset*>propriedade.</xref:System.Xml.XmlDocumentType.InternalSubset*>"
    - id: doc
      type: System.Xml.XmlDocument
      description: "O documento de principal."
  overload: System.Xml.XmlDocumentType.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocumentType.CloneNode(System.Boolean)
  id: CloneNode(System.Boolean)
  parent: System.Xml.XmlDocumentType
  langs:
  - csharp
  name: CloneNode(Boolean)
  nameWithType: XmlDocumentType.CloneNode(Boolean)
  fullName: System.Xml.XmlDocumentType.CloneNode(Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Cria um duplicado deste nó."
  remarks: "Este método funciona como um construtor de cópia para nós. O nó clonado não tem um principal (<xref:System.Xml.XmlNode.ParentNode%2A> devolve `null`).</xref:System.Xml.XmlNode.ParentNode%2A>       Para ver como este método se comporta com outros tipos de nó, consulte <xref:System.Xml.XmlNode.CloneNode%2A?displayProperty=fullName>.</xref:System.Xml.XmlNode.CloneNode%2A?displayProperty=fullName>"
  syntax:
    content: public override System.Xml.XmlNode CloneNode (bool deep);
    parameters:
    - id: deep
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para recursivamente clonar subárvore sob o nó especificado; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para clonar apenas o próprio nó. Para os nós do tipo de documento, o nó clonado inclui sempre subárvore, independentemente da definição do parâmetro."
    return:
      type: System.Xml.XmlNode
      description: "O nó clonado."
  overload: System.Xml.XmlDocumentType.CloneNode*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocumentType.Entities
  id: Entities
  parent: System.Xml.XmlDocumentType
  langs:
  - csharp
  name: Entities
  nameWithType: XmlDocumentType.Entities
  fullName: System.Xml.XmlDocumentType.Entities
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Obtém a coleção de <xref href=&quot;System.Xml.XmlEntity&quot;> </xref> nós declarado na declaração de tipo do documento."
  remarks: "A ordem na qual são devolvidas as entidades não é baseada na ordem em que estes itens podem aparecer no documento. A ordem não é garantida também ser as mesmas entre documentos semelhantes, ou entre diferentes implementações ou versões da classe."
  example:
  - "The following example displays information about the entities declared in the XML document.  \n  \n [!code-cs[XmlEntity#1](~/add/codesnippet/csharp/p-system.xml.xmldocument_1_1.cs)]\n [!code-cpp[XmlEntity#1](~/add/codesnippet/cpp/p-system.xml.xmldocument_1_1.cpp)]\n [!code-vb[XmlEntity#1](~/add/codesnippet/visualbasic/p-system.xml.xmldocument_1_1.vb)]  \n  \n The example uses the file `doment.xml` as input.  \n  \n [!code-xml[XmlEntity#2](~/add/codesnippet/xml/p-system.xml.xmldocument_1_2.xml)]"
  syntax:
    content: public System.Xml.XmlNamedNodeMap Entities { get; }
    return:
      type: System.Xml.XmlNamedNodeMap
      description: "Um <xref href=&quot;System.Xml.XmlNamedNodeMap&quot;> </xref> que contém o <xref uid=&quot;langword_csharp_XmlEntity&quot; name=&quot;XmlEntity&quot; href=&quot;&quot;> </xref> nós. O devolvido <xref uid=&quot;langword_csharp_XmlNamedNodeMap&quot; name=&quot;XmlNamedNodeMap&quot; href=&quot;&quot;> </xref> é só de leitura."
  overload: System.Xml.XmlDocumentType.Entities*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocumentType.InternalSubset
  id: InternalSubset
  parent: System.Xml.XmlDocumentType
  langs:
  - csharp
  name: InternalSubset
  nameWithType: XmlDocumentType.InternalSubset
  fullName: System.Xml.XmlDocumentType.InternalSubset
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Obtém o valor de subconjunto interno de definição (DTD) de tipo do documento na declaração DOCTYPE."
  remarks: ''
  example:
  - "The following example displays information about the DocumentType node.  \n  \n [!code-cpp[Classic WebData XmlDocumentType.Name Example#1](~/add/codesnippet/cpp/p-system.xml.xmldocument_3_1.cpp)]\n [!code-cs[Classic WebData XmlDocumentType.Name Example#1](~/add/codesnippet/csharp/p-system.xml.xmldocument_3_1.cs)]\n [!code-vb[Classic WebData XmlDocumentType.Name Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmldocument_3_1.vb)]"
  syntax:
    content: public string InternalSubset { get; }
    return:
      type: System.String
      description: "O DTD de subconjunto interno no DOCTYPE. Se não houver nenhuma subconjunto interno de DTD, String.Empty é devolvido."
  overload: System.Xml.XmlDocumentType.InternalSubset*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocumentType.IsReadOnly
  id: IsReadOnly
  parent: System.Xml.XmlDocumentType
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: XmlDocumentType.IsReadOnly
  fullName: System.Xml.XmlDocumentType.IsReadOnly
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Obtém um valor que indica se o nó é só de leitura."
  remarks: "Um nó só de leitura é uma cujo propriedades, atributos ou elementos subordinados não pode ser alterada. No entanto, pode remover um nó só de leitura de árvore e insira-a algures pessoa.       Pode remover uma `XmlDocumentType` de um documento e reinsert-lo novamente para o documento, desde que o documento não tem um nó de elemento. Depois de um documento tem um elemento de raiz, o `XmlDocumentType` não pode ser alterada.       Esta propriedade é uma extensão da Microsoft para o documento Object Model (DOM)."
  example:
  - "The following example displays information about the DocumentType node.  \n  \n [!code-cpp[Classic WebData XmlDocumentType.IsReadOnly Example#1](~/add/codesnippet/cpp/p-system.xml.xmldocument_12_1.cpp)]\n [!code-vb[Classic WebData XmlDocumentType.IsReadOnly Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmldocument_12_1.vb)]\n [!code-cs[Classic WebData XmlDocumentType.IsReadOnly Example#1](~/add/codesnippet/csharp/p-system.xml.xmldocument_12_1.cs)]"
  syntax:
    content: public override bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o nó é só de leitura; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.       Uma vez que nós de DocumentType são só de leitura, esta propriedade devolve sempre <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.XmlDocumentType.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocumentType.LocalName
  id: LocalName
  parent: System.Xml.XmlDocumentType
  langs:
  - csharp
  name: LocalName
  nameWithType: XmlDocumentType.LocalName
  fullName: System.Xml.XmlDocumentType.LocalName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Obtém o nome do local do nó."
  syntax:
    content: public override string LocalName { get; }
    return:
      type: System.String
      description: "Para nós de DocumentType, esta propriedade devolve o nome do tipo de documento."
  overload: System.Xml.XmlDocumentType.LocalName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocumentType.Name
  id: Name
  parent: System.Xml.XmlDocumentType
  langs:
  - csharp
  name: Name
  nameWithType: XmlDocumentType.Name
  fullName: System.Xml.XmlDocumentType.Name
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Obtém o nome qualificado do nó."
  remarks: ''
  example:
  - "The following example displays information about the DocumentType node.  \n  \n [!code-cpp[Classic WebData XmlDocumentType.Name Example#1](~/add/codesnippet/cpp/p-system.xml.xmldocument_5_1.cpp)]\n [!code-cs[Classic WebData XmlDocumentType.Name Example#1](~/add/codesnippet/csharp/p-system.xml.xmldocument_5_1.cs)]\n [!code-vb[Classic WebData XmlDocumentType.Name Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmldocument_5_1.vb)]"
  syntax:
    content: public override string Name { get; }
    return:
      type: System.String
      description: "Para nós de DocumentType, esta propriedade devolve o nome do tipo de documento."
  overload: System.Xml.XmlDocumentType.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocumentType.NodeType
  id: NodeType
  parent: System.Xml.XmlDocumentType
  langs:
  - csharp
  name: NodeType
  nameWithType: XmlDocumentType.NodeType
  fullName: System.Xml.XmlDocumentType.NodeType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Obtém o tipo de nó atual."
  syntax:
    content: public override System.Xml.XmlNodeType NodeType { get; }
    return:
      type: System.Xml.XmlNodeType
      description: "Para nós de DocumentType, este valor é XmlNodeType.DocumentType."
  overload: System.Xml.XmlDocumentType.NodeType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocumentType.Notations
  id: Notations
  parent: System.Xml.XmlDocumentType
  langs:
  - csharp
  name: Notations
  nameWithType: XmlDocumentType.Notations
  fullName: System.Xml.XmlDocumentType.Notations
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Obtém a coleção de <xref href=&quot;System.Xml.XmlNotation&quot;> </xref> nós presentes no documento de declaração de tipo."
  remarks: "A ordem na qual são devolvidas as notações não está baseada na ordem em que estes itens podem aparecer no documento. A ordem não é garantida também ser as mesmas entre documentos semelhantes, ou entre diferentes implementações ou versões da classe."
  example:
  - "The following example displays information about the notations declared in the XML document.  \n  \n [!code-cs[XmlNotation#1](~/add/codesnippet/csharp/p-system.xml.xmldocument_0_1.cs)]\n [!code-cpp[XmlNotation#1](~/add/codesnippet/cpp/p-system.xml.xmldocument_0_1.cpp)]\n [!code-vb[XmlNotation#1](~/add/codesnippet/visualbasic/p-system.xml.xmldocument_0_1.vb)]  \n  \n The example uses the file `doment.xml` as input.  \n  \n [!code-xml[XmlNotation#2](~/add/codesnippet/xml/p-system.xml.xmldocument_0_2.xml)]"
  syntax:
    content: public System.Xml.XmlNamedNodeMap Notations { get; }
    return:
      type: System.Xml.XmlNamedNodeMap
      description: "Um <xref href=&quot;System.Xml.XmlNamedNodeMap&quot;> </xref> que contém o <xref uid=&quot;langword_csharp_XmlNotation&quot; name=&quot;XmlNotation&quot; href=&quot;&quot;> </xref> nós. O devolvido <xref uid=&quot;langword_csharp_XmlNamedNodeMap&quot; name=&quot;XmlNamedNodeMap&quot; href=&quot;&quot;> </xref> é só de leitura."
  overload: System.Xml.XmlDocumentType.Notations*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocumentType.PublicId
  id: PublicId
  parent: System.Xml.XmlDocumentType
  langs:
  - csharp
  name: PublicId
  nameWithType: XmlDocumentType.PublicId
  fullName: System.Xml.XmlDocumentType.PublicId
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Obtém o valor do identificador público na declaração DOCTYPE."
  syntax:
    content: public string PublicId { get; }
    return:
      type: System.String
      description: "O identificador público no DOCTYPE. Se não houver nenhum identificador público, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> é devolvido."
  overload: System.Xml.XmlDocumentType.PublicId*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocumentType.SystemId
  id: SystemId
  parent: System.Xml.XmlDocumentType
  langs:
  - csharp
  name: SystemId
  nameWithType: XmlDocumentType.SystemId
  fullName: System.Xml.XmlDocumentType.SystemId
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Obtém o valor do identificador de sistema na declaração DOCTYPE."
  syntax:
    content: public string SystemId { get; }
    return:
      type: System.String
      description: "O identificador de sistema no DOCTYPE. Se não houver nenhum identificador de sistema, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> é devolvido."
  overload: System.Xml.XmlDocumentType.SystemId*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocumentType.WriteContentTo(System.Xml.XmlWriter)
  id: WriteContentTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlDocumentType
  langs:
  - csharp
  name: WriteContentTo(XmlWriter)
  nameWithType: XmlDocumentType.WriteContentTo(XmlWriter)
  fullName: System.Xml.XmlDocumentType.WriteContentTo(XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Guarda todos os elementos subordinados do nó especificado <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter> Para <xref uid=&quot;langword_csharp_XmlDocumentType&quot; name=&quot;XmlDocumentType&quot; href=&quot;&quot;> </xref> nós, este método não tem qualquer efeito."
  syntax:
    content: public override void WriteContentTo (System.Xml.XmlWriter w);
    parameters:
    - id: w
      type: System.Xml.XmlWriter
      description: "O <xref uid=&quot;langword_csharp_XmlWriter&quot; name=&quot;XmlWriter&quot; href=&quot;&quot;> </xref> ao qual pretende guardar."
  overload: System.Xml.XmlDocumentType.WriteContentTo*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocumentType.WriteTo(System.Xml.XmlWriter)
  id: WriteTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlDocumentType
  langs:
  - csharp
  name: WriteTo(XmlWriter)
  nameWithType: XmlDocumentType.WriteTo(XmlWriter)
  fullName: System.Xml.XmlDocumentType.WriteTo(XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Guarda o nó especificado <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter>"
  syntax:
    content: public override void WriteTo (System.Xml.XmlWriter w);
    parameters:
    - id: w
      type: System.Xml.XmlWriter
      description: "O <xref uid=&quot;langword_csharp_XmlWriter&quot; name=&quot;XmlWriter&quot; href=&quot;&quot;> </xref> ao qual pretende guardar."
  overload: System.Xml.XmlDocumentType.WriteTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Xml.XmlLinkedNode
  isExternal: false
  name: System.Xml.XmlLinkedNode
- uid: System.Xml.XmlDocumentType.#ctor(System.String,System.String,System.String,System.String,System.Xml.XmlDocument)
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: XmlDocumentType(String,String,String,String,XmlDocument)
  nameWithType: XmlDocumentType.XmlDocumentType(String,String,String,String,XmlDocument)
  fullName: System.Xml.XmlDocumentType.XmlDocumentType(String,String,String,String,XmlDocument)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlDocument
  parent: System.Xml
  isExternal: false
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: System.Xml.XmlDocumentType.CloneNode(System.Boolean)
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: CloneNode(Boolean)
  nameWithType: XmlDocumentType.CloneNode(Boolean)
  fullName: System.Xml.XmlDocumentType.CloneNode(Boolean)
- uid: System.Xml.XmlNode
  parent: System.Xml
  isExternal: false
  name: XmlNode
  nameWithType: XmlNode
  fullName: System.Xml.XmlNode
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlDocumentType.Entities
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: Entities
  nameWithType: XmlDocumentType.Entities
  fullName: System.Xml.XmlDocumentType.Entities
- uid: System.Xml.XmlNamedNodeMap
  parent: System.Xml
  isExternal: false
  name: XmlNamedNodeMap
  nameWithType: XmlNamedNodeMap
  fullName: System.Xml.XmlNamedNodeMap
- uid: System.Xml.XmlDocumentType.InternalSubset
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: InternalSubset
  nameWithType: XmlDocumentType.InternalSubset
  fullName: System.Xml.XmlDocumentType.InternalSubset
- uid: System.Xml.XmlDocumentType.IsReadOnly
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: IsReadOnly
  nameWithType: XmlDocumentType.IsReadOnly
  fullName: System.Xml.XmlDocumentType.IsReadOnly
- uid: System.Xml.XmlDocumentType.LocalName
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: LocalName
  nameWithType: XmlDocumentType.LocalName
  fullName: System.Xml.XmlDocumentType.LocalName
- uid: System.Xml.XmlDocumentType.Name
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: Name
  nameWithType: XmlDocumentType.Name
  fullName: System.Xml.XmlDocumentType.Name
- uid: System.Xml.XmlDocumentType.NodeType
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: NodeType
  nameWithType: XmlDocumentType.NodeType
  fullName: System.Xml.XmlDocumentType.NodeType
- uid: System.Xml.XmlNodeType
  parent: System.Xml
  isExternal: true
  name: XmlNodeType
  nameWithType: XmlNodeType
  fullName: System.Xml.XmlNodeType
- uid: System.Xml.XmlDocumentType.Notations
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: Notations
  nameWithType: XmlDocumentType.Notations
  fullName: System.Xml.XmlDocumentType.Notations
- uid: System.Xml.XmlDocumentType.PublicId
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: PublicId
  nameWithType: XmlDocumentType.PublicId
  fullName: System.Xml.XmlDocumentType.PublicId
- uid: System.Xml.XmlDocumentType.SystemId
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: SystemId
  nameWithType: XmlDocumentType.SystemId
  fullName: System.Xml.XmlDocumentType.SystemId
- uid: System.Xml.XmlDocumentType.WriteContentTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: WriteContentTo(XmlWriter)
  nameWithType: XmlDocumentType.WriteContentTo(XmlWriter)
  fullName: System.Xml.XmlDocumentType.WriteContentTo(XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml.XmlDocumentType.WriteTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: WriteTo(XmlWriter)
  nameWithType: XmlDocumentType.WriteTo(XmlWriter)
  fullName: System.Xml.XmlDocumentType.WriteTo(XmlWriter)
- uid: System.Xml.XmlDocumentType.#ctor*
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: XmlDocumentType
  nameWithType: XmlDocumentType.XmlDocumentType
- uid: System.Xml.XmlDocumentType.CloneNode*
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: CloneNode
  nameWithType: XmlDocumentType.CloneNode
- uid: System.Xml.XmlDocumentType.Entities*
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: Entities
  nameWithType: XmlDocumentType.Entities
- uid: System.Xml.XmlDocumentType.InternalSubset*
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: InternalSubset
  nameWithType: XmlDocumentType.InternalSubset
- uid: System.Xml.XmlDocumentType.IsReadOnly*
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: IsReadOnly
  nameWithType: XmlDocumentType.IsReadOnly
- uid: System.Xml.XmlDocumentType.LocalName*
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: LocalName
  nameWithType: XmlDocumentType.LocalName
- uid: System.Xml.XmlDocumentType.Name*
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: Name
  nameWithType: XmlDocumentType.Name
- uid: System.Xml.XmlDocumentType.NodeType*
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: NodeType
  nameWithType: XmlDocumentType.NodeType
- uid: System.Xml.XmlDocumentType.Notations*
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: Notations
  nameWithType: XmlDocumentType.Notations
- uid: System.Xml.XmlDocumentType.PublicId*
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: PublicId
  nameWithType: XmlDocumentType.PublicId
- uid: System.Xml.XmlDocumentType.SystemId*
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: SystemId
  nameWithType: XmlDocumentType.SystemId
- uid: System.Xml.XmlDocumentType.WriteContentTo*
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: WriteContentTo
  nameWithType: XmlDocumentType.WriteContentTo
- uid: System.Xml.XmlDocumentType.WriteTo*
  parent: System.Xml.XmlDocumentType
  isExternal: false
  name: WriteTo
  nameWithType: XmlDocumentType.WriteTo
