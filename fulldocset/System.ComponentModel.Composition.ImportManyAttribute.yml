### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Composition.ImportManyAttribute
  id: ImportManyAttribute
  children:
  - System.ComponentModel.Composition.ImportManyAttribute.#ctor
  - System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.String)
  - System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.Type)
  - System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.String,System.Type)
  - System.ComponentModel.Composition.ImportManyAttribute.AllowRecomposition
  - System.ComponentModel.Composition.ImportManyAttribute.ContractName
  - System.ComponentModel.Composition.ImportManyAttribute.ContractType
  - System.ComponentModel.Composition.ImportManyAttribute.RequiredCreationPolicy
  - System.ComponentModel.Composition.ImportManyAttribute.Source
  langs:
  - csharp
  name: ImportManyAttribute
  nameWithType: ImportManyAttribute
  fullName: System.ComponentModel.Composition.ImportManyAttribute
  type: Class
  summary: "Specifies that a property, field, or parameter should be populated with all matching exports by the <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;></xref> object."
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter, AllowMultiple=false, Inherited=false)]

      public class ImportManyAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportManyAttribute.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Composition.ImportManyAttribute
  langs:
  - csharp
  name: ImportManyAttribute()
  nameWithType: ImportManyAttribute.ImportManyAttribute()
  fullName: System.ComponentModel.Composition.ImportManyAttribute.ImportManyAttribute()
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Initializes a new instance of the <xref href=&quot;System.ComponentModel.Composition.ImportManyAttribute&quot;></xref> class, importing the set of exports with the default contract name."
  remarks: "The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the type of the property, field, or parameter that is marked with this attribute.       The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison."
  syntax:
    content: public ImportManyAttribute ();
    parameters: []
  overload: System.ComponentModel.Composition.ImportManyAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ComponentModel.Composition.ImportManyAttribute
  langs:
  - csharp
  name: ImportManyAttribute(String)
  nameWithType: ImportManyAttribute.ImportManyAttribute(String)
  fullName: System.ComponentModel.Composition.ImportManyAttribute.ImportManyAttribute(String)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Initializes a new instance of the <xref href=&quot;System.ComponentModel.Composition.ImportManyAttribute&quot;></xref> class, importing the set of exports with the specified contract name."
  remarks: "The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property, field, or parameter type that is marked with this attribute.       The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison."
  syntax:
    content: public ImportManyAttribute (string contractName);
    parameters:
    - id: contractName
      type: System.String
      description: "The contract name of the exports to import, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or an empty string (&quot;&quot;) to use the default contract name."
  overload: System.ComponentModel.Composition.ImportManyAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.ComponentModel.Composition.ImportManyAttribute
  langs:
  - csharp
  name: ImportManyAttribute(Type)
  nameWithType: ImportManyAttribute.ImportManyAttribute(Type)
  fullName: System.ComponentModel.Composition.ImportManyAttribute.ImportManyAttribute(Type)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Initializes a new instance of the <xref href=&quot;System.ComponentModel.Composition.ImportManyAttribute&quot;></xref> class, importing the set of exports with the contract name derived from the specified type."
  remarks: "The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `contractType`.       The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property, field, or parameter type that is marked with this attribute.       The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison."
  syntax:
    content: public ImportManyAttribute (Type contractType);
    parameters:
    - id: contractType
      type: System.Type
      description: "The type to derive the contract name of the exports to import, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> to use the default contract name."
  overload: System.ComponentModel.Composition.ImportManyAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.String,System.Type)
  id: '#ctor(System.String,System.Type)'
  parent: System.ComponentModel.Composition.ImportManyAttribute
  langs:
  - csharp
  name: ImportManyAttribute(String,Type)
  nameWithType: ImportManyAttribute.ImportManyAttribute(String,Type)
  fullName: System.ComponentModel.Composition.ImportManyAttribute.ImportManyAttribute(String,Type)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Initializes a new instance of the <xref href=&quot;System.ComponentModel.Composition.ImportManyAttribute&quot;></xref> class, importing the set of exports with the specified contract name and contract type."
  syntax:
    content: public ImportManyAttribute (string contractName, Type contractType);
    parameters:
    - id: contractName
      type: System.String
      description: "The contract name of the exports to import, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or an empty string (&quot;&quot;) to use the default contract name."
    - id: contractType
      type: System.Type
      description: "The type of the export to import."
  overload: System.ComponentModel.Composition.ImportManyAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportManyAttribute.AllowRecomposition
  id: AllowRecomposition
  parent: System.ComponentModel.Composition.ImportManyAttribute
  langs:
  - csharp
  name: AllowRecomposition
  nameWithType: ImportManyAttribute.AllowRecomposition
  fullName: System.ComponentModel.Composition.ImportManyAttribute.AllowRecomposition
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Gets or sets a value indicating whether the decorated property or field will be recomposed when exports that provide the matching contract change."
  syntax:
    content: public bool AllowRecomposition { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the property or field allows for recomposition when exports that provide the same <xref:System.ComponentModel.Composition.ImportManyAttribute.ContractName*> are added or removed from the <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.       The default value is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ComponentModel.Composition.ImportManyAttribute.AllowRecomposition*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportManyAttribute.ContractName
  id: ContractName
  parent: System.ComponentModel.Composition.ImportManyAttribute
  langs:
  - csharp
  name: ContractName
  nameWithType: ImportManyAttribute.ContractName
  fullName: System.ComponentModel.Composition.ImportManyAttribute.ContractName
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Gets the contract name of the exports to import."
  syntax:
    content: public string ContractName { get; }
    return:
      type: System.String
      description: "The contract name of the exports to import. The default value is an empty string (&quot;&quot;)."
  overload: System.ComponentModel.Composition.ImportManyAttribute.ContractName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportManyAttribute.ContractType
  id: ContractType
  parent: System.ComponentModel.Composition.ImportManyAttribute
  langs:
  - csharp
  name: ContractType
  nameWithType: ImportManyAttribute.ContractType
  fullName: System.ComponentModel.Composition.ImportManyAttribute.ContractType
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Gets the contract type of the export to import."
  syntax:
    content: public Type ContractType { get; }
    return:
      type: System.Type
      description: "The type of the export that this import is expecting. The default value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, which means that the type will be obtained by looking at the type on the member that this import is attached to. If the type is <xref:System.Object>, the import will match any exported type."
  overload: System.ComponentModel.Composition.ImportManyAttribute.ContractType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportManyAttribute.RequiredCreationPolicy
  id: RequiredCreationPolicy
  parent: System.ComponentModel.Composition.ImportManyAttribute
  langs:
  - csharp
  name: RequiredCreationPolicy
  nameWithType: ImportManyAttribute.RequiredCreationPolicy
  fullName: System.ComponentModel.Composition.ImportManyAttribute.RequiredCreationPolicy
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Gets or sets a value that indicates that the importer requires a specific <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;></xref> for the exports used to satisfy this import."
  syntax:
    content: public System.ComponentModel.Composition.CreationPolicy RequiredCreationPolicy { get; set; }
    return:
      type: System.ComponentModel.Composition.CreationPolicy
      description: "One of the following values:       <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;></xref>, if the importer does not require a specific <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;></xref>. This is the default.       <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;></xref> to require that all used exports be shared by all parts in the container.       <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;></xref> to require that all used exports be non-shared in a container. In this case, each part receives their own instance."
  overload: System.ComponentModel.Composition.ImportManyAttribute.RequiredCreationPolicy*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportManyAttribute.Source
  id: Source
  parent: System.ComponentModel.Composition.ImportManyAttribute
  langs:
  - csharp
  name: Source
  nameWithType: ImportManyAttribute.Source
  fullName: System.ComponentModel.Composition.ImportManyAttribute.Source
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Gets or sets a value that specifies the scopes from which this import may be satisfied."
  syntax:
    content: public System.ComponentModel.Composition.ImportSource Source { get; set; }
    return:
      type: System.ComponentModel.Composition.ImportSource
      description: "A value that specifies the scopes from which this import may be satisfied."
  overload: System.ComponentModel.Composition.ImportManyAttribute.Source*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ComponentModel.Composition.ImportManyAttribute.#ctor
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: ImportManyAttribute()
  nameWithType: ImportManyAttribute.ImportManyAttribute()
  fullName: System.ComponentModel.Composition.ImportManyAttribute.ImportManyAttribute()
- uid: System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.String)
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: ImportManyAttribute(String)
  nameWithType: ImportManyAttribute.ImportManyAttribute(String)
  fullName: System.ComponentModel.Composition.ImportManyAttribute.ImportManyAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.Type)
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: ImportManyAttribute(Type)
  nameWithType: ImportManyAttribute.ImportManyAttribute(Type)
  fullName: System.ComponentModel.Composition.ImportManyAttribute.ImportManyAttribute(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.String,System.Type)
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: ImportManyAttribute(String,Type)
  nameWithType: ImportManyAttribute.ImportManyAttribute(String,Type)
  fullName: System.ComponentModel.Composition.ImportManyAttribute.ImportManyAttribute(String,Type)
- uid: System.ComponentModel.Composition.ImportManyAttribute.AllowRecomposition
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: AllowRecomposition
  nameWithType: ImportManyAttribute.AllowRecomposition
  fullName: System.ComponentModel.Composition.ImportManyAttribute.AllowRecomposition
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Composition.ImportManyAttribute.ContractName
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: ContractName
  nameWithType: ImportManyAttribute.ContractName
  fullName: System.ComponentModel.Composition.ImportManyAttribute.ContractName
- uid: System.ComponentModel.Composition.ImportManyAttribute.ContractType
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: ContractType
  nameWithType: ImportManyAttribute.ContractType
  fullName: System.ComponentModel.Composition.ImportManyAttribute.ContractType
- uid: System.ComponentModel.Composition.ImportManyAttribute.RequiredCreationPolicy
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: RequiredCreationPolicy
  nameWithType: ImportManyAttribute.RequiredCreationPolicy
  fullName: System.ComponentModel.Composition.ImportManyAttribute.RequiredCreationPolicy
- uid: System.ComponentModel.Composition.CreationPolicy
  parent: System.ComponentModel.Composition
  isExternal: false
  name: CreationPolicy
  nameWithType: CreationPolicy
  fullName: System.ComponentModel.Composition.CreationPolicy
- uid: System.ComponentModel.Composition.ImportManyAttribute.Source
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: Source
  nameWithType: ImportManyAttribute.Source
  fullName: System.ComponentModel.Composition.ImportManyAttribute.Source
- uid: System.ComponentModel.Composition.ImportSource
  parent: System.ComponentModel.Composition
  isExternal: false
  name: ImportSource
  nameWithType: ImportSource
  fullName: System.ComponentModel.Composition.ImportSource
- uid: System.ComponentModel.Composition.ImportManyAttribute.#ctor*
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: ImportManyAttribute
  nameWithType: ImportManyAttribute.ImportManyAttribute
- uid: System.ComponentModel.Composition.ImportManyAttribute.AllowRecomposition*
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: AllowRecomposition
  nameWithType: ImportManyAttribute.AllowRecomposition
- uid: System.ComponentModel.Composition.ImportManyAttribute.ContractName*
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: ContractName
  nameWithType: ImportManyAttribute.ContractName
- uid: System.ComponentModel.Composition.ImportManyAttribute.ContractType*
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: ContractType
  nameWithType: ImportManyAttribute.ContractType
- uid: System.ComponentModel.Composition.ImportManyAttribute.RequiredCreationPolicy*
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: RequiredCreationPolicy
  nameWithType: ImportManyAttribute.RequiredCreationPolicy
- uid: System.ComponentModel.Composition.ImportManyAttribute.Source*
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: Source
  nameWithType: ImportManyAttribute.Source
