### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  id: LinqDataSourceContextEventArgs
  children:
  - System.Web.UI.WebControls.LinqDataSourceContextEventArgs.#ctor
  - System.Web.UI.WebControls.LinqDataSourceContextEventArgs.#ctor(System.Web.UI.DataSourceOperation)
  - System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance
  - System.Web.UI.WebControls.LinqDataSourceContextEventArgs.Operation
  langs:
  - csharp
  name: LinqDataSourceContextEventArgs
  nameWithType: LinqDataSourceContextEventArgs
  fullName: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  type: Class
  summary: "Provides data for the <xref href=&quot;System.Web.UI.WebControls.LinqDataSource.ContextCreating&quot;></xref> event."
  remarks: "By default, the <xref:System.Web.UI.WebControls.LinqDataSource> control creates an instance of the type that is specified in the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property. The <xref:System.Web.UI.WebControls.LinqDataSource> control calls the default constructor of the data context object to create an instance of the object.       You can manually create the data context object by handling the <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating> event. You do this if you want to use a non-default constructor.       You can also handle the <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating> event if you want to create a data context object that is different from the one specified in the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property. In that case, you set the <xref:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance%2A> property to the object you created. The <xref:System.Web.UI.WebControls.LinqDataSource> control will use the object you have created for selecting the data. When you are updating, inserting, or deleting data, you must set the <xref:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance%2A> property to an object that derives from the <xref:System.Data.Linq.DataContext> class."
  example:
  - "The following example shows how to create the data context object by calling a non-default constructor in an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating> event. The code assigns the custom object to the <xref:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance%2A> property.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSource.ContextCreating#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_133_1.cs)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSource.ContextCreating#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_133_1.vb)]"
  syntax:
    content: 'public class LinqDataSourceContextEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  langs:
  - csharp
  name: LinqDataSourceContextEventArgs()
  nameWithType: LinqDataSourceContextEventArgs.LinqDataSourceContextEventArgs()
  fullName: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.LinqDataSourceContextEventArgs()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceContextEventArgs&quot;></xref> class."
  syntax:
    content: public LinqDataSourceContextEventArgs ();
    parameters: []
  overload: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.#ctor(System.Web.UI.DataSourceOperation)
  id: '#ctor(System.Web.UI.DataSourceOperation)'
  parent: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  langs:
  - csharp
  name: LinqDataSourceContextEventArgs(DataSourceOperation)
  nameWithType: LinqDataSourceContextEventArgs.LinqDataSourceContextEventArgs(DataSourceOperation)
  fullName: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.LinqDataSourceContextEventArgs(DataSourceOperation)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceContextEventArgs&quot;></xref> class for the specified data operation."
  syntax:
    content: public LinqDataSourceContextEventArgs (System.Web.UI.DataSourceOperation operation);
    parameters:
    - id: operation
      type: System.Web.UI.DataSourceOperation
      description: "The data operation that is being performed."
  overload: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance
  id: ObjectInstance
  parent: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  langs:
  - csharp
  name: ObjectInstance
  nameWithType: LinqDataSourceContextEventArgs.ObjectInstance
  fullName: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the data context object to create."
  remarks: "By default, the <xref:System.Web.UI.WebControls.LinqDataSource> control creates an instance of the class specified in the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property. It does this by calling the default constructor of that class.       You can manually create the object for data operations by handling the <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating> event and setting the ObjectInstance property to an object you have created.       You create the object manually if you want to use a non-default constructor or if you want to create an object that is different from the one specified in the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property.       The ObjectInstance property does not contain an instance of the type specified in the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property, because that instance is created after the <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating> event. The ObjectInstance property is used only when you manually create the data context object during the <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating> event. When you are updating, inserting, or deleting data, you must set the ObjectInstance property to an object that derives from the <xref:System.Data.Linq.DataContext> class."
  example:
  - "The following example shows how to create the data context object by calling a non-default constructor in an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating> event. The code assigns the custom object to the ObjectInstance property.  \n  \n [!code-cs[System.Web.UI.WebControls.LinqDataSource.ContextCreating#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_590_1.cs)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSource.ContextCreating#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_590_1.vb)]"
  syntax:
    content: public object ObjectInstance { get; set; }
    return:
      type: System.Object
      description: "The data context object that you have set to the ObjectInstance property; otherwise, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.Operation
  id: Operation
  parent: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  langs:
  - csharp
  name: Operation
  nameWithType: LinqDataSourceContextEventArgs.Operation
  fullName: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.Operation
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Gets the data operation that is being performed."
  syntax:
    content: public System.Web.UI.DataSourceOperation Operation { get; }
    return:
      type: System.Web.UI.DataSourceOperation
      description: "A value that represents the type of data operation that is being performed."
  overload: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.Operation*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.#ctor
  parent: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  isExternal: false
  name: LinqDataSourceContextEventArgs()
  nameWithType: LinqDataSourceContextEventArgs.LinqDataSourceContextEventArgs()
  fullName: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.LinqDataSourceContextEventArgs()
- uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.#ctor(System.Web.UI.DataSourceOperation)
  parent: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  isExternal: false
  name: LinqDataSourceContextEventArgs(DataSourceOperation)
  nameWithType: LinqDataSourceContextEventArgs.LinqDataSourceContextEventArgs(DataSourceOperation)
  fullName: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.LinqDataSourceContextEventArgs(DataSourceOperation)
- uid: System.Web.UI.DataSourceOperation
  parent: System.Web.UI
  isExternal: false
  name: DataSourceOperation
  nameWithType: DataSourceOperation
  fullName: System.Web.UI.DataSourceOperation
- uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance
  parent: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  isExternal: false
  name: ObjectInstance
  nameWithType: LinqDataSourceContextEventArgs.ObjectInstance
  fullName: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.Operation
  parent: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  isExternal: false
  name: Operation
  nameWithType: LinqDataSourceContextEventArgs.Operation
  fullName: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.Operation
- uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.#ctor*
  parent: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  isExternal: false
  name: LinqDataSourceContextEventArgs
  nameWithType: LinqDataSourceContextEventArgs.LinqDataSourceContextEventArgs
- uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance*
  parent: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  isExternal: false
  name: ObjectInstance
  nameWithType: LinqDataSourceContextEventArgs.ObjectInstance
- uid: System.Web.UI.WebControls.LinqDataSourceContextEventArgs.Operation*
  parent: System.Web.UI.WebControls.LinqDataSourceContextEventArgs
  isExternal: false
  name: Operation
  nameWithType: LinqDataSourceContextEventArgs.Operation
