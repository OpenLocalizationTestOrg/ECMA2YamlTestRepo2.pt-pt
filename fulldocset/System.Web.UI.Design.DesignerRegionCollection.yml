### YamlMime:ManagedReference
items:
- uid: System.Web.UI.Design.DesignerRegionCollection
  id: DesignerRegionCollection
  children:
  - System.Web.UI.Design.DesignerRegionCollection.#ctor
  - System.Web.UI.Design.DesignerRegionCollection.#ctor(System.Web.UI.Design.ControlDesigner)
  - System.Web.UI.Design.DesignerRegionCollection.Add(System.Web.UI.Design.DesignerRegion)
  - System.Web.UI.Design.DesignerRegionCollection.Clear
  - System.Web.UI.Design.DesignerRegionCollection.Contains(System.Web.UI.Design.DesignerRegion)
  - System.Web.UI.Design.DesignerRegionCollection.CopyTo(System.Array,System.Int32)
  - System.Web.UI.Design.DesignerRegionCollection.Count
  - System.Web.UI.Design.DesignerRegionCollection.GetEnumerator
  - System.Web.UI.Design.DesignerRegionCollection.IndexOf(System.Web.UI.Design.DesignerRegion)
  - System.Web.UI.Design.DesignerRegionCollection.Insert(System.Int32,System.Web.UI.Design.DesignerRegion)
  - System.Web.UI.Design.DesignerRegionCollection.IsFixedSize
  - System.Web.UI.Design.DesignerRegionCollection.IsReadOnly
  - System.Web.UI.Design.DesignerRegionCollection.IsSynchronized
  - System.Web.UI.Design.DesignerRegionCollection.Item(System.Int32)
  - System.Web.UI.Design.DesignerRegionCollection.Owner
  - System.Web.UI.Design.DesignerRegionCollection.Remove(System.Web.UI.Design.DesignerRegion)
  - System.Web.UI.Design.DesignerRegionCollection.RemoveAt(System.Int32)
  - System.Web.UI.Design.DesignerRegionCollection.SyncRoot
  - System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#Count
  - System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#IsSynchronized
  - System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#SyncRoot
  - System.Web.UI.Design.DesignerRegionCollection.System#Collections#IEnumerable#GetEnumerator
  - System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Add(System.Object)
  - System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Clear
  - System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Contains(System.Object)
  - System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#IsFixedSize
  - System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#IsReadOnly
  - System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Item(System.Int32)
  - System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Remove(System.Object)
  - System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#RemoveAt(System.Int32)
  langs:
  - csharp
  name: DesignerRegionCollection
  nameWithType: DesignerRegionCollection
  fullName: System.Web.UI.Design.DesignerRegionCollection
  type: Class
  summary: "Represents a collection of <xref href=&quot;System.Web.UI.Design.DesignerRegion&quot;></xref> objects within a control designer."
  remarks: "The <xref:System.Web.UI.Design.ControlDesigner> class, and any derived class, uses the DesignerRegionCollection class to contain and enumerate the designer regions for the control in a design host, such as [!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)].       For example, the <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A?displayProperty=fullName> method can be used to define and add regions to the collection.       Use the <xref:System.Web.UI.Design.DesignerRegionCollection.Owner%2A> property to access the control designer object that contains the designer region collection. Use the DesignerRegionCollection methods and properties to examine and maintain the <xref:System.Web.UI.Design.DesignerRegion> objects that are in the collection.       The collection dynamically increases as objects are added. Indexes in this collection are zero-based. Use the <xref:System.Web.UI.Design.DesignerRegionCollection.Count%2A> property to determine how many designer regions are in the collection. Use the DesignerRegionCollection members to provide the following functionality:      -   The <xref:System.Web.UI.Design.DesignerRegionCollection.Add%2A> method to add a single designer region to the collection.      -   The <xref:System.Web.UI.Design.DesignerRegionCollection.Insert%2A> method to add a designer region at a particular index within the collection.      -   The <xref:System.Web.UI.Design.DesignerRegionCollection.Remove%2A> method to remove a designer region.      -   The <xref:System.Web.UI.Design.DesignerRegionCollection.RemoveAt%2A> method to remove the designer region at a particular index.      -   The <xref:System.Web.UI.Design.DesignerRegionCollection.Contains%2A> method to determine whether a particular designer region is already in the collection.      -   The <xref:System.Web.UI.Design.DesignerRegionCollection.IndexOf%2A> method to retrieve the index of a designer region within the collection.      -   The <xref:System.Web.UI.Design.DesignerRegionCollection.Item%2A> indexer to get or set the designer region at a particular index, using array notation.      -   The <xref:System.Web.UI.Design.DesignerRegionCollection.Clear%2A> method to remove all designer regions from the collection."
  syntax:
    content: 'public class DesignerRegionCollection : System.Collections.IList'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IList
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.#ctor
  id: '#ctor'
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: DesignerRegionCollection()
  nameWithType: DesignerRegionCollection.DesignerRegionCollection()
  fullName: System.Web.UI.Design.DesignerRegionCollection.DesignerRegionCollection()
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.UI.Design.DesignerRegionCollection&quot;></xref> class."
  remarks: "Use the DesignerRegionCollection constructor to create an empty collection. You can add elements to the collection by using the <xref:System.Web.UI.Design.DesignerRegionCollection.Add%2A> or <xref:System.Web.UI.Design.DesignerRegionCollection.Insert%2A> method."
  syntax:
    content: public DesignerRegionCollection ();
    parameters: []
  overload: System.Web.UI.Design.DesignerRegionCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.#ctor(System.Web.UI.Design.ControlDesigner)
  id: '#ctor(System.Web.UI.Design.ControlDesigner)'
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: DesignerRegionCollection(ControlDesigner)
  nameWithType: DesignerRegionCollection.DesignerRegionCollection(ControlDesigner)
  fullName: System.Web.UI.Design.DesignerRegionCollection.DesignerRegionCollection(ControlDesigner)
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.UI.Design.DesignerRegionCollection&quot;></xref> class for the specified control designer."
  remarks: "The DesignerRegionCollection constructor creates an empty collection and sets the <xref:System.Web.UI.Design.DesignerRegionCollection.Owner%2A> property to the specified control designer object. The visual designer, such as [!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)], uses the DesignerRegionCollection constructor to initialize a designer region collection for a specific control designer.       You can add elements to the collection by using the <xref:System.Web.UI.Design.DesignerRegionCollection.Add%2A> or <xref:System.Web.UI.Design.DesignerRegionCollection.Insert%2A> method."
  syntax:
    content: public DesignerRegionCollection (System.Web.UI.Design.ControlDesigner owner);
    parameters:
    - id: owner
      type: System.Web.UI.Design.ControlDesigner
      description: "The control designer that owns this collection of designer regions."
  overload: System.Web.UI.Design.DesignerRegionCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.Add(System.Web.UI.Design.DesignerRegion)
  id: Add(System.Web.UI.Design.DesignerRegion)
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: Add(DesignerRegion)
  nameWithType: DesignerRegionCollection.Add(DesignerRegion)
  fullName: System.Web.UI.Design.DesignerRegionCollection.Add(DesignerRegion)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "Adds the specified <xref href=&quot;System.Web.UI.Design.DesignerRegion&quot;></xref> object to the end of the collection."
  remarks: "The Add method adds the specified <xref:System.Web.UI.Design.DesignerRegion> object to the end of the collection. To add a <xref:System.Web.UI.Design.DesignerRegion> object to the collection at a specific index location, use the <xref:System.Web.UI.Design.DesignerRegionCollection.Insert%2A> method."
  syntax:
    content: public int Add (System.Web.UI.Design.DesignerRegion region);
    parameters:
    - id: region
      type: System.Web.UI.Design.DesignerRegion
      description: "The <xref href=&quot;System.Web.UI.Design.DesignerRegion&quot;></xref> to add to the collection."
    return:
      type: System.Int32
      description: "The index at which the region was added to the collection."
  overload: System.Web.UI.Design.DesignerRegionCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.Clear
  id: Clear
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: DesignerRegionCollection.Clear()
  fullName: System.Web.UI.Design.DesignerRegionCollection.Clear()
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "Removes all regions from the collection."
  remarks: "Use the Clear method to remove all regions from the collection. To remove a specific region from the collection, use the <xref:System.Web.UI.Design.DesignerRegionCollection.Remove%2A> method. To remove a region at a particular index, use the <xref:System.Web.UI.Design.DesignerRegionCollection.RemoveAt%2A> method."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.UI.Design.DesignerRegionCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.Contains(System.Web.UI.Design.DesignerRegion)
  id: Contains(System.Web.UI.Design.DesignerRegion)
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: Contains(DesignerRegion)
  nameWithType: DesignerRegionCollection.Contains(DesignerRegion)
  fullName: System.Web.UI.Design.DesignerRegionCollection.Contains(DesignerRegion)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "Gets a value indicating whether the specified region is contained within the collection."
  remarks: "The Contains method determines equality by using the <xref:System.Object.Equals%2A> method on the <xref:System.Web.UI.Design.DesignerRegion> objects.       The Contains method performs a linear search; therefore, the average execution time is proportional to the <xref:System.Web.UI.Design.DesignerRegionCollection.Count%2A> property. Because template region collections are typically small, the performance of the linear search operation is not critical."
  syntax:
    content: public bool Contains (System.Web.UI.Design.DesignerRegion region);
    parameters:
    - id: region
      type: System.Web.UI.Design.DesignerRegion
      description: "The <xref href=&quot;System.Web.UI.Design.DesignerRegion&quot;></xref> to locate within the collection."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, if the region is in the collection; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.Design.DesignerRegionCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: DesignerRegionCollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.Design.DesignerRegionCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "Copies the elements of the collection to an <xref:System.Array> object, starting at a particular <xref:System.Array> index."
  remarks: "Use the <xref:System.Web.UI.Design.DesignerRegionCollection.Add%2A> or <xref:System.Web.UI.Design.DesignerRegionCollection.Insert%2A> method to add the design regions to the <xref:System.Web.UI.Design.DesignerRegionCollection> collection."
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "The <xref:System.Array> that is the destination of the copied regions. The <xref:System.Array> must have zero-based indexing."
    - id: index
      type: System.Int32
      description: "The zero-based index in `array` at which copying begins."
  overload: System.Web.UI.Design.DesignerRegionCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.Count
  id: Count
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: Count
  nameWithType: DesignerRegionCollection.Count
  fullName: System.Web.UI.Design.DesignerRegionCollection.Count
  type: Property
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "Gets the number of <xref href=&quot;System.Web.UI.Design.DesignerRegion&quot;></xref> objects in the collection."
  remarks: "The Count property is commonly used to determine the upper boundary index when iterating through objects in the collection. Because the collection indexes are zero-based, the first element is at index `0` and the last element is at index `Count-1`."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "The number of <xref href=&quot;System.Web.UI.Design.DesignerRegion&quot;></xref> objects in the collection."
  overload: System.Web.UI.Design.DesignerRegionCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: DesignerRegionCollection.GetEnumerator()
  fullName: System.Web.UI.Design.DesignerRegionCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "Returns an enumerator that iterates through the collection."
  remarks: "Use the <xref:System.Web.UI.Design.DesignerRegionCollection.Count%2A> property together with a loop construct, such as `while`, `for`, or `foreach` statements, to enumerate through the <xref:System.Web.UI.Design.DesignerRegionCollection> object."
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "An <xref:System.Collections.IEnumerator> that can be used to iterate through the collection."
  overload: System.Web.UI.Design.DesignerRegionCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.IndexOf(System.Web.UI.Design.DesignerRegion)
  id: IndexOf(System.Web.UI.Design.DesignerRegion)
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: IndexOf(DesignerRegion)
  nameWithType: DesignerRegionCollection.IndexOf(DesignerRegion)
  fullName: System.Web.UI.Design.DesignerRegionCollection.IndexOf(DesignerRegion)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "Returns the index of the specified <xref href=&quot;System.Web.UI.Design.DesignerRegion&quot;></xref> object within the collection."
  remarks: "The IndexOf method determines equality by using the <xref:System.Object.Equals%2A> method on the <xref:System.Web.UI.Design.DesignerRegion> objects.       The IndexOf method performs a linear search; therefore, the average execution time is proportional to the <xref:System.Web.UI.Design.DesignerRegionCollection.Count%2A> property. Because template region collections are typically small, the performance of the linear search operation is not critical."
  syntax:
    content: public int IndexOf (System.Web.UI.Design.DesignerRegion region);
    parameters:
    - id: region
      type: System.Web.UI.Design.DesignerRegion
      description: "The <xref href=&quot;System.Web.UI.Design.DesignerRegion&quot;></xref> to locate within the collection."
    return:
      type: System.Int32
      description: "The zero-based index of the first occurrence of <code>region</code> within the collection; otherwise, -1, if <code>region</code> is not in the collection."
  overload: System.Web.UI.Design.DesignerRegionCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.Insert(System.Int32,System.Web.UI.Design.DesignerRegion)
  id: Insert(System.Int32,System.Web.UI.Design.DesignerRegion)
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: Insert(Int32,DesignerRegion)
  nameWithType: DesignerRegionCollection.Insert(Int32,DesignerRegion)
  fullName: System.Web.UI.Design.DesignerRegionCollection.Insert(Int32,DesignerRegion)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "Inserts a <xref href=&quot;System.Web.UI.Design.DesignerRegion&quot;></xref> object into the collection at the specified index."
  remarks: "The Insert method adds a <xref:System.Web.UI.Design.DesignerRegion> object to the collection at a specific index location. To add a single <xref:System.Web.UI.Design.DesignerRegion> to the end of the collection, use the <xref:System.Web.UI.Design.DesignerRegionCollection.Add%2A> method.      > [!NOTE] >  When you insert an item into the collection, the indexes change for subsequent items in the collection."
  syntax:
    content: public void Insert (int index, System.Web.UI.Design.DesignerRegion region);
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based index within the collection at which to insert the region."
    - id: region
      type: System.Web.UI.Design.DesignerRegion
      description: "The <xref href=&quot;System.Web.UI.Design.DesignerRegion&quot;></xref> to insert into the collection."
  overload: System.Web.UI.Design.DesignerRegionCollection.Insert*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code> is less than zero.  \n  \n \\- or -  \n  \n <code>index</code> is greater than the <xref:System.Web.UI.Design.DesignerRegionCollection.Count*> property."
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.IsFixedSize
  id: IsFixedSize
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: IsFixedSize
  nameWithType: DesignerRegionCollection.IsFixedSize
  fullName: System.Web.UI.Design.DesignerRegionCollection.IsFixedSize
  type: Property
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "Gets a value indicating whether the <xref href=&quot;System.Web.UI.Design.DesignerRegionCollection&quot;></xref> object has a fixed size."
  syntax:
    content: public bool IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, if the size of the collection cannot be changed by adding or removing items; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.Design.DesignerRegionCollection.IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: DesignerRegionCollection.IsReadOnly
  fullName: System.Web.UI.Design.DesignerRegionCollection.IsReadOnly
  type: Property
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "Gets a value indicating whether the <xref href=&quot;System.Web.UI.Design.DesignerRegionCollection&quot;></xref> object is read-only."
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, if the collection cannot be changed; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.Design.DesignerRegionCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: DesignerRegionCollection.IsSynchronized
  fullName: System.Web.UI.Design.DesignerRegionCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "Gets a value indicating whether access to the <xref href=&quot;System.Web.UI.Design.DesignerRegionCollection&quot;></xref> object is synchronized (thread safe)."
  remarks: "Enumerating through a collection is not a thread-safe procedure intrinsically. Even when a collection is synchronized, other threads can still modify the collection. This causes exceptions during enumeration.       Lock the collection by using the <xref:System.Web.UI.Design.DesignerRegionCollection.SyncRoot%2A> method during the whole enumeration to guarantee thread safety."
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, if access to the <xref href=&quot;System.Web.UI.Design.DesignerRegionCollection&quot;></xref> is synchronized; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.Design.DesignerRegionCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DesignerRegionCollection.Item(Int32)
  fullName: System.Web.UI.Design.DesignerRegionCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "Gets or sets a <xref href=&quot;System.Web.UI.Design.DesignerRegion&quot;></xref> object at the specified index in the collection."
  remarks: "Use the Item indexer to retrieve the region at the specified index within the collection or to set the region at the specified index within the collection. You can index elements in the collection by using array notation. For example, you can index an element at index `i` with the notation `DesignerRegions(i)` for Microsoft VisualBasic or `DesignerRegions[i]` for C#.       When you have a reference to the region object and need the index of the object in the collection, use the <xref:System.Web.UI.Design.DesignerRegionCollection.IndexOf%2A> method."
  syntax:
    content: public System.Web.UI.Design.DesignerRegion this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based index of the <xref href=&quot;System.Web.UI.Design.DesignerRegion&quot;></xref> to get or set in the collection."
    return:
      type: System.Web.UI.Design.DesignerRegion
      description: "The <xref href=&quot;System.Web.UI.Design.DesignerRegion&quot;></xref> at the specified index in the collection."
  overload: System.Web.UI.Design.DesignerRegionCollection.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>value</code> is less than zero.  \n  \n \\- or -  \n  \n <code>value</code> is greater than the <xref:System.Web.UI.Design.DesignerRegionCollection.Count*> property."
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.Owner
  id: Owner
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: Owner
  nameWithType: DesignerRegionCollection.Owner
  fullName: System.Web.UI.Design.DesignerRegionCollection.Owner
  type: Property
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "Gets the control designer that owns the designer region collection."
  remarks: "The Owner property provides a convenient means to access the control designer object for a designer region collection. For example, you can use the Owner property to determine the type of control designer that owns the collection and to access the properties and methods of the control designer."
  syntax:
    content: public System.Web.UI.Design.ControlDesigner Owner { get; }
    return:
      type: System.Web.UI.Design.ControlDesigner
      description: "A <xref href=&quot;System.Web.UI.Design.ControlDesigner&quot;></xref> that represents the control designer that owns the <xref href=&quot;System.Web.UI.Design.DesignerRegionCollection&quot;></xref>."
  overload: System.Web.UI.Design.DesignerRegionCollection.Owner*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.Remove(System.Web.UI.Design.DesignerRegion)
  id: Remove(System.Web.UI.Design.DesignerRegion)
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: Remove(DesignerRegion)
  nameWithType: DesignerRegionCollection.Remove(DesignerRegion)
  fullName: System.Web.UI.Design.DesignerRegionCollection.Remove(DesignerRegion)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "Removes the specified <xref href=&quot;System.Web.UI.Design.DesignerRegion&quot;></xref> object from the collection."
  remarks: "The Remove method removes the first occurrence of the specified region from the collection. If the <xref:System.Web.UI.Design.DesignerRegionCollection> object does not contain the specified `region`, the collection remains unchanged. No exception is thrown.       The Remove method determines equality by using the <xref:System.Object.Equals%2A> method on the <xref:System.Web.UI.Design.DesignerRegion> object.       The Remove method performs a linear search; therefore, the average execution time is proportional to the <xref:System.Web.UI.Design.DesignerRegionCollection.Count%2A> property. Because template region collections are typically small, the performance of the linear search operation is not critical.       To remove a region at a particular index from the collection, use the <xref:System.Web.UI.Design.DesignerRegionCollection.RemoveAt%2A> method. To remove all regions from the collection, use the <xref:System.Web.UI.Design.DesignerRegionCollection.Clear%2A> method.      > [!NOTE] >  When you remove an item from the collection, the indexes change for subsequent items in the collection."
  syntax:
    content: public void Remove (System.Web.UI.Design.DesignerRegion region);
    parameters:
    - id: region
      type: System.Web.UI.Design.DesignerRegion
      description: "The <xref href=&quot;System.Web.UI.Design.DesignerRegion&quot;></xref> to remove from the collection."
  overload: System.Web.UI.Design.DesignerRegionCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: DesignerRegionCollection.RemoveAt(Int32)
  fullName: System.Web.UI.Design.DesignerRegionCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "Removes the <xref href=&quot;System.Web.UI.Design.DesignerRegion&quot;></xref> object at the specified index within the collection."
  remarks: "Use the RemoveAt method to remove a region at a particular index from the collection. To remove a specified region from the collection, use the <xref:System.Web.UI.Design.DesignerRegionCollection.Remove%2A> method. To remove all regions from the collection, use the <xref:System.Web.UI.Design.DesignerRegionCollection.Clear%2A> method.      > [!NOTE] >  When you remove an item from the collection, the indexes change for subsequent items in the collection."
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based index within the collection of the <xref href=&quot;System.Web.UI.Design.DesignerRegion&quot;></xref> to remove."
  overload: System.Web.UI.Design.DesignerRegionCollection.RemoveAt*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code> is less than zero.  \n  \n \\- or -  \n  \n <code>index</code> is greater than the <xref:System.Web.UI.Design.DesignerRegionCollection.Count*> property."
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.SyncRoot
  id: SyncRoot
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: DesignerRegionCollection.SyncRoot
  fullName: System.Web.UI.Design.DesignerRegionCollection.SyncRoot
  type: Property
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "Gets an object that can be used to synchronize access to the <xref href=&quot;System.Web.UI.Design.DesignerRegionCollection&quot;></xref> object."
  remarks: "Enumerating through a collection is not a thread-safe procedure intrinsically. Even when a collection is synchronized, other threads can still modify the collection. This causes exceptions during enumeration.       Lock the collection by using the SyncRoot method during the whole enumeration to guarantee thread safety. For detailed information about locking collections for thread-safe access, see <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName>."
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "An object that can be used to synchronize access to the <xref href=&quot;System.Web.UI.Design.DesignerRegionCollection&quot;></xref>."
  overload: System.Web.UI.Design.DesignerRegionCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: DesignerRegionCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "For a description of this member, see <xref:System.Collections.ICollection.CopyTo*>."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.Design.DesignerRegionCollection> instance is cast to an <xref:System.Collections.ICollection> interface."
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "The <xref:System.Array> that is the destination of the copied regions. The <xref:System.Array> must have zero-based indexing."
    - id: index
      type: System.Int32
      description: "The zero-based index in `array` at which copying begins."
  overload: System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#Count
  id: System#Collections#ICollection#Count
  isEii: true
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: System.Collections.ICollection.Count
  nameWithType: DesignerRegionCollection.System.Collections.ICollection.Count
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.ICollection.Count
  type: Property
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "For a description of this member, see &lt;xref:System.Collections.ICollection.Count%2A?displayProperty=fullName&gt;."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.Design.DesignerRegionCollection> instance is cast to an <xref:System.Collections.ICollection> interface."
  syntax:
    content: int System.Collections.ICollection.Count { get; }
    return:
      type: System.Int32
      description: "The number of elements in the collection."
  overload: System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: DesignerRegionCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "For a description of this member, see &lt;xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName&gt;."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.Design.DesignerRegionCollection> instance is cast to an <xref:System.Collections.ICollection> interface."
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, if access to the collection is synchronized; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: DesignerRegionCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "For a description of this member, see &lt;xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName&gt;."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.Design.DesignerRegionCollection> instance is cast to an <xref:System.Collections.ICollection> interface."
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "An object that can be used to synchronize access to the collection."
  overload: System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: DesignerRegionCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "For a description of this member, see &lt;xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=fullName&gt;."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.Design.DesignerRegionCollection> instance is cast to an <xref:System.Collections.IEnumerable> interface."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "An <xref:System.Collections.IEnumerator> that can be used to iterate through the collection."
  overload: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: DesignerRegionCollection.System.Collections.IList.Add(Object)
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "For a description of this member, see &lt;xref:System.Collections.IList.Add%2A?displayProperty=fullName&gt;."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.Design.DesignerRegionCollection> instance is cast to an <xref:System.Collections.IList> interface."
  syntax:
    content: int IList.Add (object o);
    parameters:
    - id: o
      type: System.Object
      description: "The item to add to the collection."
    return:
      type: System.Int32
      description: "The index at which the item was added to the collection."
  overload: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Clear
  id: System#Collections#IList#Clear
  isEii: true
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: System.Collections.IList.Clear()
  nameWithType: DesignerRegionCollection.System.Collections.IList.Clear()
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.IList.Clear()
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "For a description of this member, see &lt;xref:System.Collections.IList.Clear%2A?displayProperty=fullName&gt;."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.Design.DesignerRegionCollection> instance is cast to an <xref:System.Collections.IList> interface."
  syntax:
    content: void IList.Clear ();
    parameters: []
  overload: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: DesignerRegionCollection.System.Collections.IList.Contains(Object)
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "For a description of this member, see &lt;xref:System.Collections.IList.Contains%2A?displayProperty=fullName&gt;."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.Design.DesignerRegionCollection> instance is cast to an <xref:System.Collections.IList> interface."
  syntax:
    content: bool IList.Contains (object o);
    parameters:
    - id: o
      type: System.Object
      description: "The <xref href=&quot;System.Web.UI.Design.DesignerRegion&quot;></xref> to locate within the collection."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, if the region is in the collection; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: DesignerRegionCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "For a description of this member, see &lt;xref:System.Collections.IList.IndexOf%2A?displayProperty=fullName&gt;."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.Design.DesignerRegionCollection> instance is cast to an <xref:System.Collections.IList> interface."
  syntax:
    content: int IList.IndexOf (object o);
    parameters:
    - id: o
      type: System.Object
      description: "The <xref href=&quot;System.Web.UI.Design.DesignerRegion&quot;></xref> to locate within the collection."
    return:
      type: System.Int32
      description: "The zero-based index of the first occurrence of the object within the collection; otherwise, -1, if the object is not in the collection."
  overload: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: DesignerRegionCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "For a description of this member, see &lt;xref:System.Collections.IList.Insert%2A?displayProperty=fullName&gt;."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.Design.DesignerRegionCollection> instance is cast to an <xref:System.Collections.IList> interface."
  syntax:
    content: void IList.Insert (int index, object o);
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based index within the collection at which to insert the object."
    - id: o
      type: System.Object
      description: "The object to insert into the collection."
  overload: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: DesignerRegionCollection.System.Collections.IList.IsFixedSize
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "For a description of this member, see &lt;xref:System.Collections.IList.IsFixedSize%2A?displayProperty=fullName&gt;."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.Design.DesignerRegionCollection> instance is cast to an <xref:System.Collections.IList> interface."
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>, if the collection dynamically increases in size as new objects are added; otherwise, <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: System.Collections.IList.IsReadOnly
  nameWithType: DesignerRegionCollection.System.Collections.IList.IsReadOnly
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.IList.IsReadOnly
  type: Property
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "For a description of this member, see &lt;xref:System.Collections.IList.IsReadOnly%2A?displayProperty=fullName&gt;."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.Design.DesignerRegionCollection> instance is cast to an <xref:System.Collections.IList> interface."
  syntax:
    content: bool System.Collections.IList.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "The value of the <xref:System.Web.UI.Design.DesignerRegionCollection.IsReadOnly*> property."
  overload: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: DesignerRegionCollection.System.Collections.IList.Item(Int32)
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "For a description of this member, see &lt;xref:System.Collections.IList.Item%2A?displayProperty=fullName&gt;."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.Design.DesignerRegionCollection> instance is cast to an <xref:System.Collections.IList> interface."
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based index of the object to get in the collection."
    return:
      type: System.Object
      description: "The object at the specified index in the collection."
  overload: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: DesignerRegionCollection.System.Collections.IList.Remove(Object)
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "For a description of this member, see &lt;xref:System.Collections.IList.Remove%2A?displayProperty=fullName&gt;."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.Design.DesignerRegionCollection> instance is cast to an <xref:System.Collections.IList> interface."
  syntax:
    content: void IList.Remove (object o);
    parameters:
    - id: o
      type: System.Object
      description: "The object to remove from the collection."
  overload: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#RemoveAt(System.Int32)
  id: System#Collections#IList#RemoveAt(System.Int32)
  isEii: true
  parent: System.Web.UI.Design.DesignerRegionCollection
  langs:
  - csharp
  name: System.Collections.IList.RemoveAt(Int32)
  nameWithType: DesignerRegionCollection.System.Collections.IList.RemoveAt(Int32)
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.IList.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "For a description of this member, see &lt;xref:System.Collections.IList.RemoveAt%2A?displayProperty=fullName&gt;."
  remarks: "This member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.Design.DesignerRegionCollection> instance is cast to an <xref:System.Collections.IList> interface."
  syntax:
    content: void IList.RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based index within the collection of the object to remove."
  overload: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#RemoveAt*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.UI.Design.DesignerRegionCollection.#ctor
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: DesignerRegionCollection()
  nameWithType: DesignerRegionCollection.DesignerRegionCollection()
  fullName: System.Web.UI.Design.DesignerRegionCollection.DesignerRegionCollection()
- uid: System.Web.UI.Design.DesignerRegionCollection.#ctor(System.Web.UI.Design.ControlDesigner)
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: DesignerRegionCollection(ControlDesigner)
  nameWithType: DesignerRegionCollection.DesignerRegionCollection(ControlDesigner)
  fullName: System.Web.UI.Design.DesignerRegionCollection.DesignerRegionCollection(ControlDesigner)
- uid: System.Web.UI.Design.ControlDesigner
  parent: System.Web.UI.Design
  isExternal: false
  name: ControlDesigner
  nameWithType: ControlDesigner
  fullName: System.Web.UI.Design.ControlDesigner
- uid: System.Web.UI.Design.DesignerRegionCollection.Add(System.Web.UI.Design.DesignerRegion)
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: Add(DesignerRegion)
  nameWithType: DesignerRegionCollection.Add(DesignerRegion)
  fullName: System.Web.UI.Design.DesignerRegionCollection.Add(DesignerRegion)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.Design.DesignerRegion
  parent: System.Web.UI.Design
  isExternal: false
  name: DesignerRegion
  nameWithType: DesignerRegion
  fullName: System.Web.UI.Design.DesignerRegion
- uid: System.Web.UI.Design.DesignerRegionCollection.Clear
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: Clear()
  nameWithType: DesignerRegionCollection.Clear()
  fullName: System.Web.UI.Design.DesignerRegionCollection.Clear()
- uid: System.Web.UI.Design.DesignerRegionCollection.Contains(System.Web.UI.Design.DesignerRegion)
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: Contains(DesignerRegion)
  nameWithType: DesignerRegionCollection.Contains(DesignerRegion)
  fullName: System.Web.UI.Design.DesignerRegionCollection.Contains(DesignerRegion)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.Design.DesignerRegionCollection.CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: DesignerRegionCollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.Design.DesignerRegionCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Web.UI.Design.DesignerRegionCollection.Count
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: Count
  nameWithType: DesignerRegionCollection.Count
  fullName: System.Web.UI.Design.DesignerRegionCollection.Count
- uid: System.Web.UI.Design.DesignerRegionCollection.GetEnumerator
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: DesignerRegionCollection.GetEnumerator()
  fullName: System.Web.UI.Design.DesignerRegionCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.UI.Design.DesignerRegionCollection.IndexOf(System.Web.UI.Design.DesignerRegion)
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: IndexOf(DesignerRegion)
  nameWithType: DesignerRegionCollection.IndexOf(DesignerRegion)
  fullName: System.Web.UI.Design.DesignerRegionCollection.IndexOf(DesignerRegion)
- uid: System.Web.UI.Design.DesignerRegionCollection.Insert(System.Int32,System.Web.UI.Design.DesignerRegion)
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: Insert(Int32,DesignerRegion)
  nameWithType: DesignerRegionCollection.Insert(Int32,DesignerRegion)
  fullName: System.Web.UI.Design.DesignerRegionCollection.Insert(Int32,DesignerRegion)
- uid: System.Web.UI.Design.DesignerRegionCollection.IsFixedSize
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: IsFixedSize
  nameWithType: DesignerRegionCollection.IsFixedSize
  fullName: System.Web.UI.Design.DesignerRegionCollection.IsFixedSize
- uid: System.Web.UI.Design.DesignerRegionCollection.IsReadOnly
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: DesignerRegionCollection.IsReadOnly
  fullName: System.Web.UI.Design.DesignerRegionCollection.IsReadOnly
- uid: System.Web.UI.Design.DesignerRegionCollection.IsSynchronized
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: DesignerRegionCollection.IsSynchronized
  fullName: System.Web.UI.Design.DesignerRegionCollection.IsSynchronized
- uid: System.Web.UI.Design.DesignerRegionCollection.Item(System.Int32)
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: DesignerRegionCollection.Item(Int32)
  fullName: System.Web.UI.Design.DesignerRegionCollection.Item(Int32)
- uid: System.Web.UI.Design.DesignerRegionCollection.Owner
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: Owner
  nameWithType: DesignerRegionCollection.Owner
  fullName: System.Web.UI.Design.DesignerRegionCollection.Owner
- uid: System.Web.UI.Design.DesignerRegionCollection.Remove(System.Web.UI.Design.DesignerRegion)
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: Remove(DesignerRegion)
  nameWithType: DesignerRegionCollection.Remove(DesignerRegion)
  fullName: System.Web.UI.Design.DesignerRegionCollection.Remove(DesignerRegion)
- uid: System.Web.UI.Design.DesignerRegionCollection.RemoveAt(System.Int32)
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: DesignerRegionCollection.RemoveAt(Int32)
  fullName: System.Web.UI.Design.DesignerRegionCollection.RemoveAt(Int32)
- uid: System.Web.UI.Design.DesignerRegionCollection.SyncRoot
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: SyncRoot
  nameWithType: DesignerRegionCollection.SyncRoot
  fullName: System.Web.UI.Design.DesignerRegionCollection.SyncRoot
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: DesignerRegionCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#Count
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: DesignerRegionCollection.System.Collections.ICollection.Count
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.ICollection.Count
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#IsSynchronized
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: DesignerRegionCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#SyncRoot
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: DesignerRegionCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.ICollection.SyncRoot
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: DesignerRegionCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Add(System.Object)
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: DesignerRegionCollection.System.Collections.IList.Add(Object)
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.IList.Add(Object)
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Clear
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.IList.Clear()
  nameWithType: DesignerRegionCollection.System.Collections.IList.Clear()
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.IList.Clear()
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Contains(System.Object)
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: DesignerRegionCollection.System.Collections.IList.Contains(Object)
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.IList.Contains(Object)
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: DesignerRegionCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.IList.IndexOf(Object)
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: DesignerRegionCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.IList.Insert(Int32,Object)
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#IsFixedSize
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: DesignerRegionCollection.System.Collections.IList.IsFixedSize
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.IList.IsFixedSize
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#IsReadOnly
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: DesignerRegionCollection.System.Collections.IList.IsReadOnly
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.IList.IsReadOnly
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Item(System.Int32)
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: DesignerRegionCollection.System.Collections.IList.Item(Int32)
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.IList.Item(Int32)
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Remove(System.Object)
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: DesignerRegionCollection.System.Collections.IList.Remove(Object)
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.IList.Remove(Object)
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#RemoveAt(System.Int32)
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.IList.RemoveAt(Int32)
  nameWithType: DesignerRegionCollection.System.Collections.IList.RemoveAt(Int32)
  fullName: System.Web.UI.Design.DesignerRegionCollection.System.Collections.IList.RemoveAt(Int32)
- uid: System.Web.UI.Design.DesignerRegionCollection.#ctor*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: DesignerRegionCollection
  nameWithType: DesignerRegionCollection.DesignerRegionCollection
- uid: System.Web.UI.Design.DesignerRegionCollection.Add*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: Add
  nameWithType: DesignerRegionCollection.Add
- uid: System.Web.UI.Design.DesignerRegionCollection.Clear*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: Clear
  nameWithType: DesignerRegionCollection.Clear
- uid: System.Web.UI.Design.DesignerRegionCollection.Contains*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: Contains
  nameWithType: DesignerRegionCollection.Contains
- uid: System.Web.UI.Design.DesignerRegionCollection.CopyTo*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: CopyTo
  nameWithType: DesignerRegionCollection.CopyTo
- uid: System.Web.UI.Design.DesignerRegionCollection.Count*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: Count
  nameWithType: DesignerRegionCollection.Count
- uid: System.Web.UI.Design.DesignerRegionCollection.GetEnumerator*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: DesignerRegionCollection.GetEnumerator
- uid: System.Web.UI.Design.DesignerRegionCollection.IndexOf*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: IndexOf
  nameWithType: DesignerRegionCollection.IndexOf
- uid: System.Web.UI.Design.DesignerRegionCollection.Insert*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: Insert
  nameWithType: DesignerRegionCollection.Insert
- uid: System.Web.UI.Design.DesignerRegionCollection.IsFixedSize*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: IsFixedSize
  nameWithType: DesignerRegionCollection.IsFixedSize
- uid: System.Web.UI.Design.DesignerRegionCollection.IsReadOnly*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: DesignerRegionCollection.IsReadOnly
- uid: System.Web.UI.Design.DesignerRegionCollection.IsSynchronized*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: DesignerRegionCollection.IsSynchronized
- uid: System.Web.UI.Design.DesignerRegionCollection.Item*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: Item
  nameWithType: DesignerRegionCollection.Item
- uid: System.Web.UI.Design.DesignerRegionCollection.Owner*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: Owner
  nameWithType: DesignerRegionCollection.Owner
- uid: System.Web.UI.Design.DesignerRegionCollection.Remove*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: Remove
  nameWithType: DesignerRegionCollection.Remove
- uid: System.Web.UI.Design.DesignerRegionCollection.RemoveAt*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: RemoveAt
  nameWithType: DesignerRegionCollection.RemoveAt
- uid: System.Web.UI.Design.DesignerRegionCollection.SyncRoot*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: SyncRoot
  nameWithType: DesignerRegionCollection.SyncRoot
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#CopyTo*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: DesignerRegionCollection.System.Collections.ICollection.CopyTo
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#Count*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: DesignerRegionCollection.System.Collections.ICollection.Count
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#IsSynchronized*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: DesignerRegionCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#SyncRoot*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: DesignerRegionCollection.System.Collections.ICollection.SyncRoot
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: DesignerRegionCollection.System.Collections.IEnumerable.GetEnumerator
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Add*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: DesignerRegionCollection.System.Collections.IList.Add
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Clear*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.IList.Clear
  nameWithType: DesignerRegionCollection.System.Collections.IList.Clear
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Contains*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: DesignerRegionCollection.System.Collections.IList.Contains
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#IndexOf*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: DesignerRegionCollection.System.Collections.IList.IndexOf
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Insert*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: DesignerRegionCollection.System.Collections.IList.Insert
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#IsFixedSize*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: DesignerRegionCollection.System.Collections.IList.IsFixedSize
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#IsReadOnly*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: DesignerRegionCollection.System.Collections.IList.IsReadOnly
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Item*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: DesignerRegionCollection.System.Collections.IList.Item
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Remove*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: DesignerRegionCollection.System.Collections.IList.Remove
- uid: System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#RemoveAt*
  parent: System.Web.UI.Design.DesignerRegionCollection
  isExternal: false
  name: System.Collections.IList.RemoveAt
  nameWithType: DesignerRegionCollection.System.Collections.IList.RemoveAt
