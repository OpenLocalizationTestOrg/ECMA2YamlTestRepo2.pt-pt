### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Description.MetadataImporter
  id: MetadataImporter
  children:
  - System.ServiceModel.Description.MetadataImporter.Errors
  - System.ServiceModel.Description.MetadataImporter.ImportAllContracts
  - System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints
  - System.ServiceModel.Description.MetadataImporter.KnownContracts
  - System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions
  - System.ServiceModel.Description.MetadataImporter.State
  langs:
  - csharp
  name: MetadataImporter
  nameWithType: MetadataImporter
  fullName: System.ServiceModel.Description.MetadataImporter
  type: Class
  summary: "Importa os metadados para &lt;xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=fullName&gt; objetos."
  remarks: "Utilize uma implementação da classe abstrata MetadataImporter para importar metadados do serviço. Tipos que derivam da classe MetadataImporter implementam suporte para importação formatos de metadados tirar partido de WS-Policy importar lógica em [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)].       Uma implementação de MetadataImporter recolhe as expressões de política ligadas para os metadados do serviço num <xref:System.ServiceModel.Description.PolicyConversionContext?displayProperty=fullName>objeto.</xref:System.ServiceModel.Description.PolicyConversionContext?displayProperty=fullName> O MetadataImporter, em seguida, processa as políticas como parte de importar os metadados ao chamar as implementações do <xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=fullName>interface no <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=fullName>propriedade.</xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=fullName> </xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=fullName>       Pode adicionar suporte para importar novo asserções de política para um MetadataImporter ao adicionar a sua própria implementação o <xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=fullName>interface para o <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=fullName>propriedade numa instância MetadataImporter.</xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=fullName> </xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=fullName> Em alternativa, pode registar a extensão de importação de política no ficheiro de configuração de aplicação.       O <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName>tipo é a implementação da classe abstrata MetadataImporter incluído com [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)].</xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName> O <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName>tipo importa os metadados WSDL com as políticas de anexos que estão incluídas num <xref:System.ServiceModel.Description.MetadataSet?displayProperty=fullName>objeto.</xref:System.ServiceModel.Description.MetadataSet?displayProperty=fullName> </xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName>       Pode adicionar suporte para importar as extensões WSDL implementando o <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName>interface e, em seguida, adicionar a implementação para o <xref:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions%2A?displayProperty=fullName>propriedade no seu <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName>instância.</xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName> </xref:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions%2A?displayProperty=fullName> </xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName> O <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName>também podem carregar as implementações do <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName>interface registado no ficheiro de configuração de aplicação.</xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName> </xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName>      > [!NOTE] > Porque o construtor de MetadataImporter é interno, não é possível derivar MetadataImporter nesta versão."
  example:
  - "The following example shows the use of the <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName> derived class to import metadata using custom state, checking the <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> property, compiling imported metadata to managed types and saving the result to a code file.  \n  \n [!code-cs[C_CustomWSDLExtensions#8](~/add/codesnippet/csharp/c_customwsdlextensions.client/client.cs#8)]"
  syntax:
    content: public abstract class MetadataImporter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataImporter.Errors
  id: Errors
  parent: System.ServiceModel.Description.MetadataImporter
  langs:
  - csharp
  name: Errors
  nameWithType: MetadataImporter.Errors
  fullName: System.ServiceModel.Description.MetadataImporter.Errors
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Obtém um valor que indica se ocorreram erros ao importar os metadados."
  remarks: "Verifique sempre a propriedade Errors depois de importar os metadados e antes de utilizar os metadados."
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.ServiceModel.Description.MetadataConversionError> Errors { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.MetadataConversionError}
      description: "Uma coleção de <xref href=&quot;System.ServiceModel.Description.MetadataConversionError&quot;> </xref> objetos."
  overload: System.ServiceModel.Description.MetadataImporter.Errors*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataImporter.ImportAllContracts
  id: ImportAllContracts
  parent: System.ServiceModel.Description.MetadataImporter
  langs:
  - csharp
  name: ImportAllContracts()
  nameWithType: MetadataImporter.ImportAllContracts()
  fullName: System.ServiceModel.Description.MetadataImporter.ImportAllContracts()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Quando substituí-lo de uma classe derivada, devolve um conjunto de contratos importados a partir de metadados."
  syntax:
    content: public abstract System.Collections.ObjectModel.Collection<System.ServiceModel.Description.ContractDescription> ImportAllContracts ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ContractDescription}
      description: "Os contratos importados a partir de metadados."
  overload: System.ServiceModel.Description.MetadataImporter.ImportAllContracts*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints
  id: ImportAllEndpoints
  parent: System.ServiceModel.Description.MetadataImporter
  langs:
  - csharp
  name: ImportAllEndpoints()
  nameWithType: MetadataImporter.ImportAllEndpoints()
  fullName: System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Quando substituí-lo de uma classe derivada, devolve todos os pontos finais nos metadados."
  remarks: "Implemente o método de ImportAllEndpoints para devolver todos os pontos finais nos metadados importado. Metadados que tenham sido importados como pontos finais de serviço não podem ser utilizado para criar um tempo de execução ou exportar os metadados porque os pontos finais importados não contêm nenhuma informação do tipo gerido. Para utilizar os metadados para criar um tempo de execução do cliente ou serviço ou gerar metadados, tem primeiro gerar e compilar código dos metadados e utilizar essas informações de tipo para criar um novo <xref:System.ServiceModel.Description.ContractDescription?displayProperty=fullName>objeto utilizando <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A>.</xref:System.ServiceModel.Description.ContractDescription.GetContract%2A> </xref:System.ServiceModel.Description.ContractDescription?displayProperty=fullName>"
  syntax:
    content: public abstract System.ServiceModel.Description.ServiceEndpointCollection ImportAllEndpoints ();
    parameters: []
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "Uma coleção de &lt;xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=fullName&gt; objetos que são publicados por um serviço."
  overload: System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataImporter.KnownContracts
  id: KnownContracts
  parent: System.ServiceModel.Description.MetadataImporter
  langs:
  - csharp
  name: KnownContracts
  nameWithType: MetadataImporter.KnownContracts
  fullName: System.ServiceModel.Description.MetadataImporter.KnownContracts
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Obtém um dicionário de contratos por nome de que conhece o importador."
  remarks: "Utilize a propriedade de KnownContracts para adicionar ou remover as descrições de contrato e os respetivos nomes XML associados, que pode referenciar o importador."
  syntax:
    content: public System.Collections.Generic.Dictionary<System.Xml.XmlQualifiedName,System.ServiceModel.Description.ContractDescription> KnownContracts { get; }
    return:
      type: System.Collections.Generic.Dictionary{System.Xml.XmlQualifiedName,System.ServiceModel.Description.ContractDescription}
      description: "Um dicionário de contratos listados por nome qualificado de XML."
  overload: System.ServiceModel.Description.MetadataImporter.KnownContracts*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions
  id: PolicyImportExtensions
  parent: System.ServiceModel.Description.MetadataImporter
  langs:
  - csharp
  name: PolicyImportExtensions
  nameWithType: MetadataImporter.PolicyImportExtensions
  fullName: System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Obtém uma coleção de importers de política que o importador de chamadas para asserções de política de processo."
  remarks: "Utilize a propriedade de PolicyImportExtensions para adicionar ou remover importers de política que invocada para processar asserções de política nos metadados."
  syntax:
    content: public System.Collections.Generic.KeyedByTypeCollection<System.ServiceModel.Description.IPolicyImportExtension> PolicyImportExtensions { get; }
    return:
      type: System.Collections.Generic.KeyedByTypeCollection{System.ServiceModel.Description.IPolicyImportExtension}
      description: "Uma coleção de importers de política que o <xref href=&quot;System.ServiceModel.Description.MetadataImporter&quot;> </xref> utiliza para processar asserções de política."
  overload: System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataImporter.State
  id: State
  parent: System.ServiceModel.Description.MetadataImporter
  langs:
  - csharp
  name: State
  nameWithType: MetadataImporter.State
  fullName: System.ServiceModel.Description.MetadataImporter.State
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Obtém ou define uma coleção de objetos utilizados na importação dos metadados."
  remarks: "Utilize o `State` propriedade para adicionar ou remover objetos utilizados na importação dos metadados."
  example:
  - "The following example shows the use of the State property to add a custom <xref:System.Runtime.Serialization.XsdDataContractImporter?displayProperty=fullName> to import data structures in a particular way.  \n  \n [!code-cs[C_CustomWSDLExtensions#8](~/add/codesnippet/csharp/c_customwsdlextensions.client/client.cs#8)]"
  syntax:
    content: public System.Collections.Generic.Dictionary<object,object> State { get; }
    return:
      type: System.Collections.Generic.Dictionary{System.Object,System.Object}
      description: "Um dicionário de codificadas pelo tipo de objetos."
  overload: System.ServiceModel.Description.MetadataImporter.State*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Description.MetadataImporter.Errors
  parent: System.ServiceModel.Description.MetadataImporter
  isExternal: false
  name: Errors
  nameWithType: MetadataImporter.Errors
  fullName: System.ServiceModel.Description.MetadataImporter.Errors
- uid: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.MetadataConversionError}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<MetadataConversionError>
  nameWithType: Collection<MetadataConversionError>
  fullName: System.Collections.ObjectModel.Collection<System.ServiceModel.Description.MetadataConversionError>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.ServiceModel.Description.MetadataConversionError>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Description.MetadataConversionError
    name: MetadataConversionError
    nameWithType: MetadataConversionError
    fullName: MetadataConversionError
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Description.MetadataImporter.ImportAllContracts
  parent: System.ServiceModel.Description.MetadataImporter
  isExternal: false
  name: ImportAllContracts()
  nameWithType: MetadataImporter.ImportAllContracts()
  fullName: System.ServiceModel.Description.MetadataImporter.ImportAllContracts()
- uid: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ContractDescription}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ContractDescription>
  nameWithType: Collection<ContractDescription>
  fullName: System.Collections.ObjectModel.Collection<System.ServiceModel.Description.ContractDescription>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.ServiceModel.Description.ContractDescription>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Description.ContractDescription
    name: ContractDescription
    nameWithType: ContractDescription
    fullName: ContractDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints
  parent: System.ServiceModel.Description.MetadataImporter
  isExternal: false
  name: ImportAllEndpoints()
  nameWithType: MetadataImporter.ImportAllEndpoints()
  fullName: System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints()
- uid: System.ServiceModel.Description.ServiceEndpointCollection
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceEndpointCollection
  nameWithType: ServiceEndpointCollection
  fullName: System.ServiceModel.Description.ServiceEndpointCollection
- uid: System.ServiceModel.Description.MetadataImporter.KnownContracts
  parent: System.ServiceModel.Description.MetadataImporter
  isExternal: false
  name: KnownContracts
  nameWithType: MetadataImporter.KnownContracts
  fullName: System.ServiceModel.Description.MetadataImporter.KnownContracts
- uid: System.Collections.Generic.Dictionary{System.Xml.XmlQualifiedName,System.ServiceModel.Description.ContractDescription}
  parent: System.Collections.Generic
  isExternal: true
  name: Dictionary<XmlQualifiedName,ContractDescription>
  nameWithType: Dictionary<XmlQualifiedName,ContractDescription>
  fullName: System.Collections.Generic.Dictionary<System.Xml.XmlQualifiedName,System.ServiceModel.Description.ContractDescription>
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary<System.Xml.XmlQualifiedName,System.ServiceModel.Description.ContractDescription>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.XmlQualifiedName
    name: XmlQualifiedName
    nameWithType: XmlQualifiedName
    fullName: XmlQualifiedName
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.ServiceModel.Description.ContractDescription
    name: ContractDescription
    nameWithType: ContractDescription
    fullName: ContractDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions
  parent: System.ServiceModel.Description.MetadataImporter
  isExternal: false
  name: PolicyImportExtensions
  nameWithType: MetadataImporter.PolicyImportExtensions
  fullName: System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions
- uid: System.Collections.Generic.KeyedByTypeCollection{System.ServiceModel.Description.IPolicyImportExtension}
  parent: System.Collections.Generic
  isExternal: false
  name: KeyedByTypeCollection<IPolicyImportExtension>
  nameWithType: KeyedByTypeCollection<IPolicyImportExtension>
  fullName: System.Collections.Generic.KeyedByTypeCollection<System.ServiceModel.Description.IPolicyImportExtension>
  spec.csharp:
  - uid: System.Collections.Generic.KeyedByTypeCollection`1
    name: KeyedByTypeCollection
    nameWithType: KeyedByTypeCollection
    fullName: KeyedByTypeCollection<System.ServiceModel.Description.IPolicyImportExtension>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Description.IPolicyImportExtension
    name: IPolicyImportExtension
    nameWithType: IPolicyImportExtension
    fullName: IPolicyImportExtension
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Description.MetadataImporter.State
  parent: System.ServiceModel.Description.MetadataImporter
  isExternal: false
  name: State
  nameWithType: MetadataImporter.State
  fullName: System.ServiceModel.Description.MetadataImporter.State
- uid: System.Collections.Generic.Dictionary{System.Object,System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: Dictionary<Object,Object>
  nameWithType: Dictionary<Object,Object>
  fullName: System.Collections.Generic.Dictionary<System.Object,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary<System.Object,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Description.MetadataImporter.Errors*
  parent: System.ServiceModel.Description.MetadataImporter
  isExternal: false
  name: Errors
  nameWithType: MetadataImporter.Errors
- uid: System.ServiceModel.Description.MetadataImporter.ImportAllContracts*
  parent: System.ServiceModel.Description.MetadataImporter
  isExternal: false
  name: ImportAllContracts
  nameWithType: MetadataImporter.ImportAllContracts
- uid: System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints*
  parent: System.ServiceModel.Description.MetadataImporter
  isExternal: false
  name: ImportAllEndpoints
  nameWithType: MetadataImporter.ImportAllEndpoints
- uid: System.ServiceModel.Description.MetadataImporter.KnownContracts*
  parent: System.ServiceModel.Description.MetadataImporter
  isExternal: false
  name: KnownContracts
  nameWithType: MetadataImporter.KnownContracts
- uid: System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions*
  parent: System.ServiceModel.Description.MetadataImporter
  isExternal: false
  name: PolicyImportExtensions
  nameWithType: MetadataImporter.PolicyImportExtensions
- uid: System.ServiceModel.Description.MetadataImporter.State*
  parent: System.ServiceModel.Description.MetadataImporter
  isExternal: false
  name: State
  nameWithType: MetadataImporter.State
