### YamlMime:ManagedReference
items:
- uid: System.Configuration.DefaultSettingValueAttribute
  id: DefaultSettingValueAttribute
  children:
  - System.Configuration.DefaultSettingValueAttribute.#ctor(System.String)
  - System.Configuration.DefaultSettingValueAttribute.Value
  langs:
  - csharp
  name: DefaultSettingValueAttribute
  nameWithType: DefaultSettingValueAttribute
  fullName: System.Configuration.DefaultSettingValueAttribute
  type: Class
  summary: "Specifies the default value for an application settings property."
  remarks: "> [!IMPORTANT] >  DefaultSettingValueAttribute can only be applied to individual settings properties; it is invalid to apply this attribute to an entire application settings class.       Different settings providers may have different requirements or limitations on the use of the DefaultSettingValueAttribute. For example, the <xref:System.Configuration.LocalFileSettingsProvider> does not require this attribute, and will override any value provided by this attribute if there are any values—default or user-modified— already present in the data store.       DefaultSettingValueAttribute requires that the default value can be represented as a string. As a result, settings using XML serialization cannot have a default value specified by means of this attribute. Some providers may choose to support multiple serialization schemes which can be specified at compile time using the <xref:System.Configuration.SettingsSerializeAsAttribute>.      > [!CAUTION] >  The default values specified by this attribute are stored as plain text in the resultant compiled .exe or .dll file. Therefore these default values are inherently insecure."
  example:
  - "The following code example demonstrates the use of the DefaultSettingValueAttribute applied to three of the four properties of the `FormSettings` wrapper class, which is derived from the <xref:System.Configuration.ApplicationSettingsBase> class. This class is used to persist the location, size, background color, and text of form. The first three of these form properties have default values associated with them.  \n  \n The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.  \n  \n [!code-cpp[AppSettingsSample#9](~/add/codesnippet/cpp/t-system.configuration.d_1.cpp)]\n [!code-cs[AppSettingsSample#9](~/add/codesnippet/csharp/t-system.configuration.d_1.cs)]\n [!code-vb[AppSettingsSample#9](~/add/codesnippet/visualbasic/AppSettingsSample/Form1.vb#9)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Property)]

      public sealed class DefaultSettingValueAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.DefaultSettingValueAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Configuration.DefaultSettingValueAttribute
  langs:
  - csharp
  name: DefaultSettingValueAttribute(String)
  nameWithType: DefaultSettingValueAttribute.DefaultSettingValueAttribute(String)
  fullName: System.Configuration.DefaultSettingValueAttribute.DefaultSettingValueAttribute(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Initializes an instance of the <xref href=&quot;System.Configuration.DefaultSettingValueAttribute&quot;></xref> class."
  remarks: "The supplied string must be a value that is compatible with the available serialization mechanism associated with the property type. For example, if the property is of type <xref:System.Drawing.Color>, then a `value` of `&quot;Azure&quot;` would be valid.      > [!CAUTION] >  The default values specified by this attribute are stored as plain text in the resultant compiled .exe or .dll file. Therefore these default values are inherently insecure."
  syntax:
    content: public DefaultSettingValueAttribute (string value);
    parameters:
    - id: value
      type: System.String
      description: "A <xref:System.String> that represents the default value for the property."
  overload: System.Configuration.DefaultSettingValueAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.DefaultSettingValueAttribute.Value
  id: Value
  parent: System.Configuration.DefaultSettingValueAttribute
  langs:
  - csharp
  name: Value
  nameWithType: DefaultSettingValueAttribute.Value
  fullName: System.Configuration.DefaultSettingValueAttribute.Value
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Gets the default value for the application settings property."
  remarks: "The Value property is set in the <xref:System.Configuration.DefaultSettingValueAttribute.%23ctor%2A> constructor.       Setting providers may support multiple serialization schemes that can be specified with the <xref:System.Configuration.SettingsSerializeAsAttribute>."
  syntax:
    content: public string Value { get; }
    return:
      type: System.String
      description: "A <xref:System.String> that represents the default value for the property."
  overload: System.Configuration.DefaultSettingValueAttribute.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Configuration.DefaultSettingValueAttribute.#ctor(System.String)
  parent: System.Configuration.DefaultSettingValueAttribute
  isExternal: false
  name: DefaultSettingValueAttribute(String)
  nameWithType: DefaultSettingValueAttribute.DefaultSettingValueAttribute(String)
  fullName: System.Configuration.DefaultSettingValueAttribute.DefaultSettingValueAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.DefaultSettingValueAttribute.Value
  parent: System.Configuration.DefaultSettingValueAttribute
  isExternal: false
  name: Value
  nameWithType: DefaultSettingValueAttribute.Value
  fullName: System.Configuration.DefaultSettingValueAttribute.Value
- uid: System.Configuration.DefaultSettingValueAttribute.#ctor*
  parent: System.Configuration.DefaultSettingValueAttribute
  isExternal: false
  name: DefaultSettingValueAttribute
  nameWithType: DefaultSettingValueAttribute.DefaultSettingValueAttribute
- uid: System.Configuration.DefaultSettingValueAttribute.Value*
  parent: System.Configuration.DefaultSettingValueAttribute
  isExternal: false
  name: Value
  nameWithType: DefaultSettingValueAttribute.Value
