### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.NetCodeGroup
  id: NetCodeGroup
  children:
  - System.Security.Policy.NetCodeGroup.#ctor(System.Security.Policy.IMembershipCondition)
  - System.Security.Policy.NetCodeGroup.AbsentOriginScheme
  - System.Security.Policy.NetCodeGroup.AddConnectAccess(System.String,System.Security.Policy.CodeConnectAccess)
  - System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme
  - System.Security.Policy.NetCodeGroup.AttributeString
  - System.Security.Policy.NetCodeGroup.Copy
  - System.Security.Policy.NetCodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  - System.Security.Policy.NetCodeGroup.Equals(System.Object)
  - System.Security.Policy.NetCodeGroup.GetConnectAccessRules
  - System.Security.Policy.NetCodeGroup.GetHashCode
  - System.Security.Policy.NetCodeGroup.MergeLogic
  - System.Security.Policy.NetCodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  - System.Security.Policy.NetCodeGroup.PermissionSetName
  - System.Security.Policy.NetCodeGroup.ResetConnectAccess
  - System.Security.Policy.NetCodeGroup.Resolve(System.Security.Policy.Evidence)
  - System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  langs:
  - csharp
  name: NetCodeGroup
  nameWithType: NetCodeGroup
  fullName: System.Security.Policy.NetCodeGroup
  type: Class
  summary: "Concede permissão de Web para o site a partir da qual a assemblagem foi transferida. Esta classe não pode ser herdada."
  remarks: "Os grupos de código são os blocos modulares de política de segurança de acesso de código. Cada nível de política é composta por um grupo de código de raiz que pode ter um ou mais grupos de código subordinado. Cada grupo de código subordinado pode ter os seus próprios grupos de código subordinados; Este comportamento expande a qualquer número de níveis, que formam uma árvore. Cada grupo de código tem uma condição de associação que determina se uma assemblagem em questão pertence ao grupo, com base no provas dessa assemblagem. Apenas os grupos de código cujas condições de associação corresponderem a uma assemblagem em questão, juntamente com os respetivos grupos de código subordinado, aplicaram política de segurança de acesso de código.       NetCodeGroup tem a mesma semântica de intercalação da <xref:System.Security.Policy.UnionCodeGroup>; a União de forma a <xref:System.Security.Policy.PolicyStatement>objetos subordinados correspondentes todos os grupos de código e o <xref:System.Security.Policy.PolicyStatement>gera da entrada <xref:System.Security.Policy.Url>provas.</xref:System.Security.Policy.Url> </xref:System.Security.Policy.PolicyStatement> </xref:System.Security.Policy.PolicyStatement> </xref:System.Security.Policy.UnionCodeGroup> No entanto, NetCodeGroup devolve uma permissão que contém um <xref:System.Net.WebPermission>calculada dinamicamente que concede ligar acesso para o site a partir da qual é executado o código; <xref:System.Security.Policy.UnionCodeGroup>simplesmente devolve um conjunto de permissões estático.</xref:System.Security.Policy.UnionCodeGroup> </xref:System.Net.WebPermission>       Quando é criado um NetCodeGroup, contém as regras de acesso predefinidas de ligação na seguinte tabela.      | O esquema de URI | Regra |   |----------------|----------|   | ficheiros | Sem acesso de ligação para o servidor de origem é permitido. |   | http | Acesso HTTP e HTTPS é permitido a utilizar a porta de origem. |   | https | Acesso HTTPS é permitido a utilizar a porta de origem. |       Pode controlar o esquema e a porta que o código é permitido a utilizar ao ligar ao respetivo site de origem através da transmissão de um <xref:System.Security.Policy.CodeConnectAccess>objeto com o adequado <xref:System.Security.Policy.CodeConnectAccess.Scheme%2A>e <xref:System.Security.Policy.CodeConnectAccess.Port%2A>valores de propriedade para o <xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A>método.</xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A> </xref:System.Security.Policy.CodeConnectAccess.Port%2A> </xref:System.Security.Policy.CodeConnectAccess.Scheme%2A> </xref:System.Security.Policy.CodeConnectAccess> Pode criar uma regra de acesso de ligação que se aplica quando o esquema de origem não está presente na provas ou não é reconhecido especificando <xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme>(&quot;&quot;) como o esquema.</xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme> Também pode criar uma regra de acesso de ligação que se aplica quando não há nenhuma regra de acesso de ligação com um esquema correspondente ao especificar <xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme>(&quot;*&quot;) como o esquema.</xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme>      > [!NOTE] > Se código não submeter o esquema URI como provas, o acesso é permitido utilizar qualquer esquema para o site de origem."
  example:
  - "The following code example demonstrates creating a NetCodeGroup and adding <xref:System.Security.Policy.CodeConnectAccess> objects for code downloaded using the HTTP scheme.  \n  \n [!code-cs[NclCodeGroup#3](~/add/codesnippet/csharp/t-system.security.policy_8_1.cs)]\n [!code-cpp[NclCodeGroup#3](~/add/codesnippet/cpp/t-system.security.policy_8_1.cpp)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class NetCodeGroup : System.Security.Policy.CodeGroup
  inheritance:
  - System.Object
  - System.Security.Policy.CodeGroup
  implements: []
  inheritedMembers:
  - System.Security.Policy.CodeGroup.AddChild(System.Security.Policy.CodeGroup)
  - System.Security.Policy.CodeGroup.Children
  - System.Security.Policy.CodeGroup.Description
  - System.Security.Policy.CodeGroup.Equals(System.Security.Policy.CodeGroup,System.Boolean)
  - System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)
  - System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  - System.Security.Policy.CodeGroup.MembershipCondition
  - System.Security.Policy.CodeGroup.Name
  - System.Security.Policy.CodeGroup.PolicyStatement
  - System.Security.Policy.CodeGroup.RemoveChild(System.Security.Policy.CodeGroup)
  - System.Security.Policy.CodeGroup.ToXml
  - System.Security.Policy.CodeGroup.ToXml(System.Security.Policy.PolicyLevel)
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.#ctor(System.Security.Policy.IMembershipCondition)
  id: '#ctor(System.Security.Policy.IMembershipCondition)'
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: NetCodeGroup(IMembershipCondition)
  nameWithType: NetCodeGroup.NetCodeGroup(IMembershipCondition)
  fullName: System.Security.Policy.NetCodeGroup.NetCodeGroup(IMembershipCondition)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Policy.NetCodeGroup&quot;> </xref> classe."
  remarks: "Quando um <xref:System.Security.Policy.NetCodeGroup>é criado, contém as regras de acesso predefinidas de ligação na seguinte tabela.</xref:System.Security.Policy.NetCodeGroup>      | Esquema | Regra |   |------------|----------|   | ficheiros | Sem acesso de ligação para o servidor de origem é permitido. |   | http | Acesso HTTP e HTTPS é permitido a utilizar a porta de origem. |   | https | Acesso HTTPS é permitido a utilizar a porta de origem. |"
  example:
  - "The following code example demonstrates creating a <xref:System.Security.Policy.NetCodeGroup> and adding <xref:System.Security.Policy.CodeConnectAccess> objects for code downloaded using the HTTP scheme.  \n  \n [!code-cs[NclCodeGroup#3](~/add/codesnippet/csharp/e7170b34-662f-4231-84e8-_1.cs)]\n [!code-cpp[NclCodeGroup#3](~/add/codesnippet/cpp/e7170b34-662f-4231-84e8-_1.cpp)]"
  syntax:
    content: public NetCodeGroup (System.Security.Policy.IMembershipCondition membershipCondition);
    parameters:
    - id: membershipCondition
      type: System.Security.Policy.IMembershipCondition
      description: "Uma condição de associação que testa provas para determinar se o grupo de códigos se aplica a política de segurança de acesso de código."
  overload: System.Security.Policy.NetCodeGroup.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>membershipCondition</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O tipo do <code> membershipCondition </code> parâmetro não é válido."
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.AbsentOriginScheme
  id: AbsentOriginScheme
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: AbsentOriginScheme
  nameWithType: NetCodeGroup.AbsentOriginScheme
  fullName: System.Security.Policy.NetCodeGroup.AbsentOriginScheme
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Contém um valor utilizado para especificar o acesso de ligação para o código com um esquema de origem desconhecido ou não foi reconhecida."
  remarks: "Quando chamar o <xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A>método, tem de especificar um esquema e um associados <xref:System.Security.Policy.CodeConnectAccess>objeto.</xref:System.Security.Policy.CodeConnectAccess> </xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A> Qualquer <xref:System.Security.Policy.CodeConnectAccess>objetos que adiciona à <xref:System.Security.Policy.NetCodeGroup>utilizando AbsentOriginScheme como esquema de origem são aplicadas quando o esquema de origem do código não está presente na respetiva provas ou não é um esquema é reconhecido pelo <xref:System.Security.Policy.NetCodeGroup>objeto.</xref:System.Security.Policy.NetCodeGroup> </xref:System.Security.Policy.NetCodeGroup> </xref:System.Security.Policy.CodeConnectAccess>       Para especificar o <xref:System.Security.Policy.CodeConnectAccess>objetos a utilizar quando o esquema de origem do código não corresponde a nenhum dos esquemas contidos no conjunto de esquemas de origem adicionados à atual <xref:System.Security.Policy.NetCodeGroup>objeto, utilize o <xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme>valor.</xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme> </xref:System.Security.Policy.NetCodeGroup> </xref:System.Security.Policy.CodeConnectAccess>       O valor do campo AbsentOriginScheme é uma cadeia vazia (&quot;&quot;)."
  syntax:
    content: public static readonly string AbsentOriginScheme;
    return:
      type: System.String
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.AddConnectAccess(System.String,System.Security.Policy.CodeConnectAccess)
  id: AddConnectAccess(System.String,System.Security.Policy.CodeConnectAccess)
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: AddConnectAccess(String,CodeConnectAccess)
  nameWithType: NetCodeGroup.AddConnectAccess(String,CodeConnectAccess)
  fullName: System.Security.Policy.NetCodeGroup.AddConnectAccess(String,CodeConnectAccess)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Adiciona o acesso de ligação especificada para o grupo de código atual."
  remarks: "Pode adicionar várias <xref:System.Security.Policy.CodeConnectAccess>objetos para o mesmo `origin scheme`.</xref:System.Security.Policy.CodeConnectAccess> Se um `origin scheme` já tem um ou mais associados <xref:System.Security.Policy.CodeConnectAccess>objetos, especificando `null` para `connectAccess` não tem qualquer efeito.</xref:System.Security.Policy.CodeConnectAccess> Se o esquema de origem não associou <xref:System.Security.Policy.CodeConnectAccess>objetos, especificando `null` para `connectAccess` impede código com um esquema de origem que corresponda ao `originScheme` de aceder ao respetivo servidor de origem.</xref:System.Security.Policy.CodeConnectAccess>"
  example:
  - "The following code example demonstrates creating and adding <xref:System.Security.Policy.CodeConnectAccess> objects to a <xref:System.Security.Policy.NetCodeGroup>.  \n  \n [!code-cs[NclCodeGroup#3](~/add/codesnippet/csharp/c09efa70-70d7-4f2a-aa3b-_1.cs)]\n [!code-cpp[NclCodeGroup#3](~/add/codesnippet/cpp/c09efa70-70d7-4f2a-aa3b-_1.cpp)]"
  syntax:
    content: public void AddConnectAccess (string originScheme, System.Security.Policy.CodeConnectAccess connectAccess);
    parameters:
    - id: originScheme
      type: System.String
      description: "A <xref:System.String>que contém o esquema de correspondência do esquema do código.</xref:System.String>"
    - id: connectAccess
      type: System.Security.Policy.CodeConnectAccess
      description: "A <xref href=&quot;System.Security.Policy.CodeConnectAccess&quot;> </xref> que especifica o código de esquema e de porta pode utilizar para estabelecer ligação com o respetivo servidor de origem."
  overload: System.Security.Policy.NetCodeGroup.AddConnectAccess*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>originScheme</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>originScheme</code>contém carateres que não são permitidas em esquemas.       -or-       <code>originScheme</code> = <xref href=&quot;System.Security.Policy.NetCodeGroup.AbsentOriginScheme&quot;></xref> and <code>connectAccess</code> specifies <xref href=&quot;System.Security.Policy.CodeConnectAccess.OriginScheme&quot;></xref> as its scheme."
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme
  id: AnyOtherOriginScheme
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: AnyOtherOriginScheme
  nameWithType: NetCodeGroup.AnyOtherOriginScheme
  fullName: System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Contém um valor utilizado para especificar outra esquema de origem não especificado."
  remarks: "Quando chamar o <xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A>método, tem de especificar um esquema e um associados <xref:System.Security.Policy.CodeConnectAccess>objeto.</xref:System.Security.Policy.CodeConnectAccess> </xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A> Pode utilizar o valor do campo AnyOtherOriginScheme para especificar o <xref:System.Security.Policy.CodeConnectAccess>objetos que devem ser utilizados para qualquer esquema que não está contida explicitamente no conjunto de esquemas de origem adicionados à atual <xref:System.Security.Policy.NetCodeGroup>objeto.</xref:System.Security.Policy.NetCodeGroup> </xref:System.Security.Policy.CodeConnectAccess>       O <xref:System.Security.Policy.CodeConnectAccess>objetos especificados com o campo de AnyOtherOriginScheme só são utilizados se o esquema de origem do código não corresponde a nenhum dos esquemas contidos no conjunto de esquemas de origem adicionados à atual <xref:System.Security.Policy.NetCodeGroup>objeto.</xref:System.Security.Policy.NetCodeGroup> </xref:System.Security.Policy.CodeConnectAccess>       Para especificar o <xref:System.Security.Policy.CodeConnectAccess>objetos a aplicar quando o esquema de origem do código não está disponível no respetiva provas ou não é reconhecida, utilize o <xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme>valor.</xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme> </xref:System.Security.Policy.CodeConnectAccess>       O valor do campo AnyOtherOriginScheme é &quot;*&quot;."
  syntax:
    content: public static readonly string AnyOtherOriginScheme;
    return:
      type: System.String
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.AttributeString
  id: AttributeString
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: AttributeString
  nameWithType: NetCodeGroup.AttributeString
  fullName: System.Security.Policy.NetCodeGroup.AttributeString
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Obtém uma representação de cadeia dos atributos de declaração de política para o grupo de código."
  syntax:
    content: public override string AttributeString { get; }
    return:
      type: System.String
      description: "Always <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Policy.NetCodeGroup.AttributeString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.Copy
  id: Copy
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: Copy()
  nameWithType: NetCodeGroup.Copy()
  fullName: System.Security.Policy.NetCodeGroup.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Faz uma cópia profunda do grupo de código atual."
  remarks: "Este método cria uma cópia profunda do grupo de código, que significa que as cópias de todos os objetos que contém o grupo de código também são efetuadas."
  syntax:
    content: public override System.Security.Policy.CodeGroup Copy ();
    parameters: []
    return:
      type: System.Security.Policy.CodeGroup
      description: "Uma cópia equivalente do grupo de código atual, incluindo a condições de associação e grupos de código subordinados."
  overload: System.Security.Policy.NetCodeGroup.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  id: CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: CreateXml(SecurityElement,PolicyLevel)
  nameWithType: NetCodeGroup.CreateXml(SecurityElement,PolicyLevel)
  fullName: System.Security.Policy.NetCodeGroup.CreateXml(SecurityElement,PolicyLevel)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  syntax:
    content: protected override void CreateXml (System.Security.SecurityElement element, System.Security.Policy.PolicyLevel level);
    parameters:
    - id: element
      type: System.Security.SecurityElement
      description: "A adicionar."
    - id: level
      type: System.Security.Policy.PolicyLevel
      description: "A adicionar."
  overload: System.Security.Policy.NetCodeGroup.CreateXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: NetCodeGroup.Equals(Object)
  fullName: System.Security.Policy.NetCodeGroup.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Determina se o grupo de códigos especificado é equivalente ao grupo de código atual."
  remarks: "Os seguintes dados são utilizados para determinar a igualdade de dois <xref:System.Security.Policy.NetCodeGroup>objetos: - <xref:System.Security.Policy.CodeGroup.Name%2A>e <xref:System.Security.Policy.CodeGroup.Description%2A>Propriedades.</xref:System.Security.Policy.CodeGroup.Description%2A> </xref:System.Security.Policy.CodeGroup.Name%2A> </xref:System.Security.Policy.NetCodeGroup>      -O <xref:System.Security.Policy.CodeGroup.MembershipCondition%2A>propriedade.</xref:System.Security.Policy.CodeGroup.MembershipCondition%2A>      -O conjunto de esquemas de origem e associada <xref:System.Security.Policy.CodeConnectAccess>objetos.</xref:System.Security.Policy.CodeConnectAccess>"
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "O <xref href=&quot;System.Security.Policy.NetCodeGroup&quot;> </xref> objeto para a comparação com o grupo de código atual."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o grupo de códigos especificado é equivalente ao grupo de código atual; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Policy.NetCodeGroup.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.GetConnectAccessRules
  id: GetConnectAccessRules
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: GetConnectAccessRules()
  nameWithType: NetCodeGroup.GetConnectAccessRules()
  fullName: System.Security.Policy.NetCodeGroup.GetConnectAccessRules()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Obtém as informações de ligação de acesso para o grupo de código atual."
  remarks: "Cada entrada de dicionário, o <xref:System.Collections.DictionaryEntry.Key%2A>valor da propriedade é o esquema de origem e o <xref:System.Collections.DictionaryEntry.Value%2A>valor da propriedade é a matriz de associado <xref:System.Security.Policy.CodeConnectAccess>objetos.</xref:System.Security.Policy.CodeConnectAccess> </xref:System.Collections.DictionaryEntry.Value%2A> </xref:System.Collections.DictionaryEntry.Key%2A> Se existirem não associado <xref:System.Security.Policy.CodeConnectAccess>objetos, <xref:System.Collections.DictionaryEntry.Value%2A?displayProperty=fullName>devolve uma matriz vazia.</xref:System.Collections.DictionaryEntry.Value%2A?displayProperty=fullName> </xref:System.Security.Policy.CodeConnectAccess>"
  example:
  - "The following code example demonstrates displaying the connection access rules for a <xref:System.Security.Policy.NetCodeGroup> object.  \n  \n [!code-cs[NclCodeGroup#8](~/add/codesnippet/csharp/m-system.security.policy_21_1.cs)]\n [!code-cpp[NclCodeGroup#8](~/add/codesnippet/cpp/m-system.security.policy_21_1.cpp)]"
  syntax:
    content: public System.Collections.DictionaryEntry[] GetConnectAccessRules ();
    parameters: []
    return:
      type: System.Collections.DictionaryEntry[]
      description: "A <xref:System.Collections.DictionaryEntry>matriz que contém informações de ligação de acesso.</xref:System.Collections.DictionaryEntry>"
  overload: System.Security.Policy.NetCodeGroup.GetConnectAccessRules*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.GetHashCode
  id: GetHashCode
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: NetCodeGroup.GetHashCode()
  fullName: System.Security.Policy.NetCodeGroup.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Obtém o código hash do grupo de código atual."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "O código hash do grupo de código atual."
  overload: System.Security.Policy.NetCodeGroup.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.MergeLogic
  id: MergeLogic
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: MergeLogic
  nameWithType: NetCodeGroup.MergeLogic
  fullName: System.Security.Policy.NetCodeGroup.MergeLogic
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Obtém a lógica para utilizar grupos de intercalação."
  syntax:
    content: public override string MergeLogic { get; }
    return:
      type: System.String
      description: "A cadeia &quot;Union&quot;."
  overload: System.Security.Policy.NetCodeGroup.MergeLogic*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  id: ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: ParseXml(SecurityElement,PolicyLevel)
  nameWithType: NetCodeGroup.ParseXml(SecurityElement,PolicyLevel)
  fullName: System.Security.Policy.NetCodeGroup.ParseXml(SecurityElement,PolicyLevel)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  syntax:
    content: protected override void ParseXml (System.Security.SecurityElement e, System.Security.Policy.PolicyLevel level);
    parameters:
    - id: e
      type: System.Security.SecurityElement
      description: "A adicionar."
    - id: level
      type: System.Security.Policy.PolicyLevel
      description: "A adicionar."
  overload: System.Security.Policy.NetCodeGroup.ParseXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.PermissionSetName
  id: PermissionSetName
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: PermissionSetName
  nameWithType: NetCodeGroup.PermissionSetName
  fullName: System.Security.Policy.NetCodeGroup.PermissionSetName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Obtém o nome do <xref href=&quot;System.Security.NamedPermissionSet&quot;> </xref> para o grupo de código."
  syntax:
    content: public override string PermissionSetName { get; }
    return:
      type: System.String
      description: "Sempre a cadeia &quot;Mesmo site Web.&quot;"
  overload: System.Security.Policy.NetCodeGroup.PermissionSetName*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.ResetConnectAccess
  id: ResetConnectAccess
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: ResetConnectAccess()
  nameWithType: NetCodeGroup.ResetConnectAccess()
  fullName: System.Security.Policy.NetCodeGroup.ResetConnectAccess()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Remove todas as informações de acesso de ligação para o grupo de código atual."
  remarks: "Utilize este método para remover as regras de acesso de ligação predefinido fornecido pelo sistema.       As regras predefinidas são apresentadas na tabela seguinte.      | Esquema | Regra |   |------------|----------|   | ficheiros | Sem acesso de ligação para o servidor de origem é permitido. |   | http | Acesso HTTP e HTTPS é permitido a utilizar a porta de origem. |   | https | Acesso HTTPS é permitido a utilizar a porta de origem. |"
  example:
  - "The following code example demonstrates calling this method to remove the default code access connection rules.  \n  \n [!code-cs[NclCodeGroup#3](~/add/codesnippet/csharp/m-system.security.policy_32_1.cs)]\n [!code-cpp[NclCodeGroup#3](~/add/codesnippet/cpp/m-system.security.policy_32_1.cpp)]"
  syntax:
    content: public void ResetConnectAccess ();
    parameters: []
  overload: System.Security.Policy.NetCodeGroup.ResetConnectAccess*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.Resolve(System.Security.Policy.Evidence)
  id: Resolve(System.Security.Policy.Evidence)
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: Resolve(Evidence)
  nameWithType: NetCodeGroup.Resolve(Evidence)
  fullName: System.Security.Policy.NetCodeGroup.Resolve(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Resolve política para o grupo de código e respetivos descendentes de um conjunto de prova."
  remarks: "Tendo em conta provas para uma assemblagem seja carregado, este método avalia o grupo de código ao primeiro verificar a condição de associação em relação a provas especificada. Se existir uma correspondência, este método devolve uma declaração de política para o grupo de código, incluindo a avaliação de grupos de código subordinados.       A operação deste método é o seguinte: se a condição de associação não corresponde a provas especificada, devolver `null`; caso contrário, conjunto a permissão definida para ser devolvido (P) igual a declaração de política de grupo de código e continuar. Para cada grupo de código subordinado, resolver o grupo de código com a mesma provas; Se o resultado não está `null`, devolver essa declaração de política. Não se corresponder a nenhum grupo de código subordinado, devolva P (declaração de política de principal)."
  syntax:
    content: public override System.Security.Policy.PolicyStatement Resolve (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "O <xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> para a assemblagem."
    return:
      type: System.Security.Policy.PolicyStatement
      description: "A <xref href=&quot;System.Security.Policy.PolicyStatement&quot;> </xref> que consiste das permissões concedidas pelo grupo de código com atributos opcionais quantos, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o grupo de código não se aplica (a condição de associação não corresponde a provas especificada)."
  overload: System.Security.Policy.NetCodeGroup.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>evidence</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Policy.PolicyException
    commentId: T:System.Security.Policy.PolicyException
    description: "Mais de um grupo de código (incluindo o grupo de código principal e todos os grupos subordinados código) está marcado como <xref href=&quot;System.Security.Policy.PolicyStatementAttribute&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  id: ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  parent: System.Security.Policy.NetCodeGroup
  langs:
  - csharp
  name: ResolveMatchingCodeGroups(Evidence)
  nameWithType: NetCodeGroup.ResolveMatchingCodeGroups(Evidence)
  fullName: System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Resolve correspondência de grupos de código."
  remarks: "Tendo em conta provas para uma assemblagem seja carregado, este método avalia o grupo de código ao primeiro verificar a condição de associação em relação a provas especificada. Se existir uma correspondência, este método devolve um grupo de códigos raiz. O grupo de código que é devolvido pode conter os grupos de código de subordinados, que, por sua vez, podem também ter grupos de código subordinados, pelo que o valor de retorno reflete o conjunto completo de grupos de código que foram correspondidos por provas fornecida."
  syntax:
    content: public override System.Security.Policy.CodeGroup ResolveMatchingCodeGroups (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "A prova de assemblagem."
    return:
      type: System.Security.Policy.CodeGroup
      description: "O conjunto completo de grupos de código que foram correspondidos pela provas."
  overload: System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>evidence</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Security.Policy.CodeGroup
  isExternal: false
  name: System.Security.Policy.CodeGroup
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.Policy.PolicyException
  parent: System.Security.Policy
  isExternal: false
  name: PolicyException
  nameWithType: PolicyException
  fullName: System.Security.Policy.PolicyException
- uid: System.Security.Policy.NetCodeGroup.#ctor(System.Security.Policy.IMembershipCondition)
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: NetCodeGroup(IMembershipCondition)
  nameWithType: NetCodeGroup.NetCodeGroup(IMembershipCondition)
  fullName: System.Security.Policy.NetCodeGroup.NetCodeGroup(IMembershipCondition)
- uid: System.Security.Policy.IMembershipCondition
  parent: System.Security.Policy
  isExternal: false
  name: IMembershipCondition
  nameWithType: IMembershipCondition
  fullName: System.Security.Policy.IMembershipCondition
- uid: System.Security.Policy.NetCodeGroup.AbsentOriginScheme
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: AbsentOriginScheme
  nameWithType: NetCodeGroup.AbsentOriginScheme
  fullName: System.Security.Policy.NetCodeGroup.AbsentOriginScheme
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Policy.NetCodeGroup.AddConnectAccess(System.String,System.Security.Policy.CodeConnectAccess)
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: AddConnectAccess(String,CodeConnectAccess)
  nameWithType: NetCodeGroup.AddConnectAccess(String,CodeConnectAccess)
  fullName: System.Security.Policy.NetCodeGroup.AddConnectAccess(String,CodeConnectAccess)
- uid: System.Security.Policy.CodeConnectAccess
  parent: System.Security.Policy
  isExternal: false
  name: CodeConnectAccess
  nameWithType: CodeConnectAccess
  fullName: System.Security.Policy.CodeConnectAccess
- uid: System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: AnyOtherOriginScheme
  nameWithType: NetCodeGroup.AnyOtherOriginScheme
  fullName: System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme
- uid: System.Security.Policy.NetCodeGroup.AttributeString
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: AttributeString
  nameWithType: NetCodeGroup.AttributeString
  fullName: System.Security.Policy.NetCodeGroup.AttributeString
- uid: System.Security.Policy.NetCodeGroup.Copy
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: Copy()
  nameWithType: NetCodeGroup.Copy()
  fullName: System.Security.Policy.NetCodeGroup.Copy()
- uid: System.Security.Policy.NetCodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: CreateXml(SecurityElement,PolicyLevel)
  nameWithType: NetCodeGroup.CreateXml(SecurityElement,PolicyLevel)
  fullName: System.Security.Policy.NetCodeGroup.CreateXml(SecurityElement,PolicyLevel)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Policy.PolicyLevel
  parent: System.Security.Policy
  isExternal: false
  name: PolicyLevel
  nameWithType: PolicyLevel
  fullName: System.Security.Policy.PolicyLevel
- uid: System.Security.Policy.NetCodeGroup.Equals(System.Object)
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: Equals(Object)
  nameWithType: NetCodeGroup.Equals(Object)
  fullName: System.Security.Policy.NetCodeGroup.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Policy.NetCodeGroup.GetConnectAccessRules
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: GetConnectAccessRules()
  nameWithType: NetCodeGroup.GetConnectAccessRules()
  fullName: System.Security.Policy.NetCodeGroup.GetConnectAccessRules()
- uid: System.Collections.DictionaryEntry[]
  parent: System.Collections
  isExternal: true
  name: DictionaryEntry
  nameWithType: DictionaryEntry
  fullName: System.Collections.DictionaryEntry[]
  spec.csharp:
  - uid: System.Collections.DictionaryEntry
    name: DictionaryEntry
    nameWithType: DictionaryEntry
    fullName: DictionaryEntry[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Policy.NetCodeGroup.GetHashCode
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: GetHashCode()
  nameWithType: NetCodeGroup.GetHashCode()
  fullName: System.Security.Policy.NetCodeGroup.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Policy.NetCodeGroup.MergeLogic
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: MergeLogic
  nameWithType: NetCodeGroup.MergeLogic
  fullName: System.Security.Policy.NetCodeGroup.MergeLogic
- uid: System.Security.Policy.NetCodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: ParseXml(SecurityElement,PolicyLevel)
  nameWithType: NetCodeGroup.ParseXml(SecurityElement,PolicyLevel)
  fullName: System.Security.Policy.NetCodeGroup.ParseXml(SecurityElement,PolicyLevel)
- uid: System.Security.Policy.NetCodeGroup.PermissionSetName
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: PermissionSetName
  nameWithType: NetCodeGroup.PermissionSetName
  fullName: System.Security.Policy.NetCodeGroup.PermissionSetName
- uid: System.Security.Policy.NetCodeGroup.ResetConnectAccess
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: ResetConnectAccess()
  nameWithType: NetCodeGroup.ResetConnectAccess()
  fullName: System.Security.Policy.NetCodeGroup.ResetConnectAccess()
- uid: System.Security.Policy.NetCodeGroup.Resolve(System.Security.Policy.Evidence)
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: Resolve(Evidence)
  nameWithType: NetCodeGroup.Resolve(Evidence)
  fullName: System.Security.Policy.NetCodeGroup.Resolve(Evidence)
- uid: System.Security.Policy.PolicyStatement
  parent: System.Security.Policy
  isExternal: false
  name: PolicyStatement
  nameWithType: PolicyStatement
  fullName: System.Security.Policy.PolicyStatement
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: ResolveMatchingCodeGroups(Evidence)
  nameWithType: NetCodeGroup.ResolveMatchingCodeGroups(Evidence)
  fullName: System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups(Evidence)
- uid: System.Security.Policy.NetCodeGroup.#ctor*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: NetCodeGroup
  nameWithType: NetCodeGroup.NetCodeGroup
- uid: System.Security.Policy.NetCodeGroup.AddConnectAccess*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: AddConnectAccess
  nameWithType: NetCodeGroup.AddConnectAccess
- uid: System.Security.Policy.NetCodeGroup.AttributeString*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: AttributeString
  nameWithType: NetCodeGroup.AttributeString
- uid: System.Security.Policy.NetCodeGroup.Copy*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: Copy
  nameWithType: NetCodeGroup.Copy
- uid: System.Security.Policy.NetCodeGroup.CreateXml*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: CreateXml
  nameWithType: NetCodeGroup.CreateXml
- uid: System.Security.Policy.NetCodeGroup.Equals*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: Equals
  nameWithType: NetCodeGroup.Equals
- uid: System.Security.Policy.NetCodeGroup.GetConnectAccessRules*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: GetConnectAccessRules
  nameWithType: NetCodeGroup.GetConnectAccessRules
- uid: System.Security.Policy.NetCodeGroup.GetHashCode*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: GetHashCode
  nameWithType: NetCodeGroup.GetHashCode
- uid: System.Security.Policy.NetCodeGroup.MergeLogic*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: MergeLogic
  nameWithType: NetCodeGroup.MergeLogic
- uid: System.Security.Policy.NetCodeGroup.ParseXml*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: ParseXml
  nameWithType: NetCodeGroup.ParseXml
- uid: System.Security.Policy.NetCodeGroup.PermissionSetName*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: PermissionSetName
  nameWithType: NetCodeGroup.PermissionSetName
- uid: System.Security.Policy.NetCodeGroup.ResetConnectAccess*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: ResetConnectAccess
  nameWithType: NetCodeGroup.ResetConnectAccess
- uid: System.Security.Policy.NetCodeGroup.Resolve*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: Resolve
  nameWithType: NetCodeGroup.Resolve
- uid: System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups*
  parent: System.Security.Policy.NetCodeGroup
  isExternal: false
  name: ResolveMatchingCodeGroups
  nameWithType: NetCodeGroup.ResolveMatchingCodeGroups
