### YamlMime:ManagedReference
items:
- uid: System.Web.UI.HtmlControls.HtmlForm
  id: HtmlForm
  children:
  - System.Web.UI.HtmlControls.HtmlForm.#ctor
  - System.Web.UI.HtmlControls.HtmlForm.Action
  - System.Web.UI.HtmlControls.HtmlForm.ClientID
  - System.Web.UI.HtmlControls.HtmlForm.CreateControlCollection
  - System.Web.UI.HtmlControls.HtmlForm.DefaultButton
  - System.Web.UI.HtmlControls.HtmlForm.DefaultFocus
  - System.Web.UI.HtmlControls.HtmlForm.Enctype
  - System.Web.UI.HtmlControls.HtmlForm.Method
  - System.Web.UI.HtmlControls.HtmlForm.Name
  - System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)
  - System.Web.UI.HtmlControls.HtmlForm.OnPreRender(System.EventArgs)
  - System.Web.UI.HtmlControls.HtmlForm.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.HtmlControls.HtmlForm.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.HtmlControls.HtmlForm.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls
  - System.Web.UI.HtmlControls.HtmlForm.Target
  - System.Web.UI.HtmlControls.HtmlForm.UniqueID
  langs:
  - csharp
  name: HtmlForm
  nameWithType: HtmlForm
  fullName: System.Web.UI.HtmlControls.HtmlForm
  type: Class
  summary: "Provides programmatic access to the HTML <xref uid=&quot;langword_csharp_&lt;form&gt;&quot; name=&quot;&lt;form&gt;&quot; href=&quot;&quot;></xref> element on the server."
  remarks: "The HtmlForm control is a container for server controls on a Web Forms page. All server controls that post back to the server must be placed between the opening and closing tags of an HtmlForm control.      > [!NOTE] >  ASP.NET allows only a single HtmlForm control to be active on a Web Forms page. If there is more than one active HtmlForm control on a Web Forms page, the common language runtime will throw an <xref:System.Web.HttpException?displayProperty=fullName> exception when you request the page. You can, however, use a <xref:System.Web.UI.WebControls.MultiView> control where each <xref:System.Web.UI.WebControls.View> object contains one HtmlForm control, because only one <xref:System.Web.UI.WebControls.View> is active at any given time.       You can control the behavior of the HtmlForm control by setting its properties. To specify the encoding type for the form&quot;s data, set the <xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A> property. The method (`GET` or `POST`) that a browser uses to post form data to the server for processing is specified by setting the <xref:System.Web.UI.HtmlControls.HtmlForm.Method%2A> property.      > [!CAUTION] >  By default, the <xref:System.Web.UI.HtmlControls.HtmlForm.Method%2A> property is set to `POST`. You can modify the value of this property to `GET`, but this might break the built-in state and postback services provided by the ASP.NET page framework.       You can configure controls that implement the <xref:System.Web.UI.WebControls.IButtonControl> interface to post to a different target page. This is referred to as cross-page posting. For more information, see [Cross-Page Posting in ASP.NET Web Forms](~/add/includes/ajax-current-ext-md.md).       For a list of initial property values for an instance of HtmlForm, see the <xref:System.Web.UI.HtmlControls.HtmlForm.%23ctor%2A> constructor."
  example:
  - "The following code example demonstrates how to use the HtmlForm class to create a simple form.  \n  \n [!code-cs[HtmlForm#1](~/add/codesnippet/csharp/t-system.web.ui.htmlcont_13_1.aspx)]\n [!code-vb[HtmlForm#1](~/add/codesnippet/visualbasic/t-system.web.ui.htmlcont_13_1.aspx)]"
  syntax:
    content: 'public class HtmlForm : System.Web.UI.HtmlControls.HtmlContainerControl'
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.HtmlControls.HtmlControl
  - System.Web.UI.HtmlControls.HtmlContainerControl
  implements: []
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableTheming
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.SkinID
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.TrackViewState
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  - System.Web.UI.HtmlControls.HtmlContainerControl.InnerHtml
  - System.Web.UI.HtmlControls.HtmlContainerControl.InnerText
  - System.Web.UI.HtmlControls.HtmlContainerControl.LoadViewState(System.Object)
  - System.Web.UI.HtmlControls.HtmlContainerControl.RenderEndTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.HtmlControls.HtmlControl.Attributes
  - System.Web.UI.HtmlControls.HtmlControl.Disabled
  - System.Web.UI.HtmlControls.HtmlControl.GetAttribute(System.String)
  - System.Web.UI.HtmlControls.HtmlControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.HtmlControls.HtmlControl.SetAttribute(System.String,System.String)
  - System.Web.UI.HtmlControls.HtmlControl.Style
  - System.Web.UI.HtmlControls.HtmlControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.HtmlControls.HtmlControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.HtmlControls.HtmlControl.TagName
  - System.Web.UI.HtmlControls.HtmlControl.ViewStateIgnoresCase
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlForm.#ctor
  id: '#ctor'
  parent: System.Web.UI.HtmlControls.HtmlForm
  langs:
  - csharp
  name: HtmlForm()
  nameWithType: HtmlForm.HtmlForm()
  fullName: System.Web.UI.HtmlControls.HtmlForm.HtmlForm()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;></xref> class."
  remarks: "Use this constructor to create and initialize a new instance of the <xref:System.Web.UI.HtmlControls.HtmlForm> class.       The following table shows the initial property value for an instance of <xref:System.Web.UI.HtmlControls.HtmlForm>.      |Property|Initial Value|   |--------------|-------------------|   |<xref:System.Web.UI.HtmlControls.HtmlControl.TagName%2A>|The &quot;form&quot; literal string.|"
  example:
  - "The following code example demonstrates how to create a new instance of the <xref:System.Web.UI.HtmlControls.HtmlForm> control and place it on the Web page.  \n  \n [!code-cs[HtmlFormCtor#1](~/add/codesnippet/csharp/m-system.web.ui.htmlcont_1_1.aspx)]\n [!code-vb[HtmlFormCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.htmlcont_1_1.aspx)]"
  syntax:
    content: public HtmlForm ();
    parameters: []
  overload: System.Web.UI.HtmlControls.HtmlForm.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlForm.Action
  id: Action
  parent: System.Web.UI.HtmlControls.HtmlForm
  langs:
  - csharp
  name: Action
  nameWithType: HtmlForm.Action
  fullName: System.Web.UI.HtmlControls.HtmlForm.Action
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "Gets or sets the action attribute of the HTML form."
  remarks: "You use the Action property when you rewrite the URL of the original request but you want to retain the original URL for the action attribute of the HTML form. Set the Action property to the value of the URL that you want to retain."
  syntax:
    content: public string Action { get; set; }
    return:
      type: System.String
      description: "The action attribute of the HTML form. The default value is <xref:System.String>."
  overload: System.Web.UI.HtmlControls.HtmlForm.Action*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlForm.ClientID
  id: ClientID
  parent: System.Web.UI.HtmlControls.HtmlForm
  langs:
  - csharp
  name: ClientID
  nameWithType: HtmlForm.ClientID
  fullName: System.Web.UI.HtmlControls.HtmlForm.ClientID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "Gets the control identifier that is generated by [!INCLUDE[vstecasp](~/add/includes/vstecasp-md.md)] for the <xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;></xref> control"
  remarks: "To prevent naming conflicts when multiple instances of a control are rendered, [!INCLUDE[vstecasp](~/add/includes/vstecasp-md.md)] automatically generates a unique ClientID value for each control on a page. For more information, see the <xref:System.Web.UI.Control.ClientID%2A?displayProperty=fullName> property."
  syntax:
    content: public override string ClientID { get; }
    return:
      type: System.String
      description: "The control identifier generated by [!INCLUDE[vstecasp](~/add/includes/vstecasp-md.md)] for the <xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;></xref> control."
  overload: System.Web.UI.HtmlControls.HtmlForm.ClientID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlForm.CreateControlCollection
  id: CreateControlCollection
  parent: System.Web.UI.HtmlControls.HtmlForm
  langs:
  - csharp
  name: CreateControlCollection()
  nameWithType: HtmlForm.CreateControlCollection()
  fullName: System.Web.UI.HtmlControls.HtmlForm.CreateControlCollection()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "Creates a new <xref href=&quot;System.Web.UI.ControlCollection&quot;></xref> collection for the <xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;></xref> control."
  syntax:
    content: protected override System.Web.UI.ControlCollection CreateControlCollection ();
    parameters: []
    return:
      type: System.Web.UI.ControlCollection
      description: "A <xref href=&quot;System.Web.UI.ControlCollection&quot;></xref> that contains the <xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;></xref> control&quot;s child server controls."
  overload: System.Web.UI.HtmlControls.HtmlForm.CreateControlCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlForm.DefaultButton
  id: DefaultButton
  parent: System.Web.UI.HtmlControls.HtmlForm
  langs:
  - csharp
  name: DefaultButton
  nameWithType: HtmlForm.DefaultButton
  fullName: System.Web.UI.HtmlControls.HtmlForm.DefaultButton
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "Gets or sets the child control of the <xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;></xref> control that causes postback when the ENTER key is pressed."
  remarks: "The DefaultButton property lets you specify that users can cause a postback by pressing ENTER in an input control in the form (such as a text box). You can specify as a default button any control that derives from the <xref:System.Web.UI.WebControls.IButtonControl> interface except the <xref:System.Web.UI.WebControls.LinkButton> control. If the control that is referenced by the DefaultButton property does not derive from <xref:System.Web.UI.WebControls.IButtonControl>, an <xref:System.InvalidOperationException> exception is thrown.       If you are using master pages and you set the DefaultButton property from a content page, use the <xref:System.Web.UI.Control.UniqueID%2A> property of the <xref:System.Web.UI.WebControls.IButtonControl> button. For more information about master pages, see [ASP.NET Master Pages](~/add/includes/ajax-current-ext-md.md).       The DefaultButton property might not cause a postback in the following scenarios:      -   Pressing ENTER when focus is outside the input controls in the form. The default postback action is not guaranteed to be triggered.      -   Pressing ENTER when focus is inside a multi-line text box. In a multi-line text box, the expected behavior is that pressing ENTER creates a new line in the text box. In some browsers, pressing ENTER inside a multi-line text box triggers a postback. In that case, if you want ENTER to create a new line instead, you can attach a JavaScript function to the input control. The script should capture the ENTER key and stop the postback. For example, you can use the <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> property collection to add client script for the `onKeyPress` event.      -   Specifying a <xref:System.Web.UI.WebControls.LinkButton> control as a default button. Only <xref:System.Web.UI.WebControls.Button> and <xref:System.Web.UI.WebControls.ImageButton> controls are supported.      -   Changing the DefaultButton property programmatically during an asynchronous postback. Asynchronous postbacks can be enabled on a page by adding one or more <xref:System.Web.UI.UpdatePanel> controls to the page. For more information, see [UpdatePanel Control Overview](~/add/includes/ajax-current-ext-md.md) and [Partial-Page Rendering Overview](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows how to set the DefaultButton property to set the default control that causes a postback.  \n  \n [!code-vb[HtmlForm.DefaultButton#1](~/add/codesnippet/visualbasic/p-system.web.ui.htmlcont_48_1.aspx)]\n [!code-cs[HtmlForm.DefaultButton#1](~/add/codesnippet/csharp/p-system.web.ui.htmlcont_48_1.aspx)]"
  syntax:
    content: public string DefaultButton { get; set; }
    return:
      type: System.String
      description: "The <xref:System.Web.UI.Control.ID*> of the button control to display as the default button when the <xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;></xref> is loaded. The default value is an empty string (&quot;&quot;)."
  overload: System.Web.UI.HtmlControls.HtmlForm.DefaultButton*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The control referenced as the default button is not of the type <xref href=&quot;System.Web.UI.WebControls.IButtonControl&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlForm.DefaultFocus
  id: DefaultFocus
  parent: System.Web.UI.HtmlControls.HtmlForm
  langs:
  - csharp
  name: DefaultFocus
  nameWithType: HtmlForm.DefaultFocus
  fullName: System.Web.UI.HtmlControls.HtmlForm.DefaultFocus
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "Gets or sets the control on the form to display as the control with input focus when the <xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;></xref> control is loaded."
  remarks: "Use the DefaultFocus property to access the control on the form to display as the control with input focus when the <xref:System.Web.UI.HtmlControls.HtmlForm> control is loaded. Controls that can be selected are displayed with a visual cue indicating that they have the focus. For example, a <xref:System.Web.UI.WebControls.TextBox> control with focus is displayed with the insertion point positioned inside of it.       The control with focus can also be set using the <xref:System.Web.UI.Control.Focus%2A> or <xref:System.Web.UI.Page.SetFocus%2A> methods. These methods have precedence over the DefaultFocus property. If either of these methods are called to set the control with focus, the value of the DefaultFocus property is ignored."
  example:
  - "The following code example demonstrates how to set the DefaultFocus property to display a specified control on a form as the control with input focus when the form loads. When `Form1` renders, notice that the insertion point is positioned in `TextBox1`, indicating that `TextBox1` is the control with focus.  \n  \n [!code-vb[HtmlForm.DefaultButton#1](~/add/codesnippet/visualbasic/p-system.web.ui.htmlcont_10_1.aspx)]\n [!code-cs[HtmlForm.DefaultButton#1](~/add/codesnippet/csharp/p-system.web.ui.htmlcont_10_1.aspx)]"
  syntax:
    content: public string DefaultFocus { get; set; }
    return:
      type: System.String
      description: "The <xref:System.Web.UI.Control.ClientID*> of the control on the form to display as the control with input focus when the <xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;></xref> is loaded. The default value is an empty string (&quot;&quot;)."
  overload: System.Web.UI.HtmlControls.HtmlForm.DefaultFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlForm.Enctype
  id: Enctype
  parent: System.Web.UI.HtmlControls.HtmlForm
  langs:
  - csharp
  name: Enctype
  nameWithType: HtmlForm.Enctype
  fullName: System.Web.UI.HtmlControls.HtmlForm.Enctype
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "Gets or sets the encoding type a browser uses when posting the form&quot;s data to the server."
  remarks: "Use the Enctype property to specify the encoding type a browser uses to post data back to the server.       The following table shows the common encoding types.      |Encoding type|Description|   |-------------------|-----------------|   |application/x-www-form-urlencoded|Form data is encoded as name/value pairs. This is the standard encoding format.|   |multipart/form-data|Form data is encoded as a message with a separate part for each control on the page.|   |text/plain|Form data is encoded in plain text, without any control or formatting characters.|       For more information on encoding types, see the [World Wide Web Consortium (W3C Web site](http://go.microsoft.com/fwlink/?linkid=37125)."
  example:
  - "The following code example demonstrates how to use the Enctype property to specify the encoding type the browser uses to send data back to the server.  \n  \n [!code-cs[HtmlForm#1](~/add/codesnippet/csharp/p-system.web.ui.htmlcont_27_1.aspx)]\n [!code-vb[HtmlForm#1](~/add/codesnippet/visualbasic/p-system.web.ui.htmlcont_27_1.aspx)]"
  syntax:
    content: public string Enctype { get; set; }
    return:
      type: System.String
      description: "A string that contains the encoding type. The default value is an empty string (&quot;&quot;), indicating that the browser&quot;s default content type is used."
  overload: System.Web.UI.HtmlControls.HtmlForm.Enctype*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlForm.Method
  id: Method
  parent: System.Web.UI.HtmlControls.HtmlForm
  langs:
  - csharp
  name: Method
  nameWithType: HtmlForm.Method
  fullName: System.Web.UI.HtmlControls.HtmlForm.Method
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "Gets or sets a value that indicates how a browser posts form data to the server for processing."
  remarks: "Use this property to specify how the browser sends form data to the server for processing. The two common methods supported by all browsers are `GET` and `POST`.      > [!CAUTION] >  You can override the default value of this property and use the `GET` method instead of `POST`. However, because `GET` requests are limited in how much data they can include, using the `GET` method can, in some cases, cause the postback and state management capabilities provided by the ASP.NET page framework to fail."
  example:
  - "The following code example demonstrates how to use the Method property to specify that form data is posted back to the server.  \n  \n [!code-cs[HtmlForm#1](~/add/codesnippet/csharp/p-system.web.ui.htmlcont_17_1.aspx)]\n [!code-vb[HtmlForm#1](~/add/codesnippet/visualbasic/p-system.web.ui.htmlcont_17_1.aspx)]"
  syntax:
    content: public string Method { get; set; }
    return:
      type: System.String
      description: "A string that indicates how a browser posts form data to the server. The default value is <xref uid=&quot;langword_csharp_POST&quot; name=&quot;POST&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.HtmlControls.HtmlForm.Method*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlForm.Name
  id: Name
  parent: System.Web.UI.HtmlControls.HtmlForm
  langs:
  - csharp
  name: Name
  nameWithType: HtmlForm.Name
  fullName: System.Web.UI.HtmlControls.HtmlForm.Name
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "Gets the identifier name for the <xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;></xref> control."
  remarks: "Use the Name property to determine the unique identifier name for an <xref:System.Web.UI.HtmlControls.HtmlForm> control. In this implementation, getting this property returns the value of the <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> property. However, setting the property does not assign a value to the property. Setting the property does not assign a value to this property because the Name property must have the same value as the <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> property.      > [!NOTE] >  The `name` attribute is not an XHTML-compliant attribute and is not rendered by ASP.NET regardless of the `xhtmlConformance` setting."
  syntax:
    content: public virtual string Name { get; set; }
    return:
      type: System.String
      description: "A string that contains the identifier name for the <xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;></xref>."
  overload: System.Web.UI.HtmlControls.HtmlForm.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.HtmlControls.HtmlForm
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: HtmlForm.OnInit(EventArgs)
  fullName: System.Web.UI.HtmlControls.HtmlForm.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "Raises the <xref href=&quot;System.Web.UI.Control.Init&quot;></xref> event for the <xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;></xref> control."
  remarks: "When notified by the OnInit method, Web server controls must perform any initialization steps that are required to create and set up an instance. In this stage of the server control&quot;s life cycle, the control&quot;s view state has yet to be populated. Additionally, you cannot access other server controls when this method is called, regardless of whether it is a child or parent to this control. Other server controls are not guaranteed to be created and ready for access.       Raising an event invokes the event handler through a delegate. For more information, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       The <xref:System.Web.UI.WebControls.GridView.OnInit%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.       The OnInit method is used primarily by control developers extending the functionality of the <xref:System.Web.UI.HtmlControls.HtmlForm> control."
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "A <xref:System.EventArgs> that contains event data."
  overload: System.Web.UI.HtmlControls.HtmlForm.OnInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlForm.OnPreRender(System.EventArgs)
  id: OnPreRender(System.EventArgs)
  parent: System.Web.UI.HtmlControls.HtmlForm
  langs:
  - csharp
  name: OnPreRender(EventArgs)
  nameWithType: HtmlForm.OnPreRender(EventArgs)
  fullName: System.Web.UI.HtmlControls.HtmlForm.OnPreRender(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "Raises the <xref href=&quot;System.Web.UI.Control.PreRender&quot;></xref> event for the <xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;></xref> control."
  remarks: "The OnPreRender method is called just prior to rendering the <xref:System.Web.UI.HtmlControls.HtmlForm> control. If the <xref:System.Web.UI.Page.SmartNavigation%2A?displayProperty=fullName> property is set to `true`, the OnPreRender method registers the smart navigation script file reference so that it gets rendered.      > [!NOTE] >  The <xref:System.Web.UI.Page.SmartNavigation%2A?displayProperty=fullName> property has been deprecated in ASP.NET version 2.0."
  syntax:
    content: protected override void OnPreRender (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Web.UI.HtmlControls.HtmlForm.OnPreRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlForm.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.HtmlControls.HtmlForm
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: HtmlForm.Render(HtmlTextWriter)
  fullName: System.Web.UI.HtmlControls.HtmlForm.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "Renders the <xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;></xref> control to the specified <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref> object."
  remarks: "The Render method renders an HTML `<iframe>` element if the <xref:System.Web.UI.Page.SmartNavigation%2A> property is set to `true`. The Render method calls the base <xref:System.Web.UI.Control.Render%2A> method.       The Render method is used primarily by control developers extending the functionality of the <xref:System.Web.UI.HtmlControls.HtmlForm> control."
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter output);
    parameters:
    - id: output
      type: System.Web.UI.HtmlTextWriter
      description: "The <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref> that receives the rendered content."
  overload: System.Web.UI.HtmlControls.HtmlForm.Render*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The <xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;></xref> control is not rendered without a reference to the <xref href=&quot;System.Web.UI.Page&quot;></xref> instance."
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)
  id: RenderAttributes(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.HtmlControls.HtmlForm
  langs:
  - csharp
  name: RenderAttributes(HtmlTextWriter)
  nameWithType: HtmlForm.RenderAttributes(HtmlTextWriter)
  fullName: System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "Renders the <xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;></xref> control&quot;s attributes to the specified <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref> object."
  remarks: "The RenderAttributes method uses the <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A> method to check the <xref:System.Web.UI.HtmlControls.HtmlForm> control&quot;s attributes to ensure that they can be rendered in the opening tag of a `<form>` HTML element.       Additionally, the RenderAttributes method renders the `method`, `action`, and `onsubmit` attributes of the <xref:System.Web.UI.HtmlControls.HtmlForm> control. If the control ID set in the <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> property does not implement the <xref:System.Web.UI.WebControls.IButtonControl> interface, an <xref:System.InvalidOperationException> exception is thrown.       The RenderAttributes method is used primarily by control developers extending the functionality of the <xref:System.Web.UI.HtmlControls.HtmlForm> control."
  syntax:
    content: protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "The <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref> that receives the rendered content."
  overload: System.Web.UI.HtmlControls.HtmlForm.RenderAttributes*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The control ID set in the <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton*> property is not of the type <xref href=&quot;System.Web.UI.WebControls.IButtonControl&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlForm.RenderChildren(System.Web.UI.HtmlTextWriter)
  id: RenderChildren(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.HtmlControls.HtmlForm
  langs:
  - csharp
  name: RenderChildren(HtmlTextWriter)
  nameWithType: HtmlForm.RenderChildren(HtmlTextWriter)
  fullName: System.Web.UI.HtmlControls.HtmlForm.RenderChildren(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "Renders the child controls of the <xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;></xref> control."
  remarks: "The RenderChildren method renders client script to ensure that the browser focus is set to the control specified in the <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> property.      > [!NOTE] >  A control specified by the <xref:System.Web.UI.Page.SetFocus%2A?displayProperty=fullName> property takes precedence over a control specified by the <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> property."
  syntax:
    content: protected override void RenderChildren (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "The <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref> that receives the rendered content."
  overload: System.Web.UI.HtmlControls.HtmlForm.RenderChildren*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The Web page has more than one server-side <xref uid=&quot;langword_csharp_&lt;form&gt;&quot; name=&quot;&lt;form&gt;&quot; href=&quot;&quot;></xref> tag."
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlForm.RenderControl(System.Web.UI.HtmlTextWriter)
  id: RenderControl(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.HtmlControls.HtmlForm
  langs:
  - csharp
  name: RenderControl(HtmlTextWriter)
  nameWithType: HtmlForm.RenderControl(HtmlTextWriter)
  fullName: System.Web.UI.HtmlControls.HtmlForm.RenderControl(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "Renders the <xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;></xref> control to the specified <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref> object."
  syntax:
    content: public override void RenderControl (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "The <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref> that receives the form control content."
  overload: System.Web.UI.HtmlControls.HtmlForm.RenderControl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls
  id: SubmitDisabledControls
  parent: System.Web.UI.HtmlControls.HtmlForm
  langs:
  - csharp
  name: SubmitDisabledControls
  nameWithType: HtmlForm.SubmitDisabledControls
  fullName: System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "Gets or sets a Boolean value indicating whether to force controls disabled on the client to submit their values, allowing them to preserve their values after the page posts back to the server."
  remarks: "Use the SubmitDisabledControls property to specify whether to force controls disabled on the client to submit their values when the page posts back. This allows the disabled controls to preserve their values after the page posts back to the server. When the SubmitDisabledControls property is set to `false`, controls on the form that have been disabled using client script will not be submitted to the server the next time the page posts back. As a result, any values stored by the disabled controls are lost. To allow the disabled controls to preserve their values after the page posts back to the server, set the SubmitDisabledControls property to `true`."
  example:
  - "The following code example demonstrates how to set the SubmitDisabledControls property on a form to `true` to cause controls disabled by client script to maintain their values after the page posts back to the server. In this example, if you set the SubmitDisabledControls property to `false` and then click the **Post back** button, the text in the HTML text box is lost and the HTML check box is no longer selected.  \n  \n [!code-cs[HtmlForm.SubmitDisabledControls#1](~/add/codesnippet/csharp/p-system.web.ui.htmlcont_28_1.aspx)]\n [!code-vb[HtmlForm.SubmitDisabledControls#1](~/add/codesnippet/visualbasic/p-system.web.ui.htmlcont_28_1.aspx)]"
  syntax:
    content: public virtual bool SubmitDisabledControls { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if controls disabled on the client are forced to submit their values; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default value is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlForm.Target
  id: Target
  parent: System.Web.UI.HtmlControls.HtmlForm
  langs:
  - csharp
  name: Target
  nameWithType: HtmlForm.Target
  fullName: System.Web.UI.HtmlControls.HtmlForm.Target
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "Gets or sets the frame or window in which to render the results of information that is posted to the server."
  remarks: "Use the Target property to specify the target window or frame that displays the results of the information that is posted to the server. Redirecting the results of the information posted to the server is an advanced task. Using this property simply to post back is not recommended.      > [!NOTE] >  The Target property renders as a `target` attribute. The `target` attribute on `form` elements is not allowed in XHTML 1.1. Therefore, if the rendered markup must conform to XHTML standards or must conform to accessibility standards, do not set the Target property. For more information, see [XHTML Standards in Visual Studio and ASP.NET](~/add/includes/ajax-current-ext-md.md) and [Accessibility in Visual Studio and ASP.NET](~/add/includes/ajax-current-ext-md.md).       The Target value must begin with a letter in the range of A to Z (case-insensitive), except for the following special values, which begin with an underscore.      |Target value|Description|   |------------------|-----------------|   |`_blank`|Renders the content in a new window without frames.|   |`_parent`|Renders the content in the immediate frameset parent.|   |`_search`|Renders the content in the search pane.|   |`_self`|Renders the content in the frame with focus.|   |`_top`|Renders the content in the full window without frames.|      > [!NOTE] >  Check your browser documentation to determine if the `_search` value is supported.  For example, Microsoft Internet Explorer 5.0 and later support the `_search` target value."
  example:
  - "The following code example demonstrates how to use the Target property to specify a new, unframed window to display the results of the information posted back to the server.  \n  \n [!code-cs[HtmlFormTarget#1](~/add/codesnippet/csharp/p-system.web.ui.htmlcont_16_1.aspx)]\n [!code-vb[HtmlFormTarget#1](~/add/codesnippet/visualbasic/p-system.web.ui.htmlcont_16_1.aspx)]"
  syntax:
    content: public string Target { get; set; }
    return:
      type: System.String
      description: "The browser window or frame that displays the results of the information posted to the server. The default is an empty string (&quot;&quot;), which refreshes the window or frame with focus."
  overload: System.Web.UI.HtmlControls.HtmlForm.Target*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlForm.UniqueID
  id: UniqueID
  parent: System.Web.UI.HtmlControls.HtmlForm
  langs:
  - csharp
  name: UniqueID
  nameWithType: HtmlForm.UniqueID
  fullName: System.Web.UI.HtmlControls.HtmlForm.UniqueID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "Gets the unique programmatic identifier assigned to the <xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;></xref> control."
  remarks: "Use the UniqueID property to get the unique programmatic identifier assigned to the <xref:System.Web.UI.HtmlControls.HtmlForm> control. This property overrides the base implementation to return a constant value when the control is contained in an <xref:System.Web.UI.INamingContainer>-implemented object other than a page, such as a custom server control. If the naming container is a page, the value of the <xref:System.Web.UI.HtmlControls.HtmlForm> control&quot;s <xref:System.Web.UI.Control.ID%2A> property is returned.       The UniqueID property and the <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> property always return the same value. This is useful when the <xref:System.Web.UI.HtmlControls.HtmlForm> control is rendered on a browser that requires the <xref:System.Web.UI.HtmlControls.HtmlForm> control&quot;s UniqueID and <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> properties to be the same. To keep these properties synchronized, the <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> property always returns the value of the UniqueID property.      > [!NOTE] >  The `name` attribute is not an XHTML-compliant attribute and by default is not rendered by ASP.NET."
  example:
  - "The following code example demonstrates how to use the UniqueID property to retrieve the unique identifier for an <xref:System.Web.UI.HtmlControls.HtmlForm> control.  \n  \n [!code-vb[HtmlForm.UniqueID#1](~/add/codesnippet/visualbasic/p-system.web.ui.htmlcont_80_1.aspx)]\n [!code-cs[HtmlForm.UniqueID#1](~/add/codesnippet/csharp/p-system.web.ui.htmlcont_80_1.aspx)]"
  syntax:
    content: public override string UniqueID { get; }
    return:
      type: System.String
      description: "The unique programmatic identifier assigned to the <xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;></xref> control."
  overload: System.Web.UI.HtmlControls.HtmlForm.UniqueID*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.HtmlControls.HtmlContainerControl
  isExternal: false
  name: System.Web.UI.HtmlControls.HtmlContainerControl
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.UI.HtmlControls.HtmlForm.#ctor
  parent: System.Web.UI.HtmlControls.HtmlForm
  isExternal: false
  name: HtmlForm()
  nameWithType: HtmlForm.HtmlForm()
  fullName: System.Web.UI.HtmlControls.HtmlForm.HtmlForm()
- uid: System.Web.UI.HtmlControls.HtmlForm.Action
  parent: System.Web.UI.HtmlControls.HtmlForm
  isExternal: false
  name: Action
  nameWithType: HtmlForm.Action
  fullName: System.Web.UI.HtmlControls.HtmlForm.Action
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.HtmlControls.HtmlForm.ClientID
  parent: System.Web.UI.HtmlControls.HtmlForm
  isExternal: false
  name: ClientID
  nameWithType: HtmlForm.ClientID
  fullName: System.Web.UI.HtmlControls.HtmlForm.ClientID
- uid: System.Web.UI.HtmlControls.HtmlForm.CreateControlCollection
  parent: System.Web.UI.HtmlControls.HtmlForm
  isExternal: false
  name: CreateControlCollection()
  nameWithType: HtmlForm.CreateControlCollection()
  fullName: System.Web.UI.HtmlControls.HtmlForm.CreateControlCollection()
- uid: System.Web.UI.ControlCollection
  parent: System.Web.UI
  isExternal: false
  name: ControlCollection
  nameWithType: ControlCollection
  fullName: System.Web.UI.ControlCollection
- uid: System.Web.UI.HtmlControls.HtmlForm.DefaultButton
  parent: System.Web.UI.HtmlControls.HtmlForm
  isExternal: false
  name: DefaultButton
  nameWithType: HtmlForm.DefaultButton
  fullName: System.Web.UI.HtmlControls.HtmlForm.DefaultButton
- uid: System.Web.UI.HtmlControls.HtmlForm.DefaultFocus
  parent: System.Web.UI.HtmlControls.HtmlForm
  isExternal: false
  name: DefaultFocus
  nameWithType: HtmlForm.DefaultFocus
  fullName: System.Web.UI.HtmlControls.HtmlForm.DefaultFocus
- uid: System.Web.UI.HtmlControls.HtmlForm.Enctype
  parent: System.Web.UI.HtmlControls.HtmlForm
  isExternal: false
  name: Enctype
  nameWithType: HtmlForm.Enctype
  fullName: System.Web.UI.HtmlControls.HtmlForm.Enctype
- uid: System.Web.UI.HtmlControls.HtmlForm.Method
  parent: System.Web.UI.HtmlControls.HtmlForm
  isExternal: false
  name: Method
  nameWithType: HtmlForm.Method
  fullName: System.Web.UI.HtmlControls.HtmlForm.Method
- uid: System.Web.UI.HtmlControls.HtmlForm.Name
  parent: System.Web.UI.HtmlControls.HtmlForm
  isExternal: false
  name: Name
  nameWithType: HtmlForm.Name
  fullName: System.Web.UI.HtmlControls.HtmlForm.Name
- uid: System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)
  parent: System.Web.UI.HtmlControls.HtmlForm
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: HtmlForm.OnInit(EventArgs)
  fullName: System.Web.UI.HtmlControls.HtmlForm.OnInit(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.HtmlControls.HtmlForm.OnPreRender(System.EventArgs)
  parent: System.Web.UI.HtmlControls.HtmlForm
  isExternal: false
  name: OnPreRender(EventArgs)
  nameWithType: HtmlForm.OnPreRender(EventArgs)
  fullName: System.Web.UI.HtmlControls.HtmlForm.OnPreRender(EventArgs)
- uid: System.Web.UI.HtmlControls.HtmlForm.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.HtmlControls.HtmlForm
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: HtmlForm.Render(HtmlTextWriter)
  fullName: System.Web.UI.HtmlControls.HtmlForm.Render(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.HtmlControls.HtmlForm
  isExternal: false
  name: RenderAttributes(HtmlTextWriter)
  nameWithType: HtmlForm.RenderAttributes(HtmlTextWriter)
  fullName: System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(HtmlTextWriter)
- uid: System.Web.UI.HtmlControls.HtmlForm.RenderChildren(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.HtmlControls.HtmlForm
  isExternal: false
  name: RenderChildren(HtmlTextWriter)
  nameWithType: HtmlForm.RenderChildren(HtmlTextWriter)
  fullName: System.Web.UI.HtmlControls.HtmlForm.RenderChildren(HtmlTextWriter)
- uid: System.Web.UI.HtmlControls.HtmlForm.RenderControl(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.HtmlControls.HtmlForm
  isExternal: false
  name: RenderControl(HtmlTextWriter)
  nameWithType: HtmlForm.RenderControl(HtmlTextWriter)
  fullName: System.Web.UI.HtmlControls.HtmlForm.RenderControl(HtmlTextWriter)
- uid: System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls
  parent: System.Web.UI.HtmlControls.HtmlForm
  isExternal: false
  name: SubmitDisabledControls
  nameWithType: HtmlForm.SubmitDisabledControls
  fullName: System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.HtmlControls.HtmlForm.Target
  parent: System.Web.UI.HtmlControls.HtmlForm
  isExternal: false
  name: Target
  nameWithType: HtmlForm.Target
  fullName: System.Web.UI.HtmlControls.HtmlForm.Target
- uid: System.Web.UI.HtmlControls.HtmlForm.UniqueID
  parent: System.Web.UI.HtmlControls.HtmlForm
  isExternal: false
  name: UniqueID
  nameWithType: HtmlForm.UniqueID
  fullName: System.Web.UI.HtmlControls.HtmlForm.UniqueID
- uid: System.Web.UI.HtmlControls.HtmlForm.#ctor*
  parent: System.Web.UI.HtmlControls.HtmlForm
  isExternal: false
  name: HtmlForm
  nameWithType: HtmlForm.HtmlForm
- uid: System.Web.UI.HtmlControls.HtmlForm.Action*
  parent: System.Web.UI.HtmlControls.HtmlForm
  isExternal: false
  name: Action
  nameWithType: HtmlForm.Action
- uid: System.Web.UI.HtmlControls.HtmlForm.ClientID*
  parent: System.Web.UI.HtmlControls.HtmlForm
  isExternal: false
  name: ClientID
  nameWithType: HtmlForm.ClientID
- uid: System.Web.UI.HtmlControls.HtmlForm.CreateControlCollection*
  parent: System.Web.UI.HtmlControls.HtmlForm
  isExternal: false
  name: CreateControlCollection
  nameWithType: HtmlForm.CreateControlCollection
- uid: System.Web.UI.HtmlControls.HtmlForm.DefaultButton*
  parent: System.Web.UI.HtmlControls.HtmlForm
  isExternal: false
  name: DefaultButton
  nameWithType: HtmlForm.DefaultButton
- uid: System.Web.UI.HtmlControls.HtmlForm.DefaultFocus*
  parent: System.Web.UI.HtmlControls.HtmlForm
  isExternal: false
  name: DefaultFocus
  nameWithType: HtmlForm.DefaultFocus
- uid: System.Web.UI.HtmlControls.HtmlForm.Enctype*
  parent: System.Web.UI.HtmlControls.HtmlForm
  isExternal: false
  name: Enctype
  nameWithType: HtmlForm.Enctype
- uid: System.Web.UI.HtmlControls.HtmlForm.Method*
  parent: System.Web.UI.HtmlControls.HtmlForm
  isExternal: false
  name: Method
  nameWithType: HtmlForm.Method
- uid: System.Web.UI.HtmlControls.HtmlForm.Name*
  parent: System.Web.UI.HtmlControls.HtmlForm
  isExternal: false
  name: Name
  nameWithType: HtmlForm.Name
- uid: System.Web.UI.HtmlControls.HtmlForm.OnInit*
  parent: System.Web.UI.HtmlControls.HtmlForm
  isExternal: false
  name: OnInit
  nameWithType: HtmlForm.OnInit
- uid: System.Web.UI.HtmlControls.HtmlForm.OnPreRender*
  parent: System.Web.UI.HtmlControls.HtmlForm
  isExternal: false
  name: OnPreRender
  nameWithType: HtmlForm.OnPreRender
- uid: System.Web.UI.HtmlControls.HtmlForm.Render*
  parent: System.Web.UI.HtmlControls.HtmlForm
  isExternal: false
  name: Render
  nameWithType: HtmlForm.Render
- uid: System.Web.UI.HtmlControls.HtmlForm.RenderAttributes*
  parent: System.Web.UI.HtmlControls.HtmlForm
  isExternal: false
  name: RenderAttributes
  nameWithType: HtmlForm.RenderAttributes
- uid: System.Web.UI.HtmlControls.HtmlForm.RenderChildren*
  parent: System.Web.UI.HtmlControls.HtmlForm
  isExternal: false
  name: RenderChildren
  nameWithType: HtmlForm.RenderChildren
- uid: System.Web.UI.HtmlControls.HtmlForm.RenderControl*
  parent: System.Web.UI.HtmlControls.HtmlForm
  isExternal: false
  name: RenderControl
  nameWithType: HtmlForm.RenderControl
- uid: System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls*
  parent: System.Web.UI.HtmlControls.HtmlForm
  isExternal: false
  name: SubmitDisabledControls
  nameWithType: HtmlForm.SubmitDisabledControls
- uid: System.Web.UI.HtmlControls.HtmlForm.Target*
  parent: System.Web.UI.HtmlControls.HtmlForm
  isExternal: false
  name: Target
  nameWithType: HtmlForm.Target
- uid: System.Web.UI.HtmlControls.HtmlForm.UniqueID*
  parent: System.Web.UI.HtmlControls.HtmlForm
  isExternal: false
  name: UniqueID
  nameWithType: HtmlForm.UniqueID
