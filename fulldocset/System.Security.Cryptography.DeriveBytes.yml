### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.DeriveBytes
  id: DeriveBytes
  children:
  - System.Security.Cryptography.DeriveBytes.#ctor
  - System.Security.Cryptography.DeriveBytes.Dispose
  - System.Security.Cryptography.DeriveBytes.Dispose(System.Boolean)
  - System.Security.Cryptography.DeriveBytes.GetBytes(System.Int32)
  - System.Security.Cryptography.DeriveBytes.Reset
  langs:
  - csharp
  name: DeriveBytes
  nameWithType: DeriveBytes
  fullName: System.Security.Cryptography.DeriveBytes
  type: Class
  summary: "Represents the abstract base class from which all classes that derive byte sequences of a specified length inherit."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class DeriveBytes : IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.DeriveBytes.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.DeriveBytes
  langs:
  - csharp
  name: DeriveBytes()
  nameWithType: DeriveBytes.DeriveBytes()
  fullName: System.Security.Cryptography.DeriveBytes.DeriveBytes()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initializes a new instance of the <xref href=&quot;System.Security.Cryptography.DeriveBytes&quot;></xref> class."
  syntax:
    content: protected DeriveBytes ();
    parameters: []
  overload: System.Security.Cryptography.DeriveBytes.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.DeriveBytes.Dispose
  id: Dispose
  parent: System.Security.Cryptography.DeriveBytes
  langs:
  - csharp
  name: Dispose()
  nameWithType: DeriveBytes.Dispose()
  fullName: System.Security.Cryptography.DeriveBytes.Dispose()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "When overridden in a derived class, releases all resources used by the current instance of the <xref href=&quot;System.Security.Cryptography.DeriveBytes&quot;></xref> class."
  remarks: "Call `Dispose` when you are finished using the <xref:System.Security.Cryptography.DeriveBytes>. The `Dispose` method leaves the <xref:System.Security.Cryptography.DeriveBytes> in an unusable state. After calling `Dispose`, you must release all references to the <xref:System.Security.Cryptography.DeriveBytes> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.DeriveBytes> was occupying.       For more information, see [Cleaning Up Unmanaged Resources](~/add/includes/ajax-current-ext-md.md) and [Implementing a Dispose Method](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] >  Always call `Dispose` before you release your last reference to the <xref:System.Security.Cryptography.DeriveBytes>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Cryptography.DeriveBytes> object&quot;s `Finalize` method."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Security.Cryptography.DeriveBytes.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.DeriveBytes.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.DeriveBytes
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DeriveBytes.Dispose(Boolean)
  fullName: System.Security.Cryptography.DeriveBytes.Dispose(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "When overridden in a derived class, releases the unmanaged resources used by the <xref href=&quot;System.Security.Cryptography.DeriveBytes&quot;></xref> class and optionally releases the managed resources."
  remarks: "This method is called by the public `Dispose()` method and the `Finalize` method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. `Finalize` invokes `Dispose` with `disposing` set to `false`.       When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.DeriveBytes> references. This method invokes the `Dispose()` method of each referenced object."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to release both managed and unmanaged resources; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to release only unmanaged resources."
  overload: System.Security.Cryptography.DeriveBytes.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.DeriveBytes.GetBytes(System.Int32)
  id: GetBytes(System.Int32)
  parent: System.Security.Cryptography.DeriveBytes
  langs:
  - csharp
  name: GetBytes(Int32)
  nameWithType: DeriveBytes.GetBytes(Int32)
  fullName: System.Security.Cryptography.DeriveBytes.GetBytes(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "When overridden in a derived class, returns pseudo-random key bytes."
  syntax:
    content: public abstract byte[] GetBytes (int cb);
    parameters:
    - id: cb
      type: System.Int32
      description: "The number of pseudo-random key bytes to generate."
    return:
      type: System.Byte[]
      description: "A byte array filled with pseudo-random key bytes."
  overload: System.Security.Cryptography.DeriveBytes.GetBytes*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.DeriveBytes.Reset
  id: Reset
  parent: System.Security.Cryptography.DeriveBytes
  langs:
  - csharp
  name: Reset()
  nameWithType: DeriveBytes.Reset()
  fullName: System.Security.Cryptography.DeriveBytes.Reset()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "When overridden in a derived class, resets the state of the operation."
  syntax:
    content: public abstract void Reset ();
    parameters: []
  overload: System.Security.Cryptography.DeriveBytes.Reset*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Cryptography.DeriveBytes.#ctor
  parent: System.Security.Cryptography.DeriveBytes
  isExternal: false
  name: DeriveBytes()
  nameWithType: DeriveBytes.DeriveBytes()
  fullName: System.Security.Cryptography.DeriveBytes.DeriveBytes()
- uid: System.Security.Cryptography.DeriveBytes.Dispose
  parent: System.Security.Cryptography.DeriveBytes
  isExternal: false
  name: Dispose()
  nameWithType: DeriveBytes.Dispose()
  fullName: System.Security.Cryptography.DeriveBytes.Dispose()
- uid: System.Security.Cryptography.DeriveBytes.Dispose(System.Boolean)
  parent: System.Security.Cryptography.DeriveBytes
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DeriveBytes.Dispose(Boolean)
  fullName: System.Security.Cryptography.DeriveBytes.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.DeriveBytes.GetBytes(System.Int32)
  parent: System.Security.Cryptography.DeriveBytes
  isExternal: false
  name: GetBytes(Int32)
  nameWithType: DeriveBytes.GetBytes(Int32)
  fullName: System.Security.Cryptography.DeriveBytes.GetBytes(Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.DeriveBytes.Reset
  parent: System.Security.Cryptography.DeriveBytes
  isExternal: false
  name: Reset()
  nameWithType: DeriveBytes.Reset()
  fullName: System.Security.Cryptography.DeriveBytes.Reset()
- uid: System.Security.Cryptography.DeriveBytes.#ctor*
  parent: System.Security.Cryptography.DeriveBytes
  isExternal: false
  name: DeriveBytes
  nameWithType: DeriveBytes.DeriveBytes
- uid: System.Security.Cryptography.DeriveBytes.Dispose*
  parent: System.Security.Cryptography.DeriveBytes
  isExternal: false
  name: Dispose
  nameWithType: DeriveBytes.Dispose
- uid: System.Security.Cryptography.DeriveBytes.GetBytes*
  parent: System.Security.Cryptography.DeriveBytes
  isExternal: false
  name: GetBytes
  nameWithType: DeriveBytes.GetBytes
- uid: System.Security.Cryptography.DeriveBytes.Reset*
  parent: System.Security.Cryptography.DeriveBytes
  isExternal: false
  name: Reset
  nameWithType: DeriveBytes.Reset
