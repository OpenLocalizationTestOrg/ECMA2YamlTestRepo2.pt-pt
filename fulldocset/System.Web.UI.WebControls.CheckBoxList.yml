### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.CheckBoxList
  id: CheckBoxList
  children:
  - System.Web.UI.WebControls.CheckBoxList.#ctor
  - System.Web.UI.WebControls.CheckBoxList.CellPadding
  - System.Web.UI.WebControls.CheckBoxList.CellSpacing
  - System.Web.UI.WebControls.CheckBoxList.CreateControlStyle
  - System.Web.UI.WebControls.CheckBoxList.FindControl(System.String,System.Int32)
  - System.Web.UI.WebControls.CheckBoxList.GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)
  - System.Web.UI.WebControls.CheckBoxList.HasFooter
  - System.Web.UI.WebControls.CheckBoxList.HasHeader
  - System.Web.UI.WebControls.CheckBoxList.HasSeparators
  - System.Web.UI.WebControls.CheckBoxList.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.UI.WebControls.CheckBoxList.OnInit(System.EventArgs)
  - System.Web.UI.WebControls.CheckBoxList.OnPreRender(System.EventArgs)
  - System.Web.UI.WebControls.CheckBoxList.RaisePostDataChangedEvent
  - System.Web.UI.WebControls.CheckBoxList.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.CheckBoxList.RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.CheckBoxList.RenderWhenDataEmpty
  - System.Web.UI.WebControls.CheckBoxList.RepeatColumns
  - System.Web.UI.WebControls.CheckBoxList.RepeatDirection
  - System.Web.UI.WebControls.CheckBoxList.RepeatedItemCount
  - System.Web.UI.WebControls.CheckBoxList.RepeatLayout
  - System.Web.UI.WebControls.CheckBoxList.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.UI.WebControls.CheckBoxList.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent
  - System.Web.UI.WebControls.CheckBoxList.System#Web#UI#WebControls#IRepeatInfoUser#GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)
  - System.Web.UI.WebControls.CheckBoxList.System#Web#UI#WebControls#IRepeatInfoUser#HasFooter
  - System.Web.UI.WebControls.CheckBoxList.System#Web#UI#WebControls#IRepeatInfoUser#HasHeader
  - System.Web.UI.WebControls.CheckBoxList.System#Web#UI#WebControls#IRepeatInfoUser#HasSeparators
  - System.Web.UI.WebControls.CheckBoxList.System#Web#UI#WebControls#IRepeatInfoUser#RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.CheckBoxList.System#Web#UI#WebControls#IRepeatInfoUser#RepeatedItemCount
  - System.Web.UI.WebControls.CheckBoxList.TextAlign
  langs:
  - csharp
  name: CheckBoxList
  nameWithType: CheckBoxList
  fullName: System.Web.UI.WebControls.CheckBoxList
  type: Class
  summary: "Creates a multi selection check box group that can be dynamically created by binding the control to a data source."
  remarks: "In this topic:      -   [Introduction](#Introduction)      -   [Specifying List Layout](#SpecifyingListLayout)      -   [Specifying List Items](#SpecifyingListItems)      -   [Accessibility](#Accessibility)      -   [Declarative Syntax](#DeclarativeSyntax)      <a name=&quot;Introduction&quot;></a>    ## Introduction    The CheckBoxList control provides a multi selection check box group that can be dynamically generated with data binding. It contains an <xref:System.Web.UI.WebControls.ListControl.Items%2A> collection with members corresponding to individual items in the list. To determine which items are checked, iterate through the collection and test the <xref:System.Web.UI.WebControls.ListItem.Selected%2A> property of each item in the list.      > [!NOTE] >  You can also use multiple <xref:System.Web.UI.WebControls.CheckBox> controls. The CheckBoxList control is easier for creating a set of check boxes using data binding, while the individual <xref:System.Web.UI.WebControls.CheckBox> control gives you greater control over layout.      <a name=&quot;SpecifyingListLayout&quot;></a>    ## Specifying List Layout    You can specify the way the list is displayed by using the <xref:System.Web.UI.WebControls.CheckBoxList.RepeatLayout%2A> and <xref:System.Web.UI.WebControls.CheckBoxList.RepeatDirection%2A> properties. For information about layout options, see the <xref:System.Web.UI.WebControls.RepeatLayout> enumeration.       By default, <xref:System.Web.UI.WebControls.CheckBoxList.RepeatDirection%2A> is set to `RepeatDirection.Vertical`. Setting this property to `RepeatDirection.Horizontal` renders the list horizontally. Some <xref:System.Web.UI.WebControls.CheckBoxList.RepeatLayout%2A> settings do not allow horizontal layout. For more information, see the <xref:System.Web.UI.WebControls.RepeatLayout> enumeration.      <a name=&quot;SpecifyingListItems&quot;></a>    ## Specifying List Items    To specify items that you want to appear in the CheckBoxList control, place a `ListItem` element for each entry between the opening and closing tags of the CheckBoxList control.       The CheckBoxList control also supports data binding. To bind the control to a data source, first create a data source, such as one of the <xref:System.Web.UI.DataSourceControl> objects, that contains the items to display in the control. Next, use the <xref:System.Web.UI.Control.DataBind%2A> method to bind the data source to the CheckBoxList control. Use the <xref:System.Web.UI.WebControls.ListControl.DataTextField%2A> and <xref:System.Web.UI.WebControls.ListControl.DataValueField%2A> properties to specify which field in the data source to bind to the `Text` and `Value` properties of each list item in the control, respectively. The CheckBoxList control will now display the information from the data source.       To determine the selected items in the CheckBoxList control, iterate through the <xref:System.Web.UI.WebControls.ListControl.Items%2A> collection and test the <xref:System.Web.UI.WebControls.ListItem.Selected%2A> property of each item in the collection.      > [!CAUTION] >  This control can be used to display user input, which might include malicious client script. Check any information that is sent from a client for executable script, SQL statements, or other code before displaying it in your application. You can use validation controls to verify user input before displaying the input text in a control. ASP.NET provides an input request validation feature to block script and HTML in user input. For more information, see [Securing Standard Controls](~/add/includes/ajax-current-ext-md.md), [How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings](~/add/includes/ajax-current-ext-md.md), and [Validating User Input in ASP.NET Web Pages](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;Accessibility&quot;></a>    ## Accessibility    For information about how to configure this control so that it generates markup that conforms to accessibility standards, see [Accessibility in Visual Studio and ASP.NET](~/add/includes/ajax-current-ext-md.md) and [ASP.NET Controls and Accessibility](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;DeclarativeSyntax&quot;></a>    ## Declarative Syntax      ```   <asp:CheckBoxList       AccessKey=&quot;string&quot;       AppendDataBoundItems=&quot;True|False&quot;       AutoPostBack=&quot;True|False&quot;       BackColor=&quot;color name|#dddddd&quot;       BorderColor=&quot;color name|#dddddd&quot;       BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|           Inset|Outset&quot;       BorderWidth=&quot;size&quot;       CausesValidation=&quot;True|False&quot;       CellPadding=&quot;integer&quot;       CellSpacing=&quot;integer&quot;       CssClass=&quot;string&quot;       DataMember=&quot;string&quot;       DataSource=&quot;string&quot;       DataSourceID=&quot;string&quot;       DataTextField=&quot;string&quot;       DataTextFormatString=&quot;string&quot;       DataValueField=&quot;string&quot;       Enabled=&quot;True|False&quot;       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       Font-Bold=&quot;True|False&quot;       Font-Italic=&quot;True|False&quot;       Font-Names=&quot;string&quot;       Font-Overline=&quot;True|False&quot;       Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|           Large|X-Large|XX-Large&quot;       Font-Strikeout=&quot;True|False&quot;       Font-Underline=&quot;True|False&quot;       ForeColor=&quot;color name|#dddddd&quot;       Height=&quot;size&quot;       ID=&quot;string&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDataBound=&quot;DataBound event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnSelectedIndexChanged=&quot;SelectedIndexChanged event handler&quot;       OnTextChanged=&quot;TextChanged event handler&quot;       OnUnload=&quot;Unload event handler&quot;       RepeatColumns=&quot;integer&quot;       RepeatDirection=&quot;Horizontal|Vertical&quot;       RepeatLayout=&quot;Table|Flow|OrderedList|UnorderedList&quot;       runat=&quot;server&quot;       SelectedIndex=&quot;integer&quot;       SelectedValue=&quot;string&quot;       SkinID=&quot;string&quot;       Style=&quot;string&quot;       TabIndex=&quot;integer&quot;       TextAlign=&quot;Left|Right&quot;       ToolTip=&quot;string&quot;       ValidationGroup=&quot;string&quot;       Visible=&quot;True|False&quot;       Width=&quot;size&quot;   >               <asp:ListItem                   Enabled=&quot;True|False&quot;                   Selected=&quot;True|False&quot;                   Text=&quot;string&quot;                   Value=&quot;string&quot;               />   </asp:CheckBoxList>   ```"
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=191890).  \n  \n The following code example demonstrates how to create a CheckBoxList control on a Web page.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[CheckBoxList#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_283_1.aspx)]\n [!code-cs[CheckBoxList#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_283_1.aspx)]"
  syntax:
    content: 'public class CheckBoxList : System.Web.UI.WebControls.ListControl, System.Web.UI.INamingContainer, System.Web.UI.IPostBackDataHandler, System.Web.UI.WebControls.IRepeatInfoUser'
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.WebControls.WebControl
  - System.Web.UI.WebControls.BaseDataBoundControl
  - System.Web.UI.WebControls.DataBoundControl
  - System.Web.UI.WebControls.ListControl
  implements:
  - System.Web.UI.INamingContainer
  - System.Web.UI.IPostBackDataHandler
  - System.Web.UI.WebControls.IRepeatInfoUser
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  - System.Web.UI.WebControls.BaseDataBoundControl.ConfirmInitState
  - System.Web.UI.WebControls.BaseDataBoundControl.DataBind
  - System.Web.UI.WebControls.BaseDataBoundControl.DataBound
  - System.Web.UI.WebControls.BaseDataBoundControl.DataSource
  - System.Web.UI.WebControls.BaseDataBoundControl.EnsureDataBound
  - System.Web.UI.WebControls.BaseDataBoundControl.Initialized
  - System.Web.UI.WebControls.BaseDataBoundControl.IsBoundUsingDataSourceID
  - System.Web.UI.WebControls.BaseDataBoundControl.IsDataBindingAutomatic
  - System.Web.UI.WebControls.BaseDataBoundControl.OnDataBound(System.EventArgs)
  - System.Web.UI.WebControls.BaseDataBoundControl.RequiresDataBinding
  - System.Web.UI.WebControls.BaseDataBoundControl.SupportsDisabledAttribute
  - System.Web.UI.WebControls.DataBoundControl.CallingDataMethods
  - System.Web.UI.WebControls.DataBoundControl.CreateDataSourceSelectArguments
  - System.Web.UI.WebControls.DataBoundControl.CreatingModelDataSource
  - System.Web.UI.WebControls.DataBoundControl.DataMember
  - System.Web.UI.WebControls.DataBoundControl.DataSourceID
  - System.Web.UI.WebControls.DataBoundControl.DataSourceObject
  - System.Web.UI.WebControls.DataBoundControl.GetData
  - System.Web.UI.WebControls.DataBoundControl.GetDataSource
  - System.Web.UI.WebControls.DataBoundControl.IsUsingModelBinders
  - System.Web.UI.WebControls.DataBoundControl.ItemType
  - System.Web.UI.WebControls.DataBoundControl.MarkAsDataBound
  - System.Web.UI.WebControls.DataBoundControl.OnCreatingModelDataSource(System.Web.UI.WebControls.CreatingModelDataSourceEventArgs)
  - System.Web.UI.WebControls.DataBoundControl.OnDataPropertyChanged
  - System.Web.UI.WebControls.DataBoundControl.OnDataSourceViewChanged(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.DataBoundControl.OnLoad(System.EventArgs)
  - System.Web.UI.WebControls.DataBoundControl.OnPagePreLoad(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.DataBoundControl.SelectArguments
  - System.Web.UI.WebControls.DataBoundControl.SelectMethod
  - System.Web.UI.WebControls.DataBoundControl.ValidateDataSource(System.Object)
  - System.Web.UI.WebControls.ListControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.ListControl.AppendDataBoundItems
  - System.Web.UI.WebControls.ListControl.AutoPostBack
  - System.Web.UI.WebControls.ListControl.CausesValidation
  - System.Web.UI.WebControls.ListControl.ClearSelection
  - System.Web.UI.WebControls.ListControl.DataTextField
  - System.Web.UI.WebControls.ListControl.DataTextFormatString
  - System.Web.UI.WebControls.ListControl.DataValueField
  - System.Web.UI.WebControls.ListControl.Items
  - System.Web.UI.WebControls.ListControl.LoadViewState(System.Object)
  - System.Web.UI.WebControls.ListControl.OnDataBinding(System.EventArgs)
  - System.Web.UI.WebControls.ListControl.OnSelectedIndexChanged(System.EventArgs)
  - System.Web.UI.WebControls.ListControl.OnTextChanged(System.EventArgs)
  - System.Web.UI.WebControls.ListControl.PerformDataBinding(System.Collections.IEnumerable)
  - System.Web.UI.WebControls.ListControl.PerformSelect
  - System.Web.UI.WebControls.ListControl.RenderContents(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.ListControl.SaveViewState
  - System.Web.UI.WebControls.ListControl.SelectedIndex
  - System.Web.UI.WebControls.ListControl.SelectedIndexChanged
  - System.Web.UI.WebControls.ListControl.SelectedItem
  - System.Web.UI.WebControls.ListControl.SelectedValue
  - System.Web.UI.WebControls.ListControl.SetPostDataSelection(System.Int32)
  - System.Web.UI.WebControls.ListControl.TagKey
  - System.Web.UI.WebControls.ListControl.Text
  - System.Web.UI.WebControls.ListControl.TextChanged
  - System.Web.UI.WebControls.ListControl.TrackViewState
  - System.Web.UI.WebControls.ListControl.ValidationGroup
  - System.Web.UI.WebControls.ListControl.VerifyMultiSelect
  - System.Web.UI.WebControls.WebControl.AccessKey
  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Attributes
  - System.Web.UI.WebControls.WebControl.BackColor
  - System.Web.UI.WebControls.WebControl.BorderColor
  - System.Web.UI.WebControls.WebControl.BorderStyle
  - System.Web.UI.WebControls.WebControl.BorderWidth
  - System.Web.UI.WebControls.WebControl.ControlStyle
  - System.Web.UI.WebControls.WebControl.ControlStyleCreated
  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  - System.Web.UI.WebControls.WebControl.CssClass
  - System.Web.UI.WebControls.WebControl.DisabledCssClass
  - System.Web.UI.WebControls.WebControl.Enabled
  - System.Web.UI.WebControls.WebControl.EnableTheming
  - System.Web.UI.WebControls.WebControl.Font
  - System.Web.UI.WebControls.WebControl.ForeColor
  - System.Web.UI.WebControls.WebControl.HasAttributes
  - System.Web.UI.WebControls.WebControl.Height
  - System.Web.UI.WebControls.WebControl.IsEnabled
  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.SkinID
  - System.Web.UI.WebControls.WebControl.Style
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.WebControls.WebControl.TabIndex
  - System.Web.UI.WebControls.WebControl.TagName
  - System.Web.UI.WebControls.WebControl.ToolTip
  - System.Web.UI.WebControls.WebControl.Width
  platform:
  - net462
- uid: System.Web.UI.WebControls.CheckBoxList.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.CheckBoxList
  langs:
  - csharp
  name: CheckBoxList()
  nameWithType: CheckBoxList.CheckBoxList()
  fullName: System.Web.UI.WebControls.CheckBoxList.CheckBoxList()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.UI.WebControls.CheckBoxList&quot;></xref> class."
  remarks: "Use this constructor to create and initialize a new instance of the <xref:System.Web.UI.WebControls.CheckBoxList> class."
  example:
  - "The following code example demonstrates how to create and initialize a new instance of the <xref:System.Web.UI.WebControls.CheckBoxList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[CheckBoxListCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_216_1.aspx)]\n [!code-vb[CheckBoxListCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_216_1.aspx)]"
  syntax:
    content: public CheckBoxList ();
    parameters: []
  overload: System.Web.UI.WebControls.CheckBoxList.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CheckBoxList.CellPadding
  id: CellPadding
  parent: System.Web.UI.WebControls.CheckBoxList
  langs:
  - csharp
  name: CellPadding
  nameWithType: CheckBoxList.CellPadding
  fullName: System.Web.UI.WebControls.CheckBoxList.CellPadding
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the distance (in pixels) between the border and contents of the cell."
  remarks: "Use this property to control the spacing between the contents of a cell and the cell&quot;s border in the <xref:System.Web.UI.WebControls.CheckBoxList> control.       The padding amount specified is added to all four sides of a cell with the height of the tallest cell and width of the widest cell in the <xref:System.Web.UI.WebControls.CheckBoxList> control. The resulting cell size is applied uniformly to all cells in the <xref:System.Web.UI.WebControls.CheckBoxList> control."
  example:
  - "The following code example demonstrates how to use the CellPadding property to specify that the cell padding for the <xref:System.Web.UI.WebControls.CheckBoxList> control is 5 pixels.  \n  \n> [!NOTE]\n>  The following code samples use the single-file code model and may not work correctly if copied directly into a code-behind file. Each code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Classic CheckBoxList.CellPadding Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_668_1.aspx)]\n [!code-vb[Classic CheckBoxList.CellPadding Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_668_1.aspx)]  \n  \n [!code-cs[CheckBoxListCellPadding#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_668_2.aspx)]\n [!code-vb[CheckBoxListCellPadding#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_668_2.aspx)]"
  syntax:
    content: public virtual int CellPadding { get; set; }
    return:
      type: System.Int32
      description: "The distance (in pixels) between the border and contents of the cell. The default is -1, which indicates this property is not set."
  overload: System.Web.UI.WebControls.CheckBoxList.CellPadding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CheckBoxList.CellSpacing
  id: CellSpacing
  parent: System.Web.UI.WebControls.CheckBoxList
  langs:
  - csharp
  name: CellSpacing
  nameWithType: CheckBoxList.CellSpacing
  fullName: System.Web.UI.WebControls.CheckBoxList.CellSpacing
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the distance (in pixels) between cells."
  remarks: "Use this property to control the spacing between individual cells in the <xref:System.Web.UI.WebControls.CheckBoxList> control. This property is applied both vertically and horizontally."
  example:
  - "The following code example demonstrates how to use the CellSpacing property to specify that the cell spacing for the <xref:System.Web.UI.WebControls.CheckBoxList> control is 5 pixels.  \n  \n> [!NOTE]\n>  The following code samples use the single-file code model and may not work correctly if copied directly into a code-behind file. Each code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Classic CheckBoxList.CellPadding Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_873_1.aspx)]\n [!code-vb[Classic CheckBoxList.CellPadding Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_873_1.aspx)]  \n  \n [!code-cs[CheckBoxListCellPadding#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_873_2.aspx)]\n [!code-vb[CheckBoxListCellPadding#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_873_2.aspx)]"
  syntax:
    content: public virtual int CellSpacing { get; set; }
    return:
      type: System.Int32
      description: "The distance (in pixels) between cells. The default is <xref uid=&quot;langword_csharp_-1&quot; name=&quot;-1&quot; href=&quot;&quot;></xref>, which indicates that this property is not set."
  overload: System.Web.UI.WebControls.CheckBoxList.CellSpacing*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CheckBoxList.CreateControlStyle
  id: CreateControlStyle
  parent: System.Web.UI.WebControls.CheckBoxList
  langs:
  - csharp
  name: CreateControlStyle()
  nameWithType: CheckBoxList.CreateControlStyle()
  fullName: System.Web.UI.WebControls.CheckBoxList.CreateControlStyle()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Creates a style object that is used internally by the <xref href=&quot;System.Web.UI.WebControls.CheckBoxList&quot;></xref> control to implement all style related properties."
  remarks: "The CreateControlStyle method is used primarily by control developers in custom controls that derive from the <xref:System.Web.UI.WebControls.CheckBoxList> class."
  example:
  - "The following code example demonstrates how to override the CreateControlStyle method in a custom server control so that it always returns a new instance of the <xref:System.Web.UI.WebControls.TableStyle> class for the <xref:System.Web.UI.WebControls.CheckBoxList> control.  \n  \n [!code-cs[CustomCheckBoxListCreateControlStyle#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_123_1.aspx)]\n [!code-vb[CustomCheckBoxListCreateControlStyle#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_123_1.aspx)]  \n[!code-cs[CustomCheckBoxListCreateControlStyle#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_123_2.cs)]\n[!code-vb[CustomCheckBoxListCreateControlStyle#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_123_2.vb)]"
  syntax:
    content: protected override System.Web.UI.WebControls.Style CreateControlStyle ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.Style
      description: "A <xref href=&quot;System.Web.UI.WebControls.Style&quot;></xref> that contains the style properties of the control."
  overload: System.Web.UI.WebControls.CheckBoxList.CreateControlStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CheckBoxList.FindControl(System.String,System.Int32)
  id: FindControl(System.String,System.Int32)
  parent: System.Web.UI.WebControls.CheckBoxList
  langs:
  - csharp
  name: FindControl(String,Int32)
  nameWithType: CheckBoxList.FindControl(String,Int32)
  fullName: System.Web.UI.WebControls.CheckBoxList.FindControl(String,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Searches the current naming container for a server control with the specified ID and path offset. The FindControl method always returns the <xref href=&quot;System.Web.UI.WebControls.CheckBoxList&quot;></xref> object."
  remarks: "The FindControl method is used primarily by control developers in custom controls that derive from the <xref:System.Web.UI.WebControls.CheckBoxList> class.       The FindControl method overrides the <xref:System.Web.UI.Control.FindControl%2A> method of the base <xref:System.Web.UI.Control> class. You should not override this version of the <xref:System.Web.UI.Control.FindControl%2A> method."
  syntax:
    content: protected override System.Web.UI.Control FindControl (string id, int pathOffset);
    parameters:
    - id: id
      type: System.String
      description: "The identifier for the control to find."
    - id: pathOffset
      type: System.Int32
      description: "The number of controls up the page control hierarchy needed to reach a naming container."
    return:
      type: System.Web.UI.Control
      description: "The current <xref href=&quot;System.Web.UI.WebControls.CheckBoxList&quot;></xref>."
  overload: System.Web.UI.WebControls.CheckBoxList.FindControl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CheckBoxList.GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)
  id: GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)
  parent: System.Web.UI.WebControls.CheckBoxList
  langs:
  - csharp
  name: GetItemStyle(ListItemType,Int32)
  nameWithType: CheckBoxList.GetItemStyle(ListItemType,Int32)
  fullName: System.Web.UI.WebControls.CheckBoxList.GetItemStyle(ListItemType,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Retrieves the style of the specified item type at the specified index in the list control."
  remarks: "The GetItemStyle method is used primarily by control developers in custom controls that derive from the <xref:System.Web.UI.WebControls.CheckBoxList> class.       The style attribute for the <xref:System.Web.UI.WebControls.CheckBoxList> control applies to all list items that are contained by the control. Use the <xref:System.Web.UI.WebControls.Style> property of the <xref:System.Web.UI.WebControls.CheckBoxList> to examine or set the style attribute for the control and its list items."
  syntax:
    content: protected virtual System.Web.UI.WebControls.Style GetItemStyle (System.Web.UI.WebControls.ListItemType itemType, int repeatIndex);
    parameters:
    - id: itemType
      type: System.Web.UI.WebControls.ListItemType
      description: "One of the <xref href=&quot;System.Web.UI.WebControls.ListItemType&quot;></xref> enumeration values."
    - id: repeatIndex
      type: System.Int32
      description: "An ordinal index that specifies the location of the item in the list control."
    return:
      type: System.Web.UI.WebControls.Style
      description: "<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, indicating that style attributes are not set on individual list items in a <xref href=&quot;System.Web.UI.WebControls.CheckBoxList&quot;></xref> control."
  overload: System.Web.UI.WebControls.CheckBoxList.GetItemStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CheckBoxList.HasFooter
  id: HasFooter
  parent: System.Web.UI.WebControls.CheckBoxList
  langs:
  - csharp
  name: HasFooter
  nameWithType: CheckBoxList.HasFooter
  fullName: System.Web.UI.WebControls.CheckBoxList.HasFooter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets a value indicating whether the <xref href=&quot;System.Web.UI.WebControls.CheckBoxList&quot;></xref> control contains a footer section."
  remarks: "The HasFooter property is used primarily by control developers in custom controls that derive from the <xref:System.Web.UI.WebControls.CheckBoxList> class. Footers are not supported when the <xref:System.Web.UI.WebControls.CheckBoxList.RepeatLayout%2A> property is set to <xref:System.Web.UI.WebControls.RepeatLayout> or <xref:System.Web.UI.WebControls.RepeatLayout>."
  syntax:
    content: protected virtual bool HasFooter { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>, indicating that a <xref href=&quot;System.Web.UI.WebControls.CheckBoxList&quot;></xref> does not contain a footer section."
  overload: System.Web.UI.WebControls.CheckBoxList.HasFooter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CheckBoxList.HasHeader
  id: HasHeader
  parent: System.Web.UI.WebControls.CheckBoxList
  langs:
  - csharp
  name: HasHeader
  nameWithType: CheckBoxList.HasHeader
  fullName: System.Web.UI.WebControls.CheckBoxList.HasHeader
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets a value indicating whether the <xref href=&quot;System.Web.UI.WebControls.CheckBoxList&quot;></xref> control contains a heading section."
  remarks: "The HasHeader property is used primarily by control developers in custom controls that derive from the <xref:System.Web.UI.WebControls.CheckBoxList> class. Headers are not supported when the <xref:System.Web.UI.WebControls.CheckBoxList.RepeatLayout%2A> property is set to <xref:System.Web.UI.WebControls.RepeatLayout> or <xref:System.Web.UI.WebControls.RepeatLayout>."
  syntax:
    content: protected virtual bool HasHeader { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>, indicating that a <xref href=&quot;System.Web.UI.WebControls.CheckBoxList&quot;></xref> does not contain a heading section."
  overload: System.Web.UI.WebControls.CheckBoxList.HasHeader*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CheckBoxList.HasSeparators
  id: HasSeparators
  parent: System.Web.UI.WebControls.CheckBoxList
  langs:
  - csharp
  name: HasSeparators
  nameWithType: CheckBoxList.HasSeparators
  fullName: System.Web.UI.WebControls.CheckBoxList.HasSeparators
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets a value indicating whether the <xref href=&quot;System.Web.UI.WebControls.CheckBoxList&quot;></xref> control contains a separator between items in the list."
  remarks: "The HasSeparators method is used primarily by control developers in custom controls that derive from the <xref:System.Web.UI.WebControls.CheckBoxList> class. Separators are not supported when the <xref:System.Web.UI.WebControls.CheckBoxList.RepeatLayout%2A> property is set to <xref:System.Web.UI.WebControls.RepeatLayout> or <xref:System.Web.UI.WebControls.RepeatLayout>."
  syntax:
    content: protected virtual bool HasSeparators { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>, indicating that a <xref href=&quot;System.Web.UI.WebControls.CheckBoxList&quot;></xref> does not contain separators."
  overload: System.Web.UI.WebControls.CheckBoxList.HasSeparators*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CheckBoxList.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  id: LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.UI.WebControls.CheckBoxList
  langs:
  - csharp
  name: LoadPostData(String,NameValueCollection)
  nameWithType: CheckBoxList.LoadPostData(String,NameValueCollection)
  fullName: System.Web.UI.WebControls.CheckBoxList.LoadPostData(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Processes the posted data for the <xref href=&quot;System.Web.UI.WebControls.CheckBoxList&quot;></xref> control."
  remarks: "The LoadPostData method is used primarily by control developers in custom controls that derive from the <xref:System.Web.UI.WebControls.CheckBoxList> class.       The LoadPostData method indicates whether the state of the <xref:System.Web.UI.WebControls.CheckBoxList> control has changed. In other words, it determines whether each list item in the control has the same <xref:System.Web.UI.WebControls.ListItem.Selected%2A> value as the last posted value. A user selecting or clearing an item in the control changes the <xref:System.Web.UI.WebControls.ListItem.Selected%2A> property value for the corresponding <xref:System.Web.UI.WebControls.ListItem> object in the <xref:System.Web.UI.WebControls.ListControl.Items%2A> collection of the <xref:System.Web.UI.WebControls.CheckBoxList> control. If the same list items are selected in the control, or if the <xref:System.Web.UI.WebControls.CheckBoxList> is disabled, LoadPostData returns `false`.       When the LoadPostData method returns `true` for a control, the page framework invokes the <xref:System.Web.UI.WebControls.CheckBoxList.RaisePostDataChangedEvent%2A> method for the control."
  syntax:
    content: protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);
    parameters:
    - id: postDataKey
      type: System.String
      description: "The key identifier for the control, used to index the <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;></xref> specified in the `postCollection` parameter."
    - id: postCollection
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;></xref> that contains value information indexed by control identifiers."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the state of the <xref href=&quot;System.Web.UI.WebControls.CheckBoxList&quot;></xref> is different from the last posting; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.CheckBoxList.LoadPostData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CheckBoxList.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.CheckBoxList
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: CheckBoxList.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.CheckBoxList.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Raises the <xref href=&quot;System.Web.UI.Control.Init&quot;></xref> event."
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An object that contains event data."
  overload: System.Web.UI.WebControls.CheckBoxList.OnInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CheckBoxList.OnPreRender(System.EventArgs)
  id: OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.CheckBoxList
  langs:
  - csharp
  name: OnPreRender(EventArgs)
  nameWithType: CheckBoxList.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.CheckBoxList.OnPreRender(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Configures the <xref href=&quot;System.Web.UI.WebControls.CheckBoxList&quot;></xref> control prior to rendering on the client."
  remarks: "The OnPreRender method is used primarily by control developers in custom controls that derive from the <xref:System.Web.UI.WebControls.CheckBoxList> class. The OnPreRender method allows derived classes to handle the <xref:System.Web.UI.Control.PreRender> event without attaching a delegate. This is the preferred technique for handling the event in a derived class.       The OnPreRender method performs any necessary prerendering steps prior to saving view state and rendering content for the <xref:System.Web.UI.WebControls.CheckBoxList>. The individual list items contained in the <xref:System.Web.UI.WebControls.CheckBoxList> control are initialized for rendering using the current <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A>, <xref:System.Web.UI.WebControls.ListControl.CausesValidation%2A>, and <xref:System.Web.UI.WebControls.ListControl.ValidationGroup%2A> values."
  example:
  - "The following code example demonstrates how to override the <xref:System.Web.UI.WebControls.CheckBoxList.CreateControlStyle%2A> method in a custom server control so that it always returns a new instance of the <xref:System.Web.UI.WebControls.TableStyle> class for the <xref:System.Web.UI.WebControls.CheckBoxList>.  \n  \n [!code-cs[CustomCheckBoxListOnPreRender#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_93_1.aspx)]\n [!code-vb[CustomCheckBoxListOnPreRender#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_93_1.aspx)]  \n[!code-cs[CustomCheckBoxListOnPreRender#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_93_2.cs)]\n[!code-vb[CustomCheckBoxListOnPreRender#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_93_2.vb)]"
  syntax:
    content: protected override void OnPreRender (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "An <xref:System.EventArgs> that contains the event data."
  overload: System.Web.UI.WebControls.CheckBoxList.OnPreRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CheckBoxList.RaisePostDataChangedEvent
  id: RaisePostDataChangedEvent
  parent: System.Web.UI.WebControls.CheckBoxList
  langs:
  - csharp
  name: RaisePostDataChangedEvent()
  nameWithType: CheckBoxList.RaisePostDataChangedEvent()
  fullName: System.Web.UI.WebControls.CheckBoxList.RaisePostDataChangedEvent()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Notifies the ASP.NET application that the state of the <xref href=&quot;System.Web.UI.WebControls.CheckBoxList&quot;></xref> control has changed."
  remarks: "The RaisePostDataChangedEvent method is used primarily by control developers in custom controls that derive from the <xref:System.Web.UI.WebControls.CheckBoxList> class.       The page framework calls the RaisePostDataChangedEvent method on a <xref:System.Web.UI.WebControls.CheckBoxList> control when the <xref:System.Web.UI.WebControls.CheckBoxList.LoadPostData%2A> method indicates that the state of the list items have changed in the <xref:System.Web.UI.WebControls.CheckBoxList> control. The RaisePostDataChangedEvent method calls the <xref:System.Web.UI.WebControls.ListControl.OnSelectedIndexChanged%2A> method to raise the <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged> event. Control developers can override the <xref:System.Web.UI.WebControls.ListControl.OnSelectedIndexChanged%2A> method to perform custom processing when the user selects or clears list items in the control.       The <xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A> method can optionally perform validation before raising the <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged> event for the control. To validate a group of controls on the page when a list item within the <xref:System.Web.UI.WebControls.CheckBoxList> is selected, set the <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> and <xref:System.Web.UI.WebControls.ListControl.CausesValidation%2A> properties to `true`, and specify the group of controls to validate in the <xref:System.Web.UI.WebControls.ListControl.ValidationGroup%2A> property."
  syntax:
    content: protected virtual void RaisePostDataChangedEvent ();
    parameters: []
  overload: System.Web.UI.WebControls.CheckBoxList.RaisePostDataChangedEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CheckBoxList.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.CheckBoxList
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: CheckBoxList.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.CheckBoxList.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Displays the <xref href=&quot;System.Web.UI.WebControls.CheckBoxList&quot;></xref> on the client."
  remarks: "The Render method is used primarily by control developers in custom controls that derive from the <xref:System.Web.UI.WebControls.CheckBoxList> class.       The Render implementation for a <xref:System.Web.UI.WebControls.CheckBoxList> control initializes a <xref:System.Web.UI.WebControls.RepeatInfo> object for the list, and calls the <xref:System.Web.UI.WebControls.RepeatInfo.RenderRepeater%2A> method, which in turn uses the <xref:System.Web.UI.WebControls.CheckBoxList.RenderItem%2A> method to render individual check box list items."
  example:
  - "The following code example demonstrates how to override the Render method in a custom server control so that the <xref:System.Web.UI.WebControls.CheckBoxList> always displays an image.  \n  \n [!code-cs[CustomCheckBoxListRender#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_34_1.aspx)]\n [!code-vb[CustomCheckBoxListRender#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_34_1.aspx)]  \n[!code-vb[CustomCheckBoxListRender#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_34_2.vb)]\n[!code-cs[CustomCheckBoxListRender#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_34_2.cs)]"
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "A <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref> that contains the output stream for rendering on the client."
  overload: System.Web.UI.WebControls.CheckBoxList.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CheckBoxList.RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)
  id: RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.CheckBoxList
  langs:
  - csharp
  name: RenderItem(ListItemType,Int32,RepeatInfo,HtmlTextWriter)
  nameWithType: CheckBoxList.RenderItem(ListItemType,Int32,RepeatInfo,HtmlTextWriter)
  fullName: System.Web.UI.WebControls.CheckBoxList.RenderItem(ListItemType,Int32,RepeatInfo,HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Renders a list item in the <xref href=&quot;System.Web.UI.WebControls.CheckBoxList&quot;></xref> control."
  remarks: "This method is used primarily by control developers in custom controls that derive from the <xref:System.Web.UI.WebControls.CheckBoxList> class.       The <xref:System.Web.UI.WebControls.CheckBoxList.Render%2A> implementation for a <xref:System.Web.UI.WebControls.CheckBoxList> control calls the <xref:System.Web.UI.WebControls.RepeatInfo.RenderRepeater%2A> method, which in turn uses the RenderItem method to render individual checkbox list items.       The RenderItem method for a <xref:System.Web.UI.WebControls.CheckBoxList> control ignores the `itemType` and `repeatInfo` parameters. The `repeatIndex` value is used to select the checkbox list item in the <xref:System.Web.UI.WebControls.ListControl.Items%2A> collection, and the selected list item is rendered to the output stream."
  syntax:
    content: protected virtual void RenderItem (System.Web.UI.WebControls.ListItemType itemType, int repeatIndex, System.Web.UI.WebControls.RepeatInfo repeatInfo, System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: itemType
      type: System.Web.UI.WebControls.ListItemType
      description: "One of the <xref href=&quot;System.Web.UI.WebControls.ListItemType&quot;></xref> enumeration values."
    - id: repeatIndex
      type: System.Int32
      description: "An ordinal index that specifies the location of the item in the list control."
    - id: repeatInfo
      type: System.Web.UI.WebControls.RepeatInfo
      description: "A <xref href=&quot;System.Web.UI.WebControls.RepeatInfo&quot;></xref> object that represents the information used to render the item in the list."
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "An <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref> object that represents the output stream to render HTML content on the client."
  overload: System.Web.UI.WebControls.CheckBoxList.RenderItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CheckBoxList.RenderWhenDataEmpty
  id: RenderWhenDataEmpty
  parent: System.Web.UI.WebControls.CheckBoxList
  langs:
  - csharp
  name: RenderWhenDataEmpty
  nameWithType: CheckBoxList.RenderWhenDataEmpty
  fullName: System.Web.UI.WebControls.CheckBoxList.RenderWhenDataEmpty
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets a value that indicates whether the control is rendered when the data source has no data or the control is not data-bound."
  syntax:
    content: public virtual bool RenderWhenDataEmpty { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the control is rendered when the data source has no data or the control is not data-bound; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.CheckBoxList.RenderWhenDataEmpty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CheckBoxList.RepeatColumns
  id: RepeatColumns
  parent: System.Web.UI.WebControls.CheckBoxList
  langs:
  - csharp
  name: RepeatColumns
  nameWithType: CheckBoxList.RepeatColumns
  fullName: System.Web.UI.WebControls.CheckBoxList.RepeatColumns
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the number of columns to display in the <xref href=&quot;System.Web.UI.WebControls.CheckBoxList&quot;></xref> control."
  remarks: "When the <xref:System.Web.UI.WebControls.CheckBoxList.RepeatLayout%2A> property is set to <xref:System.Web.UI.WebControls.RepeatLayout>, you can use this property to specify the number of columns that display in the <xref:System.Web.UI.WebControls.CheckBoxList> control. If this property is not set, the <xref:System.Web.UI.WebControls.CheckBoxList> control displays all list items in a single column."
  example:
  - "The following code example demonstrates how to use the RepeatColumns property to specify that two columns are displayed in the <xref:System.Web.UI.WebControls.CheckBoxList> control.  \n  \n> [!NOTE]\n>  The following code samples use the single-file code model and may not work correctly if copied directly into a code-behind file. Each code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Classic CheckBoxList.CellPadding Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_27_1.aspx)]\n [!code-vb[Classic CheckBoxList.CellPadding Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_27_1.aspx)]  \n  \n [!code-cs[CheckBoxListRepeatColumns#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_27_2.aspx)]\n [!code-vb[CheckBoxListRepeatColumns#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_27_2.aspx)]"
  syntax:
    content: public virtual int RepeatColumns { get; set; }
    return:
      type: System.Int32
      description: "The number of columns to display in the <xref href=&quot;System.Web.UI.WebControls.CheckBoxList&quot;></xref> control. The default is <xref uid=&quot;langword_csharp_0&quot; name=&quot;0&quot; href=&quot;&quot;></xref>, which indicates this property is not set."
  overload: System.Web.UI.WebControls.CheckBoxList.RepeatColumns*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The number of columns is set to a negative value."
  platform:
  - net462
- uid: System.Web.UI.WebControls.CheckBoxList.RepeatDirection
  id: RepeatDirection
  parent: System.Web.UI.WebControls.CheckBoxList
  langs:
  - csharp
  name: RepeatDirection
  nameWithType: CheckBoxList.RepeatDirection
  fullName: System.Web.UI.WebControls.CheckBoxList.RepeatDirection
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets a value that indicates whether the control displays vertically or horizontally."
  remarks: "Use this property to specify the display direction of the <xref:System.Web.UI.WebControls.CheckBoxList> control.      > [!NOTE] >  The number of columns that are displayed is always determined by the <xref:System.Web.UI.WebControls.CheckBoxList.RepeatColumns%2A> property.       If this property is set to `RepeatDirection.Vertical` and if the <xref:System.Web.UI.WebControls.CheckBoxList.RepeatLayout%2A> property is set to <xref:System.Web.UI.WebControls.RepeatLayout>, the first column is filled from top to bottom, then the next column, and so on until all items are rendered. For example, if the <xref:System.Web.UI.WebControls.CheckBoxList.RepeatColumns%2A> property is set to `3`, the items in the <xref:System.Web.UI.WebControls.CheckBoxList> control are displayed in three columns, as in the following table.      ||||   |-|-|-|   |1|4|7|   |2|5|8|   |3|6|9|       If this property is set to `RepeatDirection.Horizontal` and if the <xref:System.Web.UI.WebControls.CheckBoxList.RepeatLayout%2A> property is set to <xref:System.Web.UI.WebControls.RepeatLayout>, the first column is filled from top to bottom, then the next column, and so on until all items are rendered. For example, if the <xref:System.Web.UI.WebControls.CheckBoxList.RepeatColumns%2A> property is set to `3`, the items of the <xref:System.Web.UI.WebControls.CheckBoxList> control are displayed in rows of three items each, as in the following table.      ||||   |-|-|-|   |1|2|3|   |4|5|6|   |7|8|9|"
  example:
  - "The following code example demonstrates how to set the RepeatDirection property to specify that the display direction is vertical.  \n  \n> [!NOTE]\n>  The following code samples use the single-file code model and may not work correctly if copied directly into a code-behind file. Each code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Classic CheckBoxList.CellPadding Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_50_1.aspx)]\n [!code-vb[Classic CheckBoxList.CellPadding Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_50_1.aspx)]  \n  \n [!code-cs[CheckBoxListRepeatDirection#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_50_2.aspx)]\n [!code-vb[CheckBoxListRepeatDirection#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_50_2.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.RepeatDirection RepeatDirection { get; set; }
    return:
      type: System.Web.UI.WebControls.RepeatDirection
      description: "One of the <xref href=&quot;System.Web.UI.WebControls.RepeatDirection&quot;></xref> values. The default is <xref uid=&quot;langword_csharp_Vertical&quot; name=&quot;Vertical&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.CheckBoxList.RepeatDirection*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The specified display direction of the list is not one of the <xref href=&quot;System.Web.UI.WebControls.RepeatDirection&quot;></xref> values."
  platform:
  - net462
- uid: System.Web.UI.WebControls.CheckBoxList.RepeatedItemCount
  id: RepeatedItemCount
  parent: System.Web.UI.WebControls.CheckBoxList
  langs:
  - csharp
  name: RepeatedItemCount
  nameWithType: CheckBoxList.RepeatedItemCount
  fullName: System.Web.UI.WebControls.CheckBoxList.RepeatedItemCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets the number of list items in the <xref href=&quot;System.Web.UI.WebControls.CheckBoxList&quot;></xref> control."
  remarks: "The RepeatedItemCount property is used primarily by control developers in custom controls that derive from the <xref:System.Web.UI.WebControls.CheckBoxList> class.       If there are no items set in the <xref:System.Web.UI.WebControls.CheckBoxList>, the RepeatedItemCount is zero. If there are items set in the <xref:System.Web.UI.WebControls.CheckBoxList>, the RepeatedItemCount is the same as the <xref:System.Web.UI.WebControls.ListItemCollection.Count%2A> property on the <xref:System.Web.UI.WebControls.ListControl.Items%2A> collection."
  syntax:
    content: protected virtual int RepeatedItemCount { get; }
    return:
      type: System.Int32
      description: "The number of items in the <xref href=&quot;System.Web.UI.WebControls.CheckBoxList&quot;></xref>."
  overload: System.Web.UI.WebControls.CheckBoxList.RepeatedItemCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CheckBoxList.RepeatLayout
  id: RepeatLayout
  parent: System.Web.UI.WebControls.CheckBoxList
  langs:
  - csharp
  name: RepeatLayout
  nameWithType: CheckBoxList.RepeatLayout
  fullName: System.Web.UI.WebControls.CheckBoxList.RepeatLayout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets a value that specifies whether the list will be rendered by using a <xref uid=&quot;langword_csharp_table&quot; name=&quot;table&quot; href=&quot;&quot;></xref> element, a <xref uid=&quot;langword_csharp_ul&quot; name=&quot;ul&quot; href=&quot;&quot;></xref> element, an <xref uid=&quot;langword_csharp_ol&quot; name=&quot;ol&quot; href=&quot;&quot;></xref> element, or a <xref uid=&quot;langword_csharp_span&quot; name=&quot;span&quot; href=&quot;&quot;></xref> element."
  remarks: "For information about the available options, see the <xref:System.Web.UI.WebControls.RepeatLayout> enumeration.      > [!NOTE] >  Two options are new as of ASP.NET 4: <xref:System.Web.UI.WebControls.RepeatLayout> and <xref:System.Web.UI.WebControls.RepeatLayout>.       Some RepeatLayout settings do not allow horizontal layout. For more information, see the <xref:System.Web.UI.WebControls.RepeatLayout> enumeration."
  example:
  - "The following code example demonstrates how to use the RepeatLayout property to change the HTML that the <xref:System.Web.UI.WebControls.CheckBoxList> control renders.  \n  \n> [!NOTE]\n>  The following code samples use the single-file code model and may not work correctly if copied directly into a code-behind file. Each code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[CheckBoxListRepeatLayout#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_157_1.aspx)]\n [!code-vb[CheckBoxListRepeatLayout#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_157_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.RepeatLayout RepeatLayout { get; set; }
    return:
      type: System.Web.UI.WebControls.RepeatLayout
      description: "A value that specifies whether the list will be rendered by using a <xref uid=&quot;langword_csharp_table&quot; name=&quot;table&quot; href=&quot;&quot;></xref> element, a <xref uid=&quot;langword_csharp_ul&quot; name=&quot;ul&quot; href=&quot;&quot;></xref> element, an <xref uid=&quot;langword_csharp_ol&quot; name=&quot;ol&quot; href=&quot;&quot;></xref> element, or a <xref uid=&quot;langword_csharp_span&quot; name=&quot;span&quot; href=&quot;&quot;></xref> element. The default is <xref href=&quot;System.Web.UI.WebControls.RepeatLayout&quot;></xref>."
  overload: System.Web.UI.WebControls.CheckBoxList.RepeatLayout*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The specified layout is not one of the <xref href=&quot;System.Web.UI.WebControls.RepeatLayout&quot;></xref> values."
  platform:
  - net462
- uid: System.Web.UI.WebControls.CheckBoxList.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  id: System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  isEii: true
  parent: System.Web.UI.WebControls.CheckBoxList
  langs:
  - csharp
  name: System.Web.UI.IPostBackDataHandler.LoadPostData(String,NameValueCollection)
  nameWithType: CheckBoxList.System.Web.UI.IPostBackDataHandler.LoadPostData(String,NameValueCollection)
  fullName: System.Web.UI.WebControls.CheckBoxList.System.Web.UI.IPostBackDataHandler.LoadPostData(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Processes posted data for the <xref href=&quot;System.Web.UI.WebControls.CheckBoxList&quot;></xref> control."
  remarks: "Typically, you should use the <xref:System.Web.UI.WebControls.CheckBoxList.LoadPostData%2A> method to process posted data for a <xref:System.Web.UI.WebControls.CheckBoxList> object.       The IPostBackDataHandler.LoadPostData method is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.CheckBoxList> instance is cast to an <xref:System.Web.UI.IPostBackDataHandler> interface."
  syntax:
    content: bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);
    parameters:
    - id: postDataKey
      type: System.String
      description: "The key identifier for the control, used to index the `postCollection`."
    - id: postCollection
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;></xref> object that contains value information indexed by control identifiers."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the server control&quot;s state changes as a result of the postback; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.CheckBoxList.System#Web#UI#IPostBackDataHandler#LoadPostData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CheckBoxList.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent
  id: System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent
  isEii: true
  parent: System.Web.UI.WebControls.CheckBoxList
  langs:
  - csharp
  name: System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent()
  nameWithType: CheckBoxList.System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent()
  fullName: System.Web.UI.WebControls.CheckBoxList.System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Raised when posted data for a control has changed."
  remarks: "Typically, you should use the <xref:System.Web.UI.WebControls.CheckBoxList.RaisePostDataChangedEvent%2A?displayProperty=fullName> method to raise an event when the posted data for a <xref:System.Web.UI.WebControls.CheckBoxList> object changes.       The IPostBackDataHandler.RaisePostDataChangedEvent method is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.CheckBoxList> instance is cast to an <xref:System.Web.UI.IPostBackDataHandler> interface."
  syntax:
    content: void IPostBackDataHandler.RaisePostDataChangedEvent ();
    parameters: []
  overload: System.Web.UI.WebControls.CheckBoxList.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CheckBoxList.System#Web#UI#WebControls#IRepeatInfoUser#GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)
  id: System#Web#UI#WebControls#IRepeatInfoUser#GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)
  isEii: true
  parent: System.Web.UI.WebControls.CheckBoxList
  langs:
  - csharp
  name: System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(ListItemType,Int32)
  nameWithType: CheckBoxList.System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(ListItemType,Int32)
  fullName: System.Web.UI.WebControls.CheckBoxList.System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(ListItemType,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "For a description of this member, see &lt;xref:System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle%2A?displayProperty=fullName&gt;."
  remarks: "Typically, you should use the <xref:System.Web.UI.WebControls.CheckBoxList.GetItemStyle%2A?displayProperty=fullName> method to retrieve the style of an item in a <xref:System.Web.UI.WebControls.CheckBoxList> object.       The IRepeatInfoUser.GetItemStyle method is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.CheckBoxList> instance is cast to an <xref:System.Web.UI.WebControls.IRepeatInfoUser> interface."
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.IRepeatInfoUser> interface members on a custom <xref:System.Web.UI.WebControls.CheckBoxList> object.  \n  \n [!code-cs[CustomCheckBoxListIRepeatInfoUser#1](~/add/codesnippet/csharp/57f322d7-1b25-414f-93d5-_1.aspx)]\n [!code-vb[CustomCheckBoxListIRepeatInfoUser#1](~/add/codesnippet/visualbasic/57f322d7-1b25-414f-93d5-_1.aspx)]  \n[!code-vb[CustomCheckBoxListIRepeatInfoUser#2](~/add/codesnippet/visualbasic/57f322d7-1b25-414f-93d5-_2.vb)]\n[!code-cs[CustomCheckBoxListIRepeatInfoUser#2](~/add/codesnippet/csharp/57f322d7-1b25-414f-93d5-_2.cs)]"
  syntax:
    content: System.Web.UI.WebControls.Style IRepeatInfoUser.GetItemStyle (System.Web.UI.WebControls.ListItemType itemType, int repeatIndex);
    parameters:
    - id: itemType
      type: System.Web.UI.WebControls.ListItemType
      description: "One of the <xref href=&quot;System.Web.UI.WebControls.ListItemType&quot;></xref> enumeration values."
    - id: repeatIndex
      type: System.Int32
      description: "An ordinal index that specifies the location of the item in the list control."
    return:
      type: System.Web.UI.WebControls.Style
      description: "A <xref href=&quot;System.Web.UI.WebControls.Style&quot;></xref> object that represents the style of the specified item type at the specified index in the list control."
  overload: System.Web.UI.WebControls.CheckBoxList.System#Web#UI#WebControls#IRepeatInfoUser#GetItemStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CheckBoxList.System#Web#UI#WebControls#IRepeatInfoUser#HasFooter
  id: System#Web#UI#WebControls#IRepeatInfoUser#HasFooter
  isEii: true
  parent: System.Web.UI.WebControls.CheckBoxList
  langs:
  - csharp
  name: System.Web.UI.WebControls.IRepeatInfoUser.HasFooter
  nameWithType: CheckBoxList.System.Web.UI.WebControls.IRepeatInfoUser.HasFooter
  fullName: System.Web.UI.WebControls.CheckBoxList.System.Web.UI.WebControls.IRepeatInfoUser.HasFooter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets a value that indicates whether the list control contains a footer section."
  remarks: "Typically, you should use the <xref:System.Web.UI.WebControls.CheckBoxList.HasFooter%2A?displayProperty=fullName> property to determine if a <xref:System.Web.UI.WebControls.CheckBoxList> object contains a footer section.       The IRepeatInfoUser.HasFooter member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.CheckBoxList> instance is cast to an <xref:System.Web.UI.WebControls.IRepeatInfoUser> interface."
  syntax:
    content: bool System.Web.UI.WebControls.IRepeatInfoUser.HasFooter { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the list control contains a footer section; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.CheckBoxList.System#Web#UI#WebControls#IRepeatInfoUser#HasFooter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CheckBoxList.System#Web#UI#WebControls#IRepeatInfoUser#HasHeader
  id: System#Web#UI#WebControls#IRepeatInfoUser#HasHeader
  isEii: true
  parent: System.Web.UI.WebControls.CheckBoxList
  langs:
  - csharp
  name: System.Web.UI.WebControls.IRepeatInfoUser.HasHeader
  nameWithType: CheckBoxList.System.Web.UI.WebControls.IRepeatInfoUser.HasHeader
  fullName: System.Web.UI.WebControls.CheckBoxList.System.Web.UI.WebControls.IRepeatInfoUser.HasHeader
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets a value that indicates whether the list control contains a heading section."
  remarks: "Typically, you should use the <xref:System.Web.UI.WebControls.CheckBoxList.HasHeader%2A?displayProperty=fullName> property to determine a <xref:System.Web.UI.WebControls.CheckBoxList> object contains a heading section.       The IRepeatInfoUser.HasHeader member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.CheckBoxList> instance is cast to an <xref:System.Web.UI.WebControls.IRepeatInfoUser> interface."
  syntax:
    content: bool System.Web.UI.WebControls.IRepeatInfoUser.HasHeader { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the list control contains a heading section; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.CheckBoxList.System#Web#UI#WebControls#IRepeatInfoUser#HasHeader*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CheckBoxList.System#Web#UI#WebControls#IRepeatInfoUser#HasSeparators
  id: System#Web#UI#WebControls#IRepeatInfoUser#HasSeparators
  isEii: true
  parent: System.Web.UI.WebControls.CheckBoxList
  langs:
  - csharp
  name: System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators
  nameWithType: CheckBoxList.System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators
  fullName: System.Web.UI.WebControls.CheckBoxList.System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets a value that indicates whether the list control contains a separator between items in the list."
  remarks: "Typically, you should use the <xref:System.Web.UI.WebControls.CheckBoxList.HasSeparators%2A?displayProperty=fullName> property to determine whether a <xref:System.Web.UI.WebControls.CheckBoxList> object contains a separator.       The IRepeatInfoUser.HasSeparators member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.CheckBoxList> instance is cast to an <xref:System.Web.UI.WebControls.IRepeatInfoUser> interface."
  syntax:
    content: bool System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the list control contains a separator; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.CheckBoxList.System#Web#UI#WebControls#IRepeatInfoUser#HasSeparators*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CheckBoxList.System#Web#UI#WebControls#IRepeatInfoUser#RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)
  id: System#Web#UI#WebControls#IRepeatInfoUser#RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)
  isEii: true
  parent: System.Web.UI.WebControls.CheckBoxList
  langs:
  - csharp
  name: System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(ListItemType,Int32,RepeatInfo,HtmlTextWriter)
  nameWithType: CheckBoxList.System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(ListItemType,Int32,RepeatInfo,HtmlTextWriter)
  fullName: System.Web.UI.WebControls.CheckBoxList.System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(ListItemType,Int32,RepeatInfo,HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "For a description of this member, see <xref:System.Web.UI.WebControls.IRepeatInfoUser.RenderItem*>."
  remarks: "Typically, you should use the <xref:System.Web.UI.WebControls.CheckBoxList.RenderItem%2A?displayProperty=fullName> method to render items in a <xref:System.Web.UI.WebControls.CheckBoxList> object.       The IRepeatInfoUser.RenderItem method is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.CheckBoxList> instance is cast to an <xref:System.Web.UI.WebControls.IRepeatInfoUser> interface."
  example:
  - "The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.IRepeatInfoUser> interface members on a custom <xref:System.Web.UI.WebControls.CheckBoxList> object.  \n  \n [!code-cs[CustomCheckBoxListIRepeatInfoUser#1](~/add/codesnippet/csharp/e49736d7-b499-41ec-9408-_1.aspx)]\n [!code-vb[CustomCheckBoxListIRepeatInfoUser#1](~/add/codesnippet/visualbasic/e49736d7-b499-41ec-9408-_1.aspx)]  \n[!code-vb[CustomCheckBoxListIRepeatInfoUser#2](~/add/codesnippet/visualbasic/e49736d7-b499-41ec-9408-_2.vb)]\n[!code-cs[CustomCheckBoxListIRepeatInfoUser#2](~/add/codesnippet/csharp/e49736d7-b499-41ec-9408-_2.cs)]"
  syntax:
    content: void IRepeatInfoUser.RenderItem (System.Web.UI.WebControls.ListItemType itemType, int repeatIndex, System.Web.UI.WebControls.RepeatInfo repeatInfo, System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: itemType
      type: System.Web.UI.WebControls.ListItemType
      description: "One of the <xref href=&quot;System.Web.UI.WebControls.ListItemType&quot;></xref> enumeration values."
    - id: repeatIndex
      type: System.Int32
      description: "An ordinal index that specifies the location of the item in the list control."
    - id: repeatInfo
      type: System.Web.UI.WebControls.RepeatInfo
      description: "A <xref href=&quot;System.Web.UI.WebControls.RepeatInfo&quot;></xref> object that represents the information used to render the item in the list."
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "An <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref> object that represents the output stream to render HTML content on the client."
  overload: System.Web.UI.WebControls.CheckBoxList.System#Web#UI#WebControls#IRepeatInfoUser#RenderItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CheckBoxList.System#Web#UI#WebControls#IRepeatInfoUser#RepeatedItemCount
  id: System#Web#UI#WebControls#IRepeatInfoUser#RepeatedItemCount
  isEii: true
  parent: System.Web.UI.WebControls.CheckBoxList
  langs:
  - csharp
  name: System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount
  nameWithType: CheckBoxList.System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount
  fullName: System.Web.UI.WebControls.CheckBoxList.System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets the number of items in the list control."
  remarks: "Typically, you should use the <xref:System.Web.UI.WebControls.CheckBoxList.RepeatedItemCount%2A?displayProperty=fullName> property to determine the number of items in a <xref:System.Web.UI.WebControls.CheckBoxList> object.       The IRepeatInfoUser.RepeatedItemCount member is an explicit interface member implementation. It can be used only when the <xref:System.Web.UI.WebControls.CheckBoxList> instance is cast to an <xref:System.Web.UI.WebControls.IRepeatInfoUser> interface."
  syntax:
    content: int System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount { get; }
    return:
      type: System.Int32
      description: "The number of items in the list."
  overload: System.Web.UI.WebControls.CheckBoxList.System#Web#UI#WebControls#IRepeatInfoUser#RepeatedItemCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.CheckBoxList.TextAlign
  id: TextAlign
  parent: System.Web.UI.WebControls.CheckBoxList
  langs:
  - csharp
  name: TextAlign
  nameWithType: CheckBoxList.TextAlign
  fullName: System.Web.UI.WebControls.CheckBoxList.TextAlign
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the text alignment for the check boxes within the group."
  remarks: "Use this property to specify whether the text associated with the check boxes appears on the left or right of the check box. If this property is set to `TextAlign.Right`, the text is displayed to the right of the check box. If this property is set to `TextAlign.Left`, the text is displayed to the left of the check box."
  example:
  - "The following code example demonstrates how to use the TextAlign property to specify that the text associated with the check boxes appears on the right side of the <xref:System.Web.UI.WebControls.CheckBoxList> control.  \n  \n> [!NOTE]\n>  The following code samples use the single-file code model and may not work correctly if copied directly into a code-behind file. Each code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Classic CheckBoxList.CellPadding Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_667_1.aspx)]\n [!code-vb[Classic CheckBoxList.CellPadding Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_667_1.aspx)]  \n  \n [!code-cs[CheckBoxListTextAlign#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_667_2.aspx)]\n [!code-vb[CheckBoxListTextAlign#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_667_2.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.TextAlign TextAlign { get; set; }
    return:
      type: System.Web.UI.WebControls.TextAlign
      description: "One of the <xref href=&quot;System.Web.UI.WebControls.TextAlign&quot;></xref> values. The default value is <xref uid=&quot;langword_csharp_Right&quot; name=&quot;Right&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.CheckBoxList.TextAlign*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The specified label text alignment is not one of the <xref href=&quot;System.Web.UI.WebControls.TextAlign&quot;></xref> values."
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.ListControl
  isExternal: false
  name: System.Web.UI.WebControls.ListControl
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.UI.WebControls.CheckBoxList.#ctor
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: CheckBoxList()
  nameWithType: CheckBoxList.CheckBoxList()
  fullName: System.Web.UI.WebControls.CheckBoxList.CheckBoxList()
- uid: System.Web.UI.WebControls.CheckBoxList.CellPadding
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: CellPadding
  nameWithType: CheckBoxList.CellPadding
  fullName: System.Web.UI.WebControls.CheckBoxList.CellPadding
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.CheckBoxList.CellSpacing
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: CellSpacing
  nameWithType: CheckBoxList.CellSpacing
  fullName: System.Web.UI.WebControls.CheckBoxList.CellSpacing
- uid: System.Web.UI.WebControls.CheckBoxList.CreateControlStyle
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: CreateControlStyle()
  nameWithType: CheckBoxList.CreateControlStyle()
  fullName: System.Web.UI.WebControls.CheckBoxList.CreateControlStyle()
- uid: System.Web.UI.WebControls.Style
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Style
  nameWithType: Style
  fullName: System.Web.UI.WebControls.Style
- uid: System.Web.UI.WebControls.CheckBoxList.FindControl(System.String,System.Int32)
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: FindControl(String,Int32)
  nameWithType: CheckBoxList.FindControl(String,Int32)
  fullName: System.Web.UI.WebControls.CheckBoxList.FindControl(String,Int32)
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.CheckBoxList.GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: GetItemStyle(ListItemType,Int32)
  nameWithType: CheckBoxList.GetItemStyle(ListItemType,Int32)
  fullName: System.Web.UI.WebControls.CheckBoxList.GetItemStyle(ListItemType,Int32)
- uid: System.Web.UI.WebControls.ListItemType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ListItemType
  nameWithType: ListItemType
  fullName: System.Web.UI.WebControls.ListItemType
- uid: System.Web.UI.WebControls.CheckBoxList.HasFooter
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: HasFooter
  nameWithType: CheckBoxList.HasFooter
  fullName: System.Web.UI.WebControls.CheckBoxList.HasFooter
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.CheckBoxList.HasHeader
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: HasHeader
  nameWithType: CheckBoxList.HasHeader
  fullName: System.Web.UI.WebControls.CheckBoxList.HasHeader
- uid: System.Web.UI.WebControls.CheckBoxList.HasSeparators
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: HasSeparators
  nameWithType: CheckBoxList.HasSeparators
  fullName: System.Web.UI.WebControls.CheckBoxList.HasSeparators
- uid: System.Web.UI.WebControls.CheckBoxList.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: LoadPostData(String,NameValueCollection)
  nameWithType: CheckBoxList.LoadPostData(String,NameValueCollection)
  fullName: System.Web.UI.WebControls.CheckBoxList.LoadPostData(String,NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.UI.WebControls.CheckBoxList.OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: CheckBoxList.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.CheckBoxList.OnInit(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.CheckBoxList.OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: OnPreRender(EventArgs)
  nameWithType: CheckBoxList.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.CheckBoxList.OnPreRender(EventArgs)
- uid: System.Web.UI.WebControls.CheckBoxList.RaisePostDataChangedEvent
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: RaisePostDataChangedEvent()
  nameWithType: CheckBoxList.RaisePostDataChangedEvent()
  fullName: System.Web.UI.WebControls.CheckBoxList.RaisePostDataChangedEvent()
- uid: System.Web.UI.WebControls.CheckBoxList.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: CheckBoxList.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.CheckBoxList.Render(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.CheckBoxList.RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: RenderItem(ListItemType,Int32,RepeatInfo,HtmlTextWriter)
  nameWithType: CheckBoxList.RenderItem(ListItemType,Int32,RepeatInfo,HtmlTextWriter)
  fullName: System.Web.UI.WebControls.CheckBoxList.RenderItem(ListItemType,Int32,RepeatInfo,HtmlTextWriter)
- uid: System.Web.UI.WebControls.RepeatInfo
  parent: System.Web.UI.WebControls
  isExternal: false
  name: RepeatInfo
  nameWithType: RepeatInfo
  fullName: System.Web.UI.WebControls.RepeatInfo
- uid: System.Web.UI.WebControls.CheckBoxList.RenderWhenDataEmpty
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: RenderWhenDataEmpty
  nameWithType: CheckBoxList.RenderWhenDataEmpty
  fullName: System.Web.UI.WebControls.CheckBoxList.RenderWhenDataEmpty
- uid: System.Web.UI.WebControls.CheckBoxList.RepeatColumns
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: RepeatColumns
  nameWithType: CheckBoxList.RepeatColumns
  fullName: System.Web.UI.WebControls.CheckBoxList.RepeatColumns
- uid: System.Web.UI.WebControls.CheckBoxList.RepeatDirection
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: RepeatDirection
  nameWithType: CheckBoxList.RepeatDirection
  fullName: System.Web.UI.WebControls.CheckBoxList.RepeatDirection
- uid: System.Web.UI.WebControls.RepeatDirection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: RepeatDirection
  nameWithType: RepeatDirection
  fullName: System.Web.UI.WebControls.RepeatDirection
- uid: System.Web.UI.WebControls.CheckBoxList.RepeatedItemCount
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: RepeatedItemCount
  nameWithType: CheckBoxList.RepeatedItemCount
  fullName: System.Web.UI.WebControls.CheckBoxList.RepeatedItemCount
- uid: System.Web.UI.WebControls.CheckBoxList.RepeatLayout
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: RepeatLayout
  nameWithType: CheckBoxList.RepeatLayout
  fullName: System.Web.UI.WebControls.CheckBoxList.RepeatLayout
- uid: System.Web.UI.WebControls.RepeatLayout
  parent: System.Web.UI.WebControls
  isExternal: false
  name: RepeatLayout
  nameWithType: RepeatLayout
  fullName: System.Web.UI.WebControls.RepeatLayout
- uid: System.Web.UI.WebControls.CheckBoxList.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: System.Web.UI.IPostBackDataHandler.LoadPostData(String,NameValueCollection)
  nameWithType: CheckBoxList.System.Web.UI.IPostBackDataHandler.LoadPostData(String,NameValueCollection)
  fullName: System.Web.UI.WebControls.CheckBoxList.System.Web.UI.IPostBackDataHandler.LoadPostData(String,NameValueCollection)
- uid: System.Web.UI.WebControls.CheckBoxList.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent()
  nameWithType: CheckBoxList.System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent()
  fullName: System.Web.UI.WebControls.CheckBoxList.System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent()
- uid: System.Web.UI.WebControls.CheckBoxList.System#Web#UI#WebControls#IRepeatInfoUser#GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(ListItemType,Int32)
  nameWithType: CheckBoxList.System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(ListItemType,Int32)
  fullName: System.Web.UI.WebControls.CheckBoxList.System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(ListItemType,Int32)
- uid: System.Web.UI.WebControls.CheckBoxList.System#Web#UI#WebControls#IRepeatInfoUser#HasFooter
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: System.Web.UI.WebControls.IRepeatInfoUser.HasFooter
  nameWithType: CheckBoxList.System.Web.UI.WebControls.IRepeatInfoUser.HasFooter
  fullName: System.Web.UI.WebControls.CheckBoxList.System.Web.UI.WebControls.IRepeatInfoUser.HasFooter
- uid: System.Web.UI.WebControls.CheckBoxList.System#Web#UI#WebControls#IRepeatInfoUser#HasHeader
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: System.Web.UI.WebControls.IRepeatInfoUser.HasHeader
  nameWithType: CheckBoxList.System.Web.UI.WebControls.IRepeatInfoUser.HasHeader
  fullName: System.Web.UI.WebControls.CheckBoxList.System.Web.UI.WebControls.IRepeatInfoUser.HasHeader
- uid: System.Web.UI.WebControls.CheckBoxList.System#Web#UI#WebControls#IRepeatInfoUser#HasSeparators
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators
  nameWithType: CheckBoxList.System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators
  fullName: System.Web.UI.WebControls.CheckBoxList.System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators
- uid: System.Web.UI.WebControls.CheckBoxList.System#Web#UI#WebControls#IRepeatInfoUser#RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(ListItemType,Int32,RepeatInfo,HtmlTextWriter)
  nameWithType: CheckBoxList.System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(ListItemType,Int32,RepeatInfo,HtmlTextWriter)
  fullName: System.Web.UI.WebControls.CheckBoxList.System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(ListItemType,Int32,RepeatInfo,HtmlTextWriter)
- uid: System.Web.UI.WebControls.CheckBoxList.System#Web#UI#WebControls#IRepeatInfoUser#RepeatedItemCount
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount
  nameWithType: CheckBoxList.System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount
  fullName: System.Web.UI.WebControls.CheckBoxList.System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount
- uid: System.Web.UI.WebControls.CheckBoxList.TextAlign
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: TextAlign
  nameWithType: CheckBoxList.TextAlign
  fullName: System.Web.UI.WebControls.CheckBoxList.TextAlign
- uid: System.Web.UI.WebControls.TextAlign
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TextAlign
  nameWithType: TextAlign
  fullName: System.Web.UI.WebControls.TextAlign
- uid: System.Web.UI.WebControls.CheckBoxList.#ctor*
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: CheckBoxList
  nameWithType: CheckBoxList.CheckBoxList
- uid: System.Web.UI.WebControls.CheckBoxList.CellPadding*
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: CellPadding
  nameWithType: CheckBoxList.CellPadding
- uid: System.Web.UI.WebControls.CheckBoxList.CellSpacing*
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: CellSpacing
  nameWithType: CheckBoxList.CellSpacing
- uid: System.Web.UI.WebControls.CheckBoxList.CreateControlStyle*
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: CreateControlStyle
  nameWithType: CheckBoxList.CreateControlStyle
- uid: System.Web.UI.WebControls.CheckBoxList.FindControl*
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: FindControl
  nameWithType: CheckBoxList.FindControl
- uid: System.Web.UI.WebControls.CheckBoxList.GetItemStyle*
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: GetItemStyle
  nameWithType: CheckBoxList.GetItemStyle
- uid: System.Web.UI.WebControls.CheckBoxList.HasFooter*
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: HasFooter
  nameWithType: CheckBoxList.HasFooter
- uid: System.Web.UI.WebControls.CheckBoxList.HasHeader*
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: HasHeader
  nameWithType: CheckBoxList.HasHeader
- uid: System.Web.UI.WebControls.CheckBoxList.HasSeparators*
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: HasSeparators
  nameWithType: CheckBoxList.HasSeparators
- uid: System.Web.UI.WebControls.CheckBoxList.LoadPostData*
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: LoadPostData
  nameWithType: CheckBoxList.LoadPostData
- uid: System.Web.UI.WebControls.CheckBoxList.OnInit*
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: OnInit
  nameWithType: CheckBoxList.OnInit
- uid: System.Web.UI.WebControls.CheckBoxList.OnPreRender*
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: OnPreRender
  nameWithType: CheckBoxList.OnPreRender
- uid: System.Web.UI.WebControls.CheckBoxList.RaisePostDataChangedEvent*
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: RaisePostDataChangedEvent
  nameWithType: CheckBoxList.RaisePostDataChangedEvent
- uid: System.Web.UI.WebControls.CheckBoxList.Render*
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: Render
  nameWithType: CheckBoxList.Render
- uid: System.Web.UI.WebControls.CheckBoxList.RenderItem*
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: RenderItem
  nameWithType: CheckBoxList.RenderItem
- uid: System.Web.UI.WebControls.CheckBoxList.RenderWhenDataEmpty*
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: RenderWhenDataEmpty
  nameWithType: CheckBoxList.RenderWhenDataEmpty
- uid: System.Web.UI.WebControls.CheckBoxList.RepeatColumns*
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: RepeatColumns
  nameWithType: CheckBoxList.RepeatColumns
- uid: System.Web.UI.WebControls.CheckBoxList.RepeatDirection*
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: RepeatDirection
  nameWithType: CheckBoxList.RepeatDirection
- uid: System.Web.UI.WebControls.CheckBoxList.RepeatedItemCount*
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: RepeatedItemCount
  nameWithType: CheckBoxList.RepeatedItemCount
- uid: System.Web.UI.WebControls.CheckBoxList.RepeatLayout*
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: RepeatLayout
  nameWithType: CheckBoxList.RepeatLayout
- uid: System.Web.UI.WebControls.CheckBoxList.System#Web#UI#IPostBackDataHandler#LoadPostData*
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: System.Web.UI.IPostBackDataHandler.LoadPostData
  nameWithType: CheckBoxList.System.Web.UI.IPostBackDataHandler.LoadPostData
- uid: System.Web.UI.WebControls.CheckBoxList.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent*
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent
  nameWithType: CheckBoxList.System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent
- uid: System.Web.UI.WebControls.CheckBoxList.System#Web#UI#WebControls#IRepeatInfoUser#GetItemStyle*
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle
  nameWithType: CheckBoxList.System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle
- uid: System.Web.UI.WebControls.CheckBoxList.System#Web#UI#WebControls#IRepeatInfoUser#HasFooter*
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: System.Web.UI.WebControls.IRepeatInfoUser.HasFooter
  nameWithType: CheckBoxList.System.Web.UI.WebControls.IRepeatInfoUser.HasFooter
- uid: System.Web.UI.WebControls.CheckBoxList.System#Web#UI#WebControls#IRepeatInfoUser#HasHeader*
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: System.Web.UI.WebControls.IRepeatInfoUser.HasHeader
  nameWithType: CheckBoxList.System.Web.UI.WebControls.IRepeatInfoUser.HasHeader
- uid: System.Web.UI.WebControls.CheckBoxList.System#Web#UI#WebControls#IRepeatInfoUser#HasSeparators*
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators
  nameWithType: CheckBoxList.System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators
- uid: System.Web.UI.WebControls.CheckBoxList.System#Web#UI#WebControls#IRepeatInfoUser#RenderItem*
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: System.Web.UI.WebControls.IRepeatInfoUser.RenderItem
  nameWithType: CheckBoxList.System.Web.UI.WebControls.IRepeatInfoUser.RenderItem
- uid: System.Web.UI.WebControls.CheckBoxList.System#Web#UI#WebControls#IRepeatInfoUser#RepeatedItemCount*
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount
  nameWithType: CheckBoxList.System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount
- uid: System.Web.UI.WebControls.CheckBoxList.TextAlign*
  parent: System.Web.UI.WebControls.CheckBoxList
  isExternal: false
  name: TextAlign
  nameWithType: CheckBoxList.TextAlign
