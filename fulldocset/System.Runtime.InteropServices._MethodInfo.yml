### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices._MethodInfo
  id: _MethodInfo
  children:
  - System.Runtime.InteropServices._MethodInfo.Attributes
  - System.Runtime.InteropServices._MethodInfo.CallingConvention
  - System.Runtime.InteropServices._MethodInfo.DeclaringType
  - System.Runtime.InteropServices._MethodInfo.Equals(System.Object)
  - System.Runtime.InteropServices._MethodInfo.GetBaseDefinition
  - System.Runtime.InteropServices._MethodInfo.GetCustomAttributes(System.Boolean)
  - System.Runtime.InteropServices._MethodInfo.GetCustomAttributes(System.Type,System.Boolean)
  - System.Runtime.InteropServices._MethodInfo.GetHashCode
  - System.Runtime.InteropServices._MethodInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Runtime.InteropServices._MethodInfo.GetMethodImplementationFlags
  - System.Runtime.InteropServices._MethodInfo.GetParameters
  - System.Runtime.InteropServices._MethodInfo.GetType
  - System.Runtime.InteropServices._MethodInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount(System.UInt32@)
  - System.Runtime.InteropServices._MethodInfo.Invoke(System.Object,System.Object[])
  - System.Runtime.InteropServices._MethodInfo.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  - System.Runtime.InteropServices._MethodInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Runtime.InteropServices._MethodInfo.IsAbstract
  - System.Runtime.InteropServices._MethodInfo.IsAssembly
  - System.Runtime.InteropServices._MethodInfo.IsConstructor
  - System.Runtime.InteropServices._MethodInfo.IsDefined(System.Type,System.Boolean)
  - System.Runtime.InteropServices._MethodInfo.IsFamily
  - System.Runtime.InteropServices._MethodInfo.IsFamilyAndAssembly
  - System.Runtime.InteropServices._MethodInfo.IsFamilyOrAssembly
  - System.Runtime.InteropServices._MethodInfo.IsFinal
  - System.Runtime.InteropServices._MethodInfo.IsHideBySig
  - System.Runtime.InteropServices._MethodInfo.IsPrivate
  - System.Runtime.InteropServices._MethodInfo.IsPublic
  - System.Runtime.InteropServices._MethodInfo.IsSpecialName
  - System.Runtime.InteropServices._MethodInfo.IsStatic
  - System.Runtime.InteropServices._MethodInfo.IsVirtual
  - System.Runtime.InteropServices._MethodInfo.MemberType
  - System.Runtime.InteropServices._MethodInfo.MethodHandle
  - System.Runtime.InteropServices._MethodInfo.Name
  - System.Runtime.InteropServices._MethodInfo.ReflectedType
  - System.Runtime.InteropServices._MethodInfo.ReturnType
  - System.Runtime.InteropServices._MethodInfo.ReturnTypeCustomAttributes
  - System.Runtime.InteropServices._MethodInfo.ToString
  langs:
  - csharp
  name: _MethodInfo
  nameWithType: _MethodInfo
  fullName: System.Runtime.InteropServices._MethodInfo
  type: Interface
  summary: "Exposes the public members of the &lt;xref:System.Reflection.MethodInfo?displayProperty=fullName&gt; class to unmanaged code."
  remarks: "This interface is for access to managed classes from unmanaged code and should not be called from managed code.       This interface preserves the vtable order of the <xref:System.Reflection.MethodInfo?displayProperty=fullName> class members that can be accessed by unmanaged COM objects."
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("FFCC1B5D-ECB8-38DD-9B01-3DC8ABC2AA5F")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      [System.Runtime.InteropServices.TypeLibImportClass(typeof(System.Reflection.MethodInfo))]

      public interface _MethodInfo
  implements: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.Attributes
  id: Attributes
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: Attributes
  nameWithType: _MethodInfo.Attributes
  fullName: System.Runtime.InteropServices._MethodInfo.Attributes
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.Attributes*> property."
  remarks: "This property is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.MethodBase.Attributes%2A> property gets the attributes associated with this method."
  syntax:
    content: public System.Reflection.MethodAttributes Attributes { get; }
    return:
      type: System.Reflection.MethodAttributes
      description: "One of the <xref:System.Reflection.MethodAttributes> values."
  overload: System.Runtime.InteropServices._MethodInfo.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.CallingConvention
  id: CallingConvention
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: CallingConvention
  nameWithType: _MethodInfo.CallingConvention
  fullName: System.Runtime.InteropServices._MethodInfo.CallingConvention
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.CallingConvention*> property."
  remarks: "This property is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.MethodBase.CallingConvention%2A> property gets a value indicating the calling conventions for this method."
  syntax:
    content: public System.Reflection.CallingConventions CallingConvention { get; }
    return:
      type: System.Reflection.CallingConventions
      description: "One of the <xref:System.Reflection.CallingConventions> values."
  overload: System.Runtime.InteropServices._MethodInfo.CallingConvention*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.DeclaringType
  id: DeclaringType
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: DeclaringType
  nameWithType: _MethodInfo.DeclaringType
  fullName: System.Runtime.InteropServices._MethodInfo.DeclaringType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.DeclaringType*> property."
  remarks: "This property is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.MemberInfo.DeclaringType%2A> property gets the class that declares this member."
  syntax:
    content: public Type DeclaringType { get; }
    return:
      type: System.Type
      description: "The <xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;></xref> object for the class that declares this member."
  overload: System.Runtime.InteropServices._MethodInfo.DeclaringType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: _MethodInfo.Equals(Object)
  fullName: System.Runtime.InteropServices._MethodInfo.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the <xref:System.Object.Equals*> method."
  remarks: "This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Object.Equals%2A> method determines whether the specified <xref:System.Object> is equal to the current <xref:System.Object>."
  syntax:
    content: public bool Equals (object other);
    parameters:
    - id: other
      type: System.Object
      description: "The <xref:System.Object> to compare with the current <xref:System.Object>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the specified <xref:System.Object> is equal to the current <xref:System.Object>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._MethodInfo.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.GetBaseDefinition
  id: GetBaseDefinition
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: GetBaseDefinition()
  nameWithType: _MethodInfo.GetBaseDefinition()
  fullName: System.Runtime.InteropServices._MethodInfo.GetBaseDefinition()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the <xref:System.Reflection.MethodInfo.GetBaseDefinition*> method."
  remarks: "This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.MethodInfo.GetBaseDefinition%2A> method returns the <xref:System.Reflection.MethodInfo> object for the method on the direct or indirect base class in which the method represented by this instance was first declared."
  syntax:
    content: public System.Reflection.MethodInfo GetBaseDefinition ();
    parameters: []
    return:
      type: System.Reflection.MethodInfo
      description: "A <xref:System.Reflection.MethodInfo> object for the first implementation of this method."
  overload: System.Runtime.InteropServices._MethodInfo.GetBaseDefinition*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.GetCustomAttributes(System.Boolean)
  id: GetCustomAttributes(System.Boolean)
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: GetCustomAttributes(Boolean)
  nameWithType: _MethodInfo.GetCustomAttributes(Boolean)
  fullName: System.Runtime.InteropServices._MethodInfo.GetCustomAttributes(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.GetCustomAttributes*> method."
  remarks: "This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method returns an array containing all the custom attributes."
  syntax:
    content: public object[] GetCustomAttributes (bool inherit);
    parameters:
    - id: inherit
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to search this member&quot;s inheritance chain to find the attributes; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Object[]
      description: "An array that contains all the custom attributes, or an array with zero (0) elements if no attributes are defined."
  overload: System.Runtime.InteropServices._MethodInfo.GetCustomAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.GetCustomAttributes(System.Type,System.Boolean)
  id: GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: _MethodInfo.GetCustomAttributes(Type,Boolean)
  fullName: System.Runtime.InteropServices._MethodInfo.GetCustomAttributes(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.GetCustomAttributes*> method."
  remarks: "This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes%2A> method returns an array of custom attributes identified by <xref:System.Type>."
  syntax:
    content: public object[] GetCustomAttributes (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: "The type of attribute to search for. Only attributes that are assignable to this type are returned."
    - id: inherit
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to search this member&quot;s inheritance chain to find the attributes; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Object[]
      description: "An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied."
  overload: System.Runtime.InteropServices._MethodInfo.GetCustomAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.GetHashCode
  id: GetHashCode
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: _MethodInfo.GetHashCode()
  fullName: System.Runtime.InteropServices._MethodInfo.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the <xref:System.Object.GetHashCode*> method."
  remarks: "This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Object.GetHashCode%2A> method serves as a hash function for a particular type. <xref:System.Object.GetHashCode%2A> is suitable for use in hashing algorithms and data structures such as a hash table."
  syntax:
    content: public int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "The hash code for the current instance."
  overload: System.Runtime.InteropServices._MethodInfo.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  id: GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: _MethodInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._MethodInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Maps a set of names to a corresponding set of dispatch identifiers."
  remarks: "This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library."
  syntax:
    content: public void GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);
    parameters:
    - id: riid
      type: System.Guid
      description: "Reserved for future use. Must be IID_NULL."
    - id: rgszNames
      type: System.IntPtr
      description: "An array of names to be mapped."
    - id: cNames
      type: System.UInt32
      description: "The count of the names to be mapped."
    - id: lcid
      type: System.UInt32
      description: "The locale context in which to interpret the names."
    - id: rgDispId
      type: System.IntPtr
      description: "An array allocated by the caller that receives the identifiers corresponding to the names."
  overload: System.Runtime.InteropServices._MethodInfo.GetIDsOfNames*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.GetMethodImplementationFlags
  id: GetMethodImplementationFlags
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: GetMethodImplementationFlags()
  nameWithType: _MethodInfo.GetMethodImplementationFlags()
  fullName: System.Runtime.InteropServices._MethodInfo.GetMethodImplementationFlags()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.GetMethodImplementationFlags*> method."
  remarks: "This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.MethodBase.GetMethodImplementationFlags%2A> member returns the <xref:System.Reflection.MethodImplAttributes> flags."
  syntax:
    content: public System.Reflection.MethodImplAttributes GetMethodImplementationFlags ();
    parameters: []
    return:
      type: System.Reflection.MethodImplAttributes
      description: "One of the <xref:System.Reflection.MethodImplAttributes> values."
  overload: System.Runtime.InteropServices._MethodInfo.GetMethodImplementationFlags*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.GetParameters
  id: GetParameters
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: GetParameters()
  nameWithType: _MethodInfo.GetParameters()
  fullName: System.Runtime.InteropServices._MethodInfo.GetParameters()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.GetParameters*> method."
  remarks: "This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.MethodBase.GetParameters%2A> method gets the parameters of the specified method or constructor."
  syntax:
    content: public System.Reflection.ParameterInfo[] GetParameters ();
    parameters: []
    return:
      type: System.Reflection.ParameterInfo[]
      description: "An array of type <xref:System.Reflection.ParameterInfo> containing information that matches the signature of the method (or constructor) reflected by this instance."
  overload: System.Runtime.InteropServices._MethodInfo.GetParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.GetType
  id: GetType
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: GetType()
  nameWithType: _MethodInfo.GetType()
  fullName: System.Runtime.InteropServices._MethodInfo.GetType()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the <xref:System.Type.GetType*> method."
  remarks: "This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Type.GetType%2A> method gets the type of the current instance."
  syntax:
    content: public Type GetType ();
    parameters: []
    return:
      type: System.Type
      description: "A <xref:System.Type> object."
  overload: System.Runtime.InteropServices._MethodInfo.GetType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  id: GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: _MethodInfo.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._MethodInfo.GetTypeInfo(UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Retrieves the type information for an object, which can be used to get the type information for an interface."
  remarks: "This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library."
  syntax:
    content: public void GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);
    parameters:
    - id: iTInfo
      type: System.UInt32
      description: "The type information to return."
    - id: lcid
      type: System.UInt32
      description: "The locale identifier for the type information."
    - id: ppTInfo
      type: System.IntPtr
      description: "A pointer to the requested type information object."
  overload: System.Runtime.InteropServices._MethodInfo.GetTypeInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount(System.UInt32@)
  id: GetTypeInfoCount(System.UInt32@)
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: GetTypeInfoCount(UInt32)
  nameWithType: _MethodInfo.GetTypeInfoCount(UInt32)
  fullName: System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount(UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Retrieves the number of type information interfaces that an object provides (either 0 or 1)."
  remarks: "This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library."
  syntax:
    content: public void GetTypeInfoCount (out uint pcTInfo);
    parameters:
    - id: pcTInfo
      type: System.UInt32
      description: "When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object. This parameter is passed uninitialized."
  overload: System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.Invoke(System.Object,System.Object[])
  id: Invoke(System.Object,System.Object[])
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: Invoke(Object,Object[])
  nameWithType: _MethodInfo.Invoke(Object,Object[])
  fullName: System.Runtime.InteropServices._MethodInfo.Invoke(Object,Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.Invoke*> method."
  remarks: "The <xref:System.Reflection.MethodBase.Invoke%2A> method invokes the method or constructor represented by this object, using the specified parameters."
  syntax:
    content: public object Invoke (object obj, object[] parameters);
    parameters:
    - id: obj
      type: System.Object
      description: "The instance that created this method."
    - id: parameters
      type: System.Object[]
      description: "An argument list for the invoked method or constructor. This is an array of objects with the same number, order, and type as the parameters of the method or constructor to be invoked. If there are no parameters, `parameters` should be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       If the method or constructor represented by this instance takes a <xref uid=&quot;langword_csharp_ref&quot; name=&quot;ref&quot; href=&quot;&quot;></xref> parameter (<xref uid=&quot;langword_csharp_ByRef&quot; name=&quot;ByRef&quot; href=&quot;&quot;></xref> in Visual Basic), no special attribute is required for that parameter to invoke the method or constructor using this function. Any object in this array that is not explicitly initialized with a value will contain the default value for that object type. For reference type elements, this value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>. For value type elements, this value is 0, 0.0, or <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>, depending on the specific element type."
    return:
      type: System.Object
      description: "An instance of the class associated with the constructor."
  overload: System.Runtime.InteropServices._MethodInfo.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  id: Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)
  nameWithType: _MethodInfo.Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)
  fullName: System.Runtime.InteropServices._MethodInfo.Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.Invoke*> method."
  remarks: "This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.MethodBase.Invoke%2A> method invokes the constructor reflected by this <xref:System.Reflection.ConstructorInfo> object with the specified arguments, under the constraints of the specified <xref:System.Reflection.Binder> object."
  syntax:
    content: public object Invoke (object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture);
    parameters:
    - id: obj
      type: System.Object
      description: "The instance that created this method."
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: "One of the <xref uid=&quot;langword_csharp_BindingFlags&quot; name=&quot;BindingFlags&quot; href=&quot;&quot;></xref> values that specifies the type of binding."
    - id: binder
      type: System.Reflection.Binder
      description: "A <xref uid=&quot;langword_csharp_Binder&quot; name=&quot;Binder&quot; href=&quot;&quot;></xref> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection. If `binder` is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, then <xref uid=&quot;langword_csharp_Binder.DefaultBinding&quot; name=&quot;Binder.DefaultBinding&quot; href=&quot;&quot;></xref> is used."
    - id: parameters
      type: System.Object[]
      description: "An array of type <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;></xref> used to match the number, order, and type of the parameters for this constructor, under the constraints of `binder`. If this constructor does not require parameters, pass an array with zero elements, as in `Object[] parameters = new Object[0]`. Any object in this array that is not explicitly initialized with a value will contain the default value for that object type. For reference type elements, this value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>. For value type elements, this value is 0, 0.0, or <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>, depending on the specific element type."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo> object used to govern the coercion of types. If this is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, the <xref:System.Globalization.CultureInfo> for the current thread is used."
    return:
      type: System.Object
      description: "An instance of the class associated with the constructor."
  overload: System.Runtime.InteropServices._MethodInfo.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  id: Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: _MethodInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Runtime.InteropServices._MethodInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides access to properties and methods exposed by an object."
  remarks: "This method is for access to managed classes from unmanaged code and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library."
  syntax:
    content: public void Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);
    parameters:
    - id: dispIdMember
      type: System.UInt32
      description: "An identifier for the member."
    - id: riid
      type: System.Guid
      description: "Reserved for future use. Must be IID_NULL."
    - id: lcid
      type: System.UInt32
      description: "The locale context in which to interpret arguments."
    - id: wFlags
      type: System.Int16
      description: "Flags describing the context of the call."
    - id: pDispParams
      type: System.IntPtr
      description: "A pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays."
    - id: pVarResult
      type: System.IntPtr
      description: "A pointer to the location where the result will be stored."
    - id: pExcepInfo
      type: System.IntPtr
      description: "A pointer to a structure that contains exception information."
    - id: puArgErr
      type: System.IntPtr
      description: "The index of the first argument that has an error."
  overload: System.Runtime.InteropServices._MethodInfo.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.IsAbstract
  id: IsAbstract
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: IsAbstract
  nameWithType: _MethodInfo.IsAbstract
  fullName: System.Runtime.InteropServices._MethodInfo.IsAbstract
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsAbstract*> property."
  remarks: "This property is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.MethodBase.IsAbstract%2A> property gets a value indicating whether the method is abstract."
  syntax:
    content: public bool IsAbstract { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the method is abstract; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._MethodInfo.IsAbstract*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.IsAssembly
  id: IsAssembly
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: IsAssembly
  nameWithType: _MethodInfo.IsAssembly
  fullName: System.Runtime.InteropServices._MethodInfo.IsAssembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsAssembly*> property."
  remarks: "This property is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.MethodBase.IsAssembly%2A> property gets a value indicating whether this method can be called by other classes in the same assembly"
  syntax:
    content: public bool IsAssembly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if this method can be called by other classes in the same assembly; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._MethodInfo.IsAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.IsConstructor
  id: IsConstructor
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: IsConstructor
  nameWithType: _MethodInfo.IsConstructor
  fullName: System.Runtime.InteropServices._MethodInfo.IsConstructor
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsConstructor*> property."
  remarks: "This property is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.MethodBase.IsConstructor%2A> property gets a value indicating whether the method is a constructor."
  syntax:
    content: public bool IsConstructor { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if this method is a constructor; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._MethodInfo.IsConstructor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.IsDefined(System.Type,System.Boolean)
  id: IsDefined(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: IsDefined(Type,Boolean)
  nameWithType: _MethodInfo.IsDefined(Type,Boolean)
  fullName: System.Runtime.InteropServices._MethodInfo.IsDefined(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.IsDefined*> method."
  remarks: "This method is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.MemberInfo.IsDefined%2A> member indicates whether one or more instances of the `attributeType` parameter are applied to this member."
  syntax:
    content: public bool IsDefined (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: "The <xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;></xref> object to which the custom attributes are applied."
    - id: inherit
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to search this member&quot;s inheritance chain to find the attributes; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if one or more instance of the <code>attributeType</code> parameter is applied to this member; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._MethodInfo.IsDefined*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.IsFamily
  id: IsFamily
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: IsFamily
  nameWithType: _MethodInfo.IsFamily
  fullName: System.Runtime.InteropServices._MethodInfo.IsFamily
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsFamily*> property."
  remarks: "This property is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.MethodBase.IsFamily%2A> property gets a value indicating whether access to this method is restricted to members of the class and members of its derived classes."
  syntax:
    content: public bool IsFamily { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if access to the class is restricted to members of the class itself and to members of its derived classes; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._MethodInfo.IsFamily*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.IsFamilyAndAssembly
  id: IsFamilyAndAssembly
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: IsFamilyAndAssembly
  nameWithType: _MethodInfo.IsFamilyAndAssembly
  fullName: System.Runtime.InteropServices._MethodInfo.IsFamilyAndAssembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsFamilyAndAssembly*> property."
  remarks: "This property is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.MethodBase.IsFamilyAndAssembly%2A> property gets a value indicating whether this method can be called by members of the class itself and derived classes if they are in the same assembly"
  syntax:
    content: public bool IsFamilyAndAssembly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if access to this method is restricted to members of the class itself and to members of derived classes that are in the same assembly; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._MethodInfo.IsFamilyAndAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.IsFamilyOrAssembly
  id: IsFamilyOrAssembly
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: IsFamilyOrAssembly
  nameWithType: _MethodInfo.IsFamilyOrAssembly
  fullName: System.Runtime.InteropServices._MethodInfo.IsFamilyOrAssembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsFamilyOrAssembly*> property."
  remarks: "This property is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.MethodBase.IsFamilyOrAssembly%2A> property gets a value indicating whether this method can be called by derived classes, wherever they are, and by all classes in the same assembly."
  syntax:
    content: public bool IsFamilyOrAssembly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if access to this method is restricted to members of the class itself, members of derived classes wherever they are, and members of other classes in the same assembly; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._MethodInfo.IsFamilyOrAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.IsFinal
  id: IsFinal
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: IsFinal
  nameWithType: _MethodInfo.IsFinal
  fullName: System.Runtime.InteropServices._MethodInfo.IsFinal
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsFinal*> property."
  remarks: "This property is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.MethodBase.IsFinal%2A> property gets a value indicating whether this method is `final`."
  syntax:
    content: public bool IsFinal { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if this method is <xref uid=&quot;langword_csharp_final&quot; name=&quot;final&quot; href=&quot;&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._MethodInfo.IsFinal*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.IsHideBySig
  id: IsHideBySig
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: IsHideBySig
  nameWithType: _MethodInfo.IsHideBySig
  fullName: System.Runtime.InteropServices._MethodInfo.IsHideBySig
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsHideBySig*> property."
  remarks: "This property is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.MethodBase.IsHideBySig%2A> property gets a value indicating whether only a member of the same name with exactly the same signature is hidden in the derived class."
  syntax:
    content: public bool IsHideBySig { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the member is hidden by signature; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._MethodInfo.IsHideBySig*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.IsPrivate
  id: IsPrivate
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: IsPrivate
  nameWithType: _MethodInfo.IsPrivate
  fullName: System.Runtime.InteropServices._MethodInfo.IsPrivate
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsPrivate*> property."
  remarks: "This property is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.MethodBase.IsPrivate%2A> property gets a value indicating whether this member is private."
  syntax:
    content: public bool IsPrivate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if access to this method is restricted to other members of the class itself; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._MethodInfo.IsPrivate*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.IsPublic
  id: IsPublic
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: IsPublic
  nameWithType: _MethodInfo.IsPublic
  fullName: System.Runtime.InteropServices._MethodInfo.IsPublic
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsPublic*> property."
  remarks: "This property is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.MethodBase.IsPublic%2A> property gets a value indicating whether this method is public."
  syntax:
    content: public bool IsPublic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if this method is public; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._MethodInfo.IsPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.IsSpecialName
  id: IsSpecialName
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: IsSpecialName
  nameWithType: _MethodInfo.IsSpecialName
  fullName: System.Runtime.InteropServices._MethodInfo.IsSpecialName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsSpecialName*> property."
  remarks: "This property is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.MethodBase.IsSpecialName%2A> property gets a value indicating whether this method has a special name."
  syntax:
    content: public bool IsSpecialName { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if this method has a special name; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._MethodInfo.IsSpecialName*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.IsStatic
  id: IsStatic
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: IsStatic
  nameWithType: _MethodInfo.IsStatic
  fullName: System.Runtime.InteropServices._MethodInfo.IsStatic
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsStatic*> property."
  remarks: "This property is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.MethodBase.IsStatic%2A> property gets a value indicating whether the method is `static`."
  syntax:
    content: public bool IsStatic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if this method is <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._MethodInfo.IsStatic*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.IsVirtual
  id: IsVirtual
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: IsVirtual
  nameWithType: _MethodInfo.IsVirtual
  fullName: System.Runtime.InteropServices._MethodInfo.IsVirtual
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.IsVirtual*> property."
  remarks: "This property is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.MethodBase.IsVirtual%2A> property gets a value indicating whether the method is `virtual`."
  syntax:
    content: public bool IsVirtual { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if this method is <xref uid=&quot;langword_csharp_virtual&quot; name=&quot;virtual&quot; href=&quot;&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._MethodInfo.IsVirtual*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.MemberType
  id: MemberType
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: MemberType
  nameWithType: _MethodInfo.MemberType
  fullName: System.Runtime.InteropServices._MethodInfo.MemberType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.MemberType*> property."
  remarks: "This property is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.MemberInfo.MemberType%2A> property gets a <xref:System.Reflection.MemberTypes> value indicating the type of the member — method, constructor, event, and so on."
  syntax:
    content: public System.Reflection.MemberTypes MemberType { get; }
    return:
      type: System.Reflection.MemberTypes
      description: "One of the <xref href=&quot;System.Reflection.MemberTypes&quot;></xref> values indicating the type of member."
  overload: System.Runtime.InteropServices._MethodInfo.MemberType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.MethodHandle
  id: MethodHandle
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: MethodHandle
  nameWithType: _MethodInfo.MethodHandle
  fullName: System.Runtime.InteropServices._MethodInfo.MethodHandle
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the <xref:System.Reflection.MethodBase.MethodHandle*> property."
  remarks: "This property is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.MethodBase.MethodHandle%2A> property gets a handle to the internal metadata representation of a method."
  syntax:
    content: public RuntimeMethodHandle MethodHandle { get; }
    return:
      type: System.RuntimeMethodHandle
      description: "A <xref:System.RuntimeMethodHandle> object."
  overload: System.Runtime.InteropServices._MethodInfo.MethodHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.Name
  id: Name
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: Name
  nameWithType: _MethodInfo.Name
  fullName: System.Runtime.InteropServices._MethodInfo.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.Name*> property."
  remarks: "This property is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.MemberInfo.Name%2A> property gets the name of the current member."
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "A <xref:System.String> object containing the name of this member."
  overload: System.Runtime.InteropServices._MethodInfo.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.ReflectedType
  id: ReflectedType
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: ReflectedType
  nameWithType: _MethodInfo.ReflectedType
  fullName: System.Runtime.InteropServices._MethodInfo.ReflectedType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the <xref:System.Reflection.MemberInfo.ReflectedType*> property."
  remarks: "This property is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.MemberInfo.ReflectedType%2A> property gets the class object that was used to obtain this `MemberInfo` object."
  syntax:
    content: public Type ReflectedType { get; }
    return:
      type: System.Type
      description: "The <xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;></xref> object that was used to obtain this <xref uid=&quot;langword_csharp_MemberInfo&quot; name=&quot;MemberInfo&quot; href=&quot;&quot;></xref> object."
  overload: System.Runtime.InteropServices._MethodInfo.ReflectedType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.ReturnType
  id: ReturnType
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: ReturnType
  nameWithType: _MethodInfo.ReturnType
  fullName: System.Runtime.InteropServices._MethodInfo.ReturnType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the <xref:System.Reflection.MethodInfo.ReturnType*> property."
  remarks: "This property is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.MethodInfo.ReturnType%2A> property gets the return type of this method."
  syntax:
    content: public Type ReturnType { get; }
    return:
      type: System.Type
      description: "The return type of this method."
  overload: System.Runtime.InteropServices._MethodInfo.ReturnType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.ReturnTypeCustomAttributes
  id: ReturnTypeCustomAttributes
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: ReturnTypeCustomAttributes
  nameWithType: _MethodInfo.ReturnTypeCustomAttributes
  fullName: System.Runtime.InteropServices._MethodInfo.ReturnTypeCustomAttributes
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the <xref:System.Reflection.MethodInfo.ReturnTypeCustomAttributes*> property."
  remarks: "This property is for access to managed classes from unmanaged code and should not be called from managed code.       The <xref:System.Reflection.MethodInfo.ReturnTypeCustomAttributes%2A> property gets the custom attributes for the return type."
  syntax:
    content: public System.Reflection.ICustomAttributeProvider ReturnTypeCustomAttributes { get; }
    return:
      type: System.Reflection.ICustomAttributeProvider
      description: "An <xref href=&quot;System.Reflection.ICustomAttributeProvider&quot;></xref> object representing the custom attributes for the return type."
  overload: System.Runtime.InteropServices._MethodInfo.ReturnTypeCustomAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.ToString
  id: ToString
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: ToString()
  nameWithType: _MethodInfo.ToString()
  fullName: System.Runtime.InteropServices._MethodInfo.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the <xref:System.Object.ToString*> method."
  remarks: "This method is for access to managed classes from unmanaged code and should not be called from managed code."
  syntax:
    content: public string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A string that represents the current <xref:System.Object>."
  overload: System.Runtime.InteropServices._MethodInfo.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.InteropServices._MethodInfo.Attributes
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: Attributes
  nameWithType: _MethodInfo.Attributes
  fullName: System.Runtime.InteropServices._MethodInfo.Attributes
- uid: System.Reflection.MethodAttributes
  parent: System.Reflection
  isExternal: true
  name: MethodAttributes
  nameWithType: MethodAttributes
  fullName: System.Reflection.MethodAttributes
- uid: System.Runtime.InteropServices._MethodInfo.CallingConvention
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: CallingConvention
  nameWithType: _MethodInfo.CallingConvention
  fullName: System.Runtime.InteropServices._MethodInfo.CallingConvention
- uid: System.Reflection.CallingConventions
  parent: System.Reflection
  isExternal: true
  name: CallingConventions
  nameWithType: CallingConventions
  fullName: System.Reflection.CallingConventions
- uid: System.Runtime.InteropServices._MethodInfo.DeclaringType
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: DeclaringType
  nameWithType: _MethodInfo.DeclaringType
  fullName: System.Runtime.InteropServices._MethodInfo.DeclaringType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.InteropServices._MethodInfo.Equals(System.Object)
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: Equals(Object)
  nameWithType: _MethodInfo.Equals(Object)
  fullName: System.Runtime.InteropServices._MethodInfo.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.InteropServices._MethodInfo.GetBaseDefinition
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetBaseDefinition()
  nameWithType: _MethodInfo.GetBaseDefinition()
  fullName: System.Runtime.InteropServices._MethodInfo.GetBaseDefinition()
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Runtime.InteropServices._MethodInfo.GetCustomAttributes(System.Boolean)
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetCustomAttributes(Boolean)
  nameWithType: _MethodInfo.GetCustomAttributes(Boolean)
  fullName: System.Runtime.InteropServices._MethodInfo.GetCustomAttributes(Boolean)
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._MethodInfo.GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: _MethodInfo.GetCustomAttributes(Type,Boolean)
  fullName: System.Runtime.InteropServices._MethodInfo.GetCustomAttributes(Type,Boolean)
- uid: System.Runtime.InteropServices._MethodInfo.GetHashCode
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetHashCode()
  nameWithType: _MethodInfo.GetHashCode()
  fullName: System.Runtime.InteropServices._MethodInfo.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.InteropServices._MethodInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: _MethodInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._MethodInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Runtime.InteropServices._MethodInfo.GetMethodImplementationFlags
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetMethodImplementationFlags()
  nameWithType: _MethodInfo.GetMethodImplementationFlags()
  fullName: System.Runtime.InteropServices._MethodInfo.GetMethodImplementationFlags()
- uid: System.Reflection.MethodImplAttributes
  parent: System.Reflection
  isExternal: true
  name: MethodImplAttributes
  nameWithType: MethodImplAttributes
  fullName: System.Reflection.MethodImplAttributes
- uid: System.Runtime.InteropServices._MethodInfo.GetParameters
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetParameters()
  nameWithType: _MethodInfo.GetParameters()
  fullName: System.Runtime.InteropServices._MethodInfo.GetParameters()
- uid: System.Reflection.ParameterInfo[]
  parent: System.Reflection
  isExternal: true
  name: ParameterInfo
  nameWithType: ParameterInfo
  fullName: System.Reflection.ParameterInfo[]
  spec.csharp:
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: ParameterInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._MethodInfo.GetType
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetType()
  nameWithType: _MethodInfo.GetType()
  fullName: System.Runtime.InteropServices._MethodInfo.GetType()
- uid: System.Runtime.InteropServices._MethodInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: _MethodInfo.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._MethodInfo.GetTypeInfo(UInt32,UInt32,IntPtr)
- uid: System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount(System.UInt32@)
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetTypeInfoCount(UInt32)
  nameWithType: _MethodInfo.GetTypeInfoCount(UInt32)
  fullName: System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount(UInt32)
- uid: System.Runtime.InteropServices._MethodInfo.Invoke(System.Object,System.Object[])
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: Invoke(Object,Object[])
  nameWithType: _MethodInfo.Invoke(Object,Object[])
  fullName: System.Runtime.InteropServices._MethodInfo.Invoke(Object,Object[])
- uid: System.Runtime.InteropServices._MethodInfo.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)
  nameWithType: _MethodInfo.Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)
  fullName: System.Runtime.InteropServices._MethodInfo.Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Runtime.InteropServices._MethodInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: _MethodInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Runtime.InteropServices._MethodInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Runtime.InteropServices._MethodInfo.IsAbstract
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsAbstract
  nameWithType: _MethodInfo.IsAbstract
  fullName: System.Runtime.InteropServices._MethodInfo.IsAbstract
- uid: System.Runtime.InteropServices._MethodInfo.IsAssembly
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsAssembly
  nameWithType: _MethodInfo.IsAssembly
  fullName: System.Runtime.InteropServices._MethodInfo.IsAssembly
- uid: System.Runtime.InteropServices._MethodInfo.IsConstructor
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsConstructor
  nameWithType: _MethodInfo.IsConstructor
  fullName: System.Runtime.InteropServices._MethodInfo.IsConstructor
- uid: System.Runtime.InteropServices._MethodInfo.IsDefined(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsDefined(Type,Boolean)
  nameWithType: _MethodInfo.IsDefined(Type,Boolean)
  fullName: System.Runtime.InteropServices._MethodInfo.IsDefined(Type,Boolean)
- uid: System.Runtime.InteropServices._MethodInfo.IsFamily
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsFamily
  nameWithType: _MethodInfo.IsFamily
  fullName: System.Runtime.InteropServices._MethodInfo.IsFamily
- uid: System.Runtime.InteropServices._MethodInfo.IsFamilyAndAssembly
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsFamilyAndAssembly
  nameWithType: _MethodInfo.IsFamilyAndAssembly
  fullName: System.Runtime.InteropServices._MethodInfo.IsFamilyAndAssembly
- uid: System.Runtime.InteropServices._MethodInfo.IsFamilyOrAssembly
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsFamilyOrAssembly
  nameWithType: _MethodInfo.IsFamilyOrAssembly
  fullName: System.Runtime.InteropServices._MethodInfo.IsFamilyOrAssembly
- uid: System.Runtime.InteropServices._MethodInfo.IsFinal
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsFinal
  nameWithType: _MethodInfo.IsFinal
  fullName: System.Runtime.InteropServices._MethodInfo.IsFinal
- uid: System.Runtime.InteropServices._MethodInfo.IsHideBySig
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsHideBySig
  nameWithType: _MethodInfo.IsHideBySig
  fullName: System.Runtime.InteropServices._MethodInfo.IsHideBySig
- uid: System.Runtime.InteropServices._MethodInfo.IsPrivate
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsPrivate
  nameWithType: _MethodInfo.IsPrivate
  fullName: System.Runtime.InteropServices._MethodInfo.IsPrivate
- uid: System.Runtime.InteropServices._MethodInfo.IsPublic
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsPublic
  nameWithType: _MethodInfo.IsPublic
  fullName: System.Runtime.InteropServices._MethodInfo.IsPublic
- uid: System.Runtime.InteropServices._MethodInfo.IsSpecialName
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsSpecialName
  nameWithType: _MethodInfo.IsSpecialName
  fullName: System.Runtime.InteropServices._MethodInfo.IsSpecialName
- uid: System.Runtime.InteropServices._MethodInfo.IsStatic
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsStatic
  nameWithType: _MethodInfo.IsStatic
  fullName: System.Runtime.InteropServices._MethodInfo.IsStatic
- uid: System.Runtime.InteropServices._MethodInfo.IsVirtual
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsVirtual
  nameWithType: _MethodInfo.IsVirtual
  fullName: System.Runtime.InteropServices._MethodInfo.IsVirtual
- uid: System.Runtime.InteropServices._MethodInfo.MemberType
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: MemberType
  nameWithType: _MethodInfo.MemberType
  fullName: System.Runtime.InteropServices._MethodInfo.MemberType
- uid: System.Reflection.MemberTypes
  parent: System.Reflection
  isExternal: false
  name: MemberTypes
  nameWithType: MemberTypes
  fullName: System.Reflection.MemberTypes
- uid: System.Runtime.InteropServices._MethodInfo.MethodHandle
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: MethodHandle
  nameWithType: _MethodInfo.MethodHandle
  fullName: System.Runtime.InteropServices._MethodInfo.MethodHandle
- uid: System.RuntimeMethodHandle
  parent: System
  isExternal: true
  name: RuntimeMethodHandle
  nameWithType: RuntimeMethodHandle
  fullName: System.RuntimeMethodHandle
- uid: System.Runtime.InteropServices._MethodInfo.Name
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: Name
  nameWithType: _MethodInfo.Name
  fullName: System.Runtime.InteropServices._MethodInfo.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.InteropServices._MethodInfo.ReflectedType
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: ReflectedType
  nameWithType: _MethodInfo.ReflectedType
  fullName: System.Runtime.InteropServices._MethodInfo.ReflectedType
- uid: System.Runtime.InteropServices._MethodInfo.ReturnType
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: ReturnType
  nameWithType: _MethodInfo.ReturnType
  fullName: System.Runtime.InteropServices._MethodInfo.ReturnType
- uid: System.Runtime.InteropServices._MethodInfo.ReturnTypeCustomAttributes
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: ReturnTypeCustomAttributes
  nameWithType: _MethodInfo.ReturnTypeCustomAttributes
  fullName: System.Runtime.InteropServices._MethodInfo.ReturnTypeCustomAttributes
- uid: System.Reflection.ICustomAttributeProvider
  parent: System.Reflection
  isExternal: false
  name: ICustomAttributeProvider
  nameWithType: ICustomAttributeProvider
  fullName: System.Reflection.ICustomAttributeProvider
- uid: System.Runtime.InteropServices._MethodInfo.ToString
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: ToString()
  nameWithType: _MethodInfo.ToString()
  fullName: System.Runtime.InteropServices._MethodInfo.ToString()
- uid: System.Runtime.InteropServices._MethodInfo.Attributes*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: Attributes
  nameWithType: _MethodInfo.Attributes
- uid: System.Runtime.InteropServices._MethodInfo.CallingConvention*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: CallingConvention
  nameWithType: _MethodInfo.CallingConvention
- uid: System.Runtime.InteropServices._MethodInfo.DeclaringType*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: DeclaringType
  nameWithType: _MethodInfo.DeclaringType
- uid: System.Runtime.InteropServices._MethodInfo.Equals*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: Equals
  nameWithType: _MethodInfo.Equals
- uid: System.Runtime.InteropServices._MethodInfo.GetBaseDefinition*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetBaseDefinition
  nameWithType: _MethodInfo.GetBaseDefinition
- uid: System.Runtime.InteropServices._MethodInfo.GetCustomAttributes*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetCustomAttributes
  nameWithType: _MethodInfo.GetCustomAttributes
- uid: System.Runtime.InteropServices._MethodInfo.GetHashCode*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetHashCode
  nameWithType: _MethodInfo.GetHashCode
- uid: System.Runtime.InteropServices._MethodInfo.GetIDsOfNames*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetIDsOfNames
  nameWithType: _MethodInfo.GetIDsOfNames
- uid: System.Runtime.InteropServices._MethodInfo.GetMethodImplementationFlags*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetMethodImplementationFlags
  nameWithType: _MethodInfo.GetMethodImplementationFlags
- uid: System.Runtime.InteropServices._MethodInfo.GetParameters*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetParameters
  nameWithType: _MethodInfo.GetParameters
- uid: System.Runtime.InteropServices._MethodInfo.GetType*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetType
  nameWithType: _MethodInfo.GetType
- uid: System.Runtime.InteropServices._MethodInfo.GetTypeInfo*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetTypeInfo
  nameWithType: _MethodInfo.GetTypeInfo
- uid: System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetTypeInfoCount
  nameWithType: _MethodInfo.GetTypeInfoCount
- uid: System.Runtime.InteropServices._MethodInfo.Invoke*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: Invoke
  nameWithType: _MethodInfo.Invoke
- uid: System.Runtime.InteropServices._MethodInfo.IsAbstract*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsAbstract
  nameWithType: _MethodInfo.IsAbstract
- uid: System.Runtime.InteropServices._MethodInfo.IsAssembly*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsAssembly
  nameWithType: _MethodInfo.IsAssembly
- uid: System.Runtime.InteropServices._MethodInfo.IsConstructor*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsConstructor
  nameWithType: _MethodInfo.IsConstructor
- uid: System.Runtime.InteropServices._MethodInfo.IsDefined*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsDefined
  nameWithType: _MethodInfo.IsDefined
- uid: System.Runtime.InteropServices._MethodInfo.IsFamily*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsFamily
  nameWithType: _MethodInfo.IsFamily
- uid: System.Runtime.InteropServices._MethodInfo.IsFamilyAndAssembly*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsFamilyAndAssembly
  nameWithType: _MethodInfo.IsFamilyAndAssembly
- uid: System.Runtime.InteropServices._MethodInfo.IsFamilyOrAssembly*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsFamilyOrAssembly
  nameWithType: _MethodInfo.IsFamilyOrAssembly
- uid: System.Runtime.InteropServices._MethodInfo.IsFinal*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsFinal
  nameWithType: _MethodInfo.IsFinal
- uid: System.Runtime.InteropServices._MethodInfo.IsHideBySig*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsHideBySig
  nameWithType: _MethodInfo.IsHideBySig
- uid: System.Runtime.InteropServices._MethodInfo.IsPrivate*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsPrivate
  nameWithType: _MethodInfo.IsPrivate
- uid: System.Runtime.InteropServices._MethodInfo.IsPublic*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsPublic
  nameWithType: _MethodInfo.IsPublic
- uid: System.Runtime.InteropServices._MethodInfo.IsSpecialName*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsSpecialName
  nameWithType: _MethodInfo.IsSpecialName
- uid: System.Runtime.InteropServices._MethodInfo.IsStatic*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsStatic
  nameWithType: _MethodInfo.IsStatic
- uid: System.Runtime.InteropServices._MethodInfo.IsVirtual*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsVirtual
  nameWithType: _MethodInfo.IsVirtual
- uid: System.Runtime.InteropServices._MethodInfo.MemberType*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: MemberType
  nameWithType: _MethodInfo.MemberType
- uid: System.Runtime.InteropServices._MethodInfo.MethodHandle*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: MethodHandle
  nameWithType: _MethodInfo.MethodHandle
- uid: System.Runtime.InteropServices._MethodInfo.Name*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: Name
  nameWithType: _MethodInfo.Name
- uid: System.Runtime.InteropServices._MethodInfo.ReflectedType*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: ReflectedType
  nameWithType: _MethodInfo.ReflectedType
- uid: System.Runtime.InteropServices._MethodInfo.ReturnType*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: ReturnType
  nameWithType: _MethodInfo.ReturnType
- uid: System.Runtime.InteropServices._MethodInfo.ReturnTypeCustomAttributes*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: ReturnTypeCustomAttributes
  nameWithType: _MethodInfo.ReturnTypeCustomAttributes
- uid: System.Runtime.InteropServices._MethodInfo.ToString*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: ToString
  nameWithType: _MethodInfo.ToString
