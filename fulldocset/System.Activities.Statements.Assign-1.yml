### YamlMime:ManagedReference
items:
- uid: System.Activities.Statements.Assign`1
  id: Assign`1
  children:
  - System.Activities.Statements.Assign`1.#ctor
  - System.Activities.Statements.Assign`1.CacheMetadata(System.Activities.CodeActivityMetadata)
  - System.Activities.Statements.Assign`1.Execute(System.Activities.CodeActivityContext)
  - System.Activities.Statements.Assign`1.To
  - System.Activities.Statements.Assign`1.Value
  langs:
  - csharp
  name: Assign<T>
  nameWithType: Assign<T>
  fullName: System.Activities.Statements.Assign<T>
  type: Class
  syntax:
    content: 'public sealed class Assign<T> : System.Activities.CodeActivity'
    typeParameters:
    - id: T
      description: "To be added."
  inheritance:
  - System.Object
  - System.Activities.Activity
  - System.Activities.CodeActivity
  implements: []
  inheritedMembers:
  - System.Activities.Activity.CacheId
  - System.Activities.Activity.Constraints
  - System.Activities.Activity.DisplayName
  - System.Activities.Activity.Id
  - System.Activities.Activity.ShouldSerializeDisplayName
  - System.Activities.Activity.ToString
  - System.Activities.CodeActivity.CacheMetadata(System.Activities.ActivityMetadata)
  - System.Activities.CodeActivity.Implementation
  - System.Activities.CodeActivity.ImplementationVersion
  - System.Activities.CodeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)
  platform:
  - net462
- uid: System.Activities.Statements.Assign`1.#ctor
  id: '#ctor'
  parent: System.Activities.Statements.Assign`1
  langs:
  - csharp
  name: Assign()
  nameWithType: Assign<T>.Assign()
  fullName: System.Activities.Statements.Assign<T>.Assign()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: public Assign ();
    parameters: []
  overload: System.Activities.Statements.Assign`1.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.Assign`1.CacheMetadata(System.Activities.CodeActivityMetadata)
  id: CacheMetadata(System.Activities.CodeActivityMetadata)
  parent: System.Activities.Statements.Assign`1
  langs:
  - csharp
  name: CacheMetadata(CodeActivityMetadata)
  nameWithType: Assign<T>.CacheMetadata(CodeActivityMetadata)
  fullName: System.Activities.Statements.Assign<T>.CacheMetadata(CodeActivityMetadata)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: protected override void CacheMetadata (System.Activities.CodeActivityMetadata metadata);
    parameters:
    - id: metadata
      type: System.Activities.CodeActivityMetadata
      description: "To be added."
  overload: System.Activities.Statements.Assign`1.CacheMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.Assign`1.Execute(System.Activities.CodeActivityContext)
  id: Execute(System.Activities.CodeActivityContext)
  parent: System.Activities.Statements.Assign`1
  langs:
  - csharp
  name: Execute(CodeActivityContext)
  nameWithType: Assign<T>.Execute(CodeActivityContext)
  fullName: System.Activities.Statements.Assign<T>.Execute(CodeActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: protected override void Execute (System.Activities.CodeActivityContext context);
    parameters:
    - id: context
      type: System.Activities.CodeActivityContext
      description: "To be added."
  overload: System.Activities.Statements.Assign`1.Execute*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.Assign`1.To
  id: To
  parent: System.Activities.Statements.Assign`1
  langs:
  - csharp
  name: To
  nameWithType: Assign<T>.To
  fullName: System.Activities.Statements.Assign<T>.To
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: public System.Activities.OutArgument<T> To { get; set; }
    return:
      type: System.Activities.OutArgument`1
      description: "To be added."
  overload: System.Activities.Statements.Assign`1.To*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.Assign`1.Value
  id: Value
  parent: System.Activities.Statements.Assign`1
  langs:
  - csharp
  name: Value
  nameWithType: Assign<T>.Value
  fullName: System.Activities.Statements.Assign<T>.Value
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: public System.Activities.InArgument<T> Value { get; set; }
    return:
      type: System.Activities.InArgument`1
      description: "To be added."
  overload: System.Activities.Statements.Assign`1.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Activities.CodeActivity
  isExternal: false
  name: System.Activities.CodeActivity
- uid: System.Activities.Statements.Assign`1.#ctor
  parent: System.Activities.Statements.Assign`1
  isExternal: false
  name: Assign()
  nameWithType: Assign<T>.Assign()
  fullName: System.Activities.Statements.Assign<T>.Assign()
- uid: System.Activities.Statements.Assign`1.CacheMetadata(System.Activities.CodeActivityMetadata)
  parent: System.Activities.Statements.Assign`1
  isExternal: false
  name: CacheMetadata(CodeActivityMetadata)
  nameWithType: Assign<T>.CacheMetadata(CodeActivityMetadata)
  fullName: System.Activities.Statements.Assign<T>.CacheMetadata(CodeActivityMetadata)
- uid: System.Activities.CodeActivityMetadata
  parent: System.Activities
  isExternal: false
  name: CodeActivityMetadata
  nameWithType: CodeActivityMetadata
  fullName: System.Activities.CodeActivityMetadata
- uid: System.Activities.Statements.Assign`1.Execute(System.Activities.CodeActivityContext)
  parent: System.Activities.Statements.Assign`1
  isExternal: false
  name: Execute(CodeActivityContext)
  nameWithType: Assign<T>.Execute(CodeActivityContext)
  fullName: System.Activities.Statements.Assign<T>.Execute(CodeActivityContext)
- uid: System.Activities.CodeActivityContext
  parent: System.Activities
  isExternal: false
  name: CodeActivityContext
  nameWithType: CodeActivityContext
  fullName: System.Activities.CodeActivityContext
- uid: System.Activities.Statements.Assign`1.To
  parent: System.Activities.Statements.Assign`1
  isExternal: false
  name: To
  nameWithType: Assign<T>.To
  fullName: System.Activities.Statements.Assign<T>.To
- uid: System.Activities.OutArgument`1
  parent: System.Activities
  isExternal: false
  name: OutArgument<T>
  nameWithType: OutArgument<T>
  fullName: System.Activities.OutArgument<T>
- uid: System.Activities.Statements.Assign`1.Value
  parent: System.Activities.Statements.Assign`1
  isExternal: false
  name: Value
  nameWithType: Assign<T>.Value
  fullName: System.Activities.Statements.Assign<T>.Value
- uid: System.Activities.InArgument`1
  parent: System.Activities
  isExternal: false
  name: InArgument<T>
  nameWithType: InArgument<T>
  fullName: System.Activities.InArgument<T>
- uid: System.Activities.Statements.Assign`1.#ctor*
  parent: System.Activities.Statements.Assign`1
  isExternal: false
  name: Assign<T>
  nameWithType: Assign<T>.Assign<T>
- uid: System.Activities.Statements.Assign`1.CacheMetadata*
  parent: System.Activities.Statements.Assign`1
  isExternal: false
  name: CacheMetadata
  nameWithType: Assign<T>.CacheMetadata
- uid: System.Activities.Statements.Assign`1.Execute*
  parent: System.Activities.Statements.Assign`1
  isExternal: false
  name: Execute
  nameWithType: Assign<T>.Execute
- uid: System.Activities.Statements.Assign`1.To*
  parent: System.Activities.Statements.Assign`1
  isExternal: false
  name: To
  nameWithType: Assign<T>.To
- uid: System.Activities.Statements.Assign`1.Value*
  parent: System.Activities.Statements.Assign`1
  isExternal: false
  name: Value
  nameWithType: Assign<T>.Value
