### YamlMime:ManagedReference
items:
- uid: System.Web.SessionState.HttpSessionStateContainer
  id: HttpSessionStateContainer
  children:
  - System.Web.SessionState.HttpSessionStateContainer.#ctor(System.String,System.Web.SessionState.ISessionStateItemCollection,System.Web.HttpStaticObjectsCollection,System.Int32,System.Boolean,System.Web.HttpCookieMode,System.Web.SessionState.SessionStateMode,System.Boolean)
  - System.Web.SessionState.HttpSessionStateContainer.Abandon
  - System.Web.SessionState.HttpSessionStateContainer.Add(System.String,System.Object)
  - System.Web.SessionState.HttpSessionStateContainer.Clear
  - System.Web.SessionState.HttpSessionStateContainer.CodePage
  - System.Web.SessionState.HttpSessionStateContainer.CookieMode
  - System.Web.SessionState.HttpSessionStateContainer.CopyTo(System.Array,System.Int32)
  - System.Web.SessionState.HttpSessionStateContainer.Count
  - System.Web.SessionState.HttpSessionStateContainer.GetEnumerator
  - System.Web.SessionState.HttpSessionStateContainer.IsAbandoned
  - System.Web.SessionState.HttpSessionStateContainer.IsCookieless
  - System.Web.SessionState.HttpSessionStateContainer.IsNewSession
  - System.Web.SessionState.HttpSessionStateContainer.IsReadOnly
  - System.Web.SessionState.HttpSessionStateContainer.IsSynchronized
  - System.Web.SessionState.HttpSessionStateContainer.Item(System.Int32)
  - System.Web.SessionState.HttpSessionStateContainer.Item(System.String)
  - System.Web.SessionState.HttpSessionStateContainer.Keys
  - System.Web.SessionState.HttpSessionStateContainer.LCID
  - System.Web.SessionState.HttpSessionStateContainer.Mode
  - System.Web.SessionState.HttpSessionStateContainer.Remove(System.String)
  - System.Web.SessionState.HttpSessionStateContainer.RemoveAll
  - System.Web.SessionState.HttpSessionStateContainer.RemoveAt(System.Int32)
  - System.Web.SessionState.HttpSessionStateContainer.SessionID
  - System.Web.SessionState.HttpSessionStateContainer.StaticObjects
  - System.Web.SessionState.HttpSessionStateContainer.SyncRoot
  - System.Web.SessionState.HttpSessionStateContainer.Timeout
  langs:
  - csharp
  name: HttpSessionStateContainer
  nameWithType: HttpSessionStateContainer
  fullName: System.Web.SessionState.HttpSessionStateContainer
  type: Class
  summary: "Contains session-state values as well as session-level settings for the current request."
  remarks: "ASP.NET provides session-state management to enable you to store information associated with a unique browser session across multiple requests. You can store a collection of values referenced by a key name or by numerical index. Access to session values and functionality is available using the <xref:System.Web.SessionState.HttpSessionState> class, which is accessible through the <xref:System.Web.HttpContext.Session%2A> property of the current <xref:System.Web.HttpContext> or the <xref:System.Web.UI.Page.Session%2A> property of the <xref:System.Web.UI.Page>. The <xref:System.Web.SessionState.HttpSessionState> class accesses session-state values and session-level settings by referencing a session-state container, which is an implementation of the <xref:System.Web.SessionState.IHttpSessionState> interface that has been populated with session-state data and added to the <xref:System.Web.HttpContext> of the current request by the session-state module for the <xref:System.Web.HttpApplication>.       The <xref:System.Web.SessionState.HttpSessionState> class calls the HttpSessionStateContainer class, which manages session settings and values in memory.       The HttpSessionStateContainer class is the ASP.NET implementation of the <xref:System.Web.SessionState.IHttpSessionState> interface. The HttpSessionStateContainer class is not intended to be called from application code. If you replace the <xref:System.Web.SessionState.SessionStateModule> with a custom session-state module, you can use the HttpSessionStateContainer class, or supply your own implementation of the <xref:System.Web.SessionState.IHttpSessionState> interface."
  example:
  - For an example of a custom session-state module that uses the HttpSessionStateContainer class as the session-state container for the current request, see the <xref:System.Web.SessionState.SessionStateUtility> class overview.
  syntax:
    content: 'public class HttpSessionStateContainer : System.Web.SessionState.IHttpSessionState'
  inheritance:
  - System.Object
  implements:
  - System.Web.SessionState.IHttpSessionState
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionStateContainer.#ctor(System.String,System.Web.SessionState.ISessionStateItemCollection,System.Web.HttpStaticObjectsCollection,System.Int32,System.Boolean,System.Web.HttpCookieMode,System.Web.SessionState.SessionStateMode,System.Boolean)
  id: '#ctor(System.String,System.Web.SessionState.ISessionStateItemCollection,System.Web.HttpStaticObjectsCollection,System.Int32,System.Boolean,System.Web.HttpCookieMode,System.Web.SessionState.SessionStateMode,System.Boolean)'
  parent: System.Web.SessionState.HttpSessionStateContainer
  langs:
  - csharp
  name: HttpSessionStateContainer(String,ISessionStateItemCollection,HttpStaticObjectsCollection,Int32,Boolean,HttpCookieMode,SessionStateMode,Boolean)
  nameWithType: HttpSessionStateContainer.HttpSessionStateContainer(String,ISessionStateItemCollection,HttpStaticObjectsCollection,Int32,Boolean,HttpCookieMode,SessionStateMode,Boolean)
  fullName: System.Web.SessionState.HttpSessionStateContainer.HttpSessionStateContainer(String,ISessionStateItemCollection,HttpStaticObjectsCollection,Int32,Boolean,HttpCookieMode,SessionStateMode,Boolean)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Creates a new <xref href=&quot;System.Web.SessionState.HttpSessionStateContainer&quot;></xref> object and initializes it with the specified settings and values."
  remarks: ''
  example:
  - "The following code example shows the <xref:System.Web.HttpApplication.AcquireRequestState> event handler for a custom session-state module that populates a new <xref:System.Web.SessionState.HttpSessionStateContainer> object with new or existing session information and adds it to the <xref:System.Web.HttpContext> of the current request using the <xref:System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext%2A> method. For a full code example of a custom session-state module, see the <xref:System.Web.SessionState.SessionStateUtility> class overview.  \n  \n [!code-vb[System.Web.SessionState.SessionStateUtility#4](~/add/codesnippet/visualbasic/c2eb8b4d-8f36-4d66-a14a-_1.vb)]\n [!code-cs[System.Web.SessionState.SessionStateUtility#4](~/add/codesnippet/csharp/c2eb8b4d-8f36-4d66-a14a-_1.cs)]"
  syntax:
    content: public HttpSessionStateContainer (string id, System.Web.SessionState.ISessionStateItemCollection sessionItems, System.Web.HttpStaticObjectsCollection staticObjects, int timeout, bool newSession, System.Web.HttpCookieMode cookieMode, System.Web.SessionState.SessionStateMode mode, bool isReadonly);
    parameters:
    - id: id
      type: System.String
      description: "A session identifier for the new session. If <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, an <xref:System.ArgumentException> is thrown."
    - id: sessionItems
      type: System.Web.SessionState.ISessionStateItemCollection
      description: "An <xref href=&quot;System.Web.SessionState.ISessionStateItemCollection&quot;></xref> that contains the session values for the new session-state provider."
    - id: staticObjects
      type: System.Web.HttpStaticObjectsCollection
      description: "An <xref href=&quot;System.Web.HttpStaticObjectsCollection&quot;></xref> that specifies the objects declared by <xref uid=&quot;langword_csharp_&lt;object Runat=&quot;Server&quot; Scope=&quot;Session&quot;/&gt;&quot; name=&quot;&lt;object Runat=&quot;Server&quot; Scope=&quot;Session&quot;/&gt;&quot; href=&quot;&quot;></xref> tags within the ASP.NET application file Global.asax."
    - id: timeout
      type: System.Int32
      description: "The amount of time, in minutes, allowed between requests before the session-state provider terminates the session."
    - id: newSession
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to indicate the session was created with the current request; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: cookieMode
      type: System.Web.HttpCookieMode
      description: "The <xref:System.Web.SessionState.HttpSessionStateContainer.CookieMode*> for the new session-state provider."
    - id: mode
      type: System.Web.SessionState.SessionStateMode
      description: "One of the <xref href=&quot;System.Web.SessionState.SessionStateMode&quot;></xref> values that specifies the current session-state mode."
    - id: isReadonly
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to indicate the session is read-only; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.SessionState.HttpSessionStateContainer.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>id</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionStateContainer.Abandon
  id: Abandon
  parent: System.Web.SessionState.HttpSessionStateContainer
  langs:
  - csharp
  name: Abandon()
  nameWithType: HttpSessionStateContainer.Abandon()
  fullName: System.Web.SessionState.HttpSessionStateContainer.Abandon()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Marks the current session as abandoned."
  remarks: "The Abandon method of the <xref:System.Web.SessionState.HttpSessionStateContainer> marks the <xref:System.Web.SessionState.HttpSessionStateContainer.IsAbandoned%2A> property as `true`. A custom session module can then query the <xref:System.Web.SessionState.HttpSessionStateContainer.IsAbandoned%2A> property and remove the session information if the <xref:System.Web.SessionState.HttpSessionStateContainer.IsAbandoned%2A> property is `true`."
  syntax:
    content: public void Abandon ();
    parameters: []
  overload: System.Web.SessionState.HttpSessionStateContainer.Abandon*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionStateContainer.Add(System.String,System.Object)
  id: Add(System.String,System.Object)
  parent: System.Web.SessionState.HttpSessionStateContainer
  langs:
  - csharp
  name: Add(String,Object)
  nameWithType: HttpSessionStateContainer.Add(String,Object)
  fullName: System.Web.SessionState.HttpSessionStateContainer.Add(String,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Adds a new item to the session-state collection."
  remarks: "If the `name` parameter refers to an existing session-state item, the existing item is overwritten with the specified `value`."
  syntax:
    content: public void Add (string name, object value);
    parameters:
    - id: name
      type: System.String
      description: "The name of the item to add to the session-state collection."
    - id: value
      type: System.Object
      description: "The value of the item to add to the session-state collection."
  overload: System.Web.SessionState.HttpSessionStateContainer.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionStateContainer.Clear
  id: Clear
  parent: System.Web.SessionState.HttpSessionStateContainer
  langs:
  - csharp
  name: Clear()
  nameWithType: HttpSessionStateContainer.Clear()
  fullName: System.Web.SessionState.HttpSessionStateContainer.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Removes all values and keys from the session-state collection."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.SessionState.HttpSessionStateContainer.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionStateContainer.CodePage
  id: CodePage
  parent: System.Web.SessionState.HttpSessionStateContainer
  langs:
  - csharp
  name: CodePage
  nameWithType: HttpSessionStateContainer.CodePage
  fullName: System.Web.SessionState.HttpSessionStateContainer.CodePage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Gets or sets the character-set identifier for the current session."
  remarks: "A character set (code page) is used to interpret multibyte character data, determining character value, and therefore sort order. Code-page settings apply only to multibyte character data, not to Unicode character data.       This CodePage property is provided for compatibility with earlier versions of ASP only. If you do not need to maintain backward compatibility with ASP pages, use the <xref:System.Web.HttpResponse.ContentEncoding%2A> property instead."
  syntax:
    content: public int CodePage { get; set; }
    return:
      type: System.Int32
      description: "The character-set identifier for the current session."
  overload: System.Web.SessionState.HttpSessionStateContainer.CodePage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionStateContainer.CookieMode
  id: CookieMode
  parent: System.Web.SessionState.HttpSessionStateContainer
  langs:
  - csharp
  name: CookieMode
  nameWithType: HttpSessionStateContainer.CookieMode
  fullName: System.Web.SessionState.HttpSessionStateContainer.CookieMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Gets a value that indicates whether the application is configured for cookieless sessions."
  remarks: "When <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A> is `true`, the <xref:System.Web.SessionState.HttpSessionState.CookieMode%2A> property returns <xref:System.Web.HttpCookieMode>; otherwise, the <xref:System.Web.SessionState.HttpSessionState.CookieMode%2A> property returns <xref:System.Web.HttpCookieMode>."
  syntax:
    content: public System.Web.HttpCookieMode CookieMode { get; }
    return:
      type: System.Web.HttpCookieMode
      description: "One of the <xref href=&quot;System.Web.HttpCookieMode&quot;></xref> values that indicates whether the application is configured for cookieless sessions. The default is <xref href=&quot;System.Web.HttpCookieMode&quot;></xref>."
  overload: System.Web.SessionState.HttpSessionStateContainer.CookieMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionStateContainer.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Web.SessionState.HttpSessionStateContainer
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: HttpSessionStateContainer.CopyTo(Array,Int32)
  fullName: System.Web.SessionState.HttpSessionStateContainer.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Copies the collection of session-state values to a one-dimensional array, starting at the specified index in the array."
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "The <xref:System.Array> that receives the session values."
    - id: index
      type: System.Int32
      description: "The zero-based index in `array` from which copying starts."
  overload: System.Web.SessionState.HttpSessionStateContainer.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionStateContainer.Count
  id: Count
  parent: System.Web.SessionState.HttpSessionStateContainer
  langs:
  - csharp
  name: Count
  nameWithType: HttpSessionStateContainer.Count
  fullName: System.Web.SessionState.HttpSessionStateContainer.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Gets the number of items in the session-state collection."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "The number of items in the collection."
  overload: System.Web.SessionState.HttpSessionStateContainer.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionStateContainer.GetEnumerator
  id: GetEnumerator
  parent: System.Web.SessionState.HttpSessionStateContainer
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: HttpSessionStateContainer.GetEnumerator()
  fullName: System.Web.SessionState.HttpSessionStateContainer.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Returns an enumerator that can be used to read all the session-state variable names in the current session."
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "An <xref:System.Collections.IEnumerator> that can iterate through the variable names in the session-state collection."
  overload: System.Web.SessionState.HttpSessionStateContainer.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionStateContainer.IsAbandoned
  id: IsAbandoned
  parent: System.Web.SessionState.HttpSessionStateContainer
  langs:
  - csharp
  name: IsAbandoned
  nameWithType: HttpSessionStateContainer.IsAbandoned
  fullName: System.Web.SessionState.HttpSessionStateContainer.IsAbandoned
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Gets a value indicating whether the current session has been abandoned."
  syntax:
    content: public bool IsAbandoned { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the current session has been abandoned; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.SessionState.HttpSessionStateContainer.IsAbandoned*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionStateContainer.IsCookieless
  id: IsCookieless
  parent: System.Web.SessionState.HttpSessionStateContainer
  langs:
  - csharp
  name: IsCookieless
  nameWithType: HttpSessionStateContainer.IsCookieless
  fullName: System.Web.SessionState.HttpSessionStateContainer.IsCookieless
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Gets a value indicating whether the session ID is embedded in the URL or stored in an HTTP cookie."
  remarks: "For a discussion of cookieless sessions, see the <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A> property of the <xref:System.Web.SessionState.HttpSessionState> class."
  syntax:
    content: public bool IsCookieless { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the session is embedded in the URL; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.SessionState.HttpSessionStateContainer.IsCookieless*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionStateContainer.IsNewSession
  id: IsNewSession
  parent: System.Web.SessionState.HttpSessionStateContainer
  langs:
  - csharp
  name: IsNewSession
  nameWithType: HttpSessionStateContainer.IsNewSession
  fullName: System.Web.SessionState.HttpSessionStateContainer.IsNewSession
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Gets a value indicating whether the session was created with the current request."
  syntax:
    content: public bool IsNewSession { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the session was created with the current request; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.SessionState.HttpSessionStateContainer.IsNewSession*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionStateContainer.IsReadOnly
  id: IsReadOnly
  parent: System.Web.SessionState.HttpSessionStateContainer
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: HttpSessionStateContainer.IsReadOnly
  fullName: System.Web.SessionState.HttpSessionStateContainer.IsReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Gets a value indicating whether the session is read-only."
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the session is read-only; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.SessionState.HttpSessionStateContainer.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionStateContainer.IsSynchronized
  id: IsSynchronized
  parent: System.Web.SessionState.HttpSessionStateContainer
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: HttpSessionStateContainer.IsSynchronized
  fullName: System.Web.SessionState.HttpSessionStateContainer.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Gets a value indicating whether access to the collection of session-state values is synchronized (thread safe)."
  remarks: "Application code does not normally use this property."
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>, because thread-safe <xref href=&quot;System.Web.SessionState.HttpSessionStateContainer&quot;></xref> objects are not supported."
  overload: System.Web.SessionState.HttpSessionStateContainer.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionStateContainer.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.SessionState.HttpSessionStateContainer
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: HttpSessionStateContainer.Item(Int32)
  fullName: System.Web.SessionState.HttpSessionStateContainer.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Gets or sets a session value by numerical index."
  syntax:
    content: public object this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "The numerical index of the session value."
    return:
      type: System.Object
      description: "The session-state value stored at the specified index."
  overload: System.Web.SessionState.HttpSessionStateContainer.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionStateContainer.Item(System.String)
  id: Item(System.String)
  parent: System.Web.SessionState.HttpSessionStateContainer
  langs:
  - csharp
  name: Item(String)
  nameWithType: HttpSessionStateContainer.Item(String)
  fullName: System.Web.SessionState.HttpSessionStateContainer.Item(String)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Gets or sets a session value by name."
  syntax:
    content: public object this[string name] { get; set; }
    parameters:
    - id: name
      type: System.String
      description: "The key name of the session value."
    return:
      type: System.Object
      description: "The session-state value with the specified name."
  overload: System.Web.SessionState.HttpSessionStateContainer.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionStateContainer.Keys
  id: Keys
  parent: System.Web.SessionState.HttpSessionStateContainer
  langs:
  - csharp
  name: Keys
  nameWithType: HttpSessionStateContainer.Keys
  fullName: System.Web.SessionState.HttpSessionStateContainer.Keys
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Gets a collection of the keys for all values stored in the session-state collection."
  syntax:
    content: public System.Collections.Specialized.NameObjectCollectionBase.KeysCollection Keys { get; }
    return:
      type: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection
      description: "The <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection> that contains all the session keys."
  overload: System.Web.SessionState.HttpSessionStateContainer.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionStateContainer.LCID
  id: LCID
  parent: System.Web.SessionState.HttpSessionStateContainer
  langs:
  - csharp
  name: LCID
  nameWithType: HttpSessionStateContainer.LCID
  fullName: System.Web.SessionState.HttpSessionStateContainer.LCID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Gets or sets the locale identifier (LCID) of the current session."
  remarks: "The LCID property is provided for compatibility with earlier versions of ASP only. If you do not need to maintain backward compatibility with ASP pages, use the <xref:System.Globalization.CultureInfo.LCID%2A> property instead.       ASP.NET does not store the locale identifier in session state. The LCID property accesses the <xref:System.Globalization.CultureInfo.LCID%2A> property to get and set the identifier."
  syntax:
    content: public int LCID { get; set; }
    return:
      type: System.Int32
      description: "A <xref:System.Globalization.CultureInfo> instance that specifies the culture of the current session."
  overload: System.Web.SessionState.HttpSessionStateContainer.LCID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionStateContainer.Mode
  id: Mode
  parent: System.Web.SessionState.HttpSessionStateContainer
  langs:
  - csharp
  name: Mode
  nameWithType: HttpSessionStateContainer.Mode
  fullName: System.Web.SessionState.HttpSessionStateContainer.Mode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Gets the current session-state mode."
  remarks: "For information about how to configure your server for <xref:System.Web.SessionState.SessionStateMode> or <xref:System.Web.SessionState.SessionStateMode> session-state storage mode, see [ASP.NET Session State Overview](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Web.SessionState.SessionStateMode Mode { get; }
    return:
      type: System.Web.SessionState.SessionStateMode
      description: "One of the <xref href=&quot;System.Web.SessionState.SessionStateMode&quot;></xref> values."
  overload: System.Web.SessionState.HttpSessionStateContainer.Mode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionStateContainer.Remove(System.String)
  id: Remove(System.String)
  parent: System.Web.SessionState.HttpSessionStateContainer
  langs:
  - csharp
  name: Remove(String)
  nameWithType: HttpSessionStateContainer.Remove(String)
  fullName: System.Web.SessionState.HttpSessionStateContainer.Remove(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Deletes an item from the session-state collection."
  remarks: "If the session-state collection does not contain an element with the specified `name`, the collection remains unchanged. No exception is thrown."
  syntax:
    content: public void Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: "The name of the item to delete from the session-state collection."
  overload: System.Web.SessionState.HttpSessionStateContainer.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionStateContainer.RemoveAll
  id: RemoveAll
  parent: System.Web.SessionState.HttpSessionStateContainer
  langs:
  - csharp
  name: RemoveAll()
  nameWithType: HttpSessionStateContainer.RemoveAll()
  fullName: System.Web.SessionState.HttpSessionStateContainer.RemoveAll()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Clears all session-state values."
  remarks: "RemoveAll performs the same function as <xref:System.Web.SessionState.HttpSessionStateContainer.Clear%2A>."
  syntax:
    content: public void RemoveAll ();
    parameters: []
  overload: System.Web.SessionState.HttpSessionStateContainer.RemoveAll*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionStateContainer.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.SessionState.HttpSessionStateContainer
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: HttpSessionStateContainer.RemoveAt(Int32)
  fullName: System.Web.SessionState.HttpSessionStateContainer.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Deletes an item at a specified index from the session-state collection."
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "The index of the item to remove from the session-state collection."
  overload: System.Web.SessionState.HttpSessionStateContainer.RemoveAt*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code> is less than zero.  \n  \n \\- or -  \n  \n <code>index</code> is equal to or greater than <xref:System.Web.SessionState.HttpSessionStateContainer.Count*>."
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionStateContainer.SessionID
  id: SessionID
  parent: System.Web.SessionState.HttpSessionStateContainer
  langs:
  - csharp
  name: SessionID
  nameWithType: HttpSessionStateContainer.SessionID
  fullName: System.Web.SessionState.HttpSessionStateContainer.SessionID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Gets the unique identifier for the session."
  syntax:
    content: public string SessionID { get; }
    return:
      type: System.String
      description: "The unique session identifier."
  overload: System.Web.SessionState.HttpSessionStateContainer.SessionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionStateContainer.StaticObjects
  id: StaticObjects
  parent: System.Web.SessionState.HttpSessionStateContainer
  langs:
  - csharp
  name: StaticObjects
  nameWithType: HttpSessionStateContainer.StaticObjects
  fullName: System.Web.SessionState.HttpSessionStateContainer.StaticObjects
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Gets a collection of objects declared by <xref uid=&quot;langword_csharp_&lt;object Runat=&quot;Server&quot; Scope=&quot;Session&quot;/&gt;&quot; name=&quot;&lt;object Runat=&quot;Server&quot; Scope=&quot;Session&quot;/&gt;&quot; href=&quot;&quot;></xref> tags within the ASP.NET application file Global.asax."
  remarks: "If an object on a page does not support serialization and <xref:System.Web.SessionState.HttpSessionStateContainer.Mode%2A> is out-of-process (<xref:System.Web.SessionState.SessionStateMode> or <xref:System.Web.SessionState.SessionStateMode>), the object will not be created and will not be added to this collection.       StaticObjects is provided for compatibility with earlier versions of ASP."
  syntax:
    content: public System.Web.HttpStaticObjectsCollection StaticObjects { get; }
    return:
      type: System.Web.HttpStaticObjectsCollection
      description: "An <xref href=&quot;System.Web.HttpStaticObjectsCollection&quot;></xref> containing objects declared in the Global.asax file."
  overload: System.Web.SessionState.HttpSessionStateContainer.StaticObjects*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionStateContainer.SyncRoot
  id: SyncRoot
  parent: System.Web.SessionState.HttpSessionStateContainer
  langs:
  - csharp
  name: SyncRoot
  nameWithType: HttpSessionStateContainer.SyncRoot
  fullName: System.Web.SessionState.HttpSessionStateContainer.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Gets an object that can be used to synchronize access to the collection of session-state values."
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "An object that can be used to synchronize access to the collection."
  overload: System.Web.SessionState.HttpSessionStateContainer.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionStateContainer.Timeout
  id: Timeout
  parent: System.Web.SessionState.HttpSessionStateContainer
  langs:
  - csharp
  name: Timeout
  nameWithType: HttpSessionStateContainer.Timeout
  fullName: System.Web.SessionState.HttpSessionStateContainer.Timeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Gets and sets the amount of time, in minutes, allowed between requests before the session-state provider terminates the session."
  syntax:
    content: public int Timeout { get; set; }
    return:
      type: System.Int32
      description: "The time-out period, in minutes."
  overload: System.Web.SessionState.HttpSessionStateContainer.Timeout*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "An attempt was made to set the Timeout value to an integer value less than 1.  \n  \n \\- or -  \n  \n An attempt was made to set the Timeout value to an integer value greater than the maximum allowed when <xref:System.Web.SessionState.HttpSessionState.Mode*> is set to <xref href=\"System.Web.SessionState.SessionStateMode\"></xref> or <xref href=\"System.Web.SessionState.SessionStateMode\"></xref>. The maximum allowed is 525,600 (one year)."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.SessionState.HttpSessionStateContainer.#ctor(System.String,System.Web.SessionState.ISessionStateItemCollection,System.Web.HttpStaticObjectsCollection,System.Int32,System.Boolean,System.Web.HttpCookieMode,System.Web.SessionState.SessionStateMode,System.Boolean)
  parent: System.Web.SessionState.HttpSessionStateContainer
  isExternal: false
  name: HttpSessionStateContainer(String,ISessionStateItemCollection,HttpStaticObjectsCollection,Int32,Boolean,HttpCookieMode,SessionStateMode,Boolean)
  nameWithType: HttpSessionStateContainer.HttpSessionStateContainer(String,ISessionStateItemCollection,HttpStaticObjectsCollection,Int32,Boolean,HttpCookieMode,SessionStateMode,Boolean)
  fullName: System.Web.SessionState.HttpSessionStateContainer.HttpSessionStateContainer(String,ISessionStateItemCollection,HttpStaticObjectsCollection,Int32,Boolean,HttpCookieMode,SessionStateMode,Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.SessionState.ISessionStateItemCollection
  parent: System.Web.SessionState
  isExternal: false
  name: ISessionStateItemCollection
  nameWithType: ISessionStateItemCollection
  fullName: System.Web.SessionState.ISessionStateItemCollection
- uid: System.Web.HttpStaticObjectsCollection
  parent: System.Web
  isExternal: false
  name: HttpStaticObjectsCollection
  nameWithType: HttpStaticObjectsCollection
  fullName: System.Web.HttpStaticObjectsCollection
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.HttpCookieMode
  parent: System.Web
  isExternal: false
  name: HttpCookieMode
  nameWithType: HttpCookieMode
  fullName: System.Web.HttpCookieMode
- uid: System.Web.SessionState.SessionStateMode
  parent: System.Web.SessionState
  isExternal: false
  name: SessionStateMode
  nameWithType: SessionStateMode
  fullName: System.Web.SessionState.SessionStateMode
- uid: System.Web.SessionState.HttpSessionStateContainer.Abandon
  parent: System.Web.SessionState.HttpSessionStateContainer
  isExternal: false
  name: Abandon()
  nameWithType: HttpSessionStateContainer.Abandon()
  fullName: System.Web.SessionState.HttpSessionStateContainer.Abandon()
- uid: System.Web.SessionState.HttpSessionStateContainer.Add(System.String,System.Object)
  parent: System.Web.SessionState.HttpSessionStateContainer
  isExternal: false
  name: Add(String,Object)
  nameWithType: HttpSessionStateContainer.Add(String,Object)
  fullName: System.Web.SessionState.HttpSessionStateContainer.Add(String,Object)
- uid: System.Web.SessionState.HttpSessionStateContainer.Clear
  parent: System.Web.SessionState.HttpSessionStateContainer
  isExternal: false
  name: Clear()
  nameWithType: HttpSessionStateContainer.Clear()
  fullName: System.Web.SessionState.HttpSessionStateContainer.Clear()
- uid: System.Web.SessionState.HttpSessionStateContainer.CodePage
  parent: System.Web.SessionState.HttpSessionStateContainer
  isExternal: false
  name: CodePage
  nameWithType: HttpSessionStateContainer.CodePage
  fullName: System.Web.SessionState.HttpSessionStateContainer.CodePage
- uid: System.Web.SessionState.HttpSessionStateContainer.CookieMode
  parent: System.Web.SessionState.HttpSessionStateContainer
  isExternal: false
  name: CookieMode
  nameWithType: HttpSessionStateContainer.CookieMode
  fullName: System.Web.SessionState.HttpSessionStateContainer.CookieMode
- uid: System.Web.SessionState.HttpSessionStateContainer.CopyTo(System.Array,System.Int32)
  parent: System.Web.SessionState.HttpSessionStateContainer
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: HttpSessionStateContainer.CopyTo(Array,Int32)
  fullName: System.Web.SessionState.HttpSessionStateContainer.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Web.SessionState.HttpSessionStateContainer.Count
  parent: System.Web.SessionState.HttpSessionStateContainer
  isExternal: false
  name: Count
  nameWithType: HttpSessionStateContainer.Count
  fullName: System.Web.SessionState.HttpSessionStateContainer.Count
- uid: System.Web.SessionState.HttpSessionStateContainer.GetEnumerator
  parent: System.Web.SessionState.HttpSessionStateContainer
  isExternal: false
  name: GetEnumerator()
  nameWithType: HttpSessionStateContainer.GetEnumerator()
  fullName: System.Web.SessionState.HttpSessionStateContainer.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.SessionState.HttpSessionStateContainer.IsAbandoned
  parent: System.Web.SessionState.HttpSessionStateContainer
  isExternal: false
  name: IsAbandoned
  nameWithType: HttpSessionStateContainer.IsAbandoned
  fullName: System.Web.SessionState.HttpSessionStateContainer.IsAbandoned
- uid: System.Web.SessionState.HttpSessionStateContainer.IsCookieless
  parent: System.Web.SessionState.HttpSessionStateContainer
  isExternal: false
  name: IsCookieless
  nameWithType: HttpSessionStateContainer.IsCookieless
  fullName: System.Web.SessionState.HttpSessionStateContainer.IsCookieless
- uid: System.Web.SessionState.HttpSessionStateContainer.IsNewSession
  parent: System.Web.SessionState.HttpSessionStateContainer
  isExternal: false
  name: IsNewSession
  nameWithType: HttpSessionStateContainer.IsNewSession
  fullName: System.Web.SessionState.HttpSessionStateContainer.IsNewSession
- uid: System.Web.SessionState.HttpSessionStateContainer.IsReadOnly
  parent: System.Web.SessionState.HttpSessionStateContainer
  isExternal: false
  name: IsReadOnly
  nameWithType: HttpSessionStateContainer.IsReadOnly
  fullName: System.Web.SessionState.HttpSessionStateContainer.IsReadOnly
- uid: System.Web.SessionState.HttpSessionStateContainer.IsSynchronized
  parent: System.Web.SessionState.HttpSessionStateContainer
  isExternal: false
  name: IsSynchronized
  nameWithType: HttpSessionStateContainer.IsSynchronized
  fullName: System.Web.SessionState.HttpSessionStateContainer.IsSynchronized
- uid: System.Web.SessionState.HttpSessionStateContainer.Item(System.Int32)
  parent: System.Web.SessionState.HttpSessionStateContainer
  isExternal: false
  name: Item(Int32)
  nameWithType: HttpSessionStateContainer.Item(Int32)
  fullName: System.Web.SessionState.HttpSessionStateContainer.Item(Int32)
- uid: System.Web.SessionState.HttpSessionStateContainer.Item(System.String)
  parent: System.Web.SessionState.HttpSessionStateContainer
  isExternal: false
  name: Item(String)
  nameWithType: HttpSessionStateContainer.Item(String)
  fullName: System.Web.SessionState.HttpSessionStateContainer.Item(String)
- uid: System.Web.SessionState.HttpSessionStateContainer.Keys
  parent: System.Web.SessionState.HttpSessionStateContainer
  isExternal: false
  name: Keys
  nameWithType: HttpSessionStateContainer.Keys
  fullName: System.Web.SessionState.HttpSessionStateContainer.Keys
- uid: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameObjectCollectionBase+KeysCollection
  nameWithType: NameObjectCollectionBase+KeysCollection
  fullName: System.Collections.Specialized.NameObjectCollectionBase+KeysCollection
- uid: System.Web.SessionState.HttpSessionStateContainer.LCID
  parent: System.Web.SessionState.HttpSessionStateContainer
  isExternal: false
  name: LCID
  nameWithType: HttpSessionStateContainer.LCID
  fullName: System.Web.SessionState.HttpSessionStateContainer.LCID
- uid: System.Web.SessionState.HttpSessionStateContainer.Mode
  parent: System.Web.SessionState.HttpSessionStateContainer
  isExternal: false
  name: Mode
  nameWithType: HttpSessionStateContainer.Mode
  fullName: System.Web.SessionState.HttpSessionStateContainer.Mode
- uid: System.Web.SessionState.HttpSessionStateContainer.Remove(System.String)
  parent: System.Web.SessionState.HttpSessionStateContainer
  isExternal: false
  name: Remove(String)
  nameWithType: HttpSessionStateContainer.Remove(String)
  fullName: System.Web.SessionState.HttpSessionStateContainer.Remove(String)
- uid: System.Web.SessionState.HttpSessionStateContainer.RemoveAll
  parent: System.Web.SessionState.HttpSessionStateContainer
  isExternal: false
  name: RemoveAll()
  nameWithType: HttpSessionStateContainer.RemoveAll()
  fullName: System.Web.SessionState.HttpSessionStateContainer.RemoveAll()
- uid: System.Web.SessionState.HttpSessionStateContainer.RemoveAt(System.Int32)
  parent: System.Web.SessionState.HttpSessionStateContainer
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: HttpSessionStateContainer.RemoveAt(Int32)
  fullName: System.Web.SessionState.HttpSessionStateContainer.RemoveAt(Int32)
- uid: System.Web.SessionState.HttpSessionStateContainer.SessionID
  parent: System.Web.SessionState.HttpSessionStateContainer
  isExternal: false
  name: SessionID
  nameWithType: HttpSessionStateContainer.SessionID
  fullName: System.Web.SessionState.HttpSessionStateContainer.SessionID
- uid: System.Web.SessionState.HttpSessionStateContainer.StaticObjects
  parent: System.Web.SessionState.HttpSessionStateContainer
  isExternal: false
  name: StaticObjects
  nameWithType: HttpSessionStateContainer.StaticObjects
  fullName: System.Web.SessionState.HttpSessionStateContainer.StaticObjects
- uid: System.Web.SessionState.HttpSessionStateContainer.SyncRoot
  parent: System.Web.SessionState.HttpSessionStateContainer
  isExternal: false
  name: SyncRoot
  nameWithType: HttpSessionStateContainer.SyncRoot
  fullName: System.Web.SessionState.HttpSessionStateContainer.SyncRoot
- uid: System.Web.SessionState.HttpSessionStateContainer.Timeout
  parent: System.Web.SessionState.HttpSessionStateContainer
  isExternal: false
  name: Timeout
  nameWithType: HttpSessionStateContainer.Timeout
  fullName: System.Web.SessionState.HttpSessionStateContainer.Timeout
- uid: System.Web.SessionState.HttpSessionStateContainer.#ctor*
  parent: System.Web.SessionState.HttpSessionStateContainer
  isExternal: false
  name: HttpSessionStateContainer
  nameWithType: HttpSessionStateContainer.HttpSessionStateContainer
- uid: System.Web.SessionState.HttpSessionStateContainer.Abandon*
  parent: System.Web.SessionState.HttpSessionStateContainer
  isExternal: false
  name: Abandon
  nameWithType: HttpSessionStateContainer.Abandon
- uid: System.Web.SessionState.HttpSessionStateContainer.Add*
  parent: System.Web.SessionState.HttpSessionStateContainer
  isExternal: false
  name: Add
  nameWithType: HttpSessionStateContainer.Add
- uid: System.Web.SessionState.HttpSessionStateContainer.Clear*
  parent: System.Web.SessionState.HttpSessionStateContainer
  isExternal: false
  name: Clear
  nameWithType: HttpSessionStateContainer.Clear
- uid: System.Web.SessionState.HttpSessionStateContainer.CodePage*
  parent: System.Web.SessionState.HttpSessionStateContainer
  isExternal: false
  name: CodePage
  nameWithType: HttpSessionStateContainer.CodePage
- uid: System.Web.SessionState.HttpSessionStateContainer.CookieMode*
  parent: System.Web.SessionState.HttpSessionStateContainer
  isExternal: false
  name: CookieMode
  nameWithType: HttpSessionStateContainer.CookieMode
- uid: System.Web.SessionState.HttpSessionStateContainer.CopyTo*
  parent: System.Web.SessionState.HttpSessionStateContainer
  isExternal: false
  name: CopyTo
  nameWithType: HttpSessionStateContainer.CopyTo
- uid: System.Web.SessionState.HttpSessionStateContainer.Count*
  parent: System.Web.SessionState.HttpSessionStateContainer
  isExternal: false
  name: Count
  nameWithType: HttpSessionStateContainer.Count
- uid: System.Web.SessionState.HttpSessionStateContainer.GetEnumerator*
  parent: System.Web.SessionState.HttpSessionStateContainer
  isExternal: false
  name: GetEnumerator
  nameWithType: HttpSessionStateContainer.GetEnumerator
- uid: System.Web.SessionState.HttpSessionStateContainer.IsAbandoned*
  parent: System.Web.SessionState.HttpSessionStateContainer
  isExternal: false
  name: IsAbandoned
  nameWithType: HttpSessionStateContainer.IsAbandoned
- uid: System.Web.SessionState.HttpSessionStateContainer.IsCookieless*
  parent: System.Web.SessionState.HttpSessionStateContainer
  isExternal: false
  name: IsCookieless
  nameWithType: HttpSessionStateContainer.IsCookieless
- uid: System.Web.SessionState.HttpSessionStateContainer.IsNewSession*
  parent: System.Web.SessionState.HttpSessionStateContainer
  isExternal: false
  name: IsNewSession
  nameWithType: HttpSessionStateContainer.IsNewSession
- uid: System.Web.SessionState.HttpSessionStateContainer.IsReadOnly*
  parent: System.Web.SessionState.HttpSessionStateContainer
  isExternal: false
  name: IsReadOnly
  nameWithType: HttpSessionStateContainer.IsReadOnly
- uid: System.Web.SessionState.HttpSessionStateContainer.IsSynchronized*
  parent: System.Web.SessionState.HttpSessionStateContainer
  isExternal: false
  name: IsSynchronized
  nameWithType: HttpSessionStateContainer.IsSynchronized
- uid: System.Web.SessionState.HttpSessionStateContainer.Item*
  parent: System.Web.SessionState.HttpSessionStateContainer
  isExternal: false
  name: Item
  nameWithType: HttpSessionStateContainer.Item
- uid: System.Web.SessionState.HttpSessionStateContainer.Keys*
  parent: System.Web.SessionState.HttpSessionStateContainer
  isExternal: false
  name: Keys
  nameWithType: HttpSessionStateContainer.Keys
- uid: System.Web.SessionState.HttpSessionStateContainer.LCID*
  parent: System.Web.SessionState.HttpSessionStateContainer
  isExternal: false
  name: LCID
  nameWithType: HttpSessionStateContainer.LCID
- uid: System.Web.SessionState.HttpSessionStateContainer.Mode*
  parent: System.Web.SessionState.HttpSessionStateContainer
  isExternal: false
  name: Mode
  nameWithType: HttpSessionStateContainer.Mode
- uid: System.Web.SessionState.HttpSessionStateContainer.Remove*
  parent: System.Web.SessionState.HttpSessionStateContainer
  isExternal: false
  name: Remove
  nameWithType: HttpSessionStateContainer.Remove
- uid: System.Web.SessionState.HttpSessionStateContainer.RemoveAll*
  parent: System.Web.SessionState.HttpSessionStateContainer
  isExternal: false
  name: RemoveAll
  nameWithType: HttpSessionStateContainer.RemoveAll
- uid: System.Web.SessionState.HttpSessionStateContainer.RemoveAt*
  parent: System.Web.SessionState.HttpSessionStateContainer
  isExternal: false
  name: RemoveAt
  nameWithType: HttpSessionStateContainer.RemoveAt
- uid: System.Web.SessionState.HttpSessionStateContainer.SessionID*
  parent: System.Web.SessionState.HttpSessionStateContainer
  isExternal: false
  name: SessionID
  nameWithType: HttpSessionStateContainer.SessionID
- uid: System.Web.SessionState.HttpSessionStateContainer.StaticObjects*
  parent: System.Web.SessionState.HttpSessionStateContainer
  isExternal: false
  name: StaticObjects
  nameWithType: HttpSessionStateContainer.StaticObjects
- uid: System.Web.SessionState.HttpSessionStateContainer.SyncRoot*
  parent: System.Web.SessionState.HttpSessionStateContainer
  isExternal: false
  name: SyncRoot
  nameWithType: HttpSessionStateContainer.SyncRoot
- uid: System.Web.SessionState.HttpSessionStateContainer.Timeout*
  parent: System.Web.SessionState.HttpSessionStateContainer
  isExternal: false
  name: Timeout
  nameWithType: HttpSessionStateContainer.Timeout
