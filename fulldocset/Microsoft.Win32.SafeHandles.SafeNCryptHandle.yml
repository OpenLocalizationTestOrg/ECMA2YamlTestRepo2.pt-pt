### YamlMime:ManagedReference
items:
- uid: Microsoft.Win32.SafeHandles.SafeNCryptHandle
  id: SafeNCryptHandle
  children:
  - Microsoft.Win32.SafeHandles.SafeNCryptHandle.#ctor
  - Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseHandle
  - Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseNativeHandle
  langs:
  - csharp
  name: SafeNCryptHandle
  nameWithType: SafeNCryptHandle
  fullName: Microsoft.Win32.SafeHandles.SafeNCryptHandle
  type: Class
  summary: "Provides a safe handle that can be used by Cryptography Next Generation (CNG) objects."
  syntax:
    content: >-
      [System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]

      public abstract class SafeNCryptHandle : Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
  inheritance:
  - System.Runtime.InteropServices.SafeHandle
  - Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
  implements: []
  inheritedMembers:
  - Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid
  platform:
  - net462
- uid: Microsoft.Win32.SafeHandles.SafeNCryptHandle.#ctor
  id: '#ctor'
  parent: Microsoft.Win32.SafeHandles.SafeNCryptHandle
  langs:
  - csharp
  name: SafeNCryptHandle()
  nameWithType: SafeNCryptHandle.SafeNCryptHandle()
  fullName: Microsoft.Win32.SafeHandles.SafeNCryptHandle.SafeNCryptHandle()
  type: Constructor
  assemblies:
  - System.Core
  namespace: Microsoft.Win32.SafeHandles
  summary: "Initializes a new instance of the <xref href=&quot;Microsoft.Win32.SafeHandles.SafeNCryptHandle&quot;></xref> class."
  syntax:
    content: protected SafeNCryptHandle ();
    parameters: []
  overload: Microsoft.Win32.SafeHandles.SafeNCryptHandle.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseHandle
  id: ReleaseHandle
  parent: Microsoft.Win32.SafeHandles.SafeNCryptHandle
  langs:
  - csharp
  name: ReleaseHandle()
  nameWithType: SafeNCryptHandle.ReleaseHandle()
  fullName: Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseHandle()
  type: Method
  assemblies:
  - System.Core
  namespace: Microsoft.Win32.SafeHandles
  summary: "Releases a handle used by a Cryptography Next Generation (CNG) object."
  syntax:
    content: protected override bool ReleaseHandle ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the handle is released successfully; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseHandle*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseNativeHandle
  id: ReleaseNativeHandle
  parent: Microsoft.Win32.SafeHandles.SafeNCryptHandle
  langs:
  - csharp
  name: ReleaseNativeHandle()
  nameWithType: SafeNCryptHandle.ReleaseNativeHandle()
  fullName: Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseNativeHandle()
  type: Method
  assemblies:
  - System.Core
  namespace: Microsoft.Win32.SafeHandles
  summary: "Releases a native handle used by a Cryptography Next Generation (CNG) object."
  syntax:
    content: protected abstract bool ReleaseNativeHandle ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the handle is released successfully; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseNativeHandle*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
  isExternal: false
  name: Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
- uid: Microsoft.Win32.SafeHandles.SafeNCryptHandle.#ctor
  parent: Microsoft.Win32.SafeHandles.SafeNCryptHandle
  isExternal: false
  name: SafeNCryptHandle()
  nameWithType: SafeNCryptHandle.SafeNCryptHandle()
  fullName: Microsoft.Win32.SafeHandles.SafeNCryptHandle.SafeNCryptHandle()
- uid: Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseHandle
  parent: Microsoft.Win32.SafeHandles.SafeNCryptHandle
  isExternal: false
  name: ReleaseHandle()
  nameWithType: SafeNCryptHandle.ReleaseHandle()
  fullName: Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseHandle()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseNativeHandle
  parent: Microsoft.Win32.SafeHandles.SafeNCryptHandle
  isExternal: false
  name: ReleaseNativeHandle()
  nameWithType: SafeNCryptHandle.ReleaseNativeHandle()
  fullName: Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseNativeHandle()
- uid: Microsoft.Win32.SafeHandles.SafeNCryptHandle.#ctor*
  parent: Microsoft.Win32.SafeHandles.SafeNCryptHandle
  isExternal: false
  name: SafeNCryptHandle
  nameWithType: SafeNCryptHandle.SafeNCryptHandle
- uid: Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseHandle*
  parent: Microsoft.Win32.SafeHandles.SafeNCryptHandle
  isExternal: false
  name: ReleaseHandle
  nameWithType: SafeNCryptHandle.ReleaseHandle
- uid: Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseNativeHandle*
  parent: Microsoft.Win32.SafeHandles.SafeNCryptHandle
  isExternal: false
  name: ReleaseNativeHandle
  nameWithType: SafeNCryptHandle.ReleaseNativeHandle
