### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.DesignerActionItem
  id: DesignerActionItem
  children:
  - System.ComponentModel.Design.DesignerActionItem.#ctor(System.String,System.String,System.String)
  - System.ComponentModel.Design.DesignerActionItem.AllowAssociate
  - System.ComponentModel.Design.DesignerActionItem.Category
  - System.ComponentModel.Design.DesignerActionItem.Description
  - System.ComponentModel.Design.DesignerActionItem.DisplayName
  - System.ComponentModel.Design.DesignerActionItem.Properties
  - System.ComponentModel.Design.DesignerActionItem.ShowInSourceView
  langs:
  - csharp
  name: DesignerActionItem
  nameWithType: DesignerActionItem
  fullName: System.ComponentModel.Design.DesignerActionItem
  type: Class
  summary: "Provides the base class for types that represent a panel item on a smart tag panel."
  remarks: "The DesignerActionItem class serves as an abstract base for classes that represent individual panel items in a smart tag panel, which represents a menu-like user interface (UI) for smart tags. The [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] supplies derived classes that represent the different common entries in a smart tag panel, including plain text, header text, properties and methods of the associated <xref:System.ComponentModel.Design.DesignerActionList> class, and designer verbs.       Typically, your `DesignerAction` feature is defined in a programmer-supplied class derived from <xref:System.ComponentModel.Design.DesignerActionList>, which contains a <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> method that groups individual panel items together to form the smart tag panel. The <xref:System.ComponentModel.Design.DesignerActionPropertyItem> and <xref:System.ComponentModel.Design.DesignerActionMethodItem> types are associated with members of the class derived from <xref:System.ComponentModel.Design.DesignerActionList>, and <xref:System.ComponentModel.Design.DesignerActionMethodItem> objects are activated when their associated panel entry is selected by the user.      > [!NOTE] >  Forms and dialog boxes can be displayed by members of the class derived from <xref:System.ComponentModel.Design.DesignerActionList>. By default, the parent of these windows will be the container window for the smart tag panel. Explicitly parenting these child windows to another service or window may cause items to display improperly."
  example:
  - "The following code example demonstrates how to create a collection of DesignerActionItem objects.  \n  \n For a full example of implementing smart tags, see [How to: Attach Smart Tags to a Windows Forms Component](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/add/codesnippet/visualbasic/t-system.componentmodel._21_1.vb)]\n [!code-cs[System.ComponentModel.Design.DesignerAction.AddSmartTagsToWFComponent#7](~/add/codesnippet/csharp/t-system.componentmodel._21_1.cs)]"
  syntax:
    content: public abstract class DesignerActionItem
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionItem.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.ComponentModel.Design.DesignerActionItem
  langs:
  - csharp
  name: DesignerActionItem(String,String,String)
  nameWithType: DesignerActionItem.DesignerActionItem(String,String,String)
  fullName: System.ComponentModel.Design.DesignerActionItem.DesignerActionItem(String,String,String)
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Initializes a new instance of the <xref href=&quot;System.ComponentModel.Design.DesignerActionItem&quot;></xref> class."
  remarks: "Because <xref:System.ComponentModel.Design.DesignerActionItem> is an abstract class, the DesignerActionItem constructor is intended to be called from derived classes only.       For more information about how the `category` parameter is used to group items on a panel, see the <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> method."
  syntax:
    content: public DesignerActionItem (string displayName, string category, string description);
    parameters:
    - id: displayName
      type: System.String
      description: "The panel text for this item."
    - id: category
      type: System.String
      description: "The case-sensitive <xref:System.String> that defines the groupings of panel entries."
    - id: description
      type: System.String
      description: "Supplemental text for this item, potentially used in ToolTips or the status bar."
  overload: System.ComponentModel.Design.DesignerActionItem.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionItem.AllowAssociate
  id: AllowAssociate
  parent: System.ComponentModel.Design.DesignerActionItem
  langs:
  - csharp
  name: AllowAssociate
  nameWithType: DesignerActionItem.AllowAssociate
  fullName: System.ComponentModel.Design.DesignerActionItem.AllowAssociate
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Gets or sets a value indicating whether to allow this item to be placed into a group of items that have the same <xref:System.ComponentModel.Design.DesignerActionItem.Category*> property value."
  remarks: "Because multiple <xref:System.ComponentModel.Design.DesignerActionList> objects may be combined to form a single smart tag panel, the AllowAssociate property indicates whether the current item can be rearranged by category.       The AllowAssociate property is used in conjunction with the <xref:System.ComponentModel.Design.DesignerActionMethodItem.RelatedComponent%2A> property on the <xref:System.ComponentModel.Design.DesignerActionMethodItem> and <xref:System.ComponentModel.Design.DesignerActionPropertyItem> types.       For example, ASP.NET uses a data-bound control like <xref:System.Web.UI.WebControls.GridView> to connect to a data source control like <xref:System.Web.UI.WebControls.SqlDataSource>. Both have a <xref:System.ComponentModel.Design.DesignerActionList> with its own set of <xref:System.ComponentModel.Design.DesignerActionItem> objects. The <xref:System.Web.UI.WebControls.GridView> control has items like <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A>, `Edit Fields`, and `AutoFormat`. The <xref:System.Web.UI.WebControls.SqlDataSource> class has `Configure` and `Refresh Items`, which have AllowAssociate set to `true`.       The <xref:System.Web.UI.WebControls.GridView> control&quot;s <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A> item has a related component, which is the <xref:System.Web.UI.WebControls.SqlDataSource> object. All the <xref:System.Web.UI.WebControls.SqlDataSource> object&quot;s items that have AllowAssociate set to `true` are automatically included in the <xref:System.Web.UI.WebControls.GridView> control&quot;s action list. The following table shows how the two lists are merged in the <xref:System.Web.UI.WebControls.GridView> control&quot;s designer action list.      |GridView items|SqlDataSource items|   |--------------------|-------------------------|   |-   `DataSourceID` (related component = `SqlDataSource`)<br />-   Edit Fields<br />-   AutoFormat|-   Configure (`AllowAssociate` = `true`)<br />-   Refresh (`AllowAssociate` = `true`)|      |Merged GridView control&quot;s smart tasks panel|   |-------------------------------------------------|   |-   DataSourceID<br />-   Configure<br />-   Refresh<br />-   Edit Fields<br />-   AutoFormat|"
  syntax:
    content: public bool AllowAssociate { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the item can be grouped; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ComponentModel.Design.DesignerActionItem.AllowAssociate*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionItem.Category
  id: Category
  parent: System.ComponentModel.Design.DesignerActionItem
  langs:
  - csharp
  name: Category
  nameWithType: DesignerActionItem.Category
  fullName: System.ComponentModel.Design.DesignerActionItem.Category
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Gets the group name for an item."
  remarks: "Item categories are defined by their names, which are case-sensitive.       For more information about how items are grouped by category, see the <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> method."
  syntax:
    content: public virtual string Category { get; }
    return:
      type: System.String
      description: "A string that represents the group that the item is a member of."
  overload: System.ComponentModel.Design.DesignerActionItem.Category*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionItem.Description
  id: Description
  parent: System.ComponentModel.Design.DesignerActionItem
  langs:
  - csharp
  name: Description
  nameWithType: DesignerActionItem.Description
  fullName: System.ComponentModel.Design.DesignerActionItem.Description
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Gets the supplemental text for the item."
  remarks: "The Description property is used whenever a plain text description of the item is required (for example, in ToolTips and the status bar).       The value of this property is set in the constructor for this class."
  syntax:
    content: public virtual string Description { get; }
    return:
      type: System.String
      description: "A <xref:System.String> that contains the descriptive text for the item."
  overload: System.ComponentModel.Design.DesignerActionItem.Description*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionItem.DisplayName
  id: DisplayName
  parent: System.ComponentModel.Design.DesignerActionItem
  langs:
  - csharp
  name: DisplayName
  nameWithType: DesignerActionItem.DisplayName
  fullName: System.ComponentModel.Design.DesignerActionItem.DisplayName
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Gets the text for this item."
  remarks: "The value of the DisplayName property is set in the constructor for this class."
  syntax:
    content: public virtual string DisplayName { get; }
    return:
      type: System.String
      description: "A <xref:System.String> that contains the display text for the item."
  overload: System.ComponentModel.Design.DesignerActionItem.DisplayName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionItem.Properties
  id: Properties
  parent: System.ComponentModel.Design.DesignerActionItem
  langs:
  - csharp
  name: Properties
  nameWithType: DesignerActionItem.Properties
  fullName: System.ComponentModel.Design.DesignerActionItem.Properties
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Gets a reference to a collection that can be used to store programmer-defined key/value pairs."
  remarks: "The Properties property allows the programmer to store arbitrary data within an item. The standard properties for this class, such as <xref:System.ComponentModel.Design.DesignerActionItem.Category%2A> and <xref:System.ComponentModel.Design.DesignerActionItem.DisplayName%2A>, are not stored in this collection.       The type of this property is actually <xref:System.Collections.Specialized.HybridDictionary?displayProperty=fullName>."
  syntax:
    content: public System.Collections.IDictionary Properties { get; }
    return:
      type: System.Collections.IDictionary
      description: "A collection that implements <xref:System.Collections.IDictionary>."
  overload: System.ComponentModel.Design.DesignerActionItem.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionItem.ShowInSourceView
  id: ShowInSourceView
  parent: System.ComponentModel.Design.DesignerActionItem
  langs:
  - csharp
  name: ShowInSourceView
  nameWithType: DesignerActionItem.ShowInSourceView
  fullName: System.ComponentModel.Design.DesignerActionItem.ShowInSourceView
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Gets or sets a value that indicates whether this item appears in source code view."
  syntax:
    content: public bool ShowInSourceView { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if this item appears in source code view; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.ComponentModel.Design.DesignerActionItem.ShowInSourceView*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ComponentModel.Design.DesignerActionItem.#ctor(System.String,System.String,System.String)
  parent: System.ComponentModel.Design.DesignerActionItem
  isExternal: false
  name: DesignerActionItem(String,String,String)
  nameWithType: DesignerActionItem.DesignerActionItem(String,String,String)
  fullName: System.ComponentModel.Design.DesignerActionItem.DesignerActionItem(String,String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.Design.DesignerActionItem.AllowAssociate
  parent: System.ComponentModel.Design.DesignerActionItem
  isExternal: false
  name: AllowAssociate
  nameWithType: DesignerActionItem.AllowAssociate
  fullName: System.ComponentModel.Design.DesignerActionItem.AllowAssociate
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.DesignerActionItem.Category
  parent: System.ComponentModel.Design.DesignerActionItem
  isExternal: false
  name: Category
  nameWithType: DesignerActionItem.Category
  fullName: System.ComponentModel.Design.DesignerActionItem.Category
- uid: System.ComponentModel.Design.DesignerActionItem.Description
  parent: System.ComponentModel.Design.DesignerActionItem
  isExternal: false
  name: Description
  nameWithType: DesignerActionItem.Description
  fullName: System.ComponentModel.Design.DesignerActionItem.Description
- uid: System.ComponentModel.Design.DesignerActionItem.DisplayName
  parent: System.ComponentModel.Design.DesignerActionItem
  isExternal: false
  name: DisplayName
  nameWithType: DesignerActionItem.DisplayName
  fullName: System.ComponentModel.Design.DesignerActionItem.DisplayName
- uid: System.ComponentModel.Design.DesignerActionItem.Properties
  parent: System.ComponentModel.Design.DesignerActionItem
  isExternal: false
  name: Properties
  nameWithType: DesignerActionItem.Properties
  fullName: System.ComponentModel.Design.DesignerActionItem.Properties
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.ComponentModel.Design.DesignerActionItem.ShowInSourceView
  parent: System.ComponentModel.Design.DesignerActionItem
  isExternal: false
  name: ShowInSourceView
  nameWithType: DesignerActionItem.ShowInSourceView
  fullName: System.ComponentModel.Design.DesignerActionItem.ShowInSourceView
- uid: System.ComponentModel.Design.DesignerActionItem.#ctor*
  parent: System.ComponentModel.Design.DesignerActionItem
  isExternal: false
  name: DesignerActionItem
  nameWithType: DesignerActionItem.DesignerActionItem
- uid: System.ComponentModel.Design.DesignerActionItem.AllowAssociate*
  parent: System.ComponentModel.Design.DesignerActionItem
  isExternal: false
  name: AllowAssociate
  nameWithType: DesignerActionItem.AllowAssociate
- uid: System.ComponentModel.Design.DesignerActionItem.Category*
  parent: System.ComponentModel.Design.DesignerActionItem
  isExternal: false
  name: Category
  nameWithType: DesignerActionItem.Category
- uid: System.ComponentModel.Design.DesignerActionItem.Description*
  parent: System.ComponentModel.Design.DesignerActionItem
  isExternal: false
  name: Description
  nameWithType: DesignerActionItem.Description
- uid: System.ComponentModel.Design.DesignerActionItem.DisplayName*
  parent: System.ComponentModel.Design.DesignerActionItem
  isExternal: false
  name: DisplayName
  nameWithType: DesignerActionItem.DisplayName
- uid: System.ComponentModel.Design.DesignerActionItem.Properties*
  parent: System.ComponentModel.Design.DesignerActionItem
  isExternal: false
  name: Properties
  nameWithType: DesignerActionItem.Properties
- uid: System.ComponentModel.Design.DesignerActionItem.ShowInSourceView*
  parent: System.ComponentModel.Design.DesignerActionItem
  isExternal: false
  name: ShowInSourceView
  nameWithType: DesignerActionItem.ShowInSourceView
