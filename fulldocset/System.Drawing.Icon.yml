### YamlMime:ManagedReference
items:
- uid: System.Drawing.Icon
  id: Icon
  children:
  - System.Drawing.Icon.#ctor(System.IO.Stream)
  - System.Drawing.Icon.#ctor(System.String)
  - System.Drawing.Icon.#ctor(System.Drawing.Icon,System.Drawing.Size)
  - System.Drawing.Icon.#ctor(System.IO.Stream,System.Drawing.Size)
  - System.Drawing.Icon.#ctor(System.String,System.Drawing.Size)
  - System.Drawing.Icon.#ctor(System.Type,System.String)
  - System.Drawing.Icon.#ctor(System.Drawing.Icon,System.Int32,System.Int32)
  - System.Drawing.Icon.#ctor(System.IO.Stream,System.Int32,System.Int32)
  - System.Drawing.Icon.#ctor(System.String,System.Int32,System.Int32)
  - System.Drawing.Icon.Clone
  - System.Drawing.Icon.Dispose
  - System.Drawing.Icon.ExtractAssociatedIcon(System.String)
  - System.Drawing.Icon.Finalize
  - System.Drawing.Icon.FromHandle(System.IntPtr)
  - System.Drawing.Icon.Handle
  - System.Drawing.Icon.Height
  - System.Drawing.Icon.Save(System.IO.Stream)
  - System.Drawing.Icon.Size
  - System.Drawing.Icon.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Drawing.Icon.ToBitmap
  - System.Drawing.Icon.ToString
  - System.Drawing.Icon.Width
  langs:
  - csharp
  name: Icon
  nameWithType: Icon
  fullName: System.Drawing.Icon
  type: Class
  summary: "Representa um ícone do Windows, que é uma imagem de mapa de bits pequeno que é utilizada para representar um objeto. Ícones podem considerar como transparentes mapas de bits, embora o tamanho é determinado pelo sistema."
  remarks: "Pode criar objetos de ícone de ficheiros, fluxos ou recursos incorporados. Para obter uma lista dos construtores, consulte <xref:System.Drawing.Icon.%23ctor%2A>.</xref:System.Drawing.Icon.%23ctor%2A> Também pode converter um ícone para um mapa de bits utilizando o <xref:System.Drawing.Icon.ToBitmap%2A>método.</xref:System.Drawing.Icon.ToBitmap%2A>       Um recurso de ícone pode conter várias imagens de ícone. Um ficheiro de ícone pode conter imagens em vários tamanhos e exploração de cor. A imagem que é utilizada numa aplicação depende do sistema operativo e definições. A lista seguinte fornece detalhes sobre os tamanhos típicos para um ícone: pixels de 32 pixels x 32 - pixels 16 pixels x 16 - - pixels 48 pixels x 48"
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.Icon.ToBitmap%2A> method. This example is designed to be used with Windows Forms. Create a form and paste the following code into it. Call the `IconToBitmap` method in the form's <xref:System.Windows.Forms.Control.Paint> event handler, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.MiscExamples#9](~/add/codesnippet/csharp/t-system.drawing.icon_1.cs)]\n [!code-cpp[System.Drawing.MiscExamples#9](~/add/codesnippet/cpp/t-system.drawing.icon_1.cpp)]\n [!code-vb[System.Drawing.MiscExamples#9](~/add/codesnippet/visualbasic/t-system.drawing.icon_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.Editor("System.Drawing.Design.IconEditor, System.Drawing.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]

      [System.ComponentModel.TypeConverter(typeof(System.Drawing.IconConverter))]

      public sealed class Icon : MarshalByRefObject, ICloneable, IDisposable, System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.ICloneable
  - System.IDisposable
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Drawing.Icon.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Icon(Stream)
  nameWithType: Icon.Icon(Stream)
  fullName: System.Drawing.Icon.Icon(Stream)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Icon&quot;> </xref> classe do fluxo de dados especificada."
  remarks: "Um recurso de ícone pode conter várias imagens de ícone. Um ficheiro de ícone pode conter imagens em vários tamanhos e exploração de cor. A imagem que é utilizada numa aplicação depende do sistema operativo e definições. A lista seguinte fornece detalhes sobre os tamanhos típicos para um ícone: pixels de 32 pixels x 32 - pixels 16 pixels x 16 - - pixels 48 pixels x 48 este construtor devolve a imagem de menor que faz o stream especificado."
  syntax:
    content: public Icon (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "O fluxo de dados a partir do qual carregar o <xref href=&quot;System.Drawing.Icon&quot;> </xref>."
  overload: System.Drawing.Icon.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>stream</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Icon.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Icon(String)
  nameWithType: Icon.Icon(String)
  fullName: System.Drawing.Icon.Icon(String)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Icon&quot;> </xref> classe a partir do nome de ficheiro especificado."
  remarks: "Um recurso de ícone pode conter várias imagens de ícone. Um ficheiro de ícone pode conter imagens em vários tamanhos e exploração de cor. A imagem que é utilizada numa aplicação depende do sistema operativo e definições. A lista seguinte fornece detalhes sobre os tamanhos típicos para um ícone: pixels de 32 pixels x 32 - pixels 16 pixels x 16 - - pixels 48 pixels x 48 este construtor devolve a imagem de menor que está contida no ficheiro especificado."
  syntax:
    content: public Icon (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "O ficheiro para carregar o <xref href=&quot;System.Drawing.Icon&quot;> </xref> do."
  overload: System.Drawing.Icon.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.#ctor(System.Drawing.Icon,System.Drawing.Size)
  id: '#ctor(System.Drawing.Icon,System.Drawing.Size)'
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Icon(Icon,Size)
  nameWithType: Icon.Icon(Icon,Size)
  fullName: System.Drawing.Icon.Icon(Icon,Size)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Icon&quot;> </xref> classe e tenta localizar uma versão do ícone que corresponda ao tamanho do pedido."
  remarks: "Se não é possível localizar uma versão que corresponde exatamente ao tamanho, é utilizada a correspondência mais próxima. Se o `original` parâmetro é uma <xref:System.Drawing.Icon>que tem um tamanho único, este método apenas cria um ícone duplicado.</xref:System.Drawing.Icon> Utilizar as capacidades do stretching o <xref:System.Drawing.Graphics.DrawImage%2A>método para redimensionar o ícone.</xref:System.Drawing.Graphics.DrawImage%2A>"
  syntax:
    content: public Icon (System.Drawing.Icon original, System.Drawing.Size size);
    parameters:
    - id: original
      type: System.Drawing.Icon
      description: "O <xref href=&quot;System.Drawing.Icon&quot;> </xref> partir do qual carregar o ícone recentemente tamanho."
    - id: size
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;> </xref> estrutura que especifica a altura e largura do novo <xref href=&quot;System.Drawing.Icon&quot;> </xref>."
  overload: System.Drawing.Icon.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>original</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Icon.#ctor(System.IO.Stream,System.Drawing.Size)
  id: '#ctor(System.IO.Stream,System.Drawing.Size)'
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Icon(Stream,Size)
  nameWithType: Icon.Icon(Stream,Size)
  fullName: System.Drawing.Icon.Icon(Stream,Size)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Icon&quot;> </xref> classe o tamanho especificado do fluxo especificado."
  syntax:
    content: public Icon (System.IO.Stream stream, System.Drawing.Size size);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "O fluxo que contém os dados de ícone."
    - id: size
      type: System.Drawing.Size
      description: "O tamanho pretendido do ícone."
  overload: System.Drawing.Icon.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> stream </code> é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou não contém dados de imagem."
  platform:
  - net462
- uid: System.Drawing.Icon.#ctor(System.String,System.Drawing.Size)
  id: '#ctor(System.String,System.Drawing.Size)'
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Icon(String,Size)
  nameWithType: Icon.Icon(String,Size)
  fullName: System.Drawing.Icon.Icon(String,Size)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Icon&quot;> </xref> classe do tamanho especificado do ficheiro especificado."
  remarks: "Se o ficheiro especificado não contém uma imagem que corresponde ao tamanho pretendido, é devolvido o ícone que tem o tamanho mais próximo.       O `fileName` deve incluir o caminho completo se não se encontra no diretório de aplicação atual."
  syntax:
    content: public Icon (string fileName, System.Drawing.Size size);
    parameters:
    - id: fileName
      type: System.String
      description: "O nome e caminho do ficheiro que contém os dados de ícone."
    - id: size
      type: System.Drawing.Size
      description: "O tamanho pretendido do ícone."
  overload: System.Drawing.Icon.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> string </code> é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou não contém dados de imagem."
  platform:
  - net462
- uid: System.Drawing.Icon.#ctor(System.Type,System.String)
  id: '#ctor(System.Type,System.String)'
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Icon(Type,String)
  nameWithType: Icon.Icon(Type,String)
  fullName: System.Drawing.Icon.Icon(Type,String)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Icon&quot;> </xref> classe a partir de um recurso na assemblagem especificada."
  remarks: "Este construtor cria um <xref:System.Drawing.Icon>de um recurso com o nome especificado pelo `resource` a assemblagem que contém o tipo especificado pelo parâmetro o `type` parâmetro.</xref:System.Drawing.Icon>       Este construtor combina o espaço de nomes do tipo indicado juntamente com o nome da cadeia do recurso e procura uma correspondência no manifesto de assemblagem. Por exemplo, pode passar o <xref:System.Windows.Forms.Control>tipo e `Error.ico` a este construtor e procura um recurso com o nome `System.Windows.Forms.Error.ico`.</xref:System.Windows.Forms.Control>"
  example:
  - "The following code example demonstrates how to use the Icon constructor. To run this example, paste the code into a Windows Form and handle the form's <xref:System.Windows.Forms.Control.Paint> event. Call the `ConstructAnIconFromAType` method from the <xref:System.Windows.Forms.Control.Paint> event handler, passing `e` as <xref:System.EventArgs>.  \n  \n [!code-vb[System.Drawing.Misc3#3](~/add/codesnippet/visualbasic/m-system.drawing.icon.sh_0_1.vb)]\n [!code-cs[System.Drawing.Misc3#3](~/add/codesnippet/csharp/m-system.drawing.icon.sh_0_1.cs)]"
  syntax:
    content: public Icon (Type type, string resource);
    parameters:
    - id: type
      type: System.Type
      description: "A <xref:System.Type>Especifica que a assemblagem em que serve para o recurso.</xref:System.Type>"
    - id: resource
      type: System.String
      description: "O nome de recurso a carregar."
  overload: System.Drawing.Icon.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Um ícone especificado pelo <code> resource </code> não pode ser encontrado na assemblagem que contém especificado <code> type </code>."
  platform:
  - net462
- uid: System.Drawing.Icon.#ctor(System.Drawing.Icon,System.Int32,System.Int32)
  id: '#ctor(System.Drawing.Icon,System.Int32,System.Int32)'
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Icon(Icon,Int32,Int32)
  nameWithType: Icon.Icon(Icon,Int32,Int32)
  fullName: System.Drawing.Icon.Icon(Icon,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Icon&quot;> </xref> classe e tenta localizar uma versão do ícone que corresponda ao tamanho do pedido."
  remarks: "Se não é possível localizar uma versão que corresponde exatamente ao tamanho, é utilizada a correspondência mais próxima. Se o `original` parâmetro é uma <xref:System.Drawing.Icon>que tem um tamanho único, este método apenas cria um ícone duplicado.</xref:System.Drawing.Icon> Utilizar as capacidades do stretching o <xref:System.Drawing.Graphics.DrawImage%2A>método para redimensionar o ícone.</xref:System.Drawing.Graphics.DrawImage%2A>"
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.Icon.ToBitmap%2A> method. This example is designed to be used with Windows Forms. Create a form and paste the following code into it. Call the `IconToBitmap` method in the form's <xref:System.Windows.Forms.Control.Paint> event handler, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.MiscExamples#9](~/add/codesnippet/csharp/m-system.drawing.icon.sh_1_1.cs)]\n [!code-cpp[System.Drawing.MiscExamples#9](~/add/codesnippet/cpp/m-system.drawing.icon.sh_1_1.cpp)]\n [!code-vb[System.Drawing.MiscExamples#9](~/add/codesnippet/visualbasic/m-system.drawing.icon.sh_1_1.vb)]"
  syntax:
    content: public Icon (System.Drawing.Icon original, int width, int height);
    parameters:
    - id: original
      type: System.Drawing.Icon
      description: "O ícone para carregar o tamanho de diferentes."
    - id: width
      type: System.Int32
      description: "A largura no ícone novo."
    - id: height
      type: System.Int32
      description: "A altura no ícone novo."
  overload: System.Drawing.Icon.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>original</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Icon.#ctor(System.IO.Stream,System.Int32,System.Int32)
  id: '#ctor(System.IO.Stream,System.Int32,System.Int32)'
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Icon(Stream,Int32,Int32)
  nameWithType: Icon.Icon(Stream,Int32,Int32)
  fullName: System.Drawing.Icon.Icon(Stream,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Icon&quot;> </xref> classe do fluxo de dados especificado e com a especificado largura e altura."
  syntax:
    content: public Icon (System.IO.Stream stream, int width, int height);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "O fluxo de dados do qual carregar o ícone."
    - id: width
      type: System.Int32
      description: "A largura, em pixels, do ícone."
    - id: height
      type: System.Int32
      description: "A altura, em pixels, do ícone."
  overload: System.Drawing.Icon.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>stream</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Icon.#ctor(System.String,System.Int32,System.Int32)
  id: '#ctor(System.String,System.Int32,System.Int32)'
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Icon(String,Int32,Int32)
  nameWithType: Icon.Icon(String,Int32,Int32)
  fullName: System.Drawing.Icon.Icon(String,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Icon&quot;> </xref> classe com a especificado largura e altura do ficheiro especificado."
  remarks: "Se o ficheiro especificado não contém uma imagem que corresponda ao pretendido altura e largura, é devolvido o ícone que tem o tamanho mais próximo.       O `fileName` deve incluir o caminho completo se não se encontra no diretório de aplicação atual."
  syntax:
    content: public Icon (string fileName, int width, int height);
    parameters:
    - id: fileName
      type: System.String
      description: "O nome e caminho para o ficheiro que contém o <xref href=&quot;System.Drawing.Icon&quot;> </xref> dados."
    - id: width
      type: System.Int32
      description: "A largura do pretendido o <xref href=&quot;System.Drawing.Icon&quot;> </xref>."
    - id: height
      type: System.Int32
      description: "A altura pretendida do <xref href=&quot;System.Drawing.Icon&quot;> </xref>."
  overload: System.Drawing.Icon.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> string </code> é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou não contém dados de imagem."
  platform:
  - net462
- uid: System.Drawing.Icon.Clone
  id: Clone
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Clone()
  nameWithType: Icon.Clone()
  fullName: System.Drawing.Icon.Clone()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Clones o <xref href=&quot;System.Drawing.Icon&quot;> </xref>, criar uma imagem de duplicados."
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Um objeto que pode ser convertido para um <xref href=&quot;System.Drawing.Icon&quot;> </xref>."
  overload: System.Drawing.Icon.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.Dispose
  id: Dispose
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Dispose()
  nameWithType: Icon.Dispose()
  fullName: System.Drawing.Icon.Dispose()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Versões de todos os recursos utilizados por este <xref href=&quot;System.Drawing.Icon&quot;> </xref>."
  remarks: "Chamar `Dispose` permite que os recursos que são utilizados por este <xref:System.Drawing.Icon>para possível reatribuir porque para outros fins.</xref:System.Drawing.Icon>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Drawing.Icon.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.ExtractAssociatedIcon(System.String)
  id: ExtractAssociatedIcon(System.String)
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: ExtractAssociatedIcon(String)
  nameWithType: Icon.ExtractAssociatedIcon(String)
  fullName: System.Drawing.Icon.ExtractAssociatedIcon(String)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Devolve uma representação de ícone de uma imagem que está contida no ficheiro especificado."
  remarks: "Um caminho relativo é prestado relativos ao diretório de trabalho atual.       Quando é utilizado ExtractAssociatedIcon com mapas de bits, uma imagem em miniatura pode ser devolvida em vez de um ícone se o sistema que está a executar a aplicação tem uma definição de registo que faz com que os ficheiros de mapa de bits ser mostrada como imagens em miniatura."
  example:
  - "The following code example demonstrates how to use the ExtractAssociatedIcon method. To run this example, paste the code into a Windows Form and call `ExtractAssociatedIconEx` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event handler.  \n  \n [!code-vb[System.Drawing.Misc3#2](~/add/codesnippet/visualbasic/m-system.drawing.icon.ex_1.vb)]\n [!code-cs[System.Drawing.Misc3#2](~/add/codesnippet/csharp/m-system.drawing.icon.ex_1.cs)]"
  syntax:
    content: public static System.Drawing.Icon ExtractAssociatedIcon (string filePath);
    parameters:
    - id: filePath
      type: System.String
      description: "O caminho para o ficheiro que contém uma imagem."
    return:
      type: System.Drawing.Icon
      description: "O <xref href=&quot;System.Drawing.Icon&quot;> </xref> representação da imagem que está contida no ficheiro especificado."
  overload: System.Drawing.Icon.ExtractAssociatedIcon*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> filePath </code> não indica um ficheiro válido.       - ou - <code> filePath </code> indica um caminho de convenção de Nomenclatura Universal (UNC)."
  platform:
  - net462
- uid: System.Drawing.Icon.Finalize
  id: Finalize
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Finalize()
  nameWithType: Icon.Finalize()
  fullName: System.Drawing.Icon.Finalize()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Permite que um objeto para tentar libertar recursos e efetuar outras operações de limpeza antes de que reclamada a através da recolha de lixo."
  syntax:
    content: ~Icon ();
    parameters: []
  overload: System.Drawing.Icon.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.FromHandle(System.IntPtr)
  id: FromHandle(System.IntPtr)
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: FromHandle(IntPtr)
  nameWithType: Icon.FromHandle(IntPtr)
  fullName: System.Drawing.Icon.FromHandle(IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Cria um GDI+ <xref href=&quot;System.Drawing.Icon&quot;> </xref> do identificador especificado do Windows para um ícone (<xref uid=&quot;langword_csharp_HICON&quot; name=&quot;HICON&quot; href=&quot;&quot;></xref>)."
  remarks: "Quando utilizar este método, tem de eliminar do ícone original utilizando o `DestroyIcon` método na API Win32 para se certificar de que os recursos são lançados."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Bitmap>.  \n  \n-   Draws that object to the screen.  \n  \n-   Gets an icon handle for the <xref:System.Drawing.Bitmap>.  \n  \n-   Sets the <xref:System.Windows.Forms.Form.Icon%2A?displayProperty=fullName> attribute of the form to an icon created from the handle.  \n  \n-   Calls the Win32 API function `DestroyIcon` to release resources.  \n  \n [!code-cpp[System.Drawing.ClassicBitmapExamples#6](~/add/codesnippet/cpp/m-system.drawing.icon.fr_1.cpp)]\n [!code-cs[System.Drawing.ClassicBitmapExamples#6](~/add/codesnippet/csharp/m-system.drawing.icon.fr_1.cs)]\n [!code-vb[System.Drawing.ClassicBitmapExamples#6](~/add/codesnippet/visualbasic/m-system.drawing.icon.fr_1.vb)]"
  syntax:
    content: public static System.Drawing.Icon FromHandle (IntPtr handle);
    parameters:
    - id: handle
      type: System.IntPtr
      description: "Um identificador de Windows a um ícone."
    return:
      type: System.Drawing.Icon
      description: "O <xref href=&quot;System.Drawing.Icon&quot;> </xref> este método cria."
  overload: System.Drawing.Icon.FromHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.Handle
  id: Handle
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Handle
  nameWithType: Icon.Handle
  fullName: System.Drawing.Icon.Handle
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Obtém o identificador do Windows para este <xref href=&quot;System.Drawing.Icon&quot;> </xref>. Não se trata de uma cópia do identificador; libertá-lo."
  remarks: ''
  example:
  - "The following code example demonstrates how to load a bitmap from an <xref:System.Drawing.Icon> handle using the <xref:System.Drawing.GraphicsUnit> enumeration and how to use the <xref:System.Drawing.Rectangle.Round%2A> method to draw the rectangle bounds of a bitmap.  \n  \n This example is designed to be used with Windows Forms. Create a form that contains a button named `Button2`. Paste the code into the form and associate this method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.BitmapMembers#1](~/add/codesnippet/csharp/p-system.drawing.icon.ha_1.cs)]\n [!code-vb[System.Drawing.BitmapMembers#1](~/add/codesnippet/visualbasic/p-system.drawing.icon.ha_1.vb)]\n [!code-cpp[System.Drawing.BitmapMembers#1](~/add/codesnippet/cpp/p-system.drawing.icon.ha_1.cpp)]"
  syntax:
    content: public IntPtr Handle { get; }
    return:
      type: System.IntPtr
      description: "O identificador do Windows para o ícone."
  overload: System.Drawing.Icon.Handle*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.Height
  id: Height
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Height
  nameWithType: Icon.Height
  fullName: System.Drawing.Icon.Height
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Obtém a altura deste <xref href=&quot;System.Drawing.Icon&quot;> </xref>."
  syntax:
    content: public int Height { get; }
    return:
      type: System.Int32
      description: "A altura deste <xref href=&quot;System.Drawing.Icon&quot;> </xref>."
  overload: System.Drawing.Icon.Height*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.Save(System.IO.Stream)
  id: Save(System.IO.Stream)
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Save(Stream)
  nameWithType: Icon.Save(Stream)
  fullName: System.Drawing.Icon.Save(Stream)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Guarda este <xref href=&quot;System.Drawing.Icon&quot;> </xref> a <xref:System.IO.Stream>.</xref:System.IO.Stream> de saída especificado"
  syntax:
    content: public void Save (System.IO.Stream outputStream);
    parameters:
    - id: outputStream
      type: System.IO.Stream
      description: "O <xref:System.IO.Stream>para guardar.</xref:System.IO.Stream>"
  overload: System.Drawing.Icon.Save*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.Size
  id: Size
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Size
  nameWithType: Icon.Size
  fullName: System.Drawing.Icon.Size
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Obtém o tamanho deste <xref href=&quot;System.Drawing.Icon&quot;> </xref>."
  syntax:
    content: public System.Drawing.Size Size { get; }
    return:
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;> </xref> estrutura que especifica a largura e altura deste <xref href=&quot;System.Drawing.Icon&quot;> </xref>."
  overload: System.Drawing.Icon.Size*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Icon.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Drawing.Icon.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Preenche um <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> com os dados que é necessário para serializar o objeto de destino."
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: si
      type: System.Runtime.Serialization.SerializationInfo
      description: "O <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> para preencher com dados."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "O destino (consulte <xref:System.Runtime.Serialization.StreamingContext>) para esta serialização.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Drawing.Icon.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.ToBitmap
  id: ToBitmap
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: ToBitmap()
  nameWithType: Icon.ToBitmap()
  fullName: System.Drawing.Icon.ToBitmap()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Converte esta <xref href=&quot;System.Drawing.Icon&quot;> </xref> para um GDI+ <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>."
  remarks: "As áreas transparentes do ícone são perdidas quando, este é convertido para um mapa de bits e, a cor transparente do mapa de bits resultante é definida para `RGB(13,11,12)`. O mapa de bits devolvido tem o mesmo altura e largura como o ícone original.      > [!NOTE] > Início com suporte para versão 4.6 framework foi adicionado para frames Jumbo PNG. ico ficheiros. As aplicações que as versões anteriores do framework de destino, mas estejam a executar o bits 4.6 podem optar ativamente por participar para o novo comportamento, adicionando a seguinte linha para o `<runtime>` secção do ficheiro App. config:`<AppContextSwitchOverrides value=&quot;Switch.System.Drawing.DontSupportPngFramesInIcons=false&quot; />`"
  example:
  - "The following code example demonstrates how to use the ToBitmap method. This example is designed to be used with Windows Forms. Create a form and paste the following code into it. Call the `IconToBitmap` method in the form's .<xref:System.Windows.Forms.Control.Paint> event handler, passing `e` as <xref:System.Windows.Forms.PaintEventArgs> .  \n  \n [!code-cs[System.Drawing.MiscExamples#9](~/add/codesnippet/csharp/m-system.drawing.icon.to_1.cs)]\n [!code-cpp[System.Drawing.MiscExamples#9](~/add/codesnippet/cpp/m-system.drawing.icon.to_1.cpp)]\n [!code-vb[System.Drawing.MiscExamples#9](~/add/codesnippet/visualbasic/m-system.drawing.icon.to_1.vb)]"
  syntax:
    content: public System.Drawing.Bitmap ToBitmap ();
    parameters: []
    return:
      type: System.Drawing.Bitmap
      description: "A <xref href=&quot;System.Drawing.Bitmap&quot;> </xref> que representa o convertida <xref href=&quot;System.Drawing.Icon&quot;> </xref>."
  overload: System.Drawing.Icon.ToBitmap*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.ToString
  id: ToString
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: ToString()
  nameWithType: Icon.ToString()
  fullName: System.Drawing.Icon.ToString()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Obtém uma cadeia legível por humanos que descreve o <xref href=&quot;System.Drawing.Icon&quot;> </xref>."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Uma cadeia que descreve o <xref href=&quot;System.Drawing.Icon&quot;> </xref>."
  overload: System.Drawing.Icon.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.Width
  id: Width
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Width
  nameWithType: Icon.Width
  fullName: System.Drawing.Icon.Width
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Obtém a largura disto <xref href=&quot;System.Drawing.Icon&quot;> </xref>."
  syntax:
    content: public int Width { get; }
    return:
      type: System.Int32
      description: "A largura disto <xref href=&quot;System.Drawing.Icon&quot;> </xref>."
  overload: System.Drawing.Icon.Width*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Drawing.Icon.#ctor(System.IO.Stream)
  parent: System.Drawing.Icon
  isExternal: false
  name: Icon(Stream)
  nameWithType: Icon.Icon(Stream)
  fullName: System.Drawing.Icon.Icon(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Drawing.Icon.#ctor(System.String)
  parent: System.Drawing.Icon
  isExternal: false
  name: Icon(String)
  nameWithType: Icon.Icon(String)
  fullName: System.Drawing.Icon.Icon(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.Icon.#ctor(System.Drawing.Icon,System.Drawing.Size)
  parent: System.Drawing.Icon
  isExternal: false
  name: Icon(Icon,Size)
  nameWithType: Icon.Icon(Icon,Size)
  fullName: System.Drawing.Icon.Icon(Icon,Size)
- uid: System.Drawing.Icon
  parent: System.Drawing
  isExternal: false
  name: Icon
  nameWithType: Icon
  fullName: System.Drawing.Icon
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing.Icon.#ctor(System.IO.Stream,System.Drawing.Size)
  parent: System.Drawing.Icon
  isExternal: false
  name: Icon(Stream,Size)
  nameWithType: Icon.Icon(Stream,Size)
  fullName: System.Drawing.Icon.Icon(Stream,Size)
- uid: System.Drawing.Icon.#ctor(System.String,System.Drawing.Size)
  parent: System.Drawing.Icon
  isExternal: false
  name: Icon(String,Size)
  nameWithType: Icon.Icon(String,Size)
  fullName: System.Drawing.Icon.Icon(String,Size)
- uid: System.Drawing.Icon.#ctor(System.Type,System.String)
  parent: System.Drawing.Icon
  isExternal: false
  name: Icon(Type,String)
  nameWithType: Icon.Icon(Type,String)
  fullName: System.Drawing.Icon.Icon(Type,String)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Drawing.Icon.#ctor(System.Drawing.Icon,System.Int32,System.Int32)
  parent: System.Drawing.Icon
  isExternal: false
  name: Icon(Icon,Int32,Int32)
  nameWithType: Icon.Icon(Icon,Int32,Int32)
  fullName: System.Drawing.Icon.Icon(Icon,Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.Icon.#ctor(System.IO.Stream,System.Int32,System.Int32)
  parent: System.Drawing.Icon
  isExternal: false
  name: Icon(Stream,Int32,Int32)
  nameWithType: Icon.Icon(Stream,Int32,Int32)
  fullName: System.Drawing.Icon.Icon(Stream,Int32,Int32)
- uid: System.Drawing.Icon.#ctor(System.String,System.Int32,System.Int32)
  parent: System.Drawing.Icon
  isExternal: false
  name: Icon(String,Int32,Int32)
  nameWithType: Icon.Icon(String,Int32,Int32)
  fullName: System.Drawing.Icon.Icon(String,Int32,Int32)
- uid: System.Drawing.Icon.Clone
  parent: System.Drawing.Icon
  isExternal: false
  name: Clone()
  nameWithType: Icon.Clone()
  fullName: System.Drawing.Icon.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.Icon.Dispose
  parent: System.Drawing.Icon
  isExternal: false
  name: Dispose()
  nameWithType: Icon.Dispose()
  fullName: System.Drawing.Icon.Dispose()
- uid: System.Drawing.Icon.ExtractAssociatedIcon(System.String)
  parent: System.Drawing.Icon
  isExternal: false
  name: ExtractAssociatedIcon(String)
  nameWithType: Icon.ExtractAssociatedIcon(String)
  fullName: System.Drawing.Icon.ExtractAssociatedIcon(String)
- uid: System.Drawing.Icon.Finalize
  parent: System.Drawing.Icon
  isExternal: false
  name: Finalize()
  nameWithType: Icon.Finalize()
  fullName: System.Drawing.Icon.Finalize()
- uid: System.Drawing.Icon.FromHandle(System.IntPtr)
  parent: System.Drawing.Icon
  isExternal: false
  name: FromHandle(IntPtr)
  nameWithType: Icon.FromHandle(IntPtr)
  fullName: System.Drawing.Icon.FromHandle(IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Drawing.Icon.Handle
  parent: System.Drawing.Icon
  isExternal: false
  name: Handle
  nameWithType: Icon.Handle
  fullName: System.Drawing.Icon.Handle
- uid: System.Drawing.Icon.Height
  parent: System.Drawing.Icon
  isExternal: false
  name: Height
  nameWithType: Icon.Height
  fullName: System.Drawing.Icon.Height
- uid: System.Drawing.Icon.Save(System.IO.Stream)
  parent: System.Drawing.Icon
  isExternal: false
  name: Save(Stream)
  nameWithType: Icon.Save(Stream)
  fullName: System.Drawing.Icon.Save(Stream)
- uid: System.Drawing.Icon.Size
  parent: System.Drawing.Icon
  isExternal: false
  name: Size
  nameWithType: Icon.Size
  fullName: System.Drawing.Icon.Size
- uid: System.Drawing.Icon.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Drawing.Icon
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Icon.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Drawing.Icon.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Drawing.Icon.ToBitmap
  parent: System.Drawing.Icon
  isExternal: false
  name: ToBitmap()
  nameWithType: Icon.ToBitmap()
  fullName: System.Drawing.Icon.ToBitmap()
- uid: System.Drawing.Bitmap
  parent: System.Drawing
  isExternal: false
  name: Bitmap
  nameWithType: Bitmap
  fullName: System.Drawing.Bitmap
- uid: System.Drawing.Icon.ToString
  parent: System.Drawing.Icon
  isExternal: false
  name: ToString()
  nameWithType: Icon.ToString()
  fullName: System.Drawing.Icon.ToString()
- uid: System.Drawing.Icon.Width
  parent: System.Drawing.Icon
  isExternal: false
  name: Width
  nameWithType: Icon.Width
  fullName: System.Drawing.Icon.Width
- uid: System.Drawing.Icon.#ctor*
  parent: System.Drawing.Icon
  isExternal: false
  name: Icon
  nameWithType: Icon.Icon
- uid: System.Drawing.Icon.Clone*
  parent: System.Drawing.Icon
  isExternal: false
  name: Clone
  nameWithType: Icon.Clone
- uid: System.Drawing.Icon.Dispose*
  parent: System.Drawing.Icon
  isExternal: false
  name: Dispose
  nameWithType: Icon.Dispose
- uid: System.Drawing.Icon.ExtractAssociatedIcon*
  parent: System.Drawing.Icon
  isExternal: false
  name: ExtractAssociatedIcon
  nameWithType: Icon.ExtractAssociatedIcon
- uid: System.Drawing.Icon.Finalize*
  parent: System.Drawing.Icon
  isExternal: false
  name: Finalize
  nameWithType: Icon.Finalize
- uid: System.Drawing.Icon.FromHandle*
  parent: System.Drawing.Icon
  isExternal: false
  name: FromHandle
  nameWithType: Icon.FromHandle
- uid: System.Drawing.Icon.Handle*
  parent: System.Drawing.Icon
  isExternal: false
  name: Handle
  nameWithType: Icon.Handle
- uid: System.Drawing.Icon.Height*
  parent: System.Drawing.Icon
  isExternal: false
  name: Height
  nameWithType: Icon.Height
- uid: System.Drawing.Icon.Save*
  parent: System.Drawing.Icon
  isExternal: false
  name: Save
  nameWithType: Icon.Save
- uid: System.Drawing.Icon.Size*
  parent: System.Drawing.Icon
  isExternal: false
  name: Size
  nameWithType: Icon.Size
- uid: System.Drawing.Icon.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Drawing.Icon
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: Icon.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Drawing.Icon.ToBitmap*
  parent: System.Drawing.Icon
  isExternal: false
  name: ToBitmap
  nameWithType: Icon.ToBitmap
- uid: System.Drawing.Icon.ToString*
  parent: System.Drawing.Icon
  isExternal: false
  name: ToString
  nameWithType: Icon.ToString
- uid: System.Drawing.Icon.Width*
  parent: System.Drawing.Icon
  isExternal: false
  name: Width
  nameWithType: Icon.Width
