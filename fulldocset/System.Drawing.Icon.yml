### YamlMime:ManagedReference
items:
- uid: System.Drawing.Icon
  id: Icon
  children:
  - System.Drawing.Icon.#ctor(System.IO.Stream)
  - System.Drawing.Icon.#ctor(System.String)
  - System.Drawing.Icon.#ctor(System.Drawing.Icon,System.Drawing.Size)
  - System.Drawing.Icon.#ctor(System.IO.Stream,System.Drawing.Size)
  - System.Drawing.Icon.#ctor(System.String,System.Drawing.Size)
  - System.Drawing.Icon.#ctor(System.Type,System.String)
  - System.Drawing.Icon.#ctor(System.Drawing.Icon,System.Int32,System.Int32)
  - System.Drawing.Icon.#ctor(System.IO.Stream,System.Int32,System.Int32)
  - System.Drawing.Icon.#ctor(System.String,System.Int32,System.Int32)
  - System.Drawing.Icon.Clone
  - System.Drawing.Icon.Dispose
  - System.Drawing.Icon.ExtractAssociatedIcon(System.String)
  - System.Drawing.Icon.Finalize
  - System.Drawing.Icon.FromHandle(System.IntPtr)
  - System.Drawing.Icon.Handle
  - System.Drawing.Icon.Height
  - System.Drawing.Icon.Save(System.IO.Stream)
  - System.Drawing.Icon.Size
  - System.Drawing.Icon.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Drawing.Icon.ToBitmap
  - System.Drawing.Icon.ToString
  - System.Drawing.Icon.Width
  langs:
  - csharp
  name: Icon
  nameWithType: Icon
  fullName: System.Drawing.Icon
  type: Class
  summary: "Represents a Windows icon, which is a small bitmap image that is used to represent an object. Icons can be thought of as transparent bitmaps, although their size is determined by the system."
  remarks: "You can construct Icon objects from files, streams, or embedded resources. For a list of constructors, see <xref:System.Drawing.Icon.%23ctor%2A>. You can also convert an Icon to a bitmap by using the <xref:System.Drawing.Icon.ToBitmap%2A> method.       An icon resource can contain multiple icon images. One icon file may contain images in several sizes and color depths. The image that is used in an application depends on the operating system and settings. The following list details the typical sizes for an icon:      -   16 pixels x 16 pixels      -   32 pixels x 32 pixels      -   48 pixels x 48 pixels"
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.Icon.ToBitmap%2A> method. This example is designed to be used with Windows Forms. Create a form and paste the following code into it. Call the `IconToBitmap` method in the form's <xref:System.Windows.Forms.Control.Paint> event handler, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.MiscExamples#9](~/add/codesnippet/csharp/t-system.drawing.icon_1.cs)]\n [!code-cpp[System.Drawing.MiscExamples#9](~/add/codesnippet/cpp/t-system.drawing.icon_1.cpp)]\n [!code-vb[System.Drawing.MiscExamples#9](~/add/codesnippet/visualbasic/t-system.drawing.icon_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.Editor("System.Drawing.Design.IconEditor, System.Drawing.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]

      [System.ComponentModel.TypeConverter(typeof(System.Drawing.IconConverter))]

      public sealed class Icon : MarshalByRefObject, ICloneable, IDisposable, System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.ICloneable
  - System.IDisposable
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Drawing.Icon.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Icon(Stream)
  nameWithType: Icon.Icon(Stream)
  fullName: System.Drawing.Icon.Icon(Stream)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Initializes a new instance of the <xref href=&quot;System.Drawing.Icon&quot;></xref> class from the specified data stream."
  remarks: "An icon resource can contain multiple icon images. One icon file may contain images in several sizes and color depths. The image that is used in an application depends on the operating system and settings. The following list details the typical sizes for an icon:      -   16 pixels x 16 pixels      -   32 pixels x 32 pixels      -   48 pixels x 48 pixels       This constructor returns the smallest image that is contained in the specified stream."
  syntax:
    content: public Icon (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "The data stream from which to load the <xref href=&quot;System.Drawing.Icon&quot;></xref>."
  overload: System.Drawing.Icon.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>stream</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Icon.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Icon(String)
  nameWithType: Icon.Icon(String)
  fullName: System.Drawing.Icon.Icon(String)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Initializes a new instance of the <xref href=&quot;System.Drawing.Icon&quot;></xref> class from the specified file name."
  remarks: "An icon resource can contain multiple icon images. One icon file may contain images in several sizes and color depths. The image that is used in an application depends on the operating system and settings. The following list details the typical sizes for an icon:      -   16 pixels x 16 pixels      -   32 pixels x 32 pixels      -   48 pixels x 48 pixels       This constructor returns the smallest image that is contained in the specified file."
  syntax:
    content: public Icon (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "The file to load the <xref href=&quot;System.Drawing.Icon&quot;></xref> from."
  overload: System.Drawing.Icon.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.#ctor(System.Drawing.Icon,System.Drawing.Size)
  id: '#ctor(System.Drawing.Icon,System.Drawing.Size)'
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Icon(Icon,Size)
  nameWithType: Icon.Icon(Icon,Size)
  fullName: System.Drawing.Icon.Icon(Icon,Size)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Initializes a new instance of the <xref href=&quot;System.Drawing.Icon&quot;></xref> class and attempts to find a version of the icon that matches the requested size."
  remarks: "If a version cannot be found that exactly matches the size, the closest match is used. If the `original` parameter is an <xref:System.Drawing.Icon> that has a single size, this method only creates a duplicate icon. Use the stretching capabilities of the <xref:System.Drawing.Graphics.DrawImage%2A> method to resize the icon."
  syntax:
    content: public Icon (System.Drawing.Icon original, System.Drawing.Size size);
    parameters:
    - id: original
      type: System.Drawing.Icon
      description: "The <xref href=&quot;System.Drawing.Icon&quot;></xref> from which to load the newly sized icon."
    - id: size
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;></xref> structure that specifies the height and width of the new <xref href=&quot;System.Drawing.Icon&quot;></xref>."
  overload: System.Drawing.Icon.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>original</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Icon.#ctor(System.IO.Stream,System.Drawing.Size)
  id: '#ctor(System.IO.Stream,System.Drawing.Size)'
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Icon(Stream,Size)
  nameWithType: Icon.Icon(Stream,Size)
  fullName: System.Drawing.Icon.Icon(Stream,Size)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Initializes a new instance of the <xref href=&quot;System.Drawing.Icon&quot;></xref> class of the specified size from the specified stream."
  syntax:
    content: public Icon (System.IO.Stream stream, System.Drawing.Size size);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "The stream that contains the icon data."
    - id: size
      type: System.Drawing.Size
      description: "The desired size of the icon."
  overload: System.Drawing.Icon.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>stream</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or does not contain image data."
  platform:
  - net462
- uid: System.Drawing.Icon.#ctor(System.String,System.Drawing.Size)
  id: '#ctor(System.String,System.Drawing.Size)'
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Icon(String,Size)
  nameWithType: Icon.Icon(String,Size)
  fullName: System.Drawing.Icon.Icon(String,Size)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Initializes a new instance of the <xref href=&quot;System.Drawing.Icon&quot;></xref> class of the specified size from the specified file."
  remarks: "If the specified file does not contain an image that matches the desired size, the icon that has the closest size is returned.       The `fileName` should include the complete path if it is not in the current application directory."
  syntax:
    content: public Icon (string fileName, System.Drawing.Size size);
    parameters:
    - id: fileName
      type: System.String
      description: "The name and path to the file that contains the icon data."
    - id: size
      type: System.Drawing.Size
      description: "The desired size of the icon."
  overload: System.Drawing.Icon.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>string</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or does not contain image data."
  platform:
  - net462
- uid: System.Drawing.Icon.#ctor(System.Type,System.String)
  id: '#ctor(System.Type,System.String)'
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Icon(Type,String)
  nameWithType: Icon.Icon(Type,String)
  fullName: System.Drawing.Icon.Icon(Type,String)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Initializes a new instance of the <xref href=&quot;System.Drawing.Icon&quot;></xref> class from a resource in the specified assembly."
  remarks: "This constructor creates an <xref:System.Drawing.Icon> from a resource with the name specified by the `resource` parameter in the assembly that contains the type specified by the `type` parameter.       This constructor combines the namespace of the given type together with the string name of the resource and looks for a match in the assembly manifest. For example you can pass in the <xref:System.Windows.Forms.Control> type and `Error.ico` to this constructor, and it looks for a resource that is named `System.Windows.Forms.Error.ico`."
  example:
  - "The following code example demonstrates how to use the Icon constructor. To run this example, paste the code into a Windows Form and handle the form's <xref:System.Windows.Forms.Control.Paint> event. Call the `ConstructAnIconFromAType` method from the <xref:System.Windows.Forms.Control.Paint> event handler, passing `e` as <xref:System.EventArgs>.  \n  \n [!code-vb[System.Drawing.Misc3#3](~/add/codesnippet/visualbasic/m-system.drawing.icon.sh_0_1.vb)]\n [!code-cs[System.Drawing.Misc3#3](~/add/codesnippet/csharp/m-system.drawing.icon.sh_0_1.cs)]"
  syntax:
    content: public Icon (Type type, string resource);
    parameters:
    - id: type
      type: System.Type
      description: "A <xref:System.Type> that specifies the assembly in which to look for the resource."
    - id: resource
      type: System.String
      description: "The resource name to load."
  overload: System.Drawing.Icon.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "An icon specified by <code>resource</code> cannot be found in the assembly that contains the specified <code>type</code>."
  platform:
  - net462
- uid: System.Drawing.Icon.#ctor(System.Drawing.Icon,System.Int32,System.Int32)
  id: '#ctor(System.Drawing.Icon,System.Int32,System.Int32)'
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Icon(Icon,Int32,Int32)
  nameWithType: Icon.Icon(Icon,Int32,Int32)
  fullName: System.Drawing.Icon.Icon(Icon,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Initializes a new instance of the <xref href=&quot;System.Drawing.Icon&quot;></xref> class and attempts to find a version of the icon that matches the requested size."
  remarks: "If a version cannot be found that exactly matches the size, the closest match is used. If the `original` parameter is an <xref:System.Drawing.Icon> that has a single size, this method only creates a duplicate icon. Use the stretching capabilities of the <xref:System.Drawing.Graphics.DrawImage%2A> method to resize the icon."
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.Icon.ToBitmap%2A> method. This example is designed to be used with Windows Forms. Create a form and paste the following code into it. Call the `IconToBitmap` method in the form's <xref:System.Windows.Forms.Control.Paint> event handler, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.MiscExamples#9](~/add/codesnippet/csharp/m-system.drawing.icon.sh_1_1.cs)]\n [!code-cpp[System.Drawing.MiscExamples#9](~/add/codesnippet/cpp/m-system.drawing.icon.sh_1_1.cpp)]\n [!code-vb[System.Drawing.MiscExamples#9](~/add/codesnippet/visualbasic/m-system.drawing.icon.sh_1_1.vb)]"
  syntax:
    content: public Icon (System.Drawing.Icon original, int width, int height);
    parameters:
    - id: original
      type: System.Drawing.Icon
      description: "The icon to load the different size from."
    - id: width
      type: System.Int32
      description: "The width of the new icon."
    - id: height
      type: System.Int32
      description: "The height of the new icon."
  overload: System.Drawing.Icon.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>original</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Icon.#ctor(System.IO.Stream,System.Int32,System.Int32)
  id: '#ctor(System.IO.Stream,System.Int32,System.Int32)'
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Icon(Stream,Int32,Int32)
  nameWithType: Icon.Icon(Stream,Int32,Int32)
  fullName: System.Drawing.Icon.Icon(Stream,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Initializes a new instance of the <xref href=&quot;System.Drawing.Icon&quot;></xref> class from the specified data stream and with the specified width and height."
  syntax:
    content: public Icon (System.IO.Stream stream, int width, int height);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "The data stream from which to load the icon."
    - id: width
      type: System.Int32
      description: "The width, in pixels, of the icon."
    - id: height
      type: System.Int32
      description: "The height, in pixels, of the icon."
  overload: System.Drawing.Icon.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>stream</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Icon.#ctor(System.String,System.Int32,System.Int32)
  id: '#ctor(System.String,System.Int32,System.Int32)'
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Icon(String,Int32,Int32)
  nameWithType: Icon.Icon(String,Int32,Int32)
  fullName: System.Drawing.Icon.Icon(String,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Initializes a new instance of the <xref href=&quot;System.Drawing.Icon&quot;></xref> class with the specified width and height from the specified file."
  remarks: "If the specified file does not contain an image that matches the desired height and width, the icon that has the closest size is returned.       The `fileName` should include the complete path if it is not in the current application directory."
  syntax:
    content: public Icon (string fileName, int width, int height);
    parameters:
    - id: fileName
      type: System.String
      description: "The name and path to the file that contains the <xref href=&quot;System.Drawing.Icon&quot;></xref> data."
    - id: width
      type: System.Int32
      description: "The desired width of the <xref href=&quot;System.Drawing.Icon&quot;></xref>."
    - id: height
      type: System.Int32
      description: "The desired height of the <xref href=&quot;System.Drawing.Icon&quot;></xref>."
  overload: System.Drawing.Icon.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>string</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or does not contain image data."
  platform:
  - net462
- uid: System.Drawing.Icon.Clone
  id: Clone
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Clone()
  nameWithType: Icon.Clone()
  fullName: System.Drawing.Icon.Clone()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Clones the <xref href=&quot;System.Drawing.Icon&quot;></xref>, creating a duplicate image."
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "An object that can be cast to an <xref href=&quot;System.Drawing.Icon&quot;></xref>."
  overload: System.Drawing.Icon.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.Dispose
  id: Dispose
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Dispose()
  nameWithType: Icon.Dispose()
  fullName: System.Drawing.Icon.Dispose()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Releases all resources used by this <xref href=&quot;System.Drawing.Icon&quot;></xref>."
  remarks: "Calling `Dispose` allows the resources that are used by this <xref:System.Drawing.Icon> to be reallocated for other purposes."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Drawing.Icon.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.ExtractAssociatedIcon(System.String)
  id: ExtractAssociatedIcon(System.String)
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: ExtractAssociatedIcon(String)
  nameWithType: Icon.ExtractAssociatedIcon(String)
  fullName: System.Drawing.Icon.ExtractAssociatedIcon(String)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Returns an icon representation of an image that is contained in the specified file."
  remarks: "A relative path is assumed to be relative to the current working directory.       When ExtractAssociatedIcon is used with bitmaps, a thumbnail image may be returned instead of an icon if the system that is running the application has a registry setting that causes bitmap files to be shown as thumbnail images."
  example:
  - "The following code example demonstrates how to use the ExtractAssociatedIcon method. To run this example, paste the code into a Windows Form and call `ExtractAssociatedIconEx` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event handler.  \n  \n [!code-vb[System.Drawing.Misc3#2](~/add/codesnippet/visualbasic/m-system.drawing.icon.ex_1.vb)]\n [!code-cs[System.Drawing.Misc3#2](~/add/codesnippet/csharp/m-system.drawing.icon.ex_1.cs)]"
  syntax:
    content: public static System.Drawing.Icon ExtractAssociatedIcon (string filePath);
    parameters:
    - id: filePath
      type: System.String
      description: "The path to the file that contains an image."
    return:
      type: System.Drawing.Icon
      description: "The <xref href=&quot;System.Drawing.Icon&quot;></xref> representation of the image that is contained in the specified file."
  overload: System.Drawing.Icon.ExtractAssociatedIcon*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>filePath</code> does not indicate a valid file.       -or-       The <code>filePath</code> indicates a Universal Naming Convention (UNC) path."
  platform:
  - net462
- uid: System.Drawing.Icon.Finalize
  id: Finalize
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Finalize()
  nameWithType: Icon.Finalize()
  fullName: System.Drawing.Icon.Finalize()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection."
  syntax:
    content: ~Icon ();
    parameters: []
  overload: System.Drawing.Icon.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.FromHandle(System.IntPtr)
  id: FromHandle(System.IntPtr)
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: FromHandle(IntPtr)
  nameWithType: Icon.FromHandle(IntPtr)
  fullName: System.Drawing.Icon.FromHandle(IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Creates a GDI+ <xref href=&quot;System.Drawing.Icon&quot;></xref> from the specified Windows handle to an icon (<xref uid=&quot;langword_csharp_HICON&quot; name=&quot;HICON&quot; href=&quot;&quot;></xref>)."
  remarks: "When using this method, you must dispose of the original icon by using the `DestroyIcon` method in the Win32 API to ensure that the resources are released."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Bitmap>.  \n  \n-   Draws that object to the screen.  \n  \n-   Gets an icon handle for the <xref:System.Drawing.Bitmap>.  \n  \n-   Sets the <xref:System.Windows.Forms.Form.Icon%2A?displayProperty=fullName> attribute of the form to an icon created from the handle.  \n  \n-   Calls the Win32 API function `DestroyIcon` to release resources.  \n  \n [!code-cpp[System.Drawing.ClassicBitmapExamples#6](~/add/codesnippet/cpp/m-system.drawing.icon.fr_1.cpp)]\n [!code-cs[System.Drawing.ClassicBitmapExamples#6](~/add/codesnippet/csharp/m-system.drawing.icon.fr_1.cs)]\n [!code-vb[System.Drawing.ClassicBitmapExamples#6](~/add/codesnippet/visualbasic/m-system.drawing.icon.fr_1.vb)]"
  syntax:
    content: public static System.Drawing.Icon FromHandle (IntPtr handle);
    parameters:
    - id: handle
      type: System.IntPtr
      description: "A Windows handle to an icon."
    return:
      type: System.Drawing.Icon
      description: "The <xref href=&quot;System.Drawing.Icon&quot;></xref> this method creates."
  overload: System.Drawing.Icon.FromHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.Handle
  id: Handle
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Handle
  nameWithType: Icon.Handle
  fullName: System.Drawing.Icon.Handle
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Gets the Windows handle for this <xref href=&quot;System.Drawing.Icon&quot;></xref>. This is not a copy of the handle; do not free it."
  remarks: ''
  example:
  - "The following code example demonstrates how to load a bitmap from an <xref:System.Drawing.Icon> handle using the <xref:System.Drawing.GraphicsUnit> enumeration and how to use the <xref:System.Drawing.Rectangle.Round%2A> method to draw the rectangle bounds of a bitmap.  \n  \n This example is designed to be used with Windows Forms. Create a form that contains a button named `Button2`. Paste the code into the form and associate this method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.BitmapMembers#1](~/add/codesnippet/csharp/p-system.drawing.icon.ha_1.cs)]\n [!code-vb[System.Drawing.BitmapMembers#1](~/add/codesnippet/visualbasic/p-system.drawing.icon.ha_1.vb)]\n [!code-cpp[System.Drawing.BitmapMembers#1](~/add/codesnippet/cpp/p-system.drawing.icon.ha_1.cpp)]"
  syntax:
    content: public IntPtr Handle { get; }
    return:
      type: System.IntPtr
      description: "The Windows handle for the icon."
  overload: System.Drawing.Icon.Handle*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.Height
  id: Height
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Height
  nameWithType: Icon.Height
  fullName: System.Drawing.Icon.Height
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Gets the height of this <xref href=&quot;System.Drawing.Icon&quot;></xref>."
  syntax:
    content: public int Height { get; }
    return:
      type: System.Int32
      description: "The height of this <xref href=&quot;System.Drawing.Icon&quot;></xref>."
  overload: System.Drawing.Icon.Height*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.Save(System.IO.Stream)
  id: Save(System.IO.Stream)
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Save(Stream)
  nameWithType: Icon.Save(Stream)
  fullName: System.Drawing.Icon.Save(Stream)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Saves this <xref href=&quot;System.Drawing.Icon&quot;></xref> to the specified output <xref:System.IO.Stream>."
  syntax:
    content: public void Save (System.IO.Stream outputStream);
    parameters:
    - id: outputStream
      type: System.IO.Stream
      description: "The <xref:System.IO.Stream> to save to."
  overload: System.Drawing.Icon.Save*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.Size
  id: Size
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Size
  nameWithType: Icon.Size
  fullName: System.Drawing.Icon.Size
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Gets the size of this <xref href=&quot;System.Drawing.Icon&quot;></xref>."
  syntax:
    content: public System.Drawing.Size Size { get; }
    return:
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;></xref> structure that specifies the width and height of this <xref href=&quot;System.Drawing.Icon&quot;></xref>."
  overload: System.Drawing.Icon.Size*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Icon.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Drawing.Icon.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Populates a <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref> with the data that is required to serialize the target object."
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: si
      type: System.Runtime.Serialization.SerializationInfo
      description: "The <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref> to populate with data."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "The destination (see <xref:System.Runtime.Serialization.StreamingContext>) for this serialization."
  overload: System.Drawing.Icon.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.ToBitmap
  id: ToBitmap
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: ToBitmap()
  nameWithType: Icon.ToBitmap()
  fullName: System.Drawing.Icon.ToBitmap()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Converts this <xref href=&quot;System.Drawing.Icon&quot;></xref> to a GDI+ <xref href=&quot;System.Drawing.Bitmap&quot;></xref>."
  remarks: "The transparent areas of the icon are lost when it is converted to a bitmap, and the transparent color of the resulting bitmap is set to `RGB(13,11,12)`. The returned bitmap has the same height and width as the original icon.      > [!NOTE] >  Beginning with framework version 4.6 support was added for PNG frames in .ico files. Applications that target earlier versions of the framework but are running on the 4.6 bits can opt in into the new behavior by adding the following line to the `<runtime>` section of the app.config file:`<AppContextSwitchOverrides value=&quot;Switch.System.Drawing.DontSupportPngFramesInIcons=false&quot; />`"
  example:
  - "The following code example demonstrates how to use the ToBitmap method. This example is designed to be used with Windows Forms. Create a form and paste the following code into it. Call the `IconToBitmap` method in the form's .<xref:System.Windows.Forms.Control.Paint> event handler, passing `e` as <xref:System.Windows.Forms.PaintEventArgs> .  \n  \n [!code-cs[System.Drawing.MiscExamples#9](~/add/codesnippet/csharp/m-system.drawing.icon.to_1.cs)]\n [!code-cpp[System.Drawing.MiscExamples#9](~/add/codesnippet/cpp/m-system.drawing.icon.to_1.cpp)]\n [!code-vb[System.Drawing.MiscExamples#9](~/add/codesnippet/visualbasic/m-system.drawing.icon.to_1.vb)]"
  syntax:
    content: public System.Drawing.Bitmap ToBitmap ();
    parameters: []
    return:
      type: System.Drawing.Bitmap
      description: "A <xref href=&quot;System.Drawing.Bitmap&quot;></xref> that represents the converted <xref href=&quot;System.Drawing.Icon&quot;></xref>."
  overload: System.Drawing.Icon.ToBitmap*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.ToString
  id: ToString
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: ToString()
  nameWithType: Icon.ToString()
  fullName: System.Drawing.Icon.ToString()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Gets a human-readable string that describes the <xref href=&quot;System.Drawing.Icon&quot;></xref>."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A string that describes the <xref href=&quot;System.Drawing.Icon&quot;></xref>."
  overload: System.Drawing.Icon.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Icon.Width
  id: Width
  parent: System.Drawing.Icon
  langs:
  - csharp
  name: Width
  nameWithType: Icon.Width
  fullName: System.Drawing.Icon.Width
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Gets the width of this <xref href=&quot;System.Drawing.Icon&quot;></xref>."
  syntax:
    content: public int Width { get; }
    return:
      type: System.Int32
      description: "The width of this <xref href=&quot;System.Drawing.Icon&quot;></xref>."
  overload: System.Drawing.Icon.Width*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Drawing.Icon.#ctor(System.IO.Stream)
  parent: System.Drawing.Icon
  isExternal: false
  name: Icon(Stream)
  nameWithType: Icon.Icon(Stream)
  fullName: System.Drawing.Icon.Icon(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Drawing.Icon.#ctor(System.String)
  parent: System.Drawing.Icon
  isExternal: false
  name: Icon(String)
  nameWithType: Icon.Icon(String)
  fullName: System.Drawing.Icon.Icon(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.Icon.#ctor(System.Drawing.Icon,System.Drawing.Size)
  parent: System.Drawing.Icon
  isExternal: false
  name: Icon(Icon,Size)
  nameWithType: Icon.Icon(Icon,Size)
  fullName: System.Drawing.Icon.Icon(Icon,Size)
- uid: System.Drawing.Icon
  parent: System.Drawing
  isExternal: false
  name: Icon
  nameWithType: Icon
  fullName: System.Drawing.Icon
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing.Icon.#ctor(System.IO.Stream,System.Drawing.Size)
  parent: System.Drawing.Icon
  isExternal: false
  name: Icon(Stream,Size)
  nameWithType: Icon.Icon(Stream,Size)
  fullName: System.Drawing.Icon.Icon(Stream,Size)
- uid: System.Drawing.Icon.#ctor(System.String,System.Drawing.Size)
  parent: System.Drawing.Icon
  isExternal: false
  name: Icon(String,Size)
  nameWithType: Icon.Icon(String,Size)
  fullName: System.Drawing.Icon.Icon(String,Size)
- uid: System.Drawing.Icon.#ctor(System.Type,System.String)
  parent: System.Drawing.Icon
  isExternal: false
  name: Icon(Type,String)
  nameWithType: Icon.Icon(Type,String)
  fullName: System.Drawing.Icon.Icon(Type,String)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Drawing.Icon.#ctor(System.Drawing.Icon,System.Int32,System.Int32)
  parent: System.Drawing.Icon
  isExternal: false
  name: Icon(Icon,Int32,Int32)
  nameWithType: Icon.Icon(Icon,Int32,Int32)
  fullName: System.Drawing.Icon.Icon(Icon,Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.Icon.#ctor(System.IO.Stream,System.Int32,System.Int32)
  parent: System.Drawing.Icon
  isExternal: false
  name: Icon(Stream,Int32,Int32)
  nameWithType: Icon.Icon(Stream,Int32,Int32)
  fullName: System.Drawing.Icon.Icon(Stream,Int32,Int32)
- uid: System.Drawing.Icon.#ctor(System.String,System.Int32,System.Int32)
  parent: System.Drawing.Icon
  isExternal: false
  name: Icon(String,Int32,Int32)
  nameWithType: Icon.Icon(String,Int32,Int32)
  fullName: System.Drawing.Icon.Icon(String,Int32,Int32)
- uid: System.Drawing.Icon.Clone
  parent: System.Drawing.Icon
  isExternal: false
  name: Clone()
  nameWithType: Icon.Clone()
  fullName: System.Drawing.Icon.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.Icon.Dispose
  parent: System.Drawing.Icon
  isExternal: false
  name: Dispose()
  nameWithType: Icon.Dispose()
  fullName: System.Drawing.Icon.Dispose()
- uid: System.Drawing.Icon.ExtractAssociatedIcon(System.String)
  parent: System.Drawing.Icon
  isExternal: false
  name: ExtractAssociatedIcon(String)
  nameWithType: Icon.ExtractAssociatedIcon(String)
  fullName: System.Drawing.Icon.ExtractAssociatedIcon(String)
- uid: System.Drawing.Icon.Finalize
  parent: System.Drawing.Icon
  isExternal: false
  name: Finalize()
  nameWithType: Icon.Finalize()
  fullName: System.Drawing.Icon.Finalize()
- uid: System.Drawing.Icon.FromHandle(System.IntPtr)
  parent: System.Drawing.Icon
  isExternal: false
  name: FromHandle(IntPtr)
  nameWithType: Icon.FromHandle(IntPtr)
  fullName: System.Drawing.Icon.FromHandle(IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Drawing.Icon.Handle
  parent: System.Drawing.Icon
  isExternal: false
  name: Handle
  nameWithType: Icon.Handle
  fullName: System.Drawing.Icon.Handle
- uid: System.Drawing.Icon.Height
  parent: System.Drawing.Icon
  isExternal: false
  name: Height
  nameWithType: Icon.Height
  fullName: System.Drawing.Icon.Height
- uid: System.Drawing.Icon.Save(System.IO.Stream)
  parent: System.Drawing.Icon
  isExternal: false
  name: Save(Stream)
  nameWithType: Icon.Save(Stream)
  fullName: System.Drawing.Icon.Save(Stream)
- uid: System.Drawing.Icon.Size
  parent: System.Drawing.Icon
  isExternal: false
  name: Size
  nameWithType: Icon.Size
  fullName: System.Drawing.Icon.Size
- uid: System.Drawing.Icon.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Drawing.Icon
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Icon.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Drawing.Icon.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Drawing.Icon.ToBitmap
  parent: System.Drawing.Icon
  isExternal: false
  name: ToBitmap()
  nameWithType: Icon.ToBitmap()
  fullName: System.Drawing.Icon.ToBitmap()
- uid: System.Drawing.Bitmap
  parent: System.Drawing
  isExternal: false
  name: Bitmap
  nameWithType: Bitmap
  fullName: System.Drawing.Bitmap
- uid: System.Drawing.Icon.ToString
  parent: System.Drawing.Icon
  isExternal: false
  name: ToString()
  nameWithType: Icon.ToString()
  fullName: System.Drawing.Icon.ToString()
- uid: System.Drawing.Icon.Width
  parent: System.Drawing.Icon
  isExternal: false
  name: Width
  nameWithType: Icon.Width
  fullName: System.Drawing.Icon.Width
- uid: System.Drawing.Icon.#ctor*
  parent: System.Drawing.Icon
  isExternal: false
  name: Icon
  nameWithType: Icon.Icon
- uid: System.Drawing.Icon.Clone*
  parent: System.Drawing.Icon
  isExternal: false
  name: Clone
  nameWithType: Icon.Clone
- uid: System.Drawing.Icon.Dispose*
  parent: System.Drawing.Icon
  isExternal: false
  name: Dispose
  nameWithType: Icon.Dispose
- uid: System.Drawing.Icon.ExtractAssociatedIcon*
  parent: System.Drawing.Icon
  isExternal: false
  name: ExtractAssociatedIcon
  nameWithType: Icon.ExtractAssociatedIcon
- uid: System.Drawing.Icon.Finalize*
  parent: System.Drawing.Icon
  isExternal: false
  name: Finalize
  nameWithType: Icon.Finalize
- uid: System.Drawing.Icon.FromHandle*
  parent: System.Drawing.Icon
  isExternal: false
  name: FromHandle
  nameWithType: Icon.FromHandle
- uid: System.Drawing.Icon.Handle*
  parent: System.Drawing.Icon
  isExternal: false
  name: Handle
  nameWithType: Icon.Handle
- uid: System.Drawing.Icon.Height*
  parent: System.Drawing.Icon
  isExternal: false
  name: Height
  nameWithType: Icon.Height
- uid: System.Drawing.Icon.Save*
  parent: System.Drawing.Icon
  isExternal: false
  name: Save
  nameWithType: Icon.Save
- uid: System.Drawing.Icon.Size*
  parent: System.Drawing.Icon
  isExternal: false
  name: Size
  nameWithType: Icon.Size
- uid: System.Drawing.Icon.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Drawing.Icon
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: Icon.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Drawing.Icon.ToBitmap*
  parent: System.Drawing.Icon
  isExternal: false
  name: ToBitmap
  nameWithType: Icon.ToBitmap
- uid: System.Drawing.Icon.ToString*
  parent: System.Drawing.Icon
  isExternal: false
  name: ToString
  nameWithType: Icon.ToString
- uid: System.Drawing.Icon.Width*
  parent: System.Drawing.Icon
  isExternal: false
  name: Width
  nameWithType: Icon.Width
