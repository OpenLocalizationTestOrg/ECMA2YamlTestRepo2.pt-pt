### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.SymmetricSecurityBindingElement
  id: SymmetricSecurityBindingElement
  children:
  - System.ServiceModel.Channels.SymmetricSecurityBindingElement.#ctor
  - System.ServiceModel.Channels.SymmetricSecurityBindingElement.#ctor(System.ServiceModel.Security.Tokens.SecurityTokenParameters)
  - System.ServiceModel.Channels.SymmetricSecurityBindingElement.BuildChannelFactoryCore``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.SymmetricSecurityBindingElement.BuildChannelListenerCore``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.SymmetricSecurityBindingElement.Clone
  - System.ServiceModel.Channels.SymmetricSecurityBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  - System.ServiceModel.Channels.SymmetricSecurityBindingElement.MessageProtectionOrder
  - System.ServiceModel.Channels.SymmetricSecurityBindingElement.ProtectionTokenParameters
  - System.ServiceModel.Channels.SymmetricSecurityBindingElement.RequireSignatureConfirmation
  - System.ServiceModel.Channels.SymmetricSecurityBindingElement.SetKeyDerivation(System.Boolean)
  - System.ServiceModel.Channels.SymmetricSecurityBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)
  - System.ServiceModel.Channels.SymmetricSecurityBindingElement.ToString
  langs:
  - csharp
  name: SymmetricSecurityBindingElement
  nameWithType: SymmetricSecurityBindingElement
  fullName: System.ServiceModel.Channels.SymmetricSecurityBindingElement
  type: Class
  summary: "Represents a custom binding element that supports channel security using symmetric encryption."
  remarks: "A custom binding contains a collection of binding elements arranged in a specific order: the element that represents the top of the binding stack is added first, the next element down in the binding stack, is added second, and so forth.      ### To add this class to a binding      1.  Create a <xref:System.ServiceModel.Channels.BindingElementCollection>.      2.  Create custom binding elements that is above this binding element in the binding stack, such as the optional <xref:System.ServiceModel.Channels.TransactionFlowBindingElement> and <xref:System.ServiceModel.Channels.ReliableSessionBindingElement>.      3.  Add the created elements, in the order mentioned previously, to the <xref:System.ServiceModel.Channels.BindingElementCollection> using the <xref:System.ServiceModel.Channels.BindingElementCollection.InsertItem%2A> method.      4.  Create an instance of SymmetricSecurityBindingElement and add it to the collection.      5.  Add any additional custom binding elements to the collection, such as <xref:System.ServiceModel.Channels.TcpTransportBindingElement>.      > [!NOTE] >  Once an instance of this object is created, you should treat the properties of its base class, <xref:System.ServiceModel.Channels.SecurityBindingElement>, as immutable. Calling `set` on some properties may have unpredictable effects: the binding may behave as if the property retained its old value, with a run-time failure being the only indication of an issue. Two properties known to behave this way are <xref:System.ServiceModel.Security.Tokens.IssuedSecurityTokenParameters.KeyType%2A> and <xref:System.ServiceModel.Channels.SecurityBindingElement.MessageSecurityVersion%2A>. There may be other properties for which this is true."
  syntax:
    content: 'public sealed class SymmetricSecurityBindingElement : System.ServiceModel.Channels.SecurityBindingElement, System.ServiceModel.Description.IPolicyExportExtension'
  inheritance:
  - System.ServiceModel.Channels.SecurityBindingElement
  implements:
  - System.ServiceModel.Description.IPolicyExportExtension
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.SymmetricSecurityBindingElement.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Channels.SymmetricSecurityBindingElement
  langs:
  - csharp
  name: SymmetricSecurityBindingElement()
  nameWithType: SymmetricSecurityBindingElement.SymmetricSecurityBindingElement()
  fullName: System.ServiceModel.Channels.SymmetricSecurityBindingElement.SymmetricSecurityBindingElement()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Initializes a new instance of the <xref href=&quot;System.ServiceModel.Channels.SymmetricSecurityBindingElement&quot;></xref> class."
  remarks: ''
  example:
  - "The following code shows how to use this constructor.  \n  \n [!code-cs[c_CustomBinding#4](~/add/codesnippet/csharp/m-system.servicemodel.ch_7_1.cs)]"
  syntax:
    content: public SymmetricSecurityBindingElement ();
    parameters: []
  overload: System.ServiceModel.Channels.SymmetricSecurityBindingElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.SymmetricSecurityBindingElement.#ctor(System.ServiceModel.Security.Tokens.SecurityTokenParameters)
  id: '#ctor(System.ServiceModel.Security.Tokens.SecurityTokenParameters)'
  parent: System.ServiceModel.Channels.SymmetricSecurityBindingElement
  langs:
  - csharp
  name: SymmetricSecurityBindingElement(SecurityTokenParameters)
  nameWithType: SymmetricSecurityBindingElement.SymmetricSecurityBindingElement(SecurityTokenParameters)
  fullName: System.ServiceModel.Channels.SymmetricSecurityBindingElement.SymmetricSecurityBindingElement(SecurityTokenParameters)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Initializes a new instance of the <xref href=&quot;System.ServiceModel.Channels.SymmetricSecurityBindingElement&quot;></xref> class using specified security token parameters."
  syntax:
    content: public SymmetricSecurityBindingElement (System.ServiceModel.Security.Tokens.SecurityTokenParameters protectionTokenParameters);
    parameters:
    - id: protectionTokenParameters
      type: System.ServiceModel.Security.Tokens.SecurityTokenParameters
      description: "The <xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters>."
  overload: System.ServiceModel.Channels.SymmetricSecurityBindingElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.SymmetricSecurityBindingElement.BuildChannelFactoryCore``1(System.ServiceModel.Channels.BindingContext)
  id: BuildChannelFactoryCore``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.SymmetricSecurityBindingElement
  langs:
  - csharp
  name: BuildChannelFactoryCore(BindingContext)
  nameWithType: SymmetricSecurityBindingElement.BuildChannelFactoryCore(BindingContext)
  fullName: System.ServiceModel.Channels.SymmetricSecurityBindingElement.BuildChannelFactoryCore(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: protected override System.ServiceModel.Channels.IChannelFactory<TChannel> BuildChannelFactoryCore<TChannel> (System.ServiceModel.Channels.BindingContext context);
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: "To be added."
    return:
      type: System.ServiceModel.Channels.IChannelFactory{TChannel}
      description: "To be added."
  overload: System.ServiceModel.Channels.SymmetricSecurityBindingElement.BuildChannelFactoryCore<TChannel>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.SymmetricSecurityBindingElement.BuildChannelListenerCore``1(System.ServiceModel.Channels.BindingContext)
  id: BuildChannelListenerCore``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.SymmetricSecurityBindingElement
  langs:
  - csharp
  name: BuildChannelListenerCore(BindingContext)
  nameWithType: SymmetricSecurityBindingElement.BuildChannelListenerCore(BindingContext)
  fullName: System.ServiceModel.Channels.SymmetricSecurityBindingElement.BuildChannelListenerCore(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: 'protected override System.ServiceModel.Channels.IChannelListener<TChannel> BuildChannelListenerCore<TChannel> (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;'
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: "To be added."
    return:
      type: System.ServiceModel.Channels.IChannelListener`1
      description: "To be added."
  overload: System.ServiceModel.Channels.SymmetricSecurityBindingElement.BuildChannelListenerCore<TChannel>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.SymmetricSecurityBindingElement.Clone
  id: Clone
  parent: System.ServiceModel.Channels.SymmetricSecurityBindingElement
  langs:
  - csharp
  name: Clone()
  nameWithType: SymmetricSecurityBindingElement.Clone()
  fullName: System.ServiceModel.Channels.SymmetricSecurityBindingElement.Clone()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Creates a new instance of this class initialized from the current one."
  remarks: "This creates a complete copy of the current binding element object tree, also called a deep clone. A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object. This can also be described as copying the entire object graph. Returning a deep clone enables the runtime to support the case in which multiple custom bindings share a custom binding element. If a deep clone is not returned, the run-time behavior is undefined.       A shallow clone of an object, by contrast, is a copy of the object only. If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects."
  syntax:
    content: public override System.ServiceModel.Channels.BindingElement Clone ();
    parameters: []
    return:
      type: System.ServiceModel.Channels.BindingElement
      description: "A <xref:System.ServiceModel.Channels.BindingElement> object with property values equal to those of the current instance."
  overload: System.ServiceModel.Channels.SymmetricSecurityBindingElement.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.SymmetricSecurityBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  id: GetProperty``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.SymmetricSecurityBindingElement
  langs:
  - csharp
  name: GetProperty(BindingContext)
  nameWithType: SymmetricSecurityBindingElement.GetProperty(BindingContext)
  fullName: System.ServiceModel.Channels.SymmetricSecurityBindingElement.GetProperty(BindingContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: 'public override T GetProperty<T> (System.ServiceModel.Channels.BindingContext context) where T : class;'
    parameters:
    - id: context
      type: System.ServiceModel.Channels.BindingContext
      description: "To be added."
    return:
      type: T
      description: "To be added."
  overload: System.ServiceModel.Channels.SymmetricSecurityBindingElement.GetProperty<T>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.SymmetricSecurityBindingElement.MessageProtectionOrder
  id: MessageProtectionOrder
  parent: System.ServiceModel.Channels.SymmetricSecurityBindingElement
  langs:
  - csharp
  name: MessageProtectionOrder
  nameWithType: SymmetricSecurityBindingElement.MessageProtectionOrder
  fullName: System.ServiceModel.Channels.SymmetricSecurityBindingElement.MessageProtectionOrder
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Gets or sets the order of message encryption and signing for this binding."
  remarks: "> [!NOTE] >  If there is nothing in the message that is encrypted, the signature element is not encrypted even when the MessageProtectionOrder property is set to <xref:System.ServiceModel.Security.MessageProtectionOrder>. This behavior occurs even with system-provided bindings. However, the WSDL generated by [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] still contains the <`sp:EncryptSignature`> assertion.       For a listing of the members and their descriptions, see <xref:System.ServiceModel.Security.MessageProtectionOrder>."
  example:
  - "The following code shows how to set this property.  \n  \n [!code-cs[c_CustomBinding#5](~/add/codesnippet/csharp/9a69f1b7-1354-4e03-82c5-_1.cs)]"
  syntax:
    content: public System.ServiceModel.Security.MessageProtectionOrder MessageProtectionOrder { get; set; }
    return:
      type: System.ServiceModel.Security.MessageProtectionOrder
      description: "The <xref href=&quot;System.ServiceModel.Security.MessageProtectionOrder&quot;></xref> that specifies how the message is protected. The default is <xref href=&quot;System.ServiceModel.Security.MessageProtectionOrder&quot;></xref>."
  overload: System.ServiceModel.Channels.SymmetricSecurityBindingElement.MessageProtectionOrder*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<xref uid=&quot;langword_csharp_set&quot; name=&quot;set&quot; href=&quot;&quot;></xref> and <xref uid=&quot;langword_csharp_value&quot; name=&quot;value&quot; href=&quot;&quot;></xref> is undefined."
  platform:
  - net462
- uid: System.ServiceModel.Channels.SymmetricSecurityBindingElement.ProtectionTokenParameters
  id: ProtectionTokenParameters
  parent: System.ServiceModel.Channels.SymmetricSecurityBindingElement
  langs:
  - csharp
  name: ProtectionTokenParameters
  nameWithType: SymmetricSecurityBindingElement.ProtectionTokenParameters
  fullName: System.ServiceModel.Channels.SymmetricSecurityBindingElement.ProtectionTokenParameters
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Gets or sets the protection token parameters."
  remarks: ''
  example:
  - "The following code shows how to set this property.  \n  \n [!code-cs[c_CustomBinding#6](~/add/codesnippet/csharp/7815b91b-7729-4613-b6f0-_1.cs)]"
  syntax:
    content: public System.ServiceModel.Security.Tokens.SecurityTokenParameters ProtectionTokenParameters { get; set; }
    return:
      type: System.ServiceModel.Security.Tokens.SecurityTokenParameters
      description: "The <xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters>."
  overload: System.ServiceModel.Channels.SymmetricSecurityBindingElement.ProtectionTokenParameters*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.SymmetricSecurityBindingElement.RequireSignatureConfirmation
  id: RequireSignatureConfirmation
  parent: System.ServiceModel.Channels.SymmetricSecurityBindingElement
  langs:
  - csharp
  name: RequireSignatureConfirmation
  nameWithType: SymmetricSecurityBindingElement.RequireSignatureConfirmation
  fullName: System.ServiceModel.Channels.SymmetricSecurityBindingElement.RequireSignatureConfirmation
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Gets or sets a value that indicates whether message signatures must be confirmed."
  remarks: "This property specifies whether the signature must be encrypted. If the value is `true`, the primary signature must be encrypted and any signature confirmation elements must also be encrypted. If the value is `false`, the primary signature must not be encrypted and any signature confirmation elements must not be encrypted."
  syntax:
    content: public bool RequireSignatureConfirmation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if message signatures must be confirmed; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.Channels.SymmetricSecurityBindingElement.RequireSignatureConfirmation*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.SymmetricSecurityBindingElement.SetKeyDerivation(System.Boolean)
  id: SetKeyDerivation(System.Boolean)
  parent: System.ServiceModel.Channels.SymmetricSecurityBindingElement
  langs:
  - csharp
  name: SetKeyDerivation(Boolean)
  nameWithType: SymmetricSecurityBindingElement.SetKeyDerivation(Boolean)
  fullName: System.ServiceModel.Channels.SymmetricSecurityBindingElement.SetKeyDerivation(Boolean)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Sets a value that indicates whether derived keys are required."
  remarks: "A derived key is created from an existing key and makes it possible to vary the key used in the course of a conversation. This makes it more difficult for a hacker to decrypt the communication."
  syntax:
    content: public override void SetKeyDerivation (bool requireDerivedKeys);
    parameters:
    - id: requireDerivedKeys
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to indicate that derived keys are required; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.Channels.SymmetricSecurityBindingElement.SetKeyDerivation*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.SymmetricSecurityBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)
  id: System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)
  isEii: true
  parent: System.ServiceModel.Channels.SymmetricSecurityBindingElement
  langs:
  - csharp
  name: System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
  nameWithType: SymmetricSecurityBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
  fullName: System.ServiceModel.Channels.SymmetricSecurityBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Exports a custom policy assertion about bindings."
  remarks: "This method writes binding-related statements into the WSDL information exposed by a particular contract and is used by [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] to communicate to clients of the existence of this custom binding element in the binding stack.       This method takes two parameters: the <xref:System.ServiceModel.Description.MetadataExporter> and <xref:System.ServiceModel.Description.PolicyConversionContext> objects. Use the <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>, <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A>, and <xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> methods to obtain collections of policy assertions that have already been exported at various scopes. Then use this method to add your own policy assertions to the appropriate collection.       The <xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A> property exposes the <xref:System.ServiceModel.Description.ContractDescription> for the endpoint that is being exported. This allows this method to correctly scope their exported policy assertions. For example, security attributes in code may add behaviors to the <xref:System.ServiceModel.Description.ContractDescription> that indicate where security policy assertions should be added.       Once custom policy assertions are attached to the WSDL information, clients can detect and import the custom binding assertions by implementing the <xref:System.ServiceModel.Description.IPolicyImportExtension> interface."
  syntax:
    content: void IPolicyExportExtension.ExportPolicy (System.ServiceModel.Description.MetadataExporter exporter, System.ServiceModel.Description.PolicyConversionContext context);
    parameters:
    - id: exporter
      type: System.ServiceModel.Description.MetadataExporter
      description: "The <xref href=&quot;System.ServiceModel.Description.MetadataExporter&quot;></xref> that you can use to modify the exporting process."
    - id: context
      type: System.ServiceModel.Description.PolicyConversionContext
      description: "The <xref href=&quot;System.ServiceModel.Description.PolicyConversionContext&quot;></xref> that you can use to insert your custom policy assertion."
  overload: System.ServiceModel.Channels.SymmetricSecurityBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.SymmetricSecurityBindingElement.ToString
  id: ToString
  parent: System.ServiceModel.Channels.SymmetricSecurityBindingElement
  langs:
  - csharp
  name: ToString()
  nameWithType: SymmetricSecurityBindingElement.ToString()
  fullName: System.ServiceModel.Channels.SymmetricSecurityBindingElement.ToString()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Returns a string that represents this <xref href=&quot;System.ServiceModel.Channels.SymmetricSecurityBindingElement&quot;></xref> instance."
  remarks: "Information returned by ToString includes the <xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement.MessageProtectionOrder%2A>, <xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement.RequireSignatureConfirmation%2A>, and <xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement.ProtectionTokenParameters%2A> values of the current instance."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A string that represents this <xref href=&quot;System.ServiceModel.Channels.SymmetricSecurityBindingElement&quot;></xref> instance."
  overload: System.ServiceModel.Channels.SymmetricSecurityBindingElement.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Channels.SecurityBindingElement
  isExternal: false
  name: System.ServiceModel.Channels.SecurityBindingElement
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ServiceModel.Channels.SymmetricSecurityBindingElement.#ctor
  parent: System.ServiceModel.Channels.SymmetricSecurityBindingElement
  isExternal: false
  name: SymmetricSecurityBindingElement()
  nameWithType: SymmetricSecurityBindingElement.SymmetricSecurityBindingElement()
  fullName: System.ServiceModel.Channels.SymmetricSecurityBindingElement.SymmetricSecurityBindingElement()
- uid: System.ServiceModel.Channels.SymmetricSecurityBindingElement.#ctor(System.ServiceModel.Security.Tokens.SecurityTokenParameters)
  parent: System.ServiceModel.Channels.SymmetricSecurityBindingElement
  isExternal: false
  name: SymmetricSecurityBindingElement(SecurityTokenParameters)
  nameWithType: SymmetricSecurityBindingElement.SymmetricSecurityBindingElement(SecurityTokenParameters)
  fullName: System.ServiceModel.Channels.SymmetricSecurityBindingElement.SymmetricSecurityBindingElement(SecurityTokenParameters)
- uid: System.ServiceModel.Security.Tokens.SecurityTokenParameters
  parent: System.ServiceModel.Security.Tokens
  isExternal: true
  name: SecurityTokenParameters
  nameWithType: SecurityTokenParameters
  fullName: System.ServiceModel.Security.Tokens.SecurityTokenParameters
- uid: System.ServiceModel.Channels.SymmetricSecurityBindingElement.BuildChannelFactoryCore``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.SymmetricSecurityBindingElement
  isExternal: false
  name: BuildChannelFactoryCore(BindingContext)
  nameWithType: SymmetricSecurityBindingElement.BuildChannelFactoryCore(BindingContext)
  fullName: System.ServiceModel.Channels.SymmetricSecurityBindingElement.BuildChannelFactoryCore(BindingContext)
- uid: System.ServiceModel.Channels.IChannelFactory{TChannel}
  parent: System.ServiceModel.Channels
  isExternal: true
  name: IChannelFactory<TChannel>
  nameWithType: IChannelFactory<TChannel>
  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>
  spec.csharp:
  - uid: System.ServiceModel.Channels.IChannelFactory`1
    name: IChannelFactory
    nameWithType: IChannelFactory
    fullName: IChannelFactory<TChannel>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TChannel
    name: TChannel
    nameWithType: TChannel
    fullName: TChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Channels.BindingContext
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingContext
  nameWithType: BindingContext
  fullName: System.ServiceModel.Channels.BindingContext
- uid: System.ServiceModel.Channels.SymmetricSecurityBindingElement.BuildChannelListenerCore``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.SymmetricSecurityBindingElement
  isExternal: false
  name: BuildChannelListenerCore(BindingContext)
  nameWithType: SymmetricSecurityBindingElement.BuildChannelListenerCore(BindingContext)
  fullName: System.ServiceModel.Channels.SymmetricSecurityBindingElement.BuildChannelListenerCore(BindingContext)
- uid: System.ServiceModel.Channels.IChannelListener`1
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IChannelListener<TChannel>
  nameWithType: IChannelListener<TChannel>
  fullName: System.ServiceModel.Channels.IChannelListener<TChannel>
- uid: System.ServiceModel.Channels.SymmetricSecurityBindingElement.Clone
  parent: System.ServiceModel.Channels.SymmetricSecurityBindingElement
  isExternal: false
  name: Clone()
  nameWithType: SymmetricSecurityBindingElement.Clone()
  fullName: System.ServiceModel.Channels.SymmetricSecurityBindingElement.Clone()
- uid: System.ServiceModel.Channels.BindingElement
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingElement
  nameWithType: BindingElement
  fullName: System.ServiceModel.Channels.BindingElement
- uid: System.ServiceModel.Channels.SymmetricSecurityBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)
  parent: System.ServiceModel.Channels.SymmetricSecurityBindingElement
  isExternal: false
  name: GetProperty(BindingContext)
  nameWithType: SymmetricSecurityBindingElement.GetProperty(BindingContext)
  fullName: System.ServiceModel.Channels.SymmetricSecurityBindingElement.GetProperty(BindingContext)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.ServiceModel.Channels.SymmetricSecurityBindingElement.MessageProtectionOrder
  parent: System.ServiceModel.Channels.SymmetricSecurityBindingElement
  isExternal: false
  name: MessageProtectionOrder
  nameWithType: SymmetricSecurityBindingElement.MessageProtectionOrder
  fullName: System.ServiceModel.Channels.SymmetricSecurityBindingElement.MessageProtectionOrder
- uid: System.ServiceModel.Security.MessageProtectionOrder
  parent: System.ServiceModel.Security
  isExternal: false
  name: MessageProtectionOrder
  nameWithType: MessageProtectionOrder
  fullName: System.ServiceModel.Security.MessageProtectionOrder
- uid: System.ServiceModel.Channels.SymmetricSecurityBindingElement.ProtectionTokenParameters
  parent: System.ServiceModel.Channels.SymmetricSecurityBindingElement
  isExternal: false
  name: ProtectionTokenParameters
  nameWithType: SymmetricSecurityBindingElement.ProtectionTokenParameters
  fullName: System.ServiceModel.Channels.SymmetricSecurityBindingElement.ProtectionTokenParameters
- uid: System.ServiceModel.Channels.SymmetricSecurityBindingElement.RequireSignatureConfirmation
  parent: System.ServiceModel.Channels.SymmetricSecurityBindingElement
  isExternal: false
  name: RequireSignatureConfirmation
  nameWithType: SymmetricSecurityBindingElement.RequireSignatureConfirmation
  fullName: System.ServiceModel.Channels.SymmetricSecurityBindingElement.RequireSignatureConfirmation
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Channels.SymmetricSecurityBindingElement.SetKeyDerivation(System.Boolean)
  parent: System.ServiceModel.Channels.SymmetricSecurityBindingElement
  isExternal: false
  name: SetKeyDerivation(Boolean)
  nameWithType: SymmetricSecurityBindingElement.SetKeyDerivation(Boolean)
  fullName: System.ServiceModel.Channels.SymmetricSecurityBindingElement.SetKeyDerivation(Boolean)
- uid: System.ServiceModel.Channels.SymmetricSecurityBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)
  parent: System.ServiceModel.Channels.SymmetricSecurityBindingElement
  isExternal: false
  name: System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
  nameWithType: SymmetricSecurityBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
  fullName: System.ServiceModel.Channels.SymmetricSecurityBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(MetadataExporter,PolicyConversionContext)
- uid: System.ServiceModel.Description.MetadataExporter
  parent: System.ServiceModel.Description
  isExternal: false
  name: MetadataExporter
  nameWithType: MetadataExporter
  fullName: System.ServiceModel.Description.MetadataExporter
- uid: System.ServiceModel.Description.PolicyConversionContext
  parent: System.ServiceModel.Description
  isExternal: false
  name: PolicyConversionContext
  nameWithType: PolicyConversionContext
  fullName: System.ServiceModel.Description.PolicyConversionContext
- uid: System.ServiceModel.Channels.SymmetricSecurityBindingElement.ToString
  parent: System.ServiceModel.Channels.SymmetricSecurityBindingElement
  isExternal: false
  name: ToString()
  nameWithType: SymmetricSecurityBindingElement.ToString()
  fullName: System.ServiceModel.Channels.SymmetricSecurityBindingElement.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Channels.SymmetricSecurityBindingElement.#ctor*
  parent: System.ServiceModel.Channels.SymmetricSecurityBindingElement
  isExternal: false
  name: SymmetricSecurityBindingElement
  nameWithType: SymmetricSecurityBindingElement.SymmetricSecurityBindingElement
- uid: System.ServiceModel.Channels.SymmetricSecurityBindingElement.BuildChannelFactoryCore<TChannel>*
  parent: System.ServiceModel.Channels.SymmetricSecurityBindingElement
  isExternal: false
  name: BuildChannelFactoryCore<TChannel>
  nameWithType: SymmetricSecurityBindingElement.BuildChannelFactoryCore<TChannel>
- uid: System.ServiceModel.Channels.SymmetricSecurityBindingElement.BuildChannelListenerCore<TChannel>*
  parent: System.ServiceModel.Channels.SymmetricSecurityBindingElement
  isExternal: false
  name: BuildChannelListenerCore<TChannel>
  nameWithType: SymmetricSecurityBindingElement.BuildChannelListenerCore<TChannel>
- uid: System.ServiceModel.Channels.SymmetricSecurityBindingElement.Clone*
  parent: System.ServiceModel.Channels.SymmetricSecurityBindingElement
  isExternal: false
  name: Clone
  nameWithType: SymmetricSecurityBindingElement.Clone
- uid: System.ServiceModel.Channels.SymmetricSecurityBindingElement.GetProperty<T>*
  parent: System.ServiceModel.Channels.SymmetricSecurityBindingElement
  isExternal: false
  name: GetProperty<T>
  nameWithType: SymmetricSecurityBindingElement.GetProperty<T>
- uid: System.ServiceModel.Channels.SymmetricSecurityBindingElement.MessageProtectionOrder*
  parent: System.ServiceModel.Channels.SymmetricSecurityBindingElement
  isExternal: false
  name: MessageProtectionOrder
  nameWithType: SymmetricSecurityBindingElement.MessageProtectionOrder
- uid: System.ServiceModel.Channels.SymmetricSecurityBindingElement.ProtectionTokenParameters*
  parent: System.ServiceModel.Channels.SymmetricSecurityBindingElement
  isExternal: false
  name: ProtectionTokenParameters
  nameWithType: SymmetricSecurityBindingElement.ProtectionTokenParameters
- uid: System.ServiceModel.Channels.SymmetricSecurityBindingElement.RequireSignatureConfirmation*
  parent: System.ServiceModel.Channels.SymmetricSecurityBindingElement
  isExternal: false
  name: RequireSignatureConfirmation
  nameWithType: SymmetricSecurityBindingElement.RequireSignatureConfirmation
- uid: System.ServiceModel.Channels.SymmetricSecurityBindingElement.SetKeyDerivation*
  parent: System.ServiceModel.Channels.SymmetricSecurityBindingElement
  isExternal: false
  name: SetKeyDerivation
  nameWithType: SymmetricSecurityBindingElement.SetKeyDerivation
- uid: System.ServiceModel.Channels.SymmetricSecurityBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy*
  parent: System.ServiceModel.Channels.SymmetricSecurityBindingElement
  isExternal: false
  name: System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy
  nameWithType: SymmetricSecurityBindingElement.System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy
- uid: System.ServiceModel.Channels.SymmetricSecurityBindingElement.ToString*
  parent: System.ServiceModel.Channels.SymmetricSecurityBindingElement
  isExternal: false
  name: ToString
  nameWithType: SymmetricSecurityBindingElement.ToString
