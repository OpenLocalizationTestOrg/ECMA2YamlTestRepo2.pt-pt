### YamlMime:ManagedReference
items:
- uid: System.Data.EnumerableRowCollectionExtensions
  id: EnumerableRowCollectionExtensions
  children:
  - System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection@)
  - System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection`1@,System.Func{``0,``1})
  - System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection`1@,System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  - System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection`1@,System.Func{``0,``1})
  - System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection`1@,System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  - System.Data.EnumerableRowCollectionExtensions.Select``2(``1ystem.Data.EnumerableRowCollection`1@,``1ystem.Func{``0,``1})
  - System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection`1@,System.Func{``0,``1})
  - System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection`1@,System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  - System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection`1@,System.Func{``0,``1})
  - System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection`1@,System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  - System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection`1@,System.Func{``0,System.Boolean})
  langs:
  - csharp
  name: EnumerableRowCollectionExtensions
  nameWithType: EnumerableRowCollectionExtensions
  fullName: System.Data.EnumerableRowCollectionExtensions
  type: Class
  summary: "Contains the extension methods for the data row collection classes. This API supports the .NET Framework infrastructure and is not intended to be used directly from your code."
  remarks: "The EnumerableRowCollectionExtensions class contains static extension methods that define the <xref:System.Data.EnumerableRowCollectionExtensions.Cast%2A> method and standard query operations for the <xref:System.Data.EnumerableRowCollection%601> and <xref:System.Data.OrderedEnumerableRowCollection%601> classes.       This class cannot be inherited and cannot be instantiated."
  syntax:
    content: public static class EnumerableRowCollectionExtensions
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection@)
  id: Cast``1(System.Data.EnumerableRowCollection@)
  parent: System.Data.EnumerableRowCollectionExtensions
  langs:
  - csharp
  name: Cast(EnumerableRowCollection)
  nameWithType: EnumerableRowCollectionExtensions.Cast(EnumerableRowCollection)
  fullName: System.Data.EnumerableRowCollectionExtensions.Cast(EnumerableRowCollection)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  syntax:
    content: public static System.Data.EnumerableRowCollection<TResult> Cast<TResult> (this System.Data.EnumerableRowCollection source);
    parameters:
    - id: source
      type: System.Data.EnumerableRowCollection
      description: "To be added."
    return:
      type: System.Data.EnumerableRowCollection{TResult}
      description: "To be added."
  overload: System.Data.EnumerableRowCollectionExtensions.Cast<TResult>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection`1@,System.Func{``0,``1})
  id: OrderBy``2(System.Data.EnumerableRowCollection`1@,System.Func{``0,``1})
  parent: System.Data.EnumerableRowCollectionExtensions
  langs:
  - csharp
  name: OrderBy(EnumerableRowCollection<TRow>,Func<TRow,TKey>)
  nameWithType: EnumerableRowCollectionExtensions.OrderBy(EnumerableRowCollection<TRow>,Func<TRow,TKey>)
  fullName: System.Data.EnumerableRowCollectionExtensions.OrderBy(EnumerableRowCollection<TRow>,Func<TRow,TKey>)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  syntax:
    content: public static System.Data.OrderedEnumerableRowCollection<TRow> OrderBy<TRow,TKey> (this System.Data.EnumerableRowCollection<TRow> source, Func<TRow,TKey> keySelector);
    parameters:
    - id: source
      type: System.Data.EnumerableRowCollection`1
      description: "To be added."
    - id: keySelector
      type: System.Func{TRow,TKey}
      description: "To be added."
    return:
      type: System.Data.OrderedEnumerableRowCollection`1
      description: "To be added."
  overload: System.Data.EnumerableRowCollectionExtensions.OrderBy<TRow,TKey>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection`1@,System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  id: OrderBy``2(System.Data.EnumerableRowCollection`1@,System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  parent: System.Data.EnumerableRowCollectionExtensions
  langs:
  - csharp
  name: OrderBy(EnumerableRowCollection<TRow>,Func<TRow,TKey>,IComparer<TKey>)
  nameWithType: EnumerableRowCollectionExtensions.OrderBy(EnumerableRowCollection<TRow>,Func<TRow,TKey>,IComparer<TKey>)
  fullName: System.Data.EnumerableRowCollectionExtensions.OrderBy(EnumerableRowCollection<TRow>,Func<TRow,TKey>,IComparer<TKey>)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  syntax:
    content: public static System.Data.OrderedEnumerableRowCollection<TRow> OrderBy<TRow,TKey> (this System.Data.EnumerableRowCollection<TRow> source, Func<TRow,TKey> keySelector, System.Collections.Generic.IComparer<TKey> comparer);
    parameters:
    - id: source
      type: System.Data.EnumerableRowCollection`1
      description: "To be added."
    - id: keySelector
      type: System.Func{TRow,TKey}
      description: "To be added."
    - id: comparer
      type: System.Collections.Generic.IComparer{TKey}
      description: "To be added."
    return:
      type: System.Data.OrderedEnumerableRowCollection`1
      description: "To be added."
  overload: System.Data.EnumerableRowCollectionExtensions.OrderBy<TRow,TKey>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection`1@,System.Func{``0,``1})
  id: OrderByDescending``2(System.Data.EnumerableRowCollection`1@,System.Func{``0,``1})
  parent: System.Data.EnumerableRowCollectionExtensions
  langs:
  - csharp
  name: OrderByDescending(EnumerableRowCollection<TRow>,Func<TRow,TKey>)
  nameWithType: EnumerableRowCollectionExtensions.OrderByDescending(EnumerableRowCollection<TRow>,Func<TRow,TKey>)
  fullName: System.Data.EnumerableRowCollectionExtensions.OrderByDescending(EnumerableRowCollection<TRow>,Func<TRow,TKey>)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  syntax:
    content: public static System.Data.OrderedEnumerableRowCollection<TRow> OrderByDescending<TRow,TKey> (this System.Data.EnumerableRowCollection<TRow> source, Func<TRow,TKey> keySelector);
    parameters:
    - id: source
      type: System.Data.EnumerableRowCollection`1
      description: "To be added."
    - id: keySelector
      type: System.Func{TRow,TKey}
      description: "To be added."
    return:
      type: System.Data.OrderedEnumerableRowCollection`1
      description: "To be added."
  overload: System.Data.EnumerableRowCollectionExtensions.OrderByDescending<TRow,TKey>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection`1@,System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  id: OrderByDescending``2(System.Data.EnumerableRowCollection`1@,System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  parent: System.Data.EnumerableRowCollectionExtensions
  langs:
  - csharp
  name: OrderByDescending(EnumerableRowCollection<TRow>,Func<TRow,TKey>,IComparer<TKey>)
  nameWithType: EnumerableRowCollectionExtensions.OrderByDescending(EnumerableRowCollection<TRow>,Func<TRow,TKey>,IComparer<TKey>)
  fullName: System.Data.EnumerableRowCollectionExtensions.OrderByDescending(EnumerableRowCollection<TRow>,Func<TRow,TKey>,IComparer<TKey>)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  syntax:
    content: public static System.Data.OrderedEnumerableRowCollection<TRow> OrderByDescending<TRow,TKey> (this System.Data.EnumerableRowCollection<TRow> source, Func<TRow,TKey> keySelector, System.Collections.Generic.IComparer<TKey> comparer);
    parameters:
    - id: source
      type: System.Data.EnumerableRowCollection`1
      description: "To be added."
    - id: keySelector
      type: System.Func{TRow,TKey}
      description: "To be added."
    - id: comparer
      type: System.Collections.Generic.IComparer{TKey}
      description: "To be added."
    return:
      type: System.Data.OrderedEnumerableRowCollection`1
      description: "To be added."
  overload: System.Data.EnumerableRowCollectionExtensions.OrderByDescending<TRow,TKey>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EnumerableRowCollectionExtensions.Select``2(``1ystem.Data.EnumerableRowCollection`1@,``1ystem.Func{``0,``1})
  id: Select``2(``1ystem.Data.EnumerableRowCollection`1@,``1ystem.Func{``0,``1})
  parent: System.Data.EnumerableRowCollectionExtensions
  langs:
  - csharp
  name: Select(EnumerableRowCollection<TRow>,Func<TRow,S>)
  nameWithType: EnumerableRowCollectionExtensions.Select(EnumerableRowCollection<TRow>,Func<TRow,S>)
  fullName: System.Data.EnumerableRowCollectionExtensions.Select(EnumerableRowCollection<TRow>,Func<TRow,S>)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  syntax:
    content: public static System.Data.EnumerableRowCollection<S> Select<TRow,S> (this System.Data.EnumerableRowCollection<TRow> source, Func<TRow,S> selector);
    parameters:
    - id: source
      type: System.Data.EnumerableRowCollection`1
      description: "To be added."
    - id: selector
      type: System.Func{TRow,S}
      description: "To be added."
    return:
      type: System.Data.EnumerableRowCollection{S}
      description: "To be added."
  overload: System.Data.EnumerableRowCollectionExtensions.Select<TRow,S>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection`1@,System.Func{``0,``1})
  id: ThenBy``2(System.Data.OrderedEnumerableRowCollection`1@,System.Func{``0,``1})
  parent: System.Data.EnumerableRowCollectionExtensions
  langs:
  - csharp
  name: ThenBy(OrderedEnumerableRowCollection<TRow>,Func<TRow,TKey>)
  nameWithType: EnumerableRowCollectionExtensions.ThenBy(OrderedEnumerableRowCollection<TRow>,Func<TRow,TKey>)
  fullName: System.Data.EnumerableRowCollectionExtensions.ThenBy(OrderedEnumerableRowCollection<TRow>,Func<TRow,TKey>)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  syntax:
    content: public static System.Data.OrderedEnumerableRowCollection<TRow> ThenBy<TRow,TKey> (this System.Data.OrderedEnumerableRowCollection<TRow> source, Func<TRow,TKey> keySelector);
    parameters:
    - id: source
      type: System.Data.OrderedEnumerableRowCollection`1
      description: "To be added."
    - id: keySelector
      type: System.Func{TRow,TKey}
      description: "To be added."
    return:
      type: System.Data.OrderedEnumerableRowCollection`1
      description: "To be added."
  overload: System.Data.EnumerableRowCollectionExtensions.ThenBy<TRow,TKey>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection`1@,System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  id: ThenBy``2(System.Data.OrderedEnumerableRowCollection`1@,System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  parent: System.Data.EnumerableRowCollectionExtensions
  langs:
  - csharp
  name: ThenBy(OrderedEnumerableRowCollection<TRow>,Func<TRow,TKey>,IComparer<TKey>)
  nameWithType: EnumerableRowCollectionExtensions.ThenBy(OrderedEnumerableRowCollection<TRow>,Func<TRow,TKey>,IComparer<TKey>)
  fullName: System.Data.EnumerableRowCollectionExtensions.ThenBy(OrderedEnumerableRowCollection<TRow>,Func<TRow,TKey>,IComparer<TKey>)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  syntax:
    content: public static System.Data.OrderedEnumerableRowCollection<TRow> ThenBy<TRow,TKey> (this System.Data.OrderedEnumerableRowCollection<TRow> source, Func<TRow,TKey> keySelector, System.Collections.Generic.IComparer<TKey> comparer);
    parameters:
    - id: source
      type: System.Data.OrderedEnumerableRowCollection`1
      description: "To be added."
    - id: keySelector
      type: System.Func{TRow,TKey}
      description: "To be added."
    - id: comparer
      type: System.Collections.Generic.IComparer{TKey}
      description: "To be added."
    return:
      type: System.Data.OrderedEnumerableRowCollection`1
      description: "To be added."
  overload: System.Data.EnumerableRowCollectionExtensions.ThenBy<TRow,TKey>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection`1@,System.Func{``0,``1})
  id: ThenByDescending``2(System.Data.OrderedEnumerableRowCollection`1@,System.Func{``0,``1})
  parent: System.Data.EnumerableRowCollectionExtensions
  langs:
  - csharp
  name: ThenByDescending(OrderedEnumerableRowCollection<TRow>,Func<TRow,TKey>)
  nameWithType: EnumerableRowCollectionExtensions.ThenByDescending(OrderedEnumerableRowCollection<TRow>,Func<TRow,TKey>)
  fullName: System.Data.EnumerableRowCollectionExtensions.ThenByDescending(OrderedEnumerableRowCollection<TRow>,Func<TRow,TKey>)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  syntax:
    content: public static System.Data.OrderedEnumerableRowCollection<TRow> ThenByDescending<TRow,TKey> (this System.Data.OrderedEnumerableRowCollection<TRow> source, Func<TRow,TKey> keySelector);
    parameters:
    - id: source
      type: System.Data.OrderedEnumerableRowCollection`1
      description: "To be added."
    - id: keySelector
      type: System.Func{TRow,TKey}
      description: "To be added."
    return:
      type: System.Data.OrderedEnumerableRowCollection`1
      description: "To be added."
  overload: System.Data.EnumerableRowCollectionExtensions.ThenByDescending<TRow,TKey>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection`1@,System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  id: ThenByDescending``2(System.Data.OrderedEnumerableRowCollection`1@,System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  parent: System.Data.EnumerableRowCollectionExtensions
  langs:
  - csharp
  name: ThenByDescending(OrderedEnumerableRowCollection<TRow>,Func<TRow,TKey>,IComparer<TKey>)
  nameWithType: EnumerableRowCollectionExtensions.ThenByDescending(OrderedEnumerableRowCollection<TRow>,Func<TRow,TKey>,IComparer<TKey>)
  fullName: System.Data.EnumerableRowCollectionExtensions.ThenByDescending(OrderedEnumerableRowCollection<TRow>,Func<TRow,TKey>,IComparer<TKey>)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  syntax:
    content: public static System.Data.OrderedEnumerableRowCollection<TRow> ThenByDescending<TRow,TKey> (this System.Data.OrderedEnumerableRowCollection<TRow> source, Func<TRow,TKey> keySelector, System.Collections.Generic.IComparer<TKey> comparer);
    parameters:
    - id: source
      type: System.Data.OrderedEnumerableRowCollection`1
      description: "To be added."
    - id: keySelector
      type: System.Func{TRow,TKey}
      description: "To be added."
    - id: comparer
      type: System.Collections.Generic.IComparer{TKey}
      description: "To be added."
    return:
      type: System.Data.OrderedEnumerableRowCollection`1
      description: "To be added."
  overload: System.Data.EnumerableRowCollectionExtensions.ThenByDescending<TRow,TKey>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection`1@,System.Func{``0,System.Boolean})
  id: Where``1(System.Data.EnumerableRowCollection`1@,System.Func{``0,System.Boolean})
  parent: System.Data.EnumerableRowCollectionExtensions
  langs:
  - csharp
  name: Where(EnumerableRowCollection<TRow>,Func<TRow,Boolean>)
  nameWithType: EnumerableRowCollectionExtensions.Where(EnumerableRowCollection<TRow>,Func<TRow,Boolean>)
  fullName: System.Data.EnumerableRowCollectionExtensions.Where(EnumerableRowCollection<TRow>,Func<TRow,Boolean>)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  syntax:
    content: public static System.Data.EnumerableRowCollection<TRow> Where<TRow> (this System.Data.EnumerableRowCollection<TRow> source, Func<TRow,bool> predicate);
    parameters:
    - id: source
      type: System.Data.EnumerableRowCollection`1
      description: "To be added."
    - id: predicate
      type: System.Func{TRow,System.Boolean}
      description: "To be added."
    return:
      type: System.Data.EnumerableRowCollection`1
      description: "To be added."
  overload: System.Data.EnumerableRowCollectionExtensions.Where<TRow>*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection@)
  parent: System.Data.EnumerableRowCollectionExtensions
  isExternal: false
  name: Cast(EnumerableRowCollection)
  nameWithType: EnumerableRowCollectionExtensions.Cast(EnumerableRowCollection)
  fullName: System.Data.EnumerableRowCollectionExtensions.Cast(EnumerableRowCollection)
- uid: System.Data.EnumerableRowCollection{TResult}
  parent: System.Data
  isExternal: false
  name: EnumerableRowCollection<TResult>
  nameWithType: EnumerableRowCollection<TResult>
  fullName: System.Data.EnumerableRowCollection<TResult>
  spec.csharp:
  - uid: System.Data.EnumerableRowCollection`1
    name: EnumerableRowCollection
    nameWithType: EnumerableRowCollection
    fullName: EnumerableRowCollection<TResult>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.EnumerableRowCollection
  parent: System.Data
  isExternal: false
  name: EnumerableRowCollection
  nameWithType: EnumerableRowCollection
  fullName: System.Data.EnumerableRowCollection
- uid: System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection`1@,System.Func{``0,``1})
  parent: System.Data.EnumerableRowCollectionExtensions
  isExternal: false
  name: OrderBy(EnumerableRowCollection<TRow>,Func<TRow,TKey>)
  nameWithType: EnumerableRowCollectionExtensions.OrderBy(EnumerableRowCollection<TRow>,Func<TRow,TKey>)
  fullName: System.Data.EnumerableRowCollectionExtensions.OrderBy(EnumerableRowCollection<TRow>,Func<TRow,TKey>)
- uid: System.Data.OrderedEnumerableRowCollection`1
  parent: System.Data
  isExternal: false
  name: OrderedEnumerableRowCollection<TRow>
  nameWithType: OrderedEnumerableRowCollection<TRow>
  fullName: System.Data.OrderedEnumerableRowCollection<TRow>
- uid: System.Data.EnumerableRowCollection`1
  parent: System.Data
  isExternal: false
  name: EnumerableRowCollection<TRow>
  nameWithType: EnumerableRowCollection<TRow>
  fullName: System.Data.EnumerableRowCollection<TRow>
- uid: System.Func{TRow,TKey}
  parent: System
  isExternal: true
  name: Func<TRow,TKey>
  nameWithType: Func<TRow,TKey>
  fullName: System.Func<TRow,TKey>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<TRow,TKey>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TRow
    name: TRow
    nameWithType: TRow
    fullName: TRow
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TKey
    name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection`1@,System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  parent: System.Data.EnumerableRowCollectionExtensions
  isExternal: false
  name: OrderBy(EnumerableRowCollection<TRow>,Func<TRow,TKey>,IComparer<TKey>)
  nameWithType: EnumerableRowCollectionExtensions.OrderBy(EnumerableRowCollection<TRow>,Func<TRow,TKey>,IComparer<TKey>)
  fullName: System.Data.EnumerableRowCollectionExtensions.OrderBy(EnumerableRowCollection<TRow>,Func<TRow,TKey>,IComparer<TKey>)
- uid: System.Collections.Generic.IComparer{TKey}
  parent: System.Collections.Generic
  isExternal: true
  name: IComparer<TKey>
  nameWithType: IComparer<TKey>
  fullName: System.Collections.Generic.IComparer<TKey>
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: IComparer<TKey>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TKey
    name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection`1@,System.Func{``0,``1})
  parent: System.Data.EnumerableRowCollectionExtensions
  isExternal: false
  name: OrderByDescending(EnumerableRowCollection<TRow>,Func<TRow,TKey>)
  nameWithType: EnumerableRowCollectionExtensions.OrderByDescending(EnumerableRowCollection<TRow>,Func<TRow,TKey>)
  fullName: System.Data.EnumerableRowCollectionExtensions.OrderByDescending(EnumerableRowCollection<TRow>,Func<TRow,TKey>)
- uid: System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection`1@,System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  parent: System.Data.EnumerableRowCollectionExtensions
  isExternal: false
  name: OrderByDescending(EnumerableRowCollection<TRow>,Func<TRow,TKey>,IComparer<TKey>)
  nameWithType: EnumerableRowCollectionExtensions.OrderByDescending(EnumerableRowCollection<TRow>,Func<TRow,TKey>,IComparer<TKey>)
  fullName: System.Data.EnumerableRowCollectionExtensions.OrderByDescending(EnumerableRowCollection<TRow>,Func<TRow,TKey>,IComparer<TKey>)
- uid: System.Data.EnumerableRowCollectionExtensions.Select``2(``1ystem.Data.EnumerableRowCollection`1@,``1ystem.Func{``0,``1})
  parent: System.Data.EnumerableRowCollectionExtensions
  isExternal: false
  name: Select(EnumerableRowCollection<TRow>,Func<TRow,S>)
  nameWithType: EnumerableRowCollectionExtensions.Select(EnumerableRowCollection<TRow>,Func<TRow,S>)
  fullName: System.Data.EnumerableRowCollectionExtensions.Select(EnumerableRowCollection<TRow>,Func<TRow,S>)
- uid: System.Data.EnumerableRowCollection{S}
  parent: System.Data
  isExternal: false
  name: EnumerableRowCollection<S>
  nameWithType: EnumerableRowCollection<S>
  fullName: System.Data.EnumerableRowCollection<S>
  spec.csharp:
  - uid: System.Data.EnumerableRowCollection`1
    name: EnumerableRowCollection
    nameWithType: EnumerableRowCollection
    fullName: EnumerableRowCollection<S>
  - name: <
    nameWithType: <
    fullName: <
  - uid: S
    name: S
    nameWithType: S
    fullName: S
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Func{TRow,S}
  parent: System
  isExternal: true
  name: Func<TRow,S>
  nameWithType: Func<TRow,S>
  fullName: System.Func<TRow,S>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<TRow,S>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TRow
    name: TRow
    nameWithType: TRow
    fullName: TRow
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: S
    name: S
    nameWithType: S
    fullName: S
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection`1@,System.Func{``0,``1})
  parent: System.Data.EnumerableRowCollectionExtensions
  isExternal: false
  name: ThenBy(OrderedEnumerableRowCollection<TRow>,Func<TRow,TKey>)
  nameWithType: EnumerableRowCollectionExtensions.ThenBy(OrderedEnumerableRowCollection<TRow>,Func<TRow,TKey>)
  fullName: System.Data.EnumerableRowCollectionExtensions.ThenBy(OrderedEnumerableRowCollection<TRow>,Func<TRow,TKey>)
- uid: System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection`1@,System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  parent: System.Data.EnumerableRowCollectionExtensions
  isExternal: false
  name: ThenBy(OrderedEnumerableRowCollection<TRow>,Func<TRow,TKey>,IComparer<TKey>)
  nameWithType: EnumerableRowCollectionExtensions.ThenBy(OrderedEnumerableRowCollection<TRow>,Func<TRow,TKey>,IComparer<TKey>)
  fullName: System.Data.EnumerableRowCollectionExtensions.ThenBy(OrderedEnumerableRowCollection<TRow>,Func<TRow,TKey>,IComparer<TKey>)
- uid: System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection`1@,System.Func{``0,``1})
  parent: System.Data.EnumerableRowCollectionExtensions
  isExternal: false
  name: ThenByDescending(OrderedEnumerableRowCollection<TRow>,Func<TRow,TKey>)
  nameWithType: EnumerableRowCollectionExtensions.ThenByDescending(OrderedEnumerableRowCollection<TRow>,Func<TRow,TKey>)
  fullName: System.Data.EnumerableRowCollectionExtensions.ThenByDescending(OrderedEnumerableRowCollection<TRow>,Func<TRow,TKey>)
- uid: System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection`1@,System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  parent: System.Data.EnumerableRowCollectionExtensions
  isExternal: false
  name: ThenByDescending(OrderedEnumerableRowCollection<TRow>,Func<TRow,TKey>,IComparer<TKey>)
  nameWithType: EnumerableRowCollectionExtensions.ThenByDescending(OrderedEnumerableRowCollection<TRow>,Func<TRow,TKey>,IComparer<TKey>)
  fullName: System.Data.EnumerableRowCollectionExtensions.ThenByDescending(OrderedEnumerableRowCollection<TRow>,Func<TRow,TKey>,IComparer<TKey>)
- uid: System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection`1@,System.Func{``0,System.Boolean})
  parent: System.Data.EnumerableRowCollectionExtensions
  isExternal: false
  name: Where(EnumerableRowCollection<TRow>,Func<TRow,Boolean>)
  nameWithType: EnumerableRowCollectionExtensions.Where(EnumerableRowCollection<TRow>,Func<TRow,Boolean>)
  fullName: System.Data.EnumerableRowCollectionExtensions.Where(EnumerableRowCollection<TRow>,Func<TRow,Boolean>)
- uid: System.Func{TRow,System.Boolean}
  parent: System
  isExternal: true
  name: Func<TRow,Boolean>
  nameWithType: Func<TRow,Boolean>
  fullName: System.Func<TRow,System.Boolean>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<TRow,System.Boolean>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TRow
    name: TRow
    nameWithType: TRow
    fullName: TRow
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.EnumerableRowCollectionExtensions.Cast<TResult>*
  parent: System.Data.EnumerableRowCollectionExtensions
  isExternal: false
  name: Cast<TResult>
  nameWithType: EnumerableRowCollectionExtensions.Cast<TResult>
- uid: System.Data.EnumerableRowCollectionExtensions.OrderBy<TRow,TKey>*
  parent: System.Data.EnumerableRowCollectionExtensions
  isExternal: false
  name: OrderBy<TRow,TKey>
  nameWithType: EnumerableRowCollectionExtensions.OrderBy<TRow,TKey>
- uid: System.Data.EnumerableRowCollectionExtensions.OrderByDescending<TRow,TKey>*
  parent: System.Data.EnumerableRowCollectionExtensions
  isExternal: false
  name: OrderByDescending<TRow,TKey>
  nameWithType: EnumerableRowCollectionExtensions.OrderByDescending<TRow,TKey>
- uid: System.Data.EnumerableRowCollectionExtensions.Select<TRow,S>*
  parent: System.Data.EnumerableRowCollectionExtensions
  isExternal: false
  name: Select<TRow,S>
  nameWithType: EnumerableRowCollectionExtensions.Select<TRow,S>
- uid: System.Data.EnumerableRowCollectionExtensions.ThenBy<TRow,TKey>*
  parent: System.Data.EnumerableRowCollectionExtensions
  isExternal: false
  name: ThenBy<TRow,TKey>
  nameWithType: EnumerableRowCollectionExtensions.ThenBy<TRow,TKey>
- uid: System.Data.EnumerableRowCollectionExtensions.ThenByDescending<TRow,TKey>*
  parent: System.Data.EnumerableRowCollectionExtensions
  isExternal: false
  name: ThenByDescending<TRow,TKey>
  nameWithType: EnumerableRowCollectionExtensions.ThenByDescending<TRow,TKey>
- uid: System.Data.EnumerableRowCollectionExtensions.Where<TRow>*
  parent: System.Data.EnumerableRowCollectionExtensions
  isExternal: false
  name: Where<TRow>
  nameWithType: EnumerableRowCollectionExtensions.Where<TRow>
