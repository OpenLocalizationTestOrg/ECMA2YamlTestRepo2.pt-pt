### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices._Type
  id: _Type
  children:
  - System.Runtime.InteropServices._Type.Assembly
  - System.Runtime.InteropServices._Type.AssemblyQualifiedName
  - System.Runtime.InteropServices._Type.Attributes
  - System.Runtime.InteropServices._Type.BaseType
  - System.Runtime.InteropServices._Type.DeclaringType
  - System.Runtime.InteropServices._Type.Equals(System.Object)
  - System.Runtime.InteropServices._Type.Equals(System.Type)
  - System.Runtime.InteropServices._Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)
  - System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)
  - System.Runtime.InteropServices._Type.FullName
  - System.Runtime.InteropServices._Type.GetArrayRank
  - System.Runtime.InteropServices._Type.GetConstructor(System.Type[])
  - System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  - System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  - System.Runtime.InteropServices._Type.GetConstructors
  - System.Runtime.InteropServices._Type.GetConstructors(System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetCustomAttributes(System.Boolean)
  - System.Runtime.InteropServices._Type.GetCustomAttributes(System.Type,System.Boolean)
  - System.Runtime.InteropServices._Type.GetDefaultMembers
  - System.Runtime.InteropServices._Type.GetElementType
  - System.Runtime.InteropServices._Type.GetEvent(System.String)
  - System.Runtime.InteropServices._Type.GetEvent(System.String,System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetEvents
  - System.Runtime.InteropServices._Type.GetEvents(System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetField(System.String)
  - System.Runtime.InteropServices._Type.GetField(System.String,System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetFields
  - System.Runtime.InteropServices._Type.GetFields(System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetHashCode
  - System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Runtime.InteropServices._Type.GetInterface(System.String)
  - System.Runtime.InteropServices._Type.GetInterface(System.String,System.Boolean)
  - System.Runtime.InteropServices._Type.GetInterfaceMap(System.Type)
  - System.Runtime.InteropServices._Type.GetInterfaces
  - System.Runtime.InteropServices._Type.GetMember(System.String)
  - System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetMembers
  - System.Runtime.InteropServices._Type.GetMembers(System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetMethod(System.String)
  - System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[])
  - System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])
  - System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  - System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  - System.Runtime.InteropServices._Type.GetMethods
  - System.Runtime.InteropServices._Type.GetMethods(System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetNestedType(System.String)
  - System.Runtime.InteropServices._Type.GetNestedType(System.String,System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetNestedTypes
  - System.Runtime.InteropServices._Type.GetNestedTypes(System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetProperties
  - System.Runtime.InteropServices._Type.GetProperties(System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetProperty(System.String)
  - System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type)
  - System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type[])
  - System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[])
  - System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  - System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  - System.Runtime.InteropServices._Type.GetType
  - System.Runtime.InteropServices._Type.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Runtime.InteropServices._Type.GetTypeInfoCount(System.UInt32@)
  - System.Runtime.InteropServices._Type.GUID
  - System.Runtime.InteropServices._Type.HasElementType
  - System.Runtime.InteropServices._Type.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])
  - System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)
  - System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  - System.Runtime.InteropServices._Type.IsAbstract
  - System.Runtime.InteropServices._Type.IsAnsiClass
  - System.Runtime.InteropServices._Type.IsArray
  - System.Runtime.InteropServices._Type.IsAssignableFrom(System.Type)
  - System.Runtime.InteropServices._Type.IsAutoClass
  - System.Runtime.InteropServices._Type.IsAutoLayout
  - System.Runtime.InteropServices._Type.IsByRef
  - System.Runtime.InteropServices._Type.IsClass
  - System.Runtime.InteropServices._Type.IsCOMObject
  - System.Runtime.InteropServices._Type.IsContextful
  - System.Runtime.InteropServices._Type.IsDefined(System.Type,System.Boolean)
  - System.Runtime.InteropServices._Type.IsEnum
  - System.Runtime.InteropServices._Type.IsExplicitLayout
  - System.Runtime.InteropServices._Type.IsImport
  - System.Runtime.InteropServices._Type.IsInstanceOfType(System.Object)
  - System.Runtime.InteropServices._Type.IsInterface
  - System.Runtime.InteropServices._Type.IsLayoutSequential
  - System.Runtime.InteropServices._Type.IsMarshalByRef
  - System.Runtime.InteropServices._Type.IsNestedAssembly
  - System.Runtime.InteropServices._Type.IsNestedFamANDAssem
  - System.Runtime.InteropServices._Type.IsNestedFamily
  - System.Runtime.InteropServices._Type.IsNestedFamORAssem
  - System.Runtime.InteropServices._Type.IsNestedPrivate
  - System.Runtime.InteropServices._Type.IsNestedPublic
  - System.Runtime.InteropServices._Type.IsNotPublic
  - System.Runtime.InteropServices._Type.IsPointer
  - System.Runtime.InteropServices._Type.IsPrimitive
  - System.Runtime.InteropServices._Type.IsPublic
  - System.Runtime.InteropServices._Type.IsSealed
  - System.Runtime.InteropServices._Type.IsSerializable
  - System.Runtime.InteropServices._Type.IsSpecialName
  - System.Runtime.InteropServices._Type.IsSubclassOf(System.Type)
  - System.Runtime.InteropServices._Type.IsUnicodeClass
  - System.Runtime.InteropServices._Type.IsValueType
  - System.Runtime.InteropServices._Type.MemberType
  - System.Runtime.InteropServices._Type.Module
  - System.Runtime.InteropServices._Type.Name
  - System.Runtime.InteropServices._Type.Namespace
  - System.Runtime.InteropServices._Type.ReflectedType
  - System.Runtime.InteropServices._Type.ToString
  - System.Runtime.InteropServices._Type.TypeHandle
  - System.Runtime.InteropServices._Type.TypeInitializer
  - System.Runtime.InteropServices._Type.UnderlyingSystemType
  langs:
  - csharp
  name: _Type
  nameWithType: _Type
  fullName: System.Runtime.InteropServices._Type
  type: Interface
  summary: "Exposes the public members of the &lt;xref:System.Type?displayProperty=fullName&gt; class to the unmanaged code."
  remarks: "This interface is for access to managed classes from unmanaged code and should not be called from managed code.       This interface preserves the vtable order of the <xref:System.Type?displayProperty=fullName> class members that can be accessed by unmanaged COM objects."
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("BCA8B44D-AAD6-3A86-8AB7-03349F4F2DA2")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      [System.Runtime.InteropServices.TypeLibImportClass(typeof(System.Type))]

      public interface _Type
  implements: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.Assembly
  id: Assembly
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: Assembly
  nameWithType: _Type.Assembly
  fullName: System.Runtime.InteropServices._Type.Assembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.Assembly%2A?displayProperty=fullName&gt; property."
  remarks: "This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.Assembly%2A?displayProperty=fullName> property gets the <xref:System.Reflection.Assembly> in which the type is declared. For generic types, this property gets the <xref:System.Reflection.Assembly> in which the generic type is defined."
  syntax:
    content: public System.Reflection.Assembly Assembly { get; }
    return:
      type: System.Reflection.Assembly
      description: "An <xref:System.Reflection.Assembly> instance that describes the assembly containing the current type."
  overload: System.Runtime.InteropServices._Type.Assembly*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.AssemblyQualifiedName
  id: AssemblyQualifiedName
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: AssemblyQualifiedName
  nameWithType: _Type.AssemblyQualifiedName
  fullName: System.Runtime.InteropServices._Type.AssemblyQualifiedName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName&gt; property."
  remarks: "This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName> property gets the assembly-qualified name of the <xref:System.Type>, including the name of the assembly from which the <xref:System.Type> was loaded."
  syntax:
    content: public string AssemblyQualifiedName { get; }
    return:
      type: System.String
      description: "The assembly-qualified name of the <xref:System.Type>, including the name of the assembly from which the <xref:System.Type> was loaded."
  overload: System.Runtime.InteropServices._Type.AssemblyQualifiedName*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.Attributes
  id: Attributes
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: Attributes
  nameWithType: _Type.Attributes
  fullName: System.Runtime.InteropServices._Type.Attributes
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.Attributes%2A?displayProperty=fullName&gt; property."
  remarks: "This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.Attributes%2A?displayProperty=fullName> property gets the attributes associated with the <xref:System.Type>."
  syntax:
    content: public System.Reflection.TypeAttributes Attributes { get; }
    return:
      type: System.Reflection.TypeAttributes
      description: "A <xref:System.Reflection.TypeAttributes> object representing the attribute set of the <xref:System.Type>, unless the <xref:System.Type> represents a generic type parameter, in which case the value is unspecified."
  overload: System.Runtime.InteropServices._Type.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.BaseType
  id: BaseType
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: BaseType
  nameWithType: _Type.BaseType
  fullName: System.Runtime.InteropServices._Type.BaseType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.BaseType%2A?displayProperty=fullName&gt; property."
  remarks: "This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.BaseType%2A?displayProperty=fullName> property gets the type from which the current <xref:System.Type> directly inherits."
  syntax:
    content: public Type BaseType { get; }
    return:
      type: System.Type
      description: "The <xref:System.Type> from which the current <xref:System.Type> directly inherits, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the current <xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;></xref> represents the <xref:System.Object> class."
  overload: System.Runtime.InteropServices._Type.BaseType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.DeclaringType
  id: DeclaringType
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: DeclaringType
  nameWithType: _Type.DeclaringType
  fullName: System.Runtime.InteropServices._Type.DeclaringType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.DeclaringType%2A?displayProperty=fullName&gt; property."
  remarks: "This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.DeclaringType%2A?displayProperty=fullName> property gets the class that declares this member."
  syntax:
    content: public Type DeclaringType { get; }
    return:
      type: System.Type
      description: "The <xref:System.Type> object for the class that declares this member. If the type is a nested type, this property returns the enclosing type."
  overload: System.Runtime.InteropServices._Type.DeclaringType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: _Type.Equals(Object)
  fullName: System.Runtime.InteropServices._Type.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.Equals%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.Equals%2A?displayProperty=fullName> method determines if the underlying system type of the current <xref:System.Type> is the same as the underlying system type of the specified <xref:System.Object>."
  syntax:
    content: public bool Equals (object other);
    parameters:
    - id: other
      type: System.Object
      description: "The <xref:System.Object> whose underlying system type is to be compared with the underlying system type of the current <xref:System.Type>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the underlying system type of <code>o</code> is the same as the underlying system type of the current <xref:System.Type>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.Equals(System.Type)
  id: Equals(System.Type)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: Equals(Type)
  nameWithType: _Type.Equals(Type)
  fullName: System.Runtime.InteropServices._Type.Equals(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.Equals%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.Equals%2A?displayProperty=fullName> method determines if the underlying system type of the current <xref:System.Type> is the same as the underlying system type of the specified <xref:System.Type>."
  syntax:
    content: public bool Equals (Type o);
    parameters:
    - id: o
      type: System.Type
      description: "The <xref:System.Type> whose underlying system type is to be compared with the underlying system type of the current <xref:System.Type>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the underlying system type of <code>o</code> is the same as the underlying system type of the current <xref:System.Type>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)
  id: FindInterfaces(System.Reflection.TypeFilter,System.Object)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: FindInterfaces(TypeFilter,Object)
  nameWithType: _Type.FindInterfaces(TypeFilter,Object)
  fullName: System.Runtime.InteropServices._Type.FindInterfaces(TypeFilter,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.FindInterfaces%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.FindInterfaces%2A?displayProperty=fullName> method returns an array of <xref:System.Type> objects representing a filtered list of interfaces implemented or inherited by the current <xref:System.Type>."
  syntax:
    content: public Type[] FindInterfaces (System.Reflection.TypeFilter filter, object filterCriteria);
    parameters:
    - id: filter
      type: System.Reflection.TypeFilter
      description: "The <xref href=&quot;System.Reflection.TypeFilter&quot;></xref> delegate that compares the interfaces against `filterCriteria`."
    - id: filterCriteria
      type: System.Object
      description: "The search criteria that determines whether an interface should be included in the returned array."
    return:
      type: System.Type[]
      description: "An array of <xref:System.Type> objects representing a filtered list of the interfaces implemented or inherited by the current <xref:System.Type>.       -or-       An empty array of type <xref:System.Type>, if no interfaces matching the filter are implemented or inherited by the current <xref:System.Type>."
  overload: System.Runtime.InteropServices._Type.FindInterfaces*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)
  id: FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: FindMembers(MemberTypes,BindingFlags,MemberFilter,Object)
  nameWithType: _Type.FindMembers(MemberTypes,BindingFlags,MemberFilter,Object)
  fullName: System.Runtime.InteropServices._Type.FindMembers(MemberTypes,BindingFlags,MemberFilter,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.FindMembers%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.FindMembers%2A?displayProperty=fullName> method returns a filtered array of <xref:System.Reflection.MemberInfo> objects of the specified member type."
  syntax:
    content: public System.Reflection.MemberInfo[] FindMembers (System.Reflection.MemberTypes memberType, System.Reflection.BindingFlags bindingAttr, System.Reflection.MemberFilter filter, object filterCriteria);
    parameters:
    - id: memberType
      type: System.Reflection.MemberTypes
      description: "A <xref uid=&quot;langword_csharp_MemberTypes&quot; name=&quot;MemberTypes&quot; href=&quot;&quot;></xref> object indicating the type of member to search for."
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "A bitmask comprised of one or more <xref href=&quot;System.Reflection.BindingFlags&quot;></xref> that specify how the search is conducted.       -or-       Zero, to return <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: filter
      type: System.Reflection.MemberFilter
      description: "The delegate that does the comparisons, returning <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the member currently being inspected matches the `filterCriteria` and <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> otherwise. You can use the <xref uid=&quot;langword_csharp_FilterAttribute&quot; name=&quot;FilterAttribute&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_FilterName&quot; name=&quot;FilterName&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_FilterNameIgnoreCase&quot; name=&quot;FilterNameIgnoreCase&quot; href=&quot;&quot;></xref> delegates supplied by this class. The first uses the fields of <xref uid=&quot;langword_csharp_FieldAttributes&quot; name=&quot;FieldAttributes&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_MethodAttributes&quot; name=&quot;MethodAttributes&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_MethodImplAttributes&quot; name=&quot;MethodImplAttributes&quot; href=&quot;&quot;></xref> as search criteria, and the other two delegates use <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref> objects as the search criteria."
    - id: filterCriteria
      type: System.Object
      description: "The search criteria that determines whether a member is returned in the array of <xref uid=&quot;langword_csharp_MemberInfo&quot; name=&quot;MemberInfo&quot; href=&quot;&quot;></xref> objects.       The fields of <xref uid=&quot;langword_csharp_FieldAttributes&quot; name=&quot;FieldAttributes&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_MethodAttributes&quot; name=&quot;MethodAttributes&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_MethodImplAttributes&quot; name=&quot;MethodImplAttributes&quot; href=&quot;&quot;></xref> can be used in conjunction with the <xref uid=&quot;langword_csharp_FilterAttribute&quot; name=&quot;FilterAttribute&quot; href=&quot;&quot;></xref> delegate supplied by this class."
    return:
      type: System.Reflection.MemberInfo[]
      description: "A filtered array of <xref:System.Reflection.MemberInfo> objects of the specified member type.       -or-       An empty array of type <xref:System.Reflection.MemberInfo>, if the current <xref:System.Type> does not have members of type <code>memberType</code> that match the filter criteria."
  overload: System.Runtime.InteropServices._Type.FindMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.FullName
  id: FullName
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: FullName
  nameWithType: _Type.FullName
  fullName: System.Runtime.InteropServices._Type.FullName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.FullName%2A?displayProperty=fullName&gt; property."
  remarks: "This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.FullName%2A?displayProperty=fullName> property gets the fully qualified name of the <xref:System.Type>, including the namespace of the <xref:System.Type> but not the assembly."
  syntax:
    content: public string FullName { get; }
    return:
      type: System.String
      description: "A string containing the fully qualified name of the <xref:System.Type>, including the namespace of the <xref:System.Type> but not the assembly."
  overload: System.Runtime.InteropServices._Type.FullName*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetArrayRank
  id: GetArrayRank
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetArrayRank()
  nameWithType: _Type.GetArrayRank()
  fullName: System.Runtime.InteropServices._Type.GetArrayRank()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.GetArrayRank%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.GetArrayRank%2A?displayProperty=fullName> method gets the number of dimensions in an <xref:System.Array>."
  syntax:
    content: public int GetArrayRank ();
    parameters: []
    return:
      type: System.Int32
      description: "An <xref:System.Int32> containing the number of dimensions in the current <xref:System.Type>."
  overload: System.Runtime.InteropServices._Type.GetArrayRank*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetConstructor(System.Type[])
  id: GetConstructor(System.Type[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetConstructor(Type[])
  nameWithType: _Type.GetConstructor(Type[])
  fullName: System.Runtime.InteropServices._Type.GetConstructor(Type[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.GetConstructor%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.GetConstructor%2A?displayProperty=fullName> method searches for a public instance constructor whose parameters match the types in the specified array."
  syntax:
    content: public System.Reflection.ConstructorInfo GetConstructor (Type[] types);
    parameters:
    - id: types
      type: System.Type[]
      description: "An array of <xref:System.Type> objects representing the number, order, and type of the parameters for the desired constructor.       -or-       An empty array of <xref:System.Type> objects, to get a constructor that takes no parameters. Such an empty array is provided by the <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;></xref> field &lt;xref:System.Type?displayProperty=fullName&gt;."
    return:
      type: System.Reflection.ConstructorInfo
      description: "A <xref:System.Reflection.ConstructorInfo> object representing the public instance constructor whose parameters match the types in the parameter type array, if found; otherwise, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.GetConstructor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  id: GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetConstructor(BindingFlags,Binder,Type[],ParameterModifier[])
  nameWithType: _Type.GetConstructor(BindingFlags,Binder,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetConstructor(BindingFlags,Binder,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.GetConstructor%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.GetConstructor%2A?displayProperty=fullName> method searches for a constructor whose parameters match the specified argument types and modifiers, using the specified binding constraints."
  syntax:
    content: public System.Reflection.ConstructorInfo GetConstructor (System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "A bitmask comprised of one or more <xref href=&quot;System.Reflection.BindingFlags&quot;></xref> that specify how the search is conducted.       -or-       Zero, to return <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: binder
      type: System.Reflection.Binder
      description: "A <xref href=&quot;System.Reflection.Binder&quot;></xref> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.       -or-       <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, to use the <xref:System.Type.DefaultBinder*>."
    - id: types
      type: System.Type[]
      description: "An array of <xref:System.Type> objects representing the number, order, and type of the parameters for the constructor to get.       -or-       An empty array of the type <xref:System.Type> (that is, Type[] types = new Type[0]) to get a constructor that takes no parameters.       -or-       <xref:System.Type>."
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "An array of <xref href=&quot;System.Reflection.ParameterModifier&quot;></xref> objects representing the attributes associated with the corresponding element in the parameter type array. The default binder does not process this parameter."
    return:
      type: System.Reflection.ConstructorInfo
      description: "A <xref:System.Reflection.ConstructorInfo> object representing the constructor that matches the specified requirements, if found; otherwise, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.GetConstructor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  id: GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetConstructor(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  nameWithType: _Type.GetConstructor(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetConstructor(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.GetConstructor%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.GetConstructor%2A?displayProperty=fullName> method searches for a constructor whose parameters match the specified argument types and modifiers, using the specified binding constraints and the specified calling convention."
  syntax:
    content: public System.Reflection.ConstructorInfo GetConstructor (System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "A bitmask comprised of one or more <xref href=&quot;System.Reflection.BindingFlags&quot;></xref> that specify how the search is conducted.       -or-       Zero, to return <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: binder
      type: System.Reflection.Binder
      description: "A <xref href=&quot;System.Reflection.Binder&quot;></xref> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.       -or-       <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, to use the <xref:System.Type.DefaultBinder*>."
    - id: callConvention
      type: System.Reflection.CallingConventions
      description: "The <xref:System.Reflection.CallingConventions> object that specifies the set of rules to use regarding the order and layout of arguments, how the return value is passed, what registers are used for arguments, and the stack is cleaned up."
    - id: types
      type: System.Type[]
      description: "An array of <xref:System.Type> objects representing the number, order, and type of the parameters for the constructor to get.       -or-       An empty array of the type <xref:System.Type> (that is, Type[] types = new Type[0]) to get a constructor that takes no parameters."
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "An array of <xref href=&quot;System.Reflection.ParameterModifier&quot;></xref> objects representing the attributes associated with the corresponding element in the `types` array. The default binder does not process this parameter."
    return:
      type: System.Reflection.ConstructorInfo
      description: "A <xref:System.Reflection.ConstructorInfo> object representing the constructor that matches the specified requirements, if found; otherwise, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.GetConstructor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetConstructors
  id: GetConstructors
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetConstructors()
  nameWithType: _Type.GetConstructors()
  fullName: System.Runtime.InteropServices._Type.GetConstructors()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.GetConstructors%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.GetConstructors%2A?displayProperty=fullName> method returns all the public constructors defined for the current <xref:System.Type>."
  syntax:
    content: public System.Reflection.ConstructorInfo[] GetConstructors ();
    parameters: []
    return:
      type: System.Reflection.ConstructorInfo[]
      description: "An array of <xref:System.Reflection.ConstructorInfo> objects representing all the public instance constructors defined for the current <xref:System.Type>, but not including the type initializer (static constructor). If no public instance constructors are defined for the current <xref:System.Type>, or if the current <xref:System.Type> represents a type parameter of a generic type or method definition, an empty array of type <xref:System.Reflection.ConstructorInfo> is returned."
  overload: System.Runtime.InteropServices._Type.GetConstructors*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetConstructors(System.Reflection.BindingFlags)
  id: GetConstructors(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetConstructors(BindingFlags)
  nameWithType: _Type.GetConstructors(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetConstructors(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.GetConstructors%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.GetConstructors%2A?displayProperty=fullName> method searches for the constructors defined for the current <xref:System.Type>, using the specified <xref:System.Reflection.BindingFlags>."
  syntax:
    content: public System.Reflection.ConstructorInfo[] GetConstructors (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "A bitmask comprised of one or more <xref href=&quot;System.Reflection.BindingFlags&quot;></xref> that specify how the search is conducted.       -or-       Zero, to return <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Reflection.ConstructorInfo[]
      description: "An array of <xref:System.Reflection.ConstructorInfo> objects representing all constructors defined for the current <xref:System.Type> that match the specified binding constraints, including the type initializer if it is defined. Returns an empty array of type <xref:System.Reflection.ConstructorInfo> if no constructors are defined for the current <xref:System.Type>, if none of the defined constructors match the binding constraints, or if the current <xref:System.Type> represents a type parameter of a generic type or method definition."
  overload: System.Runtime.InteropServices._Type.GetConstructors*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetCustomAttributes(System.Boolean)
  id: GetCustomAttributes(System.Boolean)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetCustomAttributes(Boolean)
  nameWithType: _Type.GetCustomAttributes(Boolean)
  fullName: System.Runtime.InteropServices._Type.GetCustomAttributes(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=fullName> method returns all attributes applied to this member."
  syntax:
    content: public object[] GetCustomAttributes (bool inherit);
    parameters:
    - id: inherit
      type: System.Boolean
      description: "Specifies whether to search this member&quot;s inheritance chain to find the attributes."
    return:
      type: System.Object[]
      description: "An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied."
  overload: System.Runtime.InteropServices._Type.GetCustomAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetCustomAttributes(System.Type,System.Boolean)
  id: GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: _Type.GetCustomAttributes(Type,Boolean)
  fullName: System.Runtime.InteropServices._Type.GetCustomAttributes(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=fullName> method returns all attributes applied to this member."
  syntax:
    content: public object[] GetCustomAttributes (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: "The type of attribute to search for. Only attributes that are assignable to this type are returned."
    - id: inherit
      type: System.Boolean
      description: "Specifies whether to search this member&quot;s inheritance chain to find the attributes."
    return:
      type: System.Object[]
      description: "An array of custom attributes applied to this member, or an array with zero (0) elements if no attributes have been applied."
  overload: System.Runtime.InteropServices._Type.GetCustomAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetDefaultMembers
  id: GetDefaultMembers
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetDefaultMembers()
  nameWithType: _Type.GetDefaultMembers()
  fullName: System.Runtime.InteropServices._Type.GetDefaultMembers()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.GetDefaultMembers%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.GetDefaultMembers%2A?displayProperty=fullName> method searches for the members defined for the current <xref:System.Type> whose <xref:System.Reflection.DefaultMemberAttribute> is set."
  syntax:
    content: public System.Reflection.MemberInfo[] GetDefaultMembers ();
    parameters: []
    return:
      type: System.Reflection.MemberInfo[]
      description: "An array of <xref:System.Reflection.MemberInfo> objects representing all default members of the current <xref:System.Type>.       -or-       An empty array of type <xref:System.Reflection.MemberInfo>, if the current <xref:System.Type> does not have default members."
  overload: System.Runtime.InteropServices._Type.GetDefaultMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetElementType
  id: GetElementType
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetElementType()
  nameWithType: _Type.GetElementType()
  fullName: System.Runtime.InteropServices._Type.GetElementType()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.GetElementType%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.GetElementType%2A?displayProperty=fullName> method returns the <xref:System.Type> of the object encompassed or referred to by the current array, pointer or reference type."
  syntax:
    content: public Type GetElementType ();
    parameters: []
    return:
      type: System.Type
      description: "The <xref:System.Type> of the object encompassed or referred to by the current array, pointer or reference type.       -or-       <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the current <xref:System.Type> is not an array or a pointer, or is not passed by reference, or represents a generic type or a type parameter of a generic type or method definition."
  overload: System.Runtime.InteropServices._Type.GetElementType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetEvent(System.String)
  id: GetEvent(System.String)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetEvent(String)
  nameWithType: _Type.GetEvent(String)
  fullName: System.Runtime.InteropServices._Type.GetEvent(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.GetEvent%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.GetEvent%2A?displayProperty=fullName> method searches for events that are declared or inherited by the current <xref:System.Type>, using the specified binding constraints."
  syntax:
    content: public System.Reflection.EventInfo GetEvent (string name);
    parameters:
    - id: name
      type: System.String
      description: "A bitmask comprised of one or more <xref href=&quot;System.Reflection.BindingFlags&quot;></xref> that specify how the search is conducted.       -or-       Zero, to return <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Reflection.EventInfo
      description: "An array of <xref:System.Reflection.EventInfo> objects representing all events that are declared or inherited by the current <xref:System.Type> that match the specified binding constraints.       -or-       An empty array of type <xref:System.Reflection.EventInfo>, if the current <xref:System.Type> does not have events, or if none of the events match the binding constraints."
  overload: System.Runtime.InteropServices._Type.GetEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetEvent(System.String,System.Reflection.BindingFlags)
  id: GetEvent(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetEvent(String,BindingFlags)
  nameWithType: _Type.GetEvent(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetEvent(String,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.GetEvent%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.GetEvent%2A?displayProperty=fullName> method returns the <xref:System.Reflection.EventInfo> object representing the specified event, using the specified binding constraints."
  syntax:
    content: public System.Reflection.EventInfo GetEvent (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "The <xref:System.String> containing the name of an event that is declared or inherited by the current <xref:System.Type>."
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "A bitmask comprised of one or more <xref href=&quot;System.Reflection.BindingFlags&quot;></xref> that specify how the search is conducted.       -or-       Zero, to return <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Reflection.EventInfo
      description: "The <xref:System.Reflection.EventInfo> object representing the specified event that is declared or inherited by the current <xref:System.Type>, if found; otherwise, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.GetEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetEvents
  id: GetEvents
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetEvents()
  nameWithType: _Type.GetEvents()
  fullName: System.Runtime.InteropServices._Type.GetEvents()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.GetEvents%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.GetEvents%2A?displayProperty=fullName> method returns all the public events that are declared or inherited by the current <xref:System.Type>."
  syntax:
    content: public System.Reflection.EventInfo[] GetEvents ();
    parameters: []
    return:
      type: System.Reflection.EventInfo[]
      description: "An array of <xref:System.Reflection.EventInfo> objects representing all the public events that are declared or inherited by the current <xref:System.Type>.       -or-       An empty array of type <xref:System.Reflection.EventInfo>, if the current <xref:System.Type> does not have public events."
  overload: System.Runtime.InteropServices._Type.GetEvents*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetEvents(System.Reflection.BindingFlags)
  id: GetEvents(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetEvents(BindingFlags)
  nameWithType: _Type.GetEvents(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetEvents(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.GetEvents%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.GetEvents%2A?displayProperty=fullName> method searches for events that are declared or inherited by the current <xref:System.Type>, using the specified binding constraints."
  syntax:
    content: public System.Reflection.EventInfo[] GetEvents (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "A bitmask comprised of one or more <xref href=&quot;System.Reflection.BindingFlags&quot;></xref> that specify how the search is conducted.       -or-       Zero, to return <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Reflection.EventInfo[]
      description: "An array of <xref:System.Reflection.EventInfo> objects representing all events that are declared or inherited by the current <xref:System.Type> that match the specified binding constraints.       -or-       An empty array of type <xref:System.Reflection.EventInfo>, if the current <xref:System.Type> does not have events, or if none of the events match the binding constraints."
  overload: System.Runtime.InteropServices._Type.GetEvents*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetField(System.String)
  id: GetField(System.String)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetField(String)
  nameWithType: _Type.GetField(String)
  fullName: System.Runtime.InteropServices._Type.GetField(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.GetField%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.GetField%2A?displayProperty=fullName> method searches for the public field with the specified name."
  syntax:
    content: public System.Reflection.FieldInfo GetField (string name);
    parameters:
    - id: name
      type: System.String
      description: "The <xref:System.String> containing the name of the data field to get."
    return:
      type: System.Reflection.FieldInfo
      description: "A <xref:System.Reflection.FieldInfo> object representing the public field with the specified name, if found; otherwise, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.GetField*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetField(System.String,System.Reflection.BindingFlags)
  id: GetField(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetField(String,BindingFlags)
  nameWithType: _Type.GetField(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetField(String,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.GetField%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.GetField%2A?displayProperty=fullName> method searches for the specified field, using the specified binding constraints."
  syntax:
    content: public System.Reflection.FieldInfo GetField (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "The <xref:System.String> containing the name of the data field to get."
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "A bitmask comprised of one or more <xref href=&quot;System.Reflection.BindingFlags&quot;></xref> that specify how the search is conducted.       -or-       Zero, to return <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Reflection.FieldInfo
      description: "A <xref:System.Reflection.FieldInfo> object representing the field that matches the specified requirements, if found; otherwise, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.GetField*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetFields
  id: GetFields
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetFields()
  nameWithType: _Type.GetFields()
  fullName: System.Runtime.InteropServices._Type.GetFields()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.GetFields%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.GetFields%2A?displayProperty=fullName> method returns all the public fields of the current <xref:System.Type>."
  syntax:
    content: public System.Reflection.FieldInfo[] GetFields ();
    parameters: []
    return:
      type: System.Reflection.FieldInfo[]
      description: "An array of <xref:System.Reflection.FieldInfo> objects representing all the public fields defined for the current <xref:System.Type>.       -or-       An empty array of type <xref:System.Reflection.FieldInfo>, if no public fields are defined for the current <xref:System.Type>."
  overload: System.Runtime.InteropServices._Type.GetFields*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetFields(System.Reflection.BindingFlags)
  id: GetFields(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetFields(BindingFlags)
  nameWithType: _Type.GetFields(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetFields(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.GetFields%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.GetFields%2A?displayProperty=fullName> method searches for the fields defined for the current <xref:System.Type>, using the specified binding constraints."
  syntax:
    content: public System.Reflection.FieldInfo[] GetFields (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "A bitmask comprised of one or more <xref href=&quot;System.Reflection.BindingFlags&quot;></xref> that specify how the search is conducted.       -or-       Zero, to return <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Reflection.FieldInfo[]
      description: "An array of <xref:System.Reflection.FieldInfo> objects representing all fields defined for the current <xref:System.Type> that match the specified binding constraints.       -or-       An empty array of type <xref:System.Reflection.FieldInfo>, if no fields are defined for the current <xref:System.Type>, or if none of the defined fields match the binding constraints."
  overload: System.Runtime.InteropServices._Type.GetFields*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetHashCode
  id: GetHashCode
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: _Type.GetHashCode()
  fullName: System.Runtime.InteropServices._Type.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.GetHashCode%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.GetHashCode%2A?displayProperty=fullName> method."
  syntax:
    content: public int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "An <xref:System.Int32> containing the hash code for this instance."
  overload: System.Runtime.InteropServices._Type.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  id: GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: _Type.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._Type.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Maps a set of names to a corresponding set of dispatch identifiers."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library."
  syntax:
    content: public void GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);
    parameters:
    - id: riid
      type: System.Guid
      description: "Reserved for future use. Must be IID_NULL."
    - id: rgszNames
      type: System.IntPtr
      description: "Passed-in array of names to be mapped."
    - id: cNames
      type: System.UInt32
      description: "Count of the names to be mapped."
    - id: lcid
      type: System.UInt32
      description: "The locale context in which to interpret the names."
    - id: rgDispId
      type: System.IntPtr
      description: "Caller-allocated array that receives the IDs corresponding to the names."
  overload: System.Runtime.InteropServices._Type.GetIDsOfNames*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetInterface(System.String)
  id: GetInterface(System.String)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetInterface(String)
  nameWithType: _Type.GetInterface(String)
  fullName: System.Runtime.InteropServices._Type.GetInterface(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.GetInterface%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.GetInterface%2A?displayProperty=fullName> method searches for the interface with the specified name.."
  syntax:
    content: public Type GetInterface (string name);
    parameters:
    - id: name
      type: System.String
      description: "The <xref:System.String> containing the name of the interface to get. For generic interfaces, this is the mangled name."
    return:
      type: System.Type
      description: "A <xref:System.Type> object representing the interface with the specified name, implemented or inherited by the current <xref:System.Type>, if found; otherwise, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.GetInterface*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetInterface(System.String,System.Boolean)
  id: GetInterface(System.String,System.Boolean)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetInterface(String,Boolean)
  nameWithType: _Type.GetInterface(String,Boolean)
  fullName: System.Runtime.InteropServices._Type.GetInterface(String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.GetInterface%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.GetInterface%2A?displayProperty=fullName> method searches for the specified interface, specifying whether to do a case-sensitive search."
  syntax:
    content: public Type GetInterface (string name, bool ignoreCase);
    parameters:
    - id: name
      type: System.String
      description: "The <xref:System.String> containing the name of the interface to get. For generic interfaces, this is the mangled name."
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to perform a case-insensitive search for `name`.       -or-       <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to perform a case-sensitive search for `name`."
    return:
      type: System.Type
      description: "A <xref:System.Type> object representing the interface with the specified name, implemented or inherited by the current <xref:System.Type>, if found; otherwise, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.GetInterface*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetInterfaceMap(System.Type)
  id: GetInterfaceMap(System.Type)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetInterfaceMap(Type)
  nameWithType: _Type.GetInterfaceMap(Type)
  fullName: System.Runtime.InteropServices._Type.GetInterfaceMap(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.GetInterfaceMap%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.GetInterfaceMap%2A?displayProperty=fullName> method returns an interface mapping for the specified interface type."
  syntax:
    content: public System.Reflection.InterfaceMapping GetInterfaceMap (Type interfaceType);
    parameters:
    - id: interfaceType
      type: System.Type
      description: "The <xref:System.Type> of the interface of which to retrieve a mapping."
    return:
      type: System.Reflection.InterfaceMapping
      description: "An <xref:System.Reflection.InterfaceMapping> object representing the interface mapping for <code>interfaceType</code>."
  overload: System.Runtime.InteropServices._Type.GetInterfaceMap*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetInterfaces
  id: GetInterfaces
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetInterfaces()
  nameWithType: _Type.GetInterfaces()
  fullName: System.Runtime.InteropServices._Type.GetInterfaces()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.GetInterfaces%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.GetInterfaces%2A?displayProperty=fullName> method gets all the interfaces implemented or inherited by the current <xref:System.Type>."
  syntax:
    content: public Type[] GetInterfaces ();
    parameters: []
    return:
      type: System.Type[]
      description: "An array of <xref:System.Type> objects representing all the interfaces implemented or inherited by the current <xref:System.Type>.       -or-       An empty array of type <xref:System.Type>, if no interfaces are implemented or inherited by the current <xref:System.Type>."
  overload: System.Runtime.InteropServices._Type.GetInterfaces*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMember(System.String)
  id: GetMember(System.String)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMember(String)
  nameWithType: _Type.GetMember(String)
  fullName: System.Runtime.InteropServices._Type.GetMember(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.GetMember%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.GetMember%2A?displayProperty=fullName> method searches for the public members with the specified name."
  syntax:
    content: public System.Reflection.MemberInfo[] GetMember (string name);
    parameters:
    - id: name
      type: System.String
      description: "The <xref:System.String> containing the name of the public members to get."
    return:
      type: System.Reflection.MemberInfo[]
      description: "An array of <xref:System.Reflection.MemberInfo> objects representing the public members with the specified name, if found; otherwise, an empty array."
  overload: System.Runtime.InteropServices._Type.GetMember*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.BindingFlags)
  id: GetMember(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMember(String,BindingFlags)
  nameWithType: _Type.GetMember(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetMember(String,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.GetMember%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.GetMember%2A?displayProperty=fullName> method searches for the specified members, using the specified binding constraints."
  syntax:
    content: public System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "The <xref:System.String> containing the name of the members to get."
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "A bitmask comprised of one or more <xref href=&quot;System.Reflection.BindingFlags&quot;></xref> that specify how the search is conducted.       -or-       Zero, to return an empty array."
    return:
      type: System.Reflection.MemberInfo[]
      description: "An array of <xref:System.Reflection.MemberInfo> objects representing the public members with the specified name, if found; otherwise, an empty array."
  overload: System.Runtime.InteropServices._Type.GetMember*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  id: GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMember(String,MemberTypes,BindingFlags)
  nameWithType: _Type.GetMember(String,MemberTypes,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetMember(String,MemberTypes,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.GetMember%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.GetMember%2A?displayProperty=fullName> method searches for the specified members of the specified member type, using the specified binding constraints."
  syntax:
    content: public System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.MemberTypes type, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "The <xref:System.String> containing the name of the members to get."
    - id: type
      type: System.Reflection.MemberTypes
      description: "The <xref href=&quot;System.Reflection.MemberTypes&quot;></xref> value to search for."
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "A bitmask comprised of one or more <xref href=&quot;System.Reflection.BindingFlags&quot;></xref> that specify how the search is conducted.       -or-       Zero, to return an empty array."
    return:
      type: System.Reflection.MemberInfo[]
      description: "An array of <xref:System.Reflection.MemberInfo> objects representing the public members with the specified name, if found; otherwise, an empty array."
  overload: System.Runtime.InteropServices._Type.GetMember*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMembers
  id: GetMembers
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMembers()
  nameWithType: _Type.GetMembers()
  fullName: System.Runtime.InteropServices._Type.GetMembers()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.GetMembers%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.GetMembers%2A?displayProperty=fullName> method returns all the public members of the current <xref:System.Type>."
  syntax:
    content: public System.Reflection.MemberInfo[] GetMembers ();
    parameters: []
    return:
      type: System.Reflection.MemberInfo[]
      description: "An array of <xref:System.Reflection.MemberInfo> objects representing all the public members of the current <xref:System.Type>.       -or-       An empty array of type <xref:System.Reflection.MemberInfo>, if the current <xref:System.Type> does not have public members."
  overload: System.Runtime.InteropServices._Type.GetMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMembers(System.Reflection.BindingFlags)
  id: GetMembers(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMembers(BindingFlags)
  nameWithType: _Type.GetMembers(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetMembers(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.GetMembers%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.GetMembers%2A?displayProperty=fullName> method searches for the members defined for the current <xref:System.Type>, using the specified binding constraints."
  syntax:
    content: public System.Reflection.MemberInfo[] GetMembers (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "A bitmask comprised of one or more <xref href=&quot;System.Reflection.BindingFlags&quot;></xref> that specify how the search is conducted.       -or-       Zero, to return <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Reflection.MemberInfo[]
      description: "An array of <xref:System.Reflection.MemberInfo> objects representing all members defined for the current <xref:System.Type> that match the specified binding constraints.       -or-       An empty array of type <xref:System.Reflection.MemberInfo>, if no members are defined for the current <xref:System.Type>, or if none of the defined members match the binding constraints."
  overload: System.Runtime.InteropServices._Type.GetMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String)
  id: GetMethod(System.String)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMethod(String)
  nameWithType: _Type.GetMethod(String)
  fullName: System.Runtime.InteropServices._Type.GetMethod(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.GetMethod%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.GetMethod%2A?displayProperty=fullName> method searches for the public method with the specified name.."
  syntax:
    content: public System.Reflection.MethodInfo GetMethod (string name);
    parameters:
    - id: name
      type: System.String
      description: "The <xref:System.String> containing the name of the public method to get."
    return:
      type: System.Reflection.MethodInfo
      description: "A <xref:System.Reflection.MethodInfo> object representing the public method with the specified name, if found; otherwise, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.GetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags)
  id: GetMethod(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMethod(String,BindingFlags)
  nameWithType: _Type.GetMethod(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetMethod(String,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.GetMethod%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.GetMethod%2A?displayProperty=fullName> method searches for the specified method, using the specified binding constraints."
  syntax:
    content: public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "The <xref:System.String> containing the name of the method to get."
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "A bitmask comprised of one or more <xref href=&quot;System.Reflection.BindingFlags&quot;></xref> that specify how the search is conducted.       -or-       Zero, to return <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Reflection.MethodInfo
      description: "A <xref:System.Reflection.MethodInfo> object representing the method that matches the specified requirements, if found; otherwise, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.GetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[])
  id: GetMethod(System.String,System.Type[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMethod(String,Type[])
  nameWithType: _Type.GetMethod(String,Type[])
  fullName: System.Runtime.InteropServices._Type.GetMethod(String,Type[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.GetMethod%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.GetMethod%2A?displayProperty=fullName> method searches for the specified public method whose parameters match the specified argument types."
  syntax:
    content: public System.Reflection.MethodInfo GetMethod (string name, Type[] types);
    parameters:
    - id: name
      type: System.String
      description: "The <xref:System.String> containing the name of the public method to get."
    - id: types
      type: System.Type[]
      description: "An array of <xref:System.Type> objects representing the number, order, and type of the parameters for the method to get.       -or-       An empty array of the type <xref:System.Type> (that is, Type[] types = new Type[0]) to get a method that takes no parameters."
    return:
      type: System.Reflection.MethodInfo
      description: "A <xref:System.Reflection.MethodInfo> object representing the public method whose parameters match the specified argument types, if found; otherwise, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.GetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])
  id: GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMethod(String,Type[],ParameterModifier[])
  nameWithType: _Type.GetMethod(String,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetMethod(String,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.GetMethod%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.GetMethod%2A?displayProperty=fullName> method searches for the specified public method whose parameters match the specified argument types and modifiers."
  syntax:
    content: public System.Reflection.MethodInfo GetMethod (string name, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: "The <xref:System.String> containing the name of the public method to get."
    - id: types
      type: System.Type[]
      description: "An array of <xref:System.Type> objects representing the number, order, and type of the parameters for the method to get.       -or-       An empty array of the type <xref:System.Type> (that is, Type[] types = new Type[0]) to get a method that takes no parameters."
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "An array of <xref href=&quot;System.Reflection.ParameterModifier&quot;></xref> objects representing the attributes associated with the corresponding element in the `types` array. The default binder does not process this parameter."
    return:
      type: System.Reflection.MethodInfo
      description: "A <xref:System.Reflection.MethodInfo> object representing the public method that matches the specified requirements, if found; otherwise, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.GetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  id: GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  nameWithType: _Type.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.GetMethod%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.GetMethod%2A?displayProperty=fullName> method searches for the specified method whose parameters match the specified argument types and modifiers, using the specified binding constraints."
  syntax:
    content: public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: "The <xref:System.String> containing the name of the method to get."
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "A bitmask comprised of one or more <xref href=&quot;System.Reflection.BindingFlags&quot;></xref> that specify how the search is conducted.       -or-       Zero, to return <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: binder
      type: System.Reflection.Binder
      description: "A <xref href=&quot;System.Reflection.Binder&quot;></xref> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.       -or-       <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, to use the <xref:System.Type.DefaultBinder*>."
    - id: types
      type: System.Type[]
      description: "An array of <xref:System.Type> objects representing the number, order, and type of the parameters for the method to get.       -or-       An empty array of the type <xref:System.Type> (that is, Type[] types = new Type[0]) to get a method that takes no parameters."
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "An array of <xref href=&quot;System.Reflection.ParameterModifier&quot;></xref> objects representing the attributes associated with the corresponding element in the `types` array. The default binder does not process this parameter."
    return:
      type: System.Reflection.MethodInfo
      description: "A <xref:System.Reflection.MethodInfo> object representing the method that matches the specified requirements, if found; otherwise, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.GetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  id: GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  nameWithType: _Type.GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.GetMethod%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.GetMethod%2A?displayProperty=fullName> method searches for the specified method whose parameters match the specified argument types and modifiers, using the specified binding constraints and the specified calling convention."
  syntax:
    content: public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: "The <xref:System.String> containing the name of the method to get."
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "A bitmask comprised of one or more <xref href=&quot;System.Reflection.BindingFlags&quot;></xref> that specify how the search is conducted.       -or-       Zero, to return <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: binder
      type: System.Reflection.Binder
      description: "A <xref href=&quot;System.Reflection.Binder&quot;></xref> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.       -or-       <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, to use the <xref:System.Type.DefaultBinder*>."
    - id: callConvention
      type: System.Reflection.CallingConventions
      description: "The <xref:System.Reflection.CallingConventions> object that specifies the set of rules to use regarding the order and layout of arguments, how the return value is passed, what registers are used for arguments, and how the stack is cleaned up."
    - id: types
      type: System.Type[]
      description: "An array of <xref:System.Type> objects representing the number, order, and type of the parameters for the method to get.       -or-       An empty array of the type <xref:System.Type> (that is, Type[] types = new Type[0]) to get a method that takes no parameters."
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "An array of <xref href=&quot;System.Reflection.ParameterModifier&quot;></xref> objects representing the attributes associated with the corresponding element in the `types` array. The default binder does not process this parameter."
    return:
      type: System.Reflection.MethodInfo
      description: "A <xref:System.Reflection.MethodInfo> object representing the method that matches the specified requirements, if found; otherwise, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.GetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMethods
  id: GetMethods
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMethods()
  nameWithType: _Type.GetMethods()
  fullName: System.Runtime.InteropServices._Type.GetMethods()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.GetMethods%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.GetMethods%2A?displayProperty=fullName> method returns all the public methods of the current <xref:System.Type>."
  syntax:
    content: public System.Reflection.MethodInfo[] GetMethods ();
    parameters: []
    return:
      type: System.Reflection.MethodInfo[]
      description: "An array of <xref:System.Reflection.MethodInfo> objects representing all the public methods defined for the current <xref:System.Type>.       -or-       An empty array of type <xref:System.Reflection.MethodInfo>, if no public methods are defined for the current <xref:System.Type>."
  overload: System.Runtime.InteropServices._Type.GetMethods*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMethods(System.Reflection.BindingFlags)
  id: GetMethods(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMethods(BindingFlags)
  nameWithType: _Type.GetMethods(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetMethods(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.GetMethods%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.GetMethods%2A?displayProperty=fullName> method searches for the methods defined for the current <xref:System.Type>, using the specified binding constraints."
  syntax:
    content: public System.Reflection.MethodInfo[] GetMethods (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "A bitmask comprised of one or more <xref href=&quot;System.Reflection.BindingFlags&quot;></xref> that specify how the search is conducted.       -or-       Zero, to return <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Reflection.MethodInfo[]
      description: "An array of <xref:System.Reflection.MethodInfo> objects representing all methods defined for the current <xref:System.Type> that match the specified binding constraints.       -or-       An empty array of type <xref:System.Reflection.MethodInfo>, if no methods are defined for the current <xref:System.Type>, or if none of the defined methods match the binding constraints."
  overload: System.Runtime.InteropServices._Type.GetMethods*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetNestedType(System.String)
  id: GetNestedType(System.String)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetNestedType(String)
  nameWithType: _Type.GetNestedType(String)
  fullName: System.Runtime.InteropServices._Type.GetNestedType(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.GetNestedType%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.GetNestedType%2A?displayProperty=fullName> method searches for the public nested type with the specified name."
  syntax:
    content: public Type GetNestedType (string name);
    parameters:
    - id: name
      type: System.String
      description: "The string containing the name of the nested type to get."
    return:
      type: System.Type
      description: "A <xref:System.Type> object representing the public nested type with the specified name, if found; otherwise, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.GetNestedType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetNestedType(System.String,System.Reflection.BindingFlags)
  id: GetNestedType(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetNestedType(String,BindingFlags)
  nameWithType: _Type.GetNestedType(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetNestedType(String,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.GetNestedType%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.GetNestedType%2A?displayProperty=fullName> method searches for the specified nested type, using the specified binding constraints."
  syntax:
    content: public Type GetNestedType (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "The string containing the name of the nested type to get."
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "A bitmask comprised of one or more <xref href=&quot;System.Reflection.BindingFlags&quot;></xref> that specify how the search is conducted.       -or-       Zero, to return <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Type
      description: "A <xref:System.Type> object representing the nested type that matches the specified requirements, if found; otherwise, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.GetNestedType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetNestedTypes
  id: GetNestedTypes
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetNestedTypes()
  nameWithType: _Type.GetNestedTypes()
  fullName: System.Runtime.InteropServices._Type.GetNestedTypes()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.GetNestedTypes%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.GetNestedTypes%2A?displayProperty=fullName> method returns all the types nested within the current <xref:System.Type>."
  syntax:
    content: public Type[] GetNestedTypes ();
    parameters: []
    return:
      type: System.Type[]
      description: "An array of <xref:System.Type> objects representing all the types nested within the current <xref:System.Type>.       -or-       An empty array of type <xref:System.Type>, if no types are nested within the current <xref:System.Type>."
  overload: System.Runtime.InteropServices._Type.GetNestedTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetNestedTypes(System.Reflection.BindingFlags)
  id: GetNestedTypes(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetNestedTypes(BindingFlags)
  nameWithType: _Type.GetNestedTypes(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetNestedTypes(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.GetNestedTypes%2A?displayProperty=fullName&gt; method, and searches for the types nested within the current <xref:System.Type>, using the specified binding constraints."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code."
  syntax:
    content: public Type[] GetNestedTypes (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "A bitmask comprised of one or more <xref href=&quot;System.Reflection.BindingFlags&quot;></xref> that specify how the search is conducted.       -or-       Zero, to return <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Type[]
      description: "An array of <xref:System.Type> objects representing all the types nested within the current <xref:System.Type> that match the specified binding constraints.       -or-       An empty array of type <xref:System.Type>, if no types are nested within the current <xref:System.Type>, or if none of the nested types match the binding constraints."
  overload: System.Runtime.InteropServices._Type.GetNestedTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetProperties
  id: GetProperties
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetProperties()
  nameWithType: _Type.GetProperties()
  fullName: System.Runtime.InteropServices._Type.GetProperties()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.GetProperties%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.GetProperties%2A?displayProperty=fullName> method returns all the public properties of the current <xref:System.Type>."
  syntax:
    content: public System.Reflection.PropertyInfo[] GetProperties ();
    parameters: []
    return:
      type: System.Reflection.PropertyInfo[]
      description: "An array of <xref:System.Reflection.PropertyInfo> objects representing all public properties of the current <xref:System.Type>.       -or-       An empty array of type <xref:System.Reflection.PropertyInfo>, if the current <xref:System.Type> does not have public properties."
  overload: System.Runtime.InteropServices._Type.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetProperties(System.Reflection.BindingFlags)
  id: GetProperties(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetProperties(BindingFlags)
  nameWithType: _Type.GetProperties(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetProperties(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.GetProperties%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.GetProperties%2A?displayProperty=fullName> method searches for the properties of the current <xref:System.Type>, using the specified binding constraints."
  syntax:
    content: public System.Reflection.PropertyInfo[] GetProperties (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "A bitmask comprised of one or more <xref href=&quot;System.Reflection.BindingFlags&quot;></xref> that specify how the search is conducted.       -or-       Zero, to return <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Reflection.PropertyInfo[]
      description: "An array of <xref:System.Reflection.PropertyInfo> objects representing all properties of the current <xref:System.Type> that match the specified binding constraints.       -or-       An empty array of type <xref:System.Reflection.PropertyInfo>, if the current <xref:System.Type> does not have properties, or if none of the properties match the binding constraints."
  overload: System.Runtime.InteropServices._Type.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String)
  id: GetProperty(System.String)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetProperty(String)
  nameWithType: _Type.GetProperty(String)
  fullName: System.Runtime.InteropServices._Type.GetProperty(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.GetProperty%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.GetProperty%2A?displayProperty=fullName> method searches for the public property with the specified name."
  syntax:
    content: public System.Reflection.PropertyInfo GetProperty (string name);
    parameters:
    - id: name
      type: System.String
      description: "The <xref:System.String> containing the name of the public property to get."
    return:
      type: System.Reflection.PropertyInfo
      description: "A <xref:System.Reflection.PropertyInfo> object representing the public property with the specified name, if found; otherwise, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags)
  id: GetProperty(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetProperty(String,BindingFlags)
  nameWithType: _Type.GetProperty(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.GetProperty%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.GetProperty%2A?displayProperty=fullName> method searches for the specified property, using the specified binding constraints."
  syntax:
    content: public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "The <xref:System.String> containing the name of the property to get."
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "A bitmask comprised of one or more <xref href=&quot;System.Reflection.BindingFlags&quot;></xref> that specify how the search is conducted.       -or-       Zero, to return <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Reflection.PropertyInfo
      description: "A <xref:System.Reflection.PropertyInfo> object representing the property that matches the specified requirements, if found; otherwise, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type)
  id: GetProperty(System.String,System.Type)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetProperty(String,Type)
  nameWithType: _Type.GetProperty(String,Type)
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.GetProperty%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.GetProperty%2A?displayProperty=fullName> method searches for the public property with the specified name and return type."
  syntax:
    content: public System.Reflection.PropertyInfo GetProperty (string name, Type returnType);
    parameters:
    - id: name
      type: System.String
      description: "The <xref:System.String> containing the name of the public property to get."
    - id: returnType
      type: System.Type
      description: "The return type of the property."
    return:
      type: System.Reflection.PropertyInfo
      description: "A <xref:System.Reflection.PropertyInfo> object representing the public property with the specified name, if found; otherwise, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type[])
  id: GetProperty(System.String,System.Type[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetProperty(String,Type[])
  nameWithType: _Type.GetProperty(String,Type[])
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,Type[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.GetProperty%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.GetProperty%2A?displayProperty=fullName> method searches for the specified public property whose parameters match the specified argument types.."
  syntax:
    content: public System.Reflection.PropertyInfo GetProperty (string name, Type[] types);
    parameters:
    - id: name
      type: System.String
      description: "The <xref:System.String> containing the name of the public property to get."
    - id: types
      type: System.Type[]
      description: "An array of <xref:System.Type> objects representing the number, order, and type of the parameters for the indexed property to get.       -or-       An empty array of the type <xref:System.Type> (that is, Type[] types = new Type[0]) to get a property that is not indexed."
    return:
      type: System.Reflection.PropertyInfo
      description: "A <xref:System.Reflection.PropertyInfo> object representing the public property whose parameters match the specified argument types, if found; otherwise, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[])
  id: GetProperty(System.String,System.Type,System.Type[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetProperty(String,Type,Type[])
  nameWithType: _Type.GetProperty(String,Type,Type[])
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,Type,Type[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.GetProperty%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.GetProperty%2A?displayProperty=fullName> method searches for the specified public property whose parameters match the specified argument types."
  syntax:
    content: public System.Reflection.PropertyInfo GetProperty (string name, Type returnType, Type[] types);
    parameters:
    - id: name
      type: System.String
      description: "The <xref:System.String> containing the name of the public property to get."
    - id: returnType
      type: System.Type
      description: "The return type of the property."
    - id: types
      type: System.Type[]
      description: "An array of <xref:System.Type> objects representing the number, order, and type of the parameters for the indexed property to get.       -or-       An empty array of the type <xref:System.Type> (that is, Type[] types = new Type[0]) to get a property that is not indexed."
    return:
      type: System.Reflection.PropertyInfo
      description: "A <xref:System.Reflection.PropertyInfo> object representing the public property whose parameters match the specified argument types, if found; otherwise, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  id: GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetProperty(String,Type,Type[],ParameterModifier[])
  nameWithType: _Type.GetProperty(String,Type,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,Type,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.GetProperty%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.GetProperty%2A?displayProperty=fullName> method searches for the specified public property whose parameters match the specified argument types and modifiers."
  syntax:
    content: public System.Reflection.PropertyInfo GetProperty (string name, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: "The <xref:System.String> containing the name of the public property to get."
    - id: returnType
      type: System.Type
      description: "The return type of the property."
    - id: types
      type: System.Type[]
      description: "An array of <xref:System.Type> objects representing the number, order, and type of the parameters for the indexed property to get.       -or-       An empty array of the type <xref:System.Type> (that is, Type[] types = new Type[0]) to get a property that is not indexed."
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "An array of <xref href=&quot;System.Reflection.ParameterModifier&quot;></xref> objects representing the attributes associated with the corresponding element in the `types` array. The default binder does not process this parameter."
    return:
      type: System.Reflection.PropertyInfo
      description: "A <xref:System.Reflection.PropertyInfo> object representing the public property that matches the specified requirements, if found; otherwise, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  id: GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  nameWithType: _Type.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.GetProperty%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.GetProperty%2A?displayProperty=fullName> method searches for the specified property whose parameters match the specified argument types and modifiers, using the specified binding constraints."
  syntax:
    content: public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: "The <xref:System.String> containing the name of the property to get."
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "A bitmask comprised of one or more <xref href=&quot;System.Reflection.BindingFlags&quot;></xref> that specify how the search is conducted.       -or-       Zero, to return <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: binder
      type: System.Reflection.Binder
      description: "A <xref href=&quot;System.Reflection.Binder&quot;></xref> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.       -or-       <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, to use the <xref:System.Type.DefaultBinder*>."
    - id: returnType
      type: System.Type
      description: "The return type of the property."
    - id: types
      type: System.Type[]
      description: "An array of <xref:System.Type> objects representing the number, order, and type of the parameters for the indexed property to get.       -or-       An empty array of the type <xref:System.Type> (that is, Type[] types = new Type[0]) to get a property that is not indexed."
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "An array of <xref href=&quot;System.Reflection.ParameterModifier&quot;></xref> objects representing the attributes associated with the corresponding element in the `types` array. The default binder does not process this parameter."
    return:
      type: System.Reflection.PropertyInfo
      description: "A <xref:System.Reflection.PropertyInfo> object representing the property that matches the specified requirements, if found; otherwise, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetType
  id: GetType
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetType()
  nameWithType: _Type.GetType()
  fullName: System.Runtime.InteropServices._Type.GetType()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.GetType%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.GetType%2A?displayProperty=fullName> method gets the current <xref:System.Type>."
  syntax:
    content: public Type GetType ();
    parameters: []
    return:
      type: System.Type
      description: "The current <xref:System.Type>."
  overload: System.Runtime.InteropServices._Type.GetType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  id: GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: _Type.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._Type.GetTypeInfo(UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Retrieves the type information for an object, which can then be used to get the type information for an interface."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library."
  syntax:
    content: public void GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);
    parameters:
    - id: iTInfo
      type: System.UInt32
      description: "The type information to return."
    - id: lcid
      type: System.UInt32
      description: "The locale identifier for the type information."
    - id: ppTInfo
      type: System.IntPtr
      description: "Receives a pointer to the requested type information object."
  overload: System.Runtime.InteropServices._Type.GetTypeInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetTypeInfoCount(System.UInt32@)
  id: GetTypeInfoCount(System.UInt32@)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetTypeInfoCount(UInt32)
  nameWithType: _Type.GetTypeInfoCount(UInt32)
  fullName: System.Runtime.InteropServices._Type.GetTypeInfoCount(UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Retrieves the number of type information interfaces that an object provides (either 0 or 1)."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library."
  syntax:
    content: public void GetTypeInfoCount (out uint pcTInfo);
    parameters:
    - id: pcTInfo
      type: System.UInt32
      description: "Points to a location that receives the number of type information interfaces provided by the object."
  overload: System.Runtime.InteropServices._Type.GetTypeInfoCount*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GUID
  id: GUID
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GUID
  nameWithType: _Type.GUID
  fullName: System.Runtime.InteropServices._Type.GUID
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.GUID%2A?displayProperty=fullName&gt; property."
  remarks: "This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.GUID%2A?displayProperty=fullName> property gets the GUID associated with the <xref:System.Type>."
  syntax:
    content: public Guid GUID { get; }
    return:
      type: System.Guid
      description: "The GUID associated with the <xref:System.Type>."
  overload: System.Runtime.InteropServices._Type.GUID*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.HasElementType
  id: HasElementType
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: HasElementType
  nameWithType: _Type.HasElementType
  fullName: System.Runtime.InteropServices._Type.HasElementType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.HasElementType%2A?displayProperty=fullName&gt; property."
  remarks: "This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.HasElementType%2A?displayProperty=fullName> property"
  syntax:
    content: public bool HasElementType { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref:System.Type> is an array, a pointer, or is passed by reference; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.HasElementType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  id: Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: _Type.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Runtime.InteropServices._Type.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides access to properties and methods exposed by an object."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library."
  syntax:
    content: public void Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);
    parameters:
    - id: dispIdMember
      type: System.UInt32
      description: "Identifies the member."
    - id: riid
      type: System.Guid
      description: "Reserved for future use. Must be IID_NULL."
    - id: lcid
      type: System.UInt32
      description: "The locale context in which to interpret arguments."
    - id: wFlags
      type: System.Int16
      description: "Flags describing the context of the call."
    - id: pDispParams
      type: System.IntPtr
      description: "Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays."
    - id: pVarResult
      type: System.IntPtr
      description: "Pointer to the location where the result is to be stored."
    - id: pExcepInfo
      type: System.IntPtr
      description: "Pointer to a structure that contains exception information."
    - id: puArgErr
      type: System.IntPtr
      description: "The index of the first argument that has an error."
  overload: System.Runtime.InteropServices._Type.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])
  id: InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: InvokeMember(String,BindingFlags,Binder,Object,Object[])
  nameWithType: _Type.InvokeMember(String,BindingFlags,Binder,Object,Object[])
  fullName: System.Runtime.InteropServices._Type.InvokeMember(String,BindingFlags,Binder,Object,Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.InvokeMember%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.InvokeMember%2A?displayProperty=fullName> method invokes the specified member, using the specified binding constraints and matching the specified argument list."
  syntax:
    content: public object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args);
    parameters:
    - id: name
      type: System.String
      description: "The <xref:System.String> containing the name of the constructor, method, property, or field member to invoke.       -or-       An empty string (&quot;&quot;) to invoke the default member.       -or-       For IDispatch members, a string representing the DispID, for example &quot;[DispID=3]&quot;."
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: "A bitmask comprised of one or more <xref href=&quot;System.Reflection.BindingFlags&quot;></xref> that specify how the search is conducted. The access can be one of the <xref uid=&quot;langword_csharp_BindingFlags&quot; name=&quot;BindingFlags&quot; href=&quot;&quot;></xref> such as <xref uid=&quot;langword_csharp_Public&quot; name=&quot;Public&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_NonPublic&quot; name=&quot;NonPublic&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Private&quot; name=&quot;Private&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_InvokeMethod&quot; name=&quot;InvokeMethod&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_GetField&quot; name=&quot;GetField&quot; href=&quot;&quot;></xref>, and so on. The type of lookup need not be specified. If the type of lookup is omitted, <xref uid=&quot;langword_csharp_BindingFlags.Public&quot; name=&quot;BindingFlags.Public&quot; href=&quot;&quot;></xref> | <xref uid=&quot;langword_csharp_BindingFlags.Instance&quot; name=&quot;BindingFlags.Instance&quot; href=&quot;&quot;></xref> will apply."
    - id: binder
      type: System.Reflection.Binder
      description: "A <xref href=&quot;System.Reflection.Binder&quot;></xref> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.       -or-       <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, to use the <xref:System.Type.DefaultBinder*>."
    - id: target
      type: System.Object
      description: "The <xref:System.Object> on which to invoke the specified member."
    - id: args
      type: System.Object[]
      description: "An array containing the arguments to pass to the member to invoke."
    return:
      type: System.Object
      description: "An <xref:System.Object> representing the return value of the invoked member."
  overload: System.Runtime.InteropServices._Type.InvokeMember*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)
  id: InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: InvokeMember(String,BindingFlags,Binder,Object,Object[],CultureInfo)
  nameWithType: _Type.InvokeMember(String,BindingFlags,Binder,Object,Object[],CultureInfo)
  fullName: System.Runtime.InteropServices._Type.InvokeMember(String,BindingFlags,Binder,Object,Object[],CultureInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.InvokeMember%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.InvokeMember%2A?displayProperty=fullName> method invokes the specified member, using the specified binding constraints and matching the specified argument list and culture."
  syntax:
    content: public object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Globalization.CultureInfo culture);
    parameters:
    - id: name
      type: System.String
      description: "The <xref:System.String> containing the name of the constructor, method, property, or field member to invoke.       -or-       An empty string (&quot;&quot;) to invoke the default member.       -or-       For IDispatch members, a string representing the DispID, for example &quot;[DispID=3]&quot;."
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: "A bitmask comprised of one or more <xref href=&quot;System.Reflection.BindingFlags&quot;></xref> that specify how the search is conducted. The access can be one of the <xref uid=&quot;langword_csharp_BindingFlags&quot; name=&quot;BindingFlags&quot; href=&quot;&quot;></xref> such as <xref uid=&quot;langword_csharp_Public&quot; name=&quot;Public&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_NonPublic&quot; name=&quot;NonPublic&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Private&quot; name=&quot;Private&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_InvokeMethod&quot; name=&quot;InvokeMethod&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_GetField&quot; name=&quot;GetField&quot; href=&quot;&quot;></xref>, and so on. The type of lookup need not be specified. If the type of lookup is omitted, <xref uid=&quot;langword_csharp_BindingFlags.Public&quot; name=&quot;BindingFlags.Public&quot; href=&quot;&quot;></xref> | <xref uid=&quot;langword_csharp_BindingFlags.Instance&quot; name=&quot;BindingFlags.Instance&quot; href=&quot;&quot;></xref> will apply."
    - id: binder
      type: System.Reflection.Binder
      description: "A <xref href=&quot;System.Reflection.Binder&quot;></xref> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.       -or-       <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, to use the <xref:System.Type.DefaultBinder*>."
    - id: target
      type: System.Object
      description: "The <xref:System.Object> on which to invoke the specified member."
    - id: args
      type: System.Object[]
      description: "An array containing the arguments to pass to the member to invoke."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "The <xref:System.Globalization.CultureInfo> object representing the globalization locale to use, which may be necessary for locale-specific conversions, such as converting a numeric String to a Double.       -or-       <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> to use the current thread&quot;s <xref:System.Globalization.CultureInfo>."
    return:
      type: System.Object
      description: "An <xref:System.Object> representing the return value of the invoked member."
  overload: System.Runtime.InteropServices._Type.InvokeMember*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  id: InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  nameWithType: _Type.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  fullName: System.Runtime.InteropServices._Type.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.InvokeMember%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.InvokeMember%2A?displayProperty=fullName> method invokes the specified member, using the specified binding constraints and matching the specified argument list, modifiers, and culture."
  syntax:
    content: public object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] namedParameters);
    parameters:
    - id: name
      type: System.String
      description: "The <xref:System.String> containing the name of the constructor, method, property, or field member to invoke.       -or-       An empty string (&quot;&quot;) to invoke the default member.       -or-       For IDispatch members, a string representing the DispID, for example &quot;[DispID=3]&quot;."
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: "A bitmask comprised of one or more <xref href=&quot;System.Reflection.BindingFlags&quot;></xref> that specify how the search is conducted. The access can be one of the <xref uid=&quot;langword_csharp_BindingFlags&quot; name=&quot;BindingFlags&quot; href=&quot;&quot;></xref> such as <xref uid=&quot;langword_csharp_Public&quot; name=&quot;Public&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_NonPublic&quot; name=&quot;NonPublic&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Private&quot; name=&quot;Private&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_InvokeMethod&quot; name=&quot;InvokeMethod&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_GetField&quot; name=&quot;GetField&quot; href=&quot;&quot;></xref>, and so on. The type of lookup need not be specified. If the type of lookup is omitted, <xref uid=&quot;langword_csharp_BindingFlags.Public&quot; name=&quot;BindingFlags.Public&quot; href=&quot;&quot;></xref> | <xref uid=&quot;langword_csharp_BindingFlags.Instance&quot; name=&quot;BindingFlags.Instance&quot; href=&quot;&quot;></xref> will apply."
    - id: binder
      type: System.Reflection.Binder
      description: "A <xref href=&quot;System.Reflection.Binder&quot;></xref> object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.       -or-       <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, to use the <xref:System.Type.DefaultBinder*>."
    - id: target
      type: System.Object
      description: "The <xref:System.Object> on which to invoke the specified member."
    - id: args
      type: System.Object[]
      description: "An array containing the arguments to pass to the member to invoke."
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "An array of <xref href=&quot;System.Reflection.ParameterModifier&quot;></xref> objects representing the attributes associated with the corresponding element in the `args` array. A parameter&quot;s associated attributes are stored in the member&quot;s signature. The default binder does not process this parameter."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "The <xref:System.Globalization.CultureInfo> object representing the globalization locale to use, which may be necessary for locale-specific conversions, such as converting a numeric String to a Double.       -or-       <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> to use the current thread&quot;s <xref:System.Globalization.CultureInfo>."
    - id: namedParameters
      type: System.String[]
      description: "An array containing the names of the parameters to which the values in the `args` array are passed."
    return:
      type: System.Object
      description: "An <xref:System.Object> representing the return value of the invoked member."
  overload: System.Runtime.InteropServices._Type.InvokeMember*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsAbstract
  id: IsAbstract
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsAbstract
  nameWithType: _Type.IsAbstract
  fullName: System.Runtime.InteropServices._Type.IsAbstract
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.IsAbstract%2A?displayProperty=fullName&gt; property."
  remarks: "This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.IsAbstract%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is abstract and must be overridden."
  syntax:
    content: public bool IsAbstract { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref:System.Type> is abstract; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.IsAbstract*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsAnsiClass
  id: IsAnsiClass
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsAnsiClass
  nameWithType: _Type.IsAnsiClass
  fullName: System.Runtime.InteropServices._Type.IsAnsiClass
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.IsAnsiClass%2A?displayProperty=fullName&gt; property."
  remarks: "This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.IsAnsiClass%2A?displayProperty=fullName> property gets a value indicating whether the string format attribute `AnsiClass` is selected for the <xref:System.Type>."
  syntax:
    content: public bool IsAnsiClass { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the string format attribute <xref uid=&quot;langword_csharp_AnsiClass&quot; name=&quot;AnsiClass&quot; href=&quot;&quot;></xref> is selected for the <xref:System.Type>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.IsAnsiClass*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsArray
  id: IsArray
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsArray
  nameWithType: _Type.IsArray
  fullName: System.Runtime.InteropServices._Type.IsArray
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.IsArray%2A?displayProperty=fullName&gt; property."
  remarks: "This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.IsArray%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is an array."
  syntax:
    content: public bool IsArray { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref:System.Type> is an array; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.IsArray*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsAssignableFrom(System.Type)
  id: IsAssignableFrom(System.Type)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsAssignableFrom(Type)
  nameWithType: _Type.IsAssignableFrom(Type)
  fullName: System.Runtime.InteropServices._Type.IsAssignableFrom(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.IsAssignableFrom%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code."
  syntax:
    content: public bool IsAssignableFrom (Type c);
    parameters:
    - id: c
      type: System.Type
      description: "The <xref:System.Type> to compare with the current <xref:System.Type>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <code>c</code> and the current <xref:System.Type> represent the same type, or if the current <xref:System.Type> is in the inheritance hierarchy of <code>c</code>, or if the current <xref:System.Type> is an interface that <code>c</code> implements, or if <code>c</code> is a generic type parameter and the current <xref:System.Type> represents one of the constraints of <code>c</code>. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if none of these conditions are the case, or if <code>c</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.IsAssignableFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsAutoClass
  id: IsAutoClass
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsAutoClass
  nameWithType: _Type.IsAutoClass
  fullName: System.Runtime.InteropServices._Type.IsAutoClass
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.IsAutoClass%2A?displayProperty=fullName&gt; property."
  remarks: "This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.IsAutoClass%2A?displayProperty=fullName> property gets a value indicating whether the string format attribute `AutoClass` is selected for the <xref:System.Type>."
  syntax:
    content: public bool IsAutoClass { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the string format attribute <xref uid=&quot;langword_csharp_AutoClass&quot; name=&quot;AutoClass&quot; href=&quot;&quot;></xref> is selected for the <xref:System.Type>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.IsAutoClass*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsAutoLayout
  id: IsAutoLayout
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsAutoLayout
  nameWithType: _Type.IsAutoLayout
  fullName: System.Runtime.InteropServices._Type.IsAutoLayout
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.IsAutoLayout%2A?displayProperty=fullName&gt; property."
  remarks: "This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.IsAutoLayout%2A?displayProperty=fullName> property gets a value indicating whether the class layout attribute `AutoLayout` is selected for the <xref:System.Type>."
  syntax:
    content: public bool IsAutoLayout { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the class layout attribute <xref uid=&quot;langword_csharp_AutoLayout&quot; name=&quot;AutoLayout&quot; href=&quot;&quot;></xref> is selected for the <xref:System.Type>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.IsAutoLayout*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsByRef
  id: IsByRef
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsByRef
  nameWithType: _Type.IsByRef
  fullName: System.Runtime.InteropServices._Type.IsByRef
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.IsByRef%2A?displayProperty=fullName&gt; property."
  remarks: "This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.IsByRef%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is passed by reference."
  syntax:
    content: public bool IsByRef { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref:System.Type> is passed by reference; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.IsByRef*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsClass
  id: IsClass
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsClass
  nameWithType: _Type.IsClass
  fullName: System.Runtime.InteropServices._Type.IsClass
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.IsClass%2A?displayProperty=fullName&gt; property."
  remarks: "This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.IsClass%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is a class; that is, not a value type or interface."
  syntax:
    content: public bool IsClass { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref:System.Type> is a class; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.IsClass*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsCOMObject
  id: IsCOMObject
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsCOMObject
  nameWithType: _Type.IsCOMObject
  fullName: System.Runtime.InteropServices._Type.IsCOMObject
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.IsCOMObject%2A?displayProperty=fullName&gt; property."
  remarks: "This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.IsCOMObject%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is a COM object."
  syntax:
    content: public bool IsCOMObject { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref:System.Type> is a COM object; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.IsCOMObject*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsContextful
  id: IsContextful
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsContextful
  nameWithType: _Type.IsContextful
  fullName: System.Runtime.InteropServices._Type.IsContextful
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.IsContextful%2A?displayProperty=fullName&gt; property."
  remarks: "This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.IsContextful%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> can be hosted in a context."
  syntax:
    content: public bool IsContextful { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref:System.Type> can be hosted in a context; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.IsContextful*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsDefined(System.Type,System.Boolean)
  id: IsDefined(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsDefined(Type,Boolean)
  nameWithType: _Type.IsDefined(Type,Boolean)
  fullName: System.Runtime.InteropServices._Type.IsDefined(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.IsDefined%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MemberInfo.IsDefined%2A?displayProperty=fullName> method indicates whether one or more instance of `attributeType` is applied to this member."
  syntax:
    content: public bool IsDefined (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: "The <xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;></xref> object to which the custom attributes are applied."
    - id: inherit
      type: System.Boolean
      description: "Specifies whether to search this member&quot;s inheritance chain to find the attributes."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if one or more instance of <code>attributeType</code> is applied to this member; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.IsDefined*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsEnum
  id: IsEnum
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsEnum
  nameWithType: _Type.IsEnum
  fullName: System.Runtime.InteropServices._Type.IsEnum
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.IsEnum%2A?displayProperty=fullName&gt; property."
  remarks: "This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.IsEnum%2A?displayProperty=fullName> property gets a value indicating whether the current <xref:System.Type> represents an enumeration."
  syntax:
    content: public bool IsEnum { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the current <xref:System.Type> represents an enumeration; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.IsEnum*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsExplicitLayout
  id: IsExplicitLayout
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsExplicitLayout
  nameWithType: _Type.IsExplicitLayout
  fullName: System.Runtime.InteropServices._Type.IsExplicitLayout
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.IsExplicitLayout%2A?displayProperty=fullName&gt; property."
  remarks: "This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.IsExplicitLayout%2A?displayProperty=fullName> property gets a value indicating whether the class layout attribute `ExplicitLayout` is selected for the <xref:System.Type>."
  syntax:
    content: public bool IsExplicitLayout { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the class layout attribute <xref uid=&quot;langword_csharp_ExplicitLayout&quot; name=&quot;ExplicitLayout&quot; href=&quot;&quot;></xref> is selected for the <xref:System.Type>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.IsExplicitLayout*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsImport
  id: IsImport
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsImport
  nameWithType: _Type.IsImport
  fullName: System.Runtime.InteropServices._Type.IsImport
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.IsImport%2A?displayProperty=fullName&gt; property."
  remarks: "This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.IsImport%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> has <xref:System.Runtime.InteropServices.ComImportAttribute>, indicating that it was imported from a COM type library."
  syntax:
    content: public bool IsImport { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref:System.Type> has <xref:System.Runtime.InteropServices.ComImportAttribute>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.IsImport*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsInstanceOfType(System.Object)
  id: IsInstanceOfType(System.Object)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsInstanceOfType(Object)
  nameWithType: _Type.IsInstanceOfType(Object)
  fullName: System.Runtime.InteropServices._Type.IsInstanceOfType(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.IsInstanceOfType%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.IsInstanceOfType%2A?displayProperty=fullName> method determines whether the specified object is an instance of the current <xref:System.Type>."
  syntax:
    content: public bool IsInstanceOfType (object o);
    parameters:
    - id: o
      type: System.Object
      description: "The object to compare with the current <xref:System.Type>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the current <xref:System.Type> is in the inheritance hierarchy of the object represented by <code>o</code>, or if the current <xref:System.Type> is an interface that <code>o</code> supports. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if neither of these conditions is the case, or if <code>o</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, or if the current <xref:System.Type> is an open generic type (that is, <xref:System.Type.ContainsGenericParameters*> returns <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>)."
  overload: System.Runtime.InteropServices._Type.IsInstanceOfType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsInterface
  id: IsInterface
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsInterface
  nameWithType: _Type.IsInterface
  fullName: System.Runtime.InteropServices._Type.IsInterface
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.IsInterface%2A?displayProperty=fullName&gt; property."
  remarks: "This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.IsInterface%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is an interface; that is, not a class or a value type."
  syntax:
    content: public bool IsInterface { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref:System.Type> is an interface; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.IsInterface*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsLayoutSequential
  id: IsLayoutSequential
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsLayoutSequential
  nameWithType: _Type.IsLayoutSequential
  fullName: System.Runtime.InteropServices._Type.IsLayoutSequential
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.IsLayoutSequential%2A?displayProperty=fullName&gt; property."
  remarks: "This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.IsLayoutSequential%2A?displayProperty=fullName> property gets a value indicating whether the class layout attribute `SequentialLayout` is selected for the <xref:System.Type>."
  syntax:
    content: public bool IsLayoutSequential { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the class layout attribute <xref uid=&quot;langword_csharp_SequentialLayout&quot; name=&quot;SequentialLayout&quot; href=&quot;&quot;></xref> is selected for the <xref:System.Type>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.IsLayoutSequential*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsMarshalByRef
  id: IsMarshalByRef
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsMarshalByRef
  nameWithType: _Type.IsMarshalByRef
  fullName: System.Runtime.InteropServices._Type.IsMarshalByRef
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.IsMarshalByRef%2A?displayProperty=fullName&gt; property."
  remarks: "This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.IsMarshalByRef%2A?displayProperty=fullName> property gets a value indicating whether the Type is marshaled by reference."
  syntax:
    content: public bool IsMarshalByRef { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref:System.Type> is marshaled by reference; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.IsMarshalByRef*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsNestedAssembly
  id: IsNestedAssembly
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsNestedAssembly
  nameWithType: _Type.IsNestedAssembly
  fullName: System.Runtime.InteropServices._Type.IsNestedAssembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.IsNestedAssembly%2A?displayProperty=fullName&gt; property."
  remarks: "This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.IsNestedAssembly%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is nested and visible only within its own assembly."
  syntax:
    content: public bool IsNestedAssembly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref:System.Type> is nested and visible only within its own assembly; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.IsNestedAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsNestedFamANDAssem
  id: IsNestedFamANDAssem
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsNestedFamANDAssem
  nameWithType: _Type.IsNestedFamANDAssem
  fullName: System.Runtime.InteropServices._Type.IsNestedFamANDAssem
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.IsNestedFamANDAssem%2A?displayProperty=fullName&gt; property."
  remarks: "This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.IsNestedFamANDAssem%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is nested and visible only to classes that belong to both its own family and its own assembly."
  syntax:
    content: public bool IsNestedFamANDAssem { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref:System.Type> is nested and visible only to classes that belong to both its own family and its own assembly; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.IsNestedFamANDAssem*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsNestedFamily
  id: IsNestedFamily
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsNestedFamily
  nameWithType: _Type.IsNestedFamily
  fullName: System.Runtime.InteropServices._Type.IsNestedFamily
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.IsNestedFamily%2A?displayProperty=fullName&gt; property."
  remarks: "This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.IsNestedFamily%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is nested and visible only within its own family."
  syntax:
    content: public bool IsNestedFamily { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref:System.Type> is nested and visible only within its own family; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.IsNestedFamily*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsNestedFamORAssem
  id: IsNestedFamORAssem
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsNestedFamORAssem
  nameWithType: _Type.IsNestedFamORAssem
  fullName: System.Runtime.InteropServices._Type.IsNestedFamORAssem
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.IsNestedFamORAssem%2A?displayProperty=fullName&gt; property."
  remarks: "This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.IsNestedFamORAssem%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is nested and visible only to classes that belong to either its own family or to its own assembly."
  syntax:
    content: public bool IsNestedFamORAssem { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref:System.Type> is nested and visible only to classes that belong to its own family or to its own assembly; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.IsNestedFamORAssem*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsNestedPrivate
  id: IsNestedPrivate
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsNestedPrivate
  nameWithType: _Type.IsNestedPrivate
  fullName: System.Runtime.InteropServices._Type.IsNestedPrivate
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.IsNestedPrivate%2A?displayProperty=fullName&gt; property."
  remarks: "This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.IsNestedPrivate%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is nested and declared private."
  syntax:
    content: public bool IsNestedPrivate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref:System.Type> is nested and declared private; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.IsNestedPrivate*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsNestedPublic
  id: IsNestedPublic
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsNestedPublic
  nameWithType: _Type.IsNestedPublic
  fullName: System.Runtime.InteropServices._Type.IsNestedPublic
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.IsNestedPublic%2A?displayProperty=fullName&gt; property."
  remarks: "This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.IsNestedPublic%2A?displayProperty=fullName> property gets a value indicating whether a class is nested and declared public."
  syntax:
    content: public bool IsNestedPublic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the class is nested and declared public; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.IsNestedPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsNotPublic
  id: IsNotPublic
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsNotPublic
  nameWithType: _Type.IsNotPublic
  fullName: System.Runtime.InteropServices._Type.IsNotPublic
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.IsNotPublic%2A?displayProperty=fullName&gt; property."
  remarks: "This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.IsNotPublic%2A?displayProperty=fullName> property gets a value indicating whether the top-level <xref:System.Type> is not declared public."
  syntax:
    content: public bool IsNotPublic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the top-level <xref:System.Type> is not declared public; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.IsNotPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsPointer
  id: IsPointer
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsPointer
  nameWithType: _Type.IsPointer
  fullName: System.Runtime.InteropServices._Type.IsPointer
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.IsPointer%2A?displayProperty=fullName&gt; property."
  remarks: "This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.IsPointer%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is a pointer."
  syntax:
    content: public bool IsPointer { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref:System.Type> is a pointer; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.IsPointer*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsPrimitive
  id: IsPrimitive
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsPrimitive
  nameWithType: _Type.IsPrimitive
  fullName: System.Runtime.InteropServices._Type.IsPrimitive
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.IsPrimitive%2A?displayProperty=fullName&gt; property."
  remarks: "This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.IsPrimitive%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is one of the primitive types."
  syntax:
    content: public bool IsPrimitive { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref:System.Type> is one of the primitive types; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.IsPrimitive*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsPublic
  id: IsPublic
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsPublic
  nameWithType: _Type.IsPublic
  fullName: System.Runtime.InteropServices._Type.IsPublic
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.IsPublic%2A?displayProperty=fullName&gt; property."
  remarks: "This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.IsPublic%2A?displayProperty=fullName> property gets a value indicating whether the top-level <xref:System.Type> is declared public."
  syntax:
    content: public bool IsPublic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the top-level <xref:System.Type> is declared public; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.IsPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsSealed
  id: IsSealed
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsSealed
  nameWithType: _Type.IsSealed
  fullName: System.Runtime.InteropServices._Type.IsSealed
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.IsSealed%2A?displayProperty=fullName&gt; property."
  remarks: "This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.IsSealed%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is declared sealed."
  syntax:
    content: public bool IsSealed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref:System.Type> is declared sealed; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.IsSealed*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsSerializable
  id: IsSerializable
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsSerializable
  nameWithType: _Type.IsSerializable
  fullName: System.Runtime.InteropServices._Type.IsSerializable
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.IsSerializable%2A?displayProperty=fullName&gt; property."
  remarks: "This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.IsSerializable%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is serializable."
  syntax:
    content: public bool IsSerializable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref:System.Type> is serializable; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.IsSerializable*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsSpecialName
  id: IsSpecialName
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsSpecialName
  nameWithType: _Type.IsSpecialName
  fullName: System.Runtime.InteropServices._Type.IsSpecialName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.IsSpecialName%2A?displayProperty=fullName&gt; property."
  remarks: "This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.IsSpecialName%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> has a name that requires special handling."
  syntax:
    content: public bool IsSpecialName { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref:System.Type> has a name that requires special handling; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.IsSpecialName*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsSubclassOf(System.Type)
  id: IsSubclassOf(System.Type)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsSubclassOf(Type)
  nameWithType: _Type.IsSubclassOf(Type)
  fullName: System.Runtime.InteropServices._Type.IsSubclassOf(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.IsSubclassOf%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.IsSubclassOf%2A?displayProperty=fullName> method determines whether the class represented by the current <xref:System.Type> derives from the class represented by the specified <xref:System.Type>."
  syntax:
    content: public bool IsSubclassOf (Type c);
    parameters:
    - id: c
      type: System.Type
      description: "The <xref:System.Type> to compare with the current <xref:System.Type>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref:System.Type> represented by the <code>c</code> parameter and the current <xref:System.Type> represent classes, and the class represented by the current <xref:System.Type> derives from the class represented by <code>c</code>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. This method also returns <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if <code>c</code> and the current <xref:System.Type> represent the same class."
  overload: System.Runtime.InteropServices._Type.IsSubclassOf*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsUnicodeClass
  id: IsUnicodeClass
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsUnicodeClass
  nameWithType: _Type.IsUnicodeClass
  fullName: System.Runtime.InteropServices._Type.IsUnicodeClass
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.IsUnicodeClass%2A?displayProperty=fullName&gt; property."
  remarks: "This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.IsUnicodeClass%2A?displayProperty=fullName> property gets a value indicating whether the string format attribute `UnicodeClass` is selected for the <xref:System.Type>."
  syntax:
    content: public bool IsUnicodeClass { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the string format attribute <xref uid=&quot;langword_csharp_UnicodeClass&quot; name=&quot;UnicodeClass&quot; href=&quot;&quot;></xref> is selected for the <xref:System.Type>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.IsUnicodeClass*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsValueType
  id: IsValueType
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsValueType
  nameWithType: _Type.IsValueType
  fullName: System.Runtime.InteropServices._Type.IsValueType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.IsValueType%2A?displayProperty=fullName&gt; property."
  remarks: "This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.IsValueType%2A?displayProperty=fullName> property gets a value indicating whether the <xref:System.Type> is a value type."
  syntax:
    content: public bool IsValueType { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref:System.Type> is a value type; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Runtime.InteropServices._Type.IsValueType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.MemberType
  id: MemberType
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: MemberType
  nameWithType: _Type.MemberType
  fullName: System.Runtime.InteropServices._Type.MemberType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.MemberType%2A?displayProperty=fullName&gt; property."
  remarks: "This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.MemberType%2A?displayProperty=fullName> property gets a <xref:System.Reflection.MemberTypes> value indicating that this member is a type or a nested type."
  syntax:
    content: public System.Reflection.MemberTypes MemberType { get; }
    return:
      type: System.Reflection.MemberTypes
      description: "A <xref href=&quot;System.Reflection.MemberTypes&quot;></xref> value indicating that this member is a type or a nested type."
  overload: System.Runtime.InteropServices._Type.MemberType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.Module
  id: Module
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: Module
  nameWithType: _Type.Module
  fullName: System.Runtime.InteropServices._Type.Module
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.Module%2A?displayProperty=fullName&gt; property."
  remarks: "This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.Module%2A?displayProperty=fullName> property gets the module (the DLL) in which the current <xref:System.Type> is defined."
  syntax:
    content: public System.Reflection.Module Module { get; }
    return:
      type: System.Reflection.Module
      description: "The name of the module in which the current <xref:System.Type> is defined."
  overload: System.Runtime.InteropServices._Type.Module*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.Name
  id: Name
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: Name
  nameWithType: _Type.Name
  fullName: System.Runtime.InteropServices._Type.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Reflection.MemberInfo.Name%2A?displayProperty=fullName&gt; property."
  remarks: "This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Reflection.MemberInfo.Name%2A?displayProperty=fullName> property gets the name of the <xref:System.Type>."
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "The name of the <xref:System.Type>."
  overload: System.Runtime.InteropServices._Type.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.Namespace
  id: Namespace
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: Namespace
  nameWithType: _Type.Namespace
  fullName: System.Runtime.InteropServices._Type.Namespace
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.Namespace%2A?displayProperty=fullName&gt; property."
  remarks: "This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.Namespace%2A?displayProperty=fullName> property gets the namespace of the <xref:System.Type>."
  syntax:
    content: public string Namespace { get; }
    return:
      type: System.String
      description: "The namespace of the <xref:System.Type>."
  overload: System.Runtime.InteropServices._Type.Namespace*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.ReflectedType
  id: ReflectedType
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: ReflectedType
  nameWithType: _Type.ReflectedType
  fullName: System.Runtime.InteropServices._Type.ReflectedType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.ReflectedType%2A?displayProperty=fullName&gt; property."
  remarks: "This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.ReflectedType%2A?displayProperty=fullName> property gets the class object that was used to obtain this member."
  syntax:
    content: public Type ReflectedType { get; }
    return:
      type: System.Type
      description: "The <xref:System.Type> object through which this <xref:System.Reflection.MemberInfo> object was obtained."
  overload: System.Runtime.InteropServices._Type.ReflectedType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.ToString
  id: ToString
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: ToString()
  nameWithType: _Type.ToString()
  fullName: System.Runtime.InteropServices._Type.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.ToString%2A?displayProperty=fullName&gt; method."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.ToString%2A?displayProperty=fullName> method returns the name of the current <xref:System.Type>."
  syntax:
    content: public string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A <xref:System.String> representing the name of the current <xref:System.Type>."
  overload: System.Runtime.InteropServices._Type.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.TypeHandle
  id: TypeHandle
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: TypeHandle
  nameWithType: _Type.TypeHandle
  fullName: System.Runtime.InteropServices._Type.TypeHandle
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.TypeHandle%2A?displayProperty=fullName&gt; property."
  remarks: "This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.TypeHandle%2A?displayProperty=fullName> property gets the handle for the current <xref:System.Type>."
  syntax:
    content: public RuntimeTypeHandle TypeHandle { get; }
    return:
      type: System.RuntimeTypeHandle
      description: "The handle for the current <xref:System.Type>."
  overload: System.Runtime.InteropServices._Type.TypeHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.TypeInitializer
  id: TypeInitializer
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: TypeInitializer
  nameWithType: _Type.TypeInitializer
  fullName: System.Runtime.InteropServices._Type.TypeInitializer
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.TypeInitializer%2A?displayProperty=fullName&gt; property."
  remarks: "This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.TypeInitializer%2A?displayProperty=fullName> property gets the initializer for the <xref:System.Type>."
  syntax:
    content: public System.Reflection.ConstructorInfo TypeInitializer { get; }
    return:
      type: System.Reflection.ConstructorInfo
      description: "A <xref:System.Reflection.ConstructorInfo> containing the name of the class constructor for the <xref:System.Type>."
  overload: System.Runtime.InteropServices._Type.TypeInitializer*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.UnderlyingSystemType
  id: UnderlyingSystemType
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: UnderlyingSystemType
  nameWithType: _Type.UnderlyingSystemType
  fullName: System.Runtime.InteropServices._Type.UnderlyingSystemType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Provides COM objects with version-independent access to the &lt;xref:System.Type.UnderlyingSystemType%2A?displayProperty=fullName&gt; property."
  remarks: "This property is for access to managed classes from unmanaged code, and should not be called from managed code.       The <xref:System.Type.UnderlyingSystemType%2A?displayProperty=fullName> property indicates the type provided by the common language runtime that represents this type."
  syntax:
    content: public Type UnderlyingSystemType { get; }
    return:
      type: System.Type
      description: "The underlying system type for the <xref:System.Type>."
  overload: System.Runtime.InteropServices._Type.UnderlyingSystemType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.InteropServices._Type.Assembly
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Assembly
  nameWithType: _Type.Assembly
  fullName: System.Runtime.InteropServices._Type.Assembly
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Runtime.InteropServices._Type.AssemblyQualifiedName
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: AssemblyQualifiedName
  nameWithType: _Type.AssemblyQualifiedName
  fullName: System.Runtime.InteropServices._Type.AssemblyQualifiedName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.InteropServices._Type.Attributes
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Attributes
  nameWithType: _Type.Attributes
  fullName: System.Runtime.InteropServices._Type.Attributes
- uid: System.Reflection.TypeAttributes
  parent: System.Reflection
  isExternal: true
  name: TypeAttributes
  nameWithType: TypeAttributes
  fullName: System.Reflection.TypeAttributes
- uid: System.Runtime.InteropServices._Type.BaseType
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: BaseType
  nameWithType: _Type.BaseType
  fullName: System.Runtime.InteropServices._Type.BaseType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.InteropServices._Type.DeclaringType
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: DeclaringType
  nameWithType: _Type.DeclaringType
  fullName: System.Runtime.InteropServices._Type.DeclaringType
- uid: System.Runtime.InteropServices._Type.Equals(System.Object)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Equals(Object)
  nameWithType: _Type.Equals(Object)
  fullName: System.Runtime.InteropServices._Type.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.InteropServices._Type.Equals(System.Type)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Equals(Type)
  nameWithType: _Type.Equals(Type)
  fullName: System.Runtime.InteropServices._Type.Equals(Type)
- uid: System.Runtime.InteropServices._Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: FindInterfaces(TypeFilter,Object)
  nameWithType: _Type.FindInterfaces(TypeFilter,Object)
  fullName: System.Runtime.InteropServices._Type.FindInterfaces(TypeFilter,Object)
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.TypeFilter
  parent: System.Reflection
  isExternal: false
  name: TypeFilter
  nameWithType: TypeFilter
  fullName: System.Reflection.TypeFilter
- uid: System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: FindMembers(MemberTypes,BindingFlags,MemberFilter,Object)
  nameWithType: _Type.FindMembers(MemberTypes,BindingFlags,MemberFilter,Object)
  fullName: System.Runtime.InteropServices._Type.FindMembers(MemberTypes,BindingFlags,MemberFilter,Object)
- uid: System.Reflection.MemberInfo[]
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo[]
  spec.csharp:
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    nameWithType: MemberInfo
    fullName: MemberInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.MemberTypes
  parent: System.Reflection
  isExternal: false
  name: MemberTypes
  nameWithType: MemberTypes
  fullName: System.Reflection.MemberTypes
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.MemberFilter
  parent: System.Reflection
  isExternal: false
  name: MemberFilter
  nameWithType: MemberFilter
  fullName: System.Reflection.MemberFilter
- uid: System.Runtime.InteropServices._Type.FullName
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: FullName
  nameWithType: _Type.FullName
  fullName: System.Runtime.InteropServices._Type.FullName
- uid: System.Runtime.InteropServices._Type.GetArrayRank
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetArrayRank()
  nameWithType: _Type.GetArrayRank()
  fullName: System.Runtime.InteropServices._Type.GetArrayRank()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.InteropServices._Type.GetConstructor(System.Type[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetConstructor(Type[])
  nameWithType: _Type.GetConstructor(Type[])
  fullName: System.Runtime.InteropServices._Type.GetConstructor(Type[])
- uid: System.Reflection.ConstructorInfo
  parent: System.Reflection
  isExternal: true
  name: ConstructorInfo
  nameWithType: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo
- uid: System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetConstructor(BindingFlags,Binder,Type[],ParameterModifier[])
  nameWithType: _Type.GetConstructor(BindingFlags,Binder,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetConstructor(BindingFlags,Binder,Type[],ParameterModifier[])
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Reflection.ParameterModifier[]
  parent: System.Reflection
  isExternal: false
  name: ParameterModifier
  nameWithType: ParameterModifier
  fullName: System.Reflection.ParameterModifier[]
  spec.csharp:
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    nameWithType: ParameterModifier
    fullName: ParameterModifier[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetConstructor(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  nameWithType: _Type.GetConstructor(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetConstructor(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
- uid: System.Reflection.CallingConventions
  parent: System.Reflection
  isExternal: true
  name: CallingConventions
  nameWithType: CallingConventions
  fullName: System.Reflection.CallingConventions
- uid: System.Runtime.InteropServices._Type.GetConstructors
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetConstructors()
  nameWithType: _Type.GetConstructors()
  fullName: System.Runtime.InteropServices._Type.GetConstructors()
- uid: System.Reflection.ConstructorInfo[]
  parent: System.Reflection
  isExternal: true
  name: ConstructorInfo
  nameWithType: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo[]
  spec.csharp:
  - uid: System.Reflection.ConstructorInfo
    name: ConstructorInfo
    nameWithType: ConstructorInfo
    fullName: ConstructorInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._Type.GetConstructors(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetConstructors(BindingFlags)
  nameWithType: _Type.GetConstructors(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetConstructors(BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetCustomAttributes(System.Boolean)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetCustomAttributes(Boolean)
  nameWithType: _Type.GetCustomAttributes(Boolean)
  fullName: System.Runtime.InteropServices._Type.GetCustomAttributes(Boolean)
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._Type.GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: _Type.GetCustomAttributes(Type,Boolean)
  fullName: System.Runtime.InteropServices._Type.GetCustomAttributes(Type,Boolean)
- uid: System.Runtime.InteropServices._Type.GetDefaultMembers
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetDefaultMembers()
  nameWithType: _Type.GetDefaultMembers()
  fullName: System.Runtime.InteropServices._Type.GetDefaultMembers()
- uid: System.Runtime.InteropServices._Type.GetElementType
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetElementType()
  nameWithType: _Type.GetElementType()
  fullName: System.Runtime.InteropServices._Type.GetElementType()
- uid: System.Runtime.InteropServices._Type.GetEvent(System.String)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetEvent(String)
  nameWithType: _Type.GetEvent(String)
  fullName: System.Runtime.InteropServices._Type.GetEvent(String)
- uid: System.Reflection.EventInfo
  parent: System.Reflection
  isExternal: true
  name: EventInfo
  nameWithType: EventInfo
  fullName: System.Reflection.EventInfo
- uid: System.Runtime.InteropServices._Type.GetEvent(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetEvent(String,BindingFlags)
  nameWithType: _Type.GetEvent(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetEvent(String,BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetEvents
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetEvents()
  nameWithType: _Type.GetEvents()
  fullName: System.Runtime.InteropServices._Type.GetEvents()
- uid: System.Reflection.EventInfo[]
  parent: System.Reflection
  isExternal: true
  name: EventInfo
  nameWithType: EventInfo
  fullName: System.Reflection.EventInfo[]
  spec.csharp:
  - uid: System.Reflection.EventInfo
    name: EventInfo
    nameWithType: EventInfo
    fullName: EventInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._Type.GetEvents(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetEvents(BindingFlags)
  nameWithType: _Type.GetEvents(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetEvents(BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetField(System.String)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetField(String)
  nameWithType: _Type.GetField(String)
  fullName: System.Runtime.InteropServices._Type.GetField(String)
- uid: System.Reflection.FieldInfo
  parent: System.Reflection
  isExternal: true
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo
- uid: System.Runtime.InteropServices._Type.GetField(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetField(String,BindingFlags)
  nameWithType: _Type.GetField(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetField(String,BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetFields
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetFields()
  nameWithType: _Type.GetFields()
  fullName: System.Runtime.InteropServices._Type.GetFields()
- uid: System.Reflection.FieldInfo[]
  parent: System.Reflection
  isExternal: true
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo[]
  spec.csharp:
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: FieldInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._Type.GetFields(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetFields(BindingFlags)
  nameWithType: _Type.GetFields(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetFields(BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetHashCode
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetHashCode()
  nameWithType: _Type.GetHashCode()
  fullName: System.Runtime.InteropServices._Type.GetHashCode()
- uid: System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: _Type.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._Type.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Runtime.InteropServices._Type.GetInterface(System.String)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetInterface(String)
  nameWithType: _Type.GetInterface(String)
  fullName: System.Runtime.InteropServices._Type.GetInterface(String)
- uid: System.Runtime.InteropServices._Type.GetInterface(System.String,System.Boolean)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetInterface(String,Boolean)
  nameWithType: _Type.GetInterface(String,Boolean)
  fullName: System.Runtime.InteropServices._Type.GetInterface(String,Boolean)
- uid: System.Runtime.InteropServices._Type.GetInterfaceMap(System.Type)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetInterfaceMap(Type)
  nameWithType: _Type.GetInterfaceMap(Type)
  fullName: System.Runtime.InteropServices._Type.GetInterfaceMap(Type)
- uid: System.Reflection.InterfaceMapping
  parent: System.Reflection
  isExternal: true
  name: InterfaceMapping
  nameWithType: InterfaceMapping
  fullName: System.Reflection.InterfaceMapping
- uid: System.Runtime.InteropServices._Type.GetInterfaces
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetInterfaces()
  nameWithType: _Type.GetInterfaces()
  fullName: System.Runtime.InteropServices._Type.GetInterfaces()
- uid: System.Runtime.InteropServices._Type.GetMember(System.String)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMember(String)
  nameWithType: _Type.GetMember(String)
  fullName: System.Runtime.InteropServices._Type.GetMember(String)
- uid: System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMember(String,BindingFlags)
  nameWithType: _Type.GetMember(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetMember(String,BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMember(String,MemberTypes,BindingFlags)
  nameWithType: _Type.GetMember(String,MemberTypes,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetMember(String,MemberTypes,BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetMembers
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMembers()
  nameWithType: _Type.GetMembers()
  fullName: System.Runtime.InteropServices._Type.GetMembers()
- uid: System.Runtime.InteropServices._Type.GetMembers(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMembers(BindingFlags)
  nameWithType: _Type.GetMembers(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetMembers(BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMethod(String)
  nameWithType: _Type.GetMethod(String)
  fullName: System.Runtime.InteropServices._Type.GetMethod(String)
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMethod(String,BindingFlags)
  nameWithType: _Type.GetMethod(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetMethod(String,BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMethod(String,Type[])
  nameWithType: _Type.GetMethod(String,Type[])
  fullName: System.Runtime.InteropServices._Type.GetMethod(String,Type[])
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMethod(String,Type[],ParameterModifier[])
  nameWithType: _Type.GetMethod(String,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetMethod(String,Type[],ParameterModifier[])
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  nameWithType: _Type.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  nameWithType: _Type.GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
- uid: System.Runtime.InteropServices._Type.GetMethods
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMethods()
  nameWithType: _Type.GetMethods()
  fullName: System.Runtime.InteropServices._Type.GetMethods()
- uid: System.Reflection.MethodInfo[]
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo[]
  spec.csharp:
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    nameWithType: MethodInfo
    fullName: MethodInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._Type.GetMethods(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMethods(BindingFlags)
  nameWithType: _Type.GetMethods(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetMethods(BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetNestedType(System.String)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetNestedType(String)
  nameWithType: _Type.GetNestedType(String)
  fullName: System.Runtime.InteropServices._Type.GetNestedType(String)
- uid: System.Runtime.InteropServices._Type.GetNestedType(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetNestedType(String,BindingFlags)
  nameWithType: _Type.GetNestedType(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetNestedType(String,BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetNestedTypes
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetNestedTypes()
  nameWithType: _Type.GetNestedTypes()
  fullName: System.Runtime.InteropServices._Type.GetNestedTypes()
- uid: System.Runtime.InteropServices._Type.GetNestedTypes(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetNestedTypes(BindingFlags)
  nameWithType: _Type.GetNestedTypes(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetNestedTypes(BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetProperties
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperties()
  nameWithType: _Type.GetProperties()
  fullName: System.Runtime.InteropServices._Type.GetProperties()
- uid: System.Reflection.PropertyInfo[]
  parent: System.Reflection
  isExternal: true
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo[]
  spec.csharp:
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: PropertyInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._Type.GetProperties(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperties(BindingFlags)
  nameWithType: _Type.GetProperties(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetProperties(BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperty(String)
  nameWithType: _Type.GetProperty(String)
  fullName: System.Runtime.InteropServices._Type.GetProperty(String)
- uid: System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: true
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperty(String,BindingFlags)
  nameWithType: _Type.GetProperty(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperty(String,Type)
  nameWithType: _Type.GetProperty(String,Type)
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,Type)
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperty(String,Type[])
  nameWithType: _Type.GetProperty(String,Type[])
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,Type[])
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperty(String,Type,Type[])
  nameWithType: _Type.GetProperty(String,Type,Type[])
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,Type,Type[])
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperty(String,Type,Type[],ParameterModifier[])
  nameWithType: _Type.GetProperty(String,Type,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,Type,Type[],ParameterModifier[])
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  nameWithType: _Type.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
- uid: System.Runtime.InteropServices._Type.GetType
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetType()
  nameWithType: _Type.GetType()
  fullName: System.Runtime.InteropServices._Type.GetType()
- uid: System.Runtime.InteropServices._Type.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: _Type.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._Type.GetTypeInfo(UInt32,UInt32,IntPtr)
- uid: System.Runtime.InteropServices._Type.GetTypeInfoCount(System.UInt32@)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetTypeInfoCount(UInt32)
  nameWithType: _Type.GetTypeInfoCount(UInt32)
  fullName: System.Runtime.InteropServices._Type.GetTypeInfoCount(UInt32)
- uid: System.Runtime.InteropServices._Type.GUID
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GUID
  nameWithType: _Type.GUID
  fullName: System.Runtime.InteropServices._Type.GUID
- uid: System.Runtime.InteropServices._Type.HasElementType
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: HasElementType
  nameWithType: _Type.HasElementType
  fullName: System.Runtime.InteropServices._Type.HasElementType
- uid: System.Runtime.InteropServices._Type.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: _Type.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Runtime.InteropServices._Type.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: InvokeMember(String,BindingFlags,Binder,Object,Object[])
  nameWithType: _Type.InvokeMember(String,BindingFlags,Binder,Object,Object[])
  fullName: System.Runtime.InteropServices._Type.InvokeMember(String,BindingFlags,Binder,Object,Object[])
- uid: System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: InvokeMember(String,BindingFlags,Binder,Object,Object[],CultureInfo)
  nameWithType: _Type.InvokeMember(String,BindingFlags,Binder,Object,Object[],CultureInfo)
  fullName: System.Runtime.InteropServices._Type.InvokeMember(String,BindingFlags,Binder,Object,Object[],CultureInfo)
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  nameWithType: _Type.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  fullName: System.Runtime.InteropServices._Type.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._Type.IsAbstract
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsAbstract
  nameWithType: _Type.IsAbstract
  fullName: System.Runtime.InteropServices._Type.IsAbstract
- uid: System.Runtime.InteropServices._Type.IsAnsiClass
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsAnsiClass
  nameWithType: _Type.IsAnsiClass
  fullName: System.Runtime.InteropServices._Type.IsAnsiClass
- uid: System.Runtime.InteropServices._Type.IsArray
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsArray
  nameWithType: _Type.IsArray
  fullName: System.Runtime.InteropServices._Type.IsArray
- uid: System.Runtime.InteropServices._Type.IsAssignableFrom(System.Type)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsAssignableFrom(Type)
  nameWithType: _Type.IsAssignableFrom(Type)
  fullName: System.Runtime.InteropServices._Type.IsAssignableFrom(Type)
- uid: System.Runtime.InteropServices._Type.IsAutoClass
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsAutoClass
  nameWithType: _Type.IsAutoClass
  fullName: System.Runtime.InteropServices._Type.IsAutoClass
- uid: System.Runtime.InteropServices._Type.IsAutoLayout
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsAutoLayout
  nameWithType: _Type.IsAutoLayout
  fullName: System.Runtime.InteropServices._Type.IsAutoLayout
- uid: System.Runtime.InteropServices._Type.IsByRef
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsByRef
  nameWithType: _Type.IsByRef
  fullName: System.Runtime.InteropServices._Type.IsByRef
- uid: System.Runtime.InteropServices._Type.IsClass
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsClass
  nameWithType: _Type.IsClass
  fullName: System.Runtime.InteropServices._Type.IsClass
- uid: System.Runtime.InteropServices._Type.IsCOMObject
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsCOMObject
  nameWithType: _Type.IsCOMObject
  fullName: System.Runtime.InteropServices._Type.IsCOMObject
- uid: System.Runtime.InteropServices._Type.IsContextful
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsContextful
  nameWithType: _Type.IsContextful
  fullName: System.Runtime.InteropServices._Type.IsContextful
- uid: System.Runtime.InteropServices._Type.IsDefined(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsDefined(Type,Boolean)
  nameWithType: _Type.IsDefined(Type,Boolean)
  fullName: System.Runtime.InteropServices._Type.IsDefined(Type,Boolean)
- uid: System.Runtime.InteropServices._Type.IsEnum
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsEnum
  nameWithType: _Type.IsEnum
  fullName: System.Runtime.InteropServices._Type.IsEnum
- uid: System.Runtime.InteropServices._Type.IsExplicitLayout
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsExplicitLayout
  nameWithType: _Type.IsExplicitLayout
  fullName: System.Runtime.InteropServices._Type.IsExplicitLayout
- uid: System.Runtime.InteropServices._Type.IsImport
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsImport
  nameWithType: _Type.IsImport
  fullName: System.Runtime.InteropServices._Type.IsImport
- uid: System.Runtime.InteropServices._Type.IsInstanceOfType(System.Object)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsInstanceOfType(Object)
  nameWithType: _Type.IsInstanceOfType(Object)
  fullName: System.Runtime.InteropServices._Type.IsInstanceOfType(Object)
- uid: System.Runtime.InteropServices._Type.IsInterface
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsInterface
  nameWithType: _Type.IsInterface
  fullName: System.Runtime.InteropServices._Type.IsInterface
- uid: System.Runtime.InteropServices._Type.IsLayoutSequential
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsLayoutSequential
  nameWithType: _Type.IsLayoutSequential
  fullName: System.Runtime.InteropServices._Type.IsLayoutSequential
- uid: System.Runtime.InteropServices._Type.IsMarshalByRef
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsMarshalByRef
  nameWithType: _Type.IsMarshalByRef
  fullName: System.Runtime.InteropServices._Type.IsMarshalByRef
- uid: System.Runtime.InteropServices._Type.IsNestedAssembly
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedAssembly
  nameWithType: _Type.IsNestedAssembly
  fullName: System.Runtime.InteropServices._Type.IsNestedAssembly
- uid: System.Runtime.InteropServices._Type.IsNestedFamANDAssem
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedFamANDAssem
  nameWithType: _Type.IsNestedFamANDAssem
  fullName: System.Runtime.InteropServices._Type.IsNestedFamANDAssem
- uid: System.Runtime.InteropServices._Type.IsNestedFamily
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedFamily
  nameWithType: _Type.IsNestedFamily
  fullName: System.Runtime.InteropServices._Type.IsNestedFamily
- uid: System.Runtime.InteropServices._Type.IsNestedFamORAssem
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedFamORAssem
  nameWithType: _Type.IsNestedFamORAssem
  fullName: System.Runtime.InteropServices._Type.IsNestedFamORAssem
- uid: System.Runtime.InteropServices._Type.IsNestedPrivate
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedPrivate
  nameWithType: _Type.IsNestedPrivate
  fullName: System.Runtime.InteropServices._Type.IsNestedPrivate
- uid: System.Runtime.InteropServices._Type.IsNestedPublic
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedPublic
  nameWithType: _Type.IsNestedPublic
  fullName: System.Runtime.InteropServices._Type.IsNestedPublic
- uid: System.Runtime.InteropServices._Type.IsNotPublic
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNotPublic
  nameWithType: _Type.IsNotPublic
  fullName: System.Runtime.InteropServices._Type.IsNotPublic
- uid: System.Runtime.InteropServices._Type.IsPointer
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsPointer
  nameWithType: _Type.IsPointer
  fullName: System.Runtime.InteropServices._Type.IsPointer
- uid: System.Runtime.InteropServices._Type.IsPrimitive
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsPrimitive
  nameWithType: _Type.IsPrimitive
  fullName: System.Runtime.InteropServices._Type.IsPrimitive
- uid: System.Runtime.InteropServices._Type.IsPublic
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsPublic
  nameWithType: _Type.IsPublic
  fullName: System.Runtime.InteropServices._Type.IsPublic
- uid: System.Runtime.InteropServices._Type.IsSealed
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsSealed
  nameWithType: _Type.IsSealed
  fullName: System.Runtime.InteropServices._Type.IsSealed
- uid: System.Runtime.InteropServices._Type.IsSerializable
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsSerializable
  nameWithType: _Type.IsSerializable
  fullName: System.Runtime.InteropServices._Type.IsSerializable
- uid: System.Runtime.InteropServices._Type.IsSpecialName
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsSpecialName
  nameWithType: _Type.IsSpecialName
  fullName: System.Runtime.InteropServices._Type.IsSpecialName
- uid: System.Runtime.InteropServices._Type.IsSubclassOf(System.Type)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsSubclassOf(Type)
  nameWithType: _Type.IsSubclassOf(Type)
  fullName: System.Runtime.InteropServices._Type.IsSubclassOf(Type)
- uid: System.Runtime.InteropServices._Type.IsUnicodeClass
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsUnicodeClass
  nameWithType: _Type.IsUnicodeClass
  fullName: System.Runtime.InteropServices._Type.IsUnicodeClass
- uid: System.Runtime.InteropServices._Type.IsValueType
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsValueType
  nameWithType: _Type.IsValueType
  fullName: System.Runtime.InteropServices._Type.IsValueType
- uid: System.Runtime.InteropServices._Type.MemberType
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: MemberType
  nameWithType: _Type.MemberType
  fullName: System.Runtime.InteropServices._Type.MemberType
- uid: System.Runtime.InteropServices._Type.Module
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Module
  nameWithType: _Type.Module
  fullName: System.Runtime.InteropServices._Type.Module
- uid: System.Reflection.Module
  parent: System.Reflection
  isExternal: true
  name: Module
  nameWithType: Module
  fullName: System.Reflection.Module
- uid: System.Runtime.InteropServices._Type.Name
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Name
  nameWithType: _Type.Name
  fullName: System.Runtime.InteropServices._Type.Name
- uid: System.Runtime.InteropServices._Type.Namespace
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Namespace
  nameWithType: _Type.Namespace
  fullName: System.Runtime.InteropServices._Type.Namespace
- uid: System.Runtime.InteropServices._Type.ReflectedType
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: ReflectedType
  nameWithType: _Type.ReflectedType
  fullName: System.Runtime.InteropServices._Type.ReflectedType
- uid: System.Runtime.InteropServices._Type.ToString
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: ToString()
  nameWithType: _Type.ToString()
  fullName: System.Runtime.InteropServices._Type.ToString()
- uid: System.Runtime.InteropServices._Type.TypeHandle
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: TypeHandle
  nameWithType: _Type.TypeHandle
  fullName: System.Runtime.InteropServices._Type.TypeHandle
- uid: System.RuntimeTypeHandle
  parent: System
  isExternal: true
  name: RuntimeTypeHandle
  nameWithType: RuntimeTypeHandle
  fullName: System.RuntimeTypeHandle
- uid: System.Runtime.InteropServices._Type.TypeInitializer
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: TypeInitializer
  nameWithType: _Type.TypeInitializer
  fullName: System.Runtime.InteropServices._Type.TypeInitializer
- uid: System.Runtime.InteropServices._Type.UnderlyingSystemType
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: UnderlyingSystemType
  nameWithType: _Type.UnderlyingSystemType
  fullName: System.Runtime.InteropServices._Type.UnderlyingSystemType
- uid: System.Runtime.InteropServices._Type.Assembly*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Assembly
  nameWithType: _Type.Assembly
- uid: System.Runtime.InteropServices._Type.AssemblyQualifiedName*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: AssemblyQualifiedName
  nameWithType: _Type.AssemblyQualifiedName
- uid: System.Runtime.InteropServices._Type.Attributes*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Attributes
  nameWithType: _Type.Attributes
- uid: System.Runtime.InteropServices._Type.BaseType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: BaseType
  nameWithType: _Type.BaseType
- uid: System.Runtime.InteropServices._Type.DeclaringType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: DeclaringType
  nameWithType: _Type.DeclaringType
- uid: System.Runtime.InteropServices._Type.Equals*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Equals
  nameWithType: _Type.Equals
- uid: System.Runtime.InteropServices._Type.FindInterfaces*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: FindInterfaces
  nameWithType: _Type.FindInterfaces
- uid: System.Runtime.InteropServices._Type.FindMembers*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: FindMembers
  nameWithType: _Type.FindMembers
- uid: System.Runtime.InteropServices._Type.FullName*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: FullName
  nameWithType: _Type.FullName
- uid: System.Runtime.InteropServices._Type.GetArrayRank*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetArrayRank
  nameWithType: _Type.GetArrayRank
- uid: System.Runtime.InteropServices._Type.GetConstructor*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetConstructor
  nameWithType: _Type.GetConstructor
- uid: System.Runtime.InteropServices._Type.GetConstructors*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetConstructors
  nameWithType: _Type.GetConstructors
- uid: System.Runtime.InteropServices._Type.GetCustomAttributes*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetCustomAttributes
  nameWithType: _Type.GetCustomAttributes
- uid: System.Runtime.InteropServices._Type.GetDefaultMembers*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetDefaultMembers
  nameWithType: _Type.GetDefaultMembers
- uid: System.Runtime.InteropServices._Type.GetElementType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetElementType
  nameWithType: _Type.GetElementType
- uid: System.Runtime.InteropServices._Type.GetEvent*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetEvent
  nameWithType: _Type.GetEvent
- uid: System.Runtime.InteropServices._Type.GetEvents*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetEvents
  nameWithType: _Type.GetEvents
- uid: System.Runtime.InteropServices._Type.GetField*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetField
  nameWithType: _Type.GetField
- uid: System.Runtime.InteropServices._Type.GetFields*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetFields
  nameWithType: _Type.GetFields
- uid: System.Runtime.InteropServices._Type.GetHashCode*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetHashCode
  nameWithType: _Type.GetHashCode
- uid: System.Runtime.InteropServices._Type.GetIDsOfNames*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetIDsOfNames
  nameWithType: _Type.GetIDsOfNames
- uid: System.Runtime.InteropServices._Type.GetInterface*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetInterface
  nameWithType: _Type.GetInterface
- uid: System.Runtime.InteropServices._Type.GetInterfaceMap*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetInterfaceMap
  nameWithType: _Type.GetInterfaceMap
- uid: System.Runtime.InteropServices._Type.GetInterfaces*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetInterfaces
  nameWithType: _Type.GetInterfaces
- uid: System.Runtime.InteropServices._Type.GetMember*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMember
  nameWithType: _Type.GetMember
- uid: System.Runtime.InteropServices._Type.GetMembers*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMembers
  nameWithType: _Type.GetMembers
- uid: System.Runtime.InteropServices._Type.GetMethod*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMethod
  nameWithType: _Type.GetMethod
- uid: System.Runtime.InteropServices._Type.GetMethods*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMethods
  nameWithType: _Type.GetMethods
- uid: System.Runtime.InteropServices._Type.GetNestedType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetNestedType
  nameWithType: _Type.GetNestedType
- uid: System.Runtime.InteropServices._Type.GetNestedTypes*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetNestedTypes
  nameWithType: _Type.GetNestedTypes
- uid: System.Runtime.InteropServices._Type.GetProperties*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperties
  nameWithType: _Type.GetProperties
- uid: System.Runtime.InteropServices._Type.GetProperty*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperty
  nameWithType: _Type.GetProperty
- uid: System.Runtime.InteropServices._Type.GetType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetType
  nameWithType: _Type.GetType
- uid: System.Runtime.InteropServices._Type.GetTypeInfo*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetTypeInfo
  nameWithType: _Type.GetTypeInfo
- uid: System.Runtime.InteropServices._Type.GetTypeInfoCount*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetTypeInfoCount
  nameWithType: _Type.GetTypeInfoCount
- uid: System.Runtime.InteropServices._Type.GUID*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GUID
  nameWithType: _Type.GUID
- uid: System.Runtime.InteropServices._Type.HasElementType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: HasElementType
  nameWithType: _Type.HasElementType
- uid: System.Runtime.InteropServices._Type.Invoke*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Invoke
  nameWithType: _Type.Invoke
- uid: System.Runtime.InteropServices._Type.InvokeMember*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: InvokeMember
  nameWithType: _Type.InvokeMember
- uid: System.Runtime.InteropServices._Type.IsAbstract*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsAbstract
  nameWithType: _Type.IsAbstract
- uid: System.Runtime.InteropServices._Type.IsAnsiClass*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsAnsiClass
  nameWithType: _Type.IsAnsiClass
- uid: System.Runtime.InteropServices._Type.IsArray*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsArray
  nameWithType: _Type.IsArray
- uid: System.Runtime.InteropServices._Type.IsAssignableFrom*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsAssignableFrom
  nameWithType: _Type.IsAssignableFrom
- uid: System.Runtime.InteropServices._Type.IsAutoClass*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsAutoClass
  nameWithType: _Type.IsAutoClass
- uid: System.Runtime.InteropServices._Type.IsAutoLayout*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsAutoLayout
  nameWithType: _Type.IsAutoLayout
- uid: System.Runtime.InteropServices._Type.IsByRef*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsByRef
  nameWithType: _Type.IsByRef
- uid: System.Runtime.InteropServices._Type.IsClass*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsClass
  nameWithType: _Type.IsClass
- uid: System.Runtime.InteropServices._Type.IsCOMObject*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsCOMObject
  nameWithType: _Type.IsCOMObject
- uid: System.Runtime.InteropServices._Type.IsContextful*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsContextful
  nameWithType: _Type.IsContextful
- uid: System.Runtime.InteropServices._Type.IsDefined*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsDefined
  nameWithType: _Type.IsDefined
- uid: System.Runtime.InteropServices._Type.IsEnum*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsEnum
  nameWithType: _Type.IsEnum
- uid: System.Runtime.InteropServices._Type.IsExplicitLayout*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsExplicitLayout
  nameWithType: _Type.IsExplicitLayout
- uid: System.Runtime.InteropServices._Type.IsImport*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsImport
  nameWithType: _Type.IsImport
- uid: System.Runtime.InteropServices._Type.IsInstanceOfType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsInstanceOfType
  nameWithType: _Type.IsInstanceOfType
- uid: System.Runtime.InteropServices._Type.IsInterface*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsInterface
  nameWithType: _Type.IsInterface
- uid: System.Runtime.InteropServices._Type.IsLayoutSequential*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsLayoutSequential
  nameWithType: _Type.IsLayoutSequential
- uid: System.Runtime.InteropServices._Type.IsMarshalByRef*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsMarshalByRef
  nameWithType: _Type.IsMarshalByRef
- uid: System.Runtime.InteropServices._Type.IsNestedAssembly*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedAssembly
  nameWithType: _Type.IsNestedAssembly
- uid: System.Runtime.InteropServices._Type.IsNestedFamANDAssem*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedFamANDAssem
  nameWithType: _Type.IsNestedFamANDAssem
- uid: System.Runtime.InteropServices._Type.IsNestedFamily*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedFamily
  nameWithType: _Type.IsNestedFamily
- uid: System.Runtime.InteropServices._Type.IsNestedFamORAssem*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedFamORAssem
  nameWithType: _Type.IsNestedFamORAssem
- uid: System.Runtime.InteropServices._Type.IsNestedPrivate*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedPrivate
  nameWithType: _Type.IsNestedPrivate
- uid: System.Runtime.InteropServices._Type.IsNestedPublic*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedPublic
  nameWithType: _Type.IsNestedPublic
- uid: System.Runtime.InteropServices._Type.IsNotPublic*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNotPublic
  nameWithType: _Type.IsNotPublic
- uid: System.Runtime.InteropServices._Type.IsPointer*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsPointer
  nameWithType: _Type.IsPointer
- uid: System.Runtime.InteropServices._Type.IsPrimitive*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsPrimitive
  nameWithType: _Type.IsPrimitive
- uid: System.Runtime.InteropServices._Type.IsPublic*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsPublic
  nameWithType: _Type.IsPublic
- uid: System.Runtime.InteropServices._Type.IsSealed*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsSealed
  nameWithType: _Type.IsSealed
- uid: System.Runtime.InteropServices._Type.IsSerializable*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsSerializable
  nameWithType: _Type.IsSerializable
- uid: System.Runtime.InteropServices._Type.IsSpecialName*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsSpecialName
  nameWithType: _Type.IsSpecialName
- uid: System.Runtime.InteropServices._Type.IsSubclassOf*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsSubclassOf
  nameWithType: _Type.IsSubclassOf
- uid: System.Runtime.InteropServices._Type.IsUnicodeClass*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsUnicodeClass
  nameWithType: _Type.IsUnicodeClass
- uid: System.Runtime.InteropServices._Type.IsValueType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsValueType
  nameWithType: _Type.IsValueType
- uid: System.Runtime.InteropServices._Type.MemberType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: MemberType
  nameWithType: _Type.MemberType
- uid: System.Runtime.InteropServices._Type.Module*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Module
  nameWithType: _Type.Module
- uid: System.Runtime.InteropServices._Type.Name*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Name
  nameWithType: _Type.Name
- uid: System.Runtime.InteropServices._Type.Namespace*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Namespace
  nameWithType: _Type.Namespace
- uid: System.Runtime.InteropServices._Type.ReflectedType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: ReflectedType
  nameWithType: _Type.ReflectedType
- uid: System.Runtime.InteropServices._Type.ToString*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: ToString
  nameWithType: _Type.ToString
- uid: System.Runtime.InteropServices._Type.TypeHandle*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: TypeHandle
  nameWithType: _Type.TypeHandle
- uid: System.Runtime.InteropServices._Type.TypeInitializer*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: TypeInitializer
  nameWithType: _Type.TypeInitializer
- uid: System.Runtime.InteropServices._Type.UnderlyingSystemType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: UnderlyingSystemType
  nameWithType: _Type.UnderlyingSystemType
