### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException
  id: LinqDataSourceValidationException
  children:
  - System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor
  - System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String)
  - System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Exception})
  - System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String,System.Exception)
  - System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions
  langs:
  - csharp
  name: LinqDataSourceValidationException
  nameWithType: LinqDataSourceValidationException
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException
  type: Class
  summary: "Descreve uma exceção que ocorreu durante a validação de novos ou modificados valores antes dos valores são inseridos, atualizados ou eliminados por um <xref href=&quot;System.Web.UI.WebControls.LinqDataSource&quot;> </xref> controlo."
  remarks: "A classe de LinqDataSourceValidationException contém conversão do tipo e exceções de setter da propriedade. Todas as exceções forem emitidas durante a validação estão contidas no <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A>coleção.</xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> Pode obter cada exceção de validação ao repetir a <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A>coleção.</xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A>       Normalmente, lidar com exceções a <xref:System.Web.UI.WebControls.LinqDataSource.Updating>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>, e <xref:System.Web.UI.WebControls.LinqDataSource.Inserting>eventos.</xref:System.Web.UI.WebControls.LinqDataSource.Inserting> </xref:System.Web.UI.WebControls.LinqDataSource.Deleting> </xref:System.Web.UI.WebControls.LinqDataSource.Updating> Se é emitida uma exceção de validação, o `Exception` propriedade o <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs>, <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs>, ou <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs>objeto contém um objeto de LinqDataSourceValidationException.</xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> </xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs> </xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs> Se nenhum exceção é emitida, o `Exception` propriedade contém `null`.       Para lidar com exceções de validação, crie um processador para o <xref:System.Web.UI.WebControls.LinqDataSource.Updating>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>, ou <xref:System.Web.UI.WebControls.LinqDataSource.Inserting>eventos.</xref:System.Web.UI.WebControls.LinqDataSource.Inserting> </xref:System.Web.UI.WebControls.LinqDataSource.Deleting> </xref:System.Web.UI.WebControls.LinqDataSource.Updating> O processador de eventos, verifique se o `Exception` propriedade da classe de argumento de evento contém um valor diferente de `null`. Se o `Exception` propriedade não é nula, excepções de validação de um ou mais foram iniciadas e pode obter cada exceção de validação no <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A>propriedade.</xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A>       Uma exceção de validação pode ocorrer se um valor não corresponde ao tipo da propriedade. Por exemplo, para tentar atualizar uma propriedade de número inteiro utilizando carateres não numéricos faz com que uma exceção de validação. LINQ a classe do SQL Server também pode conter os critérios de validação personalizadas que certifique-se de que a propriedade contém um valor dentro de um intervalo esperado ou padrão."
  example:
  - "The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event. It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.  \n  \n```vb#  \nProtected Sub LinqDataSource_Updating(ByVal sender As Object, _  \n        ByVal e As LinqDataSourceUpdateEventArgs)  \n    If (e.Exception IsNot Nothing) Then  \n        For Each innerException As KeyValuePair(Of String, Exception) _  \n               In e.Exception.InnerExceptions  \n            Label1.Text &= innerException.Key & \": \" & _  \n                innerException.Value.Message & \"<br />\"  \n        Next  \n        e.ExceptionHandled = True  \n    End If  \nEnd Sub  \n```  \n  \n [C#]  \n  \n```  \nprotected void LinqDataSource_Updating(object sender,   \n        LinqDataSourceUpdateEventArgs e)  \n{  \n    if (e.Exception != null)  \n    {  \n        foreach (KeyValuePair<string, Exception> innerException in   \n             e.Exception.InnerExceptions)  \n        {  \n        Label1.Text += innerException.Key + \": \" +   \n            innerException.Value.Message + \"<br />\";  \n        }  \n        e.ExceptionHandled = true;  \n    }  \n}  \n```"
  syntax:
    content: 'public class LinqDataSourceValidationException : Exception, System.Web.DynamicData.IDynamicValidatorException'
  inheritance:
  - System.Exception
  implements:
  - System.Web.DynamicData.IDynamicValidatorException
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.LinqDataSourceValidationException
  langs:
  - csharp
  name: LinqDataSourceValidationException()
  nameWithType: LinqDataSourceValidationException.LinqDataSourceValidationException()
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException.LinqDataSourceValidationException()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceValidationException&quot;> </xref> classe com uma mensagem fornecido pelo sistema que descreve o erro."
  remarks: "A mensagem fornecido pelo sistema que descreve o erro tem em consideração o idioma atual do sistema.       A tabela seguinte mostra os valores de propriedade inicial para uma instância de <xref:System.Web.UI.WebControls.LinqDataSourceValidationException>classe.</xref:System.Web.UI.WebControls.LinqDataSourceValidationException>      | Propriedade | Valor |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| `null`.|   | <xref:System.Exception.Message%2A>| Descrição localizada de um sistema fornecido. |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public LinqDataSourceValidationException ();
    parameters: []
  overload: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.UI.WebControls.LinqDataSourceValidationException
  langs:
  - csharp
  name: LinqDataSourceValidationException(String)
  nameWithType: LinqDataSourceValidationException.LinqDataSourceValidationException(String)
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException.LinqDataSourceValidationException(String)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceValidationException&quot;> </xref> classe com uma mensagem especificada que descreve o erro."
  remarks: "A tabela seguinte mostra os valores de propriedade inicial para uma instância de <xref:System.Web.UI.WebControls.LinqDataSourceValidationException>classe.</xref:System.Web.UI.WebControls.LinqDataSourceValidationException>      | Propriedade | Valor |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| `null`.|   | <xref:System.Exception.Message%2A>| A cadeia de mensagem de erro especificada no `message`. |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public LinqDataSourceValidationException (string message);
    parameters:
    - id: message
      type: System.String
      description: "A mensagem que descreve o erro."
  overload: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Web.UI.WebControls.LinqDataSourceValidationException
  langs:
  - csharp
  name: LinqDataSourceValidationException(SerializationInfo,StreamingContext)
  nameWithType: LinqDataSourceValidationException.LinqDataSourceValidationException(SerializationInfo,StreamingContext)
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException.LinqDataSourceValidationException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceValidationException&quot;> </xref> classe com dados serializados."
  remarks: "Este construtor é chamado durante a desserialização para reconstitute o objeto de exceção que é transmitido através de uma transmissão em fluxo."
  syntax:
    content: protected LinqDataSourceValidationException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "O objeto que contém os dados de objecto serializado."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Informações de contexto sobre a origem ou de destino."
  overload: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Exception})
  id: '#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Exception})'
  parent: System.Web.UI.WebControls.LinqDataSourceValidationException
  langs:
  - csharp
  name: LinqDataSourceValidationException(String,IDictionary<String,Exception>)
  nameWithType: LinqDataSourceValidationException.LinqDataSourceValidationException(String,IDictionary<String,Exception>)
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException.LinqDataSourceValidationException(String,IDictionary<String,Exception>)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceValidationException&quot;> </xref> classe com uma mensagem especificada que descrevem o erro e uma coleção de referências a excepções internas."
  syntax:
    content: public LinqDataSourceValidationException (string message, System.Collections.Generic.IDictionary<string,Exception> innerExceptions);
    parameters:
    - id: message
      type: System.String
      description: "A mensagem que descreve o erro."
    - id: innerExceptions
      type: System.Collections.Generic.IDictionary{System.String,System.Exception}
      description: "A recolha de exceções de validação."
  overload: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Web.UI.WebControls.LinqDataSourceValidationException
  langs:
  - csharp
  name: LinqDataSourceValidationException(String,Exception)
  nameWithType: LinqDataSourceValidationException.LinqDataSourceValidationException(String,Exception)
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException.LinqDataSourceValidationException(String,Exception)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.LinqDataSourceValidationException&quot;> </xref> classe com uma mensagem de erro especificado e uma referência a exceção interna."
  remarks: "Normalmente, não utilizará este construtor porque exceções de validação são armazenadas no <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A>propriedade, não o <xref:System.Exception.InnerException%2A>propriedade.</xref:System.Exception.InnerException%2A> </xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A>"
  syntax:
    content: public LinqDataSourceValidationException (string message, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: "A mensagem que descreve o erro."
    - id: innerException
      type: System.Exception
      description: "A exceção é a causa da exceção atual."
  overload: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Web.UI.WebControls.LinqDataSourceValidationException
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: LinqDataSourceValidationException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Obtém informações sobre a exceção e adiciona-o para o <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> objeto."
  remarks: "O método de invocar GetObjectData adiciona informações sobre a exceção a <xref:System.Runtime.Serialization.SerializationInfo>objeto que está direcionado para a serialização.</xref:System.Runtime.Serialization.SerializationInfo> Durante a desserialização, a exceção é reconstituted do <xref:System.Runtime.Serialization.SerializationInfo>que é transmitido através do fluxo.</xref:System.Runtime.Serialization.SerializationInfo>"
  syntax:
    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "O objeto que contém os dados de objecto serializado para a exceção que está a ser emitida."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Informações de contexto sobre a origem ou de destino."
  overload: System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions
  id: InnerExceptions
  parent: System.Web.UI.WebControls.LinqDataSourceValidationException
  langs:
  - csharp
  name: InnerExceptions
  nameWithType: LinqDataSourceValidationException.InnerExceptions
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: "Obtém um ou mais exceções que ocorreram quando estavam a ser validados dados novos ou modificados."
  remarks: "InnerExceptions coleção contém todas as exceções de validação que foram iniciadas durante a validação de dados antes de uma atualização, inserção ou a operação de eliminação. Uma exceção de validação pode ocorrer se um valor não corresponde ao tipo da propriedade. Por exemplo, se tentar atualizar uma propriedade de número inteiro utilizando carateres não numéricos, é emitida uma exceção de validação. LINQ a classe do SQL Server também pode conter os critérios de validação personalizadas que certifique-se de que a propriedade contém um valor dentro de um intervalo esperado ou padrão."
  example:
  - "The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event. It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.  \n  \n```vb#  \nProtected Sub LinqDataSource_Updating(ByVal sender As Object, _  \n        ByVal e As LinqDataSourceUpdateEventArgs)  \n    If (e.Exception IsNot Nothing) Then  \n        For Each innerException As KeyValuePair(Of String, Exception) _  \n                In e.Exception.InnerExceptions  \n          Label1.Text &= innerException.Key & \": \" & _   \n                  innerException.Value.Message & \"<br />\"  \n        Next  \n        e.ExceptionHandled = True  \n    End If  \nEnd Sub  \n```  \n  \n [C#]  \n  \n```  \nprotected void LinqDataSource_Updating(object sender,   \n        LinqDataSourceUpdateEventArgs e)   \n{  \n    if (e.Exception != null)  \n    {  \n        foreach (KeyValuePair<string, Exception> innerException in   \n            e.Exception.InnerExceptions)  \n        {  \n            Label1.Text += innerException.Key + \": \" +   \n                innerException.Message + \"<br />\";  \n        }  \n        e.ExceptionHandled = true;  \n    }  \n}  \n```"
  syntax:
    content: public System.Collections.Generic.IDictionary<string,Exception> InnerExceptions { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Exception}
      description: "Uma coleção que contém as exceções."
  overload: System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Exception
  isExternal: false
  name: System.Exception
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor
  parent: System.Web.UI.WebControls.LinqDataSourceValidationException
  isExternal: false
  name: LinqDataSourceValidationException()
  nameWithType: LinqDataSourceValidationException.LinqDataSourceValidationException()
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException.LinqDataSourceValidationException()
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String)
  parent: System.Web.UI.WebControls.LinqDataSourceValidationException
  isExternal: false
  name: LinqDataSourceValidationException(String)
  nameWithType: LinqDataSourceValidationException.LinqDataSourceValidationException(String)
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException.LinqDataSourceValidationException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Web.UI.WebControls.LinqDataSourceValidationException
  isExternal: false
  name: LinqDataSourceValidationException(SerializationInfo,StreamingContext)
  nameWithType: LinqDataSourceValidationException.LinqDataSourceValidationException(SerializationInfo,StreamingContext)
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException.LinqDataSourceValidationException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Exception})
  parent: System.Web.UI.WebControls.LinqDataSourceValidationException
  isExternal: false
  name: LinqDataSourceValidationException(String,IDictionary<String,Exception>)
  nameWithType: LinqDataSourceValidationException.LinqDataSourceValidationException(String,IDictionary<String,Exception>)
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException.LinqDataSourceValidationException(String,IDictionary<String,Exception>)
- uid: System.Collections.Generic.IDictionary{System.String,System.Exception}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,Exception>
  nameWithType: IDictionary<String,Exception>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Exception>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.Exception>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: Exception
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String,System.Exception)
  parent: System.Web.UI.WebControls.LinqDataSourceValidationException
  isExternal: false
  name: LinqDataSourceValidationException(String,Exception)
  nameWithType: LinqDataSourceValidationException.LinqDataSourceValidationException(String,Exception)
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException.LinqDataSourceValidationException(String,Exception)
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Web.UI.WebControls.LinqDataSourceValidationException
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: LinqDataSourceValidationException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions
  parent: System.Web.UI.WebControls.LinqDataSourceValidationException
  isExternal: false
  name: InnerExceptions
  nameWithType: LinqDataSourceValidationException.InnerExceptions
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor*
  parent: System.Web.UI.WebControls.LinqDataSourceValidationException
  isExternal: false
  name: LinqDataSourceValidationException
  nameWithType: LinqDataSourceValidationException.LinqDataSourceValidationException
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData*
  parent: System.Web.UI.WebControls.LinqDataSourceValidationException
  isExternal: false
  name: GetObjectData
  nameWithType: LinqDataSourceValidationException.GetObjectData
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions*
  parent: System.Web.UI.WebControls.LinqDataSourceValidationException
  isExternal: false
  name: InnerExceptions
  nameWithType: LinqDataSourceValidationException.InnerExceptions
