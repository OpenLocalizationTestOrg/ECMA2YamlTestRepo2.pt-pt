### YamlMime:ManagedReference
items:
- uid: System.Data.Services.ExpandSegment
  id: ExpandSegment
  children:
  - System.Data.Services.ExpandSegment.#ctor(System.String,System.Linq.Expressions.Expression)
  - System.Data.Services.ExpandSegment.ExpandedProperty
  - System.Data.Services.ExpandSegment.Filter
  - System.Data.Services.ExpandSegment.HasFilter
  - System.Data.Services.ExpandSegment.MaxResultsExpected
  - System.Data.Services.ExpandSegment.Name
  - System.Data.Services.ExpandSegment.PathHasFilter(System.Collections.Generic.IEnumerable{System.Data.Services.ExpandSegment})
  langs:
  - csharp
  name: ExpandSegment
  nameWithType: ExpandSegment
  fullName: System.Data.Services.ExpandSegment
  type: Class
  summary: "O segmento de uma consulta que indica se devem ser devolvidos dados inline em vez de como conteúdo diferido."
  remarks: "Um `$expand`cláusula indica que cada `$expand`item deve ser totalmente expandido. Por exemplo, o valor `OrderLines.Product.Image` com `$expand` faz com que `OrderLines`, a `Product` de cada elemento `OrderLines`e o `Image` do `Product` de cada elemento `OrderLines` expandir.       A propriedade mais à esquerda num `$expand` cláusula tem de ser uma propriedade no tipo de entidade no conjunto de entidade identificado pelo último segmento de caminho no URI do pedido.       Redundante expanda cláusula as regras são aceitáveis e ignoradas."
  example:
  - "The following URI expands the `OrderLines` associated with each `Order` returned by the query.  \n  \n```  \nhttp://host/service.svc/Orders?$expand=OrderLines  \n  \n```"
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("ExpandSegment ({name},Filter={filter})]")]

      public class ExpandSegment
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Services.ExpandSegment.#ctor(System.String,System.Linq.Expressions.Expression)
  id: '#ctor(System.String,System.Linq.Expressions.Expression)'
  parent: System.Data.Services.ExpandSegment
  langs:
  - csharp
  name: ExpandSegment(String,Expression)
  nameWithType: ExpandSegment.ExpandSegment(String,Expression)
  fullName: System.Data.Services.ExpandSegment.ExpandSegment(String,Expression)
  type: Constructor
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "Inicializa uma <xref href=&quot;System.Data.Services.ExpandSegment&quot;> </xref> objeto com o nome de propriedade especificado e uma expressão de filtragem, possivelmente nula."
  syntax:
    content: public ExpandSegment (string name, System.Linq.Expressions.Expression filter);
    parameters:
    - id: name
      type: System.String
      description: "O nome da propriedade para ser expandido."
    - id: filter
      type: System.Linq.Expressions.Expression
      description: "A opção de filtro na consulta às quais se aplica o segmento de expansão."
  overload: System.Data.Services.ExpandSegment.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.ExpandSegment.ExpandedProperty
  id: ExpandedProperty
  parent: System.Data.Services.ExpandSegment
  langs:
  - csharp
  name: ExpandedProperty
  nameWithType: ExpandSegment.ExpandedProperty
  fullName: System.Data.Services.ExpandSegment.ExpandedProperty
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "Obtém a propriedade expandir."
  syntax:
    content: public System.Data.Services.Providers.ResourceProperty ExpandedProperty { get; }
    return:
      type: System.Data.Services.Providers.ResourceProperty
      description: "A propriedade para expandir."
  overload: System.Data.Services.ExpandSegment.ExpandedProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.ExpandSegment.Filter
  id: Filter
  parent: System.Data.Services.ExpandSegment
  langs:
  - csharp
  name: Filter
  nameWithType: ExpandSegment.Filter
  fullName: System.Data.Services.ExpandSegment.Filter
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "A opção de filtro na consulta às quais se aplica o segmento de expansão."
  syntax:
    content: public System.Linq.Expressions.Expression Filter { get; }
    return:
      type: System.Linq.Expressions.Expression
      description: "Uma expressão que especifica o filtro em dados de destino."
  overload: System.Data.Services.ExpandSegment.Filter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.ExpandSegment.HasFilter
  id: HasFilter
  parent: System.Data.Services.ExpandSegment
  langs:
  - csharp
  name: HasFilter
  nameWithType: ExpandSegment.HasFilter
  fullName: System.Data.Services.ExpandSegment.HasFilter
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "Um valor booleano que indica se a instrução de expansão é utilizada com uma expressão de filtro."
  syntax:
    content: public bool HasFilter { get; }
    return:
      type: System.Boolean
      description: "VERDADEIRO ou FALSO."
  overload: System.Data.Services.ExpandSegment.HasFilter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.ExpandSegment.MaxResultsExpected
  id: MaxResultsExpected
  parent: System.Data.Services.ExpandSegment
  langs:
  - csharp
  name: MaxResultsExpected
  nameWithType: ExpandSegment.MaxResultsExpected
  fullName: System.Data.Services.ExpandSegment.MaxResultsExpected
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "Obtém o número máximo de resultados esperado."
  remarks: "Para ativar o serviço de dados detetar uma falha ao satisfazer esta restrição, expanda fornecedores deverá devolver não mais do que MaxResultsExpected + 1 elementos."
  syntax:
    content: public int MaxResultsExpected { get; }
    return:
      type: System.Int32
      description: "O valor de número inteiro que indica o número máximo de resultados."
  overload: System.Data.Services.ExpandSegment.MaxResultsExpected*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.ExpandSegment.Name
  id: Name
  parent: System.Data.Services.ExpandSegment
  langs:
  - csharp
  name: Name
  nameWithType: ExpandSegment.Name
  fullName: System.Data.Services.ExpandSegment.Name
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "O nome da propriedade para ser expandido."
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "Um valor de cadeia que contém o nome da propriedade."
  overload: System.Data.Services.ExpandSegment.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.ExpandSegment.PathHasFilter(System.Collections.Generic.IEnumerable{System.Data.Services.ExpandSegment})
  id: PathHasFilter(System.Collections.Generic.IEnumerable{System.Data.Services.ExpandSegment})
  parent: System.Data.Services.ExpandSegment
  langs:
  - csharp
  name: PathHasFilter(IEnumerable<ExpandSegment>)
  nameWithType: ExpandSegment.PathHasFilter(IEnumerable<ExpandSegment>)
  fullName: System.Data.Services.ExpandSegment.PathHasFilter(IEnumerable<ExpandSegment>)
  type: Method
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "Um valor booleano que indica se o caminho inclui uma opção de filtro em dados de destino."
  syntax:
    content: public static bool PathHasFilter (System.Collections.Generic.IEnumerable<System.Data.Services.ExpandSegment> path);
    parameters:
    - id: path
      type: System.Collections.Generic.IEnumerable{System.Data.Services.ExpandSegment}
      description: "A enumeração de segmentos para verificar a existência de filtros."
    return:
      type: System.Boolean
      description: "TRUE se qualquer um dos segmentos do caminho tem um filtro; FALSE caso contrário."
  overload: System.Data.Services.ExpandSegment.PathHasFilter*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.Services.ExpandSegment.#ctor(System.String,System.Linq.Expressions.Expression)
  parent: System.Data.Services.ExpandSegment
  isExternal: false
  name: ExpandSegment(String,Expression)
  nameWithType: ExpandSegment.ExpandSegment(String,Expression)
  fullName: System.Data.Services.ExpandSegment.ExpandSegment(String,Expression)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Data.Services.ExpandSegment.ExpandedProperty
  parent: System.Data.Services.ExpandSegment
  isExternal: false
  name: ExpandedProperty
  nameWithType: ExpandSegment.ExpandedProperty
  fullName: System.Data.Services.ExpandSegment.ExpandedProperty
- uid: System.Data.Services.Providers.ResourceProperty
  parent: System.Data.Services.Providers
  isExternal: false
  name: ResourceProperty
  nameWithType: ResourceProperty
  fullName: System.Data.Services.Providers.ResourceProperty
- uid: System.Data.Services.ExpandSegment.Filter
  parent: System.Data.Services.ExpandSegment
  isExternal: false
  name: Filter
  nameWithType: ExpandSegment.Filter
  fullName: System.Data.Services.ExpandSegment.Filter
- uid: System.Data.Services.ExpandSegment.HasFilter
  parent: System.Data.Services.ExpandSegment
  isExternal: false
  name: HasFilter
  nameWithType: ExpandSegment.HasFilter
  fullName: System.Data.Services.ExpandSegment.HasFilter
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Services.ExpandSegment.MaxResultsExpected
  parent: System.Data.Services.ExpandSegment
  isExternal: false
  name: MaxResultsExpected
  nameWithType: ExpandSegment.MaxResultsExpected
  fullName: System.Data.Services.ExpandSegment.MaxResultsExpected
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Services.ExpandSegment.Name
  parent: System.Data.Services.ExpandSegment
  isExternal: false
  name: Name
  nameWithType: ExpandSegment.Name
  fullName: System.Data.Services.ExpandSegment.Name
- uid: System.Data.Services.ExpandSegment.PathHasFilter(System.Collections.Generic.IEnumerable{System.Data.Services.ExpandSegment})
  parent: System.Data.Services.ExpandSegment
  isExternal: false
  name: PathHasFilter(IEnumerable<ExpandSegment>)
  nameWithType: ExpandSegment.PathHasFilter(IEnumerable<ExpandSegment>)
  fullName: System.Data.Services.ExpandSegment.PathHasFilter(IEnumerable<ExpandSegment>)
- uid: System.Collections.Generic.IEnumerable{System.Data.Services.ExpandSegment}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ExpandSegment>
  nameWithType: IEnumerable<ExpandSegment>
  fullName: System.Collections.Generic.IEnumerable<System.Data.Services.ExpandSegment>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Data.Services.ExpandSegment>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Services.ExpandSegment
    name: ExpandSegment
    nameWithType: ExpandSegment
    fullName: ExpandSegment
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Services.ExpandSegment.#ctor*
  parent: System.Data.Services.ExpandSegment
  isExternal: false
  name: ExpandSegment
  nameWithType: ExpandSegment.ExpandSegment
- uid: System.Data.Services.ExpandSegment.ExpandedProperty*
  parent: System.Data.Services.ExpandSegment
  isExternal: false
  name: ExpandedProperty
  nameWithType: ExpandSegment.ExpandedProperty
- uid: System.Data.Services.ExpandSegment.Filter*
  parent: System.Data.Services.ExpandSegment
  isExternal: false
  name: Filter
  nameWithType: ExpandSegment.Filter
- uid: System.Data.Services.ExpandSegment.HasFilter*
  parent: System.Data.Services.ExpandSegment
  isExternal: false
  name: HasFilter
  nameWithType: ExpandSegment.HasFilter
- uid: System.Data.Services.ExpandSegment.MaxResultsExpected*
  parent: System.Data.Services.ExpandSegment
  isExternal: false
  name: MaxResultsExpected
  nameWithType: ExpandSegment.MaxResultsExpected
- uid: System.Data.Services.ExpandSegment.Name*
  parent: System.Data.Services.ExpandSegment
  isExternal: false
  name: Name
  nameWithType: ExpandSegment.Name
- uid: System.Data.Services.ExpandSegment.PathHasFilter*
  parent: System.Data.Services.ExpandSegment
  isExternal: false
  name: PathHasFilter
  nameWithType: ExpandSegment.PathHasFilter
