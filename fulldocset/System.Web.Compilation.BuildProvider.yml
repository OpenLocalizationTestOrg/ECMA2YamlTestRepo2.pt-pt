### YamlMime:ManagedReference
items:
- uid: System.Web.Compilation.BuildProvider
  id: BuildProvider
  children:
  - System.Web.Compilation.BuildProvider.#ctor
  - System.Web.Compilation.BuildProvider.CodeCompilerType
  - System.Web.Compilation.BuildProvider.GenerateCode(System.Web.Compilation.AssemblyBuilder)
  - System.Web.Compilation.BuildProvider.GetCodeCompileUnit(System.Collections.IDictionary@)
  - System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)
  - System.Web.Compilation.BuildProvider.GetDefaultCompilerType
  - System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)
  - System.Web.Compilation.BuildProvider.GetGeneratedType(System.CodeDom.Compiler.CompilerResults)
  - System.Web.Compilation.BuildProvider.GetResultFlags(System.CodeDom.Compiler.CompilerResults)
  - System.Web.Compilation.BuildProvider.OpenReader
  - System.Web.Compilation.BuildProvider.OpenReader(System.String)
  - System.Web.Compilation.BuildProvider.OpenStream
  - System.Web.Compilation.BuildProvider.OpenStream(System.String)
  - System.Web.Compilation.BuildProvider.ProcessCompileErrors(System.CodeDom.Compiler.CompilerResults)
  - System.Web.Compilation.BuildProvider.ReferencedAssemblies
  - System.Web.Compilation.BuildProvider.RegisterBuildProvider(System.String,System.Type)
  - System.Web.Compilation.BuildProvider.VirtualPath
  - System.Web.Compilation.BuildProvider.VirtualPathDependencies
  langs:
  - csharp
  name: BuildProvider
  nameWithType: BuildProvider
  fullName: System.Web.Compilation.BuildProvider
  type: Class
  summary: "Define um conjunto de propriedades e métodos para gerar o código de origem no ambiente de compilação do ASP.NET. Esta classe é abstracta."
  remarks: "O ambiente de compilação do ASP.NET utiliza BuildProvider objetos para gerar código de origem para tipos de ficheiro diferente dentro de uma aplicação. Classes derivadas de BuildProvider predominantemente fornecem o código de origem para os ficheiros, as páginas Web, recursos e outros itens personalizados.       Normalmente, não criar uma instância da classe BuildProvider diretamente. Em vez disso, pode implementa uma classe que derive BuildProvider e configurar a implementação de BuildProvider para utilização no ambiente de compilação do ASP.NET.       São utilizadas instâncias da classe BuildProvider com <xref:System.Web.Compilation.AssemblyBuilder>objetos para criar um ou mais ficheiros numa assemblagem compilada.</xref:System.Web.Compilation.AssemblyBuilder> Uma instância de BuildProvider gera o código de origem no idioma adequado para ficheiros individuais e o <xref:System.Web.Compilation.AssemblyBuilder>objeto combina a origem contribuída por cada instância de BuildProvider numa única assemblagem.</xref:System.Web.Compilation.AssemblyBuilder>       O ambiente de compilação do ASP.NET utiliza instâncias da classe BuildProvider para criar ficheiros dentro de uma aplicação. O <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A>propriedade da classe BuildProvider indica o caminho do ficheiro a ser criada.</xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> A extensão de ficheiro de cada ficheiro numa aplicação é mapeada para um fornecedor de compilação correspondente. O ambiente de compilação do ASP.NET inicializa uma instância de BuildProvider para cada ficheiro com base na extensão de ficheiro e utiliza os métodos de BuildProvider para gerar código de origem para o ficheiro. O ASP.NET criar ambiente transmite um <xref:System.Web.Compilation.AssemblyBuilder>objeto com base no idioma preferencial compilador e o contexto do ficheiro para os métodos de BuildProvider durante a criação de uma assemblagem a partir de um ou mais ficheiros, para que a instância de BuildProvider pode contribuir código de origem para o ficheiro de assemblagem global.</xref:System.Web.Compilation.AssemblyBuilder>       Para definir a compilação personalizada ações para um ficheiro Escreva dentro de uma aplicação ASP.NET, tem uma classe de derivar de BuildProvider, implementar membros da classe derivada para criar o tipo de ficheiro e configurar o fornecedor de compilação para a extensão de ficheiro correspondente no ficheiro de configuração de aplicação.       O Especifica a extensão de ficheiro suportados para ficheiros de, e se o fornecedor de compilação suporta ficheiros de código, ficheiros Web, ficheiros de recursos ou todos os ficheiros. Utilize o `type` atributo para especificar o nome de tipo totalmente qualificado da implementação do fornecedor de compilação. Utilize o <xref:System.Web.Compilation.BuildProviderAppliesToAttribute>classe para especificar se o fornecedor de compilação se aplica aos ficheiros no diretório App_Code para ficheiros num diretório conteúdo Web, recursos a globais ou locais ou para todos os ficheiros.</xref:System.Web.Compilation.BuildProviderAppliesToAttribute> Utilize o `extension` atributo para especificar a extensão de ficheiro utilizada para identificar ficheiros que suporte a classe de BuildProvider. Utilize o <xref:System.Web.Configuration.BuildProviderCollection>fornecedores num ficheiro de configuração de compilação de classe para examinar.</xref:System.Web.Configuration.BuildProviderCollection> Para obter mais informações sobre como configurar um fornecedor de compilação, consulte [buildProviders elemento para a compilação (esquema de definições do ASP.NET)](http://msdn.microsoft.com/en-us/40fa889d-5412-487a-b6a9-21eb011c2384).       Para implementar um fornecedor de compilação que gera o código de origem para um tipo de ficheiro personalizadas, derivar uma classe BuildProvider e substituir a <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>método para gerar código de origem para o tipo de ficheiro suportados.</xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> A origem gerada é adicionada ao <xref:System.Web.Compilation.AssemblyBuilder>objeto sob a forma de um gráfico de CodeDOM ou como o conteúdo que representa um ficheiro de código de origem físico.</xref:System.Web.Compilation.AssemblyBuilder> Se o fornecedor de compilação requer um idioma de programação específico, substituir o <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>propriedade para devolver um <xref:System.Web.Compilation.CompilerType>objeto para a linguagem de programação suportada.</xref:System.Web.Compilation.CompilerType> </xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> Se o fornecedor de compilação não necessitar de uma linguagem de programação específica, não substituam o <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>propriedade; utilize a implementação de classe base, que indica que o fornecedor de compilação, pode utilizar qualquer linguagem do .NET Framework, como o Visual Basic ou c#.</xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>       Para implementar um fornecedor de compilação que gera o código de origem de conteúdo Web, derivar uma classe BuildProvider e ignorar o <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>método para devolver o <xref:System.Type>para a classe gerada pelo BuildProvider.</xref:System.Type> </xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> Substituir o <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>método para gerar código de origem para o tipo fornecido pelo ficheiro suportado.</xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>      > [!NOTE] > A adição de uma classe de BuildProvider personalizada para o ficheiro Web. config funciona num Web site do ASP.NET, mas não funciona num projeto de aplicação ASP.NET Web. Num projeto aplicação Web, o código que é gerado pela classe BuildProvider não pode ser incluído na aplicação. Para obter mais informações, consulte [ASP.NET Web projeto pré-compilação da descrição geral de aplicações](http://msdn.microsoft.com/en-us/b940abbd-178d-4570-b441-52914fa7b887)."
  example:
  - "The following code example illustrates a simple build provider implementation, inheriting from the abstract BuildProvider base class. The build provider overrides the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> members of the base class. The example does not include the implementation of the `SampleClassGenerator` class. For more information, see the <xref:System.CodeDom.CodeCompileUnit> class overview.  \n  \n [!code-cs[System.Web.Compilation.SampleBuildProvider_2#2](~/add/codesnippet/csharp/t-system.web.compilation_0_1.cs)]\n [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/add/codesnippet/visualbasic/t-system.web.compilation_0_1.vb)]"
  syntax:
    content: public abstract class BuildProvider
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.#ctor
  id: '#ctor'
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: BuildProvider()
  nameWithType: BuildProvider.BuildProvider()
  fullName: System.Web.Compilation.BuildProvider.BuildProvider()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.Compilation.BuildProvider&quot;> </xref> classe."
  remarks: "Porque o <xref:System.Web.Compilation.BuildProvider>classe é abstracto, não é possível criar uma instância de <xref:System.Web.Compilation.BuildProvider>diretamente com o construtor.</xref:System.Web.Compilation.BuildProvider> </xref:System.Web.Compilation.BuildProvider>       Quando efetuar a derivação do <xref:System.Web.Compilation.BuildProvider>classe, substitua o construtor para implementar ações inicialização personalizada para a implementação do fornecedor de compilação.</xref:System.Web.Compilation.BuildProvider>"
  syntax:
    content: protected BuildProvider ();
    parameters: []
  overload: System.Web.Compilation.BuildProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.CodeCompilerType
  id: CodeCompilerType
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: CodeCompilerType
  nameWithType: BuildProvider.CodeCompilerType
  fullName: System.Web.Compilation.BuildProvider.CodeCompilerType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Representa o tipo de compilador utilizado por um fornecedor de compilação para gerar código de origem para um tipo de ficheiro personalizadas."
  remarks: "Utilize a propriedade CodeCompilerType para fornecer as definições para compilar o código de origem para uma implementação de <xref:System.Web.Compilation.BuildProvider>.</xref:System.Web.Compilation.BuildProvider> A propriedade CodeCompilerType é `null` se o fornecedor de compilação não necessita de um idioma de código específico para gerar e compilar o código de origem.       Para definir o valor para um <xref:System.Web.Compilation.CompilerType>objeto dentro de uma implementação do fornecedor de compilação, utilize o <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A>ou <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A>método.</xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> </xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> </xref:System.Web.Compilation.CompilerType>       O <xref:System.Web.Compilation.CompilerType.CodeDomProviderType%2A>propriedade especifica o <xref:System.CodeDom.Compiler.CodeDomProvider>implementação que é utilizada para gerar e compilar o código de origem para um fornecedor de compilação.</xref:System.CodeDom.Compiler.CodeDomProvider> </xref:System.Web.Compilation.CompilerType.CodeDomProviderType%2A> O <xref:System.Web.Compilation.CompilerType.CompilerParameters%2A>propriedade define as definições que são utilizadas para compilar o código de origem para uma assemblagem.</xref:System.Web.Compilation.CompilerType.CompilerParameters%2A>"
  example:
  - "The following code example illustrates a simple build provider implementation, inheriting from the abstract <xref:System.Web.Compilation.BuildProvider> base class. The build provider overrides the CodeCompilerType, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> members of the base class.  \n  \n [!code-cs[System.Web.Compilation.SampleBuildProvider_2#2](~/add/codesnippet/csharp/p-system.web.compilation_4_1.cs)]\n [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/add/codesnippet/visualbasic/p-system.web.compilation_4_1.vb)]"
  syntax:
    content: public virtual System.Web.Compilation.CompilerType CodeCompilerType { get; }
    return:
      type: System.Web.Compilation.CompilerType
      description: "Um só de leitura <xref href=&quot;System.Web.Compilation.CompilerType&quot;> </xref> que representa o gerador de código, o compilador de código e definições de compilador utilizadas para criar o código de origem para o caminho virtual. Devolve a classe base <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Compilation.BuildProvider.CodeCompilerType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.GenerateCode(System.Web.Compilation.AssemblyBuilder)
  id: GenerateCode(System.Web.Compilation.AssemblyBuilder)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: GenerateCode(AssemblyBuilder)
  nameWithType: BuildProvider.GenerateCode(AssemblyBuilder)
  fullName: System.Web.Compilation.BuildProvider.GenerateCode(AssemblyBuilder)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Gera o código de origem para o caminho virtual do fornecedor de compilação e adiciona o código de origem para um construtor de assemblagem especificado."
  remarks: "Para implementar um fornecedor de compilação que gera o código de origem para um tipo de ficheiro personalizadas, uma classe a partir de derivar de <xref:System.Web.Compilation.BuildProvider>classe e substitua o método GenerateCode para gerar código de origem para o tipo de ficheiro suportados.</xref:System.Web.Compilation.BuildProvider>       Normalmente, implementação de um fornecedor de compilação de GenerateCode lê o <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A>propriedade, analisa o conteúdo e adiciona o código de origem gerados ao especificado <xref:System.Web.Compilation.AssemblyBuilder>objeto.</xref:System.Web.Compilation.AssemblyBuilder> </xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> Pode contribuir código de origem para a assemblagem sob a forma de um <xref:System.IO.TextWriter>objeto ou um gráfico de CodeDOM.</xref:System.IO.TextWriter> Para adicionar o código de origem para a assemblagem através de um <xref:System.IO.TextWriter>objeto, utilize o <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A>método.</xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> </xref:System.IO.TextWriter> Para adicionar o código de origem num gráfico de CodeDOM para a assemblagem, utilize o <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A>método.</xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A>       Se o fornecedor de compilação gera o código de origem num idioma de programação específico, tem de substituir o <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>propriedade para devolver um <xref:System.Web.Compilation.CompilerType>objeto para a linguagem de programação suportada.</xref:System.Web.Compilation.CompilerType> </xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>"
  example:
  - "The following code example illustrates a simple build provider implementation, inheriting from the abstract <xref:System.Web.Compilation.BuildProvider> base class. The build provider overrides the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and GenerateCode members of the base class.  \n  \n [!code-cs[System.Web.Compilation.SampleBuildProvider_2#2](~/add/codesnippet/csharp/fc642c18-5414-4093-bd92-_1.cs)]\n [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/add/codesnippet/visualbasic/fc642c18-5414-4093-bd92-_1.vb)]"
  syntax:
    content: public virtual void GenerateCode (System.Web.Compilation.AssemblyBuilder assemblyBuilder);
    parameters:
    - id: assemblyBuilder
      type: System.Web.Compilation.AssemblyBuilder
      description: "O construtor de assemblagem referencia o código de origem gerado pelo fornecedor de compilação."
  overload: System.Web.Compilation.BuildProvider.GenerateCode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.GetCodeCompileUnit(System.Collections.IDictionary@)
  id: GetCodeCompileUnit(System.Collections.IDictionary@)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: GetCodeCompileUnit(IDictionary)
  nameWithType: BuildProvider.GetCodeCompileUnit(IDictionary)
  fullName: System.Web.Compilation.BuildProvider.GetCodeCompileUnit(IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Representa o contentor para o gráfico de CodeDOM gerado."
  remarks: "Este método pode ser utilizado através do <xref:System.Web.Compilation.ClientBuildManager>classe para o realce da sintaxe e o estruturador de suporte no Visual Studio.</xref:System.Web.Compilation.ClientBuildManager>"
  syntax:
    content: protected virtual System.CodeDom.CodeCompileUnit GetCodeCompileUnit (out System.Collections.IDictionary linePragmasTable);
    parameters:
    - id: linePragmasTable
      type: System.Collections.IDictionary
      description: "Quando este método devolve, contém um dicionário que contém todos os números de linha associados e pragmas de linha de código fonte de lista de URL. Este parâmetro é transmitido não inicializado."
    return:
      type: System.CodeDom.CodeCompileUnit
      description: "O contentor para o gráfico de CodeDOM que é gerado pelo <xref href=&quot;System.Web.Compilation.BuildProvider&quot;> </xref> instância."
  overload: System.Web.Compilation.BuildProvider.GetCodeCompileUnit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)
  id: GetCustomString(System.CodeDom.Compiler.CompilerResults)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: GetCustomString(CompilerResults)
  nameWithType: BuildProvider.GetCustomString(CompilerResults)
  fullName: System.Web.Compilation.BuildProvider.GetCustomString(CompilerResults)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Gera uma cadeia para ser persistente na assemblagem compilada."
  remarks: "O <xref:System.Web.Compilation.BuildManager.GetCompiledCustomString%2A>método de um <xref:System.Web.Compilation.BuildManager>objeto cria uma instância de um fornecedor de compilação para um caminho virtual entrado e chama o método GetCustomString no <xref:System.Web.Compilation.BuildProvider>objeto.</xref:System.Web.Compilation.BuildProvider> </xref:System.Web.Compilation.BuildManager> </xref:System.Web.Compilation.BuildManager.GetCompiledCustomString%2A>       A base de <xref:System.Web.Compilation.BuildProvider>classe devolve `null` para o método GetCustomString, que indica que não está implementado GetCustomString.</xref:System.Web.Compilation.BuildProvider>       Determinadas implementações de fornecedor de compilação podem implementar GetCustomString em vez do <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>método.</xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> Um <xref:System.Web.Compilation.BuildProvider>objeto normalmente utiliza <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>para devolver um <xref:System.Type>objeto para um caminho virtual.</xref:System.Type> </xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> </xref:System.Web.Compilation.BuildProvider> No entanto, o método de GetCustomString pode ser utilizado para indicar que um <xref:System.Web.Compilation.BuildProvider>objeto pode gerar vários tipos de um caminho virtual.</xref:System.Web.Compilation.BuildProvider>"
  syntax:
    content: public virtual string GetCustomString (System.CodeDom.Compiler.CompilerResults results);
    parameters:
    - id: results
      type: System.CodeDom.Compiler.CompilerResults
      description: "Os resultados de compilação para o caminho virtual do fornecedor de compilação."
    return:
      type: System.String
      description: "Uma cadeia para ser persistente no ambiente de compilação, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o <xref href=&quot;System.Web.Compilation.BuildProvider&quot;> </xref> instância não implementa GetCustomString."
  overload: System.Web.Compilation.BuildProvider.GetCustomString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.GetDefaultCompilerType
  id: GetDefaultCompilerType
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: GetDefaultCompilerType()
  nameWithType: BuildProvider.GetDefaultCompilerType()
  fullName: System.Web.Compilation.BuildProvider.GetDefaultCompilerType()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Devolve as definições do compilador do idioma predefinido na aplicação."
  remarks: "Utilize o método de GetDefaultCompilerType para examinar o tipo de compilador predefinido para um fornecedor de compilação. Utilize o <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A>método para examinar o tipo de compilador configurado num fornecedor de compilação para um nome de idioma específico.</xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A>       A base <xref:System.Web.Compilation.BuildProvider>classe determina o compilador de predefinição tipo utilizando o `defaultLanguage` atributo valor na secção do ficheiro de configuração de aplicação.</xref:System.Web.Compilation.BuildProvider> Se não houver nenhuma definição de idioma predefinido na secção de compilação, o tipo de compilador predefinido estiver definido com o <xref:Microsoft.VisualBasic.VBCodeProvider>fornecedor de linguagem.</xref:Microsoft.VisualBasic.VBCodeProvider>       Quando efetuar a derivação do <xref:System.Web.Compilation.BuildProvider>classe, pode utilizar GetDefaultCompilerType para definir o <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>propriedade dentro da sua implementação.</xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> </xref:System.Web.Compilation.BuildProvider>"
  syntax:
    content: protected System.Web.Compilation.CompilerType GetDefaultCompilerType ();
    parameters: []
    return:
      type: System.Web.Compilation.CompilerType
      description: "A <xref href=&quot;System.Web.Compilation.CompilerType&quot;> </xref> que representa as definições de compilador do idioma predefinido na aplicação. A classe base devolve o compilador de predefinido com base no ficheiro de configuração de aplicação."
  overload: System.Web.Compilation.BuildProvider.GetDefaultCompilerType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)
  id: GetDefaultCompilerTypeForLanguage(System.String)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: GetDefaultCompilerTypeForLanguage(String)
  nameWithType: BuildProvider.GetDefaultCompilerTypeForLanguage(String)
  fullName: System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Devolve as definições de compilador para o fornecedor de compilação com base no idioma especificado."
  remarks: "Utilize o método GetDefaultCompilerTypeForLanguage para examinar o tipo de compilador configurado no fornecedor de compilação para um nome de idioma específico. Utilize o <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A>método para examinar o tipo de compilador predefinido para um fornecedor de compilação.</xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A>       A base de <xref:System.Web.Compilation.BuildProvider>classe determina a através do tipo predefinido do compilador o <xref:System.Web.Configuration.Compiler>elementos no <xref:System.Web.Configuration.CompilationSection.Compilers%2A>propriedade o <xref:System.Web.Configuration.CompilationSection>objeto para o ficheiro de configuração.</xref:System.Web.Configuration.CompilationSection> </xref:System.Web.Configuration.CompilationSection.Compilers%2A> </xref:System.Web.Configuration.Compiler> </xref:System.Web.Compilation.BuildProvider> Isto é equivalente ao examinar os elementos em elementos e nas secções do ficheiro de configuração. Por exemplo, para o `language` valor VB, o método de classe base devolve um <xref:System.Web.Compilation.CompilerType>objeto que corresponde às definições configuradas para uma instância de <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=fullName>.</xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=fullName> </xref:System.Web.Compilation.CompilerType>       Quando derivar a <xref:System.Web.Compilation.BuildProvider>classe, pode utilizar GetDefaultCompilerTypeForLanguage para definir o <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>valor da propriedade para o idioma suportado pela sua implementação.</xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> </xref:System.Web.Compilation.BuildProvider>"
  syntax:
    content: protected System.Web.Compilation.CompilerType GetDefaultCompilerTypeForLanguage (string language);
    parameters:
    - id: language
      type: System.String
      description: "Um nome de idioma do código."
    return:
      type: System.Web.Compilation.CompilerType
      description: "A <xref href=&quot;System.Web.Compilation.CompilerType&quot;> </xref> que representa as definições de compilador para o fornecedor de compilação com base no idioma especificado. A classe base devolve a predefinição compilador as definições para o idioma baseado no ficheiro de configuração de aplicação."
  overload: System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>language</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code>language</code>não corresponde a um compilador configurado para o fornecedor de compilação."
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.GetGeneratedType(System.CodeDom.Compiler.CompilerResults)
  id: GetGeneratedType(System.CodeDom.Compiler.CompilerResults)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: GetGeneratedType(CompilerResults)
  nameWithType: BuildProvider.GetGeneratedType(CompilerResults)
  fullName: System.Web.Compilation.BuildProvider.GetGeneratedType(CompilerResults)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Devolve um tipo gerado pelo fornecedor de compilação do caminho virtual."
  remarks: "Para implementar um fornecedor de compilação que gera o código de origem de conteúdo Web, tais como ficheiros. aspx, uma classe a partir de derivar de <xref:System.Web.Compilation.BuildProvider>classe e substitua o método de GetGeneratedType para devolver o tipo gerado pelo fornecedor de compilação.</xref:System.Web.Compilation.BuildProvider>       O sistema de compilação do ASP.NET compila ficheiros para cada fornecedor de compilação e gera um <xref:System.CodeDom.Compiler.CompilerResults>objeto, que é transmitido ao método GetGeneratedType.</xref:System.CodeDom.Compiler.CompilerResults> Normalmente, utiliza a implementação de um fornecedor de compilação de GetGeneratedType o <xref:System.Reflection.Assembly.GetType%2A>método no <xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A>propriedade da entrada `results` objeto para devolver o tipo fornecido.</xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A> </xref:System.Reflection.Assembly.GetType%2A>"
  syntax:
    content: public virtual Type GetGeneratedType (System.CodeDom.Compiler.CompilerResults results);
    parameters:
    - id: results
      type: System.CodeDom.Compiler.CompilerResults
      description: "Os resultados de compilação para o caminho virtual do fornecedor de compilação."
    return:
      type: System.Type
      description: "O tipo que é gerado pelo fornecedor de compilação para o caminho virtual. Devolve a classe base <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Compilation.BuildProvider.GetGeneratedType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.GetResultFlags(System.CodeDom.Compiler.CompilerResults)
  id: GetResultFlags(System.CodeDom.Compiler.CompilerResults)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: GetResultFlags(CompilerResults)
  nameWithType: BuildProvider.GetResultFlags(CompilerResults)
  fullName: System.Web.Compilation.BuildProvider.GetResultFlags(CompilerResults)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Devolve um valor que indica as ações necessárias quando é criado um caminho virtual."
  remarks: "O método GetResultFlags utilizado pelo ambiente de compilação do ASP.NET utilizando as instâncias do <xref:System.Web.Compilation.BuildProvider>classe para compilar ficheiros e carregar as assemblagens compiladas.</xref:System.Web.Compilation.BuildProvider>       A base de <xref:System.Web.Compilation.BuildProvider>classe método devolve o <xref:System.Web.Compilation.BuildProviderResultFlags>valor de campo, que indica que é necessária nenhuma ação especial quando o caminho virtual é criado.</xref:System.Web.Compilation.BuildProviderResultFlags> </xref:System.Web.Compilation.BuildProvider>       Quando efetuar a derivação de <xref:System.Web.Compilation.BuildProvider>classe, que pode implementar o método GetResultFlags para devolver um outro <xref:System.Web.Compilation.BuildProviderResultFlags>valor para o seu tipo de ficheiro personalizadas ou o caminho virtual.</xref:System.Web.Compilation.BuildProviderResultFlags> </xref:System.Web.Compilation.BuildProvider> Por exemplo, se uma reconstrução do seu caminho virtual requer que o contém <xref:System.AppDomain>objeto recarregar, pode devolver o <xref:System.Web.Compilation.BuildProviderResultFlags>valor de enumeração do seu método GetResultFlags.</xref:System.Web.Compilation.BuildProviderResultFlags> </xref:System.AppDomain>"
  syntax:
    content: public virtual System.Web.Compilation.BuildProviderResultFlags GetResultFlags (System.CodeDom.Compiler.CompilerResults results);
    parameters:
    - id: results
      type: System.CodeDom.Compiler.CompilerResults
      description: "Os resultados de compilação para o caminho virtual do fornecedor de compilação."
    return:
      type: System.Web.Compilation.BuildProviderResultFlags
      description: "A <xref href=&quot;System.Web.Compilation.BuildProviderResultFlags&quot;> </xref> valor que indica que o ambiente de compilação de ações necessárias depois do caminho virtual é criado dentro do ASP.NET."
  overload: System.Web.Compilation.BuildProvider.GetResultFlags*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.OpenReader
  id: OpenReader
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: OpenReader()
  nameWithType: BuildProvider.OpenReader()
  fullName: System.Web.Compilation.BuildProvider.OpenReader()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Abre-se um leitor de texto para ler do caminho virtual do objeto de fornecedor de compilação atual."
  remarks: "Utilize o <xref:System.IO.TextReader.Read%2A>método no devolvido <xref:System.IO.TextReader>objeto para ler o conteúdo do <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A>propriedade para um <xref:System.Web.Compilation.BuildProvider>objeto.</xref:System.Web.Compilation.BuildProvider> </xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> </xref:System.IO.TextReader> </xref:System.IO.TextReader.Read%2A>       Depois de chamar o método OpenReader, tem de utilizar o <xref:System.IO.TextReader.Close%2A>método para fechar o <xref:System.IO.TextReader>de objeto e libertar recursos do sistema associado.</xref:System.IO.TextReader> </xref:System.IO.TextReader.Close%2A>"
  syntax:
    content: protected System.IO.TextReader OpenReader ();
    parameters: []
    return:
      type: System.IO.TextReader
      description: "Um aberto <xref:System.IO.TextReader>que podem ser utilizados para ler o conteúdo do <xref:System.Web.Compilation.BuildProvider.VirtualPath*>.</xref:System.Web.Compilation.BuildProvider.VirtualPath*> </xref:System.IO.TextReader>"
  overload: System.Web.Compilation.BuildProvider.OpenReader*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.OpenReader(System.String)
  id: OpenReader(System.String)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: OpenReader(String)
  nameWithType: BuildProvider.OpenReader(String)
  fullName: System.Web.Compilation.BuildProvider.OpenReader(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Abre-se um leitor de texto para ler a partir de um caminho virtual especificado."
  remarks: "Utilize o <xref:System.IO.TextReader.Read%2A>método no devolvido <xref:System.IO.TextReader>objeto para ler o conteúdo do caminho virtual.</xref:System.IO.TextReader> </xref:System.IO.TextReader.Read%2A>       Após a chamada de <xref:System.Web.Compilation.BuildProvider.OpenReader%2A>método, tem de utilizar o <xref:System.IO.TextReader.Close%2A>método para fechar o <xref:System.IO.TextReader>de objeto e libertar recursos do sistema associado.</xref:System.IO.TextReader> </xref:System.IO.TextReader.Close%2A> </xref:System.Web.Compilation.BuildProvider.OpenReader%2A>"
  syntax:
    content: protected System.IO.TextReader OpenReader (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "O caminho virtual ler."
    return:
      type: System.IO.TextReader
      description: "Um aberto <xref:System.IO.TextReader>que podem ser utilizados para ler o conteúdo do caminho virtual especificado.</xref:System.IO.TextReader>"
  overload: System.Web.Compilation.BuildProvider.OpenReader*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.OpenStream
  id: OpenStream
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: OpenStream()
  nameWithType: BuildProvider.OpenStream()
  fullName: System.Web.Compilation.BuildProvider.OpenStream()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Abre uma transmissão em fluxo para ler o caminho virtual do objeto de fornecedor de compilação atual."
  remarks: "Utilize o <xref:System.IO.Stream.Read%2A>método no devolvido <xref:System.IO.Stream>objeto, ler os conteúdos do caminho virtual para o <xref:System.Web.Compilation.BuildProvider>objeto.</xref:System.Web.Compilation.BuildProvider> </xref:System.IO.Stream> </xref:System.IO.Stream.Read%2A>       Depois de chamar o método OpenStream, tem de utilizar o <xref:System.IO.Stream.Close%2A>método para fechar o <xref:System.IO.Stream>de objeto e libertar recursos do sistema associado.</xref:System.IO.Stream> </xref:System.IO.Stream.Close%2A>"
  syntax:
    content: protected System.IO.Stream OpenStream ();
    parameters: []
    return:
      type: System.IO.Stream
      description: "Um aberto <xref:System.IO.Stream>que podem ser utilizados para ler o conteúdo do <xref:System.Web.Compilation.BuildProvider.VirtualPath*>.</xref:System.Web.Compilation.BuildProvider.VirtualPath*> </xref:System.IO.Stream>"
  overload: System.Web.Compilation.BuildProvider.OpenStream*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.OpenStream(System.String)
  id: OpenStream(System.String)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: OpenStream(String)
  nameWithType: BuildProvider.OpenStream(String)
  fullName: System.Web.Compilation.BuildProvider.OpenStream(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Abre uma transmissão em fluxo para ler a partir de um caminho virtual especificado."
  remarks: "Utilize o <xref:System.IO.Stream.Read%2A>método no devolvido <xref:System.IO.Stream>objeto para ler o conteúdo do caminho virtual.</xref:System.IO.Stream> </xref:System.IO.Stream.Read%2A>       Após a chamada de <xref:System.Web.Compilation.BuildProvider.OpenStream%2A>método, tem de utilizar o <xref:System.IO.Stream.Close%2A>método para fechar o <xref:System.IO.Stream>de objeto e libertar recursos do sistema associado.</xref:System.IO.Stream> </xref:System.IO.Stream.Close%2A> </xref:System.Web.Compilation.BuildProvider.OpenStream%2A>"
  syntax:
    content: protected System.IO.Stream OpenStream (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "O caminho virtual ler."
    return:
      type: System.IO.Stream
      description: "Um aberto <xref:System.IO.Stream>que podem ser utilizados para ler o conteúdo do caminho virtual especificado.</xref:System.IO.Stream>"
  overload: System.Web.Compilation.BuildProvider.OpenStream*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.ProcessCompileErrors(System.CodeDom.Compiler.CompilerResults)
  id: ProcessCompileErrors(System.CodeDom.Compiler.CompilerResults)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: ProcessCompileErrors(CompilerResults)
  nameWithType: BuildProvider.ProcessCompileErrors(CompilerResults)
  fullName: System.Web.Compilation.BuildProvider.ProcessCompileErrors(CompilerResults)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Quando substituí-lo de uma classe derivada, permite-lhe rever as mensagens de erro do compilador, de modo a que possa modificá-los para fornecer mais informações."
  remarks: "Normalmente, substituir este método, para que possa modificar erros do compilador antes de que são apresentadas para efetuar o texto do erro mais úteis para o utilizador. Isto é útil em cenários em que sabe o contexto de determinados erros e pode fornecer informações para o utilizador sobre como corrigir. A mensagem de erro de compilador original é, normalmente, específica para uma construção de idioma específico e poderá não fazer a causa real ou solução óbvios ao utilizador.       Pode aceder os erros ao utilizar o <xref:System.CodeDom.Compiler.CompilerResults>objeto que é transmitido ao método.</xref:System.CodeDom.Compiler.CompilerResults>"
  syntax:
    content: public virtual void ProcessCompileErrors (System.CodeDom.Compiler.CompilerResults results);
    parameters:
    - id: results
      type: System.CodeDom.Compiler.CompilerResults
      description: "Resultados do compilador."
  overload: System.Web.Compilation.BuildProvider.ProcessCompileErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.ReferencedAssemblies
  id: ReferencedAssemblies
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: ReferencedAssemblies
  nameWithType: BuildProvider.ReferencedAssemblies
  fullName: System.Web.Compilation.BuildProvider.ReferencedAssemblies
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Representa as assemblagens para compilar com a origem gerada pelo fornecedor de compilação."
  remarks: "O ASP.NET criar ambiente inicializa a coleção de assemblagens que estão disponíveis para referência pelo fornecedor de compilação. O código de origem gerado por um fornecedor de compilação pode utilizar os tipos públicos as assemblagens referenciadas. A coleção de assemblagem referenciada é constituído por outros assemblagens incorporadas na aplicação ASP.NET e assemblagens listadas no elemento no ficheiro de configuração.       Se o fornecedor de compilação gera o código de origem que faça referência a assemblagens adicionais, o fornecedor de compilação adiciona as assemblagens adicionais utilizando o <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A>método.</xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> O ambiente de compilação do ASP.NET resolve tipos externos durante a compilação da assemblagem utilizando ambas as assemblagens referenciadas adicionadas por criem fornecedores e a coleção predefinida de assemblagens disponíveis para referência.       A coleção de ReferencedAssemblies não inclui as assemblagens que são adicionadas para referência por outros fornecedores de compilações através de <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A>método.</xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A>"
  syntax:
    content: protected System.Collections.ICollection ReferencedAssemblies { get; }
    return:
      type: System.Collections.ICollection
      description: "Uma coleção de só de leitura de assemblagens que podem ser referenciados pelo código de origem gerado pelo fornecedor de compilação."
  overload: System.Web.Compilation.BuildProvider.ReferencedAssemblies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.RegisterBuildProvider(System.String,System.Type)
  id: RegisterBuildProvider(System.String,System.Type)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: RegisterBuildProvider(String,Type)
  nameWithType: BuildProvider.RegisterBuildProvider(String,Type)
  fullName: System.Web.Compilation.BuildProvider.RegisterBuildProvider(String,Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Regista um fornecedor de compilação."
  remarks: "Pode utilizar este método para registar fornecedores de compilações em vez de defini-los no ficheiro Web. config. Para obter mais informações sobre fornecedores de compilação, consulte o <xref:System.Web.Compilation.BuildProvider>classe e [buildProviders elemento para a compilação (esquema de definições do ASP.NET)](http://msdn.microsoft.com/en-us/40fa889d-5412-487a-b6a9-21eb011c2384).</xref:System.Web.Compilation.BuildProvider>"
  syntax:
    content: public static void RegisterBuildProvider (string extension, Type providerType);
    parameters:
    - id: extension
      type: System.String
      description: "A extensão de nome de ficheiro que se o fornecedor de compilação."
    - id: providerType
      type: System.Type
      description: "A classe de fornecedor de compilação."
  overload: System.Web.Compilation.BuildProvider.RegisterBuildProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.VirtualPath
  id: VirtualPath
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: VirtualPath
  nameWithType: BuildProvider.VirtualPath
  fullName: System.Web.Compilation.BuildProvider.VirtualPath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Representa o ficheiro de ser criada por esta implementação do fornecedor de compilação."
  remarks: "O caminho virtual de um <xref:System.Web.Compilation.BuildProvider>objeto é o caminho para o ficheiro que está a ser compilado pelo fornecedor de compilação.</xref:System.Web.Compilation.BuildProvider> Por exemplo, se tiver configurado um personalizado <xref:System.Web.Compilation.BuildProvider>classe para compilar todos os ficheiros do Web site com a extensão de *.abc personalizado, se o Web site com o nome WebSite1 e o Web site contém um ficheiro denominado Example.abc, a propriedade VirtualPath contém o valor `/WebSite1/Example.abc`.</xref:System.Web.Compilation.BuildProvider>       A extensão de ficheiro de cada ficheiro na aplicação determina o tipo de ficheiro e o fornecedor de compilação correspondente para o tipo de ficheiro. O ASP.NET criar ambiente inicializa um <xref:System.Web.Compilation.BuildProvider>objeto para cada ficheiro com base no tipo de ficheiro e utiliza o <xref:System.Web.Compilation.BuildProvider>métodos para gerar a origem para cada ficheiro.</xref:System.Web.Compilation.BuildProvider> </xref:System.Web.Compilation.BuildProvider>       Para obter mais informações sobre como configurar um fornecedor de compilação, consulte [buildProviders elemento para a compilação (esquema de definições do ASP.NET)](http://msdn.microsoft.com/en-us/40fa889d-5412-487a-b6a9-21eb011c2384)."
  syntax:
    content: protected string VirtualPath { get; }
    return:
      type: System.String
      description: "Uma cadeia de só de leitura que especifica o caminho virtual de um ficheiro a serem compilados por este fornecedor de compilação."
  overload: System.Web.Compilation.BuildProvider.VirtualPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.VirtualPathDependencies
  id: VirtualPathDependencies
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: VirtualPathDependencies
  nameWithType: BuildProvider.VirtualPathDependencies
  fullName: System.Web.Compilation.BuildProvider.VirtualPathDependencies
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Representa uma coleção de caminhos virtuais que tem de ser criada antes do fornecedor de compilação gera o código."
  remarks: "A propriedade VirtualPathDependencies é uma coleção de virtuais caminhos que devem ser compiladas antes do <xref:System.Web.Compilation.BuildProvider>instância gera o código de origem.</xref:System.Web.Compilation.BuildProvider> As assemblagens de caminhos de virtuais no VirtualPathDependencies são adicionadas como referência para a compilação para o <xref:System.Web.Compilation.BuildProvider>instância.</xref:System.Web.Compilation.BuildProvider>"
  syntax:
    content: public virtual System.Collections.ICollection VirtualPathDependencies { get; }
    return:
      type: System.Collections.ICollection
      description: "Uma coleção de só de leitura de cadeias, que representa os caminhos virtuais que esta instância do fornecedor de compilação está dependente."
  overload: System.Web.Compilation.BuildProvider.VirtualPathDependencies*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.Compilation.BuildProvider.#ctor
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: BuildProvider()
  nameWithType: BuildProvider.BuildProvider()
  fullName: System.Web.Compilation.BuildProvider.BuildProvider()
- uid: System.Web.Compilation.BuildProvider.CodeCompilerType
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: CodeCompilerType
  nameWithType: BuildProvider.CodeCompilerType
  fullName: System.Web.Compilation.BuildProvider.CodeCompilerType
- uid: System.Web.Compilation.CompilerType
  parent: System.Web.Compilation
  isExternal: false
  name: CompilerType
  nameWithType: CompilerType
  fullName: System.Web.Compilation.CompilerType
- uid: System.Web.Compilation.BuildProvider.GenerateCode(System.Web.Compilation.AssemblyBuilder)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GenerateCode(AssemblyBuilder)
  nameWithType: BuildProvider.GenerateCode(AssemblyBuilder)
  fullName: System.Web.Compilation.BuildProvider.GenerateCode(AssemblyBuilder)
- uid: System.Web.Compilation.AssemblyBuilder
  parent: System.Web.Compilation
  isExternal: false
  name: AssemblyBuilder
  nameWithType: AssemblyBuilder
  fullName: System.Web.Compilation.AssemblyBuilder
- uid: System.Web.Compilation.BuildProvider.GetCodeCompileUnit(System.Collections.IDictionary@)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetCodeCompileUnit(IDictionary)
  nameWithType: BuildProvider.GetCodeCompileUnit(IDictionary)
  fullName: System.Web.Compilation.BuildProvider.GetCodeCompileUnit(IDictionary)
- uid: System.CodeDom.CodeCompileUnit
  parent: System.CodeDom
  isExternal: false
  name: CodeCompileUnit
  nameWithType: CodeCompileUnit
  fullName: System.CodeDom.CodeCompileUnit
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetCustomString(CompilerResults)
  nameWithType: BuildProvider.GetCustomString(CompilerResults)
  fullName: System.Web.Compilation.BuildProvider.GetCustomString(CompilerResults)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.CodeDom.Compiler.CompilerResults
  parent: System.CodeDom.Compiler
  isExternal: false
  name: CompilerResults
  nameWithType: CompilerResults
  fullName: System.CodeDom.Compiler.CompilerResults
- uid: System.Web.Compilation.BuildProvider.GetDefaultCompilerType
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetDefaultCompilerType()
  nameWithType: BuildProvider.GetDefaultCompilerType()
  fullName: System.Web.Compilation.BuildProvider.GetDefaultCompilerType()
- uid: System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetDefaultCompilerTypeForLanguage(String)
  nameWithType: BuildProvider.GetDefaultCompilerTypeForLanguage(String)
  fullName: System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(String)
- uid: System.Web.Compilation.BuildProvider.GetGeneratedType(System.CodeDom.Compiler.CompilerResults)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetGeneratedType(CompilerResults)
  nameWithType: BuildProvider.GetGeneratedType(CompilerResults)
  fullName: System.Web.Compilation.BuildProvider.GetGeneratedType(CompilerResults)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Compilation.BuildProvider.GetResultFlags(System.CodeDom.Compiler.CompilerResults)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetResultFlags(CompilerResults)
  nameWithType: BuildProvider.GetResultFlags(CompilerResults)
  fullName: System.Web.Compilation.BuildProvider.GetResultFlags(CompilerResults)
- uid: System.Web.Compilation.BuildProviderResultFlags
  parent: System.Web.Compilation
  isExternal: false
  name: BuildProviderResultFlags
  nameWithType: BuildProviderResultFlags
  fullName: System.Web.Compilation.BuildProviderResultFlags
- uid: System.Web.Compilation.BuildProvider.OpenReader
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: OpenReader()
  nameWithType: BuildProvider.OpenReader()
  fullName: System.Web.Compilation.BuildProvider.OpenReader()
- uid: System.IO.TextReader
  parent: System.IO
  isExternal: true
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: System.Web.Compilation.BuildProvider.OpenReader(System.String)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: OpenReader(String)
  nameWithType: BuildProvider.OpenReader(String)
  fullName: System.Web.Compilation.BuildProvider.OpenReader(String)
- uid: System.Web.Compilation.BuildProvider.OpenStream
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: OpenStream()
  nameWithType: BuildProvider.OpenStream()
  fullName: System.Web.Compilation.BuildProvider.OpenStream()
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Web.Compilation.BuildProvider.OpenStream(System.String)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: OpenStream(String)
  nameWithType: BuildProvider.OpenStream(String)
  fullName: System.Web.Compilation.BuildProvider.OpenStream(String)
- uid: System.Web.Compilation.BuildProvider.ProcessCompileErrors(System.CodeDom.Compiler.CompilerResults)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: ProcessCompileErrors(CompilerResults)
  nameWithType: BuildProvider.ProcessCompileErrors(CompilerResults)
  fullName: System.Web.Compilation.BuildProvider.ProcessCompileErrors(CompilerResults)
- uid: System.Web.Compilation.BuildProvider.ReferencedAssemblies
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: ReferencedAssemblies
  nameWithType: BuildProvider.ReferencedAssemblies
  fullName: System.Web.Compilation.BuildProvider.ReferencedAssemblies
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Web.Compilation.BuildProvider.RegisterBuildProvider(System.String,System.Type)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: RegisterBuildProvider(String,Type)
  nameWithType: BuildProvider.RegisterBuildProvider(String,Type)
  fullName: System.Web.Compilation.BuildProvider.RegisterBuildProvider(String,Type)
- uid: System.Web.Compilation.BuildProvider.VirtualPath
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: VirtualPath
  nameWithType: BuildProvider.VirtualPath
  fullName: System.Web.Compilation.BuildProvider.VirtualPath
- uid: System.Web.Compilation.BuildProvider.VirtualPathDependencies
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: VirtualPathDependencies
  nameWithType: BuildProvider.VirtualPathDependencies
  fullName: System.Web.Compilation.BuildProvider.VirtualPathDependencies
- uid: System.Web.Compilation.BuildProvider.#ctor*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: BuildProvider
  nameWithType: BuildProvider.BuildProvider
- uid: System.Web.Compilation.BuildProvider.CodeCompilerType*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: CodeCompilerType
  nameWithType: BuildProvider.CodeCompilerType
- uid: System.Web.Compilation.BuildProvider.GenerateCode*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GenerateCode
  nameWithType: BuildProvider.GenerateCode
- uid: System.Web.Compilation.BuildProvider.GetCodeCompileUnit*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetCodeCompileUnit
  nameWithType: BuildProvider.GetCodeCompileUnit
- uid: System.Web.Compilation.BuildProvider.GetCustomString*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetCustomString
  nameWithType: BuildProvider.GetCustomString
- uid: System.Web.Compilation.BuildProvider.GetDefaultCompilerType*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetDefaultCompilerType
  nameWithType: BuildProvider.GetDefaultCompilerType
- uid: System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetDefaultCompilerTypeForLanguage
  nameWithType: BuildProvider.GetDefaultCompilerTypeForLanguage
- uid: System.Web.Compilation.BuildProvider.GetGeneratedType*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetGeneratedType
  nameWithType: BuildProvider.GetGeneratedType
- uid: System.Web.Compilation.BuildProvider.GetResultFlags*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetResultFlags
  nameWithType: BuildProvider.GetResultFlags
- uid: System.Web.Compilation.BuildProvider.OpenReader*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: OpenReader
  nameWithType: BuildProvider.OpenReader
- uid: System.Web.Compilation.BuildProvider.OpenStream*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: OpenStream
  nameWithType: BuildProvider.OpenStream
- uid: System.Web.Compilation.BuildProvider.ProcessCompileErrors*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: ProcessCompileErrors
  nameWithType: BuildProvider.ProcessCompileErrors
- uid: System.Web.Compilation.BuildProvider.ReferencedAssemblies*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: ReferencedAssemblies
  nameWithType: BuildProvider.ReferencedAssemblies
- uid: System.Web.Compilation.BuildProvider.RegisterBuildProvider*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: RegisterBuildProvider
  nameWithType: BuildProvider.RegisterBuildProvider
- uid: System.Web.Compilation.BuildProvider.VirtualPath*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: VirtualPath
  nameWithType: BuildProvider.VirtualPath
- uid: System.Web.Compilation.BuildProvider.VirtualPathDependencies*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: VirtualPathDependencies
  nameWithType: BuildProvider.VirtualPathDependencies
