### YamlMime:ManagedReference
items:
- uid: System.Web.Profile.ProfileProvider
  id: ProfileProvider
  children:
  - System.Web.Profile.ProfileProvider.#ctor
  - System.Web.Profile.ProfileProvider.DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  - System.Web.Profile.ProfileProvider.DeleteProfiles(System.String[])
  - System.Web.Profile.ProfileProvider.DeleteProfiles(System.Web.Profile.ProfileInfoCollection)
  - System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)
  - System.Web.Profile.ProfileProvider.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)
  - System.Web.Profile.ProfileProvider.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)
  - System.Web.Profile.ProfileProvider.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)
  - System.Web.Profile.ProfileProvider.GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  langs:
  - csharp
  name: ProfileProvider
  nameWithType: ProfileProvider
  fullName: System.Web.Profile.ProfileProvider
  type: Class
  summary: "Defines the contract that ASP.NET implements to provide profile services using custom profile providers."
  remarks: "ASP.NET profiles offer persistent storage and retrieval of user-specific properties. Profile property values and information are stored in a data source in a manner determined by the ProfileProvider implementation. You can use the profile providers that are included with the .NET Framework (represented by the classes that derive from the ProfileProvider abstract class), or you can implement your own provider by creating a new class that derives from ProfileProvider.       There are two primary reasons for creating a custom profile provider.      -   You need to store profile information in a data source that is not supported by the profile providers included with the .NET Framework, such as a FoxPro database, an Oracle database, or other data stores.      -   You need to manage profile information using a database schema that is different from the database schema used by the providers that ship with the .NET Framework. A common example of this would be user data that already exists in a SQL Server database for a company network or a Web site.       The ProfileProvider abstract class inherits from the <xref:System.Configuration.SettingsProvider> abstract class, which inherits from the <xref:System.Configuration.Provider.ProviderBase> abstract class. Classes that implement ProfileProvider must also implement the required members of the <xref:System.Configuration.SettingsProvider> and <xref:System.Configuration.Provider.ProviderBase> abstract classes. For more information about implementing a profile provider, see [Implementing a Profile Provider](~/add/includes/ajax-current-ext-md.md)."
  example:
  - 'For an example of a ProfileProvider implementation, see [How to: Build and Run the Profile Provider Example](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: 'public abstract class ProfileProvider : System.Configuration.SettingsProvider'
  inheritance:
  - System.Object
  - System.Configuration.Provider.ProviderBase
  - System.Configuration.SettingsProvider
  implements: []
  inheritedMembers:
  - System.Configuration.Provider.ProviderBase.Description
  - System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Configuration.Provider.ProviderBase.Name
  - System.Configuration.SettingsProvider.ApplicationName
  - System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  - System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)
  platform:
  - net462
- uid: System.Web.Profile.ProfileProvider.#ctor
  id: '#ctor'
  parent: System.Web.Profile.ProfileProvider
  langs:
  - csharp
  name: ProfileProvider()
  nameWithType: ProfileProvider.ProfileProvider()
  fullName: System.Web.Profile.ProfileProvider.ProfileProvider()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.Profile.ProfileProvider&quot;></xref> class."
  remarks: "You are not required to implement a constructor for a class that inherits the <xref:System.Web.Profile.ProfileProvider> abstract class. Initialization values for a <xref:System.Web.Profile.ProfileProvider> implementation are passed to the <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> method implementation."
  syntax:
    content: protected ProfileProvider ();
    parameters: []
  overload: System.Web.Profile.ProfileProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileProvider.DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  id: DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  parent: System.Web.Profile.ProfileProvider
  langs:
  - csharp
  name: DeleteInactiveProfiles(ProfileAuthenticationOption,DateTime)
  nameWithType: ProfileProvider.DeleteInactiveProfiles(ProfileAuthenticationOption,DateTime)
  fullName: System.Web.Profile.ProfileProvider.DeleteInactiveProfiles(ProfileAuthenticationOption,DateTime)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "When overridden in a derived class, deletes all user-profile data for profiles in which the last activity date occurred before the specified date."
  remarks: "The DeleteInactiveProfiles method is used to remove unused profile data from the data source. Only data for the `applicationName` specified in the configuration file is removed. The `authenticationOption` parameter specifies whether only anonymous profiles, only authenticated profiles, or all profiles are searched. Profiles in which the <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> occurs on or before the specified `userInactiveSinceDate` parameter value are deleted."
  example:
  - "The following code example shows the method signature for an implementation of the DeleteInactiveProfiles method. For an example of a full <xref:System.Web.Profile.ProfileProvider> implementation, see [How to: Build and Run the Profile Provider Example](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileProvider#3](~/add/codesnippet/csharp/1c3af888-11e7-4847-bfa6-_1.cs)]\n [!code-vb[System.Web.Profile.ProfileProvider#3](~/add/codesnippet/visualbasic/1c3af888-11e7-4847-bfa6-_1.vb)]"
  syntax:
    content: public abstract int DeleteInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "One of the <xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;></xref> values, specifying whether anonymous, authenticated, or both types of profiles are deleted."
    - id: userInactiveSinceDate
      type: System.DateTime
      description: "A <xref:System.DateTime> that identifies which user profiles are considered inactive. If the <xref:System.Web.Profile.ProfileInfo.LastActivityDate*> value of a user profile occurs on or before this date and time, the profile is considered inactive."
    return:
      type: System.Int32
      description: "The number of profiles deleted from the data source."
  overload: System.Web.Profile.ProfileProvider.DeleteInactiveProfiles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileProvider.DeleteProfiles(System.String[])
  id: DeleteProfiles(System.String[])
  parent: System.Web.Profile.ProfileProvider
  langs:
  - csharp
  name: DeleteProfiles(String[])
  nameWithType: ProfileProvider.DeleteProfiles(String[])
  fullName: System.Web.Profile.ProfileProvider.DeleteProfiles(String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "When overridden in a derived class, deletes profile properties and information for profiles that match the supplied list of user names."
  remarks: "The DeleteProfiles method deletes the profiles specified in the `usernames` parameter. Only data for the `applicationName` specified in the configuration file is removed."
  example:
  - "The following code example shows the method signature for an implementation of the DeleteProfiles method. For an example of a full <xref:System.Web.Profile.ProfileProvider> implementation, see [How to: Build and Run the Profile Provider Example](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileProvider#2](~/add/codesnippet/csharp/m-system.web.profile.pro_8_1.cs)]\n [!code-vb[System.Web.Profile.ProfileProvider#2](~/add/codesnippet/visualbasic/m-system.web.profile.pro_8_1.vb)]"
  syntax:
    content: public abstract int DeleteProfiles (string[] usernames);
    parameters:
    - id: usernames
      type: System.String[]
      description: "A string array of user names for profiles to be deleted."
    return:
      type: System.Int32
      description: "The number of profiles deleted from the data source."
  overload: System.Web.Profile.ProfileProvider.DeleteProfiles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileProvider.DeleteProfiles(System.Web.Profile.ProfileInfoCollection)
  id: DeleteProfiles(System.Web.Profile.ProfileInfoCollection)
  parent: System.Web.Profile.ProfileProvider
  langs:
  - csharp
  name: DeleteProfiles(ProfileInfoCollection)
  nameWithType: ProfileProvider.DeleteProfiles(ProfileInfoCollection)
  fullName: System.Web.Profile.ProfileProvider.DeleteProfiles(ProfileInfoCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "When overridden in a derived class, deletes profile properties and information for the supplied list of profiles."
  remarks: "The DeleteProfiles method deletes the profiles specified in the `profiles` parameter. Only data for the `applicationName` specified in the configuration file is removed.       When implementing this method in a derived class, you can use the `applicationName` value and the <xref:System.Web.Profile.ProfileInfo.UserName%2A> property of each <xref:System.Web.Profile.ProfileInfo> object in the supplied <xref:System.Web.Profile.ProfileInfoCollection> to determine which profiles to delete from your data source."
  example:
  - "The following code example shows the method signature for an implementation of the DeleteProfiles method. For an example of a full <xref:System.Web.Profile.ProfileProvider> implementation, see [How to: Build and Run the Profile Provider Example](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileProvider#1](~/add/codesnippet/csharp/cd4d1f10-17b2-4f4d-9178-_1.cs)]\n [!code-vb[System.Web.Profile.ProfileProvider#1](~/add/codesnippet/visualbasic/cd4d1f10-17b2-4f4d-9178-_1.vb)]"
  syntax:
    content: public abstract int DeleteProfiles (System.Web.Profile.ProfileInfoCollection profiles);
    parameters:
    - id: profiles
      type: System.Web.Profile.ProfileInfoCollection
      description: "A <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;></xref> of information about profiles that are to be deleted."
    return:
      type: System.Int32
      description: "The number of profiles deleted from the data source."
  overload: System.Web.Profile.ProfileProvider.DeleteProfiles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)
  id: FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.ProfileProvider
  langs:
  - csharp
  name: FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime,Int32,Int32,Int32)
  nameWithType: ProfileProvider.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime,Int32,Int32,Int32)
  fullName: System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "When overridden in a derived class, retrieves profile information for profiles in which the last activity date occurred on or before the specified date and the user name matches the specified user name."
  remarks: "The FindInactiveProfilesByUserName method is used to retrieve profile information for unused user profiles for profiles in which the user name matches the supplied `usernameToMatch` parameter. Only data for the `applicationName` specified in the configuration file is returned. The `authenticationOption` parameter specifies whether only anonymous profiles, only authenticated profiles, or all profiles are searched. Of the searched profiles, any profile with a <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> that occurs on or before the specified `userInactiveSinceDate` parameter value is returned.       If your data source supports additional search capabilities, such as wildcard characters, you can provide more extensive search capabilities for user names.       The results returned by FindInactiveProfilesByUserName are constrained by the `pageIndex` and `pageSize` parameters. The `pageSize` parameter identifies the maximum number of <xref:System.Web.Profile.ProfileInfo> objects to return in the <xref:System.Web.Profile.ProfileInfoCollection>. The `pageIndex` parameter identifies which page of results to return, where zero identifies the first page. The `totalRecords` parameter is an `out` parameter that is set to the total number of inactive user profiles for the configured `applicationName`, based on the `authenticationOption` and `userInactiveSinceDate` parameters. For example, if there are 13 users for the configured `applicationName`, and the `pageIndex` value is 1 with a `pageSize` of 5, the <xref:System.Web.Profile.ProfileInfoCollection> returned would contain the sixth through the tenth inactive profiles returned. The `totalRecords` parameter would be set to 13."
  example:
  - "The following code example shows the method signature for an implementation of the FindInactiveProfilesByUserName method. For an example of a full <xref:System.Web.Profile.ProfileProvider> implementation, see [How to: Build and Run the Profile Provider Example](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileProvider#5](~/add/codesnippet/csharp/7a23722a-a879-4601-b3f2-_1.cs)]\n [!code-vb[System.Web.Profile.ProfileProvider#5](~/add/codesnippet/visualbasic/7a23722a-a879-4601-b3f2-_1.vb)]"
  syntax:
    content: public abstract System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, DateTime userInactiveSinceDate, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "One of the <xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;></xref> values, specifying whether anonymous, authenticated, or both types of profiles are returned."
    - id: usernameToMatch
      type: System.String
      description: "The user name to search for."
    - id: userInactiveSinceDate
      type: System.DateTime
      description: "A <xref:System.DateTime> that identifies which user profiles are considered inactive. If the <xref:System.Web.Profile.ProfileInfo.LastActivityDate*> value of a user profile occurs on or before this date and time, the profile is considered inactive."
    - id: pageIndex
      type: System.Int32
      description: "The index of the page of results to return."
    - id: pageSize
      type: System.Int32
      description: "The size of the page of results to return."
    - id: totalRecords
      type: System.Int32
      description: "When this method returns, contains the total number of profiles."
    return:
      type: System.Web.Profile.ProfileInfoCollection
      description: "A <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;></xref> containing user profile information for inactive profiles where the user name matches the supplied <code>usernameToMatch</code> parameter."
  overload: System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileProvider.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)
  id: FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.ProfileProvider
  langs:
  - csharp
  name: FindProfilesByUserName(ProfileAuthenticationOption,String,Int32,Int32,Int32)
  nameWithType: ProfileProvider.FindProfilesByUserName(ProfileAuthenticationOption,String,Int32,Int32,Int32)
  fullName: System.Web.Profile.ProfileProvider.FindProfilesByUserName(ProfileAuthenticationOption,String,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "When overridden in a derived class, retrieves profile information for profiles in which the user name matches the specified user names."
  remarks: "The FindProfilesByUserName method returns a list of profile information for profiles in which the user name matches the supplied `usernameToMatch` parameter. Only data for the `applicationName` specified in the configuration file is returned. The `authenticationOption` parameter specifies whether only anonymous profiles, only authenticated profiles, or all profiles are searched.       If your data source supports additional search capabilities, such as wildcard characters, you can provide more extensive search capabilities for user names.       The results returned by FindProfilesByUserName are constrained by the `pageIndex` and `pageSize` parameters. The `pageSize` parameter identifies the maximum number of <xref:System.Web.Profile.ProfileInfo> objects to return in the <xref:System.Web.Profile.ProfileInfoCollection>. The `pageIndex` parameter identifies which page of results to return, where zero identifies the first page. The `totalRecords` parameter is an `out` parameter that is set to the total number of inactive user profiles for the configured `applicationName`, based on the `authenticationOption` and `userInactiveSinceDate` parameters. For example, if there are 13 users for the configured `applicationName`, and the `pageIndex` value is 1 with a `pageSize` of 5, the <xref:System.Web.Profile.ProfileInfoCollection> returned would contain the sixth through the tenth inactive profiles returned. The `totalRecords` parameter would be set to 13."
  example:
  - "The following code example shows the method signature for an implementation of the FindProfilesByUserName method. For an example of a full <xref:System.Web.Profile.ProfileProvider> implementation, see [How to: Build and Run the Profile Provider Example](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileProvider#4](~/add/codesnippet/csharp/6acb9ea2-5b78-459f-ae49-_1.cs)]\n [!code-vb[System.Web.Profile.ProfileProvider#4](~/add/codesnippet/visualbasic/6acb9ea2-5b78-459f-ae49-_1.vb)]"
  syntax:
    content: public abstract System.Web.Profile.ProfileInfoCollection FindProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "One of the <xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;></xref> values, specifying whether anonymous, authenticated, or both types of profiles are returned."
    - id: usernameToMatch
      type: System.String
      description: "The user name to search for."
    - id: pageIndex
      type: System.Int32
      description: "The index of the page of results to return."
    - id: pageSize
      type: System.Int32
      description: "The size of the page of results to return."
    - id: totalRecords
      type: System.Int32
      description: "When this method returns, contains the total number of profiles."
    return:
      type: System.Web.Profile.ProfileInfoCollection
      description: "A <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;></xref> containing user-profile information for profiles where the user name matches the supplied <code>usernameToMatch</code> parameter."
  overload: System.Web.Profile.ProfileProvider.FindProfilesByUserName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileProvider.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)
  id: GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.ProfileProvider
  langs:
  - csharp
  name: GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime,Int32,Int32,Int32)
  nameWithType: ProfileProvider.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime,Int32,Int32,Int32)
  fullName: System.Web.Profile.ProfileProvider.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "When overridden in a derived class, retrieves user-profile data from the data source for profiles in which the last activity date occurred on or before the specified date."
  remarks: "The GetAllInactiveProfiles method is used to retrieve profile information for unused user profiles. Only data for the `applicationName` specified in the configuration file is returned. The `authenticationOption` parameter specifies whether only anonymous profiles, only authenticated profiles, or all profiles are searched. Of the searched profiles, any profile with a <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> that occurs on or before the specified `userInactiveSinceDate` parameter value is returned.       The results returned by GetAllInactiveProfiles are constrained by the `pageIndex` and `pageSize` parameters. The `pageSize` parameter identifies the maximum number of <xref:System.Web.Profile.ProfileInfo> objects to return in the <xref:System.Web.Profile.ProfileInfoCollection>. The `pageIndex` parameter identifies which page of results to return, where zero identifies the first page. The `totalRecords` parameter is an `out` parameter that is set to the total number of inactive user profiles for the configured `applicationName`, based on the `authenticationOption` and `userInactiveSinceDate` parameters. For example, if there are 13 users for the configured `applicationName`, and the `pageIndex` value is 1 with a `pageSize` of 5, the <xref:System.Web.Profile.ProfileInfoCollection> returned would contain the sixth through the tenth inactive profiles returned. The `totalRecords` parameter would be set to 13."
  example:
  - "The following code example shows the method signature for an implementation of the GetAllInactiveProfiles method. For an example of a full <xref:System.Web.Profile.ProfileProvider> implementation, see [How to: Build and Run the Profile Provider Example](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileProvider#7](~/add/codesnippet/csharp/033442f6-344b-4337-bfe7-_1.cs)]\n [!code-vb[System.Web.Profile.ProfileProvider#7](~/add/codesnippet/visualbasic/033442f6-344b-4337-bfe7-_1.vb)]"
  syntax:
    content: public abstract System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "One of the <xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;></xref> values, specifying whether anonymous, authenticated, or both types of profiles are returned."
    - id: userInactiveSinceDate
      type: System.DateTime
      description: "A <xref:System.DateTime> that identifies which user profiles are considered inactive. If the <xref:System.Web.Profile.ProfileInfo.LastActivityDate*> of a user profile occurs on or before this date and time, the profile is considered inactive."
    - id: pageIndex
      type: System.Int32
      description: "The index of the page of results to return."
    - id: pageSize
      type: System.Int32
      description: "The size of the page of results to return."
    - id: totalRecords
      type: System.Int32
      description: "When this method returns, contains the total number of profiles."
    return:
      type: System.Web.Profile.ProfileInfoCollection
      description: "A <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;></xref> containing user-profile information about the inactive profiles."
  overload: System.Web.Profile.ProfileProvider.GetAllInactiveProfiles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileProvider.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)
  id: GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.ProfileProvider
  langs:
  - csharp
  name: GetAllProfiles(ProfileAuthenticationOption,Int32,Int32,Int32)
  nameWithType: ProfileProvider.GetAllProfiles(ProfileAuthenticationOption,Int32,Int32,Int32)
  fullName: System.Web.Profile.ProfileProvider.GetAllProfiles(ProfileAuthenticationOption,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "When overridden in a derived class, retrieves user profile data for all profiles in the data source."
  remarks: "The GetAllProfiles method is used to retrieve profile information for all profiles. Only data for the `applicationName` specified in the configuration file is returned. The `authenticationOption` parameter specifies whether only anonymous profiles, only authenticated profiles, or all profiles are searched.       The results returned by <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> are constrained by the `pageIndex` and `pageSize` parameters. The `pageSize` parameter identifies the maximum number of <xref:System.Web.Profile.ProfileInfo> objects to return in the <xref:System.Web.Profile.ProfileInfoCollection>. The `pageIndex` parameter identifies which page of results to return, where zero identifies the first page. The `totalRecords` parameter is an `out` parameter that is set to the total number of inactive user profiles for the configured `applicationName`, based on the `authenticationOption` and `userInactiveSinceDate` parameters. For example, if there are 13 users for the configured `applicationName`, and the `pageIndex` value is 1 with a `pageSize` of 5, the <xref:System.Web.Profile.ProfileInfoCollection> returned would contain the sixth through the tenth inactive profiles returned. The `totalRecords` parameter would be set to 13."
  example:
  - "The following code example shows the method signature for an implementation of the GetAllProfiles method. For an example of a full <xref:System.Web.Profile.ProfileProvider> implementation, see [How to: Build and Run the Profile Provider Example](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileProvider#6](~/add/codesnippet/csharp/cceeda8a-d072-4e5c-8631-_1.cs)]\n [!code-vb[System.Web.Profile.ProfileProvider#6](~/add/codesnippet/visualbasic/cceeda8a-d072-4e5c-8631-_1.vb)]"
  syntax:
    content: public abstract System.Web.Profile.ProfileInfoCollection GetAllProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "One of the <xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;></xref> values, specifying whether anonymous, authenticated, or both types of profiles are returned."
    - id: pageIndex
      type: System.Int32
      description: "The index of the page of results to return."
    - id: pageSize
      type: System.Int32
      description: "The size of the page of results to return."
    - id: totalRecords
      type: System.Int32
      description: "When this method returns, contains the total number of profiles."
    return:
      type: System.Web.Profile.ProfileInfoCollection
      description: "A <xref href=&quot;System.Web.Profile.ProfileInfoCollection&quot;></xref> containing user-profile information for all profiles in the data source."
  overload: System.Web.Profile.ProfileProvider.GetAllProfiles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileProvider.GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  id: GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  parent: System.Web.Profile.ProfileProvider
  langs:
  - csharp
  name: GetNumberOfInactiveProfiles(ProfileAuthenticationOption,DateTime)
  nameWithType: ProfileProvider.GetNumberOfInactiveProfiles(ProfileAuthenticationOption,DateTime)
  fullName: System.Web.Profile.ProfileProvider.GetNumberOfInactiveProfiles(ProfileAuthenticationOption,DateTime)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "When overridden in a derived class, returns the number of profiles in which the last activity date occurred on or before the specified date."
  remarks: "The GetNumberOfInactiveProfiles method is used to retrieve a count of all unused user profiles. Only data for the `applicationName` specified in the configuration file is returned. The `authenticationOption` parameter specifies whether only anonymous profiles, only authenticated profiles, or all profiles are searched. Of the searched profiles, any profile with a <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> that occurs on or before the specified `userInactiveSinceDate` parameter value is counted."
  example:
  - "The following code example shows the method signature for an implementation of the GetNumberOfInactiveProfiles method. For an example of a full <xref:System.Web.Profile.ProfileProvider> implementation, see [How to: Build and Run the Profile Provider Example](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Profile.ProfileProvider#8](~/add/codesnippet/csharp/14e4a551-3c3f-49df-b0a9-_1.cs)]\n [!code-vb[System.Web.Profile.ProfileProvider#8](~/add/codesnippet/visualbasic/14e4a551-3c3f-49df-b0a9-_1.vb)]"
  syntax:
    content: public abstract int GetNumberOfInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);
    parameters:
    - id: authenticationOption
      type: System.Web.Profile.ProfileAuthenticationOption
      description: "One of the <xref href=&quot;System.Web.Profile.ProfileAuthenticationOption&quot;></xref> values, specifying whether anonymous, authenticated, or both types of profiles are returned."
    - id: userInactiveSinceDate
      type: System.DateTime
      description: "A <xref:System.DateTime> that identifies which user profiles are considered inactive. If the <xref:System.Web.Profile.ProfileInfo.LastActivityDate*> of a user profile occurs on or before this date and time, the profile is considered inactive."
    return:
      type: System.Int32
      description: "The number of profiles in which the last activity date occurred on or before the specified date."
  overload: System.Web.Profile.ProfileProvider.GetNumberOfInactiveProfiles*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.SettingsProvider
  isExternal: false
  name: System.Configuration.SettingsProvider
- uid: System.Web.Profile.ProfileProvider.#ctor
  parent: System.Web.Profile.ProfileProvider
  isExternal: false
  name: ProfileProvider()
  nameWithType: ProfileProvider.ProfileProvider()
  fullName: System.Web.Profile.ProfileProvider.ProfileProvider()
- uid: System.Web.Profile.ProfileProvider.DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  parent: System.Web.Profile.ProfileProvider
  isExternal: false
  name: DeleteInactiveProfiles(ProfileAuthenticationOption,DateTime)
  nameWithType: ProfileProvider.DeleteInactiveProfiles(ProfileAuthenticationOption,DateTime)
  fullName: System.Web.Profile.ProfileProvider.DeleteInactiveProfiles(ProfileAuthenticationOption,DateTime)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Profile.ProfileAuthenticationOption
  parent: System.Web.Profile
  isExternal: false
  name: ProfileAuthenticationOption
  nameWithType: ProfileAuthenticationOption
  fullName: System.Web.Profile.ProfileAuthenticationOption
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Web.Profile.ProfileProvider.DeleteProfiles(System.String[])
  parent: System.Web.Profile.ProfileProvider
  isExternal: false
  name: DeleteProfiles(String[])
  nameWithType: ProfileProvider.DeleteProfiles(String[])
  fullName: System.Web.Profile.ProfileProvider.DeleteProfiles(String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Profile.ProfileProvider.DeleteProfiles(System.Web.Profile.ProfileInfoCollection)
  parent: System.Web.Profile.ProfileProvider
  isExternal: false
  name: DeleteProfiles(ProfileInfoCollection)
  nameWithType: ProfileProvider.DeleteProfiles(ProfileInfoCollection)
  fullName: System.Web.Profile.ProfileProvider.DeleteProfiles(ProfileInfoCollection)
- uid: System.Web.Profile.ProfileInfoCollection
  parent: System.Web.Profile
  isExternal: false
  name: ProfileInfoCollection
  nameWithType: ProfileInfoCollection
  fullName: System.Web.Profile.ProfileInfoCollection
- uid: System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.ProfileProvider
  isExternal: false
  name: FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime,Int32,Int32,Int32)
  nameWithType: ProfileProvider.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime,Int32,Int32,Int32)
  fullName: System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName(ProfileAuthenticationOption,String,DateTime,Int32,Int32,Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Profile.ProfileProvider.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.ProfileProvider
  isExternal: false
  name: FindProfilesByUserName(ProfileAuthenticationOption,String,Int32,Int32,Int32)
  nameWithType: ProfileProvider.FindProfilesByUserName(ProfileAuthenticationOption,String,Int32,Int32,Int32)
  fullName: System.Web.Profile.ProfileProvider.FindProfilesByUserName(ProfileAuthenticationOption,String,Int32,Int32,Int32)
- uid: System.Web.Profile.ProfileProvider.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.ProfileProvider
  isExternal: false
  name: GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime,Int32,Int32,Int32)
  nameWithType: ProfileProvider.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime,Int32,Int32,Int32)
  fullName: System.Web.Profile.ProfileProvider.GetAllInactiveProfiles(ProfileAuthenticationOption,DateTime,Int32,Int32,Int32)
- uid: System.Web.Profile.ProfileProvider.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Profile.ProfileProvider
  isExternal: false
  name: GetAllProfiles(ProfileAuthenticationOption,Int32,Int32,Int32)
  nameWithType: ProfileProvider.GetAllProfiles(ProfileAuthenticationOption,Int32,Int32,Int32)
  fullName: System.Web.Profile.ProfileProvider.GetAllProfiles(ProfileAuthenticationOption,Int32,Int32,Int32)
- uid: System.Web.Profile.ProfileProvider.GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)
  parent: System.Web.Profile.ProfileProvider
  isExternal: false
  name: GetNumberOfInactiveProfiles(ProfileAuthenticationOption,DateTime)
  nameWithType: ProfileProvider.GetNumberOfInactiveProfiles(ProfileAuthenticationOption,DateTime)
  fullName: System.Web.Profile.ProfileProvider.GetNumberOfInactiveProfiles(ProfileAuthenticationOption,DateTime)
- uid: System.Web.Profile.ProfileProvider.#ctor*
  parent: System.Web.Profile.ProfileProvider
  isExternal: false
  name: ProfileProvider
  nameWithType: ProfileProvider.ProfileProvider
- uid: System.Web.Profile.ProfileProvider.DeleteInactiveProfiles*
  parent: System.Web.Profile.ProfileProvider
  isExternal: false
  name: DeleteInactiveProfiles
  nameWithType: ProfileProvider.DeleteInactiveProfiles
- uid: System.Web.Profile.ProfileProvider.DeleteProfiles*
  parent: System.Web.Profile.ProfileProvider
  isExternal: false
  name: DeleteProfiles
  nameWithType: ProfileProvider.DeleteProfiles
- uid: System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName*
  parent: System.Web.Profile.ProfileProvider
  isExternal: false
  name: FindInactiveProfilesByUserName
  nameWithType: ProfileProvider.FindInactiveProfilesByUserName
- uid: System.Web.Profile.ProfileProvider.FindProfilesByUserName*
  parent: System.Web.Profile.ProfileProvider
  isExternal: false
  name: FindProfilesByUserName
  nameWithType: ProfileProvider.FindProfilesByUserName
- uid: System.Web.Profile.ProfileProvider.GetAllInactiveProfiles*
  parent: System.Web.Profile.ProfileProvider
  isExternal: false
  name: GetAllInactiveProfiles
  nameWithType: ProfileProvider.GetAllInactiveProfiles
- uid: System.Web.Profile.ProfileProvider.GetAllProfiles*
  parent: System.Web.Profile.ProfileProvider
  isExternal: false
  name: GetAllProfiles
  nameWithType: ProfileProvider.GetAllProfiles
- uid: System.Web.Profile.ProfileProvider.GetNumberOfInactiveProfiles*
  parent: System.Web.Profile.ProfileProvider
  isExternal: false
  name: GetNumberOfInactiveProfiles
  nameWithType: ProfileProvider.GetNumberOfInactiveProfiles
