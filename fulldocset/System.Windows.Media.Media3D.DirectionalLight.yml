### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Media3D.DirectionalLight
  id: DirectionalLight
  children:
  - System.Windows.Media.Media3D.DirectionalLight.#ctor
  - System.Windows.Media.Media3D.DirectionalLight.#ctor(System.Windows.Media.Color,System.Windows.Media.Media3D.Vector3D)
  - System.Windows.Media.Media3D.DirectionalLight.Clone
  - System.Windows.Media.Media3D.DirectionalLight.CloneCurrentValue
  - System.Windows.Media.Media3D.DirectionalLight.CreateInstanceCore
  - System.Windows.Media.Media3D.DirectionalLight.Direction
  - System.Windows.Media.Media3D.DirectionalLight.DirectionProperty
  langs:
  - csharp
  name: DirectionalLight
  nameWithType: DirectionalLight
  fullName: System.Windows.Media.Media3D.DirectionalLight
  type: Class
  summary: "Light object that projects its effect along a direction specified by a <xref href=&quot;System.Windows.Media.Media3D.Vector3D&quot;></xref>."
  remarks: "DirectionalLight objects have no position in space."
  syntax:
    content: 'public sealed class DirectionalLight : System.Windows.Media.Media3D.Light'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  - System.Windows.Media.Media3D.Model3D
  - System.Windows.Media.Media3D.Light
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Media.Media3D.Light.Color
  - System.Windows.Media.Media3D.Light.ColorProperty
  - System.Windows.Media.Media3D.Model3D.Bounds
  - System.Windows.Media.Media3D.Model3D.System#IFormattable#ToString(System.String,System.IFormatProvider)
  - System.Windows.Media.Media3D.Model3D.ToString
  - System.Windows.Media.Media3D.Model3D.ToString(System.IFormatProvider)
  - System.Windows.Media.Media3D.Model3D.Transform
  - System.Windows.Media.Media3D.Model3D.TransformProperty
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Media3D.DirectionalLight.#ctor
  id: '#ctor'
  parent: System.Windows.Media.Media3D.DirectionalLight
  langs:
  - csharp
  name: DirectionalLight()
  nameWithType: DirectionalLight.DirectionalLight()
  fullName: System.Windows.Media.Media3D.DirectionalLight.DirectionalLight()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Media3D
  summary: "Creates an instance of a light that projects its effect in a specified direction."
  remarks: "This contructor creates an instance of a white light projected along a Vector3D of value `(0,0,-1)`.       DirectionalLights have a direction, but no position in space."
  example:
  - "The following code excerpt creates a <xref:System.Windows.Media.Media3D.DirectionalLight>.  \n  \n [!code-xml[Basic3D#Basic3DXAML3DN2](~/add/codesnippet/xaml/Basic3D.BlankSample/Window1.xaml#basic3dxaml3dn2)]"
  syntax:
    content: public DirectionalLight ();
    parameters: []
  overload: System.Windows.Media.Media3D.DirectionalLight.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Media3D.DirectionalLight.#ctor(System.Windows.Media.Color,System.Windows.Media.Media3D.Vector3D)
  id: '#ctor(System.Windows.Media.Color,System.Windows.Media.Media3D.Vector3D)'
  parent: System.Windows.Media.Media3D.DirectionalLight
  langs:
  - csharp
  name: DirectionalLight(Color,Vector3D)
  nameWithType: DirectionalLight.DirectionalLight(Color,Vector3D)
  fullName: System.Windows.Media.Media3D.DirectionalLight.DirectionalLight(Color,Vector3D)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Media3D
  summary: "Creates an instance of a light that projects its effect along a specified Vector3D with a specified color."
  remarks: "DirectionalLights have a direction, but no position in space."
  example:
  - "The following code excerpt creates a <xref:System.Windows.Media.Media3D.DirectionalLight>.  \n  \n [!code-xml[Basic3D#Basic3DXAML3DN2](~/add/codesnippet/xaml/Basic3D.BlankSample/Window1.xaml#basic3dxaml3dn2)]"
  syntax:
    content: public DirectionalLight (System.Windows.Media.Color diffuseColor, System.Windows.Media.Media3D.Vector3D direction);
    parameters:
    - id: diffuseColor
      type: System.Windows.Media.Color
      description: "Diffuse color of the new light."
    - id: direction
      type: System.Windows.Media.Media3D.Vector3D
      description: "Direction of the new light."
  overload: System.Windows.Media.Media3D.DirectionalLight.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Media3D.DirectionalLight.Clone
  id: Clone
  parent: System.Windows.Media.Media3D.DirectionalLight
  langs:
  - csharp
  name: Clone()
  nameWithType: DirectionalLight.Clone()
  fullName: System.Windows.Media.Media3D.DirectionalLight.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Media3D
  summary: "Creates a modifiable clone of this <xref href=&quot;System.Windows.Media.Media3D.DirectionalLight&quot;></xref> object, making deep copies of this object&quot;s values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values."
  remarks: "This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.       For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>."
  syntax:
    content: public System.Windows.Media.Media3D.DirectionalLight Clone ();
    parameters: []
    return:
      type: System.Windows.Media.Media3D.DirectionalLight
      description: "A modifiable clone of the current object. The cloned object&quot;s <xref:System.Windows.Freezable.IsFrozen*> property will be <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> even if the source&quot;s <xref:System.Windows.Freezable.IsFrozen*> property was <xref uid=&quot;langword_csharp_true.&quot; name=&quot;true.&quot; href=&quot;&quot;></xref>"
  overload: System.Windows.Media.Media3D.DirectionalLight.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Media3D.DirectionalLight.CloneCurrentValue
  id: CloneCurrentValue
  parent: System.Windows.Media.Media3D.DirectionalLight
  langs:
  - csharp
  name: CloneCurrentValue()
  nameWithType: DirectionalLight.CloneCurrentValue()
  fullName: System.Windows.Media.Media3D.DirectionalLight.CloneCurrentValue()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Media3D
  summary: "Creates a modifiable clone of this <xref href=&quot;System.Windows.Media.Media3D.DirectionalLight&quot;></xref> object, making deep copies of this object&quot;s current values. Resource references, data bindings, and animations are not copied, but their current values are."
  remarks: "This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.       For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>."
  syntax:
    content: public System.Windows.Media.Media3D.DirectionalLight CloneCurrentValue ();
    parameters: []
    return:
      type: System.Windows.Media.Media3D.DirectionalLight
      description: "A modifiable clone of the current object. The cloned object&quot;s <xref:System.Windows.Freezable.IsFrozen*> property will be <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> even if the source&quot;s <xref:System.Windows.Freezable.IsFrozen*> property was <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Media.Media3D.DirectionalLight.CloneCurrentValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Media3D.DirectionalLight.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Media.Media3D.DirectionalLight
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: DirectionalLight.CreateInstanceCore()
  fullName: System.Windows.Media.Media3D.DirectionalLight.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Media3D
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "To be added."
  overload: System.Windows.Media.Media3D.DirectionalLight.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Media3D.DirectionalLight.Direction
  id: Direction
  parent: System.Windows.Media.Media3D.DirectionalLight
  langs:
  - csharp
  name: Direction
  nameWithType: DirectionalLight.Direction
  fullName: System.Windows.Media.Media3D.DirectionalLight.Direction
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Media3D
  summary: "Represents the vector along which the light&quot;s effect will be seen on models in a 3-D scene."
  remarks: "<a name=&quot;dependencyPropertyInfo_Direction&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Media.Media3D.DirectionalLight.DirectionProperty>|   |Metadata properties set to `true`|None|"
  syntax:
    content: public System.Windows.Media.Media3D.Vector3D Direction { get; set; }
    return:
      type: System.Windows.Media.Media3D.Vector3D
      description: "Vector3D along which the light projects, and which must have a non-zero magnitude. The default value is `(0,0,-1)`."
  overload: System.Windows.Media.Media3D.DirectionalLight.Direction*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Media3D.DirectionalLight.DirectionProperty
  id: DirectionProperty
  parent: System.Windows.Media.Media3D.DirectionalLight
  langs:
  - csharp
  name: DirectionProperty
  nameWithType: DirectionalLight.DirectionProperty
  fullName: System.Windows.Media.Media3D.DirectionalLight.DirectionProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Media3D
  summary: "Identifies the <xref:System.Windows.Media.Media3D.DirectionalLight.Direction*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty DirectionProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Media3D.Light
  isExternal: false
  name: System.Windows.Media.Media3D.Light
- uid: System.Windows.Media.Media3D.DirectionalLight.#ctor
  parent: System.Windows.Media.Media3D.DirectionalLight
  isExternal: false
  name: DirectionalLight()
  nameWithType: DirectionalLight.DirectionalLight()
  fullName: System.Windows.Media.Media3D.DirectionalLight.DirectionalLight()
- uid: System.Windows.Media.Media3D.DirectionalLight.#ctor(System.Windows.Media.Color,System.Windows.Media.Media3D.Vector3D)
  parent: System.Windows.Media.Media3D.DirectionalLight
  isExternal: false
  name: DirectionalLight(Color,Vector3D)
  nameWithType: DirectionalLight.DirectionalLight(Color,Vector3D)
  fullName: System.Windows.Media.Media3D.DirectionalLight.DirectionalLight(Color,Vector3D)
- uid: System.Windows.Media.Color
  parent: System.Windows.Media
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Windows.Media.Color
- uid: System.Windows.Media.Media3D.Vector3D
  parent: System.Windows.Media.Media3D
  isExternal: false
  name: Vector3D
  nameWithType: Vector3D
  fullName: System.Windows.Media.Media3D.Vector3D
- uid: System.Windows.Media.Media3D.DirectionalLight.Clone
  parent: System.Windows.Media.Media3D.DirectionalLight
  isExternal: false
  name: Clone()
  nameWithType: DirectionalLight.Clone()
  fullName: System.Windows.Media.Media3D.DirectionalLight.Clone()
- uid: System.Windows.Media.Media3D.DirectionalLight
  parent: System.Windows.Media.Media3D
  isExternal: false
  name: DirectionalLight
  nameWithType: DirectionalLight
  fullName: System.Windows.Media.Media3D.DirectionalLight
- uid: System.Windows.Media.Media3D.DirectionalLight.CloneCurrentValue
  parent: System.Windows.Media.Media3D.DirectionalLight
  isExternal: false
  name: CloneCurrentValue()
  nameWithType: DirectionalLight.CloneCurrentValue()
  fullName: System.Windows.Media.Media3D.DirectionalLight.CloneCurrentValue()
- uid: System.Windows.Media.Media3D.DirectionalLight.CreateInstanceCore
  parent: System.Windows.Media.Media3D.DirectionalLight
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: DirectionalLight.CreateInstanceCore()
  fullName: System.Windows.Media.Media3D.DirectionalLight.CreateInstanceCore()
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.Media3D.DirectionalLight.Direction
  parent: System.Windows.Media.Media3D.DirectionalLight
  isExternal: false
  name: Direction
  nameWithType: DirectionalLight.Direction
  fullName: System.Windows.Media.Media3D.DirectionalLight.Direction
- uid: System.Windows.Media.Media3D.DirectionalLight.DirectionProperty
  parent: System.Windows.Media.Media3D.DirectionalLight
  isExternal: false
  name: DirectionProperty
  nameWithType: DirectionalLight.DirectionProperty
  fullName: System.Windows.Media.Media3D.DirectionalLight.DirectionProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Media.Media3D.DirectionalLight.#ctor*
  parent: System.Windows.Media.Media3D.DirectionalLight
  isExternal: false
  name: DirectionalLight
  nameWithType: DirectionalLight.DirectionalLight
- uid: System.Windows.Media.Media3D.DirectionalLight.Clone*
  parent: System.Windows.Media.Media3D.DirectionalLight
  isExternal: false
  name: Clone
  nameWithType: DirectionalLight.Clone
- uid: System.Windows.Media.Media3D.DirectionalLight.CloneCurrentValue*
  parent: System.Windows.Media.Media3D.DirectionalLight
  isExternal: false
  name: CloneCurrentValue
  nameWithType: DirectionalLight.CloneCurrentValue
- uid: System.Windows.Media.Media3D.DirectionalLight.CreateInstanceCore*
  parent: System.Windows.Media.Media3D.DirectionalLight
  isExternal: false
  name: CreateInstanceCore
  nameWithType: DirectionalLight.CreateInstanceCore
- uid: System.Windows.Media.Media3D.DirectionalLight.Direction*
  parent: System.Windows.Media.Media3D.DirectionalLight
  isExternal: false
  name: Direction
  nameWithType: DirectionalLight.Direction
