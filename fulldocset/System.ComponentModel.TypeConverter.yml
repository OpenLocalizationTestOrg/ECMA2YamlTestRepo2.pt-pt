### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.TypeConverter
  id: TypeConverter
  children:
  - System.ComponentModel.TypeConverter.#ctor
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  langs:
  - csharp
  name: TypeConverter
  nameWithType: TypeConverter
  fullName: System.ComponentModel.TypeConverter
  type: Class
  summary: "Fornece uma forma de conversão de tipos de valores de outros tipos, bem como para aceder aos valores padrão e subproperties unificada."
  remarks: "O tipo de conversor mais comum é aquele que converte de e para uma representação de texto. O conversor de tipos para uma classe está vinculado à classe com <xref:System.ComponentModel.TypeConverterAttribute>.</xref:System.ComponentModel.TypeConverterAttribute> A menos que este atributo é substituído, todas as classes que herdam desta classe utilizam o mesmo conversor de tipos que a classe base.      > [!NOTE] > Para fins de sistema de tipo geral, não acedam a um conversor de tipos diretamente. Em vez disso, aceder o conversor adequado utilizando <xref:System.ComponentModel.TypeDescriptor>.</xref:System.ComponentModel.TypeDescriptor> Para obter mais informações, consulte os exemplos de código fornecidos.       **Tenha em atenção** para fins XAML, um processador XAML procura <xref:System.ComponentModel.TypeConverterAttribute>diretamente, em vez de percorrer <xref:System.ComponentModel.TypeDescriptor>.</xref:System.ComponentModel.TypeDescriptor> </xref:System.ComponentModel.TypeConverterAttribute> Nos casos em que pretende que um <xref:System.ComponentModel.TypeDescriptor>instância a partir do código, ou onde criar uma instância partilhada no WPF recursos, é aceitável para construi-lo diretamente sem referenciar <xref:System.ComponentModel.TypeDescriptor>ou outro sistema de reflexão e o tipo de suporte.</xref:System.ComponentModel.TypeDescriptor> </xref:System.ComponentModel.TypeDescriptor>       Classes derivadas de TypeConverter, muitas vezes, são referenciadas como parte de como um processador XAML converte um valor de texto do atributo ou inicialização a partir do markup (que é, inerentemente, uma cadeia) e gera um objeto para uma representação de tempo de execução. Os autores de tipo personalizado que pretendam para suportar um comportamento de conversão de tipo XAML, normalmente, implementam uma classe TypeConverter que suporta os seus próprios exclusivo `ConvertFrom` comportamento de uma cadeia. Este comportamento permite a conversão de tipo de cadeia fornecida como um valor de atributo XAML e fornece um processador XAML com o suporte necessário para criar um objeto de cadeia, para que o objeto pode ser produzido no gráfico de objeto analisados. Tipos personalizados ou membros dos tipos personalizados são indicados por aplicar <xref:System.ComponentModel.TypeConverterAttribute>as definições, com o atributo a referenciar a implementação personalizada de TypeConverter.</xref:System.ComponentModel.TypeConverterAttribute> Para obter mais informações, consulte [conversores de tipo de descrição geral de XAML](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example shows how to create an instance of a type converter and bind it to a class. The class implementing the converter, `MyClassConverter`, must inherit from the TypeConverter class.  \n  \n [!code-cpp[Classic TypeConverter Example#1](~/add/codesnippet/cpp/t-system.componentmodel._43_1.cpp)]\n [!code-cs[Classic TypeConverter Example#1](~/add/codesnippet/csharp/t-system.componentmodel._43_1.cs)]\n [!code-vb[Classic TypeConverter Example#1](~/add/codesnippet/visualbasic/t-system.componentmodel._43_1.vb)]  \n  \n When you have a property that has an enumeration, check to see whether an enumeration value is valid before setting the property. The next code example requires that an enumeration called `MyPropertyEnum` has been declared.  \n  \n [!code-cpp[Classic TypeConverter Example#2](~/add/codesnippet/cpp/t-system.componentmodel._43_2.cpp)]\n [!code-cs[Classic TypeConverter Example#2](~/add/codesnippet/csharp/t-system.componentmodel._43_2.cs)]\n [!code-vb[Classic TypeConverter Example#2](~/add/codesnippet/visualbasic/t-system.componentmodel._43_2.vb)]  \n  \n Another common type converter usage is to convert an object to a string. The following code example prints out the name of the <xref:System.Drawing.Color> stored in the variable `c`.  \n  \n [!code-cpp[Classic TypeConverter Example#3](~/add/codesnippet/cpp/t-system.componentmodel._43_3.cpp)]\n [!code-cs[Classic TypeConverter Example#3](~/add/codesnippet/csharp/t-system.componentmodel._43_3.cs)]\n [!code-vb[Classic TypeConverter Example#3](~/add/codesnippet/visualbasic/t-system.componentmodel._43_3.vb)]  \n  \n You can also use a type converter to convert a value from its name, as shown in the next code example.  \n  \n [!code-cpp[Classic TypeConverter Example#4](~/add/codesnippet/cpp/t-system.componentmodel._43_4.cpp)]\n [!code-cs[Classic TypeConverter Example#4](~/add/codesnippet/csharp/t-system.componentmodel._43_4.cs)]\n [!code-vb[Classic TypeConverter Example#4](~/add/codesnippet/visualbasic/t-system.componentmodel._43_4.vb)]  \n  \n In the following code example, you can use a type converter to print out the set of standard values that the object supports.  \n  \n [!code-cpp[Classic TypeConverter Example#5](~/add/codesnippet/cpp/t-system.componentmodel._43_5.cpp)]\n [!code-cs[Classic TypeConverter Example#5](~/add/codesnippet/csharp/t-system.componentmodel._43_5.cs)]\n [!code-vb[Classic TypeConverter Example#5](~/add/codesnippet/visualbasic/t-system.componentmodel._43_5.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class TypeConverter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.#ctor
  id: '#ctor'
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: TypeConverter()
  nameWithType: TypeConverter.TypeConverter()
  fullName: System.ComponentModel.TypeConverter.TypeConverter()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> classe."
  syntax:
    content: public TypeConverter ();
    parameters: []
  overload: System.ComponentModel.TypeConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  id: CanConvertFrom(System.Type)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: CanConvertFrom(Type)
  nameWithType: TypeConverter.CanConvertFrom(Type)
  fullName: System.ComponentModel.TypeConverter.CanConvertFrom(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Devolve se este conversor pode converter um objeto do tipo indicado para o tipo deste conversor."
  remarks: "Conforme implementado desta classe, este método devolve sempre `false`. Nunca devolve `true`."
  syntax:
    content: public bool CanConvertFrom (Type sourceType);
    parameters:
    - id: sourceType
      type: System.Type
      description: "A <xref:System.Type>que representa o tipo de que pretende converter de.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se este conversor pode efetuar a conversão; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.TypeConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: TypeConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.TypeConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Devolve se este conversor pode converter um objeto do tipo indicado para o tipo deste conversor, utilizando o contexto especificado."
  remarks: "Conforme implementado desta classe, este método devolve `false`, a menos que `sourceType` é <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>.</xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>"
  syntax:
    content: public virtual bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> que fornece um contexto de formato."
    - id: sourceType
      type: System.Type
      description: "A <xref:System.Type>que representa o tipo de que pretende converter de.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se este conversor pode efetuar a conversão; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.TypeConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  id: CanConvertTo(System.Type)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: CanConvertTo(Type)
  nameWithType: TypeConverter.CanConvertTo(Type)
  fullName: System.ComponentModel.TypeConverter.CanConvertTo(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Devolve se este conversor pode converter o objeto para o tipo especificado."
  remarks: "Se `destinationType` é uma cadeia, a implementação predefinida do <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A>sempre devolve `true`.</xref:System.ComponentModel.TypeConverter.CanConvertTo%2A>"
  syntax:
    content: public bool CanConvertTo (Type destinationType);
    parameters:
    - id: destinationType
      type: System.Type
      description: "A <xref:System.Type>que representa o tipo de que pretende converter.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se este conversor pode efetuar a conversão; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.TypeConverter.CanConvertTo*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: TypeConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.TypeConverter.CanConvertTo(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Devolve se este conversor pode converter o objeto para o tipo especificado, utilizando o contexto especificado."
  remarks: "Utilize o `context` parâmetro para extrair informações adicionais sobre o ambiente a partir do qual é invocado este conversor. Este parâmetro pode ser `null`, sempre a verificar. Além disso, podem devolver propriedades no objeto context `null`.       Se `destinationType` é uma cadeia, a implementação predefinida do <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A>sempre devolve `true`.</xref:System.ComponentModel.TypeConverter.CanConvertTo%2A>"
  syntax:
    content: public virtual bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> que fornece um contexto de formato."
    - id: destinationType
      type: System.Type
      description: "A <xref:System.Type>que representa o tipo de que pretende converter.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se este conversor pode efetuar a conversão; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.TypeConverter.CanConvertTo*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  id: ConvertFrom(System.Object)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertFrom(Object)
  nameWithType: TypeConverter.ConvertFrom(Object)
  fullName: System.ComponentModel.TypeConverter.ConvertFrom(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Converte o valor indicado para o tipo deste conversor."
  syntax:
    content: public object ConvertFrom (object value);
    parameters:
    - id: value
      type: System.Object
      description: "O <xref:System.Object>converter.</xref:System.Object>"
    return:
      type: System.Object
      description: "Um <xref:System.Object>que representa o valor convertido.</xref:System.Object>"
  overload: System.ComponentModel.TypeConverter.ConvertFrom*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não é possível efetuar a conversão."
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: TypeConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.ComponentModel.TypeConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Converte o objecto fornecido para o tipo deste conversor, utilizando as informações de contexto e cultura especificada."
  remarks: "Os autores de tipo personalizado que pretendam para suportar um comportamento de conversão de tipo XAML, normalmente, implementam um <xref:System.ComponentModel.TypeConverter>classe que suporta o comportamento de ConvertFrom de uma cadeia.</xref:System.ComponentModel.TypeConverter> Este comportamento permite a conversão de tipo de cadeia fornecida como um valor de atributo XAML e fornece um processador XAML com o suporte necessário para criar um objeto de cadeia, para que o objeto pode ser produzido no gráfico de objeto analisados. Tipos personalizados ou membros dos tipos personalizados são indicados por aplicar <xref:System.ComponentModel.TypeConverterAttribute>as definições, com o atributo referenciar personalizado <xref:System.ComponentModel.TypeConverter>implementação.</xref:System.ComponentModel.TypeConverter> </xref:System.ComponentModel.TypeConverterAttribute>       Para efeitos XAML, não normalmente fornecer implementações de ramificação com base no `culture`. Isto acontece porque XAML é pré-compilada num contexto de ambiente de desenvolvimento e informações de cultura específicas para o runtime XAML não é relevante para a conversão de tipo XAML. Para obter mais informações, consulte [conversores de tipo de descrição geral de XAML](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> que fornece um contexto de formato."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "O <xref:System.Globalization.CultureInfo>para utilizar como a cultura atual.</xref:System.Globalization.CultureInfo>"
    - id: value
      type: System.Object
      description: "O <xref:System.Object>converter.</xref:System.Object>"
    return:
      type: System.Object
      description: "Um <xref:System.Object>que representa o valor convertido.</xref:System.Object>"
  overload: System.ComponentModel.TypeConverter.ConvertFrom*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não é possível efetuar a conversão."
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  id: ConvertFromInvariantString(System.String)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertFromInvariantString(String)
  nameWithType: TypeConverter.ConvertFromInvariantString(String)
  fullName: System.ComponentModel.TypeConverter.ConvertFromInvariantString(String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Converte a cadeia especificada para o tipo deste conversor, utilizando a cultura invariável."
  remarks: "Devolve a implementação predefinida sempre `null`."
  syntax:
    content: public object ConvertFromInvariantString (string text);
    parameters:
    - id: text
      type: System.String
      description: "O <xref:System.String>converter.</xref:System.String>"
    return:
      type: System.Object
      description: "Um <xref:System.Object>que representa o texto convertido.</xref:System.Object>"
  overload: System.ComponentModel.TypeConverter.ConvertFromInvariantString*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não é possível efetuar a conversão."
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  id: ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertFromInvariantString(ITypeDescriptorContext,String)
  nameWithType: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext,String)
  fullName: System.ComponentModel.TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext,String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Converte a cadeia especificada para o tipo deste conversor, utilizando a cultura invariável e o contexto especificado."
  remarks: "Uma exceção é gerada se a cadeia não é possível converter o objecto apropriado. Devolve a implementação predefinida sempre `null`.       Utilize o `context` parâmetro para extrair informações adicionais sobre o ambiente a partir do qual é invocado este conversor. Este parâmetro pode ser `null`, sempre a verificar. Além disso, podem devolver propriedades no objeto context `null`."
  syntax:
    content: public object ConvertFromInvariantString (System.ComponentModel.ITypeDescriptorContext context, string text);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> que fornece um contexto de formato."
    - id: text
      type: System.String
      description: "O <xref:System.String>converter.</xref:System.String>"
    return:
      type: System.Object
      description: "Um <xref:System.Object>que representa o texto convertido.</xref:System.Object>"
  overload: System.ComponentModel.TypeConverter.ConvertFromInvariantString*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não é possível efetuar a conversão."
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  id: ConvertFromString(System.String)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertFromString(String)
  nameWithType: TypeConverter.ConvertFromString(String)
  fullName: System.ComponentModel.TypeConverter.ConvertFromString(String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Converte o texto especificado para um objeto."
  remarks: "Devolve a implementação predefinida sempre `null`."
  example:
  - For an example of this function, see the <xref:System.ComponentModel.TypeConverter> class.
  syntax:
    content: public object ConvertFromString (string text);
    parameters:
    - id: text
      type: System.String
      description: "A representação de texto do objecto a converter."
    return:
      type: System.Object
      description: "Um <xref:System.Object>que representa o texto convertido.</xref:System.Object>"
  overload: System.ComponentModel.TypeConverter.ConvertFromString*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A cadeia não é possível converter o objecto apropriado."
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  id: ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertFromString(ITypeDescriptorContext,String)
  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext,String)
  fullName: System.ComponentModel.TypeConverter.ConvertFromString(ITypeDescriptorContext,String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Converte o texto especificado para um objeto, utilizando o contexto especificado."
  remarks: "Uma exceção é gerada se a cadeia não é possível converter o objecto apropriado. Devolve a implementação predefinida sempre `null`.       Utilize o `context` parâmetro para extrair informações adicionais sobre o ambiente a partir do qual é invocado este conversor. Este parâmetro pode ser `null`, sempre a verificar. Além disso, podem devolver propriedades no objeto context `null`."
  syntax:
    content: public object ConvertFromString (System.ComponentModel.ITypeDescriptorContext context, string text);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> que fornece um contexto de formato."
    - id: text
      type: System.String
      description: "O <xref:System.String>converter.</xref:System.String>"
    return:
      type: System.Object
      description: "Um <xref:System.Object>que representa o texto convertido.</xref:System.Object>"
  overload: System.ComponentModel.TypeConverter.ConvertFromString*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não é possível efetuar a conversão."
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  id: ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertFromString(ITypeDescriptorContext,CultureInfo,String)
  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext,CultureInfo,String)
  fullName: System.ComponentModel.TypeConverter.ConvertFromString(ITypeDescriptorContext,CultureInfo,String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Converte o texto especificado para um objeto, utilizando as informações de contexto e cultura especificada."
  remarks: "Uma exceção é gerada se a cadeia não é possível converter o objecto apropriado. Devolve a implementação predefinida sempre `null`.       Utilize o `context` parâmetro para extrair informações adicionais sobre o ambiente a partir do qual é invocado este conversor. Este parâmetro pode ser `null`, sempre a verificar. Além disso, podem devolver propriedades no objeto context `null`."
  syntax:
    content: public object ConvertFromString (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, string text);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> que fornece um contexto de formato."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo> Se <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> é transmitida atual é assumida cultura."
    - id: text
      type: System.String
      description: "O <xref:System.String>converter.</xref:System.String>"
    return:
      type: System.Object
      description: "Um <xref:System.Object>que representa o texto convertido.</xref:System.Object>"
  overload: System.ComponentModel.TypeConverter.ConvertFromString*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não é possível efetuar a conversão."
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  id: ConvertTo(System.Object,System.Type)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertTo(Object,Type)
  nameWithType: TypeConverter.ConvertTo(Object,Type)
  fullName: System.ComponentModel.TypeConverter.ConvertTo(Object,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Converte o objeto do valor indicado para o tipo especificado, utilizando os argumentos."
  remarks: "O tipo mais comum para converter de e é um objeto de cadeia. Esta implementação chama <xref:System.Object.ToString%2A>do objeto, se o objeto é válido e se o tipo de destino é uma cadeia.</xref:System.Object.ToString%2A>"
  syntax:
    content: public object ConvertTo (object value, Type destinationType);
    parameters:
    - id: value
      type: System.Object
      description: "O <xref:System.Object>converter.</xref:System.Object>"
    - id: destinationType
      type: System.Type
      description: "O <xref:System.Type>para converter o `value` parâmetro.</xref:System.Type>"
    return:
      type: System.Object
      description: "Um <xref:System.Object>que representa o valor convertido.</xref:System.Object>"
  overload: System.ComponentModel.TypeConverter.ConvertTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>destinationType</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não é possível efetuar a conversão."
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: TypeConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.ComponentModel.TypeConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Converte o objeto do valor indicado para o tipo especificado, utilizando as informações de contexto e cultura especificada."
  remarks: "Os tipos de mais comuns para converter são para e de um objeto de cadeia. Esta implementação chama <xref:System.Object.ToString%2A>no objeto se o objeto é válido e se o tipo de destino é uma cadeia.</xref:System.Object.ToString%2A>       Utilize o `context` parâmetro para extrair informações adicionais sobre o ambiente a partir do qual é invocado este conversor. Este parâmetro pode ser `null`, sempre a verificar. Além disso, podem devolver propriedades no objeto context `null`.       Os autores de tipo personalizado que pretendam para suportar um comportamento de conversão de tipo XAML, normalmente, implementam um <xref:System.ComponentModel.TypeConverter>classe que suporta <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A>comportamento de uma cadeia.</xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> </xref:System.ComponentModel.TypeConverter> Estes conversores de tipo também podem implementar ConvertTo para suportar a serialização para XAML.       Alguns cenários de serialização XAML não podem ser endereçados adequadamente com <xref:System.ComponentModel.TypeConverter>individualmente.</xref:System.ComponentModel.TypeConverter> Nestes casos, poderá ser necessário também definir um <xref:System.Windows.Markup.ValueSerializer>que processa os casos de serialização que caso contrário, teriam de ser processados por ConvertTo.</xref:System.Windows.Markup.ValueSerializer> Para obter mais informações, consulte <xref:System.Windows.Markup.ValueSerializer>.</xref:System.Windows.Markup.ValueSerializer>"
  syntax:
    content: public virtual object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> que fornece um contexto de formato."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo> Se <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> é transmitida atual é assumida cultura."
    - id: value
      type: System.Object
      description: "O <xref:System.Object>converter.</xref:System.Object>"
    - id: destinationType
      type: System.Type
      description: "O <xref:System.Type>para converter o `value` parâmetro.</xref:System.Type>"
    return:
      type: System.Object
      description: "Um <xref:System.Object>que representa o valor convertido.</xref:System.Object>"
  overload: System.ComponentModel.TypeConverter.ConvertTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>destinationType</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não é possível efetuar a conversão."
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  id: ConvertToInvariantString(System.Object)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertToInvariantString(Object)
  nameWithType: TypeConverter.ConvertToInvariantString(Object)
  fullName: System.ComponentModel.TypeConverter.ConvertToInvariantString(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Converte o valor especificado para uma representação de cadeia de cultura invariante."
  remarks: "O `context` parâmetro pode ser utilizado para extrair informações adicionais sobre o ambiente a partir do qual está a ser invocado este conversor. Isto pode ser `null`, por isso sempre a existência. Além disso, podem devolver propriedades no objeto context `null`.       Dependendo da implementação do formatador de valor, poderá ser possível transferir a cadeia devolvida novamente para o formatador de valor para voltar a criar uma instância do objeto."
  syntax:
    content: public string ConvertToInvariantString (object value);
    parameters:
    - id: value
      type: System.Object
      description: "O <xref:System.Object>converter.</xref:System.Object>"
    return:
      type: System.String
      description: "A <xref:System.String>que representa o valor convertido.</xref:System.String>"
  overload: System.ComponentModel.TypeConverter.ConvertToInvariantString*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não é possível efetuar a conversão."
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  id: ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertToInvariantString(ITypeDescriptorContext,Object)
  nameWithType: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext,Object)
  fullName: System.ComponentModel.TypeConverter.ConvertToInvariantString(ITypeDescriptorContext,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Converte o valor especificado para uma representação de cadeia de cultura invariante, utilizando o contexto especificado."
  remarks: "Utilize o `context` parâmetro para extrair informações adicionais sobre o ambiente a partir do qual é invocado este conversor. Este parâmetro pode ser `null`, sempre a verificar. Além disso, podem devolver propriedades no objeto context `null`.       Dependendo da implementação do formatador de valor, poderá ser possível transferir a cadeia devolvida novamente para o formatador de valor para voltar a criar uma instância do objeto."
  syntax:
    content: public string ConvertToInvariantString (System.ComponentModel.ITypeDescriptorContext context, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> que fornece um contexto de formato."
    - id: value
      type: System.Object
      description: "O <xref:System.Object>converter.</xref:System.Object>"
    return:
      type: System.String
      description: "A <xref:System.String>que representa o valor convertido.</xref:System.String>"
  overload: System.ComponentModel.TypeConverter.ConvertToInvariantString*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não é possível efetuar a conversão."
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  id: ConvertToString(System.Object)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertToString(Object)
  nameWithType: TypeConverter.ConvertToString(Object)
  fullName: System.ComponentModel.TypeConverter.ConvertToString(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Converte o valor especificado para uma representação de cadeia."
  remarks: "Dependendo da implementação do formatador de valor, poderá ser possível transferir a cadeia devolvida novamente para o formatador de valor para voltar a criar uma instância do objeto."
  example:
  - For an example on this function, see the <xref:System.ComponentModel.TypeConverter> class.
  syntax:
    content: public string ConvertToString (object value);
    parameters:
    - id: value
      type: System.Object
      description: "O <xref:System.Object>converter.</xref:System.Object>"
    return:
      type: System.String
      description: "Um <xref:System.Object>que representa o valor convertido.</xref:System.Object>"
  overload: System.ComponentModel.TypeConverter.ConvertToString*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não é possível efetuar a conversão."
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  id: ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertToString(ITypeDescriptorContext,Object)
  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext,Object)
  fullName: System.ComponentModel.TypeConverter.ConvertToString(ITypeDescriptorContext,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Converte o valor indicado para uma representação de cadeia, utilizando o contexto fornecido."
  remarks: "Utilize o `context` parâmetro para extrair informações adicionais sobre o ambiente a partir do qual é invocado este conversor. Este parâmetro pode ser `null`, sempre a verificar. Além disso, podem devolver propriedades no objeto context `null`.       Dependendo da implementação do formatador de valor, poderá ser possível transferir a cadeia devolvida novamente para o formatador de valor para voltar a criar uma instância do objeto."
  syntax:
    content: public string ConvertToString (System.ComponentModel.ITypeDescriptorContext context, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> que fornece um contexto de formato."
    - id: value
      type: System.Object
      description: "O <xref:System.Object>converter.</xref:System.Object>"
    return:
      type: System.String
      description: "Um <xref:System.Object>que representa o valor convertido.</xref:System.Object>"
  overload: System.ComponentModel.TypeConverter.ConvertToString*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não é possível efetuar a conversão."
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: ConvertToString(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.ComponentModel.TypeConverter.ConvertToString(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Converte o valor indicado para uma representação de cadeia, utilizando as informações de contexto e cultura especificada."
  remarks: "Utilize o `context` parâmetro para extrair informações adicionais sobre o ambiente a partir do qual é invocado este conversor. Este parâmetro pode ser `null`, sempre a verificar. Além disso, podem devolver propriedades no objeto context `null`.       Dependendo da implementação do formatador de valor, poderá ser possível transferir a cadeia devolvida novamente para o formatador de valor para voltar a criar uma instância do objeto."
  syntax:
    content: public string ConvertToString (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> que fornece um contexto de formato."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo> Se <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> é transmitida atual é assumida cultura."
    - id: value
      type: System.Object
      description: "O <xref:System.Object>converter.</xref:System.Object>"
    return:
      type: System.String
      description: "Um <xref:System.Object>que representa o valor convertido.</xref:System.Object>"
  overload: System.ComponentModel.TypeConverter.ConvertToString*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não é possível efetuar a conversão."
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  id: CreateInstance(System.Collections.IDictionary)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: CreateInstance(IDictionary)
  nameWithType: TypeConverter.CreateInstance(IDictionary)
  fullName: System.ComponentModel.TypeConverter.CreateInstance(IDictionary)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Recria um <xref:System.Object>num determinado conjunto de valores de propriedade para o objeto.</xref:System.Object>"
  remarks: "Utilize este método para objetos que são imutáveis, mas para os quais pretende fornecer propriedades das partições.       O dicionário fornecido o `propertyValues` parâmetro tem uma série de pares nome/valor, um para cada propriedade devolvido de <xref:System.ComponentModel.TypeConverter.GetProperties%2A>.</xref:System.ComponentModel.TypeConverter.GetProperties%2A>"
  syntax:
    content: public object CreateInstance (System.Collections.IDictionary propertyValues);
    parameters:
    - id: propertyValues
      type: System.Collections.IDictionary
      description: "Um <xref:System.Collections.IDictionary>que representa um dicionário de novos valores de propriedade.</xref:System.Collections.IDictionary>"
    return:
      type: System.Object
      description: "Um <xref:System.Object>que representa o determinado <xref:System.Collections.IDictionary>, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se não é possível criar o objeto.</xref:System.Collections.IDictionary> </xref:System.Object> Este método devolve sempre <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.TypeConverter.CreateInstance*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  id: CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: CreateInstance(ITypeDescriptorContext,IDictionary)
  nameWithType: TypeConverter.CreateInstance(ITypeDescriptorContext,IDictionary)
  fullName: System.ComponentModel.TypeConverter.CreateInstance(ITypeDescriptorContext,IDictionary)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Cria uma instância do tipo que isto <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> está associado, utilizando o contexto especificado, num determinado conjunto de valores de propriedade para o objeto."
  remarks: "Utilize este método para objetos que são imutáveis, mas para os quais pretende fornecer propriedades das partições."
  syntax:
    content: public virtual object CreateInstance (System.ComponentModel.ITypeDescriptorContext context, System.Collections.IDictionary propertyValues);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> que fornece um contexto de formato."
    - id: propertyValues
      type: System.Collections.IDictionary
      description: "Um <xref:System.Collections.IDictionary>dos novos valores de propriedade.</xref:System.Collections.IDictionary>"
    return:
      type: System.Object
      description: "Um <xref:System.Object>que representa o determinado <xref:System.Collections.IDictionary>, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se não é possível criar o objeto.</xref:System.Collections.IDictionary> </xref:System.Object> Este método devolve sempre <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.TypeConverter.CreateInstance*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  id: GetConvertFromException(System.Object)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetConvertFromException(Object)
  nameWithType: TypeConverter.GetConvertFromException(Object)
  fullName: System.ComponentModel.TypeConverter.GetConvertFromException(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Devolve uma exceção a acionar quando não é possível efetuar uma conversão."
  syntax:
    content: protected Exception GetConvertFromException (object value);
    parameters:
    - id: value
      type: System.Object
      description: "O <xref:System.Object>para converter, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o objeto não está disponível.</xref:System.Object>"
    return:
      type: System.Exception
      description: "Um <xref:System.Exception>que representa a exceção a acionar quando não é possível efetuar uma conversão.</xref:System.Exception>"
  overload: System.ComponentModel.TypeConverter.GetConvertFromException*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Automaticamente emitida por este método."
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  id: GetConvertToException(System.Object,System.Type)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetConvertToException(Object,Type)
  nameWithType: TypeConverter.GetConvertToException(Object,Type)
  fullName: System.ComponentModel.TypeConverter.GetConvertToException(Object,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Devolve uma exceção a acionar quando não é possível efetuar uma conversão."
  syntax:
    content: protected Exception GetConvertToException (object value, Type destinationType);
    parameters:
    - id: value
      type: System.Object
      description: "O <xref:System.Object>para converter, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o objeto não está disponível.</xref:System.Object>"
    - id: destinationType
      type: System.Type
      description: "A <xref:System.Type>que representa o tipo de conversão estava a tentar converter.</xref:System.Type>"
    return:
      type: System.Exception
      description: "Um <xref:System.Exception>que representa a exceção a acionar quando não é possível efetuar uma conversão.</xref:System.Exception>"
  overload: System.ComponentModel.TypeConverter.GetConvertToException*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Automaticamente emitida por este método."
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  id: GetCreateInstanceSupported
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetCreateInstanceSupported()
  nameWithType: TypeConverter.GetCreateInstanceSupported()
  fullName: System.ComponentModel.TypeConverter.GetCreateInstanceSupported()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Devolve se alterar um valor deste objeto requer uma chamada para o <xref:System.ComponentModel.TypeConverter.CreateInstance*>método para criar um novo valor.</xref:System.ComponentModel.TypeConverter.CreateInstance*>"
  syntax:
    content: public bool GetCreateInstanceSupported ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se alterar uma propriedade deste objeto necessita de uma chamada para <xref:System.ComponentModel.TypeConverter.CreateInstance*>para criar um novo valor; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ComponentModel.TypeConverter.CreateInstance*>"
  overload: System.ComponentModel.TypeConverter.GetCreateInstanceSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetCreateInstanceSupported(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Devolve se alterar um valor deste objeto requer uma chamada para <xref:System.ComponentModel.TypeConverter.CreateInstance*>para criar um novo valor utilizando o contexto especificado.</xref:System.ComponentModel.TypeConverter.CreateInstance*>"
  remarks: "Conforme implementado desta classe, este método devolve sempre `false`."
  syntax:
    content: public virtual bool GetCreateInstanceSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> que fornece um contexto de formato."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se alterar uma propriedade deste objeto necessita de uma chamada para <xref:System.ComponentModel.TypeConverter.CreateInstance*>para criar um novo valor; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ComponentModel.TypeConverter.CreateInstance*>"
  overload: System.ComponentModel.TypeConverter.GetCreateInstanceSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.GetProperties(System.Object)
  id: GetProperties(System.Object)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetProperties(Object)
  nameWithType: TypeConverter.GetProperties(Object)
  fullName: System.ComponentModel.TypeConverter.GetProperties(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Devolve uma coleção de propriedades para o tipo de matriz especificada pelo parâmetro de valor."
  remarks: "Conforme implementado desta classe, este método devolve sempre `null`.       Por predefinição, um tipo de retorno não propriedades. Uma implementação fácil deste método pode chamar <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>para o tipo de dados correto.</xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>"
  syntax:
    content: public System.ComponentModel.PropertyDescriptorCollection GetProperties (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Um <xref:System.Object>que especifica o tipo de matriz para o qual pretende obter propriedades.</xref:System.Object>"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> com as propriedades expostas para este tipo de dados, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se existirem sem propriedades."
  overload: System.ComponentModel.TypeConverter.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  id: GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetProperties(ITypeDescriptorContext,Object)
  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext,Object)
  fullName: System.ComponentModel.TypeConverter.GetProperties(ITypeDescriptorContext,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Devolve uma coleção de propriedades para o tipo de matriz especificada pelo parâmetro de valor, utilizando o contexto especificado."
  remarks: "Utilize o `context` parâmetro para extrair informações adicionais sobre o ambiente a partir do qual é invocado este conversor. Este parâmetro pode ser `null`, sempre a verificar. Além disso, podem devolver propriedades no objeto context `null`.       Conforme implementado desta classe, este método devolve sempre `null`.       Por predefinição, um tipo de retorno não propriedades. Uma implementação fácil deste método pode chamar <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>para o tipo de dados correto.</xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>"
  syntax:
    content: public System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> que fornece um contexto de formato."
    - id: value
      type: System.Object
      description: "Um <xref:System.Object>que especifica o tipo de matriz para o qual pretende obter propriedades.</xref:System.Object>"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> com as propriedades expostas para este tipo de dados, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se existirem sem propriedades."
  overload: System.ComponentModel.TypeConverter.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  id: GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetProperties(ITypeDescriptorContext,Object,Attribute[])
  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
  fullName: System.ComponentModel.TypeConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Devolve uma coleção de propriedades para o tipo de matriz especificada pelo parâmetro de valor, utilizando os atributos e contexto especificado."
  remarks: "Conforme implementado desta classe, este método devolve sempre `null`."
  syntax:
    content: public virtual System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> que fornece um contexto de formato."
    - id: value
      type: System.Object
      description: "Um <xref:System.Object>que especifica o tipo de matriz para o qual pretende obter propriedades.</xref:System.Object>"
    - id: attributes
      type: System.Attribute[]
      description: "Uma matriz do tipo <xref:System.Attribute>que é utilizado como um filtro.</xref:System.Attribute>"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> com as propriedades expostas para este tipo de dados, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se existirem sem propriedades."
  overload: System.ComponentModel.TypeConverter.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported
  id: GetPropertiesSupported
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetPropertiesSupported()
  nameWithType: TypeConverter.GetPropertiesSupported()
  fullName: System.ComponentModel.TypeConverter.GetPropertiesSupported()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Devolve se este objeto suporta propriedades."
  remarks: "Conforme implementado desta classe, este método devolve sempre `false`."
  syntax:
    content: public bool GetPropertiesSupported ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <xref:System.ComponentModel.TypeConverter.GetProperties*>deve ser chamado para localizar as propriedades deste objeto; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ComponentModel.TypeConverter.GetProperties*>"
  overload: System.ComponentModel.TypeConverter.GetPropertiesSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetPropertiesSupported(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Devolve se este objeto suporta propriedades, utilizando o contexto especificado."
  remarks: "Conforme implementado desta classe, este método devolve sempre `false`."
  syntax:
    content: public virtual bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> que fornece um contexto de formato."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <xref:System.ComponentModel.TypeConverter.GetProperties*>deve ser chamado para localizar as propriedades deste objeto; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ComponentModel.TypeConverter.GetProperties*>"
  overload: System.ComponentModel.TypeConverter.GetPropertiesSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.GetStandardValues
  id: GetStandardValues
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetStandardValues()
  nameWithType: TypeConverter.GetStandardValues()
  fullName: System.ComponentModel.TypeConverter.GetStandardValues()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Devolve uma coleção de valores padrão do contexto predefinido para este conversor de tipos foi concebido para o tipo de dados."
  remarks: "Conforme implementado desta classe, este método devolve sempre `null`."
  syntax:
    content: public System.Collections.ICollection GetStandardValues ();
    parameters: []
    return:
      type: System.Collections.ICollection
      description: "A <xref:System.ComponentModel.TypeConverter.StandardValuesCollection>que contém um conjunto de valores válidos, padrão ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o tipo de dados não suporta um conjunto padrão de valores.</xref:System.ComponentModel.TypeConverter.StandardValuesCollection>"
  overload: System.ComponentModel.TypeConverter.GetStandardValues*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeConverter.GetStandardValues(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Devolve um conjunto de valores padrão para o tipo de dados, que este conversor de tipos foi concebido para quando é fornecido com um contexto de formato."
  remarks: "Como implementados no <xref:System.ComponentModel.TypeConverter>, este método devolve sempre `null`.</xref:System.ComponentModel.TypeConverter>"
  example:
  - For an example on this function, see the <xref:System.ComponentModel.TypeConverter> class.
  syntax:
    content: public virtual System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> que fornece um contexto de formato que pode ser utilizado para extrair informações adicionais sobre o ambiente a partir do qual é invocado este conversor. Este parâmetro ou as propriedades deste parâmetro podem ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.ComponentModel.TypeConverter.StandardValuesCollection
      description: "A <xref:System.ComponentModel.TypeConverter.StandardValuesCollection>que contém um conjunto de valores válidos, padrão ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o tipo de dados não suporta um conjunto padrão de valores.</xref:System.ComponentModel.TypeConverter.StandardValuesCollection>"
  overload: System.ComponentModel.TypeConverter.GetStandardValues*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  id: GetStandardValuesExclusive
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetStandardValuesExclusive()
  nameWithType: TypeConverter.GetStandardValuesExclusive()
  fullName: System.ComponentModel.TypeConverter.GetStandardValuesExclusive()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Devolve se a coleção de valores padrão devolvido de <xref:System.ComponentModel.TypeConverter.GetStandardValues*>é uma lista exclusiva.</xref:System.ComponentModel.TypeConverter.GetStandardValues*>"
  remarks: "Conforme implementado desta classe, este método devolve sempre `false`.       Se a lista é exclusiva, tal como um tipo de dados de enumeração, outros valores não são válidos. Se a lista não for exclusiva, poderão existir outros valores válidos além da lista de valores padrão que o <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A>fornece de método.</xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> Se os valores são exclusivos, a lista devolvida pelo <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A>não deve permitir estes valores ser editado.</xref:System.ComponentModel.TypeConverter.GetStandardValues%2A>"
  syntax:
    content: public bool GetStandardValuesExclusive ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.ComponentModel.TypeConverter.StandardValuesCollection>devolvido de <xref:System.ComponentModel.TypeConverter.GetStandardValues*>é uma lista exaustiva de possíveis valores; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se outros valores são possíveis.</xref:System.ComponentModel.TypeConverter.GetStandardValues*> </xref:System.ComponentModel.TypeConverter.StandardValuesCollection>"
  overload: System.ComponentModel.TypeConverter.GetStandardValuesExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Devolve se a coleção de valores padrão devolvido de <xref:System.ComponentModel.TypeConverter.GetStandardValues*>é uma lista exclusiva de valores possíveis, utilizando o contexto especificado.</xref:System.ComponentModel.TypeConverter.GetStandardValues*>"
  remarks: "Conforme implementado desta classe, este método devolve sempre `false`.       Se a lista é exclusiva, tal como um tipo de dados de enumeração, outros valores não são válidos. Se a lista não for exclusiva, poderão existir outros valores válidos além da lista de valores padrão que o <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A>fornece de método.</xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> Se os valores são exclusivos, a lista devolvida pelo <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A>não deve permitir estes valores ser editado.</xref:System.ComponentModel.TypeConverter.GetStandardValues%2A>"
  syntax:
    content: public virtual bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> que fornece um contexto de formato."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.ComponentModel.TypeConverter.StandardValuesCollection>devolvido de <xref:System.ComponentModel.TypeConverter.GetStandardValues*>é uma lista exaustiva de possíveis valores; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se outros valores são possíveis.</xref:System.ComponentModel.TypeConverter.GetStandardValues*> </xref:System.ComponentModel.TypeConverter.StandardValuesCollection>"
  overload: System.ComponentModel.TypeConverter.GetStandardValuesExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported
  id: GetStandardValuesSupported
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetStandardValuesSupported()
  nameWithType: TypeConverter.GetStandardValuesSupported()
  fullName: System.ComponentModel.TypeConverter.GetStandardValuesSupported()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Devolve se este objeto suporta um conjunto padrão de valores que podem ser selecionadas a partir de uma lista."
  syntax:
    content: public bool GetStandardValuesSupported ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <xref:System.ComponentModel.TypeConverter.GetStandardValues*>deve ser chamado para localizar um conjunto comum de valores que suporta o objeto; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ComponentModel.TypeConverter.GetStandardValues*>"
  overload: System.ComponentModel.TypeConverter.GetStandardValuesSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Devolve se este objeto suporta um conjunto padrão de valores que podem ser selecionadas a partir de uma lista, utilizando o contexto especificado."
  remarks: "Conforme implementado desta classe, este método devolve sempre `false`.       Utilize o `context` parâmetro para extrair informações adicionais sobre o ambiente a partir do qual é invocado este conversor. Este parâmetro pode ser `null`, sempre a verificar. Além disso, podem devolver propriedades no objeto context `null`."
  syntax:
    content: public virtual bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> que fornece um contexto de formato."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <xref:System.ComponentModel.TypeConverter.GetStandardValues*>deve ser chamado para localizar um conjunto comum de valores que suporta o objeto; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ComponentModel.TypeConverter.GetStandardValues*>"
  overload: System.ComponentModel.TypeConverter.GetStandardValuesSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.IsValid(System.Object)
  id: IsValid(System.Object)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: IsValid(Object)
  nameWithType: TypeConverter.IsValid(Object)
  fullName: System.ComponentModel.TypeConverter.IsValid(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Devolve se o objeto do valor fornecido é válido para este tipo."
  remarks: "A partir de [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], a <xref:System.ComponentModel.TypeConverter.IsValid%2A>método obtém as exceções do <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A>e <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A>métodos.</xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> </xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> </xref:System.ComponentModel.TypeConverter.IsValid%2A> Se o tipo de valor de entrada faz com que <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A>para devolver `false`, ou se o valor de entrada faz com que <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A>para gerar uma exceção, o <xref:System.ComponentModel.TypeConverter.IsValid%2A>método devolve `false`.</xref:System.ComponentModel.TypeConverter.IsValid%2A> </xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> </xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A>       Para ativar o comportamento de legado, inserir as seguintes linhas no ficheiro de configuração da aplicação, por exemplo, application1.exe.config.      ```xml   <configuration>     <appSettings>       <add key=&quot;UseCompatibleTypeConverterBehavior&quot; value=&quot;true&quot; />     </appSettings>   </configuration>   ```"
  syntax:
    content: public bool IsValid (object value);
    parameters:
    - id: value
      type: System.Object
      description: "O objeto de teste de validade."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o valor especificado é válido para este objeto; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.TypeConverter.IsValid*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  id: IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: IsValid(ITypeDescriptorContext,Object)
  nameWithType: TypeConverter.IsValid(ITypeDescriptorContext,Object)
  fullName: System.ComponentModel.TypeConverter.IsValid(ITypeDescriptorContext,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Devolve se o objeto do valor fornecido é válido para este tipo de e para o contexto especificado."
  remarks: "Utilize o `context` parâmetro para extrair informações adicionais sobre o ambiente a partir do qual é invocado este conversor. Este parâmetro pode ser `null`, sempre a verificar. Além disso, podem devolver propriedades no objeto context `null`.       A partir de [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], o método IsValid intercete as exceções do <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A>e <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A>métodos.</xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> </xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> Se o tipo de valor de entrada faz com que <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A>para devolver `false`, ou se o valor de entrada faz com que <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A>para gerar uma exceção, o método de IsValid devolve `false`.</xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> </xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A>       Para ativar o comportamento de legado, inserir as seguintes linhas no ficheiro de configuração da aplicação, por exemplo, application1.exe.config.      ```xml   <configuration>     <appSettings>       <add key=&quot;UseCompatibleTypeConverterBehavior&quot; value=&quot;true&quot; />     </appSettings>   </configuration>   ```"
  example:
  - For an example of this function, see the <xref:System.ComponentModel.TypeConverter> class.
  syntax:
    content: public virtual bool IsValid (System.ComponentModel.ITypeDescriptorContext context, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> que fornece um contexto de formato."
    - id: value
      type: System.Object
      description: "O <xref:System.Object>para testar a validade.</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o valor especificado é válido para este objeto; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.TypeConverter.IsValid*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  id: SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  parent: System.ComponentModel.TypeConverter
  langs:
  - csharp
  name: SortProperties(PropertyDescriptorCollection,String[])
  nameWithType: TypeConverter.SortProperties(PropertyDescriptorCollection,String[])
  fullName: System.ComponentModel.TypeConverter.SortProperties(PropertyDescriptorCollection,String[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ordena um conjunto de propriedades."
  remarks: "Todas as propriedades na coleção que não estão a ser a matriz de nomes já são adicionadas, por ordem alfabética, ao fim. Se o `names` parâmetro é uma matriz vazia ou `null`, todas as propriedades da coleção são ordenadas por ordem alfabética."
  syntax:
    content: protected System.ComponentModel.PropertyDescriptorCollection SortProperties (System.ComponentModel.PropertyDescriptorCollection props, string[] names);
    parameters:
    - id: props
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> que tem as propriedades para ordenar."
    - id: names
      type: System.String[]
      description: "Uma matriz de nomes na ordem de que pretende que as propriedades a aparecer na coleção."
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> que contém as propriedades ordenadas."
  overload: System.ComponentModel.TypeConverter.SortProperties*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.TypeConverter.#ctor
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: TypeConverter()
  nameWithType: TypeConverter.TypeConverter()
  fullName: System.ComponentModel.TypeConverter.TypeConverter()
- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: CanConvertFrom(Type)
  nameWithType: TypeConverter.CanConvertFrom(Type)
  fullName: System.ComponentModel.TypeConverter.CanConvertFrom(Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: TypeConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.TypeConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: CanConvertTo(Type)
  nameWithType: TypeConverter.CanConvertTo(Type)
  fullName: System.ComponentModel.TypeConverter.CanConvertTo(Type)
- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: TypeConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.TypeConverter.CanConvertTo(ITypeDescriptorContext,Type)
- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertFrom(Object)
  nameWithType: TypeConverter.ConvertFrom(Object)
  fullName: System.ComponentModel.TypeConverter.ConvertFrom(Object)
- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: TypeConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.ComponentModel.TypeConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertFromInvariantString(String)
  nameWithType: TypeConverter.ConvertFromInvariantString(String)
  fullName: System.ComponentModel.TypeConverter.ConvertFromInvariantString(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertFromInvariantString(ITypeDescriptorContext,String)
  nameWithType: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext,String)
  fullName: System.ComponentModel.TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext,String)
- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertFromString(String)
  nameWithType: TypeConverter.ConvertFromString(String)
  fullName: System.ComponentModel.TypeConverter.ConvertFromString(String)
- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertFromString(ITypeDescriptorContext,String)
  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext,String)
  fullName: System.ComponentModel.TypeConverter.ConvertFromString(ITypeDescriptorContext,String)
- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertFromString(ITypeDescriptorContext,CultureInfo,String)
  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext,CultureInfo,String)
  fullName: System.ComponentModel.TypeConverter.ConvertFromString(ITypeDescriptorContext,CultureInfo,String)
- uid: System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertTo(Object,Type)
  nameWithType: TypeConverter.ConvertTo(Object,Type)
  fullName: System.ComponentModel.TypeConverter.ConvertTo(Object,Type)
- uid: System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: TypeConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.ComponentModel.TypeConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertToInvariantString(Object)
  nameWithType: TypeConverter.ConvertToInvariantString(Object)
  fullName: System.ComponentModel.TypeConverter.ConvertToInvariantString(Object)
- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertToInvariantString(ITypeDescriptorContext,Object)
  nameWithType: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext,Object)
  fullName: System.ComponentModel.TypeConverter.ConvertToInvariantString(ITypeDescriptorContext,Object)
- uid: System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertToString(Object)
  nameWithType: TypeConverter.ConvertToString(Object)
  fullName: System.ComponentModel.TypeConverter.ConvertToString(Object)
- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertToString(ITypeDescriptorContext,Object)
  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext,Object)
  fullName: System.ComponentModel.TypeConverter.ConvertToString(ITypeDescriptorContext,Object)
- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertToString(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.ComponentModel.TypeConverter.ConvertToString(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: CreateInstance(IDictionary)
  nameWithType: TypeConverter.CreateInstance(IDictionary)
  fullName: System.ComponentModel.TypeConverter.CreateInstance(IDictionary)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: CreateInstance(ITypeDescriptorContext,IDictionary)
  nameWithType: TypeConverter.CreateInstance(ITypeDescriptorContext,IDictionary)
  fullName: System.ComponentModel.TypeConverter.CreateInstance(ITypeDescriptorContext,IDictionary)
- uid: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetConvertFromException(Object)
  nameWithType: TypeConverter.GetConvertFromException(Object)
  fullName: System.ComponentModel.TypeConverter.GetConvertFromException(Object)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetConvertToException(Object,Type)
  nameWithType: TypeConverter.GetConvertToException(Object,Type)
  fullName: System.ComponentModel.TypeConverter.GetConvertToException(Object,Type)
- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetCreateInstanceSupported()
  nameWithType: TypeConverter.GetCreateInstanceSupported()
  fullName: System.ComponentModel.TypeConverter.GetCreateInstanceSupported()
- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetCreateInstanceSupported(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter.GetProperties(System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetProperties(Object)
  nameWithType: TypeConverter.GetProperties(Object)
  fullName: System.ComponentModel.TypeConverter.GetProperties(Object)
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetProperties(ITypeDescriptorContext,Object)
  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext,Object)
  fullName: System.ComponentModel.TypeConverter.GetProperties(ITypeDescriptorContext,Object)
- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetProperties(ITypeDescriptorContext,Object,Attribute[])
  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
  fullName: System.ComponentModel.TypeConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
- uid: System.Attribute[]
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute[]
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetPropertiesSupported()
  nameWithType: TypeConverter.GetPropertiesSupported()
  fullName: System.ComponentModel.TypeConverter.GetPropertiesSupported()
- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetPropertiesSupported(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter.GetStandardValues
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetStandardValues()
  nameWithType: TypeConverter.GetStandardValues()
  fullName: System.ComponentModel.TypeConverter.GetStandardValues()
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeConverter.GetStandardValues(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter.StandardValuesCollection
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter+StandardValuesCollection
  nameWithType: TypeConverter+StandardValuesCollection
  fullName: System.ComponentModel.TypeConverter+StandardValuesCollection
- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetStandardValuesExclusive()
  nameWithType: TypeConverter.GetStandardValuesExclusive()
  fullName: System.ComponentModel.TypeConverter.GetStandardValuesExclusive()
- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetStandardValuesSupported()
  nameWithType: TypeConverter.GetStandardValuesSupported()
  fullName: System.ComponentModel.TypeConverter.GetStandardValuesSupported()
- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter.IsValid(System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: IsValid(Object)
  nameWithType: TypeConverter.IsValid(Object)
  fullName: System.ComponentModel.TypeConverter.IsValid(Object)
- uid: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: IsValid(ITypeDescriptorContext,Object)
  nameWithType: TypeConverter.IsValid(ITypeDescriptorContext,Object)
  fullName: System.ComponentModel.TypeConverter.IsValid(ITypeDescriptorContext,Object)
- uid: System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: SortProperties(PropertyDescriptorCollection,String[])
  nameWithType: TypeConverter.SortProperties(PropertyDescriptorCollection,String[])
  fullName: System.ComponentModel.TypeConverter.SortProperties(PropertyDescriptorCollection,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.TypeConverter.#ctor*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: TypeConverter
  nameWithType: TypeConverter.TypeConverter
- uid: System.ComponentModel.TypeConverter.CanConvertFrom*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: TypeConverter.CanConvertFrom
- uid: System.ComponentModel.TypeConverter.CanConvertTo*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: CanConvertTo
  nameWithType: TypeConverter.CanConvertTo
- uid: System.ComponentModel.TypeConverter.ConvertFrom*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: TypeConverter.ConvertFrom
- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertFromInvariantString
  nameWithType: TypeConverter.ConvertFromInvariantString
- uid: System.ComponentModel.TypeConverter.ConvertFromString*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertFromString
  nameWithType: TypeConverter.ConvertFromString
- uid: System.ComponentModel.TypeConverter.ConvertTo*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertTo
  nameWithType: TypeConverter.ConvertTo
- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertToInvariantString
  nameWithType: TypeConverter.ConvertToInvariantString
- uid: System.ComponentModel.TypeConverter.ConvertToString*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: ConvertToString
  nameWithType: TypeConverter.ConvertToString
- uid: System.ComponentModel.TypeConverter.CreateInstance*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: CreateInstance
  nameWithType: TypeConverter.CreateInstance
- uid: System.ComponentModel.TypeConverter.GetConvertFromException*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetConvertFromException
  nameWithType: TypeConverter.GetConvertFromException
- uid: System.ComponentModel.TypeConverter.GetConvertToException*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetConvertToException
  nameWithType: TypeConverter.GetConvertToException
- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetCreateInstanceSupported
  nameWithType: TypeConverter.GetCreateInstanceSupported
- uid: System.ComponentModel.TypeConverter.GetProperties*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetProperties
  nameWithType: TypeConverter.GetProperties
- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetPropertiesSupported
  nameWithType: TypeConverter.GetPropertiesSupported
- uid: System.ComponentModel.TypeConverter.GetStandardValues*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetStandardValues
  nameWithType: TypeConverter.GetStandardValues
- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetStandardValuesExclusive
  nameWithType: TypeConverter.GetStandardValuesExclusive
- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: GetStandardValuesSupported
  nameWithType: TypeConverter.GetStandardValuesSupported
- uid: System.ComponentModel.TypeConverter.IsValid*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: IsValid
  nameWithType: TypeConverter.IsValid
- uid: System.ComponentModel.TypeConverter.SortProperties*
  parent: System.ComponentModel.TypeConverter
  isExternal: false
  name: SortProperties
  nameWithType: TypeConverter.SortProperties
