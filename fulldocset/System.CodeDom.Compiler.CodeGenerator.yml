### YamlMime:ManagedReference
items:
- uid: System.CodeDom.Compiler.CodeGenerator
  id: CodeGenerator
  children:
  - System.CodeDom.Compiler.CodeGenerator.#ctor
  - System.CodeDom.Compiler.CodeGenerator.ContinueOnNewLine(System.String)
  - System.CodeDom.Compiler.CodeGenerator.CreateEscapedIdentifier(System.String)
  - System.CodeDom.Compiler.CodeGenerator.CreateValidIdentifier(System.String)
  - System.CodeDom.Compiler.CodeGenerator.CurrentClass
  - System.CodeDom.Compiler.CodeGenerator.CurrentMember
  - System.CodeDom.Compiler.CodeGenerator.CurrentMemberName
  - System.CodeDom.Compiler.CodeGenerator.CurrentTypeName
  - System.CodeDom.Compiler.CodeGenerator.GenerateArgumentReferenceExpression(System.CodeDom.CodeArgumentReferenceExpression)
  - System.CodeDom.Compiler.CodeGenerator.GenerateArrayCreateExpression(System.CodeDom.CodeArrayCreateExpression)
  - System.CodeDom.Compiler.CodeGenerator.GenerateArrayIndexerExpression(System.CodeDom.CodeArrayIndexerExpression)
  - System.CodeDom.Compiler.CodeGenerator.GenerateAssignStatement(System.CodeDom.CodeAssignStatement)
  - System.CodeDom.Compiler.CodeGenerator.GenerateAttachEventStatement(System.CodeDom.CodeAttachEventStatement)
  - System.CodeDom.Compiler.CodeGenerator.GenerateAttributeDeclarationsEnd(System.CodeDom.CodeAttributeDeclarationCollection)
  - System.CodeDom.Compiler.CodeGenerator.GenerateAttributeDeclarationsStart(System.CodeDom.CodeAttributeDeclarationCollection)
  - System.CodeDom.Compiler.CodeGenerator.GenerateBaseReferenceExpression(System.CodeDom.CodeBaseReferenceExpression)
  - System.CodeDom.Compiler.CodeGenerator.GenerateBinaryOperatorExpression(System.CodeDom.CodeBinaryOperatorExpression)
  - System.CodeDom.Compiler.CodeGenerator.GenerateCastExpression(System.CodeDom.CodeCastExpression)
  - System.CodeDom.Compiler.CodeGenerator.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  - System.CodeDom.Compiler.CodeGenerator.GenerateComment(System.CodeDom.CodeComment)
  - System.CodeDom.Compiler.CodeGenerator.GenerateCommentStatement(System.CodeDom.CodeCommentStatement)
  - System.CodeDom.Compiler.CodeGenerator.GenerateCommentStatements(System.CodeDom.CodeCommentStatementCollection)
  - System.CodeDom.Compiler.CodeGenerator.GenerateCompileUnit(System.CodeDom.CodeCompileUnit)
  - System.CodeDom.Compiler.CodeGenerator.GenerateCompileUnitEnd(System.CodeDom.CodeCompileUnit)
  - System.CodeDom.Compiler.CodeGenerator.GenerateCompileUnitStart(System.CodeDom.CodeCompileUnit)
  - System.CodeDom.Compiler.CodeGenerator.GenerateConditionStatement(System.CodeDom.CodeConditionStatement)
  - System.CodeDom.Compiler.CodeGenerator.GenerateConstructor(System.CodeDom.CodeConstructor,System.CodeDom.CodeTypeDeclaration)
  - System.CodeDom.Compiler.CodeGenerator.GenerateDecimalValue(System.Decimal)
  - System.CodeDom.Compiler.CodeGenerator.GenerateDefaultValueExpression(System.CodeDom.CodeDefaultValueExpression)
  - System.CodeDom.Compiler.CodeGenerator.GenerateDelegateCreateExpression(System.CodeDom.CodeDelegateCreateExpression)
  - System.CodeDom.Compiler.CodeGenerator.GenerateDelegateInvokeExpression(System.CodeDom.CodeDelegateInvokeExpression)
  - System.CodeDom.Compiler.CodeGenerator.GenerateDirectionExpression(System.CodeDom.CodeDirectionExpression)
  - System.CodeDom.Compiler.CodeGenerator.GenerateDirectives(System.CodeDom.CodeDirectiveCollection)
  - System.CodeDom.Compiler.CodeGenerator.GenerateDoubleValue(System.Double)
  - System.CodeDom.Compiler.CodeGenerator.GenerateEntryPointMethod(System.CodeDom.CodeEntryPointMethod,System.CodeDom.CodeTypeDeclaration)
  - System.CodeDom.Compiler.CodeGenerator.GenerateEvent(System.CodeDom.CodeMemberEvent,System.CodeDom.CodeTypeDeclaration)
  - System.CodeDom.Compiler.CodeGenerator.GenerateEventReferenceExpression(System.CodeDom.CodeEventReferenceExpression)
  - System.CodeDom.Compiler.CodeGenerator.GenerateExpression(System.CodeDom.CodeExpression)
  - System.CodeDom.Compiler.CodeGenerator.GenerateExpressionStatement(System.CodeDom.CodeExpressionStatement)
  - System.CodeDom.Compiler.CodeGenerator.GenerateField(System.CodeDom.CodeMemberField)
  - System.CodeDom.Compiler.CodeGenerator.GenerateFieldReferenceExpression(System.CodeDom.CodeFieldReferenceExpression)
  - System.CodeDom.Compiler.CodeGenerator.GenerateGotoStatement(System.CodeDom.CodeGotoStatement)
  - System.CodeDom.Compiler.CodeGenerator.GenerateIndexerExpression(System.CodeDom.CodeIndexerExpression)
  - System.CodeDom.Compiler.CodeGenerator.GenerateIterationStatement(System.CodeDom.CodeIterationStatement)
  - System.CodeDom.Compiler.CodeGenerator.GenerateLabeledStatement(System.CodeDom.CodeLabeledStatement)
  - System.CodeDom.Compiler.CodeGenerator.GenerateLinePragmaEnd(System.CodeDom.CodeLinePragma)
  - System.CodeDom.Compiler.CodeGenerator.GenerateLinePragmaStart(System.CodeDom.CodeLinePragma)
  - System.CodeDom.Compiler.CodeGenerator.GenerateMethod(System.CodeDom.CodeMemberMethod,System.CodeDom.CodeTypeDeclaration)
  - System.CodeDom.Compiler.CodeGenerator.GenerateMethodInvokeExpression(System.CodeDom.CodeMethodInvokeExpression)
  - System.CodeDom.Compiler.CodeGenerator.GenerateMethodReferenceExpression(System.CodeDom.CodeMethodReferenceExpression)
  - System.CodeDom.Compiler.CodeGenerator.GenerateMethodReturnStatement(System.CodeDom.CodeMethodReturnStatement)
  - System.CodeDom.Compiler.CodeGenerator.GenerateNamespace(System.CodeDom.CodeNamespace)
  - System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceEnd(System.CodeDom.CodeNamespace)
  - System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceImport(System.CodeDom.CodeNamespaceImport)
  - System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceImports(System.CodeDom.CodeNamespace)
  - System.CodeDom.Compiler.CodeGenerator.GenerateNamespaces(System.CodeDom.CodeCompileUnit)
  - System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceStart(System.CodeDom.CodeNamespace)
  - System.CodeDom.Compiler.CodeGenerator.GenerateObjectCreateExpression(System.CodeDom.CodeObjectCreateExpression)
  - System.CodeDom.Compiler.CodeGenerator.GenerateParameterDeclarationExpression(System.CodeDom.CodeParameterDeclarationExpression)
  - System.CodeDom.Compiler.CodeGenerator.GeneratePrimitiveExpression(System.CodeDom.CodePrimitiveExpression)
  - System.CodeDom.Compiler.CodeGenerator.GenerateProperty(System.CodeDom.CodeMemberProperty,System.CodeDom.CodeTypeDeclaration)
  - System.CodeDom.Compiler.CodeGenerator.GeneratePropertyReferenceExpression(System.CodeDom.CodePropertyReferenceExpression)
  - System.CodeDom.Compiler.CodeGenerator.GeneratePropertySetValueReferenceExpression(System.CodeDom.CodePropertySetValueReferenceExpression)
  - System.CodeDom.Compiler.CodeGenerator.GenerateRemoveEventStatement(System.CodeDom.CodeRemoveEventStatement)
  - System.CodeDom.Compiler.CodeGenerator.GenerateSingleFloatValue(System.Single)
  - System.CodeDom.Compiler.CodeGenerator.GenerateSnippetCompileUnit(System.CodeDom.CodeSnippetCompileUnit)
  - System.CodeDom.Compiler.CodeGenerator.GenerateSnippetExpression(System.CodeDom.CodeSnippetExpression)
  - System.CodeDom.Compiler.CodeGenerator.GenerateSnippetMember(System.CodeDom.CodeSnippetTypeMember)
  - System.CodeDom.Compiler.CodeGenerator.GenerateSnippetStatement(System.CodeDom.CodeSnippetStatement)
  - System.CodeDom.Compiler.CodeGenerator.GenerateStatement(System.CodeDom.CodeStatement)
  - System.CodeDom.Compiler.CodeGenerator.GenerateStatements(System.CodeDom.CodeStatementCollection)
  - System.CodeDom.Compiler.CodeGenerator.GenerateThisReferenceExpression(System.CodeDom.CodeThisReferenceExpression)
  - System.CodeDom.Compiler.CodeGenerator.GenerateThrowExceptionStatement(System.CodeDom.CodeThrowExceptionStatement)
  - System.CodeDom.Compiler.CodeGenerator.GenerateTryCatchFinallyStatement(System.CodeDom.CodeTryCatchFinallyStatement)
  - System.CodeDom.Compiler.CodeGenerator.GenerateTypeConstructor(System.CodeDom.CodeTypeConstructor)
  - System.CodeDom.Compiler.CodeGenerator.GenerateTypeEnd(System.CodeDom.CodeTypeDeclaration)
  - System.CodeDom.Compiler.CodeGenerator.GenerateTypeOfExpression(System.CodeDom.CodeTypeOfExpression)
  - System.CodeDom.Compiler.CodeGenerator.GenerateTypeReferenceExpression(System.CodeDom.CodeTypeReferenceExpression)
  - System.CodeDom.Compiler.CodeGenerator.GenerateTypes(System.CodeDom.CodeNamespace)
  - System.CodeDom.Compiler.CodeGenerator.GenerateTypeStart(System.CodeDom.CodeTypeDeclaration)
  - System.CodeDom.Compiler.CodeGenerator.GenerateVariableDeclarationStatement(System.CodeDom.CodeVariableDeclarationStatement)
  - System.CodeDom.Compiler.CodeGenerator.GenerateVariableReferenceExpression(System.CodeDom.CodeVariableReferenceExpression)
  - System.CodeDom.Compiler.CodeGenerator.GetTypeOutput(System.CodeDom.CodeTypeReference)
  - System.CodeDom.Compiler.CodeGenerator.Indent
  - System.CodeDom.Compiler.CodeGenerator.IsCurrentClass
  - System.CodeDom.Compiler.CodeGenerator.IsCurrentDelegate
  - System.CodeDom.Compiler.CodeGenerator.IsCurrentEnum
  - System.CodeDom.Compiler.CodeGenerator.IsCurrentInterface
  - System.CodeDom.Compiler.CodeGenerator.IsCurrentStruct
  - System.CodeDom.Compiler.CodeGenerator.IsValidIdentifier(System.String)
  - System.CodeDom.Compiler.CodeGenerator.IsValidLanguageIndependentIdentifier(System.String)
  - System.CodeDom.Compiler.CodeGenerator.NullToken
  - System.CodeDom.Compiler.CodeGenerator.Options
  - System.CodeDom.Compiler.CodeGenerator.Output
  - System.CodeDom.Compiler.CodeGenerator.OutputAttributeArgument(System.CodeDom.CodeAttributeArgument)
  - System.CodeDom.Compiler.CodeGenerator.OutputAttributeDeclarations(System.CodeDom.CodeAttributeDeclarationCollection)
  - System.CodeDom.Compiler.CodeGenerator.OutputDirection(System.CodeDom.FieldDirection)
  - System.CodeDom.Compiler.CodeGenerator.OutputExpressionList(System.CodeDom.CodeExpressionCollection)
  - System.CodeDom.Compiler.CodeGenerator.OutputExpressionList(System.CodeDom.CodeExpressionCollection,System.Boolean)
  - System.CodeDom.Compiler.CodeGenerator.OutputFieldScopeModifier(System.CodeDom.MemberAttributes)
  - System.CodeDom.Compiler.CodeGenerator.OutputIdentifier(System.String)
  - System.CodeDom.Compiler.CodeGenerator.OutputMemberAccessModifier(System.CodeDom.MemberAttributes)
  - System.CodeDom.Compiler.CodeGenerator.OutputMemberScopeModifier(System.CodeDom.MemberAttributes)
  - System.CodeDom.Compiler.CodeGenerator.OutputOperator(System.CodeDom.CodeBinaryOperatorType)
  - System.CodeDom.Compiler.CodeGenerator.OutputParameters(System.CodeDom.CodeParameterDeclarationExpressionCollection)
  - System.CodeDom.Compiler.CodeGenerator.OutputType(System.CodeDom.CodeTypeReference)
  - System.CodeDom.Compiler.CodeGenerator.OutputTypeAttributes(System.Reflection.TypeAttributes,System.Boolean,System.Boolean)
  - System.CodeDom.Compiler.CodeGenerator.OutputTypeNamePair(System.CodeDom.CodeTypeReference,System.String)
  - System.CodeDom.Compiler.CodeGenerator.QuoteSnippetString(System.String)
  - System.CodeDom.Compiler.CodeGenerator.Supports(System.CodeDom.Compiler.GeneratorSupport)
  - System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#CreateEscapedIdentifier(System.String)
  - System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#CreateValidIdentifier(System.String)
  - System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  - System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  - System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  - System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  - System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  - System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GetTypeOutput(System.CodeDom.CodeTypeReference)
  - System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#IsValidIdentifier(System.String)
  - System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#Supports(System.CodeDom.Compiler.GeneratorSupport)
  - System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#ValidateIdentifier(System.String)
  - System.CodeDom.Compiler.CodeGenerator.ValidateIdentifier(System.String)
  - System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers(System.CodeDom.CodeObject)
  langs:
  - csharp
  name: CodeGenerator
  nameWithType: CodeGenerator
  fullName: System.CodeDom.Compiler.CodeGenerator
  type: Class
  summary: "Provides an example implementation of the <xref href=&quot;System.CodeDom.Compiler.ICodeGenerator&quot;></xref> interface. This class is abstract."
  remarks: "This is a useful base class for code generators to derive from. Code generators are capable of rendering source code in a specific language according to the structure of a Code Document Object Model (CodeDOM) graph. This class provides many functions and methods to generate specific types of code from a CodeDOM graph.      > [!NOTE] >  This class contains a link demand and an inheritance demand at the class level that applies to all members. A <xref:System.Security.SecurityException> is thrown when either the immediate caller or the derived class does not have full-trust permission. For details about security demands, see [Link Demands](~/add/includes/ajax-current-ext-md.md) and [Inheritance Demands](http://msdn.microsoft.com/en-us/28b9adbb-8f08-4f10-b856-dbf59eb932d9)."
  syntax:
    content: 'public abstract class CodeGenerator : System.CodeDom.Compiler.ICodeGenerator'
  inheritance:
  - System.Object
  implements:
  - System.CodeDom.Compiler.ICodeGenerator
  inheritedMembers: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.#ctor
  id: '#ctor'
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: CodeGenerator()
  nameWithType: CodeGenerator.CodeGenerator()
  fullName: System.CodeDom.Compiler.CodeGenerator.CodeGenerator()
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Initializes a new instance of the <xref href=&quot;System.CodeDom.Compiler.CodeGenerator&quot;></xref> class."
  syntax:
    content: protected CodeGenerator ();
    parameters: []
  overload: System.CodeDom.Compiler.CodeGenerator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.ContinueOnNewLine(System.String)
  id: ContinueOnNewLine(System.String)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: ContinueOnNewLine(String)
  nameWithType: CodeGenerator.ContinueOnNewLine(String)
  fullName: System.CodeDom.Compiler.CodeGenerator.ContinueOnNewLine(String)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates a line-continuation character and outputs the specified string on a new line."
  syntax:
    content: protected virtual void ContinueOnNewLine (string st);
    parameters:
    - id: st
      type: System.String
      description: "The string to write on the new line."
  overload: System.CodeDom.Compiler.CodeGenerator.ContinueOnNewLine*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.CreateEscapedIdentifier(System.String)
  id: CreateEscapedIdentifier(System.String)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: CreateEscapedIdentifier(String)
  nameWithType: CodeGenerator.CreateEscapedIdentifier(String)
  fullName: System.CodeDom.Compiler.CodeGenerator.CreateEscapedIdentifier(String)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Creates an escaped identifier for the specified value."
  remarks: "CreateEscapedIdentifier tests whether the identifier conflicts with reserved or language keywords, and if so, returns an equivalent name with language-specific escape code formatting. The returned name is referred to an escaped identifier. The escaped identifier contains the same `value` but includes escape code formatting to differentiate it from conflicting keywords. For example, `value` could be preceded by an at sign (&quot;@&quot;) or delimited by square brackets (&quot;[&quot; and &quot;]&quot;) to create an escaped identifier.      > [!NOTE] >  The default implementation of this method does nothing."
  syntax:
    content: protected abstract string CreateEscapedIdentifier (string value);
    parameters:
    - id: value
      type: System.String
      description: "The string to create an escaped identifier for."
    return:
      type: System.String
      description: "The escaped identifier for the value."
  overload: System.CodeDom.Compiler.CodeGenerator.CreateEscapedIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.CreateValidIdentifier(System.String)
  id: CreateValidIdentifier(System.String)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: CreateValidIdentifier(String)
  nameWithType: CodeGenerator.CreateValidIdentifier(String)
  fullName: System.CodeDom.Compiler.CodeGenerator.CreateValidIdentifier(String)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Creates a valid identifier for the specified value."
  remarks: "CreateValidIdentifier tests whether the identifier conflicts with reserved or language keywords, and if so, returns a valid identifier name that does not conflict. The returned identifier contains the same `value` but includes escape code formatting to differentiate it from conflicting keywords. Typically, if the value requires modification, it is preceded by an underscore &quot;_&quot;.      > [!NOTE] >  The default implementation of this method does nothing."
  syntax:
    content: protected abstract string CreateValidIdentifier (string value);
    parameters:
    - id: value
      type: System.String
      description: "A string to create a valid identifier for."
    return:
      type: System.String
      description: "A valid identifier for the value."
  overload: System.CodeDom.Compiler.CodeGenerator.CreateValidIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.CurrentClass
  id: CurrentClass
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: CurrentClass
  nameWithType: CodeGenerator.CurrentClass
  fullName: System.CodeDom.Compiler.CodeGenerator.CurrentClass
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Gets the code type declaration for the current class."
  syntax:
    content: protected System.CodeDom.CodeTypeDeclaration CurrentClass { get; }
    return:
      type: System.CodeDom.CodeTypeDeclaration
      description: "The code type declaration for the current class."
  overload: System.CodeDom.Compiler.CodeGenerator.CurrentClass*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.CurrentMember
  id: CurrentMember
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: CurrentMember
  nameWithType: CodeGenerator.CurrentMember
  fullName: System.CodeDom.Compiler.CodeGenerator.CurrentMember
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Gets the current member of the class."
  syntax:
    content: protected System.CodeDom.CodeTypeMember CurrentMember { get; }
    return:
      type: System.CodeDom.CodeTypeMember
      description: "The current member of the class."
  overload: System.CodeDom.Compiler.CodeGenerator.CurrentMember*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.CurrentMemberName
  id: CurrentMemberName
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: CurrentMemberName
  nameWithType: CodeGenerator.CurrentMemberName
  fullName: System.CodeDom.Compiler.CodeGenerator.CurrentMemberName
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Gets the current member name."
  syntax:
    content: protected string CurrentMemberName { get; }
    return:
      type: System.String
      description: "The name of the current member."
  overload: System.CodeDom.Compiler.CodeGenerator.CurrentMemberName*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.CurrentTypeName
  id: CurrentTypeName
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: CurrentTypeName
  nameWithType: CodeGenerator.CurrentTypeName
  fullName: System.CodeDom.Compiler.CodeGenerator.CurrentTypeName
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Gets the current class name."
  syntax:
    content: protected string CurrentTypeName { get; }
    return:
      type: System.String
      description: "The current class name."
  overload: System.CodeDom.Compiler.CodeGenerator.CurrentTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateArgumentReferenceExpression(System.CodeDom.CodeArgumentReferenceExpression)
  id: GenerateArgumentReferenceExpression(System.CodeDom.CodeArgumentReferenceExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateArgumentReferenceExpression(CodeArgumentReferenceExpression)
  nameWithType: CodeGenerator.GenerateArgumentReferenceExpression(CodeArgumentReferenceExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateArgumentReferenceExpression(CodeArgumentReferenceExpression)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified argument reference expression."
  syntax:
    content: protected abstract void GenerateArgumentReferenceExpression (System.CodeDom.CodeArgumentReferenceExpression e);
    parameters:
    - id: e
      type: System.CodeDom.CodeArgumentReferenceExpression
      description: "A <xref href=&quot;System.CodeDom.CodeArgumentReferenceExpression&quot;></xref> that indicates the expression to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateArgumentReferenceExpression*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateArrayCreateExpression(System.CodeDom.CodeArrayCreateExpression)
  id: GenerateArrayCreateExpression(System.CodeDom.CodeArrayCreateExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateArrayCreateExpression(CodeArrayCreateExpression)
  nameWithType: CodeGenerator.GenerateArrayCreateExpression(CodeArrayCreateExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateArrayCreateExpression(CodeArrayCreateExpression)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified array creation expression."
  syntax:
    content: protected abstract void GenerateArrayCreateExpression (System.CodeDom.CodeArrayCreateExpression e);
    parameters:
    - id: e
      type: System.CodeDom.CodeArrayCreateExpression
      description: "A <xref href=&quot;System.CodeDom.CodeArrayCreateExpression&quot;></xref> that indicates the expression to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateArrayCreateExpression*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateArrayIndexerExpression(System.CodeDom.CodeArrayIndexerExpression)
  id: GenerateArrayIndexerExpression(System.CodeDom.CodeArrayIndexerExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateArrayIndexerExpression(CodeArrayIndexerExpression)
  nameWithType: CodeGenerator.GenerateArrayIndexerExpression(CodeArrayIndexerExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateArrayIndexerExpression(CodeArrayIndexerExpression)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified array indexer expression."
  syntax:
    content: protected abstract void GenerateArrayIndexerExpression (System.CodeDom.CodeArrayIndexerExpression e);
    parameters:
    - id: e
      type: System.CodeDom.CodeArrayIndexerExpression
      description: "A <xref href=&quot;System.CodeDom.CodeArrayIndexerExpression&quot;></xref> that indicates the expression to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateArrayIndexerExpression*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateAssignStatement(System.CodeDom.CodeAssignStatement)
  id: GenerateAssignStatement(System.CodeDom.CodeAssignStatement)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateAssignStatement(CodeAssignStatement)
  nameWithType: CodeGenerator.GenerateAssignStatement(CodeAssignStatement)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateAssignStatement(CodeAssignStatement)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified assignment statement."
  syntax:
    content: protected abstract void GenerateAssignStatement (System.CodeDom.CodeAssignStatement e);
    parameters:
    - id: e
      type: System.CodeDom.CodeAssignStatement
      description: "A <xref href=&quot;System.CodeDom.CodeAssignStatement&quot;></xref> that indicates the statement to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateAssignStatement*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateAttachEventStatement(System.CodeDom.CodeAttachEventStatement)
  id: GenerateAttachEventStatement(System.CodeDom.CodeAttachEventStatement)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateAttachEventStatement(CodeAttachEventStatement)
  nameWithType: CodeGenerator.GenerateAttachEventStatement(CodeAttachEventStatement)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateAttachEventStatement(CodeAttachEventStatement)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified attach event statement."
  syntax:
    content: protected abstract void GenerateAttachEventStatement (System.CodeDom.CodeAttachEventStatement e);
    parameters:
    - id: e
      type: System.CodeDom.CodeAttachEventStatement
      description: "A <xref href=&quot;System.CodeDom.CodeAttachEventStatement&quot;></xref> that indicates the statement to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateAttachEventStatement*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateAttributeDeclarationsEnd(System.CodeDom.CodeAttributeDeclarationCollection)
  id: GenerateAttributeDeclarationsEnd(System.CodeDom.CodeAttributeDeclarationCollection)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateAttributeDeclarationsEnd(CodeAttributeDeclarationCollection)
  nameWithType: CodeGenerator.GenerateAttributeDeclarationsEnd(CodeAttributeDeclarationCollection)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateAttributeDeclarationsEnd(CodeAttributeDeclarationCollection)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified attribute block end."
  syntax:
    content: protected abstract void GenerateAttributeDeclarationsEnd (System.CodeDom.CodeAttributeDeclarationCollection attributes);
    parameters:
    - id: attributes
      type: System.CodeDom.CodeAttributeDeclarationCollection
      description: "A <xref href=&quot;System.CodeDom.CodeAttributeDeclarationCollection&quot;></xref> that indicates the end of the attribute block to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateAttributeDeclarationsEnd*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateAttributeDeclarationsStart(System.CodeDom.CodeAttributeDeclarationCollection)
  id: GenerateAttributeDeclarationsStart(System.CodeDom.CodeAttributeDeclarationCollection)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateAttributeDeclarationsStart(CodeAttributeDeclarationCollection)
  nameWithType: CodeGenerator.GenerateAttributeDeclarationsStart(CodeAttributeDeclarationCollection)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateAttributeDeclarationsStart(CodeAttributeDeclarationCollection)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified attribute block start."
  syntax:
    content: protected abstract void GenerateAttributeDeclarationsStart (System.CodeDom.CodeAttributeDeclarationCollection attributes);
    parameters:
    - id: attributes
      type: System.CodeDom.CodeAttributeDeclarationCollection
      description: "A <xref href=&quot;System.CodeDom.CodeAttributeDeclarationCollection&quot;></xref> that indicates the start of the attribute block to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateAttributeDeclarationsStart*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateBaseReferenceExpression(System.CodeDom.CodeBaseReferenceExpression)
  id: GenerateBaseReferenceExpression(System.CodeDom.CodeBaseReferenceExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateBaseReferenceExpression(CodeBaseReferenceExpression)
  nameWithType: CodeGenerator.GenerateBaseReferenceExpression(CodeBaseReferenceExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateBaseReferenceExpression(CodeBaseReferenceExpression)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified base reference expression."
  syntax:
    content: protected abstract void GenerateBaseReferenceExpression (System.CodeDom.CodeBaseReferenceExpression e);
    parameters:
    - id: e
      type: System.CodeDom.CodeBaseReferenceExpression
      description: "A <xref href=&quot;System.CodeDom.CodeBaseReferenceExpression&quot;></xref> that indicates the expression to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateBaseReferenceExpression*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateBinaryOperatorExpression(System.CodeDom.CodeBinaryOperatorExpression)
  id: GenerateBinaryOperatorExpression(System.CodeDom.CodeBinaryOperatorExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateBinaryOperatorExpression(CodeBinaryOperatorExpression)
  nameWithType: CodeGenerator.GenerateBinaryOperatorExpression(CodeBinaryOperatorExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateBinaryOperatorExpression(CodeBinaryOperatorExpression)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified binary operator expression."
  syntax:
    content: protected virtual void GenerateBinaryOperatorExpression (System.CodeDom.CodeBinaryOperatorExpression e);
    parameters:
    - id: e
      type: System.CodeDom.CodeBinaryOperatorExpression
      description: "A <xref href=&quot;System.CodeDom.CodeBinaryOperatorExpression&quot;></xref> that indicates the expression to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateBinaryOperatorExpression*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>e</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateCastExpression(System.CodeDom.CodeCastExpression)
  id: GenerateCastExpression(System.CodeDom.CodeCastExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateCastExpression(CodeCastExpression)
  nameWithType: CodeGenerator.GenerateCastExpression(CodeCastExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateCastExpression(CodeCastExpression)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified cast expression."
  syntax:
    content: protected abstract void GenerateCastExpression (System.CodeDom.CodeCastExpression e);
    parameters:
    - id: e
      type: System.CodeDom.CodeCastExpression
      description: "A <xref href=&quot;System.CodeDom.CodeCastExpression&quot;></xref> that indicates the expression to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateCastExpression*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  id: GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateCodeFromMember(CodeTypeMember,TextWriter,CodeGeneratorOptions)
  nameWithType: CodeGenerator.GenerateCodeFromMember(CodeTypeMember,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateCodeFromMember(CodeTypeMember,TextWriter,CodeGeneratorOptions)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified class member using the specified text writer and code generator options."
  remarks: "Code for members is generated differently depending on the context. For example, code for methods on an interface or fields on an enumeration is generated differently from code for the same member on a class. This implementation assumes that the member is being generated for the class context."
  syntax:
    content: public virtual void GenerateCodeFromMember (System.CodeDom.CodeTypeMember member, System.IO.TextWriter writer, System.CodeDom.Compiler.CodeGeneratorOptions options);
    parameters:
    - id: member
      type: System.CodeDom.CodeTypeMember
      description: "The class member to generate code for."
    - id: writer
      type: System.IO.TextWriter
      description: "The text writer to output code to."
    - id: options
      type: System.CodeDom.Compiler.CodeGeneratorOptions
      description: "The options to use when generating the code."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateCodeFromMember*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.CodeDom.Compiler.CodeGenerator.Output*> property is not <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateComment(System.CodeDom.CodeComment)
  id: GenerateComment(System.CodeDom.CodeComment)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateComment(CodeComment)
  nameWithType: CodeGenerator.GenerateComment(CodeComment)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateComment(CodeComment)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified comment."
  syntax:
    content: protected abstract void GenerateComment (System.CodeDom.CodeComment e);
    parameters:
    - id: e
      type: System.CodeDom.CodeComment
      description: "A <xref href=&quot;System.CodeDom.CodeComment&quot;></xref> to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateComment*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateCommentStatement(System.CodeDom.CodeCommentStatement)
  id: GenerateCommentStatement(System.CodeDom.CodeCommentStatement)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateCommentStatement(CodeCommentStatement)
  nameWithType: CodeGenerator.GenerateCommentStatement(CodeCommentStatement)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateCommentStatement(CodeCommentStatement)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified comment statement."
  syntax:
    content: protected virtual void GenerateCommentStatement (System.CodeDom.CodeCommentStatement e);
    parameters:
    - id: e
      type: System.CodeDom.CodeCommentStatement
      description: "The statement to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateCommentStatement*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref:System.CodeDom.CodeCommentStatement.Comment*> property of <code>e </code>is not set."
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateCommentStatements(System.CodeDom.CodeCommentStatementCollection)
  id: GenerateCommentStatements(System.CodeDom.CodeCommentStatementCollection)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateCommentStatements(CodeCommentStatementCollection)
  nameWithType: CodeGenerator.GenerateCommentStatements(CodeCommentStatementCollection)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateCommentStatements(CodeCommentStatementCollection)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified comment statements."
  syntax:
    content: protected virtual void GenerateCommentStatements (System.CodeDom.CodeCommentStatementCollection e);
    parameters:
    - id: e
      type: System.CodeDom.CodeCommentStatementCollection
      description: "The expression to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateCommentStatements*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateCompileUnit(System.CodeDom.CodeCompileUnit)
  id: GenerateCompileUnit(System.CodeDom.CodeCompileUnit)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateCompileUnit(CodeCompileUnit)
  nameWithType: CodeGenerator.GenerateCompileUnit(CodeCompileUnit)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateCompileUnit(CodeCompileUnit)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified compile unit."
  syntax:
    content: protected virtual void GenerateCompileUnit (System.CodeDom.CodeCompileUnit e);
    parameters:
    - id: e
      type: System.CodeDom.CodeCompileUnit
      description: "The compile unit to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateCompileUnit*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateCompileUnitEnd(System.CodeDom.CodeCompileUnit)
  id: GenerateCompileUnitEnd(System.CodeDom.CodeCompileUnit)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateCompileUnitEnd(CodeCompileUnit)
  nameWithType: CodeGenerator.GenerateCompileUnitEnd(CodeCompileUnit)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateCompileUnitEnd(CodeCompileUnit)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the end of a compile unit."
  syntax:
    content: protected virtual void GenerateCompileUnitEnd (System.CodeDom.CodeCompileUnit e);
    parameters:
    - id: e
      type: System.CodeDom.CodeCompileUnit
      description: "The compile unit to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateCompileUnitEnd*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateCompileUnitStart(System.CodeDom.CodeCompileUnit)
  id: GenerateCompileUnitStart(System.CodeDom.CodeCompileUnit)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateCompileUnitStart(CodeCompileUnit)
  nameWithType: CodeGenerator.GenerateCompileUnitStart(CodeCompileUnit)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateCompileUnitStart(CodeCompileUnit)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the start of a compile unit."
  syntax:
    content: protected virtual void GenerateCompileUnitStart (System.CodeDom.CodeCompileUnit e);
    parameters:
    - id: e
      type: System.CodeDom.CodeCompileUnit
      description: "The compile unit to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateCompileUnitStart*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateConditionStatement(System.CodeDom.CodeConditionStatement)
  id: GenerateConditionStatement(System.CodeDom.CodeConditionStatement)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateConditionStatement(CodeConditionStatement)
  nameWithType: CodeGenerator.GenerateConditionStatement(CodeConditionStatement)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateConditionStatement(CodeConditionStatement)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified conditional statement."
  remarks: "For most languages, this method will generate code for an `if` statement."
  syntax:
    content: protected abstract void GenerateConditionStatement (System.CodeDom.CodeConditionStatement e);
    parameters:
    - id: e
      type: System.CodeDom.CodeConditionStatement
      description: "The statement to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateConditionStatement*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateConstructor(System.CodeDom.CodeConstructor,System.CodeDom.CodeTypeDeclaration)
  id: GenerateConstructor(System.CodeDom.CodeConstructor,System.CodeDom.CodeTypeDeclaration)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateConstructor(CodeConstructor,CodeTypeDeclaration)
  nameWithType: CodeGenerator.GenerateConstructor(CodeConstructor,CodeTypeDeclaration)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateConstructor(CodeConstructor,CodeTypeDeclaration)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified constructor."
  syntax:
    content: protected abstract void GenerateConstructor (System.CodeDom.CodeConstructor e, System.CodeDom.CodeTypeDeclaration c);
    parameters:
    - id: e
      type: System.CodeDom.CodeConstructor
      description: "The constructor to generate code for."
    - id: c
      type: System.CodeDom.CodeTypeDeclaration
      description: "The type of the object that this constructor constructs."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateConstructor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateDecimalValue(System.Decimal)
  id: GenerateDecimalValue(System.Decimal)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateDecimalValue(Decimal)
  nameWithType: CodeGenerator.GenerateDecimalValue(Decimal)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateDecimalValue(Decimal)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified decimal value."
  syntax:
    content: protected virtual void GenerateDecimalValue (decimal d);
    parameters:
    - id: d
      type: System.Decimal
      description: "The decimal value to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateDecimalValue*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateDefaultValueExpression(System.CodeDom.CodeDefaultValueExpression)
  id: GenerateDefaultValueExpression(System.CodeDom.CodeDefaultValueExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateDefaultValueExpression(CodeDefaultValueExpression)
  nameWithType: CodeGenerator.GenerateDefaultValueExpression(CodeDefaultValueExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateDefaultValueExpression(CodeDefaultValueExpression)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified reference to a default value."
  syntax:
    content: protected virtual void GenerateDefaultValueExpression (System.CodeDom.CodeDefaultValueExpression e);
    parameters:
    - id: e
      type: System.CodeDom.CodeDefaultValueExpression
      description: "The reference to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateDefaultValueExpression*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateDelegateCreateExpression(System.CodeDom.CodeDelegateCreateExpression)
  id: GenerateDelegateCreateExpression(System.CodeDom.CodeDelegateCreateExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateDelegateCreateExpression(CodeDelegateCreateExpression)
  nameWithType: CodeGenerator.GenerateDelegateCreateExpression(CodeDelegateCreateExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateDelegateCreateExpression(CodeDelegateCreateExpression)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified delegate creation expression."
  syntax:
    content: protected abstract void GenerateDelegateCreateExpression (System.CodeDom.CodeDelegateCreateExpression e);
    parameters:
    - id: e
      type: System.CodeDom.CodeDelegateCreateExpression
      description: "The expression to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateDelegateCreateExpression*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateDelegateInvokeExpression(System.CodeDom.CodeDelegateInvokeExpression)
  id: GenerateDelegateInvokeExpression(System.CodeDom.CodeDelegateInvokeExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateDelegateInvokeExpression(CodeDelegateInvokeExpression)
  nameWithType: CodeGenerator.GenerateDelegateInvokeExpression(CodeDelegateInvokeExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateDelegateInvokeExpression(CodeDelegateInvokeExpression)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified delegate invoke expression."
  syntax:
    content: protected abstract void GenerateDelegateInvokeExpression (System.CodeDom.CodeDelegateInvokeExpression e);
    parameters:
    - id: e
      type: System.CodeDom.CodeDelegateInvokeExpression
      description: "The expression to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateDelegateInvokeExpression*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateDirectionExpression(System.CodeDom.CodeDirectionExpression)
  id: GenerateDirectionExpression(System.CodeDom.CodeDirectionExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateDirectionExpression(CodeDirectionExpression)
  nameWithType: CodeGenerator.GenerateDirectionExpression(CodeDirectionExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateDirectionExpression(CodeDirectionExpression)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified direction expression."
  syntax:
    content: protected virtual void GenerateDirectionExpression (System.CodeDom.CodeDirectionExpression e);
    parameters:
    - id: e
      type: System.CodeDom.CodeDirectionExpression
      description: "The expression to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateDirectionExpression*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateDirectives(System.CodeDom.CodeDirectiveCollection)
  id: GenerateDirectives(System.CodeDom.CodeDirectiveCollection)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateDirectives(CodeDirectiveCollection)
  nameWithType: CodeGenerator.GenerateDirectives(CodeDirectiveCollection)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateDirectives(CodeDirectiveCollection)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified code directives."
  syntax:
    content: protected virtual void GenerateDirectives (System.CodeDom.CodeDirectiveCollection directives);
    parameters:
    - id: directives
      type: System.CodeDom.CodeDirectiveCollection
      description: "The code directives to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateDirectives*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateDoubleValue(System.Double)
  id: GenerateDoubleValue(System.Double)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateDoubleValue(Double)
  nameWithType: CodeGenerator.GenerateDoubleValue(Double)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateDoubleValue(Double)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for a double-precision floating point number."
  syntax:
    content: protected virtual void GenerateDoubleValue (double d);
    parameters:
    - id: d
      type: System.Double
      description: "The value to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateDoubleValue*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateEntryPointMethod(System.CodeDom.CodeEntryPointMethod,System.CodeDom.CodeTypeDeclaration)
  id: GenerateEntryPointMethod(System.CodeDom.CodeEntryPointMethod,System.CodeDom.CodeTypeDeclaration)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateEntryPointMethod(CodeEntryPointMethod,CodeTypeDeclaration)
  nameWithType: CodeGenerator.GenerateEntryPointMethod(CodeEntryPointMethod,CodeTypeDeclaration)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateEntryPointMethod(CodeEntryPointMethod,CodeTypeDeclaration)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified entry point method."
  syntax:
    content: protected abstract void GenerateEntryPointMethod (System.CodeDom.CodeEntryPointMethod e, System.CodeDom.CodeTypeDeclaration c);
    parameters:
    - id: e
      type: System.CodeDom.CodeEntryPointMethod
      description: "The entry point for the code."
    - id: c
      type: System.CodeDom.CodeTypeDeclaration
      description: "The code that declares the type."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateEntryPointMethod*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateEvent(System.CodeDom.CodeMemberEvent,System.CodeDom.CodeTypeDeclaration)
  id: GenerateEvent(System.CodeDom.CodeMemberEvent,System.CodeDom.CodeTypeDeclaration)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateEvent(CodeMemberEvent,CodeTypeDeclaration)
  nameWithType: CodeGenerator.GenerateEvent(CodeMemberEvent,CodeTypeDeclaration)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateEvent(CodeMemberEvent,CodeTypeDeclaration)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified event."
  syntax:
    content: protected abstract void GenerateEvent (System.CodeDom.CodeMemberEvent e, System.CodeDom.CodeTypeDeclaration c);
    parameters:
    - id: e
      type: System.CodeDom.CodeMemberEvent
      description: "The member event to generate code for."
    - id: c
      type: System.CodeDom.CodeTypeDeclaration
      description: "The type of the object that this event occurs on."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateEvent*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateEventReferenceExpression(System.CodeDom.CodeEventReferenceExpression)
  id: GenerateEventReferenceExpression(System.CodeDom.CodeEventReferenceExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateEventReferenceExpression(CodeEventReferenceExpression)
  nameWithType: CodeGenerator.GenerateEventReferenceExpression(CodeEventReferenceExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateEventReferenceExpression(CodeEventReferenceExpression)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified event reference expression."
  syntax:
    content: protected abstract void GenerateEventReferenceExpression (System.CodeDom.CodeEventReferenceExpression e);
    parameters:
    - id: e
      type: System.CodeDom.CodeEventReferenceExpression
      description: "The expression to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateEventReferenceExpression*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateExpression(System.CodeDom.CodeExpression)
  id: GenerateExpression(System.CodeDom.CodeExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateExpression(CodeExpression)
  nameWithType: CodeGenerator.GenerateExpression(CodeExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateExpression(CodeExpression)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified code expression."
  syntax:
    content: protected void GenerateExpression (System.CodeDom.CodeExpression e);
    parameters:
    - id: e
      type: System.CodeDom.CodeExpression
      description: "The code expression to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateExpression*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>e</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>e</code> is not a valid <xref href=&quot;System.CodeDom.CodeStatement&quot;></xref>."
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateExpressionStatement(System.CodeDom.CodeExpressionStatement)
  id: GenerateExpressionStatement(System.CodeDom.CodeExpressionStatement)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateExpressionStatement(CodeExpressionStatement)
  nameWithType: CodeGenerator.GenerateExpressionStatement(CodeExpressionStatement)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateExpressionStatement(CodeExpressionStatement)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified expression statement."
  syntax:
    content: protected abstract void GenerateExpressionStatement (System.CodeDom.CodeExpressionStatement e);
    parameters:
    - id: e
      type: System.CodeDom.CodeExpressionStatement
      description: "The statement to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateExpressionStatement*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateField(System.CodeDom.CodeMemberField)
  id: GenerateField(System.CodeDom.CodeMemberField)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateField(CodeMemberField)
  nameWithType: CodeGenerator.GenerateField(CodeMemberField)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateField(CodeMemberField)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified member field."
  syntax:
    content: protected abstract void GenerateField (System.CodeDom.CodeMemberField e);
    parameters:
    - id: e
      type: System.CodeDom.CodeMemberField
      description: "The field to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateField*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateFieldReferenceExpression(System.CodeDom.CodeFieldReferenceExpression)
  id: GenerateFieldReferenceExpression(System.CodeDom.CodeFieldReferenceExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateFieldReferenceExpression(CodeFieldReferenceExpression)
  nameWithType: CodeGenerator.GenerateFieldReferenceExpression(CodeFieldReferenceExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateFieldReferenceExpression(CodeFieldReferenceExpression)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified field reference expression."
  syntax:
    content: protected abstract void GenerateFieldReferenceExpression (System.CodeDom.CodeFieldReferenceExpression e);
    parameters:
    - id: e
      type: System.CodeDom.CodeFieldReferenceExpression
      description: "The expression to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateFieldReferenceExpression*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateGotoStatement(System.CodeDom.CodeGotoStatement)
  id: GenerateGotoStatement(System.CodeDom.CodeGotoStatement)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateGotoStatement(CodeGotoStatement)
  nameWithType: CodeGenerator.GenerateGotoStatement(CodeGotoStatement)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateGotoStatement(CodeGotoStatement)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified <xref uid=&quot;langword_csharp_goto&quot; name=&quot;goto&quot; href=&quot;&quot;></xref> statement."
  syntax:
    content: protected abstract void GenerateGotoStatement (System.CodeDom.CodeGotoStatement e);
    parameters:
    - id: e
      type: System.CodeDom.CodeGotoStatement
      description: "The expression to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateGotoStatement*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateIndexerExpression(System.CodeDom.CodeIndexerExpression)
  id: GenerateIndexerExpression(System.CodeDom.CodeIndexerExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateIndexerExpression(CodeIndexerExpression)
  nameWithType: CodeGenerator.GenerateIndexerExpression(CodeIndexerExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateIndexerExpression(CodeIndexerExpression)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified indexer expression."
  syntax:
    content: protected abstract void GenerateIndexerExpression (System.CodeDom.CodeIndexerExpression e);
    parameters:
    - id: e
      type: System.CodeDom.CodeIndexerExpression
      description: "The expression to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateIndexerExpression*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateIterationStatement(System.CodeDom.CodeIterationStatement)
  id: GenerateIterationStatement(System.CodeDom.CodeIterationStatement)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateIterationStatement(CodeIterationStatement)
  nameWithType: CodeGenerator.GenerateIterationStatement(CodeIterationStatement)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateIterationStatement(CodeIterationStatement)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified iteration statement."
  remarks: "For most languages, this method will generate code for a `for` loop or a `while` loop."
  syntax:
    content: protected abstract void GenerateIterationStatement (System.CodeDom.CodeIterationStatement e);
    parameters:
    - id: e
      type: System.CodeDom.CodeIterationStatement
      description: "The statement to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateIterationStatement*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateLabeledStatement(System.CodeDom.CodeLabeledStatement)
  id: GenerateLabeledStatement(System.CodeDom.CodeLabeledStatement)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateLabeledStatement(CodeLabeledStatement)
  nameWithType: CodeGenerator.GenerateLabeledStatement(CodeLabeledStatement)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateLabeledStatement(CodeLabeledStatement)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified labeled statement."
  syntax:
    content: protected abstract void GenerateLabeledStatement (System.CodeDom.CodeLabeledStatement e);
    parameters:
    - id: e
      type: System.CodeDom.CodeLabeledStatement
      description: "The statement to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateLabeledStatement*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateLinePragmaEnd(System.CodeDom.CodeLinePragma)
  id: GenerateLinePragmaEnd(System.CodeDom.CodeLinePragma)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateLinePragmaEnd(CodeLinePragma)
  nameWithType: CodeGenerator.GenerateLinePragmaEnd(CodeLinePragma)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateLinePragmaEnd(CodeLinePragma)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified line pragma end."
  syntax:
    content: protected abstract void GenerateLinePragmaEnd (System.CodeDom.CodeLinePragma e);
    parameters:
    - id: e
      type: System.CodeDom.CodeLinePragma
      description: "The end of the line pragma to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateLinePragmaEnd*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateLinePragmaStart(System.CodeDom.CodeLinePragma)
  id: GenerateLinePragmaStart(System.CodeDom.CodeLinePragma)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateLinePragmaStart(CodeLinePragma)
  nameWithType: CodeGenerator.GenerateLinePragmaStart(CodeLinePragma)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateLinePragmaStart(CodeLinePragma)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified line pragma start."
  syntax:
    content: protected abstract void GenerateLinePragmaStart (System.CodeDom.CodeLinePragma e);
    parameters:
    - id: e
      type: System.CodeDom.CodeLinePragma
      description: "The start of the line pragma to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateLinePragmaStart*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateMethod(System.CodeDom.CodeMemberMethod,System.CodeDom.CodeTypeDeclaration)
  id: GenerateMethod(System.CodeDom.CodeMemberMethod,System.CodeDom.CodeTypeDeclaration)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateMethod(CodeMemberMethod,CodeTypeDeclaration)
  nameWithType: CodeGenerator.GenerateMethod(CodeMemberMethod,CodeTypeDeclaration)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateMethod(CodeMemberMethod,CodeTypeDeclaration)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified method."
  syntax:
    content: protected abstract void GenerateMethod (System.CodeDom.CodeMemberMethod e, System.CodeDom.CodeTypeDeclaration c);
    parameters:
    - id: e
      type: System.CodeDom.CodeMemberMethod
      description: "The member method to generate code for."
    - id: c
      type: System.CodeDom.CodeTypeDeclaration
      description: "The type of the object that this method occurs on."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateMethod*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateMethodInvokeExpression(System.CodeDom.CodeMethodInvokeExpression)
  id: GenerateMethodInvokeExpression(System.CodeDom.CodeMethodInvokeExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateMethodInvokeExpression(CodeMethodInvokeExpression)
  nameWithType: CodeGenerator.GenerateMethodInvokeExpression(CodeMethodInvokeExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateMethodInvokeExpression(CodeMethodInvokeExpression)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified method invoke expression."
  syntax:
    content: protected abstract void GenerateMethodInvokeExpression (System.CodeDom.CodeMethodInvokeExpression e);
    parameters:
    - id: e
      type: System.CodeDom.CodeMethodInvokeExpression
      description: "The expression to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateMethodInvokeExpression*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateMethodReferenceExpression(System.CodeDom.CodeMethodReferenceExpression)
  id: GenerateMethodReferenceExpression(System.CodeDom.CodeMethodReferenceExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateMethodReferenceExpression(CodeMethodReferenceExpression)
  nameWithType: CodeGenerator.GenerateMethodReferenceExpression(CodeMethodReferenceExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateMethodReferenceExpression(CodeMethodReferenceExpression)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified method reference expression."
  syntax:
    content: protected abstract void GenerateMethodReferenceExpression (System.CodeDom.CodeMethodReferenceExpression e);
    parameters:
    - id: e
      type: System.CodeDom.CodeMethodReferenceExpression
      description: "The expression to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateMethodReferenceExpression*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateMethodReturnStatement(System.CodeDom.CodeMethodReturnStatement)
  id: GenerateMethodReturnStatement(System.CodeDom.CodeMethodReturnStatement)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateMethodReturnStatement(CodeMethodReturnStatement)
  nameWithType: CodeGenerator.GenerateMethodReturnStatement(CodeMethodReturnStatement)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateMethodReturnStatement(CodeMethodReturnStatement)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified method return statement."
  syntax:
    content: protected abstract void GenerateMethodReturnStatement (System.CodeDom.CodeMethodReturnStatement e);
    parameters:
    - id: e
      type: System.CodeDom.CodeMethodReturnStatement
      description: "The statement to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateMethodReturnStatement*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateNamespace(System.CodeDom.CodeNamespace)
  id: GenerateNamespace(System.CodeDom.CodeNamespace)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateNamespace(CodeNamespace)
  nameWithType: CodeGenerator.GenerateNamespace(CodeNamespace)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateNamespace(CodeNamespace)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified namespace."
  syntax:
    content: protected virtual void GenerateNamespace (System.CodeDom.CodeNamespace e);
    parameters:
    - id: e
      type: System.CodeDom.CodeNamespace
      description: "The namespace to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateNamespace*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceEnd(System.CodeDom.CodeNamespace)
  id: GenerateNamespaceEnd(System.CodeDom.CodeNamespace)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateNamespaceEnd(CodeNamespace)
  nameWithType: CodeGenerator.GenerateNamespaceEnd(CodeNamespace)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceEnd(CodeNamespace)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the end of a namespace."
  syntax:
    content: protected abstract void GenerateNamespaceEnd (System.CodeDom.CodeNamespace e);
    parameters:
    - id: e
      type: System.CodeDom.CodeNamespace
      description: "The namespace to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceEnd*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceImport(System.CodeDom.CodeNamespaceImport)
  id: GenerateNamespaceImport(System.CodeDom.CodeNamespaceImport)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateNamespaceImport(CodeNamespaceImport)
  nameWithType: CodeGenerator.GenerateNamespaceImport(CodeNamespaceImport)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceImport(CodeNamespaceImport)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified namespace import."
  syntax:
    content: protected abstract void GenerateNamespaceImport (System.CodeDom.CodeNamespaceImport e);
    parameters:
    - id: e
      type: System.CodeDom.CodeNamespaceImport
      description: "The namespace import to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceImport*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceImports(System.CodeDom.CodeNamespace)
  id: GenerateNamespaceImports(System.CodeDom.CodeNamespace)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateNamespaceImports(CodeNamespace)
  nameWithType: CodeGenerator.GenerateNamespaceImports(CodeNamespace)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceImports(CodeNamespace)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified namespace import."
  syntax:
    content: protected void GenerateNamespaceImports (System.CodeDom.CodeNamespace e);
    parameters:
    - id: e
      type: System.CodeDom.CodeNamespace
      description: "The namespace import to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceImports*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateNamespaces(System.CodeDom.CodeCompileUnit)
  id: GenerateNamespaces(System.CodeDom.CodeCompileUnit)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateNamespaces(CodeCompileUnit)
  nameWithType: CodeGenerator.GenerateNamespaces(CodeCompileUnit)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateNamespaces(CodeCompileUnit)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the namespaces in the specified compile unit."
  syntax:
    content: protected void GenerateNamespaces (System.CodeDom.CodeCompileUnit e);
    parameters:
    - id: e
      type: System.CodeDom.CodeCompileUnit
      description: "The compile unit to generate namespaces for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateNamespaces*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceStart(System.CodeDom.CodeNamespace)
  id: GenerateNamespaceStart(System.CodeDom.CodeNamespace)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateNamespaceStart(CodeNamespace)
  nameWithType: CodeGenerator.GenerateNamespaceStart(CodeNamespace)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceStart(CodeNamespace)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the start of a namespace."
  syntax:
    content: protected abstract void GenerateNamespaceStart (System.CodeDom.CodeNamespace e);
    parameters:
    - id: e
      type: System.CodeDom.CodeNamespace
      description: "The namespace to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceStart*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateObjectCreateExpression(System.CodeDom.CodeObjectCreateExpression)
  id: GenerateObjectCreateExpression(System.CodeDom.CodeObjectCreateExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateObjectCreateExpression(CodeObjectCreateExpression)
  nameWithType: CodeGenerator.GenerateObjectCreateExpression(CodeObjectCreateExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateObjectCreateExpression(CodeObjectCreateExpression)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified object creation expression."
  syntax:
    content: protected abstract void GenerateObjectCreateExpression (System.CodeDom.CodeObjectCreateExpression e);
    parameters:
    - id: e
      type: System.CodeDom.CodeObjectCreateExpression
      description: "The expression to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateObjectCreateExpression*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateParameterDeclarationExpression(System.CodeDom.CodeParameterDeclarationExpression)
  id: GenerateParameterDeclarationExpression(System.CodeDom.CodeParameterDeclarationExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateParameterDeclarationExpression(CodeParameterDeclarationExpression)
  nameWithType: CodeGenerator.GenerateParameterDeclarationExpression(CodeParameterDeclarationExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateParameterDeclarationExpression(CodeParameterDeclarationExpression)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified parameter declaration expression."
  syntax:
    content: protected virtual void GenerateParameterDeclarationExpression (System.CodeDom.CodeParameterDeclarationExpression e);
    parameters:
    - id: e
      type: System.CodeDom.CodeParameterDeclarationExpression
      description: "The expression to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateParameterDeclarationExpression*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GeneratePrimitiveExpression(System.CodeDom.CodePrimitiveExpression)
  id: GeneratePrimitiveExpression(System.CodeDom.CodePrimitiveExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GeneratePrimitiveExpression(CodePrimitiveExpression)
  nameWithType: CodeGenerator.GeneratePrimitiveExpression(CodePrimitiveExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GeneratePrimitiveExpression(CodePrimitiveExpression)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified primitive expression."
  syntax:
    content: protected virtual void GeneratePrimitiveExpression (System.CodeDom.CodePrimitiveExpression e);
    parameters:
    - id: e
      type: System.CodeDom.CodePrimitiveExpression
      description: "The expression to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GeneratePrimitiveExpression*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>e</code> uses an invalid data type. Only the following data types are valid:      -   string      -   char      -   byte      -   Int16      -   Int32      -   Int64      -   Single      -   Double      -   Decimal"
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateProperty(System.CodeDom.CodeMemberProperty,System.CodeDom.CodeTypeDeclaration)
  id: GenerateProperty(System.CodeDom.CodeMemberProperty,System.CodeDom.CodeTypeDeclaration)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateProperty(CodeMemberProperty,CodeTypeDeclaration)
  nameWithType: CodeGenerator.GenerateProperty(CodeMemberProperty,CodeTypeDeclaration)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateProperty(CodeMemberProperty,CodeTypeDeclaration)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified property."
  syntax:
    content: protected abstract void GenerateProperty (System.CodeDom.CodeMemberProperty e, System.CodeDom.CodeTypeDeclaration c);
    parameters:
    - id: e
      type: System.CodeDom.CodeMemberProperty
      description: "The property to generate code for."
    - id: c
      type: System.CodeDom.CodeTypeDeclaration
      description: "The type of the object that this property occurs on."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateProperty*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GeneratePropertyReferenceExpression(System.CodeDom.CodePropertyReferenceExpression)
  id: GeneratePropertyReferenceExpression(System.CodeDom.CodePropertyReferenceExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GeneratePropertyReferenceExpression(CodePropertyReferenceExpression)
  nameWithType: CodeGenerator.GeneratePropertyReferenceExpression(CodePropertyReferenceExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GeneratePropertyReferenceExpression(CodePropertyReferenceExpression)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified property reference expression."
  syntax:
    content: protected abstract void GeneratePropertyReferenceExpression (System.CodeDom.CodePropertyReferenceExpression e);
    parameters:
    - id: e
      type: System.CodeDom.CodePropertyReferenceExpression
      description: "The expression to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GeneratePropertyReferenceExpression*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GeneratePropertySetValueReferenceExpression(System.CodeDom.CodePropertySetValueReferenceExpression)
  id: GeneratePropertySetValueReferenceExpression(System.CodeDom.CodePropertySetValueReferenceExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GeneratePropertySetValueReferenceExpression(CodePropertySetValueReferenceExpression)
  nameWithType: CodeGenerator.GeneratePropertySetValueReferenceExpression(CodePropertySetValueReferenceExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GeneratePropertySetValueReferenceExpression(CodePropertySetValueReferenceExpression)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified property set value reference expression."
  syntax:
    content: protected abstract void GeneratePropertySetValueReferenceExpression (System.CodeDom.CodePropertySetValueReferenceExpression e);
    parameters:
    - id: e
      type: System.CodeDom.CodePropertySetValueReferenceExpression
      description: "The expression to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GeneratePropertySetValueReferenceExpression*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateRemoveEventStatement(System.CodeDom.CodeRemoveEventStatement)
  id: GenerateRemoveEventStatement(System.CodeDom.CodeRemoveEventStatement)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateRemoveEventStatement(CodeRemoveEventStatement)
  nameWithType: CodeGenerator.GenerateRemoveEventStatement(CodeRemoveEventStatement)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateRemoveEventStatement(CodeRemoveEventStatement)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified remove event statement."
  syntax:
    content: protected abstract void GenerateRemoveEventStatement (System.CodeDom.CodeRemoveEventStatement e);
    parameters:
    - id: e
      type: System.CodeDom.CodeRemoveEventStatement
      description: "The statement to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateRemoveEventStatement*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateSingleFloatValue(System.Single)
  id: GenerateSingleFloatValue(System.Single)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateSingleFloatValue(Single)
  nameWithType: CodeGenerator.GenerateSingleFloatValue(Single)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateSingleFloatValue(Single)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for a single-precision floating point number."
  syntax:
    content: protected virtual void GenerateSingleFloatValue (float s);
    parameters:
    - id: s
      type: System.Single
      description: "The value to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateSingleFloatValue*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateSnippetCompileUnit(System.CodeDom.CodeSnippetCompileUnit)
  id: GenerateSnippetCompileUnit(System.CodeDom.CodeSnippetCompileUnit)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateSnippetCompileUnit(CodeSnippetCompileUnit)
  nameWithType: CodeGenerator.GenerateSnippetCompileUnit(CodeSnippetCompileUnit)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateSnippetCompileUnit(CodeSnippetCompileUnit)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Outputs the code of the specified literal code fragment compile unit."
  syntax:
    content: protected virtual void GenerateSnippetCompileUnit (System.CodeDom.CodeSnippetCompileUnit e);
    parameters:
    - id: e
      type: System.CodeDom.CodeSnippetCompileUnit
      description: "The literal code fragment compile unit to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateSnippetCompileUnit*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateSnippetExpression(System.CodeDom.CodeSnippetExpression)
  id: GenerateSnippetExpression(System.CodeDom.CodeSnippetExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateSnippetExpression(CodeSnippetExpression)
  nameWithType: CodeGenerator.GenerateSnippetExpression(CodeSnippetExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateSnippetExpression(CodeSnippetExpression)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Outputs the code of the specified literal code fragment expression."
  syntax:
    content: protected abstract void GenerateSnippetExpression (System.CodeDom.CodeSnippetExpression e);
    parameters:
    - id: e
      type: System.CodeDom.CodeSnippetExpression
      description: "The expression to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateSnippetExpression*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateSnippetMember(System.CodeDom.CodeSnippetTypeMember)
  id: GenerateSnippetMember(System.CodeDom.CodeSnippetTypeMember)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateSnippetMember(CodeSnippetTypeMember)
  nameWithType: CodeGenerator.GenerateSnippetMember(CodeSnippetTypeMember)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateSnippetMember(CodeSnippetTypeMember)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Outputs the code of the specified literal code fragment class member."
  syntax:
    content: protected abstract void GenerateSnippetMember (System.CodeDom.CodeSnippetTypeMember e);
    parameters:
    - id: e
      type: System.CodeDom.CodeSnippetTypeMember
      description: "The member to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateSnippetMember*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateSnippetStatement(System.CodeDom.CodeSnippetStatement)
  id: GenerateSnippetStatement(System.CodeDom.CodeSnippetStatement)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateSnippetStatement(CodeSnippetStatement)
  nameWithType: CodeGenerator.GenerateSnippetStatement(CodeSnippetStatement)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateSnippetStatement(CodeSnippetStatement)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Outputs the code of the specified literal code fragment statement."
  syntax:
    content: protected virtual void GenerateSnippetStatement (System.CodeDom.CodeSnippetStatement e);
    parameters:
    - id: e
      type: System.CodeDom.CodeSnippetStatement
      description: "The statement to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateSnippetStatement*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateStatement(System.CodeDom.CodeStatement)
  id: GenerateStatement(System.CodeDom.CodeStatement)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateStatement(CodeStatement)
  nameWithType: CodeGenerator.GenerateStatement(CodeStatement)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateStatement(CodeStatement)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified statement."
  syntax:
    content: protected void GenerateStatement (System.CodeDom.CodeStatement e);
    parameters:
    - id: e
      type: System.CodeDom.CodeStatement
      description: "The statement to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateStatement*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>e</code> is not a valid <xref href=&quot;System.CodeDom.CodeStatement&quot;></xref>."
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateStatements(System.CodeDom.CodeStatementCollection)
  id: GenerateStatements(System.CodeDom.CodeStatementCollection)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateStatements(CodeStatementCollection)
  nameWithType: CodeGenerator.GenerateStatements(CodeStatementCollection)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateStatements(CodeStatementCollection)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified statement collection."
  syntax:
    content: protected void GenerateStatements (System.CodeDom.CodeStatementCollection stms);
    parameters:
    - id: stms
      type: System.CodeDom.CodeStatementCollection
      description: "The statements to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateStatements*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateThisReferenceExpression(System.CodeDom.CodeThisReferenceExpression)
  id: GenerateThisReferenceExpression(System.CodeDom.CodeThisReferenceExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateThisReferenceExpression(CodeThisReferenceExpression)
  nameWithType: CodeGenerator.GenerateThisReferenceExpression(CodeThisReferenceExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateThisReferenceExpression(CodeThisReferenceExpression)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified this reference expression."
  syntax:
    content: protected abstract void GenerateThisReferenceExpression (System.CodeDom.CodeThisReferenceExpression e);
    parameters:
    - id: e
      type: System.CodeDom.CodeThisReferenceExpression
      description: "The expression to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateThisReferenceExpression*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateThrowExceptionStatement(System.CodeDom.CodeThrowExceptionStatement)
  id: GenerateThrowExceptionStatement(System.CodeDom.CodeThrowExceptionStatement)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateThrowExceptionStatement(CodeThrowExceptionStatement)
  nameWithType: CodeGenerator.GenerateThrowExceptionStatement(CodeThrowExceptionStatement)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateThrowExceptionStatement(CodeThrowExceptionStatement)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified throw exception statement."
  syntax:
    content: protected abstract void GenerateThrowExceptionStatement (System.CodeDom.CodeThrowExceptionStatement e);
    parameters:
    - id: e
      type: System.CodeDom.CodeThrowExceptionStatement
      description: "The statement to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateThrowExceptionStatement*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateTryCatchFinallyStatement(System.CodeDom.CodeTryCatchFinallyStatement)
  id: GenerateTryCatchFinallyStatement(System.CodeDom.CodeTryCatchFinallyStatement)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateTryCatchFinallyStatement(CodeTryCatchFinallyStatement)
  nameWithType: CodeGenerator.GenerateTryCatchFinallyStatement(CodeTryCatchFinallyStatement)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateTryCatchFinallyStatement(CodeTryCatchFinallyStatement)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified <xref uid=&quot;langword_csharp_try...catch...finally&quot; name=&quot;try...catch...finally&quot; href=&quot;&quot;></xref> statement."
  syntax:
    content: protected abstract void GenerateTryCatchFinallyStatement (System.CodeDom.CodeTryCatchFinallyStatement e);
    parameters:
    - id: e
      type: System.CodeDom.CodeTryCatchFinallyStatement
      description: "The statement to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateTryCatchFinallyStatement*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateTypeConstructor(System.CodeDom.CodeTypeConstructor)
  id: GenerateTypeConstructor(System.CodeDom.CodeTypeConstructor)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateTypeConstructor(CodeTypeConstructor)
  nameWithType: CodeGenerator.GenerateTypeConstructor(CodeTypeConstructor)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateTypeConstructor(CodeTypeConstructor)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified class constructor."
  syntax:
    content: protected abstract void GenerateTypeConstructor (System.CodeDom.CodeTypeConstructor e);
    parameters:
    - id: e
      type: System.CodeDom.CodeTypeConstructor
      description: "The class constructor to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateTypeConstructor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateTypeEnd(System.CodeDom.CodeTypeDeclaration)
  id: GenerateTypeEnd(System.CodeDom.CodeTypeDeclaration)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateTypeEnd(CodeTypeDeclaration)
  nameWithType: CodeGenerator.GenerateTypeEnd(CodeTypeDeclaration)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateTypeEnd(CodeTypeDeclaration)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified end of the class."
  syntax:
    content: protected abstract void GenerateTypeEnd (System.CodeDom.CodeTypeDeclaration e);
    parameters:
    - id: e
      type: System.CodeDom.CodeTypeDeclaration
      description: "The end of the class to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateTypeEnd*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateTypeOfExpression(System.CodeDom.CodeTypeOfExpression)
  id: GenerateTypeOfExpression(System.CodeDom.CodeTypeOfExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateTypeOfExpression(CodeTypeOfExpression)
  nameWithType: CodeGenerator.GenerateTypeOfExpression(CodeTypeOfExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateTypeOfExpression(CodeTypeOfExpression)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified type of expression."
  syntax:
    content: protected virtual void GenerateTypeOfExpression (System.CodeDom.CodeTypeOfExpression e);
    parameters:
    - id: e
      type: System.CodeDom.CodeTypeOfExpression
      description: "The expression to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateTypeOfExpression*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateTypeReferenceExpression(System.CodeDom.CodeTypeReferenceExpression)
  id: GenerateTypeReferenceExpression(System.CodeDom.CodeTypeReferenceExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateTypeReferenceExpression(CodeTypeReferenceExpression)
  nameWithType: CodeGenerator.GenerateTypeReferenceExpression(CodeTypeReferenceExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateTypeReferenceExpression(CodeTypeReferenceExpression)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified type reference expression."
  syntax:
    content: protected virtual void GenerateTypeReferenceExpression (System.CodeDom.CodeTypeReferenceExpression e);
    parameters:
    - id: e
      type: System.CodeDom.CodeTypeReferenceExpression
      description: "The expression to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateTypeReferenceExpression*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateTypes(System.CodeDom.CodeNamespace)
  id: GenerateTypes(System.CodeDom.CodeNamespace)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateTypes(CodeNamespace)
  nameWithType: CodeGenerator.GenerateTypes(CodeNamespace)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateTypes(CodeNamespace)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified namespace and the classes it contains."
  syntax:
    content: protected void GenerateTypes (System.CodeDom.CodeNamespace e);
    parameters:
    - id: e
      type: System.CodeDom.CodeNamespace
      description: "The namespace to generate classes for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateTypes*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateTypeStart(System.CodeDom.CodeTypeDeclaration)
  id: GenerateTypeStart(System.CodeDom.CodeTypeDeclaration)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateTypeStart(CodeTypeDeclaration)
  nameWithType: CodeGenerator.GenerateTypeStart(CodeTypeDeclaration)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateTypeStart(CodeTypeDeclaration)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified start of the class."
  syntax:
    content: protected abstract void GenerateTypeStart (System.CodeDom.CodeTypeDeclaration e);
    parameters:
    - id: e
      type: System.CodeDom.CodeTypeDeclaration
      description: "The start of the class to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateTypeStart*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateVariableDeclarationStatement(System.CodeDom.CodeVariableDeclarationStatement)
  id: GenerateVariableDeclarationStatement(System.CodeDom.CodeVariableDeclarationStatement)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateVariableDeclarationStatement(CodeVariableDeclarationStatement)
  nameWithType: CodeGenerator.GenerateVariableDeclarationStatement(CodeVariableDeclarationStatement)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateVariableDeclarationStatement(CodeVariableDeclarationStatement)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified variable declaration statement."
  syntax:
    content: protected abstract void GenerateVariableDeclarationStatement (System.CodeDom.CodeVariableDeclarationStatement e);
    parameters:
    - id: e
      type: System.CodeDom.CodeVariableDeclarationStatement
      description: "The statement to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateVariableDeclarationStatement*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateVariableReferenceExpression(System.CodeDom.CodeVariableReferenceExpression)
  id: GenerateVariableReferenceExpression(System.CodeDom.CodeVariableReferenceExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GenerateVariableReferenceExpression(CodeVariableReferenceExpression)
  nameWithType: CodeGenerator.GenerateVariableReferenceExpression(CodeVariableReferenceExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateVariableReferenceExpression(CodeVariableReferenceExpression)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified variable reference expression."
  syntax:
    content: protected abstract void GenerateVariableReferenceExpression (System.CodeDom.CodeVariableReferenceExpression e);
    parameters:
    - id: e
      type: System.CodeDom.CodeVariableReferenceExpression
      description: "The expression to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.GenerateVariableReferenceExpression*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.GetTypeOutput(System.CodeDom.CodeTypeReference)
  id: GetTypeOutput(System.CodeDom.CodeTypeReference)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: GetTypeOutput(CodeTypeReference)
  nameWithType: CodeGenerator.GetTypeOutput(CodeTypeReference)
  fullName: System.CodeDom.Compiler.CodeGenerator.GetTypeOutput(CodeTypeReference)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Gets the name of the specified data type."
  syntax:
    content: protected abstract string GetTypeOutput (System.CodeDom.CodeTypeReference value);
    parameters:
    - id: value
      type: System.CodeDom.CodeTypeReference
      description: "The type whose name will be returned."
    return:
      type: System.String
      description: "The name of the data type reference."
  overload: System.CodeDom.Compiler.CodeGenerator.GetTypeOutput*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.Indent
  id: Indent
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: Indent
  nameWithType: CodeGenerator.Indent
  fullName: System.CodeDom.Compiler.CodeGenerator.Indent
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Gets or sets the amount of spaces to indent each indentation level."
  remarks: "Segments of code are commonly indented for ease of recognition."
  syntax:
    content: protected int Indent { get; set; }
    return:
      type: System.Int32
      description: "The number of spaces to indent for each indentation level."
  overload: System.CodeDom.Compiler.CodeGenerator.Indent*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.IsCurrentClass
  id: IsCurrentClass
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: IsCurrentClass
  nameWithType: CodeGenerator.IsCurrentClass
  fullName: System.CodeDom.Compiler.CodeGenerator.IsCurrentClass
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Gets a value indicating whether the current object being generated is a class."
  syntax:
    content: protected bool IsCurrentClass { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the current object is a class; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.CodeDom.Compiler.CodeGenerator.IsCurrentClass*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.IsCurrentDelegate
  id: IsCurrentDelegate
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: IsCurrentDelegate
  nameWithType: CodeGenerator.IsCurrentDelegate
  fullName: System.CodeDom.Compiler.CodeGenerator.IsCurrentDelegate
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Gets a value indicating whether the current object being generated is a delegate."
  syntax:
    content: protected bool IsCurrentDelegate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the current object is a delegate; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.CodeDom.Compiler.CodeGenerator.IsCurrentDelegate*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.IsCurrentEnum
  id: IsCurrentEnum
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: IsCurrentEnum
  nameWithType: CodeGenerator.IsCurrentEnum
  fullName: System.CodeDom.Compiler.CodeGenerator.IsCurrentEnum
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Gets a value indicating whether the current object being generated is an enumeration."
  syntax:
    content: protected bool IsCurrentEnum { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the current object is an enumeration; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.CodeDom.Compiler.CodeGenerator.IsCurrentEnum*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.IsCurrentInterface
  id: IsCurrentInterface
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: IsCurrentInterface
  nameWithType: CodeGenerator.IsCurrentInterface
  fullName: System.CodeDom.Compiler.CodeGenerator.IsCurrentInterface
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Gets a value indicating whether the current object being generated is an interface."
  syntax:
    content: protected bool IsCurrentInterface { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the current object is an interface; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.CodeDom.Compiler.CodeGenerator.IsCurrentInterface*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.IsCurrentStruct
  id: IsCurrentStruct
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: IsCurrentStruct
  nameWithType: CodeGenerator.IsCurrentStruct
  fullName: System.CodeDom.Compiler.CodeGenerator.IsCurrentStruct
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Gets a value indicating whether the current object being generated is a value type or struct."
  syntax:
    content: protected bool IsCurrentStruct { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the current object is a value type or struct; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.CodeDom.Compiler.CodeGenerator.IsCurrentStruct*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.IsValidIdentifier(System.String)
  id: IsValidIdentifier(System.String)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: IsValidIdentifier(String)
  nameWithType: CodeGenerator.IsValidIdentifier(String)
  fullName: System.CodeDom.Compiler.CodeGenerator.IsValidIdentifier(String)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Gets a value indicating whether the specified value is a valid identifier."
  syntax:
    content: protected abstract bool IsValidIdentifier (string value);
    parameters:
    - id: value
      type: System.String
      description: "The value to test for conflicts with valid identifiers."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the value is a valid identifier; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.CodeDom.Compiler.CodeGenerator.IsValidIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.IsValidLanguageIndependentIdentifier(System.String)
  id: IsValidLanguageIndependentIdentifier(System.String)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: IsValidLanguageIndependentIdentifier(String)
  nameWithType: CodeGenerator.IsValidLanguageIndependentIdentifier(String)
  fullName: System.CodeDom.Compiler.CodeGenerator.IsValidLanguageIndependentIdentifier(String)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Gets a value indicating whether the specified string is a valid identifier."
  remarks: "This method checks the specified string to ensure that it does not contain certain characters that can be used to escape an identifier field. The <xref:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers%2A> method calls this method to perform string validation. Calling the <xref:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers%2A> method and passing a <xref:System.CodeDom.CodeCompileUnit> before generating code from it can prevent the use of certain character sequences to include hidden code within an identifier field."
  syntax:
    content: public static bool IsValidLanguageIndependentIdentifier (string value);
    parameters:
    - id: value
      type: System.String
      description: "The string to test for validity."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the specified string is a valid identifier; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.CodeDom.Compiler.CodeGenerator.IsValidLanguageIndependentIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.NullToken
  id: NullToken
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: NullToken
  nameWithType: CodeGenerator.NullToken
  fullName: System.CodeDom.Compiler.CodeGenerator.NullToken
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Gets the token that represents <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  syntax:
    content: protected abstract string NullToken { get; }
    return:
      type: System.String
      description: "The token that represents <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.CodeDom.Compiler.CodeGenerator.NullToken*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.Options
  id: Options
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: Options
  nameWithType: CodeGenerator.Options
  fullName: System.CodeDom.Compiler.CodeGenerator.Options
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Gets the options to be used by the code generator."
  syntax:
    content: protected System.CodeDom.Compiler.CodeGeneratorOptions Options { get; }
    return:
      type: System.CodeDom.Compiler.CodeGeneratorOptions
      description: "An object that indicates the options for the code generator to use."
  overload: System.CodeDom.Compiler.CodeGenerator.Options*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.Output
  id: Output
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: Output
  nameWithType: CodeGenerator.Output
  fullName: System.CodeDom.Compiler.CodeGenerator.Output
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Gets the text writer to use for output."
  syntax:
    content: protected System.IO.TextWriter Output { get; }
    return:
      type: System.IO.TextWriter
      description: "The text writer to use for output."
  overload: System.CodeDom.Compiler.CodeGenerator.Output*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.OutputAttributeArgument(System.CodeDom.CodeAttributeArgument)
  id: OutputAttributeArgument(System.CodeDom.CodeAttributeArgument)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: OutputAttributeArgument(CodeAttributeArgument)
  nameWithType: CodeGenerator.OutputAttributeArgument(CodeAttributeArgument)
  fullName: System.CodeDom.Compiler.CodeGenerator.OutputAttributeArgument(CodeAttributeArgument)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Outputs an argument in an attribute block."
  syntax:
    content: protected virtual void OutputAttributeArgument (System.CodeDom.CodeAttributeArgument arg);
    parameters:
    - id: arg
      type: System.CodeDom.CodeAttributeArgument
      description: "The attribute argument to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.OutputAttributeArgument*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.OutputAttributeDeclarations(System.CodeDom.CodeAttributeDeclarationCollection)
  id: OutputAttributeDeclarations(System.CodeDom.CodeAttributeDeclarationCollection)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: OutputAttributeDeclarations(CodeAttributeDeclarationCollection)
  nameWithType: CodeGenerator.OutputAttributeDeclarations(CodeAttributeDeclarationCollection)
  fullName: System.CodeDom.Compiler.CodeGenerator.OutputAttributeDeclarations(CodeAttributeDeclarationCollection)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified attribute declaration collection."
  syntax:
    content: protected virtual void OutputAttributeDeclarations (System.CodeDom.CodeAttributeDeclarationCollection attributes);
    parameters:
    - id: attributes
      type: System.CodeDom.CodeAttributeDeclarationCollection
      description: "The attributes to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.OutputAttributeDeclarations*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.OutputDirection(System.CodeDom.FieldDirection)
  id: OutputDirection(System.CodeDom.FieldDirection)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: OutputDirection(FieldDirection)
  nameWithType: CodeGenerator.OutputDirection(FieldDirection)
  fullName: System.CodeDom.Compiler.CodeGenerator.OutputDirection(FieldDirection)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified <xref href=&quot;System.CodeDom.FieldDirection&quot;></xref>."
  syntax:
    content: protected virtual void OutputDirection (System.CodeDom.FieldDirection dir);
    parameters:
    - id: dir
      type: System.CodeDom.FieldDirection
      description: "One of the enumeration values that indicates the attribute of the field."
  overload: System.CodeDom.Compiler.CodeGenerator.OutputDirection*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.OutputExpressionList(System.CodeDom.CodeExpressionCollection)
  id: OutputExpressionList(System.CodeDom.CodeExpressionCollection)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: OutputExpressionList(CodeExpressionCollection)
  nameWithType: CodeGenerator.OutputExpressionList(CodeExpressionCollection)
  fullName: System.CodeDom.Compiler.CodeGenerator.OutputExpressionList(CodeExpressionCollection)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified expression list."
  syntax:
    content: protected virtual void OutputExpressionList (System.CodeDom.CodeExpressionCollection expressions);
    parameters:
    - id: expressions
      type: System.CodeDom.CodeExpressionCollection
      description: "The expressions to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.OutputExpressionList*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.OutputExpressionList(System.CodeDom.CodeExpressionCollection,System.Boolean)
  id: OutputExpressionList(System.CodeDom.CodeExpressionCollection,System.Boolean)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: OutputExpressionList(CodeExpressionCollection,Boolean)
  nameWithType: CodeGenerator.OutputExpressionList(CodeExpressionCollection,Boolean)
  fullName: System.CodeDom.Compiler.CodeGenerator.OutputExpressionList(CodeExpressionCollection,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified expression list."
  syntax:
    content: protected virtual void OutputExpressionList (System.CodeDom.CodeExpressionCollection expressions, bool newlineBetweenItems);
    parameters:
    - id: expressions
      type: System.CodeDom.CodeExpressionCollection
      description: "The expressions to generate code for."
    - id: newlineBetweenItems
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to insert a new line after each item; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.CodeDom.Compiler.CodeGenerator.OutputExpressionList*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.OutputFieldScopeModifier(System.CodeDom.MemberAttributes)
  id: OutputFieldScopeModifier(System.CodeDom.MemberAttributes)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: OutputFieldScopeModifier(MemberAttributes)
  nameWithType: CodeGenerator.OutputFieldScopeModifier(MemberAttributes)
  fullName: System.CodeDom.Compiler.CodeGenerator.OutputFieldScopeModifier(MemberAttributes)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Outputs a field scope modifier that corresponds to the specified attributes."
  syntax:
    content: protected virtual void OutputFieldScopeModifier (System.CodeDom.MemberAttributes attributes);
    parameters:
    - id: attributes
      type: System.CodeDom.MemberAttributes
      description: "One of the enumeration values that specifies the attributes."
  overload: System.CodeDom.Compiler.CodeGenerator.OutputFieldScopeModifier*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.OutputIdentifier(System.String)
  id: OutputIdentifier(System.String)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: OutputIdentifier(String)
  nameWithType: CodeGenerator.OutputIdentifier(String)
  fullName: System.CodeDom.Compiler.CodeGenerator.OutputIdentifier(String)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Outputs the specified identifier."
  syntax:
    content: protected virtual void OutputIdentifier (string ident);
    parameters:
    - id: ident
      type: System.String
      description: "The identifier to output."
  overload: System.CodeDom.Compiler.CodeGenerator.OutputIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.OutputMemberAccessModifier(System.CodeDom.MemberAttributes)
  id: OutputMemberAccessModifier(System.CodeDom.MemberAttributes)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: OutputMemberAccessModifier(MemberAttributes)
  nameWithType: CodeGenerator.OutputMemberAccessModifier(MemberAttributes)
  fullName: System.CodeDom.Compiler.CodeGenerator.OutputMemberAccessModifier(MemberAttributes)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified member access modifier."
  syntax:
    content: protected virtual void OutputMemberAccessModifier (System.CodeDom.MemberAttributes attributes);
    parameters:
    - id: attributes
      type: System.CodeDom.MemberAttributes
      description: "One of the enumeration values that indicates the member access modifier to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.OutputMemberAccessModifier*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.OutputMemberScopeModifier(System.CodeDom.MemberAttributes)
  id: OutputMemberScopeModifier(System.CodeDom.MemberAttributes)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: OutputMemberScopeModifier(MemberAttributes)
  nameWithType: CodeGenerator.OutputMemberScopeModifier(MemberAttributes)
  fullName: System.CodeDom.Compiler.CodeGenerator.OutputMemberScopeModifier(MemberAttributes)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified member scope modifier."
  syntax:
    content: protected virtual void OutputMemberScopeModifier (System.CodeDom.MemberAttributes attributes);
    parameters:
    - id: attributes
      type: System.CodeDom.MemberAttributes
      description: "One of the enumeration values that indicates the member scope modifier to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.OutputMemberScopeModifier*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.OutputOperator(System.CodeDom.CodeBinaryOperatorType)
  id: OutputOperator(System.CodeDom.CodeBinaryOperatorType)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: OutputOperator(CodeBinaryOperatorType)
  nameWithType: CodeGenerator.OutputOperator(CodeBinaryOperatorType)
  fullName: System.CodeDom.Compiler.CodeGenerator.OutputOperator(CodeBinaryOperatorType)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified operator."
  syntax:
    content: protected virtual void OutputOperator (System.CodeDom.CodeBinaryOperatorType op);
    parameters:
    - id: op
      type: System.CodeDom.CodeBinaryOperatorType
      description: "The operator to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.OutputOperator*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.OutputParameters(System.CodeDom.CodeParameterDeclarationExpressionCollection)
  id: OutputParameters(System.CodeDom.CodeParameterDeclarationExpressionCollection)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: OutputParameters(CodeParameterDeclarationExpressionCollection)
  nameWithType: CodeGenerator.OutputParameters(CodeParameterDeclarationExpressionCollection)
  fullName: System.CodeDom.Compiler.CodeGenerator.OutputParameters(CodeParameterDeclarationExpressionCollection)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified parameters."
  syntax:
    content: protected virtual void OutputParameters (System.CodeDom.CodeParameterDeclarationExpressionCollection parameters);
    parameters:
    - id: parameters
      type: System.CodeDom.CodeParameterDeclarationExpressionCollection
      description: "The parameter declaration expressions to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.OutputParameters*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.OutputType(System.CodeDom.CodeTypeReference)
  id: OutputType(System.CodeDom.CodeTypeReference)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: OutputType(CodeTypeReference)
  nameWithType: CodeGenerator.OutputType(CodeTypeReference)
  fullName: System.CodeDom.Compiler.CodeGenerator.OutputType(CodeTypeReference)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified type."
  syntax:
    content: protected abstract void OutputType (System.CodeDom.CodeTypeReference typeRef);
    parameters:
    - id: typeRef
      type: System.CodeDom.CodeTypeReference
      description: "The type to generate code for."
  overload: System.CodeDom.Compiler.CodeGenerator.OutputType*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.OutputTypeAttributes(System.Reflection.TypeAttributes,System.Boolean,System.Boolean)
  id: OutputTypeAttributes(System.Reflection.TypeAttributes,System.Boolean,System.Boolean)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: OutputTypeAttributes(TypeAttributes,Boolean,Boolean)
  nameWithType: CodeGenerator.OutputTypeAttributes(TypeAttributes,Boolean,Boolean)
  fullName: System.CodeDom.Compiler.CodeGenerator.OutputTypeAttributes(TypeAttributes,Boolean,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified type attributes."
  syntax:
    content: protected virtual void OutputTypeAttributes (System.Reflection.TypeAttributes attributes, bool isStruct, bool isEnum);
    parameters:
    - id: attributes
      type: System.Reflection.TypeAttributes
      description: "One of the enumeration values that indicates the type attributes to generate code for."
    - id: isStruct
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the type is a struct; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: isEnum
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the type is an enum; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.CodeDom.Compiler.CodeGenerator.OutputTypeAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.OutputTypeNamePair(System.CodeDom.CodeTypeReference,System.String)
  id: OutputTypeNamePair(System.CodeDom.CodeTypeReference,System.String)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: OutputTypeNamePair(CodeTypeReference,String)
  nameWithType: CodeGenerator.OutputTypeNamePair(CodeTypeReference,String)
  fullName: System.CodeDom.Compiler.CodeGenerator.OutputTypeNamePair(CodeTypeReference,String)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified object type and name pair."
  syntax:
    content: protected virtual void OutputTypeNamePair (System.CodeDom.CodeTypeReference typeRef, string name);
    parameters:
    - id: typeRef
      type: System.CodeDom.CodeTypeReference
      description: "The type."
    - id: name
      type: System.String
      description: "The name for the object."
  overload: System.CodeDom.Compiler.CodeGenerator.OutputTypeNamePair*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.QuoteSnippetString(System.String)
  id: QuoteSnippetString(System.String)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: QuoteSnippetString(String)
  nameWithType: CodeGenerator.QuoteSnippetString(String)
  fullName: System.CodeDom.Compiler.CodeGenerator.QuoteSnippetString(String)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Converts the specified string by formatting it with escape codes."
  remarks: "This method returns a modified version of the specified string that has been formatted with escape code characters. For example, `/&quot;` might be used to represent `&quot;`. These escape codes are used to replace elements of the specified string that might otherwise conflict with language syntax."
  syntax:
    content: protected abstract string QuoteSnippetString (string value);
    parameters:
    - id: value
      type: System.String
      description: "The string to convert."
    return:
      type: System.String
      description: "The converted string."
  overload: System.CodeDom.Compiler.CodeGenerator.QuoteSnippetString*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.Supports(System.CodeDom.Compiler.GeneratorSupport)
  id: Supports(System.CodeDom.Compiler.GeneratorSupport)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: Supports(GeneratorSupport)
  nameWithType: CodeGenerator.Supports(GeneratorSupport)
  fullName: System.CodeDom.Compiler.CodeGenerator.Supports(GeneratorSupport)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Gets a value indicating whether the specified code generation support is provided."
  syntax:
    content: protected abstract bool Supports (System.CodeDom.Compiler.GeneratorSupport support);
    parameters:
    - id: support
      type: System.CodeDom.Compiler.GeneratorSupport
      description: "The type of code generation support to test for."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the specified code generation support is provided; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.CodeDom.Compiler.CodeGenerator.Supports*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#CreateEscapedIdentifier(System.String)
  id: System#CodeDom#Compiler#ICodeGenerator#CreateEscapedIdentifier(System.String)
  isEii: true
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier(String)
  nameWithType: CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier(String)
  fullName: System.CodeDom.Compiler.CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier(String)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Creates an escaped identifier for the specified value."
  syntax:
    content: string ICodeGenerator.CreateEscapedIdentifier (string value);
    parameters:
    - id: value
      type: System.String
      description: "The string to create an escaped identifier for."
    return:
      type: System.String
      description: "The escaped identifier for the value."
  overload: System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#CreateEscapedIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#CreateValidIdentifier(System.String)
  id: System#CodeDom#Compiler#ICodeGenerator#CreateValidIdentifier(System.String)
  isEii: true
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier(String)
  nameWithType: CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier(String)
  fullName: System.CodeDom.Compiler.CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier(String)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Creates a valid identifier for the specified value."
  syntax:
    content: string ICodeGenerator.CreateValidIdentifier (string value);
    parameters:
    - id: value
      type: System.String
      description: "The string to generate a valid identifier for."
    return:
      type: System.String
      description: "A valid identifier for the specified value."
  overload: System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#CreateValidIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  id: System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  isEii: true
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit(CodeCompileUnit,TextWriter,CodeGeneratorOptions)
  nameWithType: CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit(CodeCompileUnit,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit(CodeCompileUnit,TextWriter,CodeGeneratorOptions)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified Code Document Object Model (CodeDOM) compilation unit and outputs it to the specified text writer using the specified options."
  syntax:
    content: void ICodeGenerator.GenerateCodeFromCompileUnit (System.CodeDom.CodeCompileUnit e, System.IO.TextWriter w, System.CodeDom.Compiler.CodeGeneratorOptions o);
    parameters:
    - id: e
      type: System.CodeDom.CodeCompileUnit
      description: "The CodeDOM compilation unit to generate code for."
    - id: w
      type: System.IO.TextWriter
      description: "The text writer to output code to."
    - id: o
      type: System.CodeDom.Compiler.CodeGeneratorOptions
      description: "The options to use for generating code."
  overload: System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromCompileUnit*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>w</code> is not available. <code>w</code> may have been closed before the method call was made."
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  id: System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  isEii: true
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression(CodeExpression,TextWriter,CodeGeneratorOptions)
  nameWithType: CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression(CodeExpression,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression(CodeExpression,TextWriter,CodeGeneratorOptions)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified Code Document Object Model (CodeDOM) expression and outputs it to the specified text writer."
  syntax:
    content: void ICodeGenerator.GenerateCodeFromExpression (System.CodeDom.CodeExpression e, System.IO.TextWriter w, System.CodeDom.Compiler.CodeGeneratorOptions o);
    parameters:
    - id: e
      type: System.CodeDom.CodeExpression
      description: "The expression to generate code for."
    - id: w
      type: System.IO.TextWriter
      description: "The text writer to output code to."
    - id: o
      type: System.CodeDom.Compiler.CodeGeneratorOptions
      description: "The options to use for generating code."
  overload: System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromExpression*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>w</code> is not available. <code>w</code> may have been closed before the method call was made."
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  id: System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  isEii: true
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace(CodeNamespace,TextWriter,CodeGeneratorOptions)
  nameWithType: CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace(CodeNamespace,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace(CodeNamespace,TextWriter,CodeGeneratorOptions)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified Code Document Object Model (CodeDOM) namespace and outputs it to the specified text writer using the specified options."
  syntax:
    content: void ICodeGenerator.GenerateCodeFromNamespace (System.CodeDom.CodeNamespace e, System.IO.TextWriter w, System.CodeDom.Compiler.CodeGeneratorOptions o);
    parameters:
    - id: e
      type: System.CodeDom.CodeNamespace
      description: "The namespace to generate code for."
    - id: w
      type: System.IO.TextWriter
      description: "The text writer to output code to."
    - id: o
      type: System.CodeDom.Compiler.CodeGeneratorOptions
      description: "The options to use for generating code."
  overload: System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromNamespace*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>w</code> is not available. <code>w</code> may have been closed before the method call was made."
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  id: System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  isEii: true
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement(CodeStatement,TextWriter,CodeGeneratorOptions)
  nameWithType: CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement(CodeStatement,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement(CodeStatement,TextWriter,CodeGeneratorOptions)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified Code Document Object Model (CodeDOM) statement and outputs it to the specified text writer using the specified options."
  syntax:
    content: void ICodeGenerator.GenerateCodeFromStatement (System.CodeDom.CodeStatement e, System.IO.TextWriter w, System.CodeDom.Compiler.CodeGeneratorOptions o);
    parameters:
    - id: e
      type: System.CodeDom.CodeStatement
      description: "The statement that contains the CodeDOM elements to translate."
    - id: w
      type: System.IO.TextWriter
      description: "The text writer to output code to."
    - id: o
      type: System.CodeDom.Compiler.CodeGeneratorOptions
      description: "The options to use for generating code."
  overload: System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromStatement*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>w</code> is not available. <code>w</code> may have been closed before the method call was made."
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  id: System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  isEii: true
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType(CodeTypeDeclaration,TextWriter,CodeGeneratorOptions)
  nameWithType: CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType(CodeTypeDeclaration,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType(CodeTypeDeclaration,TextWriter,CodeGeneratorOptions)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Generates code for the specified Code Document Object Model (CodeDOM) type declaration and outputs it to the specified text writer using the specified options."
  syntax:
    content: void ICodeGenerator.GenerateCodeFromType (System.CodeDom.CodeTypeDeclaration e, System.IO.TextWriter w, System.CodeDom.Compiler.CodeGeneratorOptions o);
    parameters:
    - id: e
      type: System.CodeDom.CodeTypeDeclaration
      description: "The type to generate code for."
    - id: w
      type: System.IO.TextWriter
      description: "The text writer to output code to."
    - id: o
      type: System.CodeDom.Compiler.CodeGeneratorOptions
      description: "The options to use for generating code."
  overload: System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromType*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>w</code> is not available. <code>w</code> may have been closed before the method call was made."
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GetTypeOutput(System.CodeDom.CodeTypeReference)
  id: System#CodeDom#Compiler#ICodeGenerator#GetTypeOutput(System.CodeDom.CodeTypeReference)
  isEii: true
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput(CodeTypeReference)
  nameWithType: CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput(CodeTypeReference)
  fullName: System.CodeDom.Compiler.CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput(CodeTypeReference)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Gets the type indicated by the specified <xref href=&quot;System.CodeDom.CodeTypeReference&quot;></xref>."
  syntax:
    content: string ICodeGenerator.GetTypeOutput (System.CodeDom.CodeTypeReference type);
    parameters:
    - id: type
      type: System.CodeDom.CodeTypeReference
      description: "The type to return."
    return:
      type: System.String
      description: "The name of the data type reference."
  overload: System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GetTypeOutput*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#IsValidIdentifier(System.String)
  id: System#CodeDom#Compiler#ICodeGenerator#IsValidIdentifier(System.String)
  isEii: true
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier(String)
  nameWithType: CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier(String)
  fullName: System.CodeDom.Compiler.CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier(String)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Gets a value that indicates whether the specified value is a valid identifier for the current language."
  syntax:
    content: bool ICodeGenerator.IsValidIdentifier (string value);
    parameters:
    - id: value
      type: System.String
      description: "The value to test."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <code>value</code> parameter is a valid identifier; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#IsValidIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#Supports(System.CodeDom.Compiler.GeneratorSupport)
  id: System#CodeDom#Compiler#ICodeGenerator#Supports(System.CodeDom.Compiler.GeneratorSupport)
  isEii: true
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: System.CodeDom.Compiler.ICodeGenerator.Supports(GeneratorSupport)
  nameWithType: CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.Supports(GeneratorSupport)
  fullName: System.CodeDom.Compiler.CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.Supports(GeneratorSupport)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Gets a value indicating whether the generator provides support for the language features represented by the specified <xref href=&quot;System.CodeDom.Compiler.GeneratorSupport&quot;></xref> object."
  syntax:
    content: bool ICodeGenerator.Supports (System.CodeDom.Compiler.GeneratorSupport support);
    parameters:
    - id: support
      type: System.CodeDom.Compiler.GeneratorSupport
      description: "The capabilities to test the generator for."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the specified capabilities are supported; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#Supports*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#ValidateIdentifier(System.String)
  id: System#CodeDom#Compiler#ICodeGenerator#ValidateIdentifier(System.String)
  isEii: true
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier(String)
  nameWithType: CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier(String)
  fullName: System.CodeDom.Compiler.CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier(String)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Throws an exception if the specified value is not a valid identifier."
  syntax:
    content: void ICodeGenerator.ValidateIdentifier (string value);
    parameters:
    - id: value
      type: System.String
      description: "The identifier to validate."
  overload: System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#ValidateIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.ValidateIdentifier(System.String)
  id: ValidateIdentifier(System.String)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: ValidateIdentifier(String)
  nameWithType: CodeGenerator.ValidateIdentifier(String)
  fullName: System.CodeDom.Compiler.CodeGenerator.ValidateIdentifier(String)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Throws an exception if the specified string is not a valid identifier."
  syntax:
    content: protected virtual void ValidateIdentifier (string value);
    parameters:
    - id: value
      type: System.String
      description: "The identifier to test for validity as an identifier."
  overload: System.CodeDom.Compiler.CodeGenerator.ValidateIdentifier*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "If the specified identifier is invalid or conflicts with reserved or language keywords."
  platform:
  - net462
- uid: System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers(System.CodeDom.CodeObject)
  id: ValidateIdentifiers(System.CodeDom.CodeObject)
  parent: System.CodeDom.Compiler.CodeGenerator
  langs:
  - csharp
  name: ValidateIdentifiers(CodeObject)
  nameWithType: CodeGenerator.ValidateIdentifiers(CodeObject)
  fullName: System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers(CodeObject)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Attempts to validate each identifier field contained in the specified <xref href=&quot;System.CodeDom.CodeObject&quot;></xref> or <xref href=&quot;System.CodeDom&quot;></xref> tree."
  remarks: "It is possible for the identifier fields of <xref:System.CodeDom.CodeObject> objects to contain field escape characters and hidden code which can allow security violations. This method checks the literal fields of each <xref:System.CodeDom.CodeObject> in a <xref:System.CodeDom> tree for characters which could be used to hide code, and throws an exception if an identifier field contains an invalid character.       This method calls the <xref:System.CodeDom.Compiler.CodeGenerator.IsValidLanguageIndependentIdentifier%2A> method to validate each identifier in the specified <xref:System.CodeDom.CodeObject> or <xref:System.CodeDom> tree, and throws an exception if an identifier is invalid or contains invalid characters.       Call this method and pass it the <xref:System.CodeDom.CodeCompileUnit> containing the code graph to generate before generating code to block the use of certain character sequences that can be used to include hidden code within an identifier field. This method is not called automatically by any generate code methods."
  syntax:
    content: public static void ValidateIdentifiers (System.CodeDom.CodeObject e);
    parameters:
    - id: e
      type: System.CodeDom.CodeObject
      description: "An object to test for invalid identifiers."
  overload: System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The specified <xref href=&quot;System.CodeDom.CodeObject&quot;></xref> contains an invalid identifier."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.CodeDom.Compiler.CodeGenerator.#ctor
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: CodeGenerator()
  nameWithType: CodeGenerator.CodeGenerator()
  fullName: System.CodeDom.Compiler.CodeGenerator.CodeGenerator()
- uid: System.CodeDom.Compiler.CodeGenerator.ContinueOnNewLine(System.String)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: ContinueOnNewLine(String)
  nameWithType: CodeGenerator.ContinueOnNewLine(String)
  fullName: System.CodeDom.Compiler.CodeGenerator.ContinueOnNewLine(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.CodeDom.Compiler.CodeGenerator.CreateEscapedIdentifier(System.String)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: CreateEscapedIdentifier(String)
  nameWithType: CodeGenerator.CreateEscapedIdentifier(String)
  fullName: System.CodeDom.Compiler.CodeGenerator.CreateEscapedIdentifier(String)
- uid: System.CodeDom.Compiler.CodeGenerator.CreateValidIdentifier(System.String)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: CreateValidIdentifier(String)
  nameWithType: CodeGenerator.CreateValidIdentifier(String)
  fullName: System.CodeDom.Compiler.CodeGenerator.CreateValidIdentifier(String)
- uid: System.CodeDom.Compiler.CodeGenerator.CurrentClass
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: CurrentClass
  nameWithType: CodeGenerator.CurrentClass
  fullName: System.CodeDom.Compiler.CodeGenerator.CurrentClass
- uid: System.CodeDom.CodeTypeDeclaration
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeDeclaration
  nameWithType: CodeTypeDeclaration
  fullName: System.CodeDom.CodeTypeDeclaration
- uid: System.CodeDom.Compiler.CodeGenerator.CurrentMember
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: CurrentMember
  nameWithType: CodeGenerator.CurrentMember
  fullName: System.CodeDom.Compiler.CodeGenerator.CurrentMember
- uid: System.CodeDom.CodeTypeMember
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeMember
  nameWithType: CodeTypeMember
  fullName: System.CodeDom.CodeTypeMember
- uid: System.CodeDom.Compiler.CodeGenerator.CurrentMemberName
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: CurrentMemberName
  nameWithType: CodeGenerator.CurrentMemberName
  fullName: System.CodeDom.Compiler.CodeGenerator.CurrentMemberName
- uid: System.CodeDom.Compiler.CodeGenerator.CurrentTypeName
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: CurrentTypeName
  nameWithType: CodeGenerator.CurrentTypeName
  fullName: System.CodeDom.Compiler.CodeGenerator.CurrentTypeName
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateArgumentReferenceExpression(System.CodeDom.CodeArgumentReferenceExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateArgumentReferenceExpression(CodeArgumentReferenceExpression)
  nameWithType: CodeGenerator.GenerateArgumentReferenceExpression(CodeArgumentReferenceExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateArgumentReferenceExpression(CodeArgumentReferenceExpression)
- uid: System.CodeDom.CodeArgumentReferenceExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeArgumentReferenceExpression
  nameWithType: CodeArgumentReferenceExpression
  fullName: System.CodeDom.CodeArgumentReferenceExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateArrayCreateExpression(System.CodeDom.CodeArrayCreateExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateArrayCreateExpression(CodeArrayCreateExpression)
  nameWithType: CodeGenerator.GenerateArrayCreateExpression(CodeArrayCreateExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateArrayCreateExpression(CodeArrayCreateExpression)
- uid: System.CodeDom.CodeArrayCreateExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeArrayCreateExpression
  nameWithType: CodeArrayCreateExpression
  fullName: System.CodeDom.CodeArrayCreateExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateArrayIndexerExpression(System.CodeDom.CodeArrayIndexerExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateArrayIndexerExpression(CodeArrayIndexerExpression)
  nameWithType: CodeGenerator.GenerateArrayIndexerExpression(CodeArrayIndexerExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateArrayIndexerExpression(CodeArrayIndexerExpression)
- uid: System.CodeDom.CodeArrayIndexerExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeArrayIndexerExpression
  nameWithType: CodeArrayIndexerExpression
  fullName: System.CodeDom.CodeArrayIndexerExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateAssignStatement(System.CodeDom.CodeAssignStatement)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateAssignStatement(CodeAssignStatement)
  nameWithType: CodeGenerator.GenerateAssignStatement(CodeAssignStatement)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateAssignStatement(CodeAssignStatement)
- uid: System.CodeDom.CodeAssignStatement
  parent: System.CodeDom
  isExternal: false
  name: CodeAssignStatement
  nameWithType: CodeAssignStatement
  fullName: System.CodeDom.CodeAssignStatement
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateAttachEventStatement(System.CodeDom.CodeAttachEventStatement)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateAttachEventStatement(CodeAttachEventStatement)
  nameWithType: CodeGenerator.GenerateAttachEventStatement(CodeAttachEventStatement)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateAttachEventStatement(CodeAttachEventStatement)
- uid: System.CodeDom.CodeAttachEventStatement
  parent: System.CodeDom
  isExternal: false
  name: CodeAttachEventStatement
  nameWithType: CodeAttachEventStatement
  fullName: System.CodeDom.CodeAttachEventStatement
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateAttributeDeclarationsEnd(System.CodeDom.CodeAttributeDeclarationCollection)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateAttributeDeclarationsEnd(CodeAttributeDeclarationCollection)
  nameWithType: CodeGenerator.GenerateAttributeDeclarationsEnd(CodeAttributeDeclarationCollection)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateAttributeDeclarationsEnd(CodeAttributeDeclarationCollection)
- uid: System.CodeDom.CodeAttributeDeclarationCollection
  parent: System.CodeDom
  isExternal: false
  name: CodeAttributeDeclarationCollection
  nameWithType: CodeAttributeDeclarationCollection
  fullName: System.CodeDom.CodeAttributeDeclarationCollection
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateAttributeDeclarationsStart(System.CodeDom.CodeAttributeDeclarationCollection)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateAttributeDeclarationsStart(CodeAttributeDeclarationCollection)
  nameWithType: CodeGenerator.GenerateAttributeDeclarationsStart(CodeAttributeDeclarationCollection)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateAttributeDeclarationsStart(CodeAttributeDeclarationCollection)
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateBaseReferenceExpression(System.CodeDom.CodeBaseReferenceExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateBaseReferenceExpression(CodeBaseReferenceExpression)
  nameWithType: CodeGenerator.GenerateBaseReferenceExpression(CodeBaseReferenceExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateBaseReferenceExpression(CodeBaseReferenceExpression)
- uid: System.CodeDom.CodeBaseReferenceExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeBaseReferenceExpression
  nameWithType: CodeBaseReferenceExpression
  fullName: System.CodeDom.CodeBaseReferenceExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateBinaryOperatorExpression(System.CodeDom.CodeBinaryOperatorExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateBinaryOperatorExpression(CodeBinaryOperatorExpression)
  nameWithType: CodeGenerator.GenerateBinaryOperatorExpression(CodeBinaryOperatorExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateBinaryOperatorExpression(CodeBinaryOperatorExpression)
- uid: System.CodeDom.CodeBinaryOperatorExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeBinaryOperatorExpression
  nameWithType: CodeBinaryOperatorExpression
  fullName: System.CodeDom.CodeBinaryOperatorExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateCastExpression(System.CodeDom.CodeCastExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateCastExpression(CodeCastExpression)
  nameWithType: CodeGenerator.GenerateCastExpression(CodeCastExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateCastExpression(CodeCastExpression)
- uid: System.CodeDom.CodeCastExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeCastExpression
  nameWithType: CodeCastExpression
  fullName: System.CodeDom.CodeCastExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateCodeFromMember(CodeTypeMember,TextWriter,CodeGeneratorOptions)
  nameWithType: CodeGenerator.GenerateCodeFromMember(CodeTypeMember,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateCodeFromMember(CodeTypeMember,TextWriter,CodeGeneratorOptions)
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.CodeDom.Compiler.CodeGeneratorOptions
  parent: System.CodeDom.Compiler
  isExternal: false
  name: CodeGeneratorOptions
  nameWithType: CodeGeneratorOptions
  fullName: System.CodeDom.Compiler.CodeGeneratorOptions
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateComment(System.CodeDom.CodeComment)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateComment(CodeComment)
  nameWithType: CodeGenerator.GenerateComment(CodeComment)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateComment(CodeComment)
- uid: System.CodeDom.CodeComment
  parent: System.CodeDom
  isExternal: false
  name: CodeComment
  nameWithType: CodeComment
  fullName: System.CodeDom.CodeComment
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateCommentStatement(System.CodeDom.CodeCommentStatement)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateCommentStatement(CodeCommentStatement)
  nameWithType: CodeGenerator.GenerateCommentStatement(CodeCommentStatement)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateCommentStatement(CodeCommentStatement)
- uid: System.CodeDom.CodeCommentStatement
  parent: System.CodeDom
  isExternal: false
  name: CodeCommentStatement
  nameWithType: CodeCommentStatement
  fullName: System.CodeDom.CodeCommentStatement
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateCommentStatements(System.CodeDom.CodeCommentStatementCollection)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateCommentStatements(CodeCommentStatementCollection)
  nameWithType: CodeGenerator.GenerateCommentStatements(CodeCommentStatementCollection)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateCommentStatements(CodeCommentStatementCollection)
- uid: System.CodeDom.CodeCommentStatementCollection
  parent: System.CodeDom
  isExternal: false
  name: CodeCommentStatementCollection
  nameWithType: CodeCommentStatementCollection
  fullName: System.CodeDom.CodeCommentStatementCollection
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateCompileUnit(System.CodeDom.CodeCompileUnit)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateCompileUnit(CodeCompileUnit)
  nameWithType: CodeGenerator.GenerateCompileUnit(CodeCompileUnit)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateCompileUnit(CodeCompileUnit)
- uid: System.CodeDom.CodeCompileUnit
  parent: System.CodeDom
  isExternal: false
  name: CodeCompileUnit
  nameWithType: CodeCompileUnit
  fullName: System.CodeDom.CodeCompileUnit
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateCompileUnitEnd(System.CodeDom.CodeCompileUnit)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateCompileUnitEnd(CodeCompileUnit)
  nameWithType: CodeGenerator.GenerateCompileUnitEnd(CodeCompileUnit)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateCompileUnitEnd(CodeCompileUnit)
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateCompileUnitStart(System.CodeDom.CodeCompileUnit)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateCompileUnitStart(CodeCompileUnit)
  nameWithType: CodeGenerator.GenerateCompileUnitStart(CodeCompileUnit)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateCompileUnitStart(CodeCompileUnit)
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateConditionStatement(System.CodeDom.CodeConditionStatement)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateConditionStatement(CodeConditionStatement)
  nameWithType: CodeGenerator.GenerateConditionStatement(CodeConditionStatement)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateConditionStatement(CodeConditionStatement)
- uid: System.CodeDom.CodeConditionStatement
  parent: System.CodeDom
  isExternal: false
  name: CodeConditionStatement
  nameWithType: CodeConditionStatement
  fullName: System.CodeDom.CodeConditionStatement
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateConstructor(System.CodeDom.CodeConstructor,System.CodeDom.CodeTypeDeclaration)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateConstructor(CodeConstructor,CodeTypeDeclaration)
  nameWithType: CodeGenerator.GenerateConstructor(CodeConstructor,CodeTypeDeclaration)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateConstructor(CodeConstructor,CodeTypeDeclaration)
- uid: System.CodeDom.CodeConstructor
  parent: System.CodeDom
  isExternal: false
  name: CodeConstructor
  nameWithType: CodeConstructor
  fullName: System.CodeDom.CodeConstructor
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateDecimalValue(System.Decimal)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateDecimalValue(Decimal)
  nameWithType: CodeGenerator.GenerateDecimalValue(Decimal)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateDecimalValue(Decimal)
- uid: System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateDefaultValueExpression(System.CodeDom.CodeDefaultValueExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateDefaultValueExpression(CodeDefaultValueExpression)
  nameWithType: CodeGenerator.GenerateDefaultValueExpression(CodeDefaultValueExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateDefaultValueExpression(CodeDefaultValueExpression)
- uid: System.CodeDom.CodeDefaultValueExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeDefaultValueExpression
  nameWithType: CodeDefaultValueExpression
  fullName: System.CodeDom.CodeDefaultValueExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateDelegateCreateExpression(System.CodeDom.CodeDelegateCreateExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateDelegateCreateExpression(CodeDelegateCreateExpression)
  nameWithType: CodeGenerator.GenerateDelegateCreateExpression(CodeDelegateCreateExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateDelegateCreateExpression(CodeDelegateCreateExpression)
- uid: System.CodeDom.CodeDelegateCreateExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeDelegateCreateExpression
  nameWithType: CodeDelegateCreateExpression
  fullName: System.CodeDom.CodeDelegateCreateExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateDelegateInvokeExpression(System.CodeDom.CodeDelegateInvokeExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateDelegateInvokeExpression(CodeDelegateInvokeExpression)
  nameWithType: CodeGenerator.GenerateDelegateInvokeExpression(CodeDelegateInvokeExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateDelegateInvokeExpression(CodeDelegateInvokeExpression)
- uid: System.CodeDom.CodeDelegateInvokeExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeDelegateInvokeExpression
  nameWithType: CodeDelegateInvokeExpression
  fullName: System.CodeDom.CodeDelegateInvokeExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateDirectionExpression(System.CodeDom.CodeDirectionExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateDirectionExpression(CodeDirectionExpression)
  nameWithType: CodeGenerator.GenerateDirectionExpression(CodeDirectionExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateDirectionExpression(CodeDirectionExpression)
- uid: System.CodeDom.CodeDirectionExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeDirectionExpression
  nameWithType: CodeDirectionExpression
  fullName: System.CodeDom.CodeDirectionExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateDirectives(System.CodeDom.CodeDirectiveCollection)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateDirectives(CodeDirectiveCollection)
  nameWithType: CodeGenerator.GenerateDirectives(CodeDirectiveCollection)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateDirectives(CodeDirectiveCollection)
- uid: System.CodeDom.CodeDirectiveCollection
  parent: System.CodeDom
  isExternal: false
  name: CodeDirectiveCollection
  nameWithType: CodeDirectiveCollection
  fullName: System.CodeDom.CodeDirectiveCollection
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateDoubleValue(System.Double)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateDoubleValue(Double)
  nameWithType: CodeGenerator.GenerateDoubleValue(Double)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateDoubleValue(Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateEntryPointMethod(System.CodeDom.CodeEntryPointMethod,System.CodeDom.CodeTypeDeclaration)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateEntryPointMethod(CodeEntryPointMethod,CodeTypeDeclaration)
  nameWithType: CodeGenerator.GenerateEntryPointMethod(CodeEntryPointMethod,CodeTypeDeclaration)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateEntryPointMethod(CodeEntryPointMethod,CodeTypeDeclaration)
- uid: System.CodeDom.CodeEntryPointMethod
  parent: System.CodeDom
  isExternal: false
  name: CodeEntryPointMethod
  nameWithType: CodeEntryPointMethod
  fullName: System.CodeDom.CodeEntryPointMethod
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateEvent(System.CodeDom.CodeMemberEvent,System.CodeDom.CodeTypeDeclaration)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateEvent(CodeMemberEvent,CodeTypeDeclaration)
  nameWithType: CodeGenerator.GenerateEvent(CodeMemberEvent,CodeTypeDeclaration)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateEvent(CodeMemberEvent,CodeTypeDeclaration)
- uid: System.CodeDom.CodeMemberEvent
  parent: System.CodeDom
  isExternal: false
  name: CodeMemberEvent
  nameWithType: CodeMemberEvent
  fullName: System.CodeDom.CodeMemberEvent
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateEventReferenceExpression(System.CodeDom.CodeEventReferenceExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateEventReferenceExpression(CodeEventReferenceExpression)
  nameWithType: CodeGenerator.GenerateEventReferenceExpression(CodeEventReferenceExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateEventReferenceExpression(CodeEventReferenceExpression)
- uid: System.CodeDom.CodeEventReferenceExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeEventReferenceExpression
  nameWithType: CodeEventReferenceExpression
  fullName: System.CodeDom.CodeEventReferenceExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateExpression(System.CodeDom.CodeExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateExpression(CodeExpression)
  nameWithType: CodeGenerator.GenerateExpression(CodeExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateExpression(CodeExpression)
- uid: System.CodeDom.CodeExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeExpression
  nameWithType: CodeExpression
  fullName: System.CodeDom.CodeExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateExpressionStatement(System.CodeDom.CodeExpressionStatement)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateExpressionStatement(CodeExpressionStatement)
  nameWithType: CodeGenerator.GenerateExpressionStatement(CodeExpressionStatement)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateExpressionStatement(CodeExpressionStatement)
- uid: System.CodeDom.CodeExpressionStatement
  parent: System.CodeDom
  isExternal: false
  name: CodeExpressionStatement
  nameWithType: CodeExpressionStatement
  fullName: System.CodeDom.CodeExpressionStatement
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateField(System.CodeDom.CodeMemberField)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateField(CodeMemberField)
  nameWithType: CodeGenerator.GenerateField(CodeMemberField)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateField(CodeMemberField)
- uid: System.CodeDom.CodeMemberField
  parent: System.CodeDom
  isExternal: false
  name: CodeMemberField
  nameWithType: CodeMemberField
  fullName: System.CodeDom.CodeMemberField
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateFieldReferenceExpression(System.CodeDom.CodeFieldReferenceExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateFieldReferenceExpression(CodeFieldReferenceExpression)
  nameWithType: CodeGenerator.GenerateFieldReferenceExpression(CodeFieldReferenceExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateFieldReferenceExpression(CodeFieldReferenceExpression)
- uid: System.CodeDom.CodeFieldReferenceExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeFieldReferenceExpression
  nameWithType: CodeFieldReferenceExpression
  fullName: System.CodeDom.CodeFieldReferenceExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateGotoStatement(System.CodeDom.CodeGotoStatement)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateGotoStatement(CodeGotoStatement)
  nameWithType: CodeGenerator.GenerateGotoStatement(CodeGotoStatement)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateGotoStatement(CodeGotoStatement)
- uid: System.CodeDom.CodeGotoStatement
  parent: System.CodeDom
  isExternal: false
  name: CodeGotoStatement
  nameWithType: CodeGotoStatement
  fullName: System.CodeDom.CodeGotoStatement
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateIndexerExpression(System.CodeDom.CodeIndexerExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateIndexerExpression(CodeIndexerExpression)
  nameWithType: CodeGenerator.GenerateIndexerExpression(CodeIndexerExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateIndexerExpression(CodeIndexerExpression)
- uid: System.CodeDom.CodeIndexerExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeIndexerExpression
  nameWithType: CodeIndexerExpression
  fullName: System.CodeDom.CodeIndexerExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateIterationStatement(System.CodeDom.CodeIterationStatement)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateIterationStatement(CodeIterationStatement)
  nameWithType: CodeGenerator.GenerateIterationStatement(CodeIterationStatement)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateIterationStatement(CodeIterationStatement)
- uid: System.CodeDom.CodeIterationStatement
  parent: System.CodeDom
  isExternal: false
  name: CodeIterationStatement
  nameWithType: CodeIterationStatement
  fullName: System.CodeDom.CodeIterationStatement
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateLabeledStatement(System.CodeDom.CodeLabeledStatement)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateLabeledStatement(CodeLabeledStatement)
  nameWithType: CodeGenerator.GenerateLabeledStatement(CodeLabeledStatement)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateLabeledStatement(CodeLabeledStatement)
- uid: System.CodeDom.CodeLabeledStatement
  parent: System.CodeDom
  isExternal: false
  name: CodeLabeledStatement
  nameWithType: CodeLabeledStatement
  fullName: System.CodeDom.CodeLabeledStatement
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateLinePragmaEnd(System.CodeDom.CodeLinePragma)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateLinePragmaEnd(CodeLinePragma)
  nameWithType: CodeGenerator.GenerateLinePragmaEnd(CodeLinePragma)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateLinePragmaEnd(CodeLinePragma)
- uid: System.CodeDom.CodeLinePragma
  parent: System.CodeDom
  isExternal: false
  name: CodeLinePragma
  nameWithType: CodeLinePragma
  fullName: System.CodeDom.CodeLinePragma
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateLinePragmaStart(System.CodeDom.CodeLinePragma)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateLinePragmaStart(CodeLinePragma)
  nameWithType: CodeGenerator.GenerateLinePragmaStart(CodeLinePragma)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateLinePragmaStart(CodeLinePragma)
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateMethod(System.CodeDom.CodeMemberMethod,System.CodeDom.CodeTypeDeclaration)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateMethod(CodeMemberMethod,CodeTypeDeclaration)
  nameWithType: CodeGenerator.GenerateMethod(CodeMemberMethod,CodeTypeDeclaration)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateMethod(CodeMemberMethod,CodeTypeDeclaration)
- uid: System.CodeDom.CodeMemberMethod
  parent: System.CodeDom
  isExternal: false
  name: CodeMemberMethod
  nameWithType: CodeMemberMethod
  fullName: System.CodeDom.CodeMemberMethod
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateMethodInvokeExpression(System.CodeDom.CodeMethodInvokeExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateMethodInvokeExpression(CodeMethodInvokeExpression)
  nameWithType: CodeGenerator.GenerateMethodInvokeExpression(CodeMethodInvokeExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateMethodInvokeExpression(CodeMethodInvokeExpression)
- uid: System.CodeDom.CodeMethodInvokeExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeMethodInvokeExpression
  nameWithType: CodeMethodInvokeExpression
  fullName: System.CodeDom.CodeMethodInvokeExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateMethodReferenceExpression(System.CodeDom.CodeMethodReferenceExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateMethodReferenceExpression(CodeMethodReferenceExpression)
  nameWithType: CodeGenerator.GenerateMethodReferenceExpression(CodeMethodReferenceExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateMethodReferenceExpression(CodeMethodReferenceExpression)
- uid: System.CodeDom.CodeMethodReferenceExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeMethodReferenceExpression
  nameWithType: CodeMethodReferenceExpression
  fullName: System.CodeDom.CodeMethodReferenceExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateMethodReturnStatement(System.CodeDom.CodeMethodReturnStatement)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateMethodReturnStatement(CodeMethodReturnStatement)
  nameWithType: CodeGenerator.GenerateMethodReturnStatement(CodeMethodReturnStatement)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateMethodReturnStatement(CodeMethodReturnStatement)
- uid: System.CodeDom.CodeMethodReturnStatement
  parent: System.CodeDom
  isExternal: false
  name: CodeMethodReturnStatement
  nameWithType: CodeMethodReturnStatement
  fullName: System.CodeDom.CodeMethodReturnStatement
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateNamespace(System.CodeDom.CodeNamespace)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateNamespace(CodeNamespace)
  nameWithType: CodeGenerator.GenerateNamespace(CodeNamespace)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateNamespace(CodeNamespace)
- uid: System.CodeDom.CodeNamespace
  parent: System.CodeDom
  isExternal: false
  name: CodeNamespace
  nameWithType: CodeNamespace
  fullName: System.CodeDom.CodeNamespace
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceEnd(System.CodeDom.CodeNamespace)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateNamespaceEnd(CodeNamespace)
  nameWithType: CodeGenerator.GenerateNamespaceEnd(CodeNamespace)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceEnd(CodeNamespace)
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceImport(System.CodeDom.CodeNamespaceImport)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateNamespaceImport(CodeNamespaceImport)
  nameWithType: CodeGenerator.GenerateNamespaceImport(CodeNamespaceImport)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceImport(CodeNamespaceImport)
- uid: System.CodeDom.CodeNamespaceImport
  parent: System.CodeDom
  isExternal: false
  name: CodeNamespaceImport
  nameWithType: CodeNamespaceImport
  fullName: System.CodeDom.CodeNamespaceImport
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceImports(System.CodeDom.CodeNamespace)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateNamespaceImports(CodeNamespace)
  nameWithType: CodeGenerator.GenerateNamespaceImports(CodeNamespace)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceImports(CodeNamespace)
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateNamespaces(System.CodeDom.CodeCompileUnit)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateNamespaces(CodeCompileUnit)
  nameWithType: CodeGenerator.GenerateNamespaces(CodeCompileUnit)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateNamespaces(CodeCompileUnit)
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceStart(System.CodeDom.CodeNamespace)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateNamespaceStart(CodeNamespace)
  nameWithType: CodeGenerator.GenerateNamespaceStart(CodeNamespace)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceStart(CodeNamespace)
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateObjectCreateExpression(System.CodeDom.CodeObjectCreateExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateObjectCreateExpression(CodeObjectCreateExpression)
  nameWithType: CodeGenerator.GenerateObjectCreateExpression(CodeObjectCreateExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateObjectCreateExpression(CodeObjectCreateExpression)
- uid: System.CodeDom.CodeObjectCreateExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeObjectCreateExpression
  nameWithType: CodeObjectCreateExpression
  fullName: System.CodeDom.CodeObjectCreateExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateParameterDeclarationExpression(System.CodeDom.CodeParameterDeclarationExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateParameterDeclarationExpression(CodeParameterDeclarationExpression)
  nameWithType: CodeGenerator.GenerateParameterDeclarationExpression(CodeParameterDeclarationExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateParameterDeclarationExpression(CodeParameterDeclarationExpression)
- uid: System.CodeDom.CodeParameterDeclarationExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeParameterDeclarationExpression
  nameWithType: CodeParameterDeclarationExpression
  fullName: System.CodeDom.CodeParameterDeclarationExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GeneratePrimitiveExpression(System.CodeDom.CodePrimitiveExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GeneratePrimitiveExpression(CodePrimitiveExpression)
  nameWithType: CodeGenerator.GeneratePrimitiveExpression(CodePrimitiveExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GeneratePrimitiveExpression(CodePrimitiveExpression)
- uid: System.CodeDom.CodePrimitiveExpression
  parent: System.CodeDom
  isExternal: false
  name: CodePrimitiveExpression
  nameWithType: CodePrimitiveExpression
  fullName: System.CodeDom.CodePrimitiveExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateProperty(System.CodeDom.CodeMemberProperty,System.CodeDom.CodeTypeDeclaration)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateProperty(CodeMemberProperty,CodeTypeDeclaration)
  nameWithType: CodeGenerator.GenerateProperty(CodeMemberProperty,CodeTypeDeclaration)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateProperty(CodeMemberProperty,CodeTypeDeclaration)
- uid: System.CodeDom.CodeMemberProperty
  parent: System.CodeDom
  isExternal: false
  name: CodeMemberProperty
  nameWithType: CodeMemberProperty
  fullName: System.CodeDom.CodeMemberProperty
- uid: System.CodeDom.Compiler.CodeGenerator.GeneratePropertyReferenceExpression(System.CodeDom.CodePropertyReferenceExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GeneratePropertyReferenceExpression(CodePropertyReferenceExpression)
  nameWithType: CodeGenerator.GeneratePropertyReferenceExpression(CodePropertyReferenceExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GeneratePropertyReferenceExpression(CodePropertyReferenceExpression)
- uid: System.CodeDom.CodePropertyReferenceExpression
  parent: System.CodeDom
  isExternal: false
  name: CodePropertyReferenceExpression
  nameWithType: CodePropertyReferenceExpression
  fullName: System.CodeDom.CodePropertyReferenceExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GeneratePropertySetValueReferenceExpression(System.CodeDom.CodePropertySetValueReferenceExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GeneratePropertySetValueReferenceExpression(CodePropertySetValueReferenceExpression)
  nameWithType: CodeGenerator.GeneratePropertySetValueReferenceExpression(CodePropertySetValueReferenceExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GeneratePropertySetValueReferenceExpression(CodePropertySetValueReferenceExpression)
- uid: System.CodeDom.CodePropertySetValueReferenceExpression
  parent: System.CodeDom
  isExternal: false
  name: CodePropertySetValueReferenceExpression
  nameWithType: CodePropertySetValueReferenceExpression
  fullName: System.CodeDom.CodePropertySetValueReferenceExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateRemoveEventStatement(System.CodeDom.CodeRemoveEventStatement)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateRemoveEventStatement(CodeRemoveEventStatement)
  nameWithType: CodeGenerator.GenerateRemoveEventStatement(CodeRemoveEventStatement)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateRemoveEventStatement(CodeRemoveEventStatement)
- uid: System.CodeDom.CodeRemoveEventStatement
  parent: System.CodeDom
  isExternal: false
  name: CodeRemoveEventStatement
  nameWithType: CodeRemoveEventStatement
  fullName: System.CodeDom.CodeRemoveEventStatement
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateSingleFloatValue(System.Single)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateSingleFloatValue(Single)
  nameWithType: CodeGenerator.GenerateSingleFloatValue(Single)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateSingleFloatValue(Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateSnippetCompileUnit(System.CodeDom.CodeSnippetCompileUnit)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateSnippetCompileUnit(CodeSnippetCompileUnit)
  nameWithType: CodeGenerator.GenerateSnippetCompileUnit(CodeSnippetCompileUnit)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateSnippetCompileUnit(CodeSnippetCompileUnit)
- uid: System.CodeDom.CodeSnippetCompileUnit
  parent: System.CodeDom
  isExternal: false
  name: CodeSnippetCompileUnit
  nameWithType: CodeSnippetCompileUnit
  fullName: System.CodeDom.CodeSnippetCompileUnit
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateSnippetExpression(System.CodeDom.CodeSnippetExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateSnippetExpression(CodeSnippetExpression)
  nameWithType: CodeGenerator.GenerateSnippetExpression(CodeSnippetExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateSnippetExpression(CodeSnippetExpression)
- uid: System.CodeDom.CodeSnippetExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeSnippetExpression
  nameWithType: CodeSnippetExpression
  fullName: System.CodeDom.CodeSnippetExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateSnippetMember(System.CodeDom.CodeSnippetTypeMember)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateSnippetMember(CodeSnippetTypeMember)
  nameWithType: CodeGenerator.GenerateSnippetMember(CodeSnippetTypeMember)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateSnippetMember(CodeSnippetTypeMember)
- uid: System.CodeDom.CodeSnippetTypeMember
  parent: System.CodeDom
  isExternal: false
  name: CodeSnippetTypeMember
  nameWithType: CodeSnippetTypeMember
  fullName: System.CodeDom.CodeSnippetTypeMember
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateSnippetStatement(System.CodeDom.CodeSnippetStatement)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateSnippetStatement(CodeSnippetStatement)
  nameWithType: CodeGenerator.GenerateSnippetStatement(CodeSnippetStatement)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateSnippetStatement(CodeSnippetStatement)
- uid: System.CodeDom.CodeSnippetStatement
  parent: System.CodeDom
  isExternal: false
  name: CodeSnippetStatement
  nameWithType: CodeSnippetStatement
  fullName: System.CodeDom.CodeSnippetStatement
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateStatement(System.CodeDom.CodeStatement)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateStatement(CodeStatement)
  nameWithType: CodeGenerator.GenerateStatement(CodeStatement)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateStatement(CodeStatement)
- uid: System.CodeDom.CodeStatement
  parent: System.CodeDom
  isExternal: false
  name: CodeStatement
  nameWithType: CodeStatement
  fullName: System.CodeDom.CodeStatement
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateStatements(System.CodeDom.CodeStatementCollection)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateStatements(CodeStatementCollection)
  nameWithType: CodeGenerator.GenerateStatements(CodeStatementCollection)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateStatements(CodeStatementCollection)
- uid: System.CodeDom.CodeStatementCollection
  parent: System.CodeDom
  isExternal: false
  name: CodeStatementCollection
  nameWithType: CodeStatementCollection
  fullName: System.CodeDom.CodeStatementCollection
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateThisReferenceExpression(System.CodeDom.CodeThisReferenceExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateThisReferenceExpression(CodeThisReferenceExpression)
  nameWithType: CodeGenerator.GenerateThisReferenceExpression(CodeThisReferenceExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateThisReferenceExpression(CodeThisReferenceExpression)
- uid: System.CodeDom.CodeThisReferenceExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeThisReferenceExpression
  nameWithType: CodeThisReferenceExpression
  fullName: System.CodeDom.CodeThisReferenceExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateThrowExceptionStatement(System.CodeDom.CodeThrowExceptionStatement)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateThrowExceptionStatement(CodeThrowExceptionStatement)
  nameWithType: CodeGenerator.GenerateThrowExceptionStatement(CodeThrowExceptionStatement)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateThrowExceptionStatement(CodeThrowExceptionStatement)
- uid: System.CodeDom.CodeThrowExceptionStatement
  parent: System.CodeDom
  isExternal: false
  name: CodeThrowExceptionStatement
  nameWithType: CodeThrowExceptionStatement
  fullName: System.CodeDom.CodeThrowExceptionStatement
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateTryCatchFinallyStatement(System.CodeDom.CodeTryCatchFinallyStatement)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateTryCatchFinallyStatement(CodeTryCatchFinallyStatement)
  nameWithType: CodeGenerator.GenerateTryCatchFinallyStatement(CodeTryCatchFinallyStatement)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateTryCatchFinallyStatement(CodeTryCatchFinallyStatement)
- uid: System.CodeDom.CodeTryCatchFinallyStatement
  parent: System.CodeDom
  isExternal: false
  name: CodeTryCatchFinallyStatement
  nameWithType: CodeTryCatchFinallyStatement
  fullName: System.CodeDom.CodeTryCatchFinallyStatement
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateTypeConstructor(System.CodeDom.CodeTypeConstructor)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateTypeConstructor(CodeTypeConstructor)
  nameWithType: CodeGenerator.GenerateTypeConstructor(CodeTypeConstructor)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateTypeConstructor(CodeTypeConstructor)
- uid: System.CodeDom.CodeTypeConstructor
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeConstructor
  nameWithType: CodeTypeConstructor
  fullName: System.CodeDom.CodeTypeConstructor
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateTypeEnd(System.CodeDom.CodeTypeDeclaration)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateTypeEnd(CodeTypeDeclaration)
  nameWithType: CodeGenerator.GenerateTypeEnd(CodeTypeDeclaration)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateTypeEnd(CodeTypeDeclaration)
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateTypeOfExpression(System.CodeDom.CodeTypeOfExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateTypeOfExpression(CodeTypeOfExpression)
  nameWithType: CodeGenerator.GenerateTypeOfExpression(CodeTypeOfExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateTypeOfExpression(CodeTypeOfExpression)
- uid: System.CodeDom.CodeTypeOfExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeOfExpression
  nameWithType: CodeTypeOfExpression
  fullName: System.CodeDom.CodeTypeOfExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateTypeReferenceExpression(System.CodeDom.CodeTypeReferenceExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateTypeReferenceExpression(CodeTypeReferenceExpression)
  nameWithType: CodeGenerator.GenerateTypeReferenceExpression(CodeTypeReferenceExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateTypeReferenceExpression(CodeTypeReferenceExpression)
- uid: System.CodeDom.CodeTypeReferenceExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeReferenceExpression
  nameWithType: CodeTypeReferenceExpression
  fullName: System.CodeDom.CodeTypeReferenceExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateTypes(System.CodeDom.CodeNamespace)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateTypes(CodeNamespace)
  nameWithType: CodeGenerator.GenerateTypes(CodeNamespace)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateTypes(CodeNamespace)
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateTypeStart(System.CodeDom.CodeTypeDeclaration)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateTypeStart(CodeTypeDeclaration)
  nameWithType: CodeGenerator.GenerateTypeStart(CodeTypeDeclaration)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateTypeStart(CodeTypeDeclaration)
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateVariableDeclarationStatement(System.CodeDom.CodeVariableDeclarationStatement)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateVariableDeclarationStatement(CodeVariableDeclarationStatement)
  nameWithType: CodeGenerator.GenerateVariableDeclarationStatement(CodeVariableDeclarationStatement)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateVariableDeclarationStatement(CodeVariableDeclarationStatement)
- uid: System.CodeDom.CodeVariableDeclarationStatement
  parent: System.CodeDom
  isExternal: false
  name: CodeVariableDeclarationStatement
  nameWithType: CodeVariableDeclarationStatement
  fullName: System.CodeDom.CodeVariableDeclarationStatement
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateVariableReferenceExpression(System.CodeDom.CodeVariableReferenceExpression)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateVariableReferenceExpression(CodeVariableReferenceExpression)
  nameWithType: CodeGenerator.GenerateVariableReferenceExpression(CodeVariableReferenceExpression)
  fullName: System.CodeDom.Compiler.CodeGenerator.GenerateVariableReferenceExpression(CodeVariableReferenceExpression)
- uid: System.CodeDom.CodeVariableReferenceExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeVariableReferenceExpression
  nameWithType: CodeVariableReferenceExpression
  fullName: System.CodeDom.CodeVariableReferenceExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GetTypeOutput(System.CodeDom.CodeTypeReference)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GetTypeOutput(CodeTypeReference)
  nameWithType: CodeGenerator.GetTypeOutput(CodeTypeReference)
  fullName: System.CodeDom.Compiler.CodeGenerator.GetTypeOutput(CodeTypeReference)
- uid: System.CodeDom.CodeTypeReference
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeReference
  nameWithType: CodeTypeReference
  fullName: System.CodeDom.CodeTypeReference
- uid: System.CodeDom.Compiler.CodeGenerator.Indent
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: Indent
  nameWithType: CodeGenerator.Indent
  fullName: System.CodeDom.Compiler.CodeGenerator.Indent
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.CodeDom.Compiler.CodeGenerator.IsCurrentClass
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: IsCurrentClass
  nameWithType: CodeGenerator.IsCurrentClass
  fullName: System.CodeDom.Compiler.CodeGenerator.IsCurrentClass
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.CodeDom.Compiler.CodeGenerator.IsCurrentDelegate
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: IsCurrentDelegate
  nameWithType: CodeGenerator.IsCurrentDelegate
  fullName: System.CodeDom.Compiler.CodeGenerator.IsCurrentDelegate
- uid: System.CodeDom.Compiler.CodeGenerator.IsCurrentEnum
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: IsCurrentEnum
  nameWithType: CodeGenerator.IsCurrentEnum
  fullName: System.CodeDom.Compiler.CodeGenerator.IsCurrentEnum
- uid: System.CodeDom.Compiler.CodeGenerator.IsCurrentInterface
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: IsCurrentInterface
  nameWithType: CodeGenerator.IsCurrentInterface
  fullName: System.CodeDom.Compiler.CodeGenerator.IsCurrentInterface
- uid: System.CodeDom.Compiler.CodeGenerator.IsCurrentStruct
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: IsCurrentStruct
  nameWithType: CodeGenerator.IsCurrentStruct
  fullName: System.CodeDom.Compiler.CodeGenerator.IsCurrentStruct
- uid: System.CodeDom.Compiler.CodeGenerator.IsValidIdentifier(System.String)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: IsValidIdentifier(String)
  nameWithType: CodeGenerator.IsValidIdentifier(String)
  fullName: System.CodeDom.Compiler.CodeGenerator.IsValidIdentifier(String)
- uid: System.CodeDom.Compiler.CodeGenerator.IsValidLanguageIndependentIdentifier(System.String)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: IsValidLanguageIndependentIdentifier(String)
  nameWithType: CodeGenerator.IsValidLanguageIndependentIdentifier(String)
  fullName: System.CodeDom.Compiler.CodeGenerator.IsValidLanguageIndependentIdentifier(String)
- uid: System.CodeDom.Compiler.CodeGenerator.NullToken
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: NullToken
  nameWithType: CodeGenerator.NullToken
  fullName: System.CodeDom.Compiler.CodeGenerator.NullToken
- uid: System.CodeDom.Compiler.CodeGenerator.Options
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: Options
  nameWithType: CodeGenerator.Options
  fullName: System.CodeDom.Compiler.CodeGenerator.Options
- uid: System.CodeDom.Compiler.CodeGenerator.Output
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: Output
  nameWithType: CodeGenerator.Output
  fullName: System.CodeDom.Compiler.CodeGenerator.Output
- uid: System.CodeDom.Compiler.CodeGenerator.OutputAttributeArgument(System.CodeDom.CodeAttributeArgument)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: OutputAttributeArgument(CodeAttributeArgument)
  nameWithType: CodeGenerator.OutputAttributeArgument(CodeAttributeArgument)
  fullName: System.CodeDom.Compiler.CodeGenerator.OutputAttributeArgument(CodeAttributeArgument)
- uid: System.CodeDom.CodeAttributeArgument
  parent: System.CodeDom
  isExternal: false
  name: CodeAttributeArgument
  nameWithType: CodeAttributeArgument
  fullName: System.CodeDom.CodeAttributeArgument
- uid: System.CodeDom.Compiler.CodeGenerator.OutputAttributeDeclarations(System.CodeDom.CodeAttributeDeclarationCollection)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: OutputAttributeDeclarations(CodeAttributeDeclarationCollection)
  nameWithType: CodeGenerator.OutputAttributeDeclarations(CodeAttributeDeclarationCollection)
  fullName: System.CodeDom.Compiler.CodeGenerator.OutputAttributeDeclarations(CodeAttributeDeclarationCollection)
- uid: System.CodeDom.Compiler.CodeGenerator.OutputDirection(System.CodeDom.FieldDirection)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: OutputDirection(FieldDirection)
  nameWithType: CodeGenerator.OutputDirection(FieldDirection)
  fullName: System.CodeDom.Compiler.CodeGenerator.OutputDirection(FieldDirection)
- uid: System.CodeDom.FieldDirection
  parent: System.CodeDom
  isExternal: false
  name: FieldDirection
  nameWithType: FieldDirection
  fullName: System.CodeDom.FieldDirection
- uid: System.CodeDom.Compiler.CodeGenerator.OutputExpressionList(System.CodeDom.CodeExpressionCollection)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: OutputExpressionList(CodeExpressionCollection)
  nameWithType: CodeGenerator.OutputExpressionList(CodeExpressionCollection)
  fullName: System.CodeDom.Compiler.CodeGenerator.OutputExpressionList(CodeExpressionCollection)
- uid: System.CodeDom.CodeExpressionCollection
  parent: System.CodeDom
  isExternal: false
  name: CodeExpressionCollection
  nameWithType: CodeExpressionCollection
  fullName: System.CodeDom.CodeExpressionCollection
- uid: System.CodeDom.Compiler.CodeGenerator.OutputExpressionList(System.CodeDom.CodeExpressionCollection,System.Boolean)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: OutputExpressionList(CodeExpressionCollection,Boolean)
  nameWithType: CodeGenerator.OutputExpressionList(CodeExpressionCollection,Boolean)
  fullName: System.CodeDom.Compiler.CodeGenerator.OutputExpressionList(CodeExpressionCollection,Boolean)
- uid: System.CodeDom.Compiler.CodeGenerator.OutputFieldScopeModifier(System.CodeDom.MemberAttributes)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: OutputFieldScopeModifier(MemberAttributes)
  nameWithType: CodeGenerator.OutputFieldScopeModifier(MemberAttributes)
  fullName: System.CodeDom.Compiler.CodeGenerator.OutputFieldScopeModifier(MemberAttributes)
- uid: System.CodeDom.MemberAttributes
  parent: System.CodeDom
  isExternal: false
  name: MemberAttributes
  nameWithType: MemberAttributes
  fullName: System.CodeDom.MemberAttributes
- uid: System.CodeDom.Compiler.CodeGenerator.OutputIdentifier(System.String)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: OutputIdentifier(String)
  nameWithType: CodeGenerator.OutputIdentifier(String)
  fullName: System.CodeDom.Compiler.CodeGenerator.OutputIdentifier(String)
- uid: System.CodeDom.Compiler.CodeGenerator.OutputMemberAccessModifier(System.CodeDom.MemberAttributes)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: OutputMemberAccessModifier(MemberAttributes)
  nameWithType: CodeGenerator.OutputMemberAccessModifier(MemberAttributes)
  fullName: System.CodeDom.Compiler.CodeGenerator.OutputMemberAccessModifier(MemberAttributes)
- uid: System.CodeDom.Compiler.CodeGenerator.OutputMemberScopeModifier(System.CodeDom.MemberAttributes)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: OutputMemberScopeModifier(MemberAttributes)
  nameWithType: CodeGenerator.OutputMemberScopeModifier(MemberAttributes)
  fullName: System.CodeDom.Compiler.CodeGenerator.OutputMemberScopeModifier(MemberAttributes)
- uid: System.CodeDom.Compiler.CodeGenerator.OutputOperator(System.CodeDom.CodeBinaryOperatorType)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: OutputOperator(CodeBinaryOperatorType)
  nameWithType: CodeGenerator.OutputOperator(CodeBinaryOperatorType)
  fullName: System.CodeDom.Compiler.CodeGenerator.OutputOperator(CodeBinaryOperatorType)
- uid: System.CodeDom.CodeBinaryOperatorType
  parent: System.CodeDom
  isExternal: false
  name: CodeBinaryOperatorType
  nameWithType: CodeBinaryOperatorType
  fullName: System.CodeDom.CodeBinaryOperatorType
- uid: System.CodeDom.Compiler.CodeGenerator.OutputParameters(System.CodeDom.CodeParameterDeclarationExpressionCollection)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: OutputParameters(CodeParameterDeclarationExpressionCollection)
  nameWithType: CodeGenerator.OutputParameters(CodeParameterDeclarationExpressionCollection)
  fullName: System.CodeDom.Compiler.CodeGenerator.OutputParameters(CodeParameterDeclarationExpressionCollection)
- uid: System.CodeDom.CodeParameterDeclarationExpressionCollection
  parent: System.CodeDom
  isExternal: false
  name: CodeParameterDeclarationExpressionCollection
  nameWithType: CodeParameterDeclarationExpressionCollection
  fullName: System.CodeDom.CodeParameterDeclarationExpressionCollection
- uid: System.CodeDom.Compiler.CodeGenerator.OutputType(System.CodeDom.CodeTypeReference)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: OutputType(CodeTypeReference)
  nameWithType: CodeGenerator.OutputType(CodeTypeReference)
  fullName: System.CodeDom.Compiler.CodeGenerator.OutputType(CodeTypeReference)
- uid: System.CodeDom.Compiler.CodeGenerator.OutputTypeAttributes(System.Reflection.TypeAttributes,System.Boolean,System.Boolean)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: OutputTypeAttributes(TypeAttributes,Boolean,Boolean)
  nameWithType: CodeGenerator.OutputTypeAttributes(TypeAttributes,Boolean,Boolean)
  fullName: System.CodeDom.Compiler.CodeGenerator.OutputTypeAttributes(TypeAttributes,Boolean,Boolean)
- uid: System.Reflection.TypeAttributes
  parent: System.Reflection
  isExternal: true
  name: TypeAttributes
  nameWithType: TypeAttributes
  fullName: System.Reflection.TypeAttributes
- uid: System.CodeDom.Compiler.CodeGenerator.OutputTypeNamePair(System.CodeDom.CodeTypeReference,System.String)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: OutputTypeNamePair(CodeTypeReference,String)
  nameWithType: CodeGenerator.OutputTypeNamePair(CodeTypeReference,String)
  fullName: System.CodeDom.Compiler.CodeGenerator.OutputTypeNamePair(CodeTypeReference,String)
- uid: System.CodeDom.Compiler.CodeGenerator.QuoteSnippetString(System.String)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: QuoteSnippetString(String)
  nameWithType: CodeGenerator.QuoteSnippetString(String)
  fullName: System.CodeDom.Compiler.CodeGenerator.QuoteSnippetString(String)
- uid: System.CodeDom.Compiler.CodeGenerator.Supports(System.CodeDom.Compiler.GeneratorSupport)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: Supports(GeneratorSupport)
  nameWithType: CodeGenerator.Supports(GeneratorSupport)
  fullName: System.CodeDom.Compiler.CodeGenerator.Supports(GeneratorSupport)
- uid: System.CodeDom.Compiler.GeneratorSupport
  parent: System.CodeDom.Compiler
  isExternal: false
  name: GeneratorSupport
  nameWithType: GeneratorSupport
  fullName: System.CodeDom.Compiler.GeneratorSupport
- uid: System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#CreateEscapedIdentifier(System.String)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier(String)
  nameWithType: CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier(String)
  fullName: System.CodeDom.Compiler.CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier(String)
- uid: System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#CreateValidIdentifier(System.String)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier(String)
  nameWithType: CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier(String)
  fullName: System.CodeDom.Compiler.CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier(String)
- uid: System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit(CodeCompileUnit,TextWriter,CodeGeneratorOptions)
  nameWithType: CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit(CodeCompileUnit,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit(CodeCompileUnit,TextWriter,CodeGeneratorOptions)
- uid: System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression(CodeExpression,TextWriter,CodeGeneratorOptions)
  nameWithType: CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression(CodeExpression,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression(CodeExpression,TextWriter,CodeGeneratorOptions)
- uid: System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace(CodeNamespace,TextWriter,CodeGeneratorOptions)
  nameWithType: CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace(CodeNamespace,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace(CodeNamespace,TextWriter,CodeGeneratorOptions)
- uid: System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement(CodeStatement,TextWriter,CodeGeneratorOptions)
  nameWithType: CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement(CodeStatement,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement(CodeStatement,TextWriter,CodeGeneratorOptions)
- uid: System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType(CodeTypeDeclaration,TextWriter,CodeGeneratorOptions)
  nameWithType: CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType(CodeTypeDeclaration,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType(CodeTypeDeclaration,TextWriter,CodeGeneratorOptions)
- uid: System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GetTypeOutput(System.CodeDom.CodeTypeReference)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput(CodeTypeReference)
  nameWithType: CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput(CodeTypeReference)
  fullName: System.CodeDom.Compiler.CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput(CodeTypeReference)
- uid: System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#IsValidIdentifier(System.String)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier(String)
  nameWithType: CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier(String)
  fullName: System.CodeDom.Compiler.CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier(String)
- uid: System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#Supports(System.CodeDom.Compiler.GeneratorSupport)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: System.CodeDom.Compiler.ICodeGenerator.Supports(GeneratorSupport)
  nameWithType: CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.Supports(GeneratorSupport)
  fullName: System.CodeDom.Compiler.CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.Supports(GeneratorSupport)
- uid: System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#ValidateIdentifier(System.String)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier(String)
  nameWithType: CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier(String)
  fullName: System.CodeDom.Compiler.CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier(String)
- uid: System.CodeDom.Compiler.CodeGenerator.ValidateIdentifier(System.String)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: ValidateIdentifier(String)
  nameWithType: CodeGenerator.ValidateIdentifier(String)
  fullName: System.CodeDom.Compiler.CodeGenerator.ValidateIdentifier(String)
- uid: System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers(System.CodeDom.CodeObject)
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: ValidateIdentifiers(CodeObject)
  nameWithType: CodeGenerator.ValidateIdentifiers(CodeObject)
  fullName: System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers(CodeObject)
- uid: System.CodeDom.CodeObject
  parent: System.CodeDom
  isExternal: false
  name: CodeObject
  nameWithType: CodeObject
  fullName: System.CodeDom.CodeObject
- uid: System.CodeDom.Compiler.CodeGenerator.#ctor*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: CodeGenerator
  nameWithType: CodeGenerator.CodeGenerator
- uid: System.CodeDom.Compiler.CodeGenerator.ContinueOnNewLine*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: ContinueOnNewLine
  nameWithType: CodeGenerator.ContinueOnNewLine
- uid: System.CodeDom.Compiler.CodeGenerator.CreateEscapedIdentifier*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: CreateEscapedIdentifier
  nameWithType: CodeGenerator.CreateEscapedIdentifier
- uid: System.CodeDom.Compiler.CodeGenerator.CreateValidIdentifier*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: CreateValidIdentifier
  nameWithType: CodeGenerator.CreateValidIdentifier
- uid: System.CodeDom.Compiler.CodeGenerator.CurrentClass*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: CurrentClass
  nameWithType: CodeGenerator.CurrentClass
- uid: System.CodeDom.Compiler.CodeGenerator.CurrentMember*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: CurrentMember
  nameWithType: CodeGenerator.CurrentMember
- uid: System.CodeDom.Compiler.CodeGenerator.CurrentMemberName*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: CurrentMemberName
  nameWithType: CodeGenerator.CurrentMemberName
- uid: System.CodeDom.Compiler.CodeGenerator.CurrentTypeName*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: CurrentTypeName
  nameWithType: CodeGenerator.CurrentTypeName
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateArgumentReferenceExpression*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateArgumentReferenceExpression
  nameWithType: CodeGenerator.GenerateArgumentReferenceExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateArrayCreateExpression*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateArrayCreateExpression
  nameWithType: CodeGenerator.GenerateArrayCreateExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateArrayIndexerExpression*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateArrayIndexerExpression
  nameWithType: CodeGenerator.GenerateArrayIndexerExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateAssignStatement*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateAssignStatement
  nameWithType: CodeGenerator.GenerateAssignStatement
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateAttachEventStatement*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateAttachEventStatement
  nameWithType: CodeGenerator.GenerateAttachEventStatement
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateAttributeDeclarationsEnd*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateAttributeDeclarationsEnd
  nameWithType: CodeGenerator.GenerateAttributeDeclarationsEnd
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateAttributeDeclarationsStart*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateAttributeDeclarationsStart
  nameWithType: CodeGenerator.GenerateAttributeDeclarationsStart
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateBaseReferenceExpression*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateBaseReferenceExpression
  nameWithType: CodeGenerator.GenerateBaseReferenceExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateBinaryOperatorExpression*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateBinaryOperatorExpression
  nameWithType: CodeGenerator.GenerateBinaryOperatorExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateCastExpression*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateCastExpression
  nameWithType: CodeGenerator.GenerateCastExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateCodeFromMember*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateCodeFromMember
  nameWithType: CodeGenerator.GenerateCodeFromMember
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateComment*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateComment
  nameWithType: CodeGenerator.GenerateComment
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateCommentStatement*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateCommentStatement
  nameWithType: CodeGenerator.GenerateCommentStatement
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateCommentStatements*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateCommentStatements
  nameWithType: CodeGenerator.GenerateCommentStatements
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateCompileUnit*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateCompileUnit
  nameWithType: CodeGenerator.GenerateCompileUnit
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateCompileUnitEnd*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateCompileUnitEnd
  nameWithType: CodeGenerator.GenerateCompileUnitEnd
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateCompileUnitStart*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateCompileUnitStart
  nameWithType: CodeGenerator.GenerateCompileUnitStart
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateConditionStatement*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateConditionStatement
  nameWithType: CodeGenerator.GenerateConditionStatement
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateConstructor*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateConstructor
  nameWithType: CodeGenerator.GenerateConstructor
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateDecimalValue*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateDecimalValue
  nameWithType: CodeGenerator.GenerateDecimalValue
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateDefaultValueExpression*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateDefaultValueExpression
  nameWithType: CodeGenerator.GenerateDefaultValueExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateDelegateCreateExpression*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateDelegateCreateExpression
  nameWithType: CodeGenerator.GenerateDelegateCreateExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateDelegateInvokeExpression*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateDelegateInvokeExpression
  nameWithType: CodeGenerator.GenerateDelegateInvokeExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateDirectionExpression*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateDirectionExpression
  nameWithType: CodeGenerator.GenerateDirectionExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateDirectives*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateDirectives
  nameWithType: CodeGenerator.GenerateDirectives
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateDoubleValue*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateDoubleValue
  nameWithType: CodeGenerator.GenerateDoubleValue
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateEntryPointMethod*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateEntryPointMethod
  nameWithType: CodeGenerator.GenerateEntryPointMethod
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateEvent*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateEvent
  nameWithType: CodeGenerator.GenerateEvent
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateEventReferenceExpression*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateEventReferenceExpression
  nameWithType: CodeGenerator.GenerateEventReferenceExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateExpression*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateExpression
  nameWithType: CodeGenerator.GenerateExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateExpressionStatement*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateExpressionStatement
  nameWithType: CodeGenerator.GenerateExpressionStatement
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateField*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateField
  nameWithType: CodeGenerator.GenerateField
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateFieldReferenceExpression*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateFieldReferenceExpression
  nameWithType: CodeGenerator.GenerateFieldReferenceExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateGotoStatement*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateGotoStatement
  nameWithType: CodeGenerator.GenerateGotoStatement
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateIndexerExpression*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateIndexerExpression
  nameWithType: CodeGenerator.GenerateIndexerExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateIterationStatement*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateIterationStatement
  nameWithType: CodeGenerator.GenerateIterationStatement
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateLabeledStatement*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateLabeledStatement
  nameWithType: CodeGenerator.GenerateLabeledStatement
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateLinePragmaEnd*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateLinePragmaEnd
  nameWithType: CodeGenerator.GenerateLinePragmaEnd
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateLinePragmaStart*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateLinePragmaStart
  nameWithType: CodeGenerator.GenerateLinePragmaStart
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateMethod*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateMethod
  nameWithType: CodeGenerator.GenerateMethod
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateMethodInvokeExpression*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateMethodInvokeExpression
  nameWithType: CodeGenerator.GenerateMethodInvokeExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateMethodReferenceExpression*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateMethodReferenceExpression
  nameWithType: CodeGenerator.GenerateMethodReferenceExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateMethodReturnStatement*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateMethodReturnStatement
  nameWithType: CodeGenerator.GenerateMethodReturnStatement
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateNamespace*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateNamespace
  nameWithType: CodeGenerator.GenerateNamespace
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceEnd*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateNamespaceEnd
  nameWithType: CodeGenerator.GenerateNamespaceEnd
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceImport*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateNamespaceImport
  nameWithType: CodeGenerator.GenerateNamespaceImport
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceImports*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateNamespaceImports
  nameWithType: CodeGenerator.GenerateNamespaceImports
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateNamespaces*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateNamespaces
  nameWithType: CodeGenerator.GenerateNamespaces
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceStart*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateNamespaceStart
  nameWithType: CodeGenerator.GenerateNamespaceStart
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateObjectCreateExpression*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateObjectCreateExpression
  nameWithType: CodeGenerator.GenerateObjectCreateExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateParameterDeclarationExpression*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateParameterDeclarationExpression
  nameWithType: CodeGenerator.GenerateParameterDeclarationExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GeneratePrimitiveExpression*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GeneratePrimitiveExpression
  nameWithType: CodeGenerator.GeneratePrimitiveExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateProperty*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateProperty
  nameWithType: CodeGenerator.GenerateProperty
- uid: System.CodeDom.Compiler.CodeGenerator.GeneratePropertyReferenceExpression*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GeneratePropertyReferenceExpression
  nameWithType: CodeGenerator.GeneratePropertyReferenceExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GeneratePropertySetValueReferenceExpression*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GeneratePropertySetValueReferenceExpression
  nameWithType: CodeGenerator.GeneratePropertySetValueReferenceExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateRemoveEventStatement*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateRemoveEventStatement
  nameWithType: CodeGenerator.GenerateRemoveEventStatement
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateSingleFloatValue*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateSingleFloatValue
  nameWithType: CodeGenerator.GenerateSingleFloatValue
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateSnippetCompileUnit*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateSnippetCompileUnit
  nameWithType: CodeGenerator.GenerateSnippetCompileUnit
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateSnippetExpression*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateSnippetExpression
  nameWithType: CodeGenerator.GenerateSnippetExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateSnippetMember*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateSnippetMember
  nameWithType: CodeGenerator.GenerateSnippetMember
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateSnippetStatement*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateSnippetStatement
  nameWithType: CodeGenerator.GenerateSnippetStatement
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateStatement*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateStatement
  nameWithType: CodeGenerator.GenerateStatement
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateStatements*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateStatements
  nameWithType: CodeGenerator.GenerateStatements
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateThisReferenceExpression*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateThisReferenceExpression
  nameWithType: CodeGenerator.GenerateThisReferenceExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateThrowExceptionStatement*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateThrowExceptionStatement
  nameWithType: CodeGenerator.GenerateThrowExceptionStatement
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateTryCatchFinallyStatement*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateTryCatchFinallyStatement
  nameWithType: CodeGenerator.GenerateTryCatchFinallyStatement
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateTypeConstructor*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateTypeConstructor
  nameWithType: CodeGenerator.GenerateTypeConstructor
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateTypeEnd*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateTypeEnd
  nameWithType: CodeGenerator.GenerateTypeEnd
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateTypeOfExpression*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateTypeOfExpression
  nameWithType: CodeGenerator.GenerateTypeOfExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateTypeReferenceExpression*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateTypeReferenceExpression
  nameWithType: CodeGenerator.GenerateTypeReferenceExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateTypes*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateTypes
  nameWithType: CodeGenerator.GenerateTypes
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateTypeStart*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateTypeStart
  nameWithType: CodeGenerator.GenerateTypeStart
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateVariableDeclarationStatement*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateVariableDeclarationStatement
  nameWithType: CodeGenerator.GenerateVariableDeclarationStatement
- uid: System.CodeDom.Compiler.CodeGenerator.GenerateVariableReferenceExpression*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GenerateVariableReferenceExpression
  nameWithType: CodeGenerator.GenerateVariableReferenceExpression
- uid: System.CodeDom.Compiler.CodeGenerator.GetTypeOutput*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: GetTypeOutput
  nameWithType: CodeGenerator.GetTypeOutput
- uid: System.CodeDom.Compiler.CodeGenerator.Indent*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: Indent
  nameWithType: CodeGenerator.Indent
- uid: System.CodeDom.Compiler.CodeGenerator.IsCurrentClass*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: IsCurrentClass
  nameWithType: CodeGenerator.IsCurrentClass
- uid: System.CodeDom.Compiler.CodeGenerator.IsCurrentDelegate*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: IsCurrentDelegate
  nameWithType: CodeGenerator.IsCurrentDelegate
- uid: System.CodeDom.Compiler.CodeGenerator.IsCurrentEnum*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: IsCurrentEnum
  nameWithType: CodeGenerator.IsCurrentEnum
- uid: System.CodeDom.Compiler.CodeGenerator.IsCurrentInterface*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: IsCurrentInterface
  nameWithType: CodeGenerator.IsCurrentInterface
- uid: System.CodeDom.Compiler.CodeGenerator.IsCurrentStruct*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: IsCurrentStruct
  nameWithType: CodeGenerator.IsCurrentStruct
- uid: System.CodeDom.Compiler.CodeGenerator.IsValidIdentifier*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: IsValidIdentifier
  nameWithType: CodeGenerator.IsValidIdentifier
- uid: System.CodeDom.Compiler.CodeGenerator.IsValidLanguageIndependentIdentifier*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: IsValidLanguageIndependentIdentifier
  nameWithType: CodeGenerator.IsValidLanguageIndependentIdentifier
- uid: System.CodeDom.Compiler.CodeGenerator.NullToken*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: NullToken
  nameWithType: CodeGenerator.NullToken
- uid: System.CodeDom.Compiler.CodeGenerator.Options*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: Options
  nameWithType: CodeGenerator.Options
- uid: System.CodeDom.Compiler.CodeGenerator.Output*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: Output
  nameWithType: CodeGenerator.Output
- uid: System.CodeDom.Compiler.CodeGenerator.OutputAttributeArgument*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: OutputAttributeArgument
  nameWithType: CodeGenerator.OutputAttributeArgument
- uid: System.CodeDom.Compiler.CodeGenerator.OutputAttributeDeclarations*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: OutputAttributeDeclarations
  nameWithType: CodeGenerator.OutputAttributeDeclarations
- uid: System.CodeDom.Compiler.CodeGenerator.OutputDirection*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: OutputDirection
  nameWithType: CodeGenerator.OutputDirection
- uid: System.CodeDom.Compiler.CodeGenerator.OutputExpressionList*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: OutputExpressionList
  nameWithType: CodeGenerator.OutputExpressionList
- uid: System.CodeDom.Compiler.CodeGenerator.OutputFieldScopeModifier*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: OutputFieldScopeModifier
  nameWithType: CodeGenerator.OutputFieldScopeModifier
- uid: System.CodeDom.Compiler.CodeGenerator.OutputIdentifier*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: OutputIdentifier
  nameWithType: CodeGenerator.OutputIdentifier
- uid: System.CodeDom.Compiler.CodeGenerator.OutputMemberAccessModifier*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: OutputMemberAccessModifier
  nameWithType: CodeGenerator.OutputMemberAccessModifier
- uid: System.CodeDom.Compiler.CodeGenerator.OutputMemberScopeModifier*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: OutputMemberScopeModifier
  nameWithType: CodeGenerator.OutputMemberScopeModifier
- uid: System.CodeDom.Compiler.CodeGenerator.OutputOperator*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: OutputOperator
  nameWithType: CodeGenerator.OutputOperator
- uid: System.CodeDom.Compiler.CodeGenerator.OutputParameters*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: OutputParameters
  nameWithType: CodeGenerator.OutputParameters
- uid: System.CodeDom.Compiler.CodeGenerator.OutputType*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: OutputType
  nameWithType: CodeGenerator.OutputType
- uid: System.CodeDom.Compiler.CodeGenerator.OutputTypeAttributes*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: OutputTypeAttributes
  nameWithType: CodeGenerator.OutputTypeAttributes
- uid: System.CodeDom.Compiler.CodeGenerator.OutputTypeNamePair*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: OutputTypeNamePair
  nameWithType: CodeGenerator.OutputTypeNamePair
- uid: System.CodeDom.Compiler.CodeGenerator.QuoteSnippetString*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: QuoteSnippetString
  nameWithType: CodeGenerator.QuoteSnippetString
- uid: System.CodeDom.Compiler.CodeGenerator.Supports*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: Supports
  nameWithType: CodeGenerator.Supports
- uid: System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#CreateEscapedIdentifier*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier
  nameWithType: CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier
- uid: System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#CreateValidIdentifier*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier
  nameWithType: CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier
- uid: System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromCompileUnit*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit
  nameWithType: CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit
- uid: System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromExpression*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression
  nameWithType: CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression
- uid: System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromNamespace*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace
  nameWithType: CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace
- uid: System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromStatement*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement
  nameWithType: CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement
- uid: System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromType*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType
  nameWithType: CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType
- uid: System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GetTypeOutput*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput
  nameWithType: CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput
- uid: System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#IsValidIdentifier*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier
  nameWithType: CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier
- uid: System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#Supports*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: System.CodeDom.Compiler.ICodeGenerator.Supports
  nameWithType: CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.Supports
- uid: System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#ValidateIdentifier*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier
  nameWithType: CodeGenerator.System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier
- uid: System.CodeDom.Compiler.CodeGenerator.ValidateIdentifier*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: ValidateIdentifier
  nameWithType: CodeGenerator.ValidateIdentifier
- uid: System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers*
  parent: System.CodeDom.Compiler.CodeGenerator
  isExternal: false
  name: ValidateIdentifiers
  nameWithType: CodeGenerator.ValidateIdentifiers
