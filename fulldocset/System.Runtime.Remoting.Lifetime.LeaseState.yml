### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.Lifetime.LeaseState
  id: LeaseState
  children:
  - System.Runtime.Remoting.Lifetime.LeaseState.Active
  - System.Runtime.Remoting.Lifetime.LeaseState.Expired
  - System.Runtime.Remoting.Lifetime.LeaseState.Initial
  - System.Runtime.Remoting.Lifetime.LeaseState.Null
  - System.Runtime.Remoting.Lifetime.LeaseState.Renewing
  langs:
  - csharp
  name: LeaseState
  nameWithType: LeaseState
  fullName: System.Runtime.Remoting.Lifetime.LeaseState
  type: Enum
  summary: "Indicates the possible lease states of a lifetime lease."
  remarks: "The <xref:System.Runtime.Remoting.Lifetime.ILease.CurrentState%2A> property returns the lease status for a lease."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public enum LeaseState
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Runtime.Remoting.Lifetime.LeaseState.Active
  id: Active
  parent: System.Runtime.Remoting.Lifetime.LeaseState
  langs:
  - csharp
  name: Active
  nameWithType: LeaseState.Active
  fullName: System.Runtime.Remoting.Lifetime.LeaseState.Active
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Lifetime
  summary: "The lease is active and has not expired."
  syntax:
    content: Active
    return:
      type: System.Runtime.Remoting.Lifetime.LeaseState
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Lifetime.LeaseState.Expired
  id: Expired
  parent: System.Runtime.Remoting.Lifetime.LeaseState
  langs:
  - csharp
  name: Expired
  nameWithType: LeaseState.Expired
  fullName: System.Runtime.Remoting.Lifetime.LeaseState.Expired
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Lifetime
  summary: "The lease has expired and cannot be renewed."
  syntax:
    content: Expired
    return:
      type: System.Runtime.Remoting.Lifetime.LeaseState
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Lifetime.LeaseState.Initial
  id: Initial
  parent: System.Runtime.Remoting.Lifetime.LeaseState
  langs:
  - csharp
  name: Initial
  nameWithType: LeaseState.Initial
  fullName: System.Runtime.Remoting.Lifetime.LeaseState.Initial
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Lifetime
  summary: "The lease has been created, but is not yet active."
  syntax:
    content: Initial
    return:
      type: System.Runtime.Remoting.Lifetime.LeaseState
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Lifetime.LeaseState.Null
  id: "Null"
  parent: System.Runtime.Remoting.Lifetime.LeaseState
  langs:
  - csharp
  name: "Null"
  nameWithType: LeaseState.Null
  fullName: System.Runtime.Remoting.Lifetime.LeaseState.Null
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Lifetime
  summary: "The lease is not initialized."
  syntax:
    content: "Null"
    return:
      type: System.Runtime.Remoting.Lifetime.LeaseState
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Lifetime.LeaseState.Renewing
  id: Renewing
  parent: System.Runtime.Remoting.Lifetime.LeaseState
  langs:
  - csharp
  name: Renewing
  nameWithType: LeaseState.Renewing
  fullName: System.Runtime.Remoting.Lifetime.LeaseState.Renewing
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Lifetime
  summary: "The lease has expired and is seeking sponsorship."
  syntax:
    content: Renewing
    return:
      type: System.Runtime.Remoting.Lifetime.LeaseState
      description: "To be added."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Runtime.Remoting.Lifetime.LeaseState.Active
  parent: System.Runtime.Remoting.Lifetime.LeaseState
  isExternal: false
  name: Active
  nameWithType: LeaseState.Active
  fullName: System.Runtime.Remoting.Lifetime.LeaseState.Active
- uid: System.Runtime.Remoting.Lifetime.LeaseState
  parent: System.Runtime.Remoting.Lifetime
  isExternal: false
  name: LeaseState
  nameWithType: LeaseState
  fullName: System.Runtime.Remoting.Lifetime.LeaseState
- uid: System.Runtime.Remoting.Lifetime.LeaseState.Expired
  parent: System.Runtime.Remoting.Lifetime.LeaseState
  isExternal: false
  name: Expired
  nameWithType: LeaseState.Expired
  fullName: System.Runtime.Remoting.Lifetime.LeaseState.Expired
- uid: System.Runtime.Remoting.Lifetime.LeaseState.Initial
  parent: System.Runtime.Remoting.Lifetime.LeaseState
  isExternal: false
  name: Initial
  nameWithType: LeaseState.Initial
  fullName: System.Runtime.Remoting.Lifetime.LeaseState.Initial
- uid: System.Runtime.Remoting.Lifetime.LeaseState.Null
  parent: System.Runtime.Remoting.Lifetime.LeaseState
  isExternal: false
  name: "Null"
  nameWithType: LeaseState.Null
  fullName: System.Runtime.Remoting.Lifetime.LeaseState.Null
- uid: System.Runtime.Remoting.Lifetime.LeaseState.Renewing
  parent: System.Runtime.Remoting.Lifetime.LeaseState
  isExternal: false
  name: Renewing
  nameWithType: LeaseState.Renewing
  fullName: System.Runtime.Remoting.Lifetime.LeaseState.Renewing
