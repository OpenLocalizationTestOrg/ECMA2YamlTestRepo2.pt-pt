### YamlMime:ManagedReference
items:
- uid: System.Data.OleDb.OleDbCommandBuilder
  id: OleDbCommandBuilder
  children:
  - System.Data.OleDb.OleDbCommandBuilder.#ctor
  - System.Data.OleDb.OleDbCommandBuilder.#ctor(System.Data.OleDb.OleDbDataAdapter)
  - System.Data.OleDb.OleDbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  - System.Data.OleDb.OleDbCommandBuilder.DataAdapter
  - System.Data.OleDb.OleDbCommandBuilder.DeriveParameters(System.Data.OleDb.OleDbCommand)
  - System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand
  - System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand(System.Boolean)
  - System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand
  - System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand(System.Boolean)
  - System.Data.OleDb.OleDbCommandBuilder.GetParameterName(System.Int32)
  - System.Data.OleDb.OleDbCommandBuilder.GetParameterName(System.String)
  - System.Data.OleDb.OleDbCommandBuilder.GetParameterPlaceholder(System.Int32)
  - System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand
  - System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand(System.Boolean)
  - System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(System.String)
  - System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)
  - System.Data.OleDb.OleDbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  - System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(System.String)
  - System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)
  langs:
  - csharp
  name: OleDbCommandBuilder
  nameWithType: OleDbCommandBuilder
  fullName: System.Data.OleDb.OleDbCommandBuilder
  type: Class
  summary: "Automatically generates single-table commands that are used to reconcile changes made to a <xref href=&quot;System.Data.DataSet&quot;></xref> with the associated database. This class cannot be inherited."
  remarks: "The <xref:System.Data.OleDb.OleDbDataAdapter> does not automatically generate the SQL statements required to reconcile changes made to a <xref:System.Data.DataSet> with the associated data source. However, you can create an OleDbCommandBuilder object to automatically generate SQL statements for single-table updates if you set the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> property of the <xref:System.Data.OleDb.OleDbDataAdapter>. Then, any additional SQL statements that you do not set are generated by the OleDbCommandBuilder.       The OleDbCommandBuilder registers itself as a listener for <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> events whenever you set the <xref:System.Data.OleDb.OleDbCommandBuilder.DataAdapter%2A> property. You can only associate one <xref:System.Data.OleDb.OleDbDataAdapter> or OleDbCommandBuilder object with each other at one time.       To generate INSERT, UPDATE, or DELETE statements, the OleDbCommandBuilder uses the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> property to retrieve a required set of metadata automatically. If you change the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> after the metadata is retrieved, such as after the first update, you should call the <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> method to update the metadata.       The OleDbCommandBuilder also uses the <xref:System.Data.OleDb.OleDbCommand.Connection%2A>, <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>, and <xref:System.Data.OleDb.OleDbCommand.Transaction%2A> properties referenced by the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A>. The user should call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if one or more of these properties are modified, or if the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> itself is replaced. Otherwise the <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A>, <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A>, and <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> properties retain their previous values.       If you call <xref:System.ComponentModel.Component.Dispose%2A>, the OleDbCommandBuilder is disassociated from the <xref:System.Data.OleDb.OleDbDataAdapter>, and the generated commands are no longer used."
  example:
  - "The following example uses the <xref:System.Data.OleDb.OleDbCommand>, along <xref:System.Data.OleDb.OleDbDataAdapter> and <xref:System.Data.OleDb.OleDbConnection>, to select rows from a data source. The example is passed an initialized <xref:System.Data.DataSet>, a connection string, a query string that is an SQL SELECT statement, and a string that is the name of the data source table. The example then creates an OleDbCommandBuilder.  \n  \n [!code-cs[Classic WebData OleDbCommandBuilder#1](~/add/codesnippet/csharp/t-system.data.oledb.oled_6_1.cs)]\n [!code-vb[Classic WebData OleDbCommandBuilder#1](~/add/codesnippet/visualbasic/t-system.data.oledb.oled_6_1.vb)]"
  syntax:
    content: 'public sealed class OleDbCommandBuilder : System.Data.Common.DbCommandBuilder'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbCommandBuilder
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DbCommandBuilder.CatalogLocation
  - System.Data.Common.DbCommandBuilder.CatalogSeparator
  - System.Data.Common.DbCommandBuilder.ConflictOption
  - System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)
  - System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)
  - System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)
  - System.Data.Common.DbCommandBuilder.QuotePrefix
  - System.Data.Common.DbCommandBuilder.QuoteSuffix
  - System.Data.Common.DbCommandBuilder.RefreshSchema
  - System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)
  - System.Data.Common.DbCommandBuilder.SchemaSeparator
  - System.Data.Common.DbCommandBuilder.SetAllValues
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.#ctor
  id: '#ctor'
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: OleDbCommandBuilder()
  nameWithType: OleDbCommandBuilder.OleDbCommandBuilder()
  fullName: System.Data.OleDb.OleDbCommandBuilder.OleDbCommandBuilder()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Initializes a new instance of the <xref href=&quot;System.Data.OleDb.OleDbCommandBuilder&quot;></xref> class."
  syntax:
    content: public OleDbCommandBuilder ();
    parameters: []
  overload: System.Data.OleDb.OleDbCommandBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.#ctor(System.Data.OleDb.OleDbDataAdapter)
  id: '#ctor(System.Data.OleDb.OleDbDataAdapter)'
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: OleDbCommandBuilder(OleDbDataAdapter)
  nameWithType: OleDbCommandBuilder.OleDbCommandBuilder(OleDbDataAdapter)
  fullName: System.Data.OleDb.OleDbCommandBuilder.OleDbCommandBuilder(OleDbDataAdapter)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Initializes a new instance of the <xref href=&quot;System.Data.OleDb.OleDbCommandBuilder&quot;></xref> class with the associated <xref href=&quot;System.Data.OleDb.OleDbDataAdapter&quot;></xref> object."
  remarks: "The <xref:System.Data.OleDb.OleDbCommandBuilder> registers itself as a listener for <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> events that are generated by the <xref:System.Data.OleDb.OleDbDataAdapter> specified in this property.       When you create a new instance <xref:System.Data.OleDb.OleDbCommandBuilder>, any existing <xref:System.Data.OleDb.OleDbCommandBuilder> associated with this <xref:System.Data.OleDb.OleDbDataAdapter> is released."
  syntax:
    content: public OleDbCommandBuilder (System.Data.OleDb.OleDbDataAdapter adapter);
    parameters:
    - id: adapter
      type: System.Data.OleDb.OleDbDataAdapter
      description: "An <xref href=&quot;System.Data.OleDb.OleDbDataAdapter&quot;></xref>."
  overload: System.Data.OleDb.OleDbCommandBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  id: ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  nameWithType: OleDbCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  fullName: System.Data.OleDb.OleDbCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override void ApplyParameterInfo (System.Data.Common.DbParameter parameter, System.Data.DataRow datarow, System.Data.StatementType statementType, bool whereClause);
    parameters:
    - id: parameter
      type: System.Data.Common.DbParameter
      description: "To be added."
    - id: datarow
      type: System.Data.DataRow
      description: "To be added."
    - id: statementType
      type: System.Data.StatementType
      description: "To be added."
    - id: whereClause
      type: System.Boolean
      description: "To be added."
  overload: System.Data.OleDb.OleDbCommandBuilder.ApplyParameterInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.DataAdapter
  id: DataAdapter
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: DataAdapter
  nameWithType: OleDbCommandBuilder.DataAdapter
  fullName: System.Data.OleDb.OleDbCommandBuilder.DataAdapter
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Gets or sets an <xref href=&quot;System.Data.OleDb.OleDbDataAdapter&quot;></xref> object for which SQL statements are automatically generated."
  remarks: "The <xref:System.Data.OleDb.OleDbCommandBuilder> registers itself as a listener for <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> events that are generated by the <xref:System.Data.OleDb.OleDbDataAdapter> specified in this property.       When you create a new instance <xref:System.Data.OleDb.OleDbCommandBuilder>, any existing <xref:System.Data.OleDb.OleDbCommandBuilder> associated with this <xref:System.Data.OleDb.OleDbDataAdapter> is released."
  syntax:
    content: public System.Data.OleDb.OleDbDataAdapter DataAdapter { get; set; }
    return:
      type: System.Data.OleDb.OleDbDataAdapter
      description: "An <xref href=&quot;System.Data.OleDb.OleDbDataAdapter&quot;></xref> object."
  overload: System.Data.OleDb.OleDbCommandBuilder.DataAdapter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.DeriveParameters(System.Data.OleDb.OleDbCommand)
  id: DeriveParameters(System.Data.OleDb.OleDbCommand)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: DeriveParameters(OleDbCommand)
  nameWithType: OleDbCommandBuilder.DeriveParameters(OleDbCommand)
  fullName: System.Data.OleDb.OleDbCommandBuilder.DeriveParameters(OleDbCommand)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Retrieves parameter information from the stored procedure specified in the <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref> and populates the <xref:System.Data.OleDb.OleDbCommand.Parameters*> collection of the specified <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref> object."
  remarks: "DeriveParameters overwrites any existing parameter information for the <xref:System.Data.OleDb.OleDbCommand>.       DeriveParameters requires an additional call to the data source to obtain the information. If the parameter information is known in advance, it is more efficient to populate the parameters collection by setting the information explicitly.       You can only use DeriveParameters with stored procedures. You cannot use DeriveParameters to populate the <xref:System.Data.OleDb.OleDbParameterCollection> with arbitrary Transact-SQL statements, such as a parameterized SELECT statement.       For more information, see [Configuring Parameters and Parameter Data Types](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static void DeriveParameters (System.Data.OleDb.OleDbCommand command);
    parameters:
    - id: command
      type: System.Data.OleDb.OleDbCommand
      description: "The <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref> referencing the stored procedure from which the parameter information is to be derived. The derived parameters are added to the <xref:System.Data.OleDb.OleDbCommand.Parameters*> collection of the <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>."
  overload: System.Data.OleDb.OleDbCommandBuilder.DeriveParameters*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The underlying OLE DB provider does not support returning stored procedure parameter information, the command text is not a valid stored procedure name, or the <xref:System.Data.OleDb.OleDbCommand.CommandType*> specified was not <xref uid=&quot;langword_csharp_StoredProcedure&quot; name=&quot;StoredProcedure&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand
  id: GetDeleteCommand
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: GetDeleteCommand()
  nameWithType: OleDbCommandBuilder.GetDeleteCommand()
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Gets the automatically generated <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref> object required to perform deletions at the data source."
  remarks: "An application can use the GetDeleteCommand method for informational or troubleshooting purposes because it returns the <xref:System.Data.OleDb.OleDbCommand> object to be executed.       You can also use GetDeleteCommand as the basis of a modified command. For example, you might call GetDeleteCommand and modify the <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.OleDb.OleDbDataAdapter>.       After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way. Otherwise, the GetDeleteCommand will be still be using information from the previous statement, which might not be correct. The SQL statements are first generated when the application calls either <xref:System.Data.OleDb.OleDbDataAdapter.Update%2A> or GetDeleteCommand."
  syntax:
    content: public System.Data.OleDb.OleDbCommand GetDeleteCommand ();
    parameters: []
    return:
      type: System.Data.OleDb.OleDbCommand
      description: "The automatically generated <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref> object required to perform deletions."
  overload: System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand(System.Boolean)
  id: GetDeleteCommand(System.Boolean)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: GetDeleteCommand(Boolean)
  nameWithType: OleDbCommandBuilder.GetDeleteCommand(Boolean)
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Gets the automatically generated <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref> object required to perform deletions at the data source."
  remarks: "An application can use the <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.OleDb.OleDbCommand> object to be executed.       You can also use <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> as the basis of a modified command. For example, you might call <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> and modify the <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.OleDb.OleDbDataAdapter>.       After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way. Otherwise, the <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A> will be still be using information from the previous statement, which might not be correct. The SQL statements are first generated when the application calls either <xref:System.Data.OleDb.OleDbDataAdapter.Update%2A> or <xref:System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand%2A>.       The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters. Passing `true` for the `useColumnsForParameterNames` parameter lets you force the <xref:System.Data.OleDb.OleDbCommandBuilder> to generate parameters based on the column names instead. This succeeds only if the following conditions are met:      -   The <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> has been specified and its length is equal to or greater than the generated parameter name.      -   The generated parameter name meets the criteria specified in the <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> regular expression.      -   A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> is specified."
  syntax:
    content: public System.Data.OleDb.OleDbCommand GetDeleteCommand (bool useColumnsForParameterNames);
    parameters:
    - id: useColumnsForParameterNames
      type: System.Boolean
      description: "If <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, generate parameter names matching column names, if it is possible. If <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>, generate @p1, @p2, and so on."
    return:
      type: System.Data.OleDb.OleDbCommand
      description: "The automatically generated <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref> object required to perform deletions."
  overload: System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand
  id: GetInsertCommand
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: GetInsertCommand()
  nameWithType: OleDbCommandBuilder.GetInsertCommand()
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Gets the automatically generated <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref> object required to perform insertions at the data source."
  remarks: "An application can use the GetInsertCommand method for informational or troubleshooting purposes because it returns the text of the <xref:System.Data.OleDb.OleDbCommand> object to be executed.       You can also use GetInsertCommand as the basis of a modified command. For example, you might call GetInsertCommand and modify the <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.OleDb.OleDbDataAdapter>.       After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way. Otherwise, the GetInsertCommand will be still be using information from the previous statement, which might not be correct. The SQL statements are first generated when the application calls either <xref:System.Data.OleDb.OleDbDataAdapter.Update%2A> or GetInsertCommand."
  syntax:
    content: public System.Data.OleDb.OleDbCommand GetInsertCommand ();
    parameters: []
    return:
      type: System.Data.OleDb.OleDbCommand
      description: "The automatically generated <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref> object required to perform insertions."
  overload: System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand(System.Boolean)
  id: GetInsertCommand(System.Boolean)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: GetInsertCommand(Boolean)
  nameWithType: OleDbCommandBuilder.GetInsertCommand(Boolean)
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Gets the automatically generated <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref> object required to perform insertions at the data source."
  remarks: "An application can use the <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> method for informational or troubleshooting purposes because it returns the text of the <xref:System.Data.OleDb.OleDbCommand> object to be executed.       You can also use <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> as the basis of a modified command. For example, you might call <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> and modify the <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.OleDb.OleDbDataAdapter>.       After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way. Otherwise, the <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A> will be still be using information from the previous statement, which might not be correct. The SQL statements are first generated when the application calls either <xref:System.Data.OleDb.OleDbDataAdapter.Update%2A> or <xref:System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand%2A>.       The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters. Passing `true` for the `useColumnsForParameterNames` parameter lets you force the <xref:System.Data.OleDb.OleDbCommandBuilder> to generate parameters based on the column names instead. This succeeds only if the following conditions are met:      -   The <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> has been specified and its length is equal to or greater than the generated parameter name.      -   The generated parameter name meets the criteria specified in the <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> regular expression.      -   A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> is specified."
  syntax:
    content: public System.Data.OleDb.OleDbCommand GetInsertCommand (bool useColumnsForParameterNames);
    parameters:
    - id: useColumnsForParameterNames
      type: System.Boolean
      description: "If <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, generate parameter names matching column names, if it is possible. If <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>, generate @p1, @p2, and so on."
    return:
      type: System.Data.OleDb.OleDbCommand
      description: "The automatically generated <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref> object required to perform insertions."
  overload: System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.GetParameterName(System.Int32)
  id: GetParameterName(System.Int32)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: GetParameterName(Int32)
  nameWithType: OleDbCommandBuilder.GetParameterName(Int32)
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetParameterName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override string GetParameterName (int parameterOrdinal);
    parameters:
    - id: parameterOrdinal
      type: System.Int32
      description: "To be added."
    return:
      type: System.String
      description: "To be added."
  overload: System.Data.OleDb.OleDbCommandBuilder.GetParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.GetParameterName(System.String)
  id: GetParameterName(System.String)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: GetParameterName(String)
  nameWithType: OleDbCommandBuilder.GetParameterName(String)
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetParameterName(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override string GetParameterName (string parameterName);
    parameters:
    - id: parameterName
      type: System.String
      description: "To be added."
    return:
      type: System.String
      description: "To be added."
  overload: System.Data.OleDb.OleDbCommandBuilder.GetParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.GetParameterPlaceholder(System.Int32)
  id: GetParameterPlaceholder(System.Int32)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: GetParameterPlaceholder(Int32)
  nameWithType: OleDbCommandBuilder.GetParameterPlaceholder(Int32)
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetParameterPlaceholder(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override string GetParameterPlaceholder (int parameterOrdinal);
    parameters:
    - id: parameterOrdinal
      type: System.Int32
      description: "To be added."
    return:
      type: System.String
      description: "To be added."
  overload: System.Data.OleDb.OleDbCommandBuilder.GetParameterPlaceholder*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand
  id: GetUpdateCommand
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: GetUpdateCommand()
  nameWithType: OleDbCommandBuilder.GetUpdateCommand()
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Gets the automatically generated <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref> object required to perform updates at the data source."
  remarks: "An application can use the GetUpdateCommand method for informational or troubleshooting purposes because it returns the <xref:System.Data.OleDb.OleDbCommand> object to be executed.       You can also use GetUpdateCommand as the basis of a modified command. For example, you might call GetUpdateCommand and modify the <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.OleDb.OleDbDataAdapter>.       After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way. Otherwise, the GetUpdateCommand will be still be using information from the previous statement, which might not be correct. The SQL statements are first generated when the application calls either <xref:System.Data.OleDb.OleDbDataAdapter.Update%2A> or GetUpdateCommand."
  syntax:
    content: public System.Data.OleDb.OleDbCommand GetUpdateCommand ();
    parameters: []
    return:
      type: System.Data.OleDb.OleDbCommand
      description: "The automatically generated <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref> object required to perform updates."
  overload: System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand(System.Boolean)
  id: GetUpdateCommand(System.Boolean)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: GetUpdateCommand(Boolean)
  nameWithType: OleDbCommandBuilder.GetUpdateCommand(Boolean)
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Gets the automatically generated <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref> object required to perform updates at the data source, optionally using columns for parameter names."
  remarks: "An application can use the <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.OleDb.OleDbCommand> object to be executed.       You can also use <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> as the basis of a modified command. For example, you might call <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> and modify the <xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.OleDb.OleDbDataAdapter>.       After the SQL statement is first generated, the application must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way. Otherwise, the <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A> will be still be using information from the previous statement, which might not be correct. The SQL statements are first generated when the application calls either <xref:System.Data.OleDb.OleDbDataAdapter.Update%2A> or <xref:System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand%2A>.       The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters. Passing `true` for the `useColumnsForParameterNames` parameter lets you force the <xref:System.Data.OleDb.OleDbCommandBuilder> to generate parameters based on the column names instead. This succeeds only if the following conditions are met:      -   The <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> has been specified and its length is equal to or greater than the generated parameter name.      -   The generated parameter name meets the criteria specified in the <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> regular expression.      -   A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> is specified."
  syntax:
    content: public System.Data.OleDb.OleDbCommand GetUpdateCommand (bool useColumnsForParameterNames);
    parameters:
    - id: useColumnsForParameterNames
      type: System.Boolean
      description: "If <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, generate parameter names matching column names, if it is possible. If <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>, generate @p1, @p2, and so on."
    return:
      type: System.Data.OleDb.OleDbCommand
      description: "The automatically generated <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref> object required to perform updates."
  overload: System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(System.String)
  id: QuoteIdentifier(System.String)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: QuoteIdentifier(String)
  nameWithType: OleDbCommandBuilder.QuoteIdentifier(String)
  fullName: System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier. This includes correctly escaping any embedded quotes in the identifier."
  syntax:
    content: public override string QuoteIdentifier (string unquotedIdentifier);
    parameters:
    - id: unquotedIdentifier
      type: System.String
      description: "The original unquoted identifier."
    return:
      type: System.String
      description: "The quoted version of the identifier. Embedded quotes within the identifier are correctly escaped."
  overload: System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)
  id: QuoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: QuoteIdentifier(String,OleDbConnection)
  nameWithType: OleDbCommandBuilder.QuoteIdentifier(String,OleDbConnection)
  fullName: System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(String,OleDbConnection)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier. This includes correctly escaping any embedded quotes in the identifier."
  syntax:
    content: public string QuoteIdentifier (string unquotedIdentifier, System.Data.OleDb.OleDbConnection connection);
    parameters:
    - id: unquotedIdentifier
      type: System.String
      description: "The unquoted identifier to be returned in quoted format."
    - id: connection
      type: System.Data.OleDb.OleDbConnection
      description: "When a connection is passed, causes the managed wrapper to get the quote character from the OLE DB provider. When no connection is passed, the string is quoted using values from <xref:System.Data.Common.DbCommandBuilder.QuotePrefix*> and <xref:System.Data.Common.DbCommandBuilder.QuoteSuffix*>."
    return:
      type: System.String
      description: "The quoted version of the identifier. Embedded quotes within the identifier are correctly escaped."
  overload: System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  id: SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: SetRowUpdatingHandler(DbDataAdapter)
  nameWithType: OleDbCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
  fullName: System.Data.OleDb.OleDbCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override void SetRowUpdatingHandler (System.Data.Common.DbDataAdapter adapter);
    parameters:
    - id: adapter
      type: System.Data.Common.DbDataAdapter
      description: "To be added."
  overload: System.Data.OleDb.OleDbCommandBuilder.SetRowUpdatingHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(System.String)
  id: UnquoteIdentifier(System.String)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: UnquoteIdentifier(String)
  nameWithType: OleDbCommandBuilder.UnquoteIdentifier(String)
  fullName: System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Given a quoted identifier, returns the correct unquoted form of that identifier. This includes correctly un-escaping any embedded quotes in the identifier."
  syntax:
    content: public override string UnquoteIdentifier (string quotedIdentifier);
    parameters:
    - id: quotedIdentifier
      type: System.String
      description: "The identifier that will have its embedded quotes removed."
    return:
      type: System.String
      description: "The unquoted identifier, with embedded quotes correctly un-escaped."
  overload: System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)
  id: UnquoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)
  parent: System.Data.OleDb.OleDbCommandBuilder
  langs:
  - csharp
  name: UnquoteIdentifier(String,OleDbConnection)
  nameWithType: OleDbCommandBuilder.UnquoteIdentifier(String,OleDbConnection)
  fullName: System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(String,OleDbConnection)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Given a quoted identifier, returns the correct unquoted form of that identifier. This includes correctly un-escaping any embedded quotes in the identifier."
  syntax:
    content: public string UnquoteIdentifier (string quotedIdentifier, System.Data.OleDb.OleDbConnection connection);
    parameters:
    - id: quotedIdentifier
      type: System.String
      description: "The identifier that will have its embedded quotes removed."
    - id: connection
      type: System.Data.OleDb.OleDbConnection
      description: "The <xref href=&quot;System.Data.OleDb.OleDbConnection&quot;></xref>."
    return:
      type: System.String
      description: "The unquoted identifier, with embedded quotes correctly un-escaped."
  overload: System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: System.Data.Common.DbCommandBuilder
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.OleDb.OleDbCommandBuilder.#ctor
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: OleDbCommandBuilder()
  nameWithType: OleDbCommandBuilder.OleDbCommandBuilder()
  fullName: System.Data.OleDb.OleDbCommandBuilder.OleDbCommandBuilder()
- uid: System.Data.OleDb.OleDbCommandBuilder.#ctor(System.Data.OleDb.OleDbDataAdapter)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: OleDbCommandBuilder(OleDbDataAdapter)
  nameWithType: OleDbCommandBuilder.OleDbCommandBuilder(OleDbDataAdapter)
  fullName: System.Data.OleDb.OleDbCommandBuilder.OleDbCommandBuilder(OleDbDataAdapter)
- uid: System.Data.OleDb.OleDbDataAdapter
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbDataAdapter
  nameWithType: OleDbDataAdapter
  fullName: System.Data.OleDb.OleDbDataAdapter
- uid: System.Data.OleDb.OleDbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  nameWithType: OleDbCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  fullName: System.Data.OleDb.OleDbCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
- uid: System.Data.Common.DbParameter
  parent: System.Data.Common
  isExternal: false
  name: DbParameter
  nameWithType: DbParameter
  fullName: System.Data.Common.DbParameter
- uid: System.Data.DataRow
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: System.Data.StatementType
  parent: System.Data
  isExternal: false
  name: StatementType
  nameWithType: StatementType
  fullName: System.Data.StatementType
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.OleDb.OleDbCommandBuilder.DataAdapter
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: DataAdapter
  nameWithType: OleDbCommandBuilder.DataAdapter
  fullName: System.Data.OleDb.OleDbCommandBuilder.DataAdapter
- uid: System.Data.OleDb.OleDbCommandBuilder.DeriveParameters(System.Data.OleDb.OleDbCommand)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: DeriveParameters(OleDbCommand)
  nameWithType: OleDbCommandBuilder.DeriveParameters(OleDbCommand)
  fullName: System.Data.OleDb.OleDbCommandBuilder.DeriveParameters(OleDbCommand)
- uid: System.Data.OleDb.OleDbCommand
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbCommand
  nameWithType: OleDbCommand
  fullName: System.Data.OleDb.OleDbCommand
- uid: System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetDeleteCommand()
  nameWithType: OleDbCommandBuilder.GetDeleteCommand()
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand()
- uid: System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand(System.Boolean)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetDeleteCommand(Boolean)
  nameWithType: OleDbCommandBuilder.GetDeleteCommand(Boolean)
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand(Boolean)
- uid: System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetInsertCommand()
  nameWithType: OleDbCommandBuilder.GetInsertCommand()
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand()
- uid: System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand(System.Boolean)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetInsertCommand(Boolean)
  nameWithType: OleDbCommandBuilder.GetInsertCommand(Boolean)
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand(Boolean)
- uid: System.Data.OleDb.OleDbCommandBuilder.GetParameterName(System.Int32)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetParameterName(Int32)
  nameWithType: OleDbCommandBuilder.GetParameterName(Int32)
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetParameterName(Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.OleDb.OleDbCommandBuilder.GetParameterName(System.String)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetParameterName(String)
  nameWithType: OleDbCommandBuilder.GetParameterName(String)
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetParameterName(String)
- uid: System.Data.OleDb.OleDbCommandBuilder.GetParameterPlaceholder(System.Int32)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetParameterPlaceholder(Int32)
  nameWithType: OleDbCommandBuilder.GetParameterPlaceholder(Int32)
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetParameterPlaceholder(Int32)
- uid: System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetUpdateCommand()
  nameWithType: OleDbCommandBuilder.GetUpdateCommand()
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand()
- uid: System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand(System.Boolean)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetUpdateCommand(Boolean)
  nameWithType: OleDbCommandBuilder.GetUpdateCommand(Boolean)
  fullName: System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand(Boolean)
- uid: System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(System.String)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: QuoteIdentifier(String)
  nameWithType: OleDbCommandBuilder.QuoteIdentifier(String)
  fullName: System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(String)
- uid: System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: QuoteIdentifier(String,OleDbConnection)
  nameWithType: OleDbCommandBuilder.QuoteIdentifier(String,OleDbConnection)
  fullName: System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier(String,OleDbConnection)
- uid: System.Data.OleDb.OleDbConnection
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbConnection
  nameWithType: OleDbConnection
  fullName: System.Data.OleDb.OleDbConnection
- uid: System.Data.OleDb.OleDbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: SetRowUpdatingHandler(DbDataAdapter)
  nameWithType: OleDbCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
  fullName: System.Data.OleDb.OleDbCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
- uid: System.Data.Common.DbDataAdapter
  parent: System.Data.Common
  isExternal: false
  name: DbDataAdapter
  nameWithType: DbDataAdapter
  fullName: System.Data.Common.DbDataAdapter
- uid: System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(System.String)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: UnquoteIdentifier(String)
  nameWithType: OleDbCommandBuilder.UnquoteIdentifier(String)
  fullName: System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(String)
- uid: System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(System.String,System.Data.OleDb.OleDbConnection)
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: UnquoteIdentifier(String,OleDbConnection)
  nameWithType: OleDbCommandBuilder.UnquoteIdentifier(String,OleDbConnection)
  fullName: System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier(String,OleDbConnection)
- uid: System.Data.OleDb.OleDbCommandBuilder.#ctor*
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: OleDbCommandBuilder
  nameWithType: OleDbCommandBuilder.OleDbCommandBuilder
- uid: System.Data.OleDb.OleDbCommandBuilder.ApplyParameterInfo*
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: ApplyParameterInfo
  nameWithType: OleDbCommandBuilder.ApplyParameterInfo
- uid: System.Data.OleDb.OleDbCommandBuilder.DataAdapter*
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: DataAdapter
  nameWithType: OleDbCommandBuilder.DataAdapter
- uid: System.Data.OleDb.OleDbCommandBuilder.DeriveParameters*
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: DeriveParameters
  nameWithType: OleDbCommandBuilder.DeriveParameters
- uid: System.Data.OleDb.OleDbCommandBuilder.GetDeleteCommand*
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetDeleteCommand
  nameWithType: OleDbCommandBuilder.GetDeleteCommand
- uid: System.Data.OleDb.OleDbCommandBuilder.GetInsertCommand*
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetInsertCommand
  nameWithType: OleDbCommandBuilder.GetInsertCommand
- uid: System.Data.OleDb.OleDbCommandBuilder.GetParameterName*
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetParameterName
  nameWithType: OleDbCommandBuilder.GetParameterName
- uid: System.Data.OleDb.OleDbCommandBuilder.GetParameterPlaceholder*
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetParameterPlaceholder
  nameWithType: OleDbCommandBuilder.GetParameterPlaceholder
- uid: System.Data.OleDb.OleDbCommandBuilder.GetUpdateCommand*
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: GetUpdateCommand
  nameWithType: OleDbCommandBuilder.GetUpdateCommand
- uid: System.Data.OleDb.OleDbCommandBuilder.QuoteIdentifier*
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: QuoteIdentifier
  nameWithType: OleDbCommandBuilder.QuoteIdentifier
- uid: System.Data.OleDb.OleDbCommandBuilder.SetRowUpdatingHandler*
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: SetRowUpdatingHandler
  nameWithType: OleDbCommandBuilder.SetRowUpdatingHandler
- uid: System.Data.OleDb.OleDbCommandBuilder.UnquoteIdentifier*
  parent: System.Data.OleDb.OleDbCommandBuilder
  isExternal: false
  name: UnquoteIdentifier
  nameWithType: OleDbCommandBuilder.UnquoteIdentifier
