### YamlMime:ManagedReference
items:
- uid: System.Messaging.PeekCompletedEventArgs
  id: PeekCompletedEventArgs
  children:
  - System.Messaging.PeekCompletedEventArgs.AsyncResult
  - System.Messaging.PeekCompletedEventArgs.Message
  langs:
  - csharp
  name: PeekCompletedEventArgs
  nameWithType: PeekCompletedEventArgs
  fullName: System.Messaging.PeekCompletedEventArgs
  type: Class
  summary: "Provides data for the <xref href=&quot;System.Messaging.MessageQueue.PeekCompleted&quot;></xref> event. When your asynchronous peek operation calls an event handler, an instance of this class is passed to the handler."
  remarks: "When you use event notification to peek (read without removing) messages asynchronously from the queue, you must create a method that handles your message processing. Your code must call <xref:System.Messaging.MessageQueue.BeginPeek%2A> to begin the asynchronous processing. When a message is peeked, your application is notified through the <xref:System.Messaging.MessageQueue.PeekCompleted> event. An instance of PeekCompletedEventArgs is passed into the event delegate that calls your event handler. The data associated with the <xref:System.Messaging.MessageQueue.PeekCompleted> event is contained in the delegate&quot;s <xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A> parameter.       There are two ways to provide notification of event completion: event notification and callbacks. PeekCompletedEventArgs is used only with event notification. For information comparing callbacks and event notification, see &quot;Events vs. Callbacks&quot; on MSDN.       PeekCompletedEventArgs provides access to the message that initiated the end of the asynchronous peek operation, through the <xref:System.Messaging.PeekCompletedEventArgs.Message%2A> member. This is an alternate access to the message, and behaves much the same as a call to <xref:System.Messaging.MessageQueue.EndPeek%2A?displayProperty=fullName>."
  example:
  - "The following code example creates an event handler for the <xref:System.Messaging.MessageQueue.PeekCompleted> event and associates it with the event delegate by using the <xref:System.Messaging.PeekCompletedEventHandler>. The event handler, `MyPeekCompleted`, peeks a message and writes its label to the screen.  \n  \n [!code-cpp[MessageQueue.BeginPeek_noparms#1](~/add/codesnippet/cpp/t-system.messaging.peekc_0_1.cpp)]\n [!code-cs[MessageQueue.BeginPeek_noparms#1](~/add/codesnippet/csharp/t-system.messaging.peekc_0_1.cs)]\n [!code-vb[MessageQueue.BeginPeek_noparms#1](~/add/codesnippet/visualbasic/t-system.messaging.peekc_0_1.vb)]"
  syntax:
    content: 'public class PeekCompletedEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Messaging.PeekCompletedEventArgs.AsyncResult
  id: AsyncResult
  parent: System.Messaging.PeekCompletedEventArgs
  langs:
  - csharp
  name: AsyncResult
  nameWithType: PeekCompletedEventArgs.AsyncResult
  fullName: System.Messaging.PeekCompletedEventArgs.AsyncResult
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets the result of the asynchronous operation requested."
  remarks: "AsyncResult identifies ongoing or completed asynchronous operations. The property contains data that helps determine which of several potential asynchronous operations to complete, and when passed to the event handler, enables <xref:System.Messaging.MessageQueue.EndPeek%2A> to access the message associated with the completed operation.       When you call <xref:System.Messaging.MessageQueue.BeginPeek%2A>, a <xref:System.IAsyncResult> is returned immediately, even though a message, if one exists, has not yet been retrieved because the operation is not completed. The AsyncResult indicates the state of the asynchronous operation. <xref:System.Messaging.MessageQueue.BeginPeek%2A> creates the object, which is modified throughout the operation until <xref:System.Messaging.MessageQueue.EndPeek%2A> completes it."
  syntax:
    content: public IAsyncResult AsyncResult { get; set; }
    return:
      type: System.IAsyncResult
      description: "A <xref:System.IAsyncResult> that contains the data associated with the peek operation."
  overload: System.Messaging.PeekCompletedEventArgs.AsyncResult*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.PeekCompletedEventArgs.Message
  id: Message
  parent: System.Messaging.PeekCompletedEventArgs
  langs:
  - csharp
  name: Message
  nameWithType: PeekCompletedEventArgs.Message
  fullName: System.Messaging.PeekCompletedEventArgs.Message
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets the message associated with the asynchronous peek operation."
  remarks: "The Message property provides a means for retrieving the message that initiated the end of the asynchronous peek operation.       <xref:System.Messaging.MessageQueue.EndPeek%2A?displayProperty=fullName> is called the first time the Message property is read, so it is not necessary to call <xref:System.Messaging.MessageQueue.EndPeek%2A> prior to getting the value of this property."
  syntax:
    content: public System.Messaging.Message Message { get; }
    return:
      type: System.Messaging.Message
      description: "A <xref href=&quot;System.Messaging.Message&quot;></xref> that represents the end result of the asynchronous peek operation."
  overload: System.Messaging.PeekCompletedEventArgs.Message*
  exceptions:
  - type: System.Messaging.MessageQueueException
    commentId: T:System.Messaging.MessageQueueException
    description: "The Message could not be retrieved. The time-out on the asynchronous operation might have expired."
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Messaging.MessageQueueException
  parent: System.Messaging
  isExternal: false
  name: MessageQueueException
  nameWithType: MessageQueueException
  fullName: System.Messaging.MessageQueueException
- uid: System.Messaging.PeekCompletedEventArgs.AsyncResult
  parent: System.Messaging.PeekCompletedEventArgs
  isExternal: false
  name: AsyncResult
  nameWithType: PeekCompletedEventArgs.AsyncResult
  fullName: System.Messaging.PeekCompletedEventArgs.AsyncResult
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Messaging.PeekCompletedEventArgs.Message
  parent: System.Messaging.PeekCompletedEventArgs
  isExternal: false
  name: Message
  nameWithType: PeekCompletedEventArgs.Message
  fullName: System.Messaging.PeekCompletedEventArgs.Message
- uid: System.Messaging.Message
  parent: System.Messaging
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: System.Messaging.Message
- uid: System.Messaging.PeekCompletedEventArgs.AsyncResult*
  parent: System.Messaging.PeekCompletedEventArgs
  isExternal: false
  name: AsyncResult
  nameWithType: PeekCompletedEventArgs.AsyncResult
- uid: System.Messaging.PeekCompletedEventArgs.Message*
  parent: System.Messaging.PeekCompletedEventArgs
  isExternal: false
  name: Message
  nameWithType: PeekCompletedEventArgs.Message
