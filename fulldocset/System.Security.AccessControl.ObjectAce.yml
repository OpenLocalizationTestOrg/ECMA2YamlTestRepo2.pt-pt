### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.ObjectAce
  id: ObjectAce
  children:
  - System.Security.AccessControl.ObjectAce.#ctor(System.Security.AccessControl.AceFlags,System.Security.AccessControl.AceQualifier,System.Int32,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid,System.Boolean,System.Byte[])
  - System.Security.AccessControl.ObjectAce.BinaryLength
  - System.Security.AccessControl.ObjectAce.GetBinaryForm(System.Byte[],System.Int32)
  - System.Security.AccessControl.ObjectAce.InheritedObjectAceType
  - System.Security.AccessControl.ObjectAce.MaxOpaqueLength(System.Boolean)
  - System.Security.AccessControl.ObjectAce.ObjectAceFlags
  - System.Security.AccessControl.ObjectAce.ObjectAceType
  langs:
  - csharp
  name: ObjectAce
  nameWithType: ObjectAce
  fullName: System.Security.AccessControl.ObjectAce
  type: Class
  summary: "Controls access to Directory Services objects. This class represents an Access Control Entry (ACE) associated with a directory object."
  syntax:
    content: 'public sealed class ObjectAce : System.Security.AccessControl.QualifiedAce'
  inheritance:
  - System.Object
  - System.Security.AccessControl.GenericAce
  - System.Security.AccessControl.KnownAce
  - System.Security.AccessControl.QualifiedAce
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.GenericAce.AceFlags
  - System.Security.AccessControl.GenericAce.AceType
  - System.Security.AccessControl.GenericAce.AuditFlags
  - System.Security.AccessControl.GenericAce.Copy
  - System.Security.AccessControl.GenericAce.CreateFromBinaryForm(System.Byte[],System.Int32)
  - System.Security.AccessControl.GenericAce.Equals(System.Object)
  - System.Security.AccessControl.GenericAce.GetHashCode
  - System.Security.AccessControl.GenericAce.InheritanceFlags
  - System.Security.AccessControl.GenericAce.IsInherited
  - System.Security.AccessControl.GenericAce.op_Equality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)
  - System.Security.AccessControl.GenericAce.op_Inequality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)
  - System.Security.AccessControl.GenericAce.PropagationFlags
  - System.Security.AccessControl.KnownAce.AccessMask
  - System.Security.AccessControl.KnownAce.SecurityIdentifier
  - System.Security.AccessControl.QualifiedAce.AceQualifier
  - System.Security.AccessControl.QualifiedAce.GetOpaque
  - System.Security.AccessControl.QualifiedAce.IsCallback
  - System.Security.AccessControl.QualifiedAce.OpaqueLength
  - System.Security.AccessControl.QualifiedAce.SetOpaque(System.Byte[])
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectAce.#ctor(System.Security.AccessControl.AceFlags,System.Security.AccessControl.AceQualifier,System.Int32,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid,System.Boolean,System.Byte[])
  id: '#ctor(System.Security.AccessControl.AceFlags,System.Security.AccessControl.AceQualifier,System.Int32,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid,System.Boolean,System.Byte[])'
  parent: System.Security.AccessControl.ObjectAce
  langs:
  - csharp
  name: ObjectAce(AceFlags,AceQualifier,Int32,SecurityIdentifier,ObjectAceFlags,Guid,Guid,Boolean,Byte[])
  nameWithType: ObjectAce.ObjectAce(AceFlags,AceQualifier,Int32,SecurityIdentifier,ObjectAceFlags,Guid,Guid,Boolean,Byte[])
  fullName: System.Security.AccessControl.ObjectAce.ObjectAce(AceFlags,AceQualifier,Int32,SecurityIdentifier,ObjectAceFlags,Guid,Guid,Boolean,Byte[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Initiates a new instance of the <xref href=&quot;System.Security.AccessControl.ObjectAce&quot;></xref> class."
  syntax:
    content: public ObjectAce (System.Security.AccessControl.AceFlags aceFlags, System.Security.AccessControl.AceQualifier qualifier, int accessMask, System.Security.Principal.SecurityIdentifier sid, System.Security.AccessControl.ObjectAceFlags flags, Guid type, Guid inheritedType, bool isCallback, byte[] opaque);
    parameters:
    - id: aceFlags
      type: System.Security.AccessControl.AceFlags
      description: "The inheritance, inheritance propagation, and auditing conditions for the new Access Control Entry (ACE)."
    - id: qualifier
      type: System.Security.AccessControl.AceQualifier
      description: "The use of the new ACE."
    - id: accessMask
      type: System.Int32
      description: "The access mask for the ACE."
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "The <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref> associated with the new ACE."
    - id: flags
      type: System.Security.AccessControl.ObjectAceFlags
      description: "Whether the `type` and `inheritedType` parameters contain valid object GUIDs."
    - id: type
      type: System.Guid
      description: "A GUID that identifies the object type to which the new ACE applies."
    - id: inheritedType
      type: System.Guid
      description: "A GUID that identifies the object type that can inherit the new ACE."
    - id: isCallback
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the new ACE is a callback type ACE."
    - id: opaque
      type: System.Byte[]
      description: "Opaque data associated with the new ACE. This is allowed only for callback ACE types. The length of this array must not be greater than the return value of the <xref:System.Security.AccessControl.ObjectAce.MaxOpaqueLength*> method."
  overload: System.Security.AccessControl.ObjectAce.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The qualifier parameter contains an invalid value or the length of the value of the opaque parameter is greater than the return value of the <xref:System.Security.AccessControl.ObjectAce.MaxOpaqueLength*> method."
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectAce.BinaryLength
  id: BinaryLength
  parent: System.Security.AccessControl.ObjectAce
  langs:
  - csharp
  name: BinaryLength
  nameWithType: ObjectAce.BinaryLength
  fullName: System.Security.AccessControl.ObjectAce.BinaryLength
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Gets the length, in bytes, of the binary representation of the current <xref href=&quot;System.Security.AccessControl.ObjectAce&quot;></xref> object. This length should be used before marshaling the ACL into a binary array with the <xref:System.Security.AccessControl.ObjectAce.GetBinaryForm*> method."
  syntax:
    content: public override int BinaryLength { get; }
    return:
      type: System.Int32
      description: "The length, in bytes, of the binary representation of the current <xref href=&quot;System.Security.AccessControl.ObjectAce&quot;></xref> object."
  overload: System.Security.AccessControl.ObjectAce.BinaryLength*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectAce.GetBinaryForm(System.Byte[],System.Int32)
  id: GetBinaryForm(System.Byte[],System.Int32)
  parent: System.Security.AccessControl.ObjectAce
  langs:
  - csharp
  name: GetBinaryForm(Byte[],Int32)
  nameWithType: ObjectAce.GetBinaryForm(Byte[],Int32)
  fullName: System.Security.AccessControl.ObjectAce.GetBinaryForm(Byte[],Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Marshals the contents of the <xref href=&quot;System.Security.AccessControl.ObjectAce&quot;></xref> object into the specified byte array beginning at the specified offset."
  syntax:
    content: public override void GetBinaryForm (byte[] binaryForm, int offset);
    parameters:
    - id: binaryForm
      type: System.Byte[]
      description: "The byte array into which the contents of the <xref href=&quot;System.Security.AccessControl.ObjectAce&quot;></xref> is marshaled."
    - id: offset
      type: System.Int32
      description: "The offset at which to start marshaling."
  overload: System.Security.AccessControl.ObjectAce.GetBinaryForm*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code> is negative or too high to allow the entire <xref href=&quot;System.Security.AccessControl.ObjectAce&quot;></xref> to be copied into <code>array</code>."
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectAce.InheritedObjectAceType
  id: InheritedObjectAceType
  parent: System.Security.AccessControl.ObjectAce
  langs:
  - csharp
  name: InheritedObjectAceType
  nameWithType: ObjectAce.InheritedObjectAceType
  fullName: System.Security.AccessControl.ObjectAce.InheritedObjectAceType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Gets or sets the GUID of the object type that can inherit the Access Control Entry (ACE) that this <xref href=&quot;System.Security.AccessControl.ObjectAce&quot;></xref> object represents."
  remarks: "If the value of the <xref:System.Security.AccessControl.ObjectAce.ObjectAceFlags%2A> parameter does not contain the value <xref:System.Security.AccessControl.ObjectAceFlags>, this property is ignored."
  syntax:
    content: public Guid InheritedObjectAceType { get; set; }
    return:
      type: System.Guid
      description: "The GUID of the object type that can inherit the Access Control Entry (ACE) that this <xref href=&quot;System.Security.AccessControl.ObjectAce&quot;></xref> object represents."
  overload: System.Security.AccessControl.ObjectAce.InheritedObjectAceType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectAce.MaxOpaqueLength(System.Boolean)
  id: MaxOpaqueLength(System.Boolean)
  parent: System.Security.AccessControl.ObjectAce
  langs:
  - csharp
  name: MaxOpaqueLength(Boolean)
  nameWithType: ObjectAce.MaxOpaqueLength(Boolean)
  fullName: System.Security.AccessControl.ObjectAce.MaxOpaqueLength(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Returns the maximum allowed length, in bytes, of an opaque data BLOB for callback Access Control Entries (ACEs)."
  syntax:
    content: public static int MaxOpaqueLength (bool isCallback);
    parameters:
    - id: isCallback
      type: System.Boolean
      description: "True if the <xref href=&quot;System.Security.AccessControl.ObjectAce&quot;></xref> is a callback ACE type."
    return:
      type: System.Int32
      description: "The maximum allowed length, in bytes, of an opaque data BLOB for callback Access Control Entries (ACEs)."
  overload: System.Security.AccessControl.ObjectAce.MaxOpaqueLength*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectAce.ObjectAceFlags
  id: ObjectAceFlags
  parent: System.Security.AccessControl.ObjectAce
  langs:
  - csharp
  name: ObjectAceFlags
  nameWithType: ObjectAce.ObjectAceFlags
  fullName: System.Security.AccessControl.ObjectAce.ObjectAceFlags
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Gets or sets flags that specify whether the <xref:System.Security.AccessControl.ObjectAce.ObjectAceType*> and <xref:System.Security.AccessControl.ObjectAce.InheritedObjectAceType*> properties contain values that identify valid object types."
  syntax:
    content: public System.Security.AccessControl.ObjectAceFlags ObjectAceFlags { get; set; }
    return:
      type: System.Security.AccessControl.ObjectAceFlags
      description: "On or more members of the <xref href=&quot;System.Security.AccessControl.ObjectAceFlags&quot;></xref> enumeration combined with a logical OR operation."
  overload: System.Security.AccessControl.ObjectAce.ObjectAceFlags*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.ObjectAce.ObjectAceType
  id: ObjectAceType
  parent: System.Security.AccessControl.ObjectAce
  langs:
  - csharp
  name: ObjectAceType
  nameWithType: ObjectAce.ObjectAceType
  fullName: System.Security.AccessControl.ObjectAce.ObjectAceType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Gets or sets the GUID of the object type associated with this <xref href=&quot;System.Security.AccessControl.ObjectAce&quot;></xref> object."
  remarks: "If the value of the <xref:System.Security.AccessControl.ObjectAce.ObjectAceFlags%2A> parameter does not contain the value <xref:System.Security.AccessControl.ObjectAceFlags>, this property is ignored."
  syntax:
    content: public Guid ObjectAceType { get; set; }
    return:
      type: System.Guid
      description: "The GUID of the object type associated with this <xref href=&quot;System.Security.AccessControl.ObjectAce&quot;></xref> object."
  overload: System.Security.AccessControl.ObjectAce.ObjectAceType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.AccessControl.QualifiedAce
  isExternal: false
  name: System.Security.AccessControl.QualifiedAce
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.AccessControl.ObjectAce.#ctor(System.Security.AccessControl.AceFlags,System.Security.AccessControl.AceQualifier,System.Int32,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid,System.Boolean,System.Byte[])
  parent: System.Security.AccessControl.ObjectAce
  isExternal: false
  name: ObjectAce(AceFlags,AceQualifier,Int32,SecurityIdentifier,ObjectAceFlags,Guid,Guid,Boolean,Byte[])
  nameWithType: ObjectAce.ObjectAce(AceFlags,AceQualifier,Int32,SecurityIdentifier,ObjectAceFlags,Guid,Guid,Boolean,Byte[])
  fullName: System.Security.AccessControl.ObjectAce.ObjectAce(AceFlags,AceQualifier,Int32,SecurityIdentifier,ObjectAceFlags,Guid,Guid,Boolean,Byte[])
- uid: System.Security.AccessControl.AceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AceFlags
  nameWithType: AceFlags
  fullName: System.Security.AccessControl.AceFlags
- uid: System.Security.AccessControl.AceQualifier
  parent: System.Security.AccessControl
  isExternal: false
  name: AceQualifier
  nameWithType: AceQualifier
  fullName: System.Security.AccessControl.AceQualifier
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Principal.SecurityIdentifier
  parent: System.Security.Principal
  isExternal: false
  name: SecurityIdentifier
  nameWithType: SecurityIdentifier
  fullName: System.Security.Principal.SecurityIdentifier
- uid: System.Security.AccessControl.ObjectAceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: ObjectAceFlags
  nameWithType: ObjectAceFlags
  fullName: System.Security.AccessControl.ObjectAceFlags
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.AccessControl.ObjectAce.BinaryLength
  parent: System.Security.AccessControl.ObjectAce
  isExternal: false
  name: BinaryLength
  nameWithType: ObjectAce.BinaryLength
  fullName: System.Security.AccessControl.ObjectAce.BinaryLength
- uid: System.Security.AccessControl.ObjectAce.GetBinaryForm(System.Byte[],System.Int32)
  parent: System.Security.AccessControl.ObjectAce
  isExternal: false
  name: GetBinaryForm(Byte[],Int32)
  nameWithType: ObjectAce.GetBinaryForm(Byte[],Int32)
  fullName: System.Security.AccessControl.ObjectAce.GetBinaryForm(Byte[],Int32)
- uid: System.Security.AccessControl.ObjectAce.InheritedObjectAceType
  parent: System.Security.AccessControl.ObjectAce
  isExternal: false
  name: InheritedObjectAceType
  nameWithType: ObjectAce.InheritedObjectAceType
  fullName: System.Security.AccessControl.ObjectAce.InheritedObjectAceType
- uid: System.Security.AccessControl.ObjectAce.MaxOpaqueLength(System.Boolean)
  parent: System.Security.AccessControl.ObjectAce
  isExternal: false
  name: MaxOpaqueLength(Boolean)
  nameWithType: ObjectAce.MaxOpaqueLength(Boolean)
  fullName: System.Security.AccessControl.ObjectAce.MaxOpaqueLength(Boolean)
- uid: System.Security.AccessControl.ObjectAce.ObjectAceFlags
  parent: System.Security.AccessControl.ObjectAce
  isExternal: false
  name: ObjectAceFlags
  nameWithType: ObjectAce.ObjectAceFlags
  fullName: System.Security.AccessControl.ObjectAce.ObjectAceFlags
- uid: System.Security.AccessControl.ObjectAce.ObjectAceType
  parent: System.Security.AccessControl.ObjectAce
  isExternal: false
  name: ObjectAceType
  nameWithType: ObjectAce.ObjectAceType
  fullName: System.Security.AccessControl.ObjectAce.ObjectAceType
- uid: System.Security.AccessControl.ObjectAce.#ctor*
  parent: System.Security.AccessControl.ObjectAce
  isExternal: false
  name: ObjectAce
  nameWithType: ObjectAce.ObjectAce
- uid: System.Security.AccessControl.ObjectAce.BinaryLength*
  parent: System.Security.AccessControl.ObjectAce
  isExternal: false
  name: BinaryLength
  nameWithType: ObjectAce.BinaryLength
- uid: System.Security.AccessControl.ObjectAce.GetBinaryForm*
  parent: System.Security.AccessControl.ObjectAce
  isExternal: false
  name: GetBinaryForm
  nameWithType: ObjectAce.GetBinaryForm
- uid: System.Security.AccessControl.ObjectAce.InheritedObjectAceType*
  parent: System.Security.AccessControl.ObjectAce
  isExternal: false
  name: InheritedObjectAceType
  nameWithType: ObjectAce.InheritedObjectAceType
- uid: System.Security.AccessControl.ObjectAce.MaxOpaqueLength*
  parent: System.Security.AccessControl.ObjectAce
  isExternal: false
  name: MaxOpaqueLength
  nameWithType: ObjectAce.MaxOpaqueLength
- uid: System.Security.AccessControl.ObjectAce.ObjectAceFlags*
  parent: System.Security.AccessControl.ObjectAce
  isExternal: false
  name: ObjectAceFlags
  nameWithType: ObjectAce.ObjectAceFlags
- uid: System.Security.AccessControl.ObjectAce.ObjectAceType*
  parent: System.Security.AccessControl.ObjectAce
  isExternal: false
  name: ObjectAceType
  nameWithType: ObjectAce.ObjectAceType
