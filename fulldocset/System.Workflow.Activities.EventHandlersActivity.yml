### YamlMime:ManagedReference
items:
- uid: System.Workflow.Activities.EventHandlersActivity
  id: EventHandlersActivity
  children:
  - System.Workflow.Activities.EventHandlersActivity.#ctor
  - System.Workflow.Activities.EventHandlersActivity.#ctor(System.String)
  - System.Workflow.Activities.EventHandlersActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.EventHandlersActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.EventHandlersActivity.GetDynamicActivity(System.String)
  - System.Workflow.Activities.EventHandlersActivity.Initialize(System.IServiceProvider)
  - System.Workflow.Activities.EventHandlersActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  - System.Workflow.Activities.EventHandlersActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  - System.Workflow.Activities.EventHandlersActivity.OnClosed(System.IServiceProvider)
  - System.Workflow.Activities.EventHandlersActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.EventHandlersActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)
  langs:
  - csharp
  name: EventHandlersActivity
  nameWithType: EventHandlersActivity
  fullName: System.Workflow.Activities.EventHandlersActivity
  type: Class
  summary: "A composite activity that contains a collection of event handlers. It is typically used where a collection of events must be handled. Each event is handled by one <xref href=&quot;System.Workflow.Activities.EventDrivenActivity&quot;></xref>, which is part of EventHandlersActivity."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       The EventHandlersActivity activity holds a set of <xref:System.Workflow.Activities.EventDrivenActivity> classes, for use by the associated <xref:System.Workflow.ComponentModel.Activity>.       An EventHandlersActivity activity can only be associated with an <xref:System.Workflow.Activities.EventHandlingScopeActivity>.       The EventHandlersActivity activity is a <xref:System.Workflow.ComponentModel.CompositeActivity>, meaning the EventHandlersActivity activity can contain other activities."
  syntax:
    content: >-
      [System.ComponentModel.Designer(typeof(System.Workflow.Activities.EventHandlersDesigner), typeof(System.ComponentModel.Design.IDesigner))]

      [System.ComponentModel.ToolboxItem(false)]

      [System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.EventHandlersActivity), "Resources.events.png")]

      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      [System.Workflow.ComponentModel.AlternateFlowActivity]

      [System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.EventHandlersValidator))]

      public sealed class EventHandlersActivity : System.Workflow.ComponentModel.CompositeActivity, System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>
  inheritance:
  - System.Object
  - System.Workflow.ComponentModel.DependencyObject
  - System.Workflow.ComponentModel.Activity
  - System.Workflow.ComponentModel.CompositeActivity
  implements:
  - System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>
  inheritedMembers:
  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty
  - System.Workflow.ComponentModel.Activity.Canceling
  - System.Workflow.ComponentModel.Activity.CancelingEvent
  - System.Workflow.ComponentModel.Activity.Clone
  - System.Workflow.ComponentModel.Activity.Closed
  - System.Workflow.ComponentModel.Activity.ClosedEvent
  - System.Workflow.ComponentModel.Activity.Compensating
  - System.Workflow.ComponentModel.Activity.CompensatingEvent
  - System.Workflow.ComponentModel.Activity.Description
  - System.Workflow.ComponentModel.Activity.Enabled
  - System.Workflow.ComponentModel.Activity.Executing
  - System.Workflow.ComponentModel.Activity.ExecutingEvent
  - System.Workflow.ComponentModel.Activity.ExecutionResult
  - System.Workflow.ComponentModel.Activity.ExecutionStatus
  - System.Workflow.ComponentModel.Activity.Faulting
  - System.Workflow.ComponentModel.Activity.FaultingEvent
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)
  - System.Workflow.ComponentModel.Activity.IsDynamicActivity
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.Name
  - System.Workflow.ComponentModel.Activity.Parent
  - System.Workflow.ComponentModel.Activity.QualifiedName
  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)
  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)
  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.StatusChanged
  - System.Workflow.ComponentModel.Activity.StatusChangedEvent
  - System.Workflow.ComponentModel.Activity.ToString
  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)
  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)
  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId
  - System.Workflow.ComponentModel.CompositeActivity.Activities
  - System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)
  - System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities
  - System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)
  - System.Workflow.ComponentModel.CompositeActivity.EnabledActivities
  - System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)
  - System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)
  - System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)
  - System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.DesignMode
  - System.Workflow.ComponentModel.DependencyObject.Dispose
  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.InitializeProperties
  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.Site
  - System.Workflow.ComponentModel.DependencyObject.UserData
  platform:
  - net462
- uid: System.Workflow.Activities.EventHandlersActivity.#ctor
  id: '#ctor'
  parent: System.Workflow.Activities.EventHandlersActivity
  langs:
  - csharp
  name: EventHandlersActivity()
  nameWithType: EventHandlersActivity.EventHandlersActivity()
  fullName: System.Workflow.Activities.EventHandlersActivity.EventHandlersActivity()
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Initializes a new instance of the <xref href=&quot;System.Workflow.Activities.EventHandlersActivity&quot;></xref> class."
  syntax:
    content: public EventHandlersActivity ();
    parameters: []
  overload: System.Workflow.Activities.EventHandlersActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.EventHandlersActivity.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Workflow.Activities.EventHandlersActivity
  langs:
  - csharp
  name: EventHandlersActivity(String)
  nameWithType: EventHandlersActivity.EventHandlersActivity(String)
  fullName: System.Workflow.Activities.EventHandlersActivity.EventHandlersActivity(String)
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Initializes a new instance of the <xref href=&quot;System.Workflow.Activities.EventHandlersActivity&quot;></xref> class by using the name of the activity."
  syntax:
    content: public EventHandlersActivity (string name);
    parameters:
    - id: name
      type: System.String
      description: "The user-defined name of the activity."
  overload: System.Workflow.Activities.EventHandlersActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.EventHandlersActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.EventHandlersActivity
  langs:
  - csharp
  name: Cancel(ActivityExecutionContext)
  nameWithType: EventHandlersActivity.Cancel(ActivityExecutionContext)
  fullName: System.Workflow.Activities.EventHandlersActivity.Cancel(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  syntax:
    content: protected override System.Workflow.ComponentModel.ActivityExecutionStatus Cancel (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "To be added."
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "To be added."
  overload: System.Workflow.Activities.EventHandlersActivity.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.EventHandlersActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.EventHandlersActivity
  langs:
  - csharp
  name: Execute(ActivityExecutionContext)
  nameWithType: EventHandlersActivity.Execute(ActivityExecutionContext)
  fullName: System.Workflow.Activities.EventHandlersActivity.Execute(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  syntax:
    content: protected override System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "To be added."
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "To be added."
  overload: System.Workflow.Activities.EventHandlersActivity.Execute*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.EventHandlersActivity.GetDynamicActivity(System.String)
  id: GetDynamicActivity(System.String)
  parent: System.Workflow.Activities.EventHandlersActivity
  langs:
  - csharp
  name: GetDynamicActivity(String)
  nameWithType: EventHandlersActivity.GetDynamicActivity(String)
  fullName: System.Workflow.Activities.EventHandlersActivity.GetDynamicActivity(String)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Gets the currently executing instance of the <xref href=&quot;System.Workflow.Activities.EventDrivenActivity&quot;></xref>."
  syntax:
    content: public System.Workflow.ComponentModel.Activity GetDynamicActivity (string childActivityName);
    parameters:
    - id: childActivityName
      type: System.String
      description: "The name of the child <xref href=&quot;System.Workflow.Activities.EventDrivenActivity&quot;></xref>."
    return:
      type: System.Workflow.ComponentModel.Activity
      description: "The currently executing instance of the <xref href=&quot;System.Workflow.Activities.EventDrivenActivity&quot;></xref>."
  overload: System.Workflow.Activities.EventHandlersActivity.GetDynamicActivity*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>childactivity</code> is a null reference (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> in Visual Basic)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The executable activities do not contain the <code>childactivity</code>."
  platform:
  - net462
- uid: System.Workflow.Activities.EventHandlersActivity.Initialize(System.IServiceProvider)
  id: Initialize(System.IServiceProvider)
  parent: System.Workflow.Activities.EventHandlersActivity
  langs:
  - csharp
  name: Initialize(IServiceProvider)
  nameWithType: EventHandlersActivity.Initialize(IServiceProvider)
  fullName: System.Workflow.Activities.EventHandlersActivity.Initialize(IServiceProvider)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  syntax:
    content: protected override void Initialize (IServiceProvider provider);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "To be added."
  overload: System.Workflow.Activities.EventHandlersActivity.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.EventHandlersActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  id: OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Activities.EventHandlersActivity
  langs:
  - csharp
  name: OnActivityChangeAdd(ActivityExecutionContext,Activity)
  nameWithType: EventHandlersActivity.OnActivityChangeAdd(ActivityExecutionContext,Activity)
  fullName: System.Workflow.Activities.EventHandlersActivity.OnActivityChangeAdd(ActivityExecutionContext,Activity)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  syntax:
    content: protected override void OnActivityChangeAdd (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, System.Workflow.ComponentModel.Activity addedActivity);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "To be added."
    - id: addedActivity
      type: System.Workflow.ComponentModel.Activity
      description: "To be added."
  overload: System.Workflow.Activities.EventHandlersActivity.OnActivityChangeAdd*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.EventHandlersActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  id: OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Activities.EventHandlersActivity
  langs:
  - csharp
  name: OnActivityChangeRemove(ActivityExecutionContext,Activity)
  nameWithType: EventHandlersActivity.OnActivityChangeRemove(ActivityExecutionContext,Activity)
  fullName: System.Workflow.Activities.EventHandlersActivity.OnActivityChangeRemove(ActivityExecutionContext,Activity)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  syntax:
    content: protected override void OnActivityChangeRemove (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, System.Workflow.ComponentModel.Activity removedActivity);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "To be added."
    - id: removedActivity
      type: System.Workflow.ComponentModel.Activity
      description: "To be added."
  overload: System.Workflow.Activities.EventHandlersActivity.OnActivityChangeRemove*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.EventHandlersActivity.OnClosed(System.IServiceProvider)
  id: OnClosed(System.IServiceProvider)
  parent: System.Workflow.Activities.EventHandlersActivity
  langs:
  - csharp
  name: OnClosed(IServiceProvider)
  nameWithType: EventHandlersActivity.OnClosed(IServiceProvider)
  fullName: System.Workflow.Activities.EventHandlersActivity.OnClosed(IServiceProvider)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  syntax:
    content: protected override void OnClosed (IServiceProvider provider);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "To be added."
  overload: System.Workflow.Activities.EventHandlersActivity.OnClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.EventHandlersActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.EventHandlersActivity
  langs:
  - csharp
  name: OnWorkflowChangesCompleted(ActivityExecutionContext)
  nameWithType: EventHandlersActivity.OnWorkflowChangesCompleted(ActivityExecutionContext)
  fullName: System.Workflow.Activities.EventHandlersActivity.OnWorkflowChangesCompleted(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  syntax:
    content: protected override void OnWorkflowChangesCompleted (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "To be added."
  overload: System.Workflow.Activities.EventHandlersActivity.OnWorkflowChangesCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.EventHandlersActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)
  id: System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)
  isEii: true
  parent: System.Workflow.Activities.EventHandlersActivity
  langs:
  - csharp
  name: System.Workflow.ComponentModel.IActivityEventListener(Object,ActivityExecutionStatusChangedEventArgs)
  nameWithType: EventHandlersActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,ActivityExecutionStatusChangedEventArgs)
  fullName: System.Workflow.Activities.EventHandlersActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,ActivityExecutionStatusChangedEventArgs)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  syntax:
    content: void IActivityEventListener<ActivityExecutionStatusChangedEventArgs>.OnEvent (object sender, System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "To be added."
    - id: e
      type: System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs
      description: "To be added."
  overload: System.Workflow.Activities.EventHandlersActivity.System#Workflow#ComponentModel#IActivityEventListener<System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs>#OnEvent*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.ComponentModel.CompositeActivity
  isExternal: false
  name: System.Workflow.ComponentModel.CompositeActivity
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Workflow.Activities.EventHandlersActivity.#ctor
  parent: System.Workflow.Activities.EventHandlersActivity
  isExternal: false
  name: EventHandlersActivity()
  nameWithType: EventHandlersActivity.EventHandlersActivity()
  fullName: System.Workflow.Activities.EventHandlersActivity.EventHandlersActivity()
- uid: System.Workflow.Activities.EventHandlersActivity.#ctor(System.String)
  parent: System.Workflow.Activities.EventHandlersActivity
  isExternal: false
  name: EventHandlersActivity(String)
  nameWithType: EventHandlersActivity.EventHandlersActivity(String)
  fullName: System.Workflow.Activities.EventHandlersActivity.EventHandlersActivity(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Activities.EventHandlersActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.EventHandlersActivity
  isExternal: false
  name: Cancel(ActivityExecutionContext)
  nameWithType: EventHandlersActivity.Cancel(ActivityExecutionContext)
  fullName: System.Workflow.Activities.EventHandlersActivity.Cancel(ActivityExecutionContext)
- uid: System.Workflow.ComponentModel.ActivityExecutionStatus
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionStatus
  nameWithType: ActivityExecutionStatus
  fullName: System.Workflow.ComponentModel.ActivityExecutionStatus
- uid: System.Workflow.ComponentModel.ActivityExecutionContext
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionContext
  nameWithType: ActivityExecutionContext
  fullName: System.Workflow.ComponentModel.ActivityExecutionContext
- uid: System.Workflow.Activities.EventHandlersActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.EventHandlersActivity
  isExternal: false
  name: Execute(ActivityExecutionContext)
  nameWithType: EventHandlersActivity.Execute(ActivityExecutionContext)
  fullName: System.Workflow.Activities.EventHandlersActivity.Execute(ActivityExecutionContext)
- uid: System.Workflow.Activities.EventHandlersActivity.GetDynamicActivity(System.String)
  parent: System.Workflow.Activities.EventHandlersActivity
  isExternal: false
  name: GetDynamicActivity(String)
  nameWithType: EventHandlersActivity.GetDynamicActivity(String)
  fullName: System.Workflow.Activities.EventHandlersActivity.GetDynamicActivity(String)
- uid: System.Workflow.ComponentModel.Activity
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Workflow.ComponentModel.Activity
- uid: System.Workflow.Activities.EventHandlersActivity.Initialize(System.IServiceProvider)
  parent: System.Workflow.Activities.EventHandlersActivity
  isExternal: false
  name: Initialize(IServiceProvider)
  nameWithType: EventHandlersActivity.Initialize(IServiceProvider)
  fullName: System.Workflow.Activities.EventHandlersActivity.Initialize(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Workflow.Activities.EventHandlersActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Activities.EventHandlersActivity
  isExternal: false
  name: OnActivityChangeAdd(ActivityExecutionContext,Activity)
  nameWithType: EventHandlersActivity.OnActivityChangeAdd(ActivityExecutionContext,Activity)
  fullName: System.Workflow.Activities.EventHandlersActivity.OnActivityChangeAdd(ActivityExecutionContext,Activity)
- uid: System.Workflow.Activities.EventHandlersActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Activities.EventHandlersActivity
  isExternal: false
  name: OnActivityChangeRemove(ActivityExecutionContext,Activity)
  nameWithType: EventHandlersActivity.OnActivityChangeRemove(ActivityExecutionContext,Activity)
  fullName: System.Workflow.Activities.EventHandlersActivity.OnActivityChangeRemove(ActivityExecutionContext,Activity)
- uid: System.Workflow.Activities.EventHandlersActivity.OnClosed(System.IServiceProvider)
  parent: System.Workflow.Activities.EventHandlersActivity
  isExternal: false
  name: OnClosed(IServiceProvider)
  nameWithType: EventHandlersActivity.OnClosed(IServiceProvider)
  fullName: System.Workflow.Activities.EventHandlersActivity.OnClosed(IServiceProvider)
- uid: System.Workflow.Activities.EventHandlersActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.Activities.EventHandlersActivity
  isExternal: false
  name: OnWorkflowChangesCompleted(ActivityExecutionContext)
  nameWithType: EventHandlersActivity.OnWorkflowChangesCompleted(ActivityExecutionContext)
  fullName: System.Workflow.Activities.EventHandlersActivity.OnWorkflowChangesCompleted(ActivityExecutionContext)
- uid: System.Workflow.Activities.EventHandlersActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)
  parent: System.Workflow.Activities.EventHandlersActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IActivityEventListener(Object,ActivityExecutionStatusChangedEventArgs)
  nameWithType: EventHandlersActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,ActivityExecutionStatusChangedEventArgs)
  fullName: System.Workflow.Activities.EventHandlersActivity.System.Workflow.ComponentModel.IActivityEventListener(Object,ActivityExecutionStatusChangedEventArgs)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionStatusChangedEventArgs
  nameWithType: ActivityExecutionStatusChangedEventArgs
  fullName: System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs
- uid: System.Workflow.Activities.EventHandlersActivity.#ctor*
  parent: System.Workflow.Activities.EventHandlersActivity
  isExternal: false
  name: EventHandlersActivity
  nameWithType: EventHandlersActivity.EventHandlersActivity
- uid: System.Workflow.Activities.EventHandlersActivity.Cancel*
  parent: System.Workflow.Activities.EventHandlersActivity
  isExternal: false
  name: Cancel
  nameWithType: EventHandlersActivity.Cancel
- uid: System.Workflow.Activities.EventHandlersActivity.Execute*
  parent: System.Workflow.Activities.EventHandlersActivity
  isExternal: false
  name: Execute
  nameWithType: EventHandlersActivity.Execute
- uid: System.Workflow.Activities.EventHandlersActivity.GetDynamicActivity*
  parent: System.Workflow.Activities.EventHandlersActivity
  isExternal: false
  name: GetDynamicActivity
  nameWithType: EventHandlersActivity.GetDynamicActivity
- uid: System.Workflow.Activities.EventHandlersActivity.Initialize*
  parent: System.Workflow.Activities.EventHandlersActivity
  isExternal: false
  name: Initialize
  nameWithType: EventHandlersActivity.Initialize
- uid: System.Workflow.Activities.EventHandlersActivity.OnActivityChangeAdd*
  parent: System.Workflow.Activities.EventHandlersActivity
  isExternal: false
  name: OnActivityChangeAdd
  nameWithType: EventHandlersActivity.OnActivityChangeAdd
- uid: System.Workflow.Activities.EventHandlersActivity.OnActivityChangeRemove*
  parent: System.Workflow.Activities.EventHandlersActivity
  isExternal: false
  name: OnActivityChangeRemove
  nameWithType: EventHandlersActivity.OnActivityChangeRemove
- uid: System.Workflow.Activities.EventHandlersActivity.OnClosed*
  parent: System.Workflow.Activities.EventHandlersActivity
  isExternal: false
  name: OnClosed
  nameWithType: EventHandlersActivity.OnClosed
- uid: System.Workflow.Activities.EventHandlersActivity.OnWorkflowChangesCompleted*
  parent: System.Workflow.Activities.EventHandlersActivity
  isExternal: false
  name: OnWorkflowChangesCompleted
  nameWithType: EventHandlersActivity.OnWorkflowChangesCompleted
- uid: System.Workflow.Activities.EventHandlersActivity.System#Workflow#ComponentModel#IActivityEventListener<System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs>#OnEvent*
  parent: System.Workflow.Activities.EventHandlersActivity
  isExternal: false
  name: System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>.OnEvent
  nameWithType: EventHandlersActivity.System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>.OnEvent
