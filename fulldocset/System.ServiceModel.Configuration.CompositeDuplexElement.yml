### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Configuration.CompositeDuplexElement
  id: CompositeDuplexElement
  children:
  - System.ServiceModel.Configuration.CompositeDuplexElement.#ctor
  - System.ServiceModel.Configuration.CompositeDuplexElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)
  - System.ServiceModel.Configuration.CompositeDuplexElement.BindingElementType
  - System.ServiceModel.Configuration.CompositeDuplexElement.ClientBaseAddress
  - System.ServiceModel.Configuration.CompositeDuplexElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)
  - System.ServiceModel.Configuration.CompositeDuplexElement.CreateBindingElement
  - System.ServiceModel.Configuration.CompositeDuplexElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)
  - System.ServiceModel.Configuration.CompositeDuplexElement.Properties
  langs:
  - csharp
  name: CompositeDuplexElement
  nameWithType: CompositeDuplexElement
  fullName: System.ServiceModel.Configuration.CompositeDuplexElement
  type: Class
  summary: "Represents the configuration element that is used when the client must expose an endpoint for the service to send messages over HTTP. This class cannot be inherited."
  remarks: "This configuration element adds two-way messaging to a custom binding. It is used with transports that do not allow duplex communications natively, for example, HTTP. TCP, by contrast, allows duplex communications natively, and does not require the use of this binding element for the service to send messages back to a client.       The client must expose an address for the service to make contact and establish a connection. This client address is provided by the <xref:System.ServiceModel.Configuration.CompositeDuplexElement.ClientBaseAddress%2A> property."
  syntax:
    content: 'public sealed class CompositeDuplexElement : System.ServiceModel.Configuration.BindingElementExtensionElement'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  - System.ServiceModel.Configuration.ServiceModelConfigurationElement
  - System.ServiceModel.Configuration.ServiceModelExtensionElement
  - System.ServiceModel.Configuration.BindingElementExtensionElement
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.ResetModified
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  - System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
  - System.ServiceModel.Configuration.ServiceModelExtensionElement.ConfigurationElementName
  - System.ServiceModel.Configuration.ServiceModelExtensionElement.IsModified
  - System.ServiceModel.Configuration.ServiceModelExtensionElement.Reset(System.Configuration.ConfigurationElement)
  - System.ServiceModel.Configuration.ServiceModelExtensionElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  platform:
  - net462
- uid: System.ServiceModel.Configuration.CompositeDuplexElement.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Configuration.CompositeDuplexElement
  langs:
  - csharp
  name: CompositeDuplexElement()
  nameWithType: CompositeDuplexElement.CompositeDuplexElement()
  fullName: System.ServiceModel.Configuration.CompositeDuplexElement.CompositeDuplexElement()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Initializes a new instance of the <xref href=&quot;System.ServiceModel.Configuration.CompositeDuplexElement&quot;></xref> class."
  syntax:
    content: public CompositeDuplexElement ();
    parameters: []
  overload: System.ServiceModel.Configuration.CompositeDuplexElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.CompositeDuplexElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)
  id: ApplyConfiguration(System.ServiceModel.Channels.BindingElement)
  parent: System.ServiceModel.Configuration.CompositeDuplexElement
  langs:
  - csharp
  name: ApplyConfiguration(BindingElement)
  nameWithType: CompositeDuplexElement.ApplyConfiguration(BindingElement)
  fullName: System.ServiceModel.Configuration.CompositeDuplexElement.ApplyConfiguration(BindingElement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Applies the content of a specified binding element to this binding configuration section."
  syntax:
    content: public override void ApplyConfiguration (System.ServiceModel.Channels.BindingElement bindingElement);
    parameters:
    - id: bindingElement
      type: System.ServiceModel.Channels.BindingElement
      description: "A binding element."
  overload: System.ServiceModel.Configuration.CompositeDuplexElement.ApplyConfiguration*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.CompositeDuplexElement.BindingElementType
  id: BindingElementType
  parent: System.ServiceModel.Configuration.CompositeDuplexElement
  langs:
  - csharp
  name: BindingElementType
  nameWithType: CompositeDuplexElement.BindingElementType
  fullName: System.ServiceModel.Configuration.CompositeDuplexElement.BindingElementType
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets the type of binding element."
  syntax:
    content: public override Type BindingElementType { get; }
    return:
      type: System.Type
      description: "The type of binding element."
  overload: System.ServiceModel.Configuration.CompositeDuplexElement.BindingElementType*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.CompositeDuplexElement.ClientBaseAddress
  id: ClientBaseAddress
  parent: System.ServiceModel.Configuration.CompositeDuplexElement
  langs:
  - csharp
  name: ClientBaseAddress
  nameWithType: CompositeDuplexElement.ClientBaseAddress
  fullName: System.ServiceModel.Configuration.CompositeDuplexElement.ClientBaseAddress
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Gets or sets the base address for the client."
  remarks: "The service uses this address to make contact and establish a connection with the client."
  syntax:
    content: public Uri ClientBaseAddress { get; set; }
    return:
      type: System.Uri
      description: "A <xref:System.Uri> that contains the base address for the client."
  overload: System.ServiceModel.Configuration.CompositeDuplexElement.ClientBaseAddress*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.CompositeDuplexElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)
  id: CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)
  parent: System.ServiceModel.Configuration.CompositeDuplexElement
  langs:
  - csharp
  name: CopyFrom(ServiceModelExtensionElement)
  nameWithType: CompositeDuplexElement.CopyFrom(ServiceModelExtensionElement)
  fullName: System.ServiceModel.Configuration.CompositeDuplexElement.CopyFrom(ServiceModelExtensionElement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Copies the content of the specified configuration element to this configuration element."
  syntax:
    content: public override void CopyFrom (System.ServiceModel.Configuration.ServiceModelExtensionElement from);
    parameters:
    - id: from
      type: System.ServiceModel.Configuration.ServiceModelExtensionElement
      description: "The configuration element to be copied."
  overload: System.ServiceModel.Configuration.CompositeDuplexElement.CopyFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.CompositeDuplexElement.CreateBindingElement
  id: CreateBindingElement
  parent: System.ServiceModel.Configuration.CompositeDuplexElement
  langs:
  - csharp
  name: CreateBindingElement()
  nameWithType: CompositeDuplexElement.CreateBindingElement()
  fullName: System.ServiceModel.Configuration.CompositeDuplexElement.CreateBindingElement()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  syntax:
    content: protected override System.ServiceModel.Channels.BindingElement CreateBindingElement ();
    parameters: []
    return:
      type: System.ServiceModel.Channels.BindingElement
      description: "To be added."
  overload: System.ServiceModel.Configuration.CompositeDuplexElement.CreateBindingElement*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.CompositeDuplexElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)
  id: InitializeFrom(System.ServiceModel.Channels.BindingElement)
  parent: System.ServiceModel.Configuration.CompositeDuplexElement
  langs:
  - csharp
  name: InitializeFrom(BindingElement)
  nameWithType: CompositeDuplexElement.InitializeFrom(BindingElement)
  fullName: System.ServiceModel.Configuration.CompositeDuplexElement.InitializeFrom(BindingElement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  syntax:
    content: protected override void InitializeFrom (System.ServiceModel.Channels.BindingElement bindingElement);
    parameters:
    - id: bindingElement
      type: System.ServiceModel.Channels.BindingElement
      description: "To be added."
  overload: System.ServiceModel.Configuration.CompositeDuplexElement.InitializeFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.CompositeDuplexElement.Properties
  id: Properties
  parent: System.ServiceModel.Configuration.CompositeDuplexElement
  langs:
  - csharp
  name: Properties
  nameWithType: CompositeDuplexElement.Properties
  fullName: System.ServiceModel.Configuration.CompositeDuplexElement.Properties
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "To be added."
  overload: System.ServiceModel.Configuration.CompositeDuplexElement.Properties*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Configuration.BindingElementExtensionElement
  isExternal: false
  name: System.ServiceModel.Configuration.BindingElementExtensionElement
- uid: System.ServiceModel.Configuration.CompositeDuplexElement.#ctor
  parent: System.ServiceModel.Configuration.CompositeDuplexElement
  isExternal: false
  name: CompositeDuplexElement()
  nameWithType: CompositeDuplexElement.CompositeDuplexElement()
  fullName: System.ServiceModel.Configuration.CompositeDuplexElement.CompositeDuplexElement()
- uid: System.ServiceModel.Configuration.CompositeDuplexElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)
  parent: System.ServiceModel.Configuration.CompositeDuplexElement
  isExternal: false
  name: ApplyConfiguration(BindingElement)
  nameWithType: CompositeDuplexElement.ApplyConfiguration(BindingElement)
  fullName: System.ServiceModel.Configuration.CompositeDuplexElement.ApplyConfiguration(BindingElement)
- uid: System.ServiceModel.Channels.BindingElement
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingElement
  nameWithType: BindingElement
  fullName: System.ServiceModel.Channels.BindingElement
- uid: System.ServiceModel.Configuration.CompositeDuplexElement.BindingElementType
  parent: System.ServiceModel.Configuration.CompositeDuplexElement
  isExternal: false
  name: BindingElementType
  nameWithType: CompositeDuplexElement.BindingElementType
  fullName: System.ServiceModel.Configuration.CompositeDuplexElement.BindingElementType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.Configuration.CompositeDuplexElement.ClientBaseAddress
  parent: System.ServiceModel.Configuration.CompositeDuplexElement
  isExternal: false
  name: ClientBaseAddress
  nameWithType: CompositeDuplexElement.ClientBaseAddress
  fullName: System.ServiceModel.Configuration.CompositeDuplexElement.ClientBaseAddress
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.Configuration.CompositeDuplexElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)
  parent: System.ServiceModel.Configuration.CompositeDuplexElement
  isExternal: false
  name: CopyFrom(ServiceModelExtensionElement)
  nameWithType: CompositeDuplexElement.CopyFrom(ServiceModelExtensionElement)
  fullName: System.ServiceModel.Configuration.CompositeDuplexElement.CopyFrom(ServiceModelExtensionElement)
- uid: System.ServiceModel.Configuration.ServiceModelExtensionElement
  parent: System.ServiceModel.Configuration
  isExternal: false
  name: ServiceModelExtensionElement
  nameWithType: ServiceModelExtensionElement
  fullName: System.ServiceModel.Configuration.ServiceModelExtensionElement
- uid: System.ServiceModel.Configuration.CompositeDuplexElement.CreateBindingElement
  parent: System.ServiceModel.Configuration.CompositeDuplexElement
  isExternal: false
  name: CreateBindingElement()
  nameWithType: CompositeDuplexElement.CreateBindingElement()
  fullName: System.ServiceModel.Configuration.CompositeDuplexElement.CreateBindingElement()
- uid: System.ServiceModel.Configuration.CompositeDuplexElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)
  parent: System.ServiceModel.Configuration.CompositeDuplexElement
  isExternal: false
  name: InitializeFrom(BindingElement)
  nameWithType: CompositeDuplexElement.InitializeFrom(BindingElement)
  fullName: System.ServiceModel.Configuration.CompositeDuplexElement.InitializeFrom(BindingElement)
- uid: System.ServiceModel.Configuration.CompositeDuplexElement.Properties
  parent: System.ServiceModel.Configuration.CompositeDuplexElement
  isExternal: false
  name: Properties
  nameWithType: CompositeDuplexElement.Properties
  fullName: System.ServiceModel.Configuration.CompositeDuplexElement.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.ServiceModel.Configuration.CompositeDuplexElement.#ctor*
  parent: System.ServiceModel.Configuration.CompositeDuplexElement
  isExternal: false
  name: CompositeDuplexElement
  nameWithType: CompositeDuplexElement.CompositeDuplexElement
- uid: System.ServiceModel.Configuration.CompositeDuplexElement.ApplyConfiguration*
  parent: System.ServiceModel.Configuration.CompositeDuplexElement
  isExternal: false
  name: ApplyConfiguration
  nameWithType: CompositeDuplexElement.ApplyConfiguration
- uid: System.ServiceModel.Configuration.CompositeDuplexElement.BindingElementType*
  parent: System.ServiceModel.Configuration.CompositeDuplexElement
  isExternal: false
  name: BindingElementType
  nameWithType: CompositeDuplexElement.BindingElementType
- uid: System.ServiceModel.Configuration.CompositeDuplexElement.ClientBaseAddress*
  parent: System.ServiceModel.Configuration.CompositeDuplexElement
  isExternal: false
  name: ClientBaseAddress
  nameWithType: CompositeDuplexElement.ClientBaseAddress
- uid: System.ServiceModel.Configuration.CompositeDuplexElement.CopyFrom*
  parent: System.ServiceModel.Configuration.CompositeDuplexElement
  isExternal: false
  name: CopyFrom
  nameWithType: CompositeDuplexElement.CopyFrom
- uid: System.ServiceModel.Configuration.CompositeDuplexElement.CreateBindingElement*
  parent: System.ServiceModel.Configuration.CompositeDuplexElement
  isExternal: false
  name: CreateBindingElement
  nameWithType: CompositeDuplexElement.CreateBindingElement
- uid: System.ServiceModel.Configuration.CompositeDuplexElement.InitializeFrom*
  parent: System.ServiceModel.Configuration.CompositeDuplexElement
  isExternal: false
  name: InitializeFrom
  nameWithType: CompositeDuplexElement.InitializeFrom
- uid: System.ServiceModel.Configuration.CompositeDuplexElement.Properties*
  parent: System.ServiceModel.Configuration.CompositeDuplexElement
  isExternal: false
  name: Properties
  nameWithType: CompositeDuplexElement.Properties
