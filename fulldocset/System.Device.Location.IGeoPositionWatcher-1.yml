### YamlMime:ManagedReference
items:
- uid: System.Device.Location.IGeoPositionWatcher`1
  id: IGeoPositionWatcher`1
  children:
  - System.Device.Location.IGeoPositionWatcher`1.Position
  - System.Device.Location.IGeoPositionWatcher`1.PositionChanged
  - System.Device.Location.IGeoPositionWatcher`1.Start
  - System.Device.Location.IGeoPositionWatcher`1.Start(System.Boolean)
  - System.Device.Location.IGeoPositionWatcher`1.Status
  - System.Device.Location.IGeoPositionWatcher`1.StatusChanged
  - System.Device.Location.IGeoPositionWatcher`1.Stop
  - System.Device.Location.IGeoPositionWatcher`1.TryStart(System.Boolean,System.`0imeSpan)
  langs:
  - csharp
  name: IGeoPositionWatcher<T>
  nameWithType: IGeoPositionWatcher<T>
  fullName: System.Device.Location.IGeoPositionWatcher<T>
  type: Interface
  syntax:
    content: public interface IGeoPositionWatcher<T>
    typeParameters:
    - id: T
      description: "To be added."
  implements: []
  platform:
  - net462
- uid: System.Device.Location.IGeoPositionWatcher`1.Position
  id: Position
  parent: System.Device.Location.IGeoPositionWatcher`1
  langs:
  - csharp
  name: Position
  nameWithType: IGeoPositionWatcher<T>.Position
  fullName: System.Device.Location.IGeoPositionWatcher<T>.Position
  type: Property
  assemblies:
  - System.Device
  namespace: System.Device.Location
  syntax:
    content: public System.Device.Location.GeoPosition<T> Position { get; }
    return:
      type: System.Device.Location.GeoPosition`1
      description: "To be added."
  overload: System.Device.Location.IGeoPositionWatcher`1.Position*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.IGeoPositionWatcher`1.PositionChanged
  id: PositionChanged
  parent: System.Device.Location.IGeoPositionWatcher`1
  langs:
  - csharp
  name: PositionChanged
  nameWithType: IGeoPositionWatcher<T>.PositionChanged
  fullName: System.Device.Location.IGeoPositionWatcher<T>.PositionChanged
  type: Event
  assemblies:
  - System.Device
  namespace: System.Device.Location
  syntax:
    content: public event EventHandler<System.Device.Location.GeoPositionChangedEventArgs<T>> PositionChanged;
    return:
      type: System.EventHandler{System.Device.Location.GeoPositionChangedEventArgs{T}}
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.IGeoPositionWatcher`1.Start
  id: Start
  parent: System.Device.Location.IGeoPositionWatcher`1
  langs:
  - csharp
  name: Start()
  nameWithType: IGeoPositionWatcher<T>.Start()
  fullName: System.Device.Location.IGeoPositionWatcher<T>.Start()
  type: Method
  assemblies:
  - System.Device
  namespace: System.Device.Location
  syntax:
    content: public void Start ();
    parameters: []
  overload: System.Device.Location.IGeoPositionWatcher`1.Start*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.IGeoPositionWatcher`1.Start(System.Boolean)
  id: Start(System.Boolean)
  parent: System.Device.Location.IGeoPositionWatcher`1
  langs:
  - csharp
  name: Start(Boolean)
  nameWithType: IGeoPositionWatcher<T>.Start(Boolean)
  fullName: System.Device.Location.IGeoPositionWatcher<T>.Start(Boolean)
  type: Method
  assemblies:
  - System.Device
  namespace: System.Device.Location
  syntax:
    content: public void Start (bool suppressPermissionPrompt);
    parameters:
    - id: suppressPermissionPrompt
      type: System.Boolean
      description: "To be added."
  overload: System.Device.Location.IGeoPositionWatcher`1.Start*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.IGeoPositionWatcher`1.Status
  id: Status
  parent: System.Device.Location.IGeoPositionWatcher`1
  langs:
  - csharp
  name: Status
  nameWithType: IGeoPositionWatcher<T>.Status
  fullName: System.Device.Location.IGeoPositionWatcher<T>.Status
  type: Property
  assemblies:
  - System.Device
  namespace: System.Device.Location
  syntax:
    content: public System.Device.Location.GeoPositionStatus Status { get; }
    return:
      type: System.Device.Location.GeoPositionStatus
      description: "To be added."
  overload: System.Device.Location.IGeoPositionWatcher`1.Status*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.IGeoPositionWatcher`1.StatusChanged
  id: StatusChanged
  parent: System.Device.Location.IGeoPositionWatcher`1
  langs:
  - csharp
  name: StatusChanged
  nameWithType: IGeoPositionWatcher<T>.StatusChanged
  fullName: System.Device.Location.IGeoPositionWatcher<T>.StatusChanged
  type: Event
  assemblies:
  - System.Device
  namespace: System.Device.Location
  syntax:
    content: public event EventHandler<System.Device.Location.GeoPositionStatusChangedEventArgs> StatusChanged;
    return:
      type: System.EventHandler{System.Device.Location.GeoPositionStatusChangedEventArgs}
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.IGeoPositionWatcher`1.Stop
  id: Stop
  parent: System.Device.Location.IGeoPositionWatcher`1
  langs:
  - csharp
  name: Stop()
  nameWithType: IGeoPositionWatcher<T>.Stop()
  fullName: System.Device.Location.IGeoPositionWatcher<T>.Stop()
  type: Method
  assemblies:
  - System.Device
  namespace: System.Device.Location
  syntax:
    content: public void Stop ();
    parameters: []
  overload: System.Device.Location.IGeoPositionWatcher`1.Stop*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.IGeoPositionWatcher`1.TryStart(System.Boolean,System.`0imeSpan)
  id: TryStart(System.Boolean,System.`0imeSpan)
  parent: System.Device.Location.IGeoPositionWatcher`1
  langs:
  - csharp
  name: TryStart(Boolean,TimeSpan)
  nameWithType: IGeoPositionWatcher<T>.TryStart(Boolean,TimeSpan)
  fullName: System.Device.Location.IGeoPositionWatcher<T>.TryStart(Boolean,TimeSpan)
  type: Method
  assemblies:
  - System.Device
  namespace: System.Device.Location
  syntax:
    content: public bool TryStart (bool suppressPermissionPrompt, TimeSpan timeout);
    parameters:
    - id: suppressPermissionPrompt
      type: System.Boolean
      description: "To be added."
    - id: timeout
      type: System.TimeSpan
      description: "To be added."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Device.Location.IGeoPositionWatcher`1.TryStart*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Device.Location.IGeoPositionWatcher`1.Position
  parent: System.Device.Location.IGeoPositionWatcher`1
  isExternal: false
  name: Position
  nameWithType: IGeoPositionWatcher<T>.Position
  fullName: System.Device.Location.IGeoPositionWatcher<T>.Position
- uid: System.Device.Location.GeoPosition`1
  parent: System.Device.Location
  isExternal: false
  name: GeoPosition<T>
  nameWithType: GeoPosition<T>
  fullName: System.Device.Location.GeoPosition<T>
- uid: System.Device.Location.IGeoPositionWatcher`1.PositionChanged
  parent: System.Device.Location.IGeoPositionWatcher`1
  isExternal: false
  name: PositionChanged
  nameWithType: IGeoPositionWatcher<T>.PositionChanged
  fullName: System.Device.Location.IGeoPositionWatcher<T>.PositionChanged
- uid: System.EventHandler{System.Device.Location.GeoPositionChangedEventArgs{T}}
  parent: System
  isExternal: true
  name: EventHandler<GeoPositionChangedEventArgs<T>>
  nameWithType: EventHandler<GeoPositionChangedEventArgs<T>>
  fullName: System.EventHandler<System.Device.Location.GeoPositionChangedEventArgs<T>>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Device.Location.GeoPositionChangedEventArgs<T>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Device.Location.GeoPositionChangedEventArgs`1
    name: GeoPositionChangedEventArgs
    nameWithType: GeoPositionChangedEventArgs
    fullName: GeoPositionChangedEventArgs<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Device.Location.IGeoPositionWatcher`1.Start
  parent: System.Device.Location.IGeoPositionWatcher`1
  isExternal: false
  name: Start()
  nameWithType: IGeoPositionWatcher<T>.Start()
  fullName: System.Device.Location.IGeoPositionWatcher<T>.Start()
- uid: System.Device.Location.IGeoPositionWatcher`1.Start(System.Boolean)
  parent: System.Device.Location.IGeoPositionWatcher`1
  isExternal: false
  name: Start(Boolean)
  nameWithType: IGeoPositionWatcher<T>.Start(Boolean)
  fullName: System.Device.Location.IGeoPositionWatcher<T>.Start(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Device.Location.IGeoPositionWatcher`1.Status
  parent: System.Device.Location.IGeoPositionWatcher`1
  isExternal: false
  name: Status
  nameWithType: IGeoPositionWatcher<T>.Status
  fullName: System.Device.Location.IGeoPositionWatcher<T>.Status
- uid: System.Device.Location.GeoPositionStatus
  parent: System.Device.Location
  isExternal: false
  name: GeoPositionStatus
  nameWithType: GeoPositionStatus
  fullName: System.Device.Location.GeoPositionStatus
- uid: System.Device.Location.IGeoPositionWatcher`1.StatusChanged
  parent: System.Device.Location.IGeoPositionWatcher`1
  isExternal: false
  name: StatusChanged
  nameWithType: IGeoPositionWatcher<T>.StatusChanged
  fullName: System.Device.Location.IGeoPositionWatcher<T>.StatusChanged
- uid: System.EventHandler{System.Device.Location.GeoPositionStatusChangedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<GeoPositionStatusChangedEventArgs>
  nameWithType: EventHandler<GeoPositionStatusChangedEventArgs>
  fullName: System.EventHandler<System.Device.Location.GeoPositionStatusChangedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Device.Location.GeoPositionStatusChangedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Device.Location.GeoPositionStatusChangedEventArgs
    name: GeoPositionStatusChangedEventArgs
    nameWithType: GeoPositionStatusChangedEventArgs
    fullName: GeoPositionStatusChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Device.Location.IGeoPositionWatcher`1.Stop
  parent: System.Device.Location.IGeoPositionWatcher`1
  isExternal: false
  name: Stop()
  nameWithType: IGeoPositionWatcher<T>.Stop()
  fullName: System.Device.Location.IGeoPositionWatcher<T>.Stop()
- uid: System.Device.Location.IGeoPositionWatcher`1.TryStart(System.Boolean,System.`0imeSpan)
  parent: System.Device.Location.IGeoPositionWatcher`1
  isExternal: false
  name: TryStart(Boolean,TimeSpan)
  nameWithType: IGeoPositionWatcher<T>.TryStart(Boolean,TimeSpan)
  fullName: System.Device.Location.IGeoPositionWatcher<T>.TryStart(Boolean,TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Device.Location.IGeoPositionWatcher`1.Position*
  parent: System.Device.Location.IGeoPositionWatcher`1
  isExternal: false
  name: Position
  nameWithType: IGeoPositionWatcher<T>.Position
- uid: System.Device.Location.IGeoPositionWatcher`1.Start*
  parent: System.Device.Location.IGeoPositionWatcher`1
  isExternal: false
  name: Start
  nameWithType: IGeoPositionWatcher<T>.Start
- uid: System.Device.Location.IGeoPositionWatcher`1.Status*
  parent: System.Device.Location.IGeoPositionWatcher`1
  isExternal: false
  name: Status
  nameWithType: IGeoPositionWatcher<T>.Status
- uid: System.Device.Location.IGeoPositionWatcher`1.Stop*
  parent: System.Device.Location.IGeoPositionWatcher`1
  isExternal: false
  name: Stop
  nameWithType: IGeoPositionWatcher<T>.Stop
- uid: System.Device.Location.IGeoPositionWatcher`1.TryStart*
  parent: System.Device.Location.IGeoPositionWatcher`1
  isExternal: false
  name: TryStart
  nameWithType: IGeoPositionWatcher<T>.TryStart
