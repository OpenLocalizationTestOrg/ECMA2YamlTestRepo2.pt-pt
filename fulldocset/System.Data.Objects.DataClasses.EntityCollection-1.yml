### YamlMime:ManagedReference
items:
- uid: System.Data.Objects.DataClasses.EntityCollection`1
  id: EntityCollection`1
  children:
  - System.Data.Objects.DataClasses.EntityCollection`1.#ctor
  - System.Data.Objects.DataClasses.EntityCollection`1.Add(`0)
  - System.Data.Objects.DataClasses.EntityCollection`1.Attach(System.Collections.Generic.IEnumerable{`0})
  - System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)
  - System.Data.Objects.DataClasses.EntityCollection`1.Clear
  - System.Data.Objects.DataClasses.EntityCollection`1.Contains(`0)
  - System.Data.Objects.DataClasses.EntityCollection`1.CopyTo(`0[],System.Int32)
  - System.Data.Objects.DataClasses.EntityCollection`1.Count
  - System.Data.Objects.DataClasses.EntityCollection`1.CreateSourceQuery
  - System.Data.Objects.DataClasses.EntityCollection`1.GetEnumerator
  - System.Data.Objects.DataClasses.EntityCollection`1.IsReadOnly
  - System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)
  - System.Data.Objects.DataClasses.EntityCollection`1.OnCollectionDeserialized(System.Runtime.Serialization.StreamingContext)
  - System.Data.Objects.DataClasses.EntityCollection`1.OnSerializing(System.Runtime.Serialization.StreamingContext)
  - System.Data.Objects.DataClasses.EntityCollection`1.Remove(`0)
  - System.Data.Objects.DataClasses.EntityCollection`1.System#Collections#IEnumerable#GetEnumerator
  - System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#ContainsListCollection
  - System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#GetList
  langs:
  - csharp
  name: EntityCollection<TEntity>
  nameWithType: EntityCollection<TEntity>
  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>
  type: Class
  syntax:
    content: 'public sealed class EntityCollection<TEntity> : System.Data.Objects.DataClasses.RelatedEnd, System.Collections.Generic.ICollection<TEntity>, System.Collections.Generic.IEnumerable<TEntity>, System.ComponentModel.IListSource where TEntity : class'
    typeParameters:
    - id: TEntity
      description: "To be added."
  inheritance:
  - System.Object
  - System.Data.Objects.DataClasses.RelatedEnd
  implements:
  - System.Collections.Generic.ICollection<TEntity>
  - System.Collections.Generic.IEnumerable<TEntity>
  - System.ComponentModel.IListSource
  inheritedMembers:
  - System.Data.Objects.DataClasses.RelatedEnd.AssociationChanged
  - System.Data.Objects.DataClasses.RelatedEnd.IsLoaded
  - System.Data.Objects.DataClasses.RelatedEnd.Load
  - System.Data.Objects.DataClasses.RelatedEnd.OnDeserialized(System.Runtime.Serialization.StreamingContext)
  - System.Data.Objects.DataClasses.RelatedEnd.RelationshipName
  - System.Data.Objects.DataClasses.RelatedEnd.RelationshipSet
  - System.Data.Objects.DataClasses.RelatedEnd.SourceRoleName
  - System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Data.Objects.DataClasses.IEntityWithRelationships)
  - System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Object)
  - System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)
  - System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Object)
  - System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#CreateSourceQuery
  - System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)
  - System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Object)
  - System.Data.Objects.DataClasses.RelatedEnd.TargetRoleName
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.EntityCollection`1.#ctor
  id: '#ctor'
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  langs:
  - csharp
  name: EntityCollection()
  nameWithType: EntityCollection<TEntity>.EntityCollection()
  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.EntityCollection()
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  syntax:
    content: public EntityCollection ();
    parameters: []
  overload: System.Data.Objects.DataClasses.EntityCollection`1.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.EntityCollection`1.Add(`0)
  id: Add(`0)
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  langs:
  - csharp
  name: Add(TEntity)
  nameWithType: EntityCollection<TEntity>.Add(TEntity)
  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.Add(TEntity)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  syntax:
    content: public void Add (TEntity entity);
    parameters:
    - id: entity
      type: TEntity
      description: "To be added."
  overload: System.Data.Objects.DataClasses.EntityCollection`1.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.EntityCollection`1.Attach(System.Collections.Generic.IEnumerable{`0})
  id: Attach(System.Collections.Generic.IEnumerable{`0})
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  langs:
  - csharp
  name: Attach(IEnumerable<TEntity>)
  nameWithType: EntityCollection<TEntity>.Attach(IEnumerable<TEntity>)
  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.Attach(IEnumerable<TEntity>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  syntax:
    content: public void Attach (System.Collections.Generic.IEnumerable<TEntity> entities);
    parameters:
    - id: entities
      type: System.Collections.Generic.IEnumerable{TEntity}
      description: "To be added."
  overload: System.Data.Objects.DataClasses.EntityCollection`1.Attach*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)
  id: Attach(`0)
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  langs:
  - csharp
  name: Attach(TEntity)
  nameWithType: EntityCollection<TEntity>.Attach(TEntity)
  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.Attach(TEntity)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  syntax:
    content: public void Attach (TEntity entity);
    parameters:
    - id: entity
      type: TEntity
      description: "To be added."
  overload: System.Data.Objects.DataClasses.EntityCollection`1.Attach*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.EntityCollection`1.Clear
  id: Clear
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  langs:
  - csharp
  name: Clear()
  nameWithType: EntityCollection<TEntity>.Clear()
  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.Clear()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Data.Objects.DataClasses.EntityCollection`1.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.EntityCollection`1.Contains(`0)
  id: Contains(`0)
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  langs:
  - csharp
  name: Contains(TEntity)
  nameWithType: EntityCollection<TEntity>.Contains(TEntity)
  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.Contains(TEntity)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  syntax:
    content: public bool Contains (TEntity entity);
    parameters:
    - id: entity
      type: TEntity
      description: "To be added."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Data.Objects.DataClasses.EntityCollection`1.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.EntityCollection`1.CopyTo(`0[],System.Int32)
  id: CopyTo(`0[],System.Int32)
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  langs:
  - csharp
  name: CopyTo(TEntity[],Int32)
  nameWithType: EntityCollection<TEntity>.CopyTo(TEntity[],Int32)
  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.CopyTo(TEntity[],Int32)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  syntax:
    content: public void CopyTo (TEntity[] array, int arrayIndex);
    parameters:
    - id: array
      type: TEntity[]
      description: "To be added."
    - id: arrayIndex
      type: System.Int32
      description: "To be added."
  overload: System.Data.Objects.DataClasses.EntityCollection`1.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.EntityCollection`1.Count
  id: Count
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  langs:
  - csharp
  name: Count
  nameWithType: EntityCollection<TEntity>.Count
  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.Count
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "To be added."
  overload: System.Data.Objects.DataClasses.EntityCollection`1.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.EntityCollection`1.CreateSourceQuery
  id: CreateSourceQuery
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  langs:
  - csharp
  name: CreateSourceQuery()
  nameWithType: EntityCollection<TEntity>.CreateSourceQuery()
  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.CreateSourceQuery()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  syntax:
    content: public System.Data.Objects.ObjectQuery<TEntity> CreateSourceQuery ();
    parameters: []
    return:
      type: System.Data.Objects.ObjectQuery{TEntity}
      description: "To be added."
  overload: System.Data.Objects.DataClasses.EntityCollection`1.CreateSourceQuery*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.EntityCollection`1.GetEnumerator
  id: GetEnumerator
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: EntityCollection<TEntity>.GetEnumerator()
  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.GetEnumerator()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  syntax:
    content: public System.Collections.Generic.IEnumerator<TEntity> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{TEntity}
      description: "To be added."
  overload: System.Data.Objects.DataClasses.EntityCollection`1.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.EntityCollection`1.IsReadOnly
  id: IsReadOnly
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: EntityCollection<TEntity>.IsReadOnly
  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.IsReadOnly
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Data.Objects.DataClasses.EntityCollection`1.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)
  id: Load(System.Data.Objects.MergeOption)
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  langs:
  - csharp
  name: Load(MergeOption)
  nameWithType: EntityCollection<TEntity>.Load(MergeOption)
  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.Load(MergeOption)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  syntax:
    content: public override void Load (System.Data.Objects.MergeOption mergeOption);
    parameters:
    - id: mergeOption
      type: System.Data.Objects.MergeOption
      description: "To be added."
  overload: System.Data.Objects.DataClasses.EntityCollection`1.Load*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.EntityCollection`1.OnCollectionDeserialized(System.Runtime.Serialization.StreamingContext)
  id: OnCollectionDeserialized(System.Runtime.Serialization.StreamingContext)
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  langs:
  - csharp
  name: OnCollectionDeserialized(StreamingContext)
  nameWithType: EntityCollection<TEntity>.OnCollectionDeserialized(StreamingContext)
  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.OnCollectionDeserialized(StreamingContext)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  syntax:
    content: public void OnCollectionDeserialized (System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "To be added."
  overload: System.Data.Objects.DataClasses.EntityCollection`1.OnCollectionDeserialized*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.EntityCollection`1.OnSerializing(System.Runtime.Serialization.StreamingContext)
  id: OnSerializing(System.Runtime.Serialization.StreamingContext)
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  langs:
  - csharp
  name: OnSerializing(StreamingContext)
  nameWithType: EntityCollection<TEntity>.OnSerializing(StreamingContext)
  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.OnSerializing(StreamingContext)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  syntax:
    content: public void OnSerializing (System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "To be added."
  overload: System.Data.Objects.DataClasses.EntityCollection`1.OnSerializing*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.EntityCollection`1.Remove(`0)
  id: Remove(`0)
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  langs:
  - csharp
  name: Remove(TEntity)
  nameWithType: EntityCollection<TEntity>.Remove(TEntity)
  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.Remove(TEntity)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  syntax:
    content: public bool Remove (TEntity entity);
    parameters:
    - id: entity
      type: TEntity
      description: "To be added."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Data.Objects.DataClasses.EntityCollection`1.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.EntityCollection`1.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: EntityCollection<TEntity>.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "To be added."
  overload: System.Data.Objects.DataClasses.EntityCollection`1.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#ContainsListCollection
  id: System#ComponentModel#IListSource#ContainsListCollection
  isEii: true
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  langs:
  - csharp
  name: System.ComponentModel.IListSource.ContainsListCollection
  nameWithType: EntityCollection<TEntity>.System.ComponentModel.IListSource.ContainsListCollection
  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.System.ComponentModel.IListSource.ContainsListCollection
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  syntax:
    content: bool System.ComponentModel.IListSource.ContainsListCollection { get; }
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#ContainsListCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#GetList
  id: System#ComponentModel#IListSource#GetList
  isEii: true
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  langs:
  - csharp
  name: System.ComponentModel.IListSource.GetList()
  nameWithType: EntityCollection<TEntity>.System.ComponentModel.IListSource.GetList()
  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.System.ComponentModel.IListSource.GetList()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects.DataClasses
  syntax:
    content: System.Collections.IList IListSource.GetList ();
    parameters: []
    return:
      type: System.Collections.IList
      description: "To be added."
  overload: System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#GetList*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Objects.DataClasses.RelatedEnd
  isExternal: false
  name: System.Data.Objects.DataClasses.RelatedEnd
- uid: System.Data.Objects.DataClasses.EntityCollection`1.#ctor
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  isExternal: false
  name: EntityCollection()
  nameWithType: EntityCollection<TEntity>.EntityCollection()
  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.EntityCollection()
- uid: System.Data.Objects.DataClasses.EntityCollection`1.Add(`0)
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  isExternal: false
  name: Add(TEntity)
  nameWithType: EntityCollection<TEntity>.Add(TEntity)
  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.Add(TEntity)
- uid: TEntity
  isExternal: true
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: System.Data.Objects.DataClasses.EntityCollection`1.Attach(System.Collections.Generic.IEnumerable{`0})
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  isExternal: false
  name: Attach(IEnumerable<TEntity>)
  nameWithType: EntityCollection<TEntity>.Attach(IEnumerable<TEntity>)
  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.Attach(IEnumerable<TEntity>)
- uid: System.Collections.Generic.IEnumerable{TEntity}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<TEntity>
  nameWithType: IEnumerable<TEntity>
  fullName: System.Collections.Generic.IEnumerable<TEntity>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<TEntity>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TEntity
    name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  isExternal: false
  name: Attach(TEntity)
  nameWithType: EntityCollection<TEntity>.Attach(TEntity)
  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.Attach(TEntity)
- uid: System.Data.Objects.DataClasses.EntityCollection`1.Clear
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  isExternal: false
  name: Clear()
  nameWithType: EntityCollection<TEntity>.Clear()
  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.Clear()
- uid: System.Data.Objects.DataClasses.EntityCollection`1.Contains(`0)
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  isExternal: false
  name: Contains(TEntity)
  nameWithType: EntityCollection<TEntity>.Contains(TEntity)
  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.Contains(TEntity)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Objects.DataClasses.EntityCollection`1.CopyTo(`0[],System.Int32)
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  isExternal: false
  name: CopyTo(TEntity[],Int32)
  nameWithType: EntityCollection<TEntity>.CopyTo(TEntity[],Int32)
  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.CopyTo(TEntity[],Int32)
- uid: TEntity[]
  isExternal: true
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity[]
  spec.csharp:
  - uid: TEntity
    name: TEntity
    nameWithType: TEntity
    fullName: TEntity[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Objects.DataClasses.EntityCollection`1.Count
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  isExternal: false
  name: Count
  nameWithType: EntityCollection<TEntity>.Count
  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.Count
- uid: System.Data.Objects.DataClasses.EntityCollection`1.CreateSourceQuery
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  isExternal: false
  name: CreateSourceQuery()
  nameWithType: EntityCollection<TEntity>.CreateSourceQuery()
  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.CreateSourceQuery()
- uid: System.Data.Objects.ObjectQuery{TEntity}
  parent: System.Data.Objects
  isExternal: false
  name: ObjectQuery<TEntity>
  nameWithType: ObjectQuery<TEntity>
  fullName: System.Data.Objects.ObjectQuery<TEntity>
  spec.csharp:
  - uid: System.Data.Objects.ObjectQuery`1
    name: ObjectQuery
    nameWithType: ObjectQuery
    fullName: ObjectQuery<TEntity>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TEntity
    name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Objects.DataClasses.EntityCollection`1.GetEnumerator
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  isExternal: false
  name: GetEnumerator()
  nameWithType: EntityCollection<TEntity>.GetEnumerator()
  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{TEntity}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<TEntity>
  nameWithType: IEnumerator<TEntity>
  fullName: System.Collections.Generic.IEnumerator<TEntity>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<TEntity>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TEntity
    name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Objects.DataClasses.EntityCollection`1.IsReadOnly
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  isExternal: false
  name: IsReadOnly
  nameWithType: EntityCollection<TEntity>.IsReadOnly
  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.IsReadOnly
- uid: System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  isExternal: false
  name: Load(MergeOption)
  nameWithType: EntityCollection<TEntity>.Load(MergeOption)
  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.Load(MergeOption)
- uid: System.Data.Objects.MergeOption
  parent: System.Data.Objects
  isExternal: false
  name: MergeOption
  nameWithType: MergeOption
  fullName: System.Data.Objects.MergeOption
- uid: System.Data.Objects.DataClasses.EntityCollection`1.OnCollectionDeserialized(System.Runtime.Serialization.StreamingContext)
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  isExternal: false
  name: OnCollectionDeserialized(StreamingContext)
  nameWithType: EntityCollection<TEntity>.OnCollectionDeserialized(StreamingContext)
  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.OnCollectionDeserialized(StreamingContext)
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Data.Objects.DataClasses.EntityCollection`1.OnSerializing(System.Runtime.Serialization.StreamingContext)
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  isExternal: false
  name: OnSerializing(StreamingContext)
  nameWithType: EntityCollection<TEntity>.OnSerializing(StreamingContext)
  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.OnSerializing(StreamingContext)
- uid: System.Data.Objects.DataClasses.EntityCollection`1.Remove(`0)
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  isExternal: false
  name: Remove(TEntity)
  nameWithType: EntityCollection<TEntity>.Remove(TEntity)
  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.Remove(TEntity)
- uid: System.Data.Objects.DataClasses.EntityCollection`1.System#Collections#IEnumerable#GetEnumerator
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: EntityCollection<TEntity>.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#ContainsListCollection
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  isExternal: false
  name: System.ComponentModel.IListSource.ContainsListCollection
  nameWithType: EntityCollection<TEntity>.System.ComponentModel.IListSource.ContainsListCollection
  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.System.ComponentModel.IListSource.ContainsListCollection
- uid: System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#GetList
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  isExternal: false
  name: System.ComponentModel.IListSource.GetList()
  nameWithType: EntityCollection<TEntity>.System.ComponentModel.IListSource.GetList()
  fullName: System.Data.Objects.DataClasses.EntityCollection<TEntity>.System.ComponentModel.IListSource.GetList()
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Data.Objects.DataClasses.EntityCollection`1.#ctor*
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  isExternal: false
  name: EntityCollection<TEntity>
  nameWithType: EntityCollection<TEntity>.EntityCollection<TEntity>
- uid: System.Data.Objects.DataClasses.EntityCollection`1.Add*
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  isExternal: false
  name: Add
  nameWithType: EntityCollection<TEntity>.Add
- uid: System.Data.Objects.DataClasses.EntityCollection`1.Attach*
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  isExternal: false
  name: Attach
  nameWithType: EntityCollection<TEntity>.Attach
- uid: System.Data.Objects.DataClasses.EntityCollection`1.Clear*
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  isExternal: false
  name: Clear
  nameWithType: EntityCollection<TEntity>.Clear
- uid: System.Data.Objects.DataClasses.EntityCollection`1.Contains*
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  isExternal: false
  name: Contains
  nameWithType: EntityCollection<TEntity>.Contains
- uid: System.Data.Objects.DataClasses.EntityCollection`1.CopyTo*
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  isExternal: false
  name: CopyTo
  nameWithType: EntityCollection<TEntity>.CopyTo
- uid: System.Data.Objects.DataClasses.EntityCollection`1.Count*
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  isExternal: false
  name: Count
  nameWithType: EntityCollection<TEntity>.Count
- uid: System.Data.Objects.DataClasses.EntityCollection`1.CreateSourceQuery*
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  isExternal: false
  name: CreateSourceQuery
  nameWithType: EntityCollection<TEntity>.CreateSourceQuery
- uid: System.Data.Objects.DataClasses.EntityCollection`1.GetEnumerator*
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  isExternal: false
  name: GetEnumerator
  nameWithType: EntityCollection<TEntity>.GetEnumerator
- uid: System.Data.Objects.DataClasses.EntityCollection`1.IsReadOnly*
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  isExternal: false
  name: IsReadOnly
  nameWithType: EntityCollection<TEntity>.IsReadOnly
- uid: System.Data.Objects.DataClasses.EntityCollection`1.Load*
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  isExternal: false
  name: Load
  nameWithType: EntityCollection<TEntity>.Load
- uid: System.Data.Objects.DataClasses.EntityCollection`1.OnCollectionDeserialized*
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  isExternal: false
  name: OnCollectionDeserialized
  nameWithType: EntityCollection<TEntity>.OnCollectionDeserialized
- uid: System.Data.Objects.DataClasses.EntityCollection`1.OnSerializing*
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  isExternal: false
  name: OnSerializing
  nameWithType: EntityCollection<TEntity>.OnSerializing
- uid: System.Data.Objects.DataClasses.EntityCollection`1.Remove*
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  isExternal: false
  name: Remove
  nameWithType: EntityCollection<TEntity>.Remove
- uid: System.Data.Objects.DataClasses.EntityCollection`1.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: EntityCollection<TEntity>.System.Collections.IEnumerable.GetEnumerator
- uid: System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#ContainsListCollection*
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  isExternal: false
  name: System.ComponentModel.IListSource.ContainsListCollection
  nameWithType: EntityCollection<TEntity>.System.ComponentModel.IListSource.ContainsListCollection
- uid: System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#GetList*
  parent: System.Data.Objects.DataClasses.EntityCollection`1
  isExternal: false
  name: System.ComponentModel.IListSource.GetList
  nameWithType: EntityCollection<TEntity>.System.ComponentModel.IListSource.GetList
