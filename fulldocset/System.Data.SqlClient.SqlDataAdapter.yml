### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlDataAdapter
  id: SqlDataAdapter
  children:
  - System.Data.SqlClient.SqlDataAdapter.#ctor
  - System.Data.SqlClient.SqlDataAdapter.#ctor(System.Data.SqlClient.SqlCommand)
  - System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.Data.SqlClient.SqlConnection)
  - System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.String)
  - System.Data.SqlClient.SqlDataAdapter.AddToBatch(System.Data.IDbCommand)
  - System.Data.SqlClient.SqlDataAdapter.ClearBatch
  - System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  - System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  - System.Data.SqlClient.SqlDataAdapter.DeleteCommand
  - System.Data.SqlClient.SqlDataAdapter.ExecuteBatch
  - System.Data.SqlClient.SqlDataAdapter.GetBatchedParameter(System.Int32,System.Int32)
  - System.Data.SqlClient.SqlDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)
  - System.Data.SqlClient.SqlDataAdapter.InitializeBatching
  - System.Data.SqlClient.SqlDataAdapter.InsertCommand
  - System.Data.SqlClient.SqlDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  - System.Data.SqlClient.SqlDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  - System.Data.SqlClient.SqlDataAdapter.RowUpdated
  - System.Data.SqlClient.SqlDataAdapter.RowUpdating
  - System.Data.SqlClient.SqlDataAdapter.SelectCommand
  - System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#DeleteCommand
  - System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#InsertCommand
  - System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#SelectCommand
  - System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#UpdateCommand
  - System.Data.SqlClient.SqlDataAdapter.System#ICloneable#Clone
  - System.Data.SqlClient.SqlDataAdapter.TerminateBatching
  - System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize
  - System.Data.SqlClient.SqlDataAdapter.UpdateCommand
  langs:
  - csharp
  name: SqlDataAdapter
  nameWithType: SqlDataAdapter
  fullName: System.Data.SqlClient.SqlDataAdapter
  type: Class
  summary: "Representa um conjunto de comandos de dados e uma ligação de base de dados que são utilizados para preencher o <xref href=&quot;System.Data.DataSet&quot;> </xref> e atualizar uma base de dados do SQL Server. Esta classe não pode ser herdada."
  remarks: "SqlDataAdapter, funciona como uma ponte entre um <xref:System.Data.DataSet>e o SQL Server para obter e os dados.</xref:System.Data.DataSet> O SqlDataAdapter fornece este bridge ao mapeamento <xref:System.Data.Common.DbDataAdapter.Fill%2A>, que altera os dados a <xref:System.Data.DataSet>para fazer corresponder dados na origem de dados, e <xref:System.Data.Common.DbDataAdapter.Update%2A>, que altera os dados da origem de dados para fazer corresponder dados no <xref:System.Data.DataSet>, utilizando as instruções Transact-SQL adequadas contra a origem de dados.</xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A> </xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Fill%2A> A atualização é executada numa base por linha. Para cada linha inserida, modificação e eliminada o <xref:System.Data.Common.DbDataAdapter.Update%2A>método determina o tipo de alteração que efetuou na mesma (`Insert`, `Update`, ou `Delete`).</xref:System.Data.Common.DbDataAdapter.Update%2A> Dependendo do tipo de alteração, o `Insert`, `Update`, ou `Delete` modelo comando executa para propagar a linha modificada para a origem de dados. Quando o SqlDataAdapter preenche um <xref:System.Data.DataSet>, cria as tabelas necessárias e colunas para os dados devolvidos se estes ainda não existir.</xref:System.Data.DataSet> No entanto, informações da chave primária não estão incluídas no esquema implicitamente criado, a menos que a <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>propriedade está definida como <xref:System.Data.MissingSchemaAction>.</xref:System.Data.MissingSchemaAction> </xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> Também poderá ter SqlDataAdapter criar o esquema do <xref:System.Data.DataSet>, incluindo informações da chave primária, antes de preenchê-lo com a utilização de dados `FillSchema`.</xref:System.Data.DataSet> Para obter mais informações, consulte [adicionar restrições existente para um conjunto de dados](~/add/includes/ajax-current-ext-md.md).       SqlDataAdapter é utilizado em conjunto com <xref:System.Data.SqlClient.SqlConnection>e <xref:System.Data.SqlClient.SqlCommand>para aumentar o desempenho ao ligar a uma base de dados do SQL Server.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlConnection>      > [!NOTE] > Se estiver a utilizar procedimentos armazenados do SQL Server para editar ou eliminar dados utilizando um `DataAdapter`, certifique-se de que não utilize SET NOCOUNT ON na definição do procedimento armazenado. Isto faz com que a contagem de afetado pelas linhas devolvida ser zero, o qual o `DataAdapter` interpreta como um conflito de concorrência. Neste caso, um <xref:System.Data.DBConcurrencyException>será emitida.</xref:System.Data.DBConcurrencyException>       O SqlDataAdapter também inclui o <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, e <xref:System.Data.Common.DataAdapter.TableMappings%2A>Propriedades para facilitar o carregamento e a atualização de dados.</xref:System.Data.Common.DataAdapter.TableMappings%2A> </xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A> </xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> </xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A> </xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>       Quando é criada uma instância de SqlDataAdapter, as propriedades de leitura/escrita são definidas para valores iniciais. Para obter uma lista destes valores, consulte o construtor de SqlDataAdapter.       O <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A>, e <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>genérico modelos que são automaticamente preenchida com valores individuais de cada linha modificada através do mecanismo de parâmetros.</xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A> </xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> </xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>       Para cada coluna que propagam à origem de dados no <xref:System.Data.Common.DbDataAdapter.Update%2A>, deve ser adicionado um parâmetro para o `InsertCommand`, `UpdateCommand`, ou `DeleteCommand`.</xref:System.Data.Common.DbDataAdapter.Update%2A> O <xref:System.Data.Common.DbParameter.SourceColumn%2A>propriedade o <xref:System.Data.Common.DbParameter>objecto deve ser definido como o nome da coluna.</xref:System.Data.Common.DbParameter> </xref:System.Data.Common.DbParameter.SourceColumn%2A> Esta definição indica que o valor do parâmetro não está definido manualmente, mas é obtido a partir da coluna específica na linha atualmente processada.      > [!NOTE] > Um <xref:System.InvalidOperationException>ocorrerá se o <xref:System.Data.Common.DbDataAdapter.Fill%2A>método for chamado e a tabela contém um tipo definido pelo utilizador que não está disponível no computador cliente.</xref:System.Data.Common.DbDataAdapter.Fill%2A> </xref:System.InvalidOperationException> Para obter mais informações, consulte [criar e tipos de Using User-Defined](http://go.microsoft.com/fwlink/?LinkId=139492) no SQL Server Books Online."
  example:
  - "The following example uses the <xref:System.Data.SqlClient.SqlCommand>, SqlDataAdapter, and <xref:System.Data.SqlClient.SqlConnection> to select records from a database and populate a <xref:System.Data.DataSet> with the selected rows. The filled <xref:System.Data.DataSet> is then returned. To accomplish this, the method is passed an initialized <xref:System.Data.DataSet>, a connection string, and a query string that is a Transact-SQL SELECT statement.  \n  \n [!code-vb[Classic WebData SqlDataAdapter Example#1](~/add/codesnippet/visualbasic/t-system.data.sqlclient._14_1.vb)]\n [!code-cs[Classic WebData SqlDataAdapter Example#1](~/add/codesnippet/csharp/t-system.data.sqlclient._14_1.cs)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("RowUpdated")]

      [System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.SqlDataAdapterDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.SqlDataAdapterToolboxItem, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      public sealed class SqlDataAdapter : System.Data.Common.DbDataAdapter, ICloneable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DataAdapter
  - System.Data.Common.DbDataAdapter
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DataAdapter.AcceptChangesDuringFill
  - System.Data.Common.DataAdapter.AcceptChangesDuringUpdate
  - System.Data.Common.DataAdapter.CloneInternals
  - System.Data.Common.DataAdapter.ContinueUpdateOnError
  - System.Data.Common.DataAdapter.CreateTableMappings
  - System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)
  - System.Data.Common.DataAdapter.FillError
  - System.Data.Common.DataAdapter.FillLoadOption
  - System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.HasTableMappings
  - System.Data.Common.DataAdapter.MissingMappingAction
  - System.Data.Common.DataAdapter.MissingSchemaAction
  - System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)
  - System.Data.Common.DataAdapter.ResetFillLoadOption
  - System.Data.Common.DataAdapter.ReturnProviderSpecificTypes
  - System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill
  - System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption
  - System.Data.Common.DataAdapter.ShouldSerializeTableMappings
  - System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings
  - System.Data.Common.DataAdapter.TableMappings
  - System.Data.Common.DbDataAdapter.DefaultSourceTableName
  - System.Data.Common.DbDataAdapter.Dispose(System.Boolean)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])
  - System.Data.Common.DbDataAdapter.FillCommandBehavior
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.GetFillParameters
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.#ctor
  id: '#ctor'
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: SqlDataAdapter()
  nameWithType: SqlDataAdapter.SqlDataAdapter()
  fullName: System.Data.SqlClient.SqlDataAdapter.SqlDataAdapter()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.SqlClient.SqlDataAdapter&quot;> </xref> classe."
  remarks: "Quando uma instância de <xref:System.Data.SqlClient.SqlDataAdapter>é criada, as seguintes propriedades forem definidas para os seguintes valores iniciais de leitura/escrita.</xref:System.Data.SqlClient.SqlDataAdapter>      | Propriedades | Valor inicial |   |----------------|-------------------|   | <xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>| `MissingMappingAction.Passthrough`|   | <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>| `MissingSchemaAction.Add`|       Pode alterar o valor de qualquer uma destas propriedades através de uma chamada para a propriedade separada.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData SqlDataAdapter.SqlDataAdapter Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._37_1.vb)]\n [!code-cs[Classic WebData SqlDataAdapter.SqlDataAdapter Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._37_1.cs)]"
  syntax:
    content: public SqlDataAdapter ();
    parameters: []
  overload: System.Data.SqlClient.SqlDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.#ctor(System.Data.SqlClient.SqlCommand)
  id: '#ctor(System.Data.SqlClient.SqlCommand)'
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: SqlDataAdapter(SqlCommand)
  nameWithType: SqlDataAdapter.SqlDataAdapter(SqlCommand)
  fullName: System.Data.SqlClient.SqlDataAdapter.SqlDataAdapter(SqlCommand)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.SqlClient.SqlDataAdapter&quot;> </xref> classe com especificado <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> como o <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*>propriedade.</xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*>"
  remarks: "Esta implementação do <xref:System.Data.SqlClient.SqlDataAdapter>conjuntos de construtor de <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>propriedade para o valor especificado no `selectCommand` parâmetro.</xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> </xref:System.Data.SqlClient.SqlDataAdapter>       Quando uma instância de <xref:System.Data.SqlClient.SqlDataAdapter>é criada, as seguintes propriedades forem definidas para os seguintes valores iniciais de leitura/escrita.</xref:System.Data.SqlClient.SqlDataAdapter>      | Propriedades | Valor inicial |   |----------------|-------------------|   | <xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>| `MissingMappingAction.Passthrough`|   | <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>| `MissingSchemaAction.Add`|       Pode alterar o valor de qualquer uma destas propriedades através de uma chamada para a propriedade separada.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>       Quando <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>(ou qualquer uma das outras propriedades de comandos) está atribuído para um criado anteriormente <xref:System.Data.SqlClient.SqlCommand>, a <xref:System.Data.SqlClient.SqlCommand>não está a ser clonado.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> O <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>mantém uma referência a criado anteriormente <xref:System.Data.SqlClient.SqlCommand>objeto.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlDataAdapter> and sets some of its properties.  \n  \n [!code-cs[Classic WebData SqlDataAdapter.SqlDataAdapter1 Example#1](~/add/codesnippet/csharp/9d168a15-4587-40fd-a80e-_1.cs)]\n [!code-vb[Classic WebData SqlDataAdapter.SqlDataAdapter1 Example#1](~/add/codesnippet/visualbasic/9d168a15-4587-40fd-a80e-_1.vb)]"
  syntax:
    content: public SqlDataAdapter (System.Data.SqlClient.SqlCommand selectCommand);
    parameters:
    - id: selectCommand
      type: System.Data.SqlClient.SqlCommand
      description: "A <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> que é um procedimento armazenado ou uma instrução Transact-SQL SELECT e é definido como o <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*>propriedade o <xref href=&quot;System.Data.SqlClient.SqlDataAdapter&quot;> </xref>.</xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*>"
  overload: System.Data.SqlClient.SqlDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.Data.SqlClient.SqlConnection)
  id: '#ctor(System.String,System.Data.SqlClient.SqlConnection)'
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: SqlDataAdapter(String,SqlConnection)
  nameWithType: SqlDataAdapter.SqlDataAdapter(String,SqlConnection)
  fullName: System.Data.SqlClient.SqlDataAdapter.SqlDataAdapter(String,SqlConnection)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.SqlClient.SqlDataAdapter&quot;> </xref> classe com um <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*>e um <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> objeto.</xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*>"
  remarks: "Esta implementação do <xref:System.Data.SqlClient.SqlDataAdapter>abre e fecha um <xref:System.Data.SqlClient.SqlConnection>se ainda não estiver aberto.</xref:System.Data.SqlClient.SqlConnection> </xref:System.Data.SqlClient.SqlDataAdapter> Isto pode ser útil numa aplicação que tem de chamar o <xref:System.Data.Common.DbDataAdapter.Fill%2A>método para dois ou mais <xref:System.Data.SqlClient.SqlDataAdapter>objetos.</xref:System.Data.SqlClient.SqlDataAdapter> </xref:System.Data.Common.DbDataAdapter.Fill%2A> Se o <xref:System.Data.SqlClient.SqlConnection>é já aberto, deve chamar explicitamente **fechar** ou **eliminar** para fechar o mesmo.</xref:System.Data.SqlClient.SqlConnection>       Quando uma instância de <xref:System.Data.SqlClient.SqlDataAdapter>é criada, as seguintes propriedades forem definidas para os seguintes valores iniciais de leitura/escrita.</xref:System.Data.SqlClient.SqlDataAdapter>      | Propriedades | Valor inicial |   |----------------|-------------------|   | <xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>| `MissingMappingAction.Passthrough`|   | <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>| `MissingSchemaAction.Add`|       Pode alterar o valor de qualquer uma destas propriedades através de uma chamada para a propriedade separada.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData SqlDataAdapter.SqlDataAdapter3 Example#1](~/add/codesnippet/visualbasic/fa8f1b27-cd12-4c35-bbde-_1.vb)]\n [!code-cs[Classic WebData SqlDataAdapter.SqlDataAdapter3 Example#1](~/add/codesnippet/csharp/fa8f1b27-cd12-4c35-bbde-_1.cs)]"
  syntax:
    content: public SqlDataAdapter (string selectCommandText, System.Data.SqlClient.SqlConnection selectConnection);
    parameters:
    - id: selectCommandText
      type: System.String
      description: "A <xref:System.String>que é uma instrução Transact-SQL SELECT ou o procedimento armazenado para ser utilizado pelo <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*>propriedade o <xref href=&quot;System.Data.SqlClient.SqlDataAdapter&quot;> </xref>.</xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*> </xref:System.String>"
    - id: selectConnection
      type: System.Data.SqlClient.SqlConnection
      description: "A <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> que representa a ligação. Se não utilizar a cadeia de ligação <xref uid=&quot;langword_csharp_Integrated Security = true&quot; name=&quot;Integrated Security = true&quot; href=&quot;&quot;> </xref>, pode utilizar <xref href=&quot;System.Data.SqlClient.SqlCredential&quot;> </xref> para passar o ID de utilizador e palavra-passe de forma mais segura do que ao especificar o ID de utilizador e palavra-passe como texto na cadeia de ligação."
  overload: System.Data.SqlClient.SqlDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: SqlDataAdapter(String,String)
  nameWithType: SqlDataAdapter.SqlDataAdapter(String,String)
  fullName: System.Data.SqlClient.SqlDataAdapter.SqlDataAdapter(String,String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.SqlClient.SqlDataAdapter&quot;> </xref> classe com um <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*>e uma cadeia de ligação.</xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*>"
  remarks: "Esta sobrecarga do <xref:System.Data.SqlClient.SqlDataAdapter>construtor utiliza o `selectCommandText` parâmetro para definir o <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>propriedade.</xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> </xref:System.Data.SqlClient.SqlDataAdapter> O <xref:System.Data.SqlClient.SqlDataAdapter>irá criar e manter a ligação criada com o `selectConnectionString` parâmetro.</xref:System.Data.SqlClient.SqlDataAdapter>       Quando uma instância de <xref:System.Data.SqlClient.SqlDataAdapter>é criada, as seguintes propriedades forem definidas para os seguintes valores iniciais de leitura/escrita.</xref:System.Data.SqlClient.SqlDataAdapter>      | Propriedades | Valor inicial |   |----------------|-------------------|   | <xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>| `MissingMappingAction.Passthrough`|   | <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>| `MissingSchemaAction.Add`|       Pode alterar o valor de qualquer uma destas propriedades através de uma chamada para a propriedade separada.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData SqlDataAdapter.SqlDataAdapter2 Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._6_1.vb)]\n [!code-cs[Classic WebData SqlDataAdapter.SqlDataAdapter2 Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._6_1.cs)]"
  syntax:
    content: public SqlDataAdapter (string selectCommandText, string selectConnectionString);
    parameters:
    - id: selectCommandText
      type: System.String
      description: "A <xref:System.String>que é uma instrução Transact-SQL SELECT ou o procedimento armazenado para ser utilizado pelo <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*>propriedade o <xref href=&quot;System.Data.SqlClient.SqlDataAdapter&quot;> </xref>.</xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*> </xref:System.String>"
    - id: selectConnectionString
      type: System.String
      description: "A cadeia de ligação. Se não utilizar a cadeia de ligação <xref uid=&quot;langword_csharp_Integrated Security = true&quot; name=&quot;Integrated Security = true&quot; href=&quot;&quot;> </xref>, pode utilizar &lt;xref:System.Data.SqlClient.SqlDataAdapter.%23ctor%2A&gt; e <xref href=&quot;System.Data.SqlClient.SqlCredential&quot;> </xref> para passar o ID de utilizador e palavra-passe de forma mais segura do que ao especificar o ID de utilizador e palavra-passe como texto na cadeia de ligação."
  overload: System.Data.SqlClient.SqlDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.AddToBatch(System.Data.IDbCommand)
  id: AddToBatch(System.Data.IDbCommand)
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: AddToBatch(IDbCommand)
  nameWithType: SqlDataAdapter.AddToBatch(IDbCommand)
  fullName: System.Data.SqlClient.SqlDataAdapter.AddToBatch(IDbCommand)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override int AddToBatch (System.Data.IDbCommand command);
    parameters:
    - id: command
      type: System.Data.IDbCommand
      description: "A adicionar."
    return:
      type: System.Int32
      description: "A adicionar."
  overload: System.Data.SqlClient.SqlDataAdapter.AddToBatch*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.ClearBatch
  id: ClearBatch
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: ClearBatch()
  nameWithType: SqlDataAdapter.ClearBatch()
  fullName: System.Data.SqlClient.SqlDataAdapter.ClearBatch()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override void ClearBatch ();
    parameters: []
  overload: System.Data.SqlClient.SqlDataAdapter.ClearBatch*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  id: CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: SqlDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);
    parameters:
    - id: dataRow
      type: System.Data.DataRow
      description: "A adicionar."
    - id: command
      type: System.Data.IDbCommand
      description: "A adicionar."
    - id: statementType
      type: System.Data.StatementType
      description: "A adicionar."
    - id: tableMapping
      type: System.Data.Common.DataTableMapping
      description: "A adicionar."
    return:
      type: System.Data.Common.RowUpdatedEventArgs
      description: "A adicionar."
  overload: System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatedEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  id: CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: SqlDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);
    parameters:
    - id: dataRow
      type: System.Data.DataRow
      description: "A adicionar."
    - id: command
      type: System.Data.IDbCommand
      description: "A adicionar."
    - id: statementType
      type: System.Data.StatementType
      description: "A adicionar."
    - id: tableMapping
      type: System.Data.Common.DataTableMapping
      description: "A adicionar."
    return:
      type: System.Data.Common.RowUpdatingEventArgs
      description: "A adicionar."
  overload: System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatingEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.DeleteCommand
  id: DeleteCommand
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: DeleteCommand
  nameWithType: SqlDataAdapter.DeleteCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.DeleteCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém ou define uma instrução Transact-SQL ou o procedimento armazenado para eliminar registos de conjunto de dados."
  remarks: "Durante a <xref:System.Data.Common.DbDataAdapter.Update%2A>, se esta propriedade não está definida e informações da chave primária estão presentes na <xref:System.Data.DataSet>DeleteCommand pode ser gerada automaticamente se definir a <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>propriedade e utilize <xref:System.Data.SqlClient.SqlCommandBuilder>.</xref:System.Data.SqlClient.SqlCommandBuilder> </xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> </xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A> Em seguida, os comandos adicionais que o se não tiver definido foram gerados por <xref:System.Data.SqlClient.SqlCommandBuilder>.</xref:System.Data.SqlClient.SqlCommandBuilder> Esta lógica geração necessita de informações de coluna chave estar presente no <xref:System.Data.DataSet>.</xref:System.Data.DataSet> Para obter mais informações, consulte [gerar comandos com CommandBuilders](~/add/includes/ajax-current-ext-md.md).       Quando DeleteCommand é atribuído a um criado anteriormente <xref:System.Data.SqlClient.SqlCommand>, a <xref:System.Data.SqlClient.SqlCommand>não está a ser clonado.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand> DeleteCommand mantém uma referência a criado anteriormente <xref:System.Data.SqlClient.SqlCommand>objeto.</xref:System.Data.SqlClient.SqlCommand>       Para cada coluna que propagam à origem de dados no <xref:System.Data.Common.DbDataAdapter.Update%2A>, deve ser adicionado um parâmetro para o `InsertCommand`, `UpdateCommand`, ou `DeleteCommand`.</xref:System.Data.Common.DbDataAdapter.Update%2A> O `SourceColumn` propriedade do parâmetro deve ser definida para o nome da coluna. Isto indica que o valor do parâmetro não está definido manualmente, mas é obtido a partir da coluna específica na linha atualmente processada."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlDataAdapter> and sets the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, and DeleteCommand properties. It assumes you have already created a <xref:System.Data.SqlClient.SqlConnection> object.  \n  \n [!code-vb[DataWorks SqlDataAdapter.Command#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._16_1.vb)]\n [!code-cs[DataWorks SqlDataAdapter.Command#1](~/add/codesnippet/csharp/p-system.data.sqlclient._16_1.cs)]"
  syntax:
    content: public System.Data.SqlClient.SqlCommand DeleteCommand { get; set; }
    return:
      type: System.Data.SqlClient.SqlCommand
      description: "A <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> utilizada durante <xref:System.Data.Common.DbDataAdapter.Update*>Eliminar registos na base de dados que correspondem a eliminar linhas no <xref href=&quot;System.Data.DataSet&quot;> </xref>.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.SqlClient.SqlDataAdapter.DeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.ExecuteBatch
  id: ExecuteBatch
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: ExecuteBatch()
  nameWithType: SqlDataAdapter.ExecuteBatch()
  fullName: System.Data.SqlClient.SqlDataAdapter.ExecuteBatch()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override int ExecuteBatch ();
    parameters: []
    return:
      type: System.Int32
      description: "A adicionar."
  overload: System.Data.SqlClient.SqlDataAdapter.ExecuteBatch*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.GetBatchedParameter(System.Int32,System.Int32)
  id: GetBatchedParameter(System.Int32,System.Int32)
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: GetBatchedParameter(Int32,Int32)
  nameWithType: SqlDataAdapter.GetBatchedParameter(Int32,Int32)
  fullName: System.Data.SqlClient.SqlDataAdapter.GetBatchedParameter(Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.IDataParameter GetBatchedParameter (int commandIdentifier, int parameterIndex);
    parameters:
    - id: commandIdentifier
      type: System.Int32
      description: "A adicionar."
    - id: parameterIndex
      type: System.Int32
      description: "A adicionar."
    return:
      type: System.Data.IDataParameter
      description: "A adicionar."
  overload: System.Data.SqlClient.SqlDataAdapter.GetBatchedParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)
  id: GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: GetBatchedRecordsAffected(Int32,Int32,Exception)
  nameWithType: SqlDataAdapter.GetBatchedRecordsAffected(Int32,Int32,Exception)
  fullName: System.Data.SqlClient.SqlDataAdapter.GetBatchedRecordsAffected(Int32,Int32,Exception)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override bool GetBatchedRecordsAffected (int commandIdentifier, out int recordsAffected, out Exception error);
    parameters:
    - id: commandIdentifier
      type: System.Int32
      description: "A adicionar."
    - id: recordsAffected
      type: System.Int32
      description: "A adicionar."
    - id: error
      type: System.Exception
      description: "A adicionar."
    return:
      type: System.Boolean
      description: "A adicionar."
  overload: System.Data.SqlClient.SqlDataAdapter.GetBatchedRecordsAffected*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.InitializeBatching
  id: InitializeBatching
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: InitializeBatching()
  nameWithType: SqlDataAdapter.InitializeBatching()
  fullName: System.Data.SqlClient.SqlDataAdapter.InitializeBatching()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override void InitializeBatching ();
    parameters: []
  overload: System.Data.SqlClient.SqlDataAdapter.InitializeBatching*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.InsertCommand
  id: InsertCommand
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: InsertCommand
  nameWithType: SqlDataAdapter.InsertCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.InsertCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém ou define uma instrução Transact-SQL ou o procedimento armazenado para inserir novos registos na origem de dados."
  remarks: "Durante a <xref:System.Data.Common.DbDataAdapter.Update%2A>, se esta propriedade não está definida e informações da chave primária estão presentes na <xref:System.Data.DataSet>InsertCommand pode ser gerado automaticamente se definir a <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>propriedade e utilize <xref:System.Data.SqlClient.SqlCommandBuilder>.</xref:System.Data.SqlClient.SqlCommandBuilder> </xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> </xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A> Em seguida, os comandos adicionais que o se não tiver definido foram gerados por <xref:System.Data.SqlClient.SqlCommandBuilder>.</xref:System.Data.SqlClient.SqlCommandBuilder> Esta lógica geração necessita de informações de coluna chave estar presente no <xref:System.Data.DataSet>.</xref:System.Data.DataSet> Para obter mais informações, consulte [gerar comandos com CommandBuilders](~/add/includes/ajax-current-ext-md.md).       Quando é atribuído InsertCommand para um criado anteriormente <xref:System.Data.SqlClient.SqlCommand>, a <xref:System.Data.SqlClient.SqlCommand>não está a ser clonado.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand> O InsertCommand mantém uma referência a criado anteriormente <xref:System.Data.SqlClient.SqlCommand>objeto.</xref:System.Data.SqlClient.SqlCommand>       Se a execução deste comando devolve as linhas, estas linhas podem ser adicionadas ao <xref:System.Data.DataSet>, dependendo de como definir o **UpdatedRowSource** propriedade o <xref:System.Data.SqlClient.SqlCommand>objeto.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.DataSet>       Para cada coluna que propagam à origem de dados no <xref:System.Data.Common.DbDataAdapter.Update%2A>, um parâmetro deve ser adicionado à `InsertCommand`, `UpdateCommand`, ou `DeleteCommand`.</xref:System.Data.Common.DbDataAdapter.Update%2A> O `SourceColumn` propriedade do parâmetro deve ser definida para o nome da coluna. Isto indica que o valor do parâmetro não está definido manualmente, mas é obtido a partir da coluna específica na linha atualmente processada."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlDataAdapter> and sets the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>, InsertCommand, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, and <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> properties. It assumes you have already created a <xref:System.Data.SqlClient.SqlConnection> object.  \n  \n [!code-vb[DataWorks SqlDataAdapter.Command#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._33_1.vb)]\n [!code-cs[DataWorks SqlDataAdapter.Command#1](~/add/codesnippet/csharp/p-system.data.sqlclient._33_1.cs)]"
  syntax:
    content: public System.Data.SqlClient.SqlCommand InsertCommand { get; set; }
    return:
      type: System.Data.SqlClient.SqlCommand
      description: "A <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> utilizada durante <xref:System.Data.Common.DbDataAdapter.Update*>ao inserir registos na base de dados que correspondem às novas linhas no <xref href=&quot;System.Data.DataSet&quot;> </xref>.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.SqlClient.SqlDataAdapter.InsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  id: OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: OnRowUpdated(RowUpdatedEventArgs)
  nameWithType: SqlDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
  fullName: System.Data.SqlClient.SqlDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);
    parameters:
    - id: value
      type: System.Data.Common.RowUpdatedEventArgs
      description: "A adicionar."
  overload: System.Data.SqlClient.SqlDataAdapter.OnRowUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  id: OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: OnRowUpdating(RowUpdatingEventArgs)
  nameWithType: SqlDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
  fullName: System.Data.SqlClient.SqlDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);
    parameters:
    - id: value
      type: System.Data.Common.RowUpdatingEventArgs
      description: "A adicionar."
  overload: System.Data.SqlClient.SqlDataAdapter.OnRowUpdating*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.RowUpdated
  id: RowUpdated
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: RowUpdated
  nameWithType: SqlDataAdapter.RowUpdated
  fullName: System.Data.SqlClient.SqlDataAdapter.RowUpdated
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Ocorre durante <xref:System.Data.Common.DbDataAdapter.Update*>depois de um comando é executado contra a origem de dados.</xref:System.Data.Common.DbDataAdapter.Update*> A tentativa de atualização é efetuada para que o evento é acionado."
  remarks: "Quando utilizar <xref:System.Data.Common.DbDataAdapter.Update%2A>, existem dois eventos que ocorrem por linha de dados atualizada.</xref:System.Data.Common.DbDataAdapter.Update%2A> A ordem de execução é o seguinte: 1.  Os valores existentes no <xref:System.Data.DataRow>são movidas para os valores de parâmetros.</xref:System.Data.DataRow>      2.  O <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>o evento é gerado.</xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>      3.  Executa o comando.      4.  Se o comando está definido como `FirstReturnedRecord`, o primeiro devolveu o resultado é colocado na <xref:System.Data.DataRow>.</xref:System.Data.DataRow>      5.  Se existirem parâmetros de saída, estes são colocados em <xref:System.Data.DataRow>.</xref:System.Data.DataRow>      6.  O <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>o evento é gerado.</xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>      7.  <xref:System.Data.DataRow.AcceptChanges%2A>é chamado.</xref:System.Data.DataRow.AcceptChanges%2A>"
  example:
  - "The following example shows how to use both the <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> and RowUpdated events.  \n  \n The <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> event returns this output:  \n  \n event args: (command=System.Data.SqlClient.SqlCommand commandType=2 status=0)  \n  \n The RowUpdated event returns this output:  \n  \n event args: (command=System.Data.SqlClient.SqlCommand commandType=2 recordsAffected=1 row=System.Data.DataRow[37] status=0)  \n  \n [!code-vb[Classic WebData SqlDataAdapter.RowUpdated Example#1](~/add/codesnippet/visualbasic/e-system.data.sqlclient._0_1.vb)]\n [!code-cs[Classic WebData SqlDataAdapter.RowUpdated Example#1](~/add/codesnippet/csharp/e-system.data.sqlclient._0_1.cs)]"
  syntax:
    content: public event System.Data.SqlClient.SqlRowUpdatedEventHandler RowUpdated;
    return:
      type: System.Data.SqlClient.SqlRowUpdatedEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.RowUpdating
  id: RowUpdating
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: RowUpdating
  nameWithType: SqlDataAdapter.RowUpdating
  fullName: System.Data.SqlClient.SqlDataAdapter.RowUpdating
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Ocorre durante <xref:System.Data.Common.DbDataAdapter.Update*>antes de ser executado um comando contra a origem de dados.</xref:System.Data.Common.DbDataAdapter.Update*> A tentativa de atualização é efetuada para que o evento é acionado."
  remarks: "Quando utilizar <xref:System.Data.Common.DbDataAdapter.Update%2A>, existem dois eventos que ocorrem por linha de dados atualizada.</xref:System.Data.Common.DbDataAdapter.Update%2A> A ordem de execução é o seguinte: 1.  Os valores existentes no <xref:System.Data.DataRow>são movidas para os valores de parâmetros.</xref:System.Data.DataRow>      2.  O <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>o evento é gerado.</xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>      3.  Executa o comando.      4.  Se o comando está definido como `FirstReturnedRecord`, o primeiro devolveu o resultado é colocado na <xref:System.Data.DataRow>.</xref:System.Data.DataRow>      5.  Se existirem parâmetros de saída, estes são colocados em <xref:System.Data.DataRow>.</xref:System.Data.DataRow>      6.  O <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>o evento é gerado.</xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>      7.  <xref:System.Data.DataRow.AcceptChanges%2A>é chamado.</xref:System.Data.DataRow.AcceptChanges%2A>"
  example:
  - "The following example shows how to use both the RowUpdating and <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdated> events.  \n  \n The RowUpdating event returns this output:  \n  \n event args: (command=System.Data.SqlClient.SqlCommand commandType=2 status=0)  \n  \n The <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdated> event returns this output:  \n  \n event args: (command=System.Data.SqlClient.SqlCommand commandType=2 recordsAffected=1 row=System.Data.DataRow[37] status=0)  \n  \n [!code-vb[Classic WebData SqlDataAdapter.RowUpdated Example#1](~/add/codesnippet/visualbasic/e-system.data.sqlclient._1_1.vb)]\n [!code-cs[Classic WebData SqlDataAdapter.RowUpdated Example#1](~/add/codesnippet/csharp/e-system.data.sqlclient._1_1.cs)]"
  syntax:
    content: public event System.Data.SqlClient.SqlRowUpdatingEventHandler RowUpdating;
    return:
      type: System.Data.SqlClient.SqlRowUpdatingEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.SelectCommand
  id: SelectCommand
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: SelectCommand
  nameWithType: SqlDataAdapter.SelectCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.SelectCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém ou define uma instrução Transact-SQL ou o procedimento armazenado utilizado para selecionar registos na origem de dados."
  remarks: "Quando é atribuído SelectCommand para um criado anteriormente <xref:System.Data.SqlClient.SqlCommand>, a <xref:System.Data.SqlClient.SqlCommand>não está a ser clonado.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand> SelectCommand mantém uma referência a criado anteriormente <xref:System.Data.SqlClient.SqlCommand>objeto.</xref:System.Data.SqlClient.SqlCommand>       Se SelectCommand não devolver quaisquer linhas, não existem tabelas são adicionadas para o <xref:System.Data.DataSet>, e não a exceção é acionada.</xref:System.Data.DataSet>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlDataAdapter> and sets the SelectCommand, <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, and <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> properties. It assumes you have already created a <xref:System.Data.SqlClient.SqlConnection> object.  \n  \n [!code-vb[DataWorks SqlDataAdapter.Command#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._23_1.vb)]\n [!code-cs[DataWorks SqlDataAdapter.Command#1](~/add/codesnippet/csharp/p-system.data.sqlclient._23_1.cs)]"
  syntax:
    content: public System.Data.SqlClient.SqlCommand SelectCommand { get; set; }
    return:
      type: System.Data.SqlClient.SqlCommand
      description: "A <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> utilizada durante <xref:System.Data.Common.DbDataAdapter.Fill*>para selecionar registos da base de dados para o posicionamento no <xref href=&quot;System.Data.DataSet&quot;> </xref>.</xref:System.Data.Common.DbDataAdapter.Fill*>"
  overload: System.Data.SqlClient.SqlDataAdapter.SelectCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#DeleteCommand
  id: System#Data#IDbDataAdapter#DeleteCommand
  isEii: true
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.DeleteCommand
  nameWithType: SqlDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Para obter uma descrição deste membro, consulte <xref:System.Data.IDbDataAdapter.DeleteCommand*>.</xref:System.Data.IDbDataAdapter.DeleteCommand*>"
  remarks: "Este membro é uma implementação de membro de interface explícita. Pode ser utilizado apenas quando o <xref:System.Data.SqlClient.SqlDataAdapter>instância é convertida para um <xref:System.Data.IDbDataAdapter>interface.</xref:System.Data.IDbDataAdapter> </xref:System.Data.SqlClient.SqlDataAdapter>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "Um <xref href=&quot;System.Data.IDbCommand&quot;> </xref> que é utilizada durante <xref:System.Data.Common.DbDataAdapter.Update*>para eliminar registos na origem de dados para linhas eliminadas no conjunto de dados.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#DeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#InsertCommand
  id: System#Data#IDbDataAdapter#InsertCommand
  isEii: true
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.InsertCommand
  nameWithType: SqlDataAdapter.System.Data.IDbDataAdapter.InsertCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.System.Data.IDbDataAdapter.InsertCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Para obter uma descrição deste membro, consulte <xref:System.Data.IDbDataAdapter.InsertCommand*>.</xref:System.Data.IDbDataAdapter.InsertCommand*>"
  remarks: "Este membro é uma implementação de membro de interface explícita. Pode ser utilizado apenas quando o <xref:System.Data.SqlClient.SqlDataAdapter>instância é convertida para um <xref:System.Data.IDbDataAdapter>interface.</xref:System.Data.IDbDataAdapter> </xref:System.Data.SqlClient.SqlDataAdapter>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "Um <xref href=&quot;System.Data.IDbCommand&quot;> </xref> que é utilizada durante <xref:System.Data.Common.DbDataAdapter.Update*>ao inserir registos na origem de dados para novas linhas no conjunto de dados.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#InsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#SelectCommand
  id: System#Data#IDbDataAdapter#SelectCommand
  isEii: true
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.SelectCommand
  nameWithType: SqlDataAdapter.System.Data.IDbDataAdapter.SelectCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.System.Data.IDbDataAdapter.SelectCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Para obter uma descrição deste membro, consulte <xref:System.Data.IDbDataAdapter.SelectCommand*>.</xref:System.Data.IDbDataAdapter.SelectCommand*>"
  remarks: "Este membro é uma implementação de membro de interface explícita. Pode ser utilizado apenas quando o <xref:System.Data.SqlClient.SqlDataAdapter>instância é convertida para um <xref:System.Data.IDbDataAdapter>interface.</xref:System.Data.IDbDataAdapter> </xref:System.Data.SqlClient.SqlDataAdapter>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "Um <xref href=&quot;System.Data.IDbCommand&quot;> </xref> que é utilizada durante <xref:System.Data.Common.DbDataAdapter.Update*>para selecionar registos a partir da origem de dados para o posicionamento no conjunto de dados.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#SelectCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#UpdateCommand
  id: System#Data#IDbDataAdapter#UpdateCommand
  isEii: true
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.UpdateCommand
  nameWithType: SqlDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Para obter uma descrição deste membro, consulte <xref:System.Data.IDbDataAdapter.UpdateCommand*>.</xref:System.Data.IDbDataAdapter.UpdateCommand*>"
  remarks: "Este membro é uma implementação de membro de interface explícita. Pode ser utilizado apenas quando o <xref:System.Data.SqlClient.SqlDataAdapter>instância é convertida para um <xref:System.Data.IDbDataAdapter>interface.</xref:System.Data.IDbDataAdapter> </xref:System.Data.SqlClient.SqlDataAdapter>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "Um <xref:System.Data.IdbCommand>que é utilizada durante <xref:System.Data.Common.DbDataAdapter.Update*>para atualizar os registos da origem de dados para linhas modificadas no conjunto de dados.</xref:System.Data.Common.DbDataAdapter.Update*> </xref:System.Data.IdbCommand>"
  overload: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#UpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: SqlDataAdapter.System.ICloneable.Clone()
  fullName: System.Data.SqlClient.SqlDataAdapter.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Para obter uma descrição deste membro, consulte <xref:System.ICloneable.Clone*>.</xref:System.ICloneable.Clone*>"
  remarks: "Este membro é uma implementação de membro de interface explícita. Pode ser utilizado apenas quando o <xref:System.Data.SqlClient.SqlDataAdapter>instância é convertida para um <xref:System.ICloneable>interface.</xref:System.ICloneable> </xref:System.Data.SqlClient.SqlDataAdapter>"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Um novo objeto que é uma cópia da instância atual."
  overload: System.Data.SqlClient.SqlDataAdapter.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.TerminateBatching
  id: TerminateBatching
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: TerminateBatching()
  nameWithType: SqlDataAdapter.TerminateBatching()
  fullName: System.Data.SqlClient.SqlDataAdapter.TerminateBatching()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override void TerminateBatching ();
    parameters: []
  overload: System.Data.SqlClient.SqlDataAdapter.TerminateBatching*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize
  id: UpdateBatchSize
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: UpdateBatchSize
  nameWithType: SqlDataAdapter.UpdateBatchSize
  fullName: System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém ou define o número de linhas que são processados em cada round-trip para o servidor."
  remarks: "Obtém ou define um valor que ativa ou desativa o suporte de processamento em lote e especifica o número de comandos que podem ser executadas num batch.       Utilize a propriedade de UpdateBatchSize para atualizar uma origem de dados com alterações de <xref:System.Data.DataSet>.</xref:System.Data.DataSet> Isto pode aumentar o desempenho da aplicação, reduzindo o número de ida e volta ao servidor.       Executar um lote extremamente grande pode diminuir o desempenho. Por conseguinte, deverá testar para a definição de tamanho de lote ideal antes de implementar a aplicação.       Um <xref:System.ArgumentOutOfRangeException>é emitida se o valor estiver definido como um número inferior a zero.</xref:System.ArgumentOutOfRangeException>"
  syntax:
    content: public override int UpdateBatchSize { get; set; }
    return:
      type: System.Int32
      description: "O número de linhas a processar por lote.       <table><thead><tr><th> O valor é       </th><th> Efeito       </th></tr></thead><tbody><tr><td> 0       </td><td> Não há nenhum limite no tamanho de lote...       </td></tr><tr><td> 1       </td><td> Desativa a atualização do batch.       </td></tr><tr><td> &gt;1       </td><td> As alterações são enviadas através de lotes de UpdateBatchSize operações de cada vez.       </td></tr></tbody></table>       Quando definir esta opção para um valor diferente de 1, todos os comandos associado a <xref href=&quot;System.Data.SqlClient.SqlDataAdapter&quot;> </xref> tem de ter os respetivos **UpdatedRowSource** propriedade definida como <xref uid=&quot;langword_csharp_None&quot; name=&quot;None&quot; href=&quot;&quot;> </xref> ou <xref uid=&quot;langword_csharp_OutputParameters&quot; name=&quot;OutputParameters&quot; href=&quot;&quot;> </xref>. É emitida uma exceção, caso contrário."
  overload: System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.UpdateCommand
  id: UpdateCommand
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: UpdateCommand
  nameWithType: SqlDataAdapter.UpdateCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.UpdateCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Obtém ou define uma instrução Transact-SQL ou o procedimento armazenado utilizado para atualizar os registos da origem de dados."
  remarks: "Durante a <xref:System.Data.Common.DbDataAdapter.Update%2A>, se esta propriedade não está definida e informações da chave primária estão presentes na <xref:System.Data.DataSet>UpdateCommand pode ser gerada automaticamente se definir a <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>propriedade e utilize <xref:System.Data.SqlClient.SqlCommandBuilder>.</xref:System.Data.SqlClient.SqlCommandBuilder> </xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> </xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A> Em seguida, os comandos adicionais que o se não tiver definido foram gerados por <xref:System.Data.SqlClient.SqlCommandBuilder>.</xref:System.Data.SqlClient.SqlCommandBuilder> Esta lógica geração necessita de informações de coluna chave estar presente no <xref:System.Data.DataSet>.</xref:System.Data.DataSet> Para obter mais informações, consulte [gerar comandos com CommandBuilders](~/add/includes/ajax-current-ext-md.md).       Quando UpdateCommand é atribuído a um criado anteriormente <xref:System.Data.SqlClient.SqlCommand>, a <xref:System.Data.SqlClient.SqlCommand>não está a ser clonado.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand> UpdateCommand mantém uma referência a criado anteriormente <xref:System.Data.SqlClient.SqlCommand>objeto.</xref:System.Data.SqlClient.SqlCommand>      > [!NOTE] > Se a execução deste comando devolve as linhas, as linhas atualizadas podem ser intercaladas com o <xref:System.Data.DataSet>, dependendo de como definir o **UpdatedRowSource** propriedade o <xref:System.Data.SqlClient.SqlCommand>objeto.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.DataSet>       Para cada coluna que propagam à origem de dados no <xref:System.Data.Common.DbDataAdapter.Update%2A>, um parâmetro deve ser adicionado à `InsertCommand`, `UpdateCommand`, ou `DeleteCommand`.</xref:System.Data.Common.DbDataAdapter.Update%2A>       O `SourceColumn` propriedade do parâmetro deve ser definida para o nome da coluna. Isto indica que o valor do parâmetro não é definir manualmente, mas obtido a partir da coluna específica na linha atualmente processada."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlDataAdapter> and sets the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, UpdateCommand and <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> properties. It assumes you have already created a <xref:System.Data.SqlClient.SqlConnection> object.  \n  \n [!code-vb[DataWorks SqlDataAdapter.Command#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._31_1.vb)]\n [!code-cs[DataWorks SqlDataAdapter.Command#1](~/add/codesnippet/csharp/p-system.data.sqlclient._31_1.cs)]"
  syntax:
    content: public System.Data.SqlClient.SqlCommand UpdateCommand { get; set; }
    return:
      type: System.Data.SqlClient.SqlCommand
      description: "A <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> utilizada durante <xref:System.Data.Common.DbDataAdapter.Update*>atualizar os registos na base de dados que correspondam à modificado linhas o <xref href=&quot;System.Data.DataSet&quot;> </xref>.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.SqlClient.SqlDataAdapter.UpdateCommand*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbDataAdapter
  isExternal: false
  name: System.Data.Common.DbDataAdapter
- uid: System.Data.SqlClient.SqlDataAdapter.#ctor
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: SqlDataAdapter()
  nameWithType: SqlDataAdapter.SqlDataAdapter()
  fullName: System.Data.SqlClient.SqlDataAdapter.SqlDataAdapter()
- uid: System.Data.SqlClient.SqlDataAdapter.#ctor(System.Data.SqlClient.SqlCommand)
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: SqlDataAdapter(SqlCommand)
  nameWithType: SqlDataAdapter.SqlDataAdapter(SqlCommand)
  fullName: System.Data.SqlClient.SqlDataAdapter.SqlDataAdapter(SqlCommand)
- uid: System.Data.SqlClient.SqlCommand
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlCommand
  nameWithType: SqlCommand
  fullName: System.Data.SqlClient.SqlCommand
- uid: System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.Data.SqlClient.SqlConnection)
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: SqlDataAdapter(String,SqlConnection)
  nameWithType: SqlDataAdapter.SqlDataAdapter(String,SqlConnection)
  fullName: System.Data.SqlClient.SqlDataAdapter.SqlDataAdapter(String,SqlConnection)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlClient.SqlConnection
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlConnection
  nameWithType: SqlConnection
  fullName: System.Data.SqlClient.SqlConnection
- uid: System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.String)
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: SqlDataAdapter(String,String)
  nameWithType: SqlDataAdapter.SqlDataAdapter(String,String)
  fullName: System.Data.SqlClient.SqlDataAdapter.SqlDataAdapter(String,String)
- uid: System.Data.SqlClient.SqlDataAdapter.AddToBatch(System.Data.IDbCommand)
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: AddToBatch(IDbCommand)
  nameWithType: SqlDataAdapter.AddToBatch(IDbCommand)
  fullName: System.Data.SqlClient.SqlDataAdapter.AddToBatch(IDbCommand)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.IDbCommand
  parent: System.Data
  isExternal: false
  name: IDbCommand
  nameWithType: IDbCommand
  fullName: System.Data.IDbCommand
- uid: System.Data.SqlClient.SqlDataAdapter.ClearBatch
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: ClearBatch()
  nameWithType: SqlDataAdapter.ClearBatch()
  fullName: System.Data.SqlClient.SqlDataAdapter.ClearBatch()
- uid: System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: SqlDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
- uid: System.Data.Common.RowUpdatedEventArgs
  parent: System.Data.Common
  isExternal: false
  name: RowUpdatedEventArgs
  nameWithType: RowUpdatedEventArgs
  fullName: System.Data.Common.RowUpdatedEventArgs
- uid: System.Data.DataRow
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: System.Data.StatementType
  parent: System.Data
  isExternal: false
  name: StatementType
  nameWithType: StatementType
  fullName: System.Data.StatementType
- uid: System.Data.Common.DataTableMapping
  parent: System.Data.Common
  isExternal: false
  name: DataTableMapping
  nameWithType: DataTableMapping
  fullName: System.Data.Common.DataTableMapping
- uid: System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: SqlDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
- uid: System.Data.Common.RowUpdatingEventArgs
  parent: System.Data.Common
  isExternal: false
  name: RowUpdatingEventArgs
  nameWithType: RowUpdatingEventArgs
  fullName: System.Data.Common.RowUpdatingEventArgs
- uid: System.Data.SqlClient.SqlDataAdapter.DeleteCommand
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: DeleteCommand
  nameWithType: SqlDataAdapter.DeleteCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.DeleteCommand
- uid: System.Data.SqlClient.SqlDataAdapter.ExecuteBatch
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: ExecuteBatch()
  nameWithType: SqlDataAdapter.ExecuteBatch()
  fullName: System.Data.SqlClient.SqlDataAdapter.ExecuteBatch()
- uid: System.Data.SqlClient.SqlDataAdapter.GetBatchedParameter(System.Int32,System.Int32)
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: GetBatchedParameter(Int32,Int32)
  nameWithType: SqlDataAdapter.GetBatchedParameter(Int32,Int32)
  fullName: System.Data.SqlClient.SqlDataAdapter.GetBatchedParameter(Int32,Int32)
- uid: System.Data.IDataParameter
  parent: System.Data
  isExternal: false
  name: IDataParameter
  nameWithType: IDataParameter
  fullName: System.Data.IDataParameter
- uid: System.Data.SqlClient.SqlDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: GetBatchedRecordsAffected(Int32,Int32,Exception)
  nameWithType: SqlDataAdapter.GetBatchedRecordsAffected(Int32,Int32,Exception)
  fullName: System.Data.SqlClient.SqlDataAdapter.GetBatchedRecordsAffected(Int32,Int32,Exception)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Data.SqlClient.SqlDataAdapter.InitializeBatching
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: InitializeBatching()
  nameWithType: SqlDataAdapter.InitializeBatching()
  fullName: System.Data.SqlClient.SqlDataAdapter.InitializeBatching()
- uid: System.Data.SqlClient.SqlDataAdapter.InsertCommand
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: InsertCommand
  nameWithType: SqlDataAdapter.InsertCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.InsertCommand
- uid: System.Data.SqlClient.SqlDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: OnRowUpdated(RowUpdatedEventArgs)
  nameWithType: SqlDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
  fullName: System.Data.SqlClient.SqlDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
- uid: System.Data.SqlClient.SqlDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: OnRowUpdating(RowUpdatingEventArgs)
  nameWithType: SqlDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
  fullName: System.Data.SqlClient.SqlDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
- uid: System.Data.SqlClient.SqlDataAdapter.RowUpdated
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: RowUpdated
  nameWithType: SqlDataAdapter.RowUpdated
  fullName: System.Data.SqlClient.SqlDataAdapter.RowUpdated
- uid: System.Data.SqlClient.SqlRowUpdatedEventHandler
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlRowUpdatedEventHandler
  nameWithType: SqlRowUpdatedEventHandler
  fullName: System.Data.SqlClient.SqlRowUpdatedEventHandler
- uid: System.Data.SqlClient.SqlDataAdapter.RowUpdating
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: RowUpdating
  nameWithType: SqlDataAdapter.RowUpdating
  fullName: System.Data.SqlClient.SqlDataAdapter.RowUpdating
- uid: System.Data.SqlClient.SqlRowUpdatingEventHandler
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlRowUpdatingEventHandler
  nameWithType: SqlRowUpdatingEventHandler
  fullName: System.Data.SqlClient.SqlRowUpdatingEventHandler
- uid: System.Data.SqlClient.SqlDataAdapter.SelectCommand
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: SelectCommand
  nameWithType: SqlDataAdapter.SelectCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.SelectCommand
- uid: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#DeleteCommand
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.DeleteCommand
  nameWithType: SqlDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
- uid: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#InsertCommand
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.InsertCommand
  nameWithType: SqlDataAdapter.System.Data.IDbDataAdapter.InsertCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.System.Data.IDbDataAdapter.InsertCommand
- uid: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#SelectCommand
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.SelectCommand
  nameWithType: SqlDataAdapter.System.Data.IDbDataAdapter.SelectCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.System.Data.IDbDataAdapter.SelectCommand
- uid: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#UpdateCommand
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.UpdateCommand
  nameWithType: SqlDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
- uid: System.Data.SqlClient.SqlDataAdapter.System#ICloneable#Clone
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: SqlDataAdapter.System.ICloneable.Clone()
  fullName: System.Data.SqlClient.SqlDataAdapter.System.ICloneable.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.SqlClient.SqlDataAdapter.TerminateBatching
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: TerminateBatching()
  nameWithType: SqlDataAdapter.TerminateBatching()
  fullName: System.Data.SqlClient.SqlDataAdapter.TerminateBatching()
- uid: System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: UpdateBatchSize
  nameWithType: SqlDataAdapter.UpdateBatchSize
  fullName: System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize
- uid: System.Data.SqlClient.SqlDataAdapter.UpdateCommand
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: UpdateCommand
  nameWithType: SqlDataAdapter.UpdateCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.UpdateCommand
- uid: System.Data.SqlClient.SqlDataAdapter.#ctor*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: SqlDataAdapter
  nameWithType: SqlDataAdapter.SqlDataAdapter
- uid: System.Data.SqlClient.SqlDataAdapter.AddToBatch*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: AddToBatch
  nameWithType: SqlDataAdapter.AddToBatch
- uid: System.Data.SqlClient.SqlDataAdapter.ClearBatch*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: ClearBatch
  nameWithType: SqlDataAdapter.ClearBatch
- uid: System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatedEvent*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: CreateRowUpdatedEvent
  nameWithType: SqlDataAdapter.CreateRowUpdatedEvent
- uid: System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatingEvent*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: CreateRowUpdatingEvent
  nameWithType: SqlDataAdapter.CreateRowUpdatingEvent
- uid: System.Data.SqlClient.SqlDataAdapter.DeleteCommand*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: DeleteCommand
  nameWithType: SqlDataAdapter.DeleteCommand
- uid: System.Data.SqlClient.SqlDataAdapter.ExecuteBatch*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: ExecuteBatch
  nameWithType: SqlDataAdapter.ExecuteBatch
- uid: System.Data.SqlClient.SqlDataAdapter.GetBatchedParameter*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: GetBatchedParameter
  nameWithType: SqlDataAdapter.GetBatchedParameter
- uid: System.Data.SqlClient.SqlDataAdapter.GetBatchedRecordsAffected*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: GetBatchedRecordsAffected
  nameWithType: SqlDataAdapter.GetBatchedRecordsAffected
- uid: System.Data.SqlClient.SqlDataAdapter.InitializeBatching*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: InitializeBatching
  nameWithType: SqlDataAdapter.InitializeBatching
- uid: System.Data.SqlClient.SqlDataAdapter.InsertCommand*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: InsertCommand
  nameWithType: SqlDataAdapter.InsertCommand
- uid: System.Data.SqlClient.SqlDataAdapter.OnRowUpdated*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: OnRowUpdated
  nameWithType: SqlDataAdapter.OnRowUpdated
- uid: System.Data.SqlClient.SqlDataAdapter.OnRowUpdating*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: OnRowUpdating
  nameWithType: SqlDataAdapter.OnRowUpdating
- uid: System.Data.SqlClient.SqlDataAdapter.SelectCommand*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: SelectCommand
  nameWithType: SqlDataAdapter.SelectCommand
- uid: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#DeleteCommand*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.DeleteCommand
  nameWithType: SqlDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
- uid: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#InsertCommand*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.InsertCommand
  nameWithType: SqlDataAdapter.System.Data.IDbDataAdapter.InsertCommand
- uid: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#SelectCommand*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.SelectCommand
  nameWithType: SqlDataAdapter.System.Data.IDbDataAdapter.SelectCommand
- uid: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#UpdateCommand*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.UpdateCommand
  nameWithType: SqlDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
- uid: System.Data.SqlClient.SqlDataAdapter.System#ICloneable#Clone*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: SqlDataAdapter.System.ICloneable.Clone
- uid: System.Data.SqlClient.SqlDataAdapter.TerminateBatching*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: TerminateBatching
  nameWithType: SqlDataAdapter.TerminateBatching
- uid: System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: UpdateBatchSize
  nameWithType: SqlDataAdapter.UpdateBatchSize
- uid: System.Data.SqlClient.SqlDataAdapter.UpdateCommand*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: UpdateCommand
  nameWithType: SqlDataAdapter.UpdateCommand
