### YamlMime:ManagedReference
items:
- uid: System.Activities.Expressions.InvokeMethod`1
  id: InvokeMethod`1
  children:
  - System.Activities.Expressions.InvokeMethod`1.#ctor
  - System.Activities.Expressions.InvokeMethod`1.BeginExecute(System.Activities.AsyncCodeActivityContext,System.AsyncCallback,System.Object)
  - System.Activities.Expressions.InvokeMethod`1.CacheMetadata(System.Activities.CodeActivityMetadata)
  - System.Activities.Expressions.InvokeMethod`1.EndExecute(System.Activities.AsyncCodeActivityContext,System.IAsyncResult)
  - System.Activities.Expressions.InvokeMethod`1.GenericTypeArguments
  - System.Activities.Expressions.InvokeMethod`1.MethodName
  - System.Activities.Expressions.InvokeMethod`1.Parameters
  - System.Activities.Expressions.InvokeMethod`1.RunAsynchronously
  - System.Activities.Expressions.InvokeMethod`1.TargetObject
  - System.Activities.Expressions.InvokeMethod`1.TargetType
  langs:
  - csharp
  name: InvokeMethod<TResult>
  nameWithType: InvokeMethod<TResult>
  fullName: System.Activities.Expressions.InvokeMethod<TResult>
  type: Class
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("Parameters")]

      public sealed class InvokeMethod<TResult> : System.Activities.AsyncCodeActivity<TResult>
    typeParameters:
    - id: TResult
      description: "To be added."
  inheritance:
  - System.Object
  - System.Activities.Activity
  - System.Activities.ActivityWithResult
  - System.Activities.Activity`1
  - System.Activities.AsyncCodeActivity`1
  implements: []
  inheritedMembers:
  - System.Activities.Activity.CacheId
  - System.Activities.Activity.Constraints
  - System.Activities.Activity.DisplayName
  - System.Activities.Activity.Id
  - System.Activities.Activity.ShouldSerializeDisplayName
  - System.Activities.Activity.ToString
  - System.Activities.Activity`1.FromValue(`0)
  - System.Activities.Activity`1.FromVariable(System.Activities.Variable)
  - System.Activities.Activity`1.FromVariable(System.Activities.Variable{`0})
  - System.Activities.Activity`1.op_Implicit(`0)
  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable)
  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable{`0})
  - System.Activities.Activity`1.Result
  - System.Activities.ActivityWithResult.ResultType
  - System.Activities.AsyncCodeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)
  - System.Activities.AsyncCodeActivity`1.Cancel(System.Activities.AsyncCodeActivityContext)
  - System.Activities.AsyncCodeActivity`1.Implementation
  - System.Activities.AsyncCodeActivity`1.ImplementationVersion
  - System.Activities.AsyncCodeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)
  platform:
  - net462
- uid: System.Activities.Expressions.InvokeMethod`1.#ctor
  id: '#ctor'
  parent: System.Activities.Expressions.InvokeMethod`1
  langs:
  - csharp
  name: InvokeMethod()
  nameWithType: InvokeMethod<TResult>.InvokeMethod()
  fullName: System.Activities.Expressions.InvokeMethod<TResult>.InvokeMethod()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  syntax:
    content: public InvokeMethod ();
    parameters: []
  overload: System.Activities.Expressions.InvokeMethod`1.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Expressions.InvokeMethod`1.BeginExecute(System.Activities.AsyncCodeActivityContext,System.AsyncCallback,System.Object)
  id: BeginExecute(System.Activities.AsyncCodeActivityContext,System.AsyncCallback,System.Object)
  parent: System.Activities.Expressions.InvokeMethod`1
  langs:
  - csharp
  name: BeginExecute(AsyncCodeActivityContext,AsyncCallback,Object)
  nameWithType: InvokeMethod<TResult>.BeginExecute(AsyncCodeActivityContext,AsyncCallback,Object)
  fullName: System.Activities.Expressions.InvokeMethod<TResult>.BeginExecute(AsyncCodeActivityContext,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  syntax:
    content: protected override IAsyncResult BeginExecute (System.Activities.AsyncCodeActivityContext context, AsyncCallback callback, object state);
    parameters:
    - id: context
      type: System.Activities.AsyncCodeActivityContext
      description: "To be added."
    - id: callback
      type: System.AsyncCallback
      description: "To be added."
    - id: state
      type: System.Object
      description: "To be added."
    return:
      type: System.IAsyncResult
      description: "To be added."
  overload: System.Activities.Expressions.InvokeMethod`1.BeginExecute*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Expressions.InvokeMethod`1.CacheMetadata(System.Activities.CodeActivityMetadata)
  id: CacheMetadata(System.Activities.CodeActivityMetadata)
  parent: System.Activities.Expressions.InvokeMethod`1
  langs:
  - csharp
  name: CacheMetadata(CodeActivityMetadata)
  nameWithType: InvokeMethod<TResult>.CacheMetadata(CodeActivityMetadata)
  fullName: System.Activities.Expressions.InvokeMethod<TResult>.CacheMetadata(CodeActivityMetadata)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  syntax:
    content: protected override void CacheMetadata (System.Activities.CodeActivityMetadata metadata);
    parameters:
    - id: metadata
      type: System.Activities.CodeActivityMetadata
      description: "To be added."
  overload: System.Activities.Expressions.InvokeMethod`1.CacheMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Expressions.InvokeMethod`1.EndExecute(System.Activities.AsyncCodeActivityContext,System.IAsyncResult)
  id: EndExecute(System.Activities.AsyncCodeActivityContext,System.IAsyncResult)
  parent: System.Activities.Expressions.InvokeMethod`1
  langs:
  - csharp
  name: EndExecute(AsyncCodeActivityContext,IAsyncResult)
  nameWithType: InvokeMethod<TResult>.EndExecute(AsyncCodeActivityContext,IAsyncResult)
  fullName: System.Activities.Expressions.InvokeMethod<TResult>.EndExecute(AsyncCodeActivityContext,IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  syntax:
    content: protected override TResult EndExecute (System.Activities.AsyncCodeActivityContext context, IAsyncResult result);
    parameters:
    - id: context
      type: System.Activities.AsyncCodeActivityContext
      description: "To be added."
    - id: result
      type: System.IAsyncResult
      description: "To be added."
    return:
      type: TResult
      description: "To be added."
  overload: System.Activities.Expressions.InvokeMethod`1.EndExecute*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Expressions.InvokeMethod`1.GenericTypeArguments
  id: GenericTypeArguments
  parent: System.Activities.Expressions.InvokeMethod`1
  langs:
  - csharp
  name: GenericTypeArguments
  nameWithType: InvokeMethod<TResult>.GenericTypeArguments
  fullName: System.Activities.Expressions.InvokeMethod<TResult>.GenericTypeArguments
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  syntax:
    content: public System.Collections.ObjectModel.Collection<Type> GenericTypeArguments { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Type}
      description: "To be added."
  overload: System.Activities.Expressions.InvokeMethod`1.GenericTypeArguments*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Expressions.InvokeMethod`1.MethodName
  id: MethodName
  parent: System.Activities.Expressions.InvokeMethod`1
  langs:
  - csharp
  name: MethodName
  nameWithType: InvokeMethod<TResult>.MethodName
  fullName: System.Activities.Expressions.InvokeMethod<TResult>.MethodName
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  syntax:
    content: public string MethodName { get; set; }
    return:
      type: System.String
      description: "To be added."
  overload: System.Activities.Expressions.InvokeMethod`1.MethodName*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Expressions.InvokeMethod`1.Parameters
  id: Parameters
  parent: System.Activities.Expressions.InvokeMethod`1
  langs:
  - csharp
  name: Parameters
  nameWithType: InvokeMethod<TResult>.Parameters
  fullName: System.Activities.Expressions.InvokeMethod<TResult>.Parameters
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Activities.Argument> Parameters { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Activities.Argument}
      description: "To be added."
  overload: System.Activities.Expressions.InvokeMethod`1.Parameters*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Expressions.InvokeMethod`1.RunAsynchronously
  id: RunAsynchronously
  parent: System.Activities.Expressions.InvokeMethod`1
  langs:
  - csharp
  name: RunAsynchronously
  nameWithType: InvokeMethod<TResult>.RunAsynchronously
  fullName: System.Activities.Expressions.InvokeMethod<TResult>.RunAsynchronously
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  syntax:
    content: public bool RunAsynchronously { get; set; }
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Activities.Expressions.InvokeMethod`1.RunAsynchronously*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Expressions.InvokeMethod`1.TargetObject
  id: TargetObject
  parent: System.Activities.Expressions.InvokeMethod`1
  langs:
  - csharp
  name: TargetObject
  nameWithType: InvokeMethod<TResult>.TargetObject
  fullName: System.Activities.Expressions.InvokeMethod<TResult>.TargetObject
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  syntax:
    content: public System.Activities.InArgument TargetObject { get; set; }
    return:
      type: System.Activities.InArgument
      description: "To be added."
  overload: System.Activities.Expressions.InvokeMethod`1.TargetObject*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Expressions.InvokeMethod`1.TargetType
  id: TargetType
  parent: System.Activities.Expressions.InvokeMethod`1
  langs:
  - csharp
  name: TargetType
  nameWithType: InvokeMethod<TResult>.TargetType
  fullName: System.Activities.Expressions.InvokeMethod<TResult>.TargetType
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  syntax:
    content: public Type TargetType { get; set; }
    return:
      type: System.Type
      description: "To be added."
  overload: System.Activities.Expressions.InvokeMethod`1.TargetType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Activities.AsyncCodeActivity`1
  isExternal: false
  name: System.Activities.AsyncCodeActivity<TResult>
- uid: System.Activities.Expressions.InvokeMethod`1.#ctor
  parent: System.Activities.Expressions.InvokeMethod`1
  isExternal: false
  name: InvokeMethod()
  nameWithType: InvokeMethod<TResult>.InvokeMethod()
  fullName: System.Activities.Expressions.InvokeMethod<TResult>.InvokeMethod()
- uid: System.Activities.Expressions.InvokeMethod`1.BeginExecute(System.Activities.AsyncCodeActivityContext,System.AsyncCallback,System.Object)
  parent: System.Activities.Expressions.InvokeMethod`1
  isExternal: false
  name: BeginExecute(AsyncCodeActivityContext,AsyncCallback,Object)
  nameWithType: InvokeMethod<TResult>.BeginExecute(AsyncCodeActivityContext,AsyncCallback,Object)
  fullName: System.Activities.Expressions.InvokeMethod<TResult>.BeginExecute(AsyncCodeActivityContext,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Activities.AsyncCodeActivityContext
  parent: System.Activities
  isExternal: false
  name: AsyncCodeActivityContext
  nameWithType: AsyncCodeActivityContext
  fullName: System.Activities.AsyncCodeActivityContext
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Activities.Expressions.InvokeMethod`1.CacheMetadata(System.Activities.CodeActivityMetadata)
  parent: System.Activities.Expressions.InvokeMethod`1
  isExternal: false
  name: CacheMetadata(CodeActivityMetadata)
  nameWithType: InvokeMethod<TResult>.CacheMetadata(CodeActivityMetadata)
  fullName: System.Activities.Expressions.InvokeMethod<TResult>.CacheMetadata(CodeActivityMetadata)
- uid: System.Activities.CodeActivityMetadata
  parent: System.Activities
  isExternal: false
  name: CodeActivityMetadata
  nameWithType: CodeActivityMetadata
  fullName: System.Activities.CodeActivityMetadata
- uid: System.Activities.Expressions.InvokeMethod`1.EndExecute(System.Activities.AsyncCodeActivityContext,System.IAsyncResult)
  parent: System.Activities.Expressions.InvokeMethod`1
  isExternal: false
  name: EndExecute(AsyncCodeActivityContext,IAsyncResult)
  nameWithType: InvokeMethod<TResult>.EndExecute(AsyncCodeActivityContext,IAsyncResult)
  fullName: System.Activities.Expressions.InvokeMethod<TResult>.EndExecute(AsyncCodeActivityContext,IAsyncResult)
- uid: TResult
  isExternal: true
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: System.Activities.Expressions.InvokeMethod`1.GenericTypeArguments
  parent: System.Activities.Expressions.InvokeMethod`1
  isExternal: false
  name: GenericTypeArguments
  nameWithType: InvokeMethod<TResult>.GenericTypeArguments
  fullName: System.Activities.Expressions.InvokeMethod<TResult>.GenericTypeArguments
- uid: System.Collections.ObjectModel.Collection{System.Type}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<Type>
  nameWithType: Collection<Type>
  fullName: System.Collections.ObjectModel.Collection<System.Type>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Type>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Expressions.InvokeMethod`1.MethodName
  parent: System.Activities.Expressions.InvokeMethod`1
  isExternal: false
  name: MethodName
  nameWithType: InvokeMethod<TResult>.MethodName
  fullName: System.Activities.Expressions.InvokeMethod<TResult>.MethodName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.Expressions.InvokeMethod`1.Parameters
  parent: System.Activities.Expressions.InvokeMethod`1
  isExternal: false
  name: Parameters
  nameWithType: InvokeMethod<TResult>.Parameters
  fullName: System.Activities.Expressions.InvokeMethod<TResult>.Parameters
- uid: System.Collections.ObjectModel.Collection{System.Activities.Argument}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<Argument>
  nameWithType: Collection<Argument>
  fullName: System.Collections.ObjectModel.Collection<System.Activities.Argument>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Activities.Argument>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Argument
    name: Argument
    nameWithType: Argument
    fullName: Argument
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Expressions.InvokeMethod`1.RunAsynchronously
  parent: System.Activities.Expressions.InvokeMethod`1
  isExternal: false
  name: RunAsynchronously
  nameWithType: InvokeMethod<TResult>.RunAsynchronously
  fullName: System.Activities.Expressions.InvokeMethod<TResult>.RunAsynchronously
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.Expressions.InvokeMethod`1.TargetObject
  parent: System.Activities.Expressions.InvokeMethod`1
  isExternal: false
  name: TargetObject
  nameWithType: InvokeMethod<TResult>.TargetObject
  fullName: System.Activities.Expressions.InvokeMethod<TResult>.TargetObject
- uid: System.Activities.InArgument
  parent: System.Activities
  isExternal: false
  name: InArgument
  nameWithType: InArgument
  fullName: System.Activities.InArgument
- uid: System.Activities.Expressions.InvokeMethod`1.TargetType
  parent: System.Activities.Expressions.InvokeMethod`1
  isExternal: false
  name: TargetType
  nameWithType: InvokeMethod<TResult>.TargetType
  fullName: System.Activities.Expressions.InvokeMethod<TResult>.TargetType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Activities.Expressions.InvokeMethod`1.#ctor*
  parent: System.Activities.Expressions.InvokeMethod`1
  isExternal: false
  name: InvokeMethod<TResult>
  nameWithType: InvokeMethod<TResult>.InvokeMethod<TResult>
- uid: System.Activities.Expressions.InvokeMethod`1.BeginExecute*
  parent: System.Activities.Expressions.InvokeMethod`1
  isExternal: false
  name: BeginExecute
  nameWithType: InvokeMethod<TResult>.BeginExecute
- uid: System.Activities.Expressions.InvokeMethod`1.CacheMetadata*
  parent: System.Activities.Expressions.InvokeMethod`1
  isExternal: false
  name: CacheMetadata
  nameWithType: InvokeMethod<TResult>.CacheMetadata
- uid: System.Activities.Expressions.InvokeMethod`1.EndExecute*
  parent: System.Activities.Expressions.InvokeMethod`1
  isExternal: false
  name: EndExecute
  nameWithType: InvokeMethod<TResult>.EndExecute
- uid: System.Activities.Expressions.InvokeMethod`1.GenericTypeArguments*
  parent: System.Activities.Expressions.InvokeMethod`1
  isExternal: false
  name: GenericTypeArguments
  nameWithType: InvokeMethod<TResult>.GenericTypeArguments
- uid: System.Activities.Expressions.InvokeMethod`1.MethodName*
  parent: System.Activities.Expressions.InvokeMethod`1
  isExternal: false
  name: MethodName
  nameWithType: InvokeMethod<TResult>.MethodName
- uid: System.Activities.Expressions.InvokeMethod`1.Parameters*
  parent: System.Activities.Expressions.InvokeMethod`1
  isExternal: false
  name: Parameters
  nameWithType: InvokeMethod<TResult>.Parameters
- uid: System.Activities.Expressions.InvokeMethod`1.RunAsynchronously*
  parent: System.Activities.Expressions.InvokeMethod`1
  isExternal: false
  name: RunAsynchronously
  nameWithType: InvokeMethod<TResult>.RunAsynchronously
- uid: System.Activities.Expressions.InvokeMethod`1.TargetObject*
  parent: System.Activities.Expressions.InvokeMethod`1
  isExternal: false
  name: TargetObject
  nameWithType: InvokeMethod<TResult>.TargetObject
- uid: System.Activities.Expressions.InvokeMethod`1.TargetType*
  parent: System.Activities.Expressions.InvokeMethod`1
  isExternal: false
  name: TargetType
  nameWithType: InvokeMethod<TResult>.TargetType
