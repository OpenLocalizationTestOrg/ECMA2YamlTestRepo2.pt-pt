### YamlMime:ManagedReference
items:
- uid: System.Web.Management.WebFailureAuditEvent
  id: WebFailureAuditEvent
  children:
  - System.Web.Management.WebFailureAuditEvent.#ctor(System.String,System.Object,System.Int32)
  - System.Web.Management.WebFailureAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)
  - System.Web.Management.WebFailureAuditEvent.IncrementPerfCounters
  langs:
  - csharp
  name: WebFailureAuditEvent
  nameWithType: WebFailureAuditEvent
  fullName: System.Web.Management.WebFailureAuditEvent
  type: Class
  summary: "Fornece informações sobre falhas de segurança."
  remarks: "Monitorização de estado de funcionamento do ASP.NET permite que os funcionários de operações e de produção gerir aplicações implementadas do Web. O <xref:System.Web.Management?displayProperty=fullName>espaço de nomes contém os tipos de eventos de estado de funcionamento responsáveis pelo empacotamento dados de estado de funcionamento da aplicação e os tipos de fornecedor responsáveis por processar estes dados.</xref:System.Web.Management?displayProperty=fullName> Também contém tipos de suporte que ajudam a durante a gestão de eventos de estado de funcionamento.       A classe de WebFailureAuditEvent é utilizada quando ocorre uma falha de uma operação de segurança. Um exemplo desta situação é uma falha autorizações de URL para um pedido Web.       Por predefinição, o ASP.NET está configurado para accionar o evento de WebFailureAuditEvent para as seguintes funcionalidades:-ficheiro de autorização. ASP.NET tenta autorização do ficheiro apenas quando uma identidade do Windows está associada ao pedido. O código de auditoria de eventos relacionados é <xref:System.Web.Management.WebEventCodes.AuditFileAuthorizationFailure>.</xref:System.Web.Management.WebEventCodes.AuditFileAuthorizationFailure>      -Autorização URL. Isto é regida pelas tentativas não autorizadas a aceder a um recurso do URL. Não são auditadas tentativas falhadas por um utilizador anónimo, porque a falha de autenticação anónima é aceitável na maior parte das circunstâncias. O código de auditoria de eventos relacionados é <xref:System.Web.Management.WebEventCodes.AuditUrlAuthorizationFailure>.</xref:System.Web.Management.WebEventCodes.AuditUrlAuthorizationFailure>      -Não processada genérico ou condições não processada de segurança. Segue-se uma lista dos códigos de eventos relacionados com estas condições:- <xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationFailure>- <xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationFailure>- <xref:System.Web.Management.WebEventCodes.AuditInvalidViewStateFailure>- <xref:System.Web.Management.WebEventCodes.AuditUnhandledSecurityException>- <xref:System.Web.Management.WebEventCodes.AuditUnhandledAccessException>Quando WebFailureAuditEvent um evento é gerado, a monitorização de estado de funcionamento do ASP.NET incrementa o contador de desempenho desencadeados de eventos de falha de auditoria relacionado e verificações, em seguida, o `healthMonitoring` secção de configuração para determinar se qualquer fornecedores de subscrevem o evento.</xref:System.Web.Management.WebEventCodes.AuditUnhandledAccessException> </xref:System.Web.Management.WebEventCodes.AuditUnhandledSecurityException> </xref:System.Web.Management.WebEventCodes.AuditInvalidViewStateFailure> </xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationFailure> </xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationFailure> Se subscrevem fornecedores para o evento, o ASP.NET dispatches o evento aos mesmos para processamento.      > [!NOTE] > Para ver o contador de desempenho desencadeados de eventos de falha de auditoria no Monitor do sistema (PerfMon), no **adicionar contadores** janela, selecione **ASP.NET** do **objeto de desempenho** na lista pendente, selecione o **gerado de eventos de falha de auditoria** contador de desempenho e clique em de **adicionar** botão. Para obter mais informações, consulte [utilizando o Monitor de sistema (PerfMon) com aplicações ASP.NET](http://go.microsoft.com/fwlink/?linkid=36882) na documentação do IIS no MSDN.      > [!NOTE] > Na maioria dos casos poderá utilizar os tipos de monitorização de estado de funcionamento do ASP.NET, conforme implementado e vai controlar o sistema de monitorização de estado de funcionamento, especificando valores de `healthMonitoring` secção de configuração. Também pode derivar de tipos de monitorização de estado de funcionamento para criar os seus próprios fornecedores e eventos personalizados. Para obter um exemplo de derivar da classe de WebFailureAuditEvent, consulte a secção de exemplo."
  example:
  - "The following code example demonstrates how to derive from the WebFailureAuditEvent class to create a custom audit event.  \n  \n [!code-vb[System.Web.Management.WebFailureAuditEvent#1](~/add/codesnippet/visualbasic/t-system.web.management._22_1.vb)]\n [!code-cs[System.Web.Management.WebFailureAuditEvent#1](~/add/codesnippet/csharp/t-system.web.management._22_1.cs)]  \n  \n The following configuration excerpt shows how to enable ASP.NET to use the WebFailureAuditEvent event.  \n  \n```  \n<healthMonitoring   \nenabled=\"true\"  \nheartBeatInterval=\"0\">   \n<providers>  \n<add name=\"EventLogProvider\"   \ntype=\"System.Web.Management.EventLogWebEventProvider,  \nSystem.Web,Version=2.0.3600.0,Culture=neutral,  \nPublicKeyToken=b03f5f7f11d50a3a\"/>  \n</providers>  \n  \n<eventMappings>  \n<add  name=\"SampleWebFailureAuditEvent\"   \ntype=\"SamplesAspNet.SampleWebFailureAuditEvent,  \nwebfailureauditevent,Version=1.0.1663.31140,   \nCulture=neutral,   \nPublicKeyToken=0d1fa0f69d94de96,   \nprocessorArchitecture=MSIL\"/>  \n</eventMappings>  \n  \n<rules>  \n<add name=\"Custom Failure Audit Default\"  \neventName=\" SampleWebFailureAuditEvent \"  \nprovider=\"EventLogProvider\"  \nprofile=\"Default\"/>    \n</rules>  \n  \n</healthMonitoring>  \n```"
  syntax:
    content: 'public class WebFailureAuditEvent : System.Web.Management.WebAuditEvent'
  inheritance:
  - System.Object
  - System.Web.Management.WebBaseEvent
  - System.Web.Management.WebManagementEvent
  - System.Web.Management.WebAuditEvent
  implements: []
  inheritedMembers:
  - System.Web.Management.WebAuditEvent.RequestInformation
  - System.Web.Management.WebBaseEvent.ApplicationInformation
  - System.Web.Management.WebBaseEvent.EventCode
  - System.Web.Management.WebBaseEvent.EventDetailCode
  - System.Web.Management.WebBaseEvent.EventID
  - System.Web.Management.WebBaseEvent.EventOccurrence
  - System.Web.Management.WebBaseEvent.EventSequence
  - System.Web.Management.WebBaseEvent.EventSource
  - System.Web.Management.WebBaseEvent.EventTime
  - System.Web.Management.WebBaseEvent.EventTimeUtc
  - System.Web.Management.WebBaseEvent.FormatCustomEventDetails(System.Web.Management.WebEventFormatter)
  - System.Web.Management.WebBaseEvent.Message
  - System.Web.Management.WebBaseEvent.Raise
  - System.Web.Management.WebBaseEvent.Raise(System.Web.Management.WebBaseEvent)
  - System.Web.Management.WebBaseEvent.ToString
  - System.Web.Management.WebBaseEvent.ToString(System.Boolean,System.Boolean)
  - System.Web.Management.WebManagementEvent.ProcessInformation
  platform:
  - net462
- uid: System.Web.Management.WebFailureAuditEvent.#ctor(System.String,System.Object,System.Int32)
  id: '#ctor(System.String,System.Object,System.Int32)'
  parent: System.Web.Management.WebFailureAuditEvent
  langs:
  - csharp
  name: WebFailureAuditEvent(String,Object,Int32)
  nameWithType: WebFailureAuditEvent.WebFailureAuditEvent(String,Object,Int32)
  fullName: System.Web.Management.WebFailureAuditEvent.WebFailureAuditEvent(String,Object,Int32)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.Management.WebFailureAuditEvent&quot;> </xref> classe utilizando os parâmetros fornecidos."
  remarks: "Este construtor é utilizado internamente pelo sistema de monitorização de estado de funcionamento ASP.NET. Nunca irá utilizá-la para criar uma instância do <xref:System.Web.Management.WebFailureAuditEvent>, mas pode ligar a este construtor quando implementar o seu próprio tipo de evento que herda desta classe.</xref:System.Web.Management.WebFailureAuditEvent>"
  example:
  - "The following code example shows how to call this constructor in the `SampleWebFailureAuditEvent` class. This code example is part of a larger example provided for the <xref:System.Web.Management.WebFailureAuditEvent> class overview.  \n  \n [!code-vb[System.Web.Management.WebFailureAuditEvent#2](~/add/codesnippet/visualbasic/a50fb7f5-904a-42fa-8a42-_1.vb)]\n [!code-cs[System.Web.Management.WebFailureAuditEvent#2](~/add/codesnippet/csharp/a50fb7f5-904a-42fa-8a42-_1.cs)]"
  syntax:
    content: protected WebFailureAuditEvent (string message, object eventSource, int eventCode);
    parameters:
    - id: message
      type: System.String
      description: "A descrição do evento."
    - id: eventSource
      type: System.Object
      description: "O objeto que é a origem do evento."
    - id: eventCode
      type: System.Int32
      description: "O código associado ao evento. Quando implementar um evento personalizado, o código de evento tem de ser maior que <xref href=&quot;System.Web.Management.WebEventCodes.WebExtendedBase&quot;> </xref>."
  overload: System.Web.Management.WebFailureAuditEvent.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebFailureAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)
  id: '#ctor(System.String,System.Object,System.Int32,System.Int32)'
  parent: System.Web.Management.WebFailureAuditEvent
  langs:
  - csharp
  name: WebFailureAuditEvent(String,Object,Int32,Int32)
  nameWithType: WebFailureAuditEvent.WebFailureAuditEvent(String,Object,Int32,Int32)
  fullName: System.Web.Management.WebFailureAuditEvent.WebFailureAuditEvent(String,Object,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.Management.WebFailureAuditEvent&quot;> </xref> classe utilizando os parâmetros fornecidos."
  remarks: "Este construtor é utilizado internamente pelo sistema de monitorização de estado de funcionamento ASP.NET. Nunca irá utilizá-la para criar uma instância do <xref:System.Web.Management.WebFailureAuditEvent>, mas pode ligar a este construtor quando implementar o seu próprio tipo de evento que herda desta classe.</xref:System.Web.Management.WebFailureAuditEvent>"
  example:
  - "The following code example shows how to call this constructor in the `SampleWebFailureAuditEvent` class. This code example is part of a larger example provided for the <xref:System.Web.Management.WebFailureAuditEvent> class overview.  \n  \n [!code-vb[System.Web.Management.WebFailureAuditEvent#3](~/add/codesnippet/visualbasic/c4dd7ba1-3445-4de0-9d16-_1.vb)]\n [!code-cs[System.Web.Management.WebFailureAuditEvent#3](~/add/codesnippet/csharp/c4dd7ba1-3445-4de0-9d16-_1.cs)]"
  syntax:
    content: protected WebFailureAuditEvent (string message, object eventSource, int eventCode, int eventDetailCode);
    parameters:
    - id: message
      type: System.String
      description: "A descrição do evento."
    - id: eventSource
      type: System.Object
      description: "O objeto que é a origem do evento."
    - id: eventCode
      type: System.Int32
      description: "O código associado ao evento. Quando implementar um evento personalizado, o código de evento tem de ser maior que <xref href=&quot;System.Web.Management.WebEventCodes.WebExtendedBase&quot;> </xref>."
    - id: eventDetailCode
      type: System.Int32
      description: "O <xref href=&quot;System.Web.Management.WebEventCodes&quot;> </xref> valor que especifica o identificador de detalhado para o evento."
  overload: System.Web.Management.WebFailureAuditEvent.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebFailureAuditEvent.IncrementPerfCounters
  id: IncrementPerfCounters
  parent: System.Web.Management.WebFailureAuditEvent
  langs:
  - csharp
  name: IncrementPerfCounters()
  nameWithType: WebFailureAuditEvent.IncrementPerfCounters()
  fullName: System.Web.Management.WebFailureAuditEvent.IncrementPerfCounters()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Aumenta o contador de desempenho desencadeados de eventos de falha de auditoria."
  remarks: "O contador de desempenho de auditoria gerado de eventos de falha controla o número de eventos de falha de auditoria gerados uma vez que iniciar a aplicação. Este método também chamadas principal <xref:System.Web.Management.WebBaseEvent.IncrementPerfCounters%2A>método, o que incrementa o contador de eventos gerados.</xref:System.Web.Management.WebBaseEvent.IncrementPerfCounters%2A> Este contador regista o número total de eventos gerados.       Para ver estes contadores de desempenho no Monitor do sistema (PerfMon), no **adicionar contadores** janela selecionar **ASP.NET** do **objeto de desempenho** pendente lista, selecione o contador de desempenho que pretende visualizar e clique em de **adicionar** botão. Para obter mais informações, consulte [utilizando o Monitor de sistema (PerfMon) com aplicações ASP.NET](http://go.microsoft.com/fwlink/?linkid=36882) na documentação do IIS no MSDN."
  syntax:
    content: protected override void IncrementPerfCounters ();
    parameters: []
  overload: System.Web.Management.WebFailureAuditEvent.IncrementPerfCounters*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Management.WebAuditEvent
  isExternal: false
  name: System.Web.Management.WebAuditEvent
- uid: System.Web.Management.WebFailureAuditEvent.#ctor(System.String,System.Object,System.Int32)
  parent: System.Web.Management.WebFailureAuditEvent
  isExternal: false
  name: WebFailureAuditEvent(String,Object,Int32)
  nameWithType: WebFailureAuditEvent.WebFailureAuditEvent(String,Object,Int32)
  fullName: System.Web.Management.WebFailureAuditEvent.WebFailureAuditEvent(String,Object,Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Management.WebFailureAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)
  parent: System.Web.Management.WebFailureAuditEvent
  isExternal: false
  name: WebFailureAuditEvent(String,Object,Int32,Int32)
  nameWithType: WebFailureAuditEvent.WebFailureAuditEvent(String,Object,Int32,Int32)
  fullName: System.Web.Management.WebFailureAuditEvent.WebFailureAuditEvent(String,Object,Int32,Int32)
- uid: System.Web.Management.WebFailureAuditEvent.IncrementPerfCounters
  parent: System.Web.Management.WebFailureAuditEvent
  isExternal: false
  name: IncrementPerfCounters()
  nameWithType: WebFailureAuditEvent.IncrementPerfCounters()
  fullName: System.Web.Management.WebFailureAuditEvent.IncrementPerfCounters()
- uid: System.Web.Management.WebFailureAuditEvent.#ctor*
  parent: System.Web.Management.WebFailureAuditEvent
  isExternal: false
  name: WebFailureAuditEvent
  nameWithType: WebFailureAuditEvent.WebFailureAuditEvent
- uid: System.Web.Management.WebFailureAuditEvent.IncrementPerfCounters*
  parent: System.Web.Management.WebFailureAuditEvent
  isExternal: false
  name: IncrementPerfCounters
  nameWithType: WebFailureAuditEvent.IncrementPerfCounters
