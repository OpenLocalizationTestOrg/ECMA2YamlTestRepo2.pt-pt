### YamlMime:ManagedReference
items:
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection
  id: HtmlTableCellCollection
  children:
  - System.Web.UI.HtmlControls.HtmlTableCellCollection.Add(System.Web.UI.HtmlControls.HtmlTableCell)
  - System.Web.UI.HtmlControls.HtmlTableCellCollection.Clear
  - System.Web.UI.HtmlControls.HtmlTableCellCollection.CopyTo(System.Array,System.Int32)
  - System.Web.UI.HtmlControls.HtmlTableCellCollection.Count
  - System.Web.UI.HtmlControls.HtmlTableCellCollection.GetEnumerator
  - System.Web.UI.HtmlControls.HtmlTableCellCollection.Insert(System.Int32,System.Web.UI.HtmlControls.HtmlTableCell)
  - System.Web.UI.HtmlControls.HtmlTableCellCollection.IsReadOnly
  - System.Web.UI.HtmlControls.HtmlTableCellCollection.IsSynchronized
  - System.Web.UI.HtmlControls.HtmlTableCellCollection.Item(System.Int32)
  - System.Web.UI.HtmlControls.HtmlTableCellCollection.Remove(System.Web.UI.HtmlControls.HtmlTableCell)
  - System.Web.UI.HtmlControls.HtmlTableCellCollection.RemoveAt(System.Int32)
  - System.Web.UI.HtmlControls.HtmlTableCellCollection.SyncRoot
  langs:
  - csharp
  name: HtmlTableCellCollection
  nameWithType: HtmlTableCellCollection
  fullName: System.Web.UI.HtmlControls.HtmlTableCellCollection
  type: Class
  summary: "A collection of <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCell&quot;></xref> objects that represent the cells in a single row of an <xref href=&quot;System.Web.UI.HtmlControls.HtmlTable&quot;></xref> control. This class cannot be inherited."
  remarks: "Use the HtmlTableCellCollection class to programmatically manage a collection of <xref:System.Web.UI.HtmlControls.HtmlTableCell> objects that represent the cells of a single row in an <xref:System.Web.UI.HtmlControls.HtmlTable> control. This class is commonly used to add, remove, or modify the contents of a cell in a row of an <xref:System.Web.UI.HtmlControls.HtmlTable> control.      > [!NOTE] >  An <xref:System.Web.UI.HtmlControls.HtmlTable> control contains a <xref:System.Web.UI.HtmlControls.HtmlTable.Rows%2A> property that contains a collection of <xref:System.Web.UI.HtmlControls.HtmlTableRow> objects. Each <xref:System.Web.UI.HtmlControls.HtmlTableRow> object represents an individual row in the table. An <xref:System.Web.UI.HtmlControls.HtmlTableRow> object contains a <xref:System.Web.UI.HtmlControls.HtmlTableRow.Cells%2A> property that represents a collection of <xref:System.Web.UI.HtmlControls.HtmlTableCell> objects. These objects, in turn, represent the individual cells of a row. To retrieve an individual cell, first get the <xref:System.Web.UI.HtmlControls.HtmlTableRow> object that represents the row containing the cell in the table (from the <xref:System.Web.UI.HtmlControls.HtmlTable.Rows%2A> collection of the <xref:System.Web.UI.HtmlControls.HtmlTable> control). You can then get the <xref:System.Web.UI.HtmlControls.HtmlTableCell> object that represents the cell in the row (from the <xref:System.Web.UI.HtmlControls.HtmlTableRow.Cells%2A> collection of the <xref:System.Web.UI.HtmlControls.HtmlTableRow> object)."
  example:
  - "The following code example demonstrates how to dynamically generate the contents of an <xref:System.Web.UI.HtmlControls.HtmlTable> control by adding cells to an HtmlTableCellCollection collection. Notice that the <xref:System.Web.UI.HtmlControls.HtmlTableRow.Cells%2A> property of a row, represented by an <xref:System.Web.UI.HtmlControls.HtmlTableRow> object, is the HtmlTableCellCollection collection.  \n  \n [!code-vb[HtmlTableCellCollection#1](~/add/codesnippet/visualbasic/t-system.web.ui.htmlcont_21_1.aspx)]\n [!code-cs[HtmlTableCellCollection#1](~/add/codesnippet/csharp/t-system.web.ui.htmlcont_21_1.aspx)]"
  syntax:
    content: 'public sealed class HtmlTableCellCollection : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.Add(System.Web.UI.HtmlControls.HtmlTableCell)
  id: Add(System.Web.UI.HtmlControls.HtmlTableCell)
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  langs:
  - csharp
  name: Add(HtmlTableCell)
  nameWithType: HtmlTableCellCollection.Add(HtmlTableCell)
  fullName: System.Web.UI.HtmlControls.HtmlTableCellCollection.Add(HtmlTableCell)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "Appends the specified <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCell&quot;></xref> object to the end of the <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCellCollection&quot;></xref> collection."
  remarks: "Use this method to add the specified <xref:System.Web.UI.HtmlControls.HtmlTableCell> object to the end of an <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection. If you want to insert an <xref:System.Web.UI.HtmlControls.HtmlTableCell> object in a specified location in the collection, use the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Insert%2A> method."
  example:
  - "The following code example demonstrates how to use the Add method to append a cell of a table, represented by an <xref:System.Web.UI.HtmlControls.HtmlTableCell> object, to the end of an <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection. Notice that the <xref:System.Web.UI.HtmlControls.HtmlTableRow.Cells%2A> property of a row represented by an <xref:System.Web.UI.HtmlControls.HtmlTableRow> object is the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection.  \n  \n [!code-vb[HtmlTableCellCollection#1](~/add/codesnippet/visualbasic/d41707e0-0d2f-493c-9f0d-_1.aspx)]\n [!code-cs[HtmlTableCellCollection#1](~/add/codesnippet/csharp/d41707e0-0d2f-493c-9f0d-_1.aspx)]"
  syntax:
    content: public void Add (System.Web.UI.HtmlControls.HtmlTableCell cell);
    parameters:
    - id: cell
      type: System.Web.UI.HtmlControls.HtmlTableCell
      description: "The <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCell&quot;></xref> to add to the collection."
  overload: System.Web.UI.HtmlControls.HtmlTableCellCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.Clear
  id: Clear
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: HtmlTableCellCollection.Clear()
  fullName: System.Web.UI.HtmlControls.HtmlTableCellCollection.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "Removes all <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCell&quot;></xref> objects from the <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCellCollection&quot;></xref> collection."
  remarks: "Use this method to remove all <xref:System.Web.UI.HtmlControls.HtmlTableCell> objects from the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection and reset the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Count%2A> property to `0`.      > [!NOTE] >  This method removes the cells from a row, but it does not remove the row from the table. To remove a row from the table, be sure to also remove the <xref:System.Web.UI.HtmlControls.HtmlTableRow> object that represents the row from the <xref:System.Web.UI.HtmlControls.HtmlTable.Rows%2A> collection of the <xref:System.Web.UI.HtmlControls.HtmlTable> control."
  example:
  - "The following code example demonstrates how to use the Clear method to remove all items from the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection. New entries are then added to the collection and displayed in the <xref:System.Web.UI.HtmlControls.HtmlTable> control.  \n  \n [!code-cs[HtmlTableCellCollectioncClear#1](~/add/codesnippet/csharp/m-system.web.ui.htmlcont_6_1.aspx)]\n [!code-vb[HtmlTableCellCollectioncClear#1](~/add/codesnippet/visualbasic/m-system.web.ui.htmlcont_6_1.aspx)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.UI.HtmlControls.HtmlTableCellCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: HtmlTableCellCollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.HtmlControls.HtmlTableCellCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "Copies the items from the <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCellCollection&quot;></xref> collection to the specified &lt;xref:System.Array?displayProperty=fullName&gt;, beginning with the specified index in the &lt;xref:System.Array?displayProperty=fullName&gt;."
  remarks: "Use this method to copy the contents of the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection into the specified <xref:System.Array?displayProperty=fullName>, starting at the specified index of the array.      > [!NOTE] >  The `array` parameter must be a zero-based <xref:System.Array?displayProperty=fullName>."
  example:
  - "The following code example demonstrates how to use the CopyTo method to create an array that contains the same contents as the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection. The array is then iterated through to display the contents of the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection.  \n  \n [!code-vb[HtmlTableCellCollectionCopyTo#1](~/add/codesnippet/visualbasic/6c1e488c-8a37-46ed-b81a-_1.aspx)]\n [!code-cs[HtmlTableCellCollectionCopyTo#1](~/add/codesnippet/csharp/6c1e488c-8a37-46ed-b81a-_1.aspx)]"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "A zero-based &lt;xref:System.Array?displayProperty=fullName&gt; that receives the copied items from the <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCellCollection&quot;></xref>."
    - id: index
      type: System.Int32
      description: "The first index in the specified &lt;xref:System.Array?displayProperty=fullName&gt; to receive the items."
  overload: System.Web.UI.HtmlControls.HtmlTableCellCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.Count
  id: Count
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  langs:
  - csharp
  name: Count
  nameWithType: HtmlTableCellCollection.Count
  fullName: System.Web.UI.HtmlControls.HtmlTableCellCollection.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "Gets the number of <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCell&quot;></xref> objects in the <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCellCollection&quot;></xref> collection."
  remarks: "Use the Count property to determine the number of cells contained in the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection. The Count property is commonly used when iterating through the collection to determine the upper bound."
  example:
  - "The following code example demonstrates how to use the Count property to determine the number of cells in a row of the <xref:System.Web.UI.HtmlControls.HtmlTable> control. This value is then used as the upper bound of a loop to iterate through the cells of a row in the table.  \n  \n [!code-vb[HtmlTableCellCollectionCount#1](~/add/codesnippet/visualbasic/p-system.web.ui.htmlcont_35_1.aspx)]\n [!code-cs[HtmlTableCellCollectionCount#1](~/add/codesnippet/csharp/p-system.web.ui.htmlcont_35_1.aspx)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "The number of <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCell&quot;></xref> objects in the <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCellCollection&quot;></xref>. The default value is <xref uid=&quot;langword_csharp_0&quot; name=&quot;0&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.HtmlControls.HtmlTableCellCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: HtmlTableCellCollection.GetEnumerator()
  fullName: System.Web.UI.HtmlControls.HtmlTableCellCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "Returns a &lt;xref:System.Collections.IEnumerator?displayProperty=fullName&gt;-implemented object that contains all <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCell&quot;></xref> objects in the <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCellCollection&quot;></xref> collection."
  remarks: "Use this method to create a <xref:System.Collections.IEnumerator?displayProperty=fullName>-implemented object that can be iterated through to retrieve the contents of each item in the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection.       Use the <xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName> property to get the item currently pointed to in the collection.       Use the <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName> method to move to the next item in the collection.       Use the <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName> method to move the enumerator to the initial position.      > [!NOTE] >  The <xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName> method must be called after creating the <xref:System.Collections.IEnumerator?displayProperty=fullName>-implemented object, or after using the <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName> method to move the enumerator to the first item in the collection. Otherwise, the item represented by the <xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName> property is undefined."
  example:
  - "The following code example demonstrates how to use the GetEnumerator method to create a <xref:System.Collections.IEnumerator?displayProperty=fullName>-implemented object. The object is then iterated through to display the contents of the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection.  \n  \n [!code-vb[HtmlTableCellCollectionienumerator#1](~/add/codesnippet/visualbasic/m-system.web.ui.htmlcont_29_1.aspx)]\n [!code-cs[HtmlTableCellCollectionienumerator#1](~/add/codesnippet/csharp/m-system.web.ui.htmlcont_29_1.aspx)]"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "A &lt;xref:System.Collections.IEnumerator?displayProperty=fullName&gt;-implemented object that contains all <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCell&quot;></xref> objects in the <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCellCollection&quot;></xref>."
  overload: System.Web.UI.HtmlControls.HtmlTableCellCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.Insert(System.Int32,System.Web.UI.HtmlControls.HtmlTableCell)
  id: Insert(System.Int32,System.Web.UI.HtmlControls.HtmlTableCell)
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  langs:
  - csharp
  name: Insert(Int32,HtmlTableCell)
  nameWithType: HtmlTableCellCollection.Insert(Int32,HtmlTableCell)
  fullName: System.Web.UI.HtmlControls.HtmlTableCellCollection.Insert(Int32,HtmlTableCell)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "Adds the specified <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCell&quot;></xref> object at the specified index location of the <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCellCollection&quot;></xref> collection."
  remarks: "Use the Insert method to add the specified <xref:System.Web.UI.HtmlControls.HtmlTableCell> object to an <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection at the specified index. If you want to simply append an <xref:System.Web.UI.HtmlControls.HtmlTableCell> object to the end of the collection, use the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection.Add%2A> method."
  example:
  - "The following code example demonstrates how to use the Insert method to dynamically insert a cell of a table, represented by an <xref:System.Web.UI.HtmlControls.HtmlTableCell> object, in an <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection.  \n  \n [!code-cs[HtmlTableCellCollectionInsert#1](~/add/codesnippet/csharp/8541af04-8379-4426-8973-_1.aspx)]\n [!code-vb[HtmlTableCellCollectionInsert#1](~/add/codesnippet/visualbasic/8541af04-8379-4426-8973-_1.aspx)]"
  syntax:
    content: public void Insert (int index, System.Web.UI.HtmlControls.HtmlTableCell cell);
    parameters:
    - id: index
      type: System.Int32
      description: "The location in the <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCellCollection&quot;></xref> at which to add the <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCell&quot;></xref>."
    - id: cell
      type: System.Web.UI.HtmlControls.HtmlTableCell
      description: "The <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCell&quot;></xref> to add to the <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCellCollection&quot;></xref>."
  overload: System.Web.UI.HtmlControls.HtmlTableCellCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: HtmlTableCellCollection.IsReadOnly
  fullName: System.Web.UI.HtmlControls.HtmlTableCellCollection.IsReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "Gets a value indicating whether the <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCellCollection&quot;></xref> collection is read-only."
  remarks: "This property always returns `false` to indicate that the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection can be written to in all cases."
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> for all cases."
  overload: System.Web.UI.HtmlControls.HtmlTableCellCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: HtmlTableCellCollection.IsSynchronized
  fullName: System.Web.UI.HtmlControls.HtmlTableCellCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "Gets a value indicating whether access to the <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCellCollection&quot;></xref> collection is synchronized (thread safe)."
  remarks: "This property is derived from <xref:System.Collections.ICollection?displayProperty=fullName> and is overridden to always return `false` to indicate that access to the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection is not synchronized (not thread safe).       For more information on the IsSynchronized property, see the <xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName> property of the <xref:System.Collections.ICollection?displayProperty=fullName> interface."
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> for all cases, which indicates that access to the <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCellCollection&quot;></xref> is not synchronized (not thread safe)."
  overload: System.Web.UI.HtmlControls.HtmlTableCellCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: HtmlTableCellCollection.Item(Int32)
  fullName: System.Web.UI.HtmlControls.HtmlTableCellCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "Gets the <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCell&quot;></xref> object at the specified index from the <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCellCollection&quot;></xref> collection."
  remarks: "Use this indexer to get an <xref:System.Web.UI.HtmlControls.HtmlTableCell> object from the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection. You can access an <xref:System.Web.UI.HtmlControls.HtmlTableCell> object at a specified index by using simple array notation.      > [!NOTE] >  The collection is zero-based; therefore, the first element in the collection contains an index value of `0`."
  example:
  - "The following code example demonstrates how to use the indexer to retrieve a cell of a table, represented by an <xref:System.Web.UI.HtmlControls.HtmlTableCell> object, from the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection. The cell is then updated with new content. Notice that the <xref:System.Web.UI.HtmlControls.HtmlTableRow.Cells%2A> property of a row represented by an <xref:System.Web.UI.HtmlControls.HtmlTableRow> object is the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection.  \n  \n [!code-vb[HtmlTableCellCollection#1](~/add/codesnippet/visualbasic/p-system.web.ui.htmlcont_79_1.aspx)]\n [!code-cs[HtmlTableCellCollection#1](~/add/codesnippet/csharp/p-system.web.ui.htmlcont_79_1.aspx)]"
  syntax:
    content: public System.Web.UI.HtmlControls.HtmlTableCell this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "An ordinal index value that specifies the <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCell&quot;></xref> to return."
    return:
      type: System.Web.UI.HtmlControls.HtmlTableCell
      description: "An <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCell&quot;></xref> that represents a cell contained in the <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCellCollection&quot;></xref>."
  overload: System.Web.UI.HtmlControls.HtmlTableCellCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.Remove(System.Web.UI.HtmlControls.HtmlTableCell)
  id: Remove(System.Web.UI.HtmlControls.HtmlTableCell)
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  langs:
  - csharp
  name: Remove(HtmlTableCell)
  nameWithType: HtmlTableCellCollection.Remove(HtmlTableCell)
  fullName: System.Web.UI.HtmlControls.HtmlTableCellCollection.Remove(HtmlTableCell)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "Removes the specified <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCell&quot;></xref> object from the <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCellCollection&quot;></xref> collection."
  remarks: "Use this method to remove the specified <xref:System.Web.UI.HtmlControls.HtmlTableCell> object from the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection.      > [!NOTE] >  If you specify an <xref:System.Web.UI.HtmlControls.HtmlTableCell> object that does not exist in the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection, no item is removed from the collection."
  example:
  - "The following code example demonstrates how to use the Remove method to remove the specified cell of a table, represented by an <xref:System.Web.UI.HtmlControls.HtmlTableCell> object, from the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection. This example removes the cells from the first column of the <xref:System.Web.UI.HtmlControls.HtmlTable> control.  \n  \n [!code-cs[HtmlTableCellCollectionRemove#1](~/add/codesnippet/csharp/45baa1b7-4804-4e79-afd4-_1.aspx)]\n [!code-vb[HtmlTableCellCollectionRemove#1](~/add/codesnippet/visualbasic/45baa1b7-4804-4e79-afd4-_1.aspx)]"
  syntax:
    content: public void Remove (System.Web.UI.HtmlControls.HtmlTableCell cell);
    parameters:
    - id: cell
      type: System.Web.UI.HtmlControls.HtmlTableCell
      description: "The <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCell&quot;></xref> to remove from the <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCellCollection&quot;></xref>."
  overload: System.Web.UI.HtmlControls.HtmlTableCellCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: HtmlTableCellCollection.RemoveAt(Int32)
  fullName: System.Web.UI.HtmlControls.HtmlTableCellCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "Removes the <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCell&quot;></xref> object at the specified index from the <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCellCollection&quot;></xref> collection."
  remarks: "Use this method to remove the <xref:System.Web.UI.HtmlControls.HtmlTableCell> object at the specified index from an <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection. The index number is zero-based; therefore, the first item in the collection has an index value of `0`.      > [!NOTE] >  If you specify an index that is outside the range of index values, an exception is raised."
  example:
  - "The following code example demonstrates how to use the RemoveAt method to remove the item at the specified index from the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> collection. This example removes the cells from the first column of the <xref:System.Web.UI.HtmlControls.HtmlTable> control.  \n  \n [!code-cs[HtmlTableCellCollectionRemoveAt#1](~/add/codesnippet/csharp/m-system.web.ui.htmlcont_5_1.aspx)]\n [!code-vb[HtmlTableCellCollectionRemoveAt#1](~/add/codesnippet/visualbasic/m-system.web.ui.htmlcont_5_1.aspx)]"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "The index of the <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCell&quot;></xref> to remove from the <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCellCollection&quot;></xref>."
  overload: System.Web.UI.HtmlControls.HtmlTableCellCollection.RemoveAt*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The specified index is outside the range of index values in the collection."
  platform:
  - net462
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.SyncRoot
  id: SyncRoot
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: HtmlTableCellCollection.SyncRoot
  fullName: System.Web.UI.HtmlControls.HtmlTableCellCollection.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.HtmlControls
  summary: "Gets the object that can be used to synchronize access to the <xref href=&quot;System.Web.UI.HtmlControls.HtmlTableCellCollection&quot;></xref> collection."
  remarks: "The object returned in this implementation is the current instance of the <xref:System.Web.UI.HtmlControls.HtmlTableCellCollection> class.       For more information on the SyncRoot property, see the <xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName> property of the <xref:System.Collections.ICollection?displayProperty=fullName> interface."
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "An object that can be used to synchronize access to the collection."
  overload: System.Web.UI.HtmlControls.HtmlTableCellCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.Add(System.Web.UI.HtmlControls.HtmlTableCell)
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  isExternal: false
  name: Add(HtmlTableCell)
  nameWithType: HtmlTableCellCollection.Add(HtmlTableCell)
  fullName: System.Web.UI.HtmlControls.HtmlTableCellCollection.Add(HtmlTableCell)
- uid: System.Web.UI.HtmlControls.HtmlTableCell
  parent: System.Web.UI.HtmlControls
  isExternal: false
  name: HtmlTableCell
  nameWithType: HtmlTableCell
  fullName: System.Web.UI.HtmlControls.HtmlTableCell
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.Clear
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  isExternal: false
  name: Clear()
  nameWithType: HtmlTableCellCollection.Clear()
  fullName: System.Web.UI.HtmlControls.HtmlTableCellCollection.Clear()
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: HtmlTableCellCollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.HtmlControls.HtmlTableCellCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.Count
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  isExternal: false
  name: Count
  nameWithType: HtmlTableCellCollection.Count
  fullName: System.Web.UI.HtmlControls.HtmlTableCellCollection.Count
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.GetEnumerator
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: HtmlTableCellCollection.GetEnumerator()
  fullName: System.Web.UI.HtmlControls.HtmlTableCellCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.Insert(System.Int32,System.Web.UI.HtmlControls.HtmlTableCell)
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  isExternal: false
  name: Insert(Int32,HtmlTableCell)
  nameWithType: HtmlTableCellCollection.Insert(Int32,HtmlTableCell)
  fullName: System.Web.UI.HtmlControls.HtmlTableCellCollection.Insert(Int32,HtmlTableCell)
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.IsReadOnly
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: HtmlTableCellCollection.IsReadOnly
  fullName: System.Web.UI.HtmlControls.HtmlTableCellCollection.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.IsSynchronized
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: HtmlTableCellCollection.IsSynchronized
  fullName: System.Web.UI.HtmlControls.HtmlTableCellCollection.IsSynchronized
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.Item(System.Int32)
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: HtmlTableCellCollection.Item(Int32)
  fullName: System.Web.UI.HtmlControls.HtmlTableCellCollection.Item(Int32)
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.Remove(System.Web.UI.HtmlControls.HtmlTableCell)
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  isExternal: false
  name: Remove(HtmlTableCell)
  nameWithType: HtmlTableCellCollection.Remove(HtmlTableCell)
  fullName: System.Web.UI.HtmlControls.HtmlTableCellCollection.Remove(HtmlTableCell)
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.RemoveAt(System.Int32)
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: HtmlTableCellCollection.RemoveAt(Int32)
  fullName: System.Web.UI.HtmlControls.HtmlTableCellCollection.RemoveAt(Int32)
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.SyncRoot
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  isExternal: false
  name: SyncRoot
  nameWithType: HtmlTableCellCollection.SyncRoot
  fullName: System.Web.UI.HtmlControls.HtmlTableCellCollection.SyncRoot
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.Add*
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  isExternal: false
  name: Add
  nameWithType: HtmlTableCellCollection.Add
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.Clear*
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  isExternal: false
  name: Clear
  nameWithType: HtmlTableCellCollection.Clear
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.CopyTo*
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  isExternal: false
  name: CopyTo
  nameWithType: HtmlTableCellCollection.CopyTo
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.Count*
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  isExternal: false
  name: Count
  nameWithType: HtmlTableCellCollection.Count
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.GetEnumerator*
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: HtmlTableCellCollection.GetEnumerator
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.Insert*
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  isExternal: false
  name: Insert
  nameWithType: HtmlTableCellCollection.Insert
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.IsReadOnly*
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: HtmlTableCellCollection.IsReadOnly
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.IsSynchronized*
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: HtmlTableCellCollection.IsSynchronized
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.Item*
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  isExternal: false
  name: Item
  nameWithType: HtmlTableCellCollection.Item
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.Remove*
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  isExternal: false
  name: Remove
  nameWithType: HtmlTableCellCollection.Remove
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.RemoveAt*
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  isExternal: false
  name: RemoveAt
  nameWithType: HtmlTableCellCollection.RemoveAt
- uid: System.Web.UI.HtmlControls.HtmlTableCellCollection.SyncRoot*
  parent: System.Web.UI.HtmlControls.HtmlTableCellCollection
  isExternal: false
  name: SyncRoot
  nameWithType: HtmlTableCellCollection.SyncRoot
