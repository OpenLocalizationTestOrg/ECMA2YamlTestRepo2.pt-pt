### YamlMime:ManagedReference
items:
- uid: System.Messaging.Cursor
  id: Cursor
  children:
  - System.Messaging.Cursor.Close
  - System.Messaging.Cursor.Dispose
  langs:
  - csharp
  name: Cursor
  nameWithType: Cursor
  fullName: System.Messaging.Cursor
  type: Class
  summary: "A Cursor is used to maintain a specific location in a <see cref=&quot;T:System.Messaging.MessageQueue&quot;></see> when reading the queue&quot;s messages."
  remarks: "To get a cursor for a <xref:System.Messaging.MessageQueue>, call the <xref:System.Messaging.MessageQueue.CreateCursor%2A> method for that queue.       A Cursor is used with such methods as <xref:System.Messaging.MessageQueue.Peek%28System.TimeSpan%2CSystem.Messaging.Cursor%2CSystem.Messaging.PeekAction%29> and <xref:System.Messaging.MessageQueue.Receive%28System.TimeSpan%2CSystem.Messaging.Cursor%29> when you need to read messages that are not at the front of the queue. This includes reading messages synchronously or asynchronously. Cursors do not need to be used to read only the first message in a queue.       When reading messages within a transaction, Message Queuing does not roll back cursor movement if the transaction is aborted. For example, suppose there is a queue with two messages, A1 and A2. If you remove message A1 while in a transaction, Message Queuing moves the cursor to message A2. However, if the transaction is aborted for any reason, message A1 is inserted back into the queue but the cursor remains pointing at message A2.       To close the cursor, call <xref:System.Messaging.Cursor.Close%2A>."
  syntax:
    content: 'public sealed class Cursor : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Messaging.Cursor.Close
  id: Close
  parent: System.Messaging.Cursor
  langs:
  - csharp
  name: Close()
  nameWithType: Cursor.Close()
  fullName: System.Messaging.Cursor.Close()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Closes the cursor, allowing Message Queuing to release the associated resources."
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Messaging.Cursor.Close*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Messaging.Cursor.Dispose
  id: Dispose
  parent: System.Messaging.Cursor
  langs:
  - csharp
  name: Dispose()
  nameWithType: Cursor.Dispose()
  fullName: System.Messaging.Cursor.Dispose()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Releases all resources used by the <see cref=&quot;T:System.Messaging.Cursor&quot;></see>."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Messaging.Cursor.Dispose*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Messaging.Cursor.Close
  parent: System.Messaging.Cursor
  isExternal: false
  name: Close()
  nameWithType: Cursor.Close()
  fullName: System.Messaging.Cursor.Close()
- uid: System.Messaging.Cursor.Dispose
  parent: System.Messaging.Cursor
  isExternal: false
  name: Dispose()
  nameWithType: Cursor.Dispose()
  fullName: System.Messaging.Cursor.Dispose()
- uid: System.Messaging.Cursor.Close*
  parent: System.Messaging.Cursor
  isExternal: false
  name: Close
  nameWithType: Cursor.Close
- uid: System.Messaging.Cursor.Dispose*
  parent: System.Messaging.Cursor
  isExternal: false
  name: Dispose
  nameWithType: Cursor.Dispose
