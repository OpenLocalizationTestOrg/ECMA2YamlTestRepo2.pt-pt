### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath
  id: DoubleAnimationUsingPath
  children:
  - System.Windows.Media.Animation.DoubleAnimationUsingPath.#ctor
  - System.Windows.Media.Animation.DoubleAnimationUsingPath.Clone
  - System.Windows.Media.Animation.DoubleAnimationUsingPath.CreateInstanceCore
  - System.Windows.Media.Animation.DoubleAnimationUsingPath.GetCurrentValueCore(System.Double,System.Double,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.DoubleAnimationUsingPath.IsAdditive
  - System.Windows.Media.Animation.DoubleAnimationUsingPath.IsCumulative
  - System.Windows.Media.Animation.DoubleAnimationUsingPath.OnChanged
  - System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry
  - System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometryProperty
  - System.Windows.Media.Animation.DoubleAnimationUsingPath.Source
  - System.Windows.Media.Animation.DoubleAnimationUsingPath.SourceProperty
  langs:
  - csharp
  name: DoubleAnimationUsingPath
  nameWithType: DoubleAnimationUsingPath
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath
  type: Class
  summary: "Animates o valor de um <xref:System.Double>propriedade entre dois ou mais valores de destino utilizando um <xref href=&quot;System.Windows.Media.PathGeometry&quot;> </xref> para especificar esses valores.</xref:System.Double> Este animação pode ser utilizada para mover um objeto visual ao longo de um caminho."
  remarks: "DoubleAnimationUsingPath utiliza interpolação linear através de um <xref:System.Windows.Media.Animation.Timeline.Duration%2A>.</xref:System.Windows.Media.Animation.Timeline.Duration%2A> especificado       DoubleAnimationUsingPath é semelhante à <xref:System.Windows.Media.Animation.DoubleAnimation>exceto que utiliza um <xref:System.Windows.Media.PathGeometry>para interpolate através de dois ou mais valores em vez disso, em seguida, entre apenas dois valores como <xref:System.Windows.Media.Animation.DoubleAnimation>.</xref:System.Windows.Media.Animation.DoubleAnimation> </xref:System.Windows.Media.PathGeometry> </xref:System.Windows.Media.Animation.DoubleAnimation> Embora <xref:System.Windows.Media.Animation.DoubleAnimation>é utilizado para a maioria das animações simples que envolve um valor duplo, DoubleAnimationUsingPath é particularmente também adequada para animating a posição de um objeto no ecrã.</xref:System.Windows.Media.Animation.DoubleAnimation>"
  syntax:
    content: 'public class DoubleAnimationUsingPath : System.Windows.Media.Animation.DoubleAnimationBase'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  - System.Windows.Media.Animation.Timeline
  - System.Windows.Media.Animation.AnimationTimeline
  - System.Windows.Media.Animation.DoubleAnimationBase
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Media.Animation.AnimationTimeline.AllocateClock
  - System.Windows.Media.Animation.AnimationTimeline.CreateClock
  - System.Windows.Media.Animation.AnimationTimeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)
  - System.Windows.Media.Animation.AnimationTimeline.IsAdditiveProperty
  - System.Windows.Media.Animation.AnimationTimeline.IsCumulativeProperty
  - System.Windows.Media.Animation.AnimationTimeline.IsDestinationDefault
  - System.Windows.Media.Animation.DoubleAnimationBase.GetCurrentValue(System.Double,System.Double,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.DoubleAnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.DoubleAnimationBase.TargetPropertyType
  - System.Windows.Media.Animation.Timeline.AccelerationRatio
  - System.Windows.Media.Animation.Timeline.AccelerationRatioProperty
  - System.Windows.Media.Animation.Timeline.AutoReverse
  - System.Windows.Media.Animation.Timeline.AutoReverseProperty
  - System.Windows.Media.Animation.Timeline.BeginTime
  - System.Windows.Media.Animation.Timeline.BeginTimeProperty
  - System.Windows.Media.Animation.Timeline.CloneCurrentValue
  - System.Windows.Media.Animation.Timeline.Completed
  - System.Windows.Media.Animation.Timeline.CreateClock(System.Boolean)
  - System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated
  - System.Windows.Media.Animation.Timeline.CurrentStateInvalidated
  - System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated
  - System.Windows.Media.Animation.Timeline.DecelerationRatio
  - System.Windows.Media.Animation.Timeline.DecelerationRatioProperty
  - System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty
  - System.Windows.Media.Animation.Timeline.Duration
  - System.Windows.Media.Animation.Timeline.DurationProperty
  - System.Windows.Media.Animation.Timeline.FillBehavior
  - System.Windows.Media.Animation.Timeline.FillBehaviorProperty
  - System.Windows.Media.Animation.Timeline.FreezeCore(System.Boolean)
  - System.Windows.Media.Animation.Timeline.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Media.Animation.Timeline.GetDesiredFrameRate(System.Windows.Media.Animation.Timeline)
  - System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)
  - System.Windows.Media.Animation.Timeline.Name
  - System.Windows.Media.Animation.Timeline.NameProperty
  - System.Windows.Media.Animation.Timeline.RemoveRequested
  - System.Windows.Media.Animation.Timeline.RepeatBehavior
  - System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty
  - System.Windows.Media.Animation.Timeline.SetDesiredFrameRate(System.Windows.Media.Animation.Timeline,System.Nullable{System.Int32})
  - System.Windows.Media.Animation.Timeline.SpeedRatio
  - System.Windows.Media.Animation.Timeline.SpeedRatioProperty
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.#ctor
  id: '#ctor'
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  langs:
  - csharp
  name: DoubleAnimationUsingPath()
  nameWithType: DoubleAnimationUsingPath.DoubleAnimationUsingPath()
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.DoubleAnimationUsingPath()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.Media.Animation.DoubleAnimationUsingPath&quot;> </xref> classe."
  remarks: "Não há nenhum predefinido <xref:System.Windows.Media.PathGeometry>para que o utilizador tem de especificar um.</xref:System.Windows.Media.PathGeometry>"
  syntax:
    content: public DoubleAnimationUsingPath ();
    parameters: []
  overload: System.Windows.Media.Animation.DoubleAnimationUsingPath.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.Clone
  id: Clone
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  langs:
  - csharp
  name: Clone()
  nameWithType: DoubleAnimationUsingPath.Clone()
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Cria um clone modificável deste <xref href=&quot;System.Windows.Media.Animation.DoubleAnimationUsingPath&quot;> </xref>, efetuar cópias profundas de valores deste objeto. Quando copiar propriedades de dependência, este método copia enlaces de referências e os dados de recursos (mas já não poderão resolver), mas não animações ou os respetivos valores atuais."
  remarks: "Este método é utilizado para produzir modificável cópias congeladas <xref:System.Windows.Freezable>objetos (ou qualquer <xref:System.Windows.Freezable>objeto).</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> Para sua comodidade, este método funciona como sombra a versão herdada por uma implementação com tipo seguro.       Para obter mais informações, consulte <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.</xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Media.Animation.DoubleAnimationUsingPath Clone ();
    parameters: []
    return:
      type: System.Windows.Media.Animation.DoubleAnimationUsingPath
      description: "Um clone modificável do objeto atual. O objeto clonado <> </> *> propriedade serão <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> , mesmo se a origem <> </> *> propriedade foi<xref uid=&quot;langword_csharp_true.&quot; name=&quot;true.&quot; href=&quot;&quot;></xref>"
  overload: System.Windows.Media.Animation.DoubleAnimationUsingPath.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: DoubleAnimationUsingPath.CreateInstanceCore()
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Implementação de <xref:System.Windows.Freezable.CreateInstanceCore*>.</xref:System.Windows.Freezable.CreateInstanceCore*>"
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "A nova <xref href=&quot;System.Windows.Freezable&quot;> </xref> criado."
  overload: System.Windows.Media.Animation.DoubleAnimationUsingPath.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.GetCurrentValueCore(System.Double,System.Double,System.Windows.Media.Animation.AnimationClock)
  id: GetCurrentValueCore(System.Double,System.Double,System.Windows.Media.Animation.AnimationClock)
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  langs:
  - csharp
  name: GetCurrentValueCore(Double,Double,AnimationClock)
  nameWithType: DoubleAnimationUsingPath.GetCurrentValueCore(Double,Double,AnimationClock)
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.GetCurrentValueCore(Double,Double,AnimationClock)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Calcula um valor que representa o valor atual da propriedade que está a ser animada, conforme determinado pelo <xref href=&quot;System.Windows.Media.Animation.DoubleAnimationUsingPath&quot;> </xref>."
  remarks: "Se o `defaultOriginValue` é o primeiro na cadeia de composição, este valor será o valor de instantâneo (se disponível) ou o valor da propriedade base; caso contrário, este valor será o valor devolvido pela animação anterior na cadeia com um <xref:System.Windows.Media.Animation.AnimationClock>que não é <xref:System.Windows.Media.Animation.Clock.Stopped%2A>.</xref:System.Windows.Media.Animation.Clock.Stopped%2A> </xref:System.Windows.Media.Animation.AnimationClock>       O `defaultDestinationValue` é o valor base se a animação está a ser a primeira camada de composição de animações numa propriedade; caso contrário, o valor é o valor de saída entre a camada de composição anterior de animações para a propriedade."
  syntax:
    content: protected override double GetCurrentValueCore (double defaultOriginValue, double defaultDestinationValue, System.Windows.Media.Animation.AnimationClock animationClock);
    parameters:
    - id: defaultOriginValue
      type: System.Double
      description: "Utilizado se a animação não tem as suas próprias definido explicitamente o valor de origem sugeridos iniciar valor."
    - id: defaultDestinationValue
      type: System.Double
      description: "Utilizado se a animação não tem as suas próprias definido explicitamente o valor de destino sugeridos terminar valor."
    - id: animationClock
      type: System.Windows.Media.Animation.AnimationClock
      description: "Um <xref href=&quot;System.Windows.Media.Animation.AnimationClock&quot;> </xref> que gera o <> </> *> ou <> </> *> utilizado pela animação."
    return:
      type: System.Double
      description: "O valor calculado da propriedade, conforme determinado pela animação atual."
  overload: System.Windows.Media.Animation.DoubleAnimationUsingPath.GetCurrentValueCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.IsAdditive
  id: IsAdditive
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  langs:
  - csharp
  name: IsAdditive
  nameWithType: DoubleAnimationUsingPath.IsAdditive
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.IsAdditive
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Obtém ou define um valor que indica se o valor atual da propriedade de destino deve ser adicionado ao valor inicial este animação."
  remarks: "<a name=&quot;dependencyPropertyInfo_Additive&quot;></a># # Informações de propriedade de dependência |||   |-|-|   | Campo Identificador | <xref:System.Windows.Media.Animation.AnimationTimeline.IsAdditiveProperty>|   | Definir propriedades de metadados `true`| Nenhum |      > [!NOTE] >, É pouco usual esta propriedade de dependência na medida em que o campo de identificador para o mesmo é proveniente de <xref:System.Windows.Media.Animation.AnimationTimeline>e é partilhado por várias classes derivadas.</xref:System.Windows.Media.Animation.AnimationTimeline> </xref:System.Windows.Media.Animation.AnimationTimeline.IsAdditiveProperty>"
  syntax:
    content: public bool IsAdditive { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a propriedade target actual do valor deve ser adicionado ao valor inicial este animação; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O valor predefinido é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Media.Animation.DoubleAnimationUsingPath.IsAdditive*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.IsCumulative
  id: IsCumulative
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  langs:
  - csharp
  name: IsCumulative
  nameWithType: DoubleAnimationUsingPath.IsCumulative
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.IsCumulative
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Obtém ou define um valor que especifica se o valor a animação acumula quando repete."
  remarks: "Quando esta propriedade está definida como `true`, a animação de saída do valores acumularem apenas quando a animação <xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A>propriedade faz com que a para repetir a sua duração simple.</xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A> Não acumular os respetivos valores quando esta reiniciar porque o respetivo elemento principal repetido ou porque o relógio foi reiniciado a partir de um <xref:System.Windows.Media.Animation.ClockController.Begin%2A>chamar.</xref:System.Windows.Media.Animation.ClockController.Begin%2A>      <a name=&quot;dependencyPropertyInfo_Cumulative&quot;></a># # Informações de propriedade de dependência |||   |-|-|   | Campo Identificador | <xref:System.Windows.Media.Animation.AnimationTimeline.IsCumulativeProperty>|   | Definir propriedades de metadados `true`| Nenhum |      > [!NOTE] >, É pouco usual esta propriedade de dependência na medida em que o campo de identificador para o mesmo é proveniente de <xref:System.Windows.Media.Animation.AnimationTimeline>e é partilhado por várias classes derivadas.</xref:System.Windows.Media.Animation.AnimationTimeline> </xref:System.Windows.Media.Animation.AnimationTimeline.IsCumulativeProperty>"
  syntax:
    content: public bool IsCumulative { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a animação acumula os respetivos valores ao respetivo <xref:System.Windows.Media.Animation.Timeline.RepeatBehavior*>propriedade faz com que a para repetir a sua duração simple.</xref:System.Windows.Media.Animation.Timeline.RepeatBehavior*> caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O valor predefinido é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Media.Animation.DoubleAnimationUsingPath.IsCumulative*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.OnChanged
  id: OnChanged
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  langs:
  - csharp
  name: OnChanged()
  nameWithType: DoubleAnimationUsingPath.OnChanged()
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.OnChanged()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Chamado quando este <xref href=&quot;System.Windows.Media.Animation.DoubleAnimationUsingPath&quot;> </xref> está modificado."
  syntax:
    content: protected override void OnChanged ();
    parameters: []
  overload: System.Windows.Media.Animation.DoubleAnimationUsingPath.OnChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry
  id: PathGeometry
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  langs:
  - csharp
  name: PathGeometry
  nameWithType: DoubleAnimationUsingPath.PathGeometry
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Especifica da geometria utilizada para gerar valores de saída este animação."
  remarks: "No [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)], pode utilizar uma sintaxe abreviada especial para descrever o caminho.       [!code-xml[PathAnimationGallery_snip #DoubleAnimationUsingPathAttributeSyntaxExample](~/add/codesnippet/xaml/p-system.windows.media.a_6_1.xaml)][!code-xml[PathAnimationGallery_snip #DoubleAnimationUsingPathAttributeSyntaxExample](~/add/codesnippet/xaml/p-system.windows.media.a_6_1.xaml) ] para obter mais informações sobre a sintaxe do markup de PathGeometry, consulte [sintaxe do Markup caminho](~/add/includes/ajax-current-ext-md.md).   Para obter mais exemplos de criação de um caminho utilizando marcação ou código, consulte <xref:System.Windows.Media.PathGeometry>.</xref:System.Windows.Media.PathGeometry>      <a name=&quot;dependencyPropertyInfo_PathGeometry&quot;></a># # Informações de propriedade de dependência |||   |-|-|   | Campo Identificador | <xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometryProperty>|   | Definir propriedades de metadados `true`| Nenhum |</xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometryProperty>"
  syntax:
    content: public System.Windows.Media.PathGeometry PathGeometry { get; set; }
    return:
      type: System.Windows.Media.PathGeometry
      description: "Valores de saída do caminho utilizado para gerar este animação. O valor predefinido é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometryProperty
  id: PathGeometryProperty
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  langs:
  - csharp
  name: PathGeometryProperty
  nameWithType: DoubleAnimationUsingPath.PathGeometryProperty
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometryProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Identifica o <xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry*>propriedade de dependência.</xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty PathGeometryProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.Source
  id: Source
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  langs:
  - csharp
  name: Source
  nameWithType: DoubleAnimationUsingPath.Source
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.Source
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Obtém ou define o aspeto deste animação <xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry*>que determina o valor de saída.</xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry*>"
  remarks: "<a name=&quot;dependencyPropertyInfo_Source&quot;></a># # Informações de propriedade de dependência |||   |-|-|   | Campo Identificador | <xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.SourceProperty>|   | Definir propriedades de metadados `true`| Nenhum |</xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.SourceProperty>"
  syntax:
    content: public System.Windows.Media.Animation.PathAnimationSource Source { get; set; }
    return:
      type: System.Windows.Media.Animation.PathAnimationSource
      description: "O aspeto deste animação <xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry*>que determina o valor de saída.</xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry*> O valor predefinido é <xref href=&quot;System.Windows.Media.Animation.PathAnimationSource&quot;> </xref>."
  overload: System.Windows.Media.Animation.DoubleAnimationUsingPath.Source*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.SourceProperty
  id: SourceProperty
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  langs:
  - csharp
  name: SourceProperty
  nameWithType: DoubleAnimationUsingPath.SourceProperty
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.SourceProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Identifica o <xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.Source*>propriedade de dependência.</xref:System.Windows.Media.Animation.DoubleAnimationUsingPath.Source*>"
  syntax:
    content: public static readonly System.Windows.DependencyProperty SourceProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Animation.DoubleAnimationBase
  isExternal: false
  name: System.Windows.Media.Animation.DoubleAnimationBase
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.#ctor
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: DoubleAnimationUsingPath()
  nameWithType: DoubleAnimationUsingPath.DoubleAnimationUsingPath()
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.DoubleAnimationUsingPath()
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.Clone
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: Clone()
  nameWithType: DoubleAnimationUsingPath.Clone()
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.Clone()
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath
  parent: System.Windows.Media.Animation
  isExternal: false
  name: DoubleAnimationUsingPath
  nameWithType: DoubleAnimationUsingPath
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.CreateInstanceCore
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: DoubleAnimationUsingPath.CreateInstanceCore()
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.CreateInstanceCore()
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.GetCurrentValueCore(System.Double,System.Double,System.Windows.Media.Animation.AnimationClock)
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: GetCurrentValueCore(Double,Double,AnimationClock)
  nameWithType: DoubleAnimationUsingPath.GetCurrentValueCore(Double,Double,AnimationClock)
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.GetCurrentValueCore(Double,Double,AnimationClock)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Media.Animation.AnimationClock
  parent: System.Windows.Media.Animation
  isExternal: false
  name: AnimationClock
  nameWithType: AnimationClock
  fullName: System.Windows.Media.Animation.AnimationClock
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.IsAdditive
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: IsAdditive
  nameWithType: DoubleAnimationUsingPath.IsAdditive
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.IsAdditive
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.IsCumulative
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: IsCumulative
  nameWithType: DoubleAnimationUsingPath.IsCumulative
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.IsCumulative
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.OnChanged
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: OnChanged()
  nameWithType: DoubleAnimationUsingPath.OnChanged()
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.OnChanged()
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: PathGeometry
  nameWithType: DoubleAnimationUsingPath.PathGeometry
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry
- uid: System.Windows.Media.PathGeometry
  parent: System.Windows.Media
  isExternal: false
  name: PathGeometry
  nameWithType: PathGeometry
  fullName: System.Windows.Media.PathGeometry
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometryProperty
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: PathGeometryProperty
  nameWithType: DoubleAnimationUsingPath.PathGeometryProperty
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometryProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.Source
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: Source
  nameWithType: DoubleAnimationUsingPath.Source
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.Source
- uid: System.Windows.Media.Animation.PathAnimationSource
  parent: System.Windows.Media.Animation
  isExternal: false
  name: PathAnimationSource
  nameWithType: PathAnimationSource
  fullName: System.Windows.Media.Animation.PathAnimationSource
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.SourceProperty
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: SourceProperty
  nameWithType: DoubleAnimationUsingPath.SourceProperty
  fullName: System.Windows.Media.Animation.DoubleAnimationUsingPath.SourceProperty
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.#ctor*
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: DoubleAnimationUsingPath
  nameWithType: DoubleAnimationUsingPath.DoubleAnimationUsingPath
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.Clone*
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: Clone
  nameWithType: DoubleAnimationUsingPath.Clone
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.CreateInstanceCore*
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: CreateInstanceCore
  nameWithType: DoubleAnimationUsingPath.CreateInstanceCore
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.GetCurrentValueCore*
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: GetCurrentValueCore
  nameWithType: DoubleAnimationUsingPath.GetCurrentValueCore
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.IsAdditive*
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: IsAdditive
  nameWithType: DoubleAnimationUsingPath.IsAdditive
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.IsCumulative*
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: IsCumulative
  nameWithType: DoubleAnimationUsingPath.IsCumulative
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.OnChanged*
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: OnChanged
  nameWithType: DoubleAnimationUsingPath.OnChanged
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.PathGeometry*
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: PathGeometry
  nameWithType: DoubleAnimationUsingPath.PathGeometry
- uid: System.Windows.Media.Animation.DoubleAnimationUsingPath.Source*
  parent: System.Windows.Media.Animation.DoubleAnimationUsingPath
  isExternal: false
  name: Source
  nameWithType: DoubleAnimationUsingPath.Source
