### YamlMime:ManagedReference
items:
- uid: System.Workflow.ComponentModel.Design.DesignerGlyph
  id: DesignerGlyph
  children:
  - System.Workflow.ComponentModel.Design.DesignerGlyph.#ctor
  - System.Workflow.ComponentModel.Design.DesignerGlyph.CanBeActivated
  - System.Workflow.ComponentModel.Design.DesignerGlyph.GetBounds(System.Workflow.ComponentModel.Design.ActivityDesigner,System.Boolean)
  - System.Workflow.ComponentModel.Design.DesignerGlyph.HighestPriority
  - System.Workflow.ComponentModel.Design.DesignerGlyph.LowestPriority
  - System.Workflow.ComponentModel.Design.DesignerGlyph.NormalPriority
  - System.Workflow.ComponentModel.Design.DesignerGlyph.OnActivate(System.Workflow.ComponentModel.Design.ActivityDesigner)
  - System.Workflow.ComponentModel.Design.DesignerGlyph.OnPaint(System.Drawing.Graphics,System.Boolean,System.Workflow.ComponentModel.Design.AmbientTheme,System.Workflow.ComponentModel.Design.ActivityDesigner)
  - System.Workflow.ComponentModel.Design.DesignerGlyph.Priority
  langs:
  - csharp
  name: DesignerGlyph
  nameWithType: DesignerGlyph
  fullName: System.Workflow.ComponentModel.Design.DesignerGlyph
  type: Class
  summary: "Draws a glyph at the top-most Z order position on an activity designer."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       The DesignerGlyph class is the base class for all designer glyphs used on a workflow design surface.       Activity designer developers can use classes that inherit from DesignerGlyph to draw custom glyphs onto the surface of an <xref:System.Workflow.ComponentModel.Design.ActivityDesigner>. DesignerGlyph classes draw such glyphs at the top-level Z order, which places the custom glyph visually on top of all other glyphs on the designer based on the <xref:System.Workflow.ComponentModel.Design.DesignerGlyph.Priority%2A> value of the custom glyph. A lower value for the <xref:System.Workflow.ComponentModel.Design.DesignerGlyph.Priority%2A> property indicates a higher priority and therefore draws the glyph at the top-most Z order position on an activity designer."
  example:
  - "The following code example demonstrates a glyph class that derives from the DesignerGlyph class.  The code overrides the <xref:System.Workflow.ComponentModel.Design.DesignerGlyph.GetBounds%2A> and <xref:System.Workflow.ComponentModel.Design.DesignerGlyph.OnPaint%2A> methods.  \n  \n This code example is part of the Workflow Monitor SDK Sample from the DesignerGlyphProvider.cs file. For more information, see [Workflow Monitor](http://msdn.microsoft.com/en-us/4f70c1c5-f82d-4d5f-8b7d-943b9f99f8e2).  \n  \n [!code-cs[WF_Samples#132](~/add/codesnippet/csharp/wf_snippets/snippets1.cs#132)]\n [!code-vb[WF_Samples#132](~/add/codesnippet/visualbasic/wf_snippets/snippets1.vb#132)]"
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public abstract class DesignerGlyph
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Design.DesignerGlyph.#ctor
  id: '#ctor'
  parent: System.Workflow.ComponentModel.Design.DesignerGlyph
  langs:
  - csharp
  name: DesignerGlyph()
  nameWithType: DesignerGlyph.DesignerGlyph()
  fullName: System.Workflow.ComponentModel.Design.DesignerGlyph.DesignerGlyph()
  type: Constructor
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Design
  summary: "When implemented in a derived class, initializes a new instance of the <xref href=&quot;System.Workflow.ComponentModel.Design.DesignerGlyph&quot;></xref> class."
  syntax:
    content: protected DesignerGlyph ();
    parameters: []
  overload: System.Workflow.ComponentModel.Design.DesignerGlyph.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Design.DesignerGlyph.CanBeActivated
  id: CanBeActivated
  parent: System.Workflow.ComponentModel.Design.DesignerGlyph
  langs:
  - csharp
  name: CanBeActivated
  nameWithType: DesignerGlyph.CanBeActivated
  fullName: System.Workflow.ComponentModel.Design.DesignerGlyph.CanBeActivated
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Design
  summary: "Gets a value indicating whether the <xref href=&quot;System.Workflow.ComponentModel.Design.DesignerGlyph&quot;></xref> can gain focus on the <xref href=&quot;System.Workflow.ComponentModel.Design.ActivityDesigner&quot;></xref> with which it is associated."
  remarks: ''
  example:
  - "The following example demonstrates an implementation of the CanBeActivated property.  This example is from the Tracking Profile Designer SDK sample.  For more information, see [Tracking Profile Designer Sample](http://msdn.microsoft.com/en-us/a280199c-3000-4148-ac63-cb5aaeac07c8).  \n  \n [!code-cs[WF_Samples#119](~/add/codesnippet/csharp/wf_snippets/snippets1.cs#119)]\n [!code-vb[WF_Samples#119](~/add/codesnippet/visualbasic/wf_snippets/snippets1.vb#119)]"
  syntax:
    content: public virtual bool CanBeActivated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the designer glyph can be activated; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Workflow.ComponentModel.Design.DesignerGlyph.CanBeActivated*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Design.DesignerGlyph.GetBounds(System.Workflow.ComponentModel.Design.ActivityDesigner,System.Boolean)
  id: GetBounds(System.Workflow.ComponentModel.Design.ActivityDesigner,System.Boolean)
  parent: System.Workflow.ComponentModel.Design.DesignerGlyph
  langs:
  - csharp
  name: GetBounds(ActivityDesigner,Boolean)
  nameWithType: DesignerGlyph.GetBounds(ActivityDesigner,Boolean)
  fullName: System.Workflow.ComponentModel.Design.DesignerGlyph.GetBounds(ActivityDesigner,Boolean)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Design
  summary: "Returns the bounds for the glyph on the specified <xref href=&quot;System.Workflow.ComponentModel.Design.ActivityDesigner&quot;></xref>."
  remarks: "Unless overridden in a derived class, GetBounds returns the bounds of the activity designer with which the glyph is associated."
  example:
  - "The following code example demonstrates how you can override the GetBounds method. The code sets the size and location of the custom glyph object.  \n  \n This code example is part of the Workflow Monitor SDK Sample from the DesignerGlyphProvider.cs file. For more information, see [Workflow Monitor](http://msdn.microsoft.com/en-us/4f70c1c5-f82d-4d5f-8b7d-943b9f99f8e2).  \n  \n [!code-cs[WF_Samples#133](~/add/codesnippet/csharp/wf_snippets/snippets1.cs#133)]\n [!code-vb[WF_Samples#133](~/add/codesnippet/visualbasic/wf_snippets/snippets1.vb#133)]"
  syntax:
    content: public virtual System.Drawing.Rectangle GetBounds (System.Workflow.ComponentModel.Design.ActivityDesigner designer, bool activated);
    parameters:
    - id: designer
      type: System.Workflow.ComponentModel.Design.ActivityDesigner
      description: "The <xref href=&quot;System.Workflow.ComponentModel.Design.ActivityDesigner&quot;></xref> with which the glyph is associated."
    - id: activated
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to indicate whether the glyph appears on the activity designer surface; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;></xref> that represents the bounds for the glyph."
  overload: System.Workflow.ComponentModel.Design.DesignerGlyph.GetBounds*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>designer</code> contains a null reference (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> in Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Design.DesignerGlyph.HighestPriority
  id: HighestPriority
  parent: System.Workflow.ComponentModel.Design.DesignerGlyph
  langs:
  - csharp
  name: HighestPriority
  nameWithType: DesignerGlyph.HighestPriority
  fullName: System.Workflow.ComponentModel.Design.DesignerGlyph.HighestPriority
  type: Field
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Design
  summary: "Represents the highest priority possible for a <xref href=&quot;System.Workflow.ComponentModel.Design.DesignerGlyph&quot;></xref>. This value is a constant."
  remarks: "A lower value for the <xref:System.Workflow.ComponentModel.Design.DesignerGlyph.Priority%2A> property indicates a higher priority and therefore draws the glyph at the top-most Z order position on an activity designer. The value of the HighestPriority field is 0.      > [!NOTE] >  This constant value serves as a guideline when creating custom glyphs. You are free to use different values for the <xref:System.Workflow.ComponentModel.Design.DesignerGlyph.Priority%2A> property when designing your custom glyph."
  syntax:
    content: public const int HighestPriority = 0;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Design.DesignerGlyph.LowestPriority
  id: LowestPriority
  parent: System.Workflow.ComponentModel.Design.DesignerGlyph
  langs:
  - csharp
  name: LowestPriority
  nameWithType: DesignerGlyph.LowestPriority
  fullName: System.Workflow.ComponentModel.Design.DesignerGlyph.LowestPriority
  type: Field
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Design
  summary: "Represents the lowest priority possible for a <xref href=&quot;System.Workflow.ComponentModel.Design.DesignerGlyph&quot;></xref>. This value is a constant."
  remarks: "A high value for the <xref:System.Workflow.ComponentModel.Design.DesignerGlyph.Priority%2A> property indicates a lower priority and therefore draws the glyph at the bottom-most Z order position on an activity designer. The value of the LowestPriority field is 1000000.      > [!NOTE] >  This constant value serves as a guideline when creating custom glyphs. You are free to use different values for the <xref:System.Workflow.ComponentModel.Design.DesignerGlyph.Priority%2A> property when designing your custom glyph."
  syntax:
    content: public const int LowestPriority = 1000000;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Design.DesignerGlyph.NormalPriority
  id: NormalPriority
  parent: System.Workflow.ComponentModel.Design.DesignerGlyph
  langs:
  - csharp
  name: NormalPriority
  nameWithType: DesignerGlyph.NormalPriority
  fullName: System.Workflow.ComponentModel.Design.DesignerGlyph.NormalPriority
  type: Field
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Design
  summary: "Represents the normal priority for a <xref href=&quot;System.Workflow.ComponentModel.Design.DesignerGlyph&quot;></xref>. This value is a constant."
  remarks: "A lower value for the <xref:System.Workflow.ComponentModel.Design.DesignerGlyph.Priority%2A> property indicates a higher priority whereas a higher value indicates a lower priority. The value of the NormalPriority field is 10000.      > [!NOTE] >  This constant value serves as a guideline when creating custom glyphs. You are free to use different values for the <xref:System.Workflow.ComponentModel.Design.DesignerGlyph.Priority%2A> property when designing your custom glyph."
  syntax:
    content: public const int NormalPriority = 10000;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Design.DesignerGlyph.OnActivate(System.Workflow.ComponentModel.Design.ActivityDesigner)
  id: OnActivate(System.Workflow.ComponentModel.Design.ActivityDesigner)
  parent: System.Workflow.ComponentModel.Design.DesignerGlyph
  langs:
  - csharp
  name: OnActivate(ActivityDesigner)
  nameWithType: DesignerGlyph.OnActivate(ActivityDesigner)
  fullName: System.Workflow.ComponentModel.Design.DesignerGlyph.OnActivate(ActivityDesigner)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Design
  summary: "Indicates to the glyph that an action has been performed which has activated the glyph."
  remarks: ''
  example:
  - "The following example demonstrates an implementation of the OnActivate method.  This example is from the Tracking Profile Designer SDK sample.  For more information, see [Tracking Profile Designer Sample](http://msdn.microsoft.com/en-us/a280199c-3000-4148-ac63-cb5aaeac07c8).  \n  \n [!code-cs[WF_Samples#119](~/add/codesnippet/csharp/wf_snippets/snippets1.cs#119)]\n [!code-vb[WF_Samples#119](~/add/codesnippet/visualbasic/wf_snippets/snippets1.vb#119)]"
  syntax:
    content: protected virtual void OnActivate (System.Workflow.ComponentModel.Design.ActivityDesigner designer);
    parameters:
    - id: designer
      type: System.Workflow.ComponentModel.Design.ActivityDesigner
      description: "The <xref href=&quot;System.Workflow.ComponentModel.Design.ActivityDesigner&quot;></xref> on which the glyph is drawn."
  overload: System.Workflow.ComponentModel.Design.DesignerGlyph.OnActivate*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Design.DesignerGlyph.OnPaint(System.Drawing.Graphics,System.Boolean,System.Workflow.ComponentModel.Design.AmbientTheme,System.Workflow.ComponentModel.Design.ActivityDesigner)
  id: OnPaint(System.Drawing.Graphics,System.Boolean,System.Workflow.ComponentModel.Design.AmbientTheme,System.Workflow.ComponentModel.Design.ActivityDesigner)
  parent: System.Workflow.ComponentModel.Design.DesignerGlyph
  langs:
  - csharp
  name: OnPaint(Graphics,Boolean,AmbientTheme,ActivityDesigner)
  nameWithType: DesignerGlyph.OnPaint(Graphics,Boolean,AmbientTheme,ActivityDesigner)
  fullName: System.Workflow.ComponentModel.Design.DesignerGlyph.OnPaint(Graphics,Boolean,AmbientTheme,ActivityDesigner)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Design
  summary: "When overridden in a derived class, performs any tasks required to render the glyph on the activity designer surface."
  remarks: "OnPaint uses <xref:System.Workflow.ComponentModel.Design.AmbientTheme.CommentIndicatorPen%2A> to draw the bounds of the comment glyph and <xref:System.Workflow.ComponentModel.Design.AmbientTheme.CommentIndicatorBrush%2A> to fill it."
  example:
  - "The following code example demonstrates how you can override the OnPaint method. The code customizes how to draw the glyph object on the activity designer with which the glyph is associated.  \n  \n This code example is part of the Workflow Monitor SDK Sample from the DesignerGlyphProvider.cs file. For more information, see [Workflow Monitor](http://msdn.microsoft.com/en-us/4f70c1c5-f82d-4d5f-8b7d-943b9f99f8e2).  \n  \n [!code-cs[WF_Samples#134](~/add/codesnippet/csharp/wf_snippets/snippets1.cs#134)]\n [!code-vb[WF_Samples#134](~/add/codesnippet/visualbasic/wf_snippets/snippets1.vb#134)]"
  syntax:
    content: protected abstract void OnPaint (System.Drawing.Graphics graphics, bool activated, System.Workflow.ComponentModel.Design.AmbientTheme ambientTheme, System.Workflow.ComponentModel.Design.ActivityDesigner designer);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "The <xref href=&quot;System.Drawing.Graphics&quot;></xref> to perform fill and drawing tasks."
    - id: activated
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to indicate that the glyph appears on the design surface; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: ambientTheme
      type: System.Workflow.ComponentModel.Design.AmbientTheme
      description: "The <xref href=&quot;System.Workflow.ComponentModel.Design.AmbientTheme&quot;></xref> to use to access ambient property settings."
    - id: designer
      type: System.Workflow.ComponentModel.Design.ActivityDesigner
      description: "The <xref href=&quot;System.Workflow.ComponentModel.Design.ActivityDesigner&quot;></xref> from which to obtain information about user actions."
  overload: System.Workflow.ComponentModel.Design.DesignerGlyph.OnPaint*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Design.DesignerGlyph.Priority
  id: Priority
  parent: System.Workflow.ComponentModel.Design.DesignerGlyph
  langs:
  - csharp
  name: Priority
  nameWithType: DesignerGlyph.Priority
  fullName: System.Workflow.ComponentModel.Design.DesignerGlyph.Priority
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel.Design
  summary: "Gets the priority setting for the designer glyph on the activity design surface."
  syntax:
    content: public virtual int Priority { get; }
    return:
      type: System.Int32
      description: "An integer value that represents the priority setting for the <xref href=&quot;System.Workflow.ComponentModel.Design.DesignerGlyph&quot;></xref> on the activity designer surface. A lower value indicates a higher priority and therefore draws the glyph at the top-most Z order position on an activity designer."
  overload: System.Workflow.ComponentModel.Design.DesignerGlyph.Priority*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Workflow.ComponentModel.Design.DesignerGlyph.#ctor
  parent: System.Workflow.ComponentModel.Design.DesignerGlyph
  isExternal: false
  name: DesignerGlyph()
  nameWithType: DesignerGlyph.DesignerGlyph()
  fullName: System.Workflow.ComponentModel.Design.DesignerGlyph.DesignerGlyph()
- uid: System.Workflow.ComponentModel.Design.DesignerGlyph.CanBeActivated
  parent: System.Workflow.ComponentModel.Design.DesignerGlyph
  isExternal: false
  name: CanBeActivated
  nameWithType: DesignerGlyph.CanBeActivated
  fullName: System.Workflow.ComponentModel.Design.DesignerGlyph.CanBeActivated
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.ComponentModel.Design.DesignerGlyph.GetBounds(System.Workflow.ComponentModel.Design.ActivityDesigner,System.Boolean)
  parent: System.Workflow.ComponentModel.Design.DesignerGlyph
  isExternal: false
  name: GetBounds(ActivityDesigner,Boolean)
  nameWithType: DesignerGlyph.GetBounds(ActivityDesigner,Boolean)
  fullName: System.Workflow.ComponentModel.Design.DesignerGlyph.GetBounds(ActivityDesigner,Boolean)
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Workflow.ComponentModel.Design.ActivityDesigner
  parent: System.Workflow.ComponentModel.Design
  isExternal: false
  name: ActivityDesigner
  nameWithType: ActivityDesigner
  fullName: System.Workflow.ComponentModel.Design.ActivityDesigner
- uid: System.Workflow.ComponentModel.Design.DesignerGlyph.HighestPriority
  parent: System.Workflow.ComponentModel.Design.DesignerGlyph
  isExternal: false
  name: HighestPriority
  nameWithType: DesignerGlyph.HighestPriority
  fullName: System.Workflow.ComponentModel.Design.DesignerGlyph.HighestPriority
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Workflow.ComponentModel.Design.DesignerGlyph.LowestPriority
  parent: System.Workflow.ComponentModel.Design.DesignerGlyph
  isExternal: false
  name: LowestPriority
  nameWithType: DesignerGlyph.LowestPriority
  fullName: System.Workflow.ComponentModel.Design.DesignerGlyph.LowestPriority
- uid: System.Workflow.ComponentModel.Design.DesignerGlyph.NormalPriority
  parent: System.Workflow.ComponentModel.Design.DesignerGlyph
  isExternal: false
  name: NormalPriority
  nameWithType: DesignerGlyph.NormalPriority
  fullName: System.Workflow.ComponentModel.Design.DesignerGlyph.NormalPriority
- uid: System.Workflow.ComponentModel.Design.DesignerGlyph.OnActivate(System.Workflow.ComponentModel.Design.ActivityDesigner)
  parent: System.Workflow.ComponentModel.Design.DesignerGlyph
  isExternal: false
  name: OnActivate(ActivityDesigner)
  nameWithType: DesignerGlyph.OnActivate(ActivityDesigner)
  fullName: System.Workflow.ComponentModel.Design.DesignerGlyph.OnActivate(ActivityDesigner)
- uid: System.Workflow.ComponentModel.Design.DesignerGlyph.OnPaint(System.Drawing.Graphics,System.Boolean,System.Workflow.ComponentModel.Design.AmbientTheme,System.Workflow.ComponentModel.Design.ActivityDesigner)
  parent: System.Workflow.ComponentModel.Design.DesignerGlyph
  isExternal: false
  name: OnPaint(Graphics,Boolean,AmbientTheme,ActivityDesigner)
  nameWithType: DesignerGlyph.OnPaint(Graphics,Boolean,AmbientTheme,ActivityDesigner)
  fullName: System.Workflow.ComponentModel.Design.DesignerGlyph.OnPaint(Graphics,Boolean,AmbientTheme,ActivityDesigner)
- uid: System.Drawing.Graphics
  parent: System.Drawing
  isExternal: false
  name: Graphics
  nameWithType: Graphics
  fullName: System.Drawing.Graphics
- uid: System.Workflow.ComponentModel.Design.AmbientTheme
  parent: System.Workflow.ComponentModel.Design
  isExternal: false
  name: AmbientTheme
  nameWithType: AmbientTheme
  fullName: System.Workflow.ComponentModel.Design.AmbientTheme
- uid: System.Workflow.ComponentModel.Design.DesignerGlyph.Priority
  parent: System.Workflow.ComponentModel.Design.DesignerGlyph
  isExternal: false
  name: Priority
  nameWithType: DesignerGlyph.Priority
  fullName: System.Workflow.ComponentModel.Design.DesignerGlyph.Priority
- uid: System.Workflow.ComponentModel.Design.DesignerGlyph.#ctor*
  parent: System.Workflow.ComponentModel.Design.DesignerGlyph
  isExternal: false
  name: DesignerGlyph
  nameWithType: DesignerGlyph.DesignerGlyph
- uid: System.Workflow.ComponentModel.Design.DesignerGlyph.CanBeActivated*
  parent: System.Workflow.ComponentModel.Design.DesignerGlyph
  isExternal: false
  name: CanBeActivated
  nameWithType: DesignerGlyph.CanBeActivated
- uid: System.Workflow.ComponentModel.Design.DesignerGlyph.GetBounds*
  parent: System.Workflow.ComponentModel.Design.DesignerGlyph
  isExternal: false
  name: GetBounds
  nameWithType: DesignerGlyph.GetBounds
- uid: System.Workflow.ComponentModel.Design.DesignerGlyph.OnActivate*
  parent: System.Workflow.ComponentModel.Design.DesignerGlyph
  isExternal: false
  name: OnActivate
  nameWithType: DesignerGlyph.OnActivate
- uid: System.Workflow.ComponentModel.Design.DesignerGlyph.OnPaint*
  parent: System.Workflow.ComponentModel.Design.DesignerGlyph
  isExternal: false
  name: OnPaint
  nameWithType: DesignerGlyph.OnPaint
- uid: System.Workflow.ComponentModel.Design.DesignerGlyph.Priority*
  parent: System.Workflow.ComponentModel.Design.DesignerGlyph
  isExternal: false
  name: Priority
  nameWithType: DesignerGlyph.Priority
