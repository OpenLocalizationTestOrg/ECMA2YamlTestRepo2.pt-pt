### YamlMime:ManagedReference
items:
- uid: System.Drawing.FontConverter.FontNameConverter
  id: FontConverter.FontNameConverter
  children:
  - System.Drawing.FontConverter.FontNameConverter.#ctor
  - System.Drawing.FontConverter.FontNameConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Drawing.FontConverter.FontNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.Drawing.FontConverter.FontNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.Drawing.FontConverter.FontNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.Drawing.FontConverter.FontNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.Drawing.FontConverter.FontNameConverter.System#IDisposable#Dispose
  langs:
  - csharp
  name: FontConverter+FontNameConverter
  nameWithType: FontConverter+FontNameConverter
  fullName: System.Drawing.FontConverter+FontNameConverter
  type: Class
  syntax:
    content: 'public sealed class FontConverter.FontNameConverter : System.ComponentModel.TypeConverter, IDisposable'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.Drawing.FontConverter.FontNameConverter.#ctor
  id: '#ctor'
  parent: System.Drawing.FontConverter.FontNameConverter
  langs:
  - csharp
  name: FontConverter+FontNameConverter()
  nameWithType: FontConverter+FontNameConverter.FontConverter+FontNameConverter()
  fullName: System.Drawing.FontConverter+FontNameConverter.FontConverter+FontNameConverter()
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public FontNameConverter ();
    parameters: []
  overload: System.Drawing.FontConverter.FontNameConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.FontConverter.FontNameConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Drawing.FontConverter.FontNameConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: FontConverter+FontNameConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Drawing.FontConverter+FontNameConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "To be added."
    - id: sourceType
      type: System.Type
      description: "To be added."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Drawing.FontConverter.FontNameConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.FontConverter.FontNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Drawing.FontConverter.FontNameConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: FontConverter+FontNameConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Drawing.FontConverter+FontNameConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "To be added."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "To be added."
    - id: value
      type: System.Object
      description: "To be added."
    return:
      type: System.Object
      description: "To be added."
  overload: System.Drawing.FontConverter.FontNameConverter.ConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.FontConverter.FontNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Drawing.FontConverter.FontNameConverter
  langs:
  - csharp
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: FontConverter+FontNameConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.Drawing.FontConverter+FontNameConverter.GetStandardValues(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "To be added."
    return:
      type: System.ComponentModel.TypeConverter.StandardValuesCollection
      description: "To be added."
  overload: System.Drawing.FontConverter.FontNameConverter.GetStandardValues*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.FontConverter.FontNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Drawing.FontConverter.FontNameConverter
  langs:
  - csharp
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: FontConverter+FontNameConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.Drawing.FontConverter+FontNameConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "To be added."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Drawing.FontConverter.FontNameConverter.GetStandardValuesExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.FontConverter.FontNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Drawing.FontConverter.FontNameConverter
  langs:
  - csharp
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: FontConverter+FontNameConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.Drawing.FontConverter+FontNameConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "To be added."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Drawing.FontConverter.FontNameConverter.GetStandardValuesSupported*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.FontConverter.FontNameConverter.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.Drawing.FontConverter.FontNameConverter
  langs:
  - csharp
  name: System.IDisposable.Dispose()
  nameWithType: FontConverter+FontNameConverter.System.IDisposable.Dispose()
  fullName: System.Drawing.FontConverter+FontNameConverter.System.IDisposable.Dispose()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.Drawing.FontConverter.FontNameConverter.System#IDisposable#Dispose*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.Drawing.FontConverter.FontNameConverter.#ctor
  parent: System.Drawing.FontConverter.FontNameConverter
  isExternal: false
  name: FontConverter+FontNameConverter()
  nameWithType: FontConverter+FontNameConverter.FontConverter+FontNameConverter()
  fullName: System.Drawing.FontConverter+FontNameConverter.FontConverter+FontNameConverter()
- uid: System.Drawing.FontConverter.FontNameConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Drawing.FontConverter.FontNameConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: FontConverter+FontNameConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Drawing.FontConverter+FontNameConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Drawing.FontConverter.FontNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Drawing.FontConverter.FontNameConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: FontConverter+FontNameConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Drawing.FontConverter+FontNameConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Drawing.FontConverter.FontNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Drawing.FontConverter.FontNameConverter
  isExternal: false
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: FontConverter+FontNameConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.Drawing.FontConverter+FontNameConverter.GetStandardValues(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter.StandardValuesCollection
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter+StandardValuesCollection
  nameWithType: TypeConverter+StandardValuesCollection
  fullName: System.ComponentModel.TypeConverter+StandardValuesCollection
- uid: System.Drawing.FontConverter.FontNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Drawing.FontConverter.FontNameConverter
  isExternal: false
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: FontConverter+FontNameConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.Drawing.FontConverter+FontNameConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
- uid: System.Drawing.FontConverter.FontNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Drawing.FontConverter.FontNameConverter
  isExternal: false
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: FontConverter+FontNameConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.Drawing.FontConverter+FontNameConverter.GetStandardValuesSupported(ITypeDescriptorContext)
- uid: System.Drawing.FontConverter.FontNameConverter.System#IDisposable#Dispose
  parent: System.Drawing.FontConverter.FontNameConverter
  isExternal: false
  name: System.IDisposable.Dispose()
  nameWithType: FontConverter+FontNameConverter.System.IDisposable.Dispose()
  fullName: System.Drawing.FontConverter+FontNameConverter.System.IDisposable.Dispose()
- uid: System.Drawing.FontConverter.FontNameConverter.#ctor*
  parent: System.Drawing.FontConverter.FontNameConverter
  isExternal: false
  name: FontConverter+FontNameConverter
  nameWithType: FontConverter+FontNameConverter.FontConverter+FontNameConverter
- uid: System.Drawing.FontConverter.FontNameConverter.CanConvertFrom*
  parent: System.Drawing.FontConverter.FontNameConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: FontConverter+FontNameConverter.CanConvertFrom
- uid: System.Drawing.FontConverter.FontNameConverter.ConvertFrom*
  parent: System.Drawing.FontConverter.FontNameConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: FontConverter+FontNameConverter.ConvertFrom
- uid: System.Drawing.FontConverter.FontNameConverter.GetStandardValues*
  parent: System.Drawing.FontConverter.FontNameConverter
  isExternal: false
  name: GetStandardValues
  nameWithType: FontConverter+FontNameConverter.GetStandardValues
- uid: System.Drawing.FontConverter.FontNameConverter.GetStandardValuesExclusive*
  parent: System.Drawing.FontConverter.FontNameConverter
  isExternal: false
  name: GetStandardValuesExclusive
  nameWithType: FontConverter+FontNameConverter.GetStandardValuesExclusive
- uid: System.Drawing.FontConverter.FontNameConverter.GetStandardValuesSupported*
  parent: System.Drawing.FontConverter.FontNameConverter
  isExternal: false
  name: GetStandardValuesSupported
  nameWithType: FontConverter+FontNameConverter.GetStandardValuesSupported
- uid: System.Drawing.FontConverter.FontNameConverter.System#IDisposable#Dispose*
  parent: System.Drawing.FontConverter.FontNameConverter
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: FontConverter+FontNameConverter.System.IDisposable.Dispose
