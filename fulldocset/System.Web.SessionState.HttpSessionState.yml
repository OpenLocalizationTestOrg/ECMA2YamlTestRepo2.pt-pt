### YamlMime:ManagedReference
items:
- uid: System.Web.SessionState.HttpSessionState
  id: HttpSessionState
  children:
  - System.Web.SessionState.HttpSessionState.Abandon
  - System.Web.SessionState.HttpSessionState.Add(System.String,System.Object)
  - System.Web.SessionState.HttpSessionState.Clear
  - System.Web.SessionState.HttpSessionState.CodePage
  - System.Web.SessionState.HttpSessionState.Contents
  - System.Web.SessionState.HttpSessionState.CookieMode
  - System.Web.SessionState.HttpSessionState.CopyTo(System.Array,System.Int32)
  - System.Web.SessionState.HttpSessionState.Count
  - System.Web.SessionState.HttpSessionState.GetEnumerator
  - System.Web.SessionState.HttpSessionState.IsCookieless
  - System.Web.SessionState.HttpSessionState.IsNewSession
  - System.Web.SessionState.HttpSessionState.IsReadOnly
  - System.Web.SessionState.HttpSessionState.IsSynchronized
  - System.Web.SessionState.HttpSessionState.Item(System.Int32)
  - System.Web.SessionState.HttpSessionState.Item(System.String)
  - System.Web.SessionState.HttpSessionState.Keys
  - System.Web.SessionState.HttpSessionState.LCID
  - System.Web.SessionState.HttpSessionState.Mode
  - System.Web.SessionState.HttpSessionState.Remove(System.String)
  - System.Web.SessionState.HttpSessionState.RemoveAll
  - System.Web.SessionState.HttpSessionState.RemoveAt(System.Int32)
  - System.Web.SessionState.HttpSessionState.SessionID
  - System.Web.SessionState.HttpSessionState.StaticObjects
  - System.Web.SessionState.HttpSessionState.SyncRoot
  - System.Web.SessionState.HttpSessionState.Timeout
  langs:
  - csharp
  name: HttpSessionState
  nameWithType: HttpSessionState
  fullName: System.Web.SessionState.HttpSessionState
  type: Class
  summary: "Fornece acesso aos valores de estado da sessão, bem como as definições de nível de sessão e métodos de gestão de duração."
  remarks: "O ASP.NET fornece o estado da sessão de gestão que lhe permite armazenar informações associadas a uma sessão de browser exclusivo em vários pedidos. Pode armazenar uma coleção de valores referenciada por um nome de chave ou pelo índice numérico. Acesso aos valores de sessão e a funcionalidade está disponível a utilizar a classe de HttpSessionState, que é acessível através de <xref:System.Web.HttpContext.Session%2A>propriedade atual <xref:System.Web.HttpContext>, ou a <xref:System.Web.UI.Page.Session%2A>propriedade de <xref:System.Web.UI.Page>.</xref:System.Web.UI.Page> </xref:System.Web.UI.Page.Session%2A> </xref:System.Web.HttpContext> </xref:System.Web.HttpContext.Session%2A>       Dados de sessão estão associados a uma sessão de browser específico com um identificador exclusivo. Por predefinição, este identificador é armazenado num cookie de sessão não irá expirar no browser, mas também pode configurar a sua aplicação para armazenar o identificador de sessão no URL, definindo o `cookieless` atributo para `true` ou <xref:System.Web.HttpCookieMode>no elemento da sua configuração de aplicação.</xref:System.Web.HttpCookieMode> Pode ter ASP.NET determinar se cookies são suportados pelo browser, especificando um valor de <xref:System.Web.HttpCookieMode>para o `cookieless` atributo.</xref:System.Web.HttpCookieMode> Também pode ter ASP.NET determinar se cookies estão ativados para o browser, especificando um valor de <xref:System.Web.HttpCookieMode>para o `cookieless` atributo.</xref:System.Web.HttpCookieMode> Se os cookies são suportados quando <xref:System.Web.HttpCookieMode>está especificado ou ativada quando <xref:System.Web.HttpCookieMode>for especificado, em seguida, a sessão será armazenado num cookie; caso contrário o identificador de sessão será armazenado no URL.</xref:System.Web.HttpCookieMode> </xref:System.Web.HttpCookieMode>       As sessões são iniciadas durante o primeiro pedido e valores de sessão serão mantido, desde que um novo pedido é efetuado pelo browser antes do número de minutos especificado na <xref:System.Web.SessionState.HttpSessionState.Timeout%2A>propriedade pass.</xref:System.Web.SessionState.HttpSessionState.Timeout%2A> Quando inicia uma nova sessão, a sessão <xref:System.Web.SessionState.SessionStateModule.Start>o evento é gerado.</xref:System.Web.SessionState.SessionStateModule.Start> Pode utilizar este evento para efetuar qualquer ação adicional no início de sessão, como a definição predefinida de valores de sessão. Quando uma sessão expirar, o <xref:System.Web.SessionState.HttpSessionState.Abandon%2A>método é denominado ou a aplicação ASP.NET é encerrada, a sessão <xref:System.Web.SessionState.SessionStateModule.End>o evento é gerado.</xref:System.Web.SessionState.SessionStateModule.End> </xref:System.Web.SessionState.HttpSessionState.Abandon%2A> Pode utilizar este evento para executar qualquer limpeza necessária. O <xref:System.Web.SessionState.SessionStateModule.End>o evento é gerado apenas quando o estado da sessão `mode` está definido como <xref:System.Web.SessionState.SessionStateMode>.</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.SessionStateModule.End>       Para melhorar o desempenho, sessões que utilizam cookies não atribuir armazenamento sessão até que, na verdade, os dados são armazenados no <xref:System.Web.UI.Page.Session%2A>objeto.</xref:System.Web.UI.Page.Session%2A> Para obter mais informações, consulte o <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>propriedade.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A>       Estado da sessão não persiste nos limites da aplicação ASP.NET. Se um browser navega para outra aplicação, as informações da sessão não estão disponíveis para a nova aplicação.       Valores de sessão são armazenados na memória no servidor Web, por predefinição. Pode também armazenar valores de sessão numa base de dados do SQL Server, um servidor de estado do ASP.NET ou um servidor personalizado. Isto permite-lhe manter sessão valores nos casos em que o processo do ASP.NET ou IIS ou a aplicação ASP.NET é reiniciado e disponibilizar os valores de sessão em todos os servidores numa Web farm. Este comportamento é configurado através da definição de `mode` atributo para um válido <xref:System.Web.SessionState.SessionStateMode>valor do elemento da sua configuração de aplicação.</xref:System.Web.SessionState.SessionStateMode> Para obter mais informações, consulte [modos de estado da sessão](~/add/includes/ajax-current-ext-md.md).       As alternativas para o estado da sessão incluem o estado da aplicação (consulte a propriedade <xref:System.Web.HttpApplication.Application%2A>) e a cache do ASP.NET (consulte o espaço de nomes <xref:System.Web.Caching>), que armazenam as variáveis que podem ser acedidas por todos os utilizadores de uma aplicação ASP.NET; o perfil do ASP.NET (consulte o espaço de nomes <xref:System.Web.Profile>), que persistir valores de utilizador num arquivo de dados sem prestes a expirá-los utilizando um limite de tempo; ASP.NET <xref:System.Web.UI.WebControls?displayProperty=fullName>, manter valores do controlo na <xref:System.Web.UI.Control.ViewState%2A>; <xref:System.Web.HttpResponse.Cookies%2A>; o <xref:System.Web.HttpRequest.QueryString%2A>propriedade; e campos de um formulário HTML que estão disponíveis a partir de um HTTP `POST` utilizando o <xref:System.Web.HttpRequest.Form%2A>coleção.</xref:System.Web.HttpRequest.Form%2A> </xref:System.Web.HttpRequest.QueryString%2A> </xref:System.Web.HttpResponse.Cookies%2A> </xref:System.Web.UI.Control.ViewState%2A> </xref:System.Web.UI.WebControls?displayProperty=fullName> </xref:System.Web.Profile> </xref:System.Web.Caching> </xref:System.Web.HttpApplication.Application%2A> Para obter mais detalhes sobre as diferenças entre o estado da sessão e outras alternativas de gestão do Estado, consulte [recomendações de gestão de estado do ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example sets and retrieves values from session state.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[HttpSessionState#30](~/add/codesnippet/csharp/t-system.web.sessionstat_5_1.aspx)]\n [!code-vb[HttpSessionState#30](~/add/codesnippet/visualbasic/t-system.web.sessionstat_5_1.aspx)]"
  syntax:
    content: 'public sealed class HttpSessionState : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Abandon
  id: Abandon
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Abandon()
  nameWithType: HttpSessionState.Abandon()
  fullName: System.Web.SessionState.HttpSessionState.Abandon()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Cancela a sessão atual."
  remarks: "Assim que o se chama o método de abandono, a sessão atual já não é válida e pode ser iniciada uma nova sessão. Abandonar faz com que o <xref:System.Web.SessionState.SessionStateModule.End>evento seja gerado.</xref:System.Web.SessionState.SessionStateModule.End> Um novo <xref:System.Web.SessionState.SessionStateModule.Start>evento será emitido no pedido seguinte.</xref:System.Web.SessionState.SessionStateModule.Start>       Identificadores de sessão para sessões abandonados ou expirados estão reciclados por predefinição. Ou seja, se é efetuado um pedido que inclui o identificador de sessão para uma sessão expirada ou abandonada, uma nova sessão é iniciada utilizando o mesmo identificador de sessão. Pode desativar esta definindo `regenerateExpiredSessionId` atributo do elemento de configuração para `true`. Para obter mais informações, consulte [identificadores de sessão](~/add/includes/ajax-current-ext-md.md).       O <xref:System.Web.SessionState.SessionStateModule.End>evento é suportado apenas quando a <xref:System.Web.SessionState.HttpSessionState.Mode%2A>propriedade está definida como <xref:System.Web.SessionState.SessionStateMode>.</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.HttpSessionState.Mode%2A> </xref:System.Web.SessionState.SessionStateModule.End>"
  syntax:
    content: public void Abandon ();
    parameters: []
  overload: System.Web.SessionState.HttpSessionState.Abandon*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Add(System.String,System.Object)
  id: Add(System.String,System.Object)
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Add(String,Object)
  nameWithType: HttpSessionState.Add(String,Object)
  fullName: System.Web.SessionState.HttpSessionState.Add(String,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Adiciona um novo item à coleção de estado da sessão."
  remarks: "Se o `name` parâmetro refere-se para um item de estado de sessão existente, o item existente é substituído com especificado `value`."
  example:
  - "The following example shows how to store values in session state by using the Add method. It also shows how to remove values in session state by using the <xref:System.Web.SessionState.HttpSessionState.Remove%2A> method. A <xref:System.Web.UI.WebControls.Repeater> control is used to display the contents session state on the Web page. The <xref:System.Web.SessionState.HttpSessionState.GetEnumerator%2A> method is used to iterate through the session-state collection and populate the <xref:System.Web.UI.WebControls.Repeater> control.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[HttpSessionState#13](~/add/codesnippet/csharp/m-system.web.sessionstat_16_1.aspx)]\n [!code-vb[HttpSessionState#13](~/add/codesnippet/visualbasic/m-system.web.sessionstat_16_1.aspx)]"
  syntax:
    content: public void Add (string name, object value);
    parameters:
    - id: name
      type: System.String
      description: "O nome do item para adicionar à coleção de estado da sessão."
    - id: value
      type: System.Object
      description: "O valor do item para adicionar à coleção de estado da sessão."
  overload: System.Web.SessionState.HttpSessionState.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Clear
  id: Clear
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Clear()
  nameWithType: HttpSessionState.Clear()
  fullName: System.Web.SessionState.HttpSessionState.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Remove todas as chaves e valores da coleção de estado da sessão."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.SessionState.HttpSessionState.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.CodePage
  id: CodePage
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: CodePage
  nameWithType: HttpSessionState.CodePage
  fullName: System.Web.SessionState.HttpSessionState.CodePage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Obtém ou define o identificador do conjunto de carateres para a sessão atual."
  remarks: "Um conjunto de carateres (página de código) é utilizado para interpretar dados de carateres de múltiplos bytes, determinar o valor de caráter e, por conseguinte, ordenar ordem. Definições de página de códigos aplicam-se apenas para dados de carateres de múltiplos bytes, não para dados de carateres Unicode.       Isto <xref:System.Web.SessionState.IHttpSessionState.CodePage%2A>propriedade é fornecida para compatibilidade com versões anteriores do ASP apenas.</xref:System.Web.SessionState.IHttpSessionState.CodePage%2A> Se não for necessário manter a compatibilidade com versões anteriores com as páginas ASP, utilize o <xref:System.Web.HttpResponse.ContentEncoding%2A>propriedade em vez disso.</xref:System.Web.HttpResponse.ContentEncoding%2A>"
  syntax:
    content: public int CodePage { get; set; }
    return:
      type: System.Int32
      description: "O identificador do conjunto de carateres para a sessão atual."
  overload: System.Web.SessionState.HttpSessionState.CodePage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Contents
  id: Contents
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Contents
  nameWithType: HttpSessionState.Contents
  fullName: System.Web.SessionState.HttpSessionState.Contents
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Obtém uma referência para o objeto de estado da sessão atual."
  remarks: "A propriedade de conteúdo é fornecida para compatibilidade com versões anteriores do ASP."
  example:
  - "The following code example lists the item names and values in the Contents property.  \n  \n [!code-cs[HttpSessionState#9](~/add/codesnippet/csharp/p-system.web.sessionstat_8_1.aspx)]\n [!code-vb[HttpSessionState#9](~/add/codesnippet/visualbasic/p-system.web.sessionstat_8_1.aspx)]"
  syntax:
    content: public System.Web.SessionState.HttpSessionState Contents { get; }
    return:
      type: System.Web.SessionState.HttpSessionState
      description: "Atual <xref href=&quot;System.Web.SessionState.HttpSessionState&quot;> </xref>."
  overload: System.Web.SessionState.HttpSessionState.Contents*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.CookieMode
  id: CookieMode
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: CookieMode
  nameWithType: HttpSessionState.CookieMode
  fullName: System.Web.SessionState.HttpSessionState.CookieMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Obtém um valor que indica se a aplicação está configurada para sessões sem cookies."
  remarks: "Quando <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>é `true`, a propriedade CookieMode devolve <xref:System.Web.HttpCookieMode>; caso contrário, a propriedade CookieMode devolve <xref:System.Web.HttpCookieMode>.</xref:System.Web.HttpCookieMode> </xref:System.Web.HttpCookieMode> </xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>"
  example:
  - "The following code example sets the `cookieless` session attribute to `true` in the Web.config file. For this sample application configuration, the CookieMode property would return <xref:System.Web.HttpCookieMode>.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <sessionState   \n      mode=\"InProc\"  \n      cookieless=\"true\"  \n      timeout=\"30\" />  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: public System.Web.HttpCookieMode CookieMode { get; }
    return:
      type: System.Web.HttpCookieMode
      description: "Um do <xref href=&quot;System.Web.HttpCookieMode&quot;> </xref> valores que indiquem se a aplicação está configurada para sessões sem cookies. A predefinição é <xref href=&quot;System.Web.HttpCookieMode&quot;> </xref>."
  overload: System.Web.SessionState.HttpSessionState.CookieMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: HttpSessionState.CopyTo(Array,Int32)
  fullName: System.Web.SessionState.HttpSessionState.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Copia a coleção de valores de estado da sessão para uma matriz unidimensional, que começa no índice especificado na matriz."
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "O <xref:System.Array>que recebe os valores de sessão.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "O índice baseado em zero `array` do que a copiar é iniciado."
  overload: System.Web.SessionState.HttpSessionState.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Count
  id: Count
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Count
  nameWithType: HttpSessionState.Count
  fullName: System.Web.SessionState.HttpSessionState.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Obtém o número de itens na coleção de estado da sessão."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "O número de itens na coleção."
  overload: System.Web.SessionState.HttpSessionState.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.GetEnumerator
  id: GetEnumerator
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: HttpSessionState.GetEnumerator()
  fullName: System.Web.SessionState.HttpSessionState.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Devolve um enumerador que pode ser utilizado para ler todos os Estado da sessão variável nomes na sessão atual."
  remarks: ''
  example:
  - "The following example shows how to store values in session state by using the <xref:System.Web.SessionState.HttpSessionState.Add%2A> method. It also shows how to remove values in session state by using the <xref:System.Web.SessionState.HttpSessionState.Remove%2A> method. A <xref:System.Web.UI.WebControls.Repeater> control is used to display the contents of session state on the Web page. The GetEnumerator method is used to iterate through the session-state collection and populate the <xref:System.Web.UI.WebControls.Repeater> control.  \n  \n [!code-cs[HttpSessionState#13](~/add/codesnippet/csharp/m-system.web.sessionstat_14_1.aspx)]\n [!code-vb[HttpSessionState#13](~/add/codesnippet/visualbasic/m-system.web.sessionstat_14_1.aspx)]"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Um <xref:System.Collections.IEnumerator>que pode itere através de nomes de variáveis da coleção de estado da sessão.</xref:System.Collections.IEnumerator>"
  overload: System.Web.SessionState.HttpSessionState.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.IsCookieless
  id: IsCookieless
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: IsCookieless
  nameWithType: HttpSessionState.IsCookieless
  fullName: System.Web.SessionState.HttpSessionState.IsCookieless
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Obtém um valor que indica se o ID de sessão é incorporado no URL ou armazenado num HTTP cookie."
  remarks: "ASP.NET identifica exclusivamente sessões com cada browser. Por predefinição, o identificador exclusivo de uma sessão é armazenado num cookie de sessão não irá expirar no browser. Pode especificar que os identificadores de sessão não ser armazenado num cookie definindo a `cookieless` atributo para `true` no elemento de configuração.      > [!NOTE] > Para melhorar a segurança da sua aplicação, a aplicação deve permitir que os utilizadores terminar, altura em que deve chamar o <xref:System.Web.SessionState.HttpSessionState.Abandon%2A>método.</xref:System.Web.SessionState.HttpSessionState.Abandon%2A> Isto reduz a possibilidade de uma origem de indesejável com o identificador exclusivo no URL para obter dados privados armazenados na sessão para um utilizador.       ASP.NET mantém o estado de sessão sem cookies por automaticamente a inserir um ID de sessão único no URL da página. Por exemplo, o seguinte URL foi modificado por ASP.NET para incluir o lit3py55t21z5v55vlm25s55 de ID de sessão único: ```   http://www.example.com/(S(4danlfat035muve4g0mvgfrr))/orderform.aspx   ``` ASP.NET modifica as ligações contidas em todas as páginas pedidas incorporar um valor de ID de sessão, consulte as ligações antes de envio de cada página no browser. Estado da sessão é mantido, desde que o utilizador segue o caminho de ligações que o site fornece. No entanto, se o agente de utilizador reescreve um URL, a instância de estado da sessão serão perdida.       O ID de sessão é incorporado no URL, após a barra que se segue o nome da aplicação e antes de qualquer identificador de ficheiro ou diretório virtual restantes. Isto permite que o ASP.NET resolver o nome da aplicação antes que envolvem o <xref:System.Web.SessionState.SessionStateModule>no pedido.</xref:System.Web.SessionState.SessionStateModule>       Por predefinição, os identificadores de sessão em sessões sem cookies sejam reciclados. Ou seja, se é efetuado um pedido com um ID de sessão expirou, uma nova sessão é iniciada com o ID de sessão fornecido com o pedido. Este comportamento pode resultar na indesejável partilha dos dados de sessão, quando uma ligação que contém um ID de sessão sem cookies partilhada com vários browsers, talvez através de um motor de busca ou outro programa. Pode reduzir a possibilidade de dados de sessão está a ser partilhados por vários clientes ao desativar a reciclagem dos identificadores de sessão. Para tal, defina o `regenerateExpiredSessionId` atributo do elemento de configuração para `true`. Este procedimento resultará num novo ID de sessão que está a ser gerado quando é efetuado um pedido de sessão sem cookies com um ID de sessão. Tenha em atenção que se os pedidos efetuados com o ID da sessão expirado utiliza o HTTP `POST` método, em seguida, todos os dados publicados irão ser perdidas quando `regenerateExpiredSessionId` é `true`, tal como ASP.NET efetua um redirecionamento para garantir que o browser tem o identificador de sessão de novo no URL.      > [!NOTE] > Enquanto a definição de `regenerateExpiredSessionId` atributo para `true` reduz a possibilidade de indesejável partilha de dados de sessão, não protege contra uma origem de indesejável obtenham acesso para a sessão de outro utilizador por obter o <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>valor e a incluir no pedidos para o servidor.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Se estiver a armazenar informações privadas ou confidenciais no estado da sessão, é recomendado que utilize SSL para encriptar as comunicações entre o browser e o servidor que inclui o <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A>"
  example:
  - "The following code example sets the `cookieless` session attribute to true in the Web.config file.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <sessionState   \n      mode=\"InProc\"  \n      cookieless=\"true\"  \n      regenerateExpiredSessionId=\"true\"  \n      timeout=\"30\" />  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: public bool IsCookieless { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a sessão é incorporada no URL; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SessionState.HttpSessionState.IsCookieless*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.IsNewSession
  id: IsNewSession
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: IsNewSession
  nameWithType: HttpSessionState.IsNewSession
  fullName: System.Web.SessionState.HttpSessionState.IsNewSession
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Obtém um valor que indica se a sessão foi criada com o pedido atual."
  syntax:
    content: public bool IsNewSession { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a sessão foi criada com o pedido atual; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SessionState.HttpSessionState.IsNewSession*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.IsReadOnly
  id: IsReadOnly
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: HttpSessionState.IsReadOnly
  fullName: System.Web.SessionState.HttpSessionState.IsReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Obtém um valor que indica se a sessão é só de leitura."
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a sessão é só de leitura; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SessionState.HttpSessionState.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.IsSynchronized
  id: IsSynchronized
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: HttpSessionState.IsSynchronized
  fullName: System.Web.SessionState.HttpSessionState.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Obtém um valor que indica se o acesso à coleção de valores de estado da sessão está sincronizado (seguros para threads)."
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o acesso à coleção é sincronizado (seguros para threads); caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SessionState.HttpSessionState.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: HttpSessionState.Item(Int32)
  fullName: System.Web.SessionState.HttpSessionState.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Obtém ou define um valor de sessão pelo índice numérico."
  syntax:
    content: public object this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "O índice numérico do valor de sessão."
    return:
      type: System.Object
      description: "O valor de estado da sessão armazenado no índice especificado, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o item não existe."
  overload: System.Web.SessionState.HttpSessionState.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Item(System.String)
  id: Item(System.String)
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Item(String)
  nameWithType: HttpSessionState.Item(String)
  fullName: System.Web.SessionState.HttpSessionState.Item(String)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Obtém ou define um valor de sessão por nome."
  syntax:
    content: public object this[string name] { get; set; }
    parameters:
    - id: name
      type: System.String
      description: "O nome da chave do valor de sessão."
    return:
      type: System.Object
      description: "O valor de estado da sessão com o nome especificado, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o item não existe."
  overload: System.Web.SessionState.HttpSessionState.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Keys
  id: Keys
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Keys
  nameWithType: HttpSessionState.Keys
  fullName: System.Web.SessionState.HttpSessionState.Keys
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Obtém uma coleção de chaves para todos os valores armazenados na coleção de estado da sessão."
  syntax:
    content: public System.Collections.Specialized.NameObjectCollectionBase.KeysCollection Keys { get; }
    return:
      type: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection
      description: "O <xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>que contém todas as chaves de sessão.</xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>"
  overload: System.Web.SessionState.HttpSessionState.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.LCID
  id: LCID
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: LCID
  nameWithType: HttpSessionState.LCID
  fullName: System.Web.SessionState.HttpSessionState.LCID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Obtém ou define o identificador de região (LCID) da sessão atual."
  remarks: "A propriedade LCID é fornecida para compatibilidade com versões anteriores do ASP apenas. Se não for necessário manter a compatibilidade com versões anteriores com as páginas ASP, utilize o <xref:System.Globalization.CultureInfo.LCID%2A>propriedade em vez disso.</xref:System.Globalization.CultureInfo.LCID%2A>       ASP.NET armazena o identificador de região no estado da sessão. Acessos de propriedade LCID o <xref:System.Globalization.CultureInfo.LCID%2A>propriedade para obter e definir o identificador.</xref:System.Globalization.CultureInfo.LCID%2A>"
  syntax:
    content: public int LCID { get; set; }
    return:
      type: System.Int32
      description: "A <xref:System.Globalization.CultureInfo>instância que especifica o idioma da sessão atual.</xref:System.Globalization.CultureInfo>"
  overload: System.Web.SessionState.HttpSessionState.LCID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Mode
  id: Mode
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Mode
  nameWithType: HttpSessionState.Mode
  fullName: System.Web.SessionState.HttpSessionState.Mode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Obtém o modo de estado da sessão atual."
  remarks: "Para obter informações sobre como configurar o seu servidor para <xref:System.Web.SessionState.SessionStateMode>ou <xref:System.Web.SessionState.SessionStateMode>armazenamento de estado da sessão, consulte [descrição geral do Estado de sessão ASP.NET](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.SessionStateMode>"
  example:
  - "The following code example sets the `mode` session attribute to <xref:System.Web.SessionState.SessionStateMode> in the Web.config file. For SQL Server session mode, the `sqlConnectionString` attribute is also required.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <sessionState   \n      mode=\"SQLServer\"  \n      sqlConnectionString=\"Data Source=localhost;Integrated Security=SSPI\"  \n      cookieless=\"true\"  \n      timeout=\"30\" />  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: public System.Web.SessionState.SessionStateMode Mode { get; }
    return:
      type: System.Web.SessionState.SessionStateMode
      description: "Um do <xref href=&quot;System.Web.SessionState.SessionStateMode&quot;> </xref> valores."
  overload: System.Web.SessionState.HttpSessionState.Mode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Remove(System.String)
  id: Remove(System.String)
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Remove(String)
  nameWithType: HttpSessionState.Remove(String)
  fullName: System.Web.SessionState.HttpSessionState.Remove(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Elimina um item da coleção de estado da sessão."
  remarks: "Se o estado da sessão a recolha não contém um elemento com especificado `name`, a coleção permanece inalterada. Sem exceção é emitida."
  example:
  - "The following example shows how to store values in session state by using the <xref:System.Web.SessionState.HttpSessionState.Add%2A> method. It also shows how to remove values in session state by using the Remove method. A <xref:System.Web.UI.WebControls.Repeater> control is used to display the contents of session state on the Web page. The <xref:System.Web.SessionState.HttpSessionState.GetEnumerator%2A> method is used to iterate through the session-state collection and populate the <xref:System.Web.UI.WebControls.Repeater> control.  \n  \n [!code-cs[HttpSessionState#13](~/add/codesnippet/csharp/m-system.web.sessionstat_6_1.aspx)]\n [!code-vb[HttpSessionState#13](~/add/codesnippet/visualbasic/m-system.web.sessionstat_6_1.aspx)]"
  syntax:
    content: public void Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome do item para eliminar da coleção de estado da sessão."
  overload: System.Web.SessionState.HttpSessionState.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.RemoveAll
  id: RemoveAll
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: RemoveAll()
  nameWithType: HttpSessionState.RemoveAll()
  fullName: System.Web.SessionState.HttpSessionState.RemoveAll()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Remove todas as chaves e valores da coleção de estado da sessão."
  remarks: "RemoveAll efetua a mesma função que <xref:System.Web.SessionState.HttpSessionState.Clear%2A>.</xref:System.Web.SessionState.HttpSessionState.Clear%2A>"
  syntax:
    content: public void RemoveAll ();
    parameters: []
  overload: System.Web.SessionState.HttpSessionState.RemoveAll*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: HttpSessionState.RemoveAt(Int32)
  fullName: System.Web.SessionState.HttpSessionState.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Elimina um item num índice especificado da coleção de estado da sessão."
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "O índice do item para remover a recolha de estado da sessão."
  overload: System.Web.SessionState.HttpSessionState.RemoveAt*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code> is less than zero.  \n  \n \\- or -  \n  \n <code>index</code> is equal to or greater than <xref:System.Web.SessionState.HttpSessionState.Count*>."
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.SessionID
  id: SessionID
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: SessionID
  nameWithType: HttpSessionState.SessionID
  fullName: System.Web.SessionState.HttpSessionState.SessionID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Obtém o identificador exclusivo para a sessão."
  remarks: "A propriedade SessionID é utilizada para identificar exclusivamente um browser com dados de sessão no servidor. O valor de SessionID aleatoriamente é gerado pelo ASP.NET e armazenado num cookie de sessão não irá expirar no browser. O valor de ID de sessão, em seguida, é enviado um cookie com cada pedido efetuado à aplicação ASP.NET.       Se pretender desativar a utilização de cookies na sua aplicação ASP.NET e ainda certifique-utilizar do Estado da sessão, pode configurar a sua aplicação para armazenar o identificador de sessão no URL, em vez de um cookie ao definir o `cookieless` atributo do elemento de configuração para `true`, ou <xref:System.Web.HttpCookieMode>, no ficheiro Web. config para a sua aplicação.</xref:System.Web.HttpCookieMode> Pode ter ASP.NET determinar se cookies são suportados pelo browser, especificando um valor de <xref:System.Web.HttpCookieMode>para o `cookieless` atributo.</xref:System.Web.HttpCookieMode> Também pode ter ASP.NET determinar se cookies estão ativados para o browser, especificando um valor de <xref:System.Web.HttpCookieMode>para o `cookieless` atributo.</xref:System.Web.HttpCookieMode> Se os cookies são suportados quando <xref:System.Web.HttpCookieMode>está especificado ou ativada quando <xref:System.Web.HttpCookieMode>for especificado, em seguida, a sessão será armazenado num cookie; caso contrário o identificador de sessão será armazenado no URL.</xref:System.Web.HttpCookieMode> </xref:System.Web.HttpCookieMode> Para obter mais informações, consulte o <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>propriedade.</xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>       O SessionID é enviado entre o servidor e o browser em texto não encriptado, num cookie ou no URL. Como resultado, uma origem de indesejável foi obter acesso a sessão de outro utilizador por obter o valor de SessionID e incluir no pedidos para o servidor. Se estiver a armazenar informações privadas ou confidenciais no estado da sessão, é recomendado que utilize SSL para encriptar as comunicações entre o browser e o servidor que inclui o SessionID.       Ao utilizar o estado da sessão com base em cookies, o ASP.NET não alocar armazenamento para dados de sessão até que o <xref:System.Web.UI.Page.Session%2A>objeto é utilizado.</xref:System.Web.UI.Page.Session%2A> Como resultado, um novo ID de sessão é gerado para cada pedido de página até que o objeto de sessão é acedido. Se a aplicação requer um ID de sessão estático para a sessão completa, pode a implementar o `Session_Start` método no ficheiro global. asax da aplicação e os dados de arquivo no <xref:System.Web.UI.Page.Session%2A>de objeto para corrigir o ID de sessão ou pode utilizar o código noutro departamento da sua aplicação explicitamente armazenar dados no <xref:System.Web.UI.Page.Session%2A>objeto.</xref:System.Web.UI.Page.Session%2A> </xref:System.Web.UI.Page.Session%2A>       Se a sua aplicação utiliza o estado da sessão sem cookies, o ID de sessão é gerado na primeira vista de página e é mantido para a sessão completa."
  example:
  - "The following code example shows a Web.config file that configures session state to use cookieless session identifiers. For more information, see the <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A> property.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <sessionState   \n      cookieless=\"true\"  \n      regenerateExpiredSessionId=\"true\"  \n      timeout=\"30\" />  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: public string SessionID { get; }
    return:
      type: System.String
      description: "O identificador de sessão único."
  overload: System.Web.SessionState.HttpSessionState.SessionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.StaticObjects
  id: StaticObjects
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: StaticObjects
  nameWithType: HttpSessionState.StaticObjects
  fullName: System.Web.SessionState.HttpSessionState.StaticObjects
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Obtém uma coleção de objetos declarada pelo <xref uid=&quot;langword_csharp_&lt;object Runat=&quot;Server&quot; Scope=&quot;Session&quot;/&gt;&quot; name=&quot;&lt;object Runat=&quot;Server&quot; Scope=&quot;Session&quot;/&gt;&quot; href=&quot;&quot;> </xref> etiquetas no ficheiro de aplicação de ASP.NET global. asax."
  remarks: "Se um objeto numa página não suporta serialização e <xref:System.Web.SessionState.HttpSessionState.Mode%2A>está fora do processo (<xref:System.Web.SessionState.SessionStateMode> ou <xref:System.Web.SessionState.SessionStateMode>), o objeto não será criado e não será adicionado a esta coleção.</xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.SessionStateMode> </xref:System.Web.SessionState.HttpSessionState.Mode%2A>       A propriedade StaticObjects é fornecida para compatibilidade com versões anteriores do ASP."
  example:
  - "The following code example lists the `id` and object type of the objects in the StaticObjects collection.  \n  \n [!code-cs[HttpSessionState#10](~/add/codesnippet/csharp/p-system.web.sessionstat_9_1.aspx)]\n [!code-vb[HttpSessionState#10](~/add/codesnippet/visualbasic/p-system.web.sessionstat_9_1.aspx)]"
  syntax:
    content: public System.Web.HttpStaticObjectsCollection StaticObjects { get; }
    return:
      type: System.Web.HttpStaticObjectsCollection
      description: "Um <xref href=&quot;System.Web.HttpStaticObjectsCollection&quot;> </xref> que contêm objetos declarada no ficheiro global. asax."
  overload: System.Web.SessionState.HttpSessionState.StaticObjects*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.SyncRoot
  id: SyncRoot
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: SyncRoot
  nameWithType: HttpSessionState.SyncRoot
  fullName: System.Web.SessionState.HttpSessionState.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Obtém um objeto que pode ser utilizado para sincronizar o acesso à coleção de valores de estado da sessão."
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "Um objeto que pode ser utilizado para sincronizar o acesso à coleção."
  overload: System.Web.SessionState.HttpSessionState.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.HttpSessionState.Timeout
  id: Timeout
  parent: System.Web.SessionState.HttpSessionState
  langs:
  - csharp
  name: Timeout
  nameWithType: HttpSessionState.Timeout
  fullName: System.Web.SessionState.HttpSessionState.Timeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Obtém e define a quantidade de tempo, em minutos, permitidos entre pedidos antes do fornecedor de estado da sessão termina a sessão."
  remarks: "A propriedade de tempo limite pode ser definida no ficheiro Web. config para uma aplicação utilizando o `timeout` atributo do elemento de configuração, ou pode definir o valor da propriedade limite de tempo diretamente com o código da aplicação.       A propriedade limite de tempo não é possível definir um valor superior a 525,600 minutos (1 ano). O valor predefinido é 20 minutos."
  example:
  - "The following code example sets the `timeout` session attribute to 30 minutes in the Web.config file.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <sessionState   \n      mode=\"InProc\"  \n      cookieless=\"true\"  \n      timeout=\"30\" />  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: public int Timeout { get; set; }
    return:
      type: System.Int32
      description: "O período de tempo limite, em minutos."
  overload: System.Web.SessionState.HttpSessionState.Timeout*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.SessionState.HttpSessionState.Abandon
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Abandon()
  nameWithType: HttpSessionState.Abandon()
  fullName: System.Web.SessionState.HttpSessionState.Abandon()
- uid: System.Web.SessionState.HttpSessionState.Add(System.String,System.Object)
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Add(String,Object)
  nameWithType: HttpSessionState.Add(String,Object)
  fullName: System.Web.SessionState.HttpSessionState.Add(String,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.SessionState.HttpSessionState.Clear
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Clear()
  nameWithType: HttpSessionState.Clear()
  fullName: System.Web.SessionState.HttpSessionState.Clear()
- uid: System.Web.SessionState.HttpSessionState.CodePage
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: CodePage
  nameWithType: HttpSessionState.CodePage
  fullName: System.Web.SessionState.HttpSessionState.CodePage
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.SessionState.HttpSessionState.Contents
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Contents
  nameWithType: HttpSessionState.Contents
  fullName: System.Web.SessionState.HttpSessionState.Contents
- uid: System.Web.SessionState.HttpSessionState
  parent: System.Web.SessionState
  isExternal: false
  name: HttpSessionState
  nameWithType: HttpSessionState
  fullName: System.Web.SessionState.HttpSessionState
- uid: System.Web.SessionState.HttpSessionState.CookieMode
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: CookieMode
  nameWithType: HttpSessionState.CookieMode
  fullName: System.Web.SessionState.HttpSessionState.CookieMode
- uid: System.Web.HttpCookieMode
  parent: System.Web
  isExternal: false
  name: HttpCookieMode
  nameWithType: HttpCookieMode
  fullName: System.Web.HttpCookieMode
- uid: System.Web.SessionState.HttpSessionState.CopyTo(System.Array,System.Int32)
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: HttpSessionState.CopyTo(Array,Int32)
  fullName: System.Web.SessionState.HttpSessionState.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Web.SessionState.HttpSessionState.Count
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Count
  nameWithType: HttpSessionState.Count
  fullName: System.Web.SessionState.HttpSessionState.Count
- uid: System.Web.SessionState.HttpSessionState.GetEnumerator
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: GetEnumerator()
  nameWithType: HttpSessionState.GetEnumerator()
  fullName: System.Web.SessionState.HttpSessionState.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.SessionState.HttpSessionState.IsCookieless
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsCookieless
  nameWithType: HttpSessionState.IsCookieless
  fullName: System.Web.SessionState.HttpSessionState.IsCookieless
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.SessionState.HttpSessionState.IsNewSession
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsNewSession
  nameWithType: HttpSessionState.IsNewSession
  fullName: System.Web.SessionState.HttpSessionState.IsNewSession
- uid: System.Web.SessionState.HttpSessionState.IsReadOnly
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsReadOnly
  nameWithType: HttpSessionState.IsReadOnly
  fullName: System.Web.SessionState.HttpSessionState.IsReadOnly
- uid: System.Web.SessionState.HttpSessionState.IsSynchronized
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsSynchronized
  nameWithType: HttpSessionState.IsSynchronized
  fullName: System.Web.SessionState.HttpSessionState.IsSynchronized
- uid: System.Web.SessionState.HttpSessionState.Item(System.Int32)
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Item(Int32)
  nameWithType: HttpSessionState.Item(Int32)
  fullName: System.Web.SessionState.HttpSessionState.Item(Int32)
- uid: System.Web.SessionState.HttpSessionState.Item(System.String)
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Item(String)
  nameWithType: HttpSessionState.Item(String)
  fullName: System.Web.SessionState.HttpSessionState.Item(String)
- uid: System.Web.SessionState.HttpSessionState.Keys
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Keys
  nameWithType: HttpSessionState.Keys
  fullName: System.Web.SessionState.HttpSessionState.Keys
- uid: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameObjectCollectionBase+KeysCollection
  nameWithType: NameObjectCollectionBase+KeysCollection
  fullName: System.Collections.Specialized.NameObjectCollectionBase+KeysCollection
- uid: System.Web.SessionState.HttpSessionState.LCID
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: LCID
  nameWithType: HttpSessionState.LCID
  fullName: System.Web.SessionState.HttpSessionState.LCID
- uid: System.Web.SessionState.HttpSessionState.Mode
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Mode
  nameWithType: HttpSessionState.Mode
  fullName: System.Web.SessionState.HttpSessionState.Mode
- uid: System.Web.SessionState.SessionStateMode
  parent: System.Web.SessionState
  isExternal: false
  name: SessionStateMode
  nameWithType: SessionStateMode
  fullName: System.Web.SessionState.SessionStateMode
- uid: System.Web.SessionState.HttpSessionState.Remove(System.String)
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Remove(String)
  nameWithType: HttpSessionState.Remove(String)
  fullName: System.Web.SessionState.HttpSessionState.Remove(String)
- uid: System.Web.SessionState.HttpSessionState.RemoveAll
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: RemoveAll()
  nameWithType: HttpSessionState.RemoveAll()
  fullName: System.Web.SessionState.HttpSessionState.RemoveAll()
- uid: System.Web.SessionState.HttpSessionState.RemoveAt(System.Int32)
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: HttpSessionState.RemoveAt(Int32)
  fullName: System.Web.SessionState.HttpSessionState.RemoveAt(Int32)
- uid: System.Web.SessionState.HttpSessionState.SessionID
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: SessionID
  nameWithType: HttpSessionState.SessionID
  fullName: System.Web.SessionState.HttpSessionState.SessionID
- uid: System.Web.SessionState.HttpSessionState.StaticObjects
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: StaticObjects
  nameWithType: HttpSessionState.StaticObjects
  fullName: System.Web.SessionState.HttpSessionState.StaticObjects
- uid: System.Web.HttpStaticObjectsCollection
  parent: System.Web
  isExternal: false
  name: HttpStaticObjectsCollection
  nameWithType: HttpStaticObjectsCollection
  fullName: System.Web.HttpStaticObjectsCollection
- uid: System.Web.SessionState.HttpSessionState.SyncRoot
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: SyncRoot
  nameWithType: HttpSessionState.SyncRoot
  fullName: System.Web.SessionState.HttpSessionState.SyncRoot
- uid: System.Web.SessionState.HttpSessionState.Timeout
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Timeout
  nameWithType: HttpSessionState.Timeout
  fullName: System.Web.SessionState.HttpSessionState.Timeout
- uid: System.Web.SessionState.HttpSessionState.Abandon*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Abandon
  nameWithType: HttpSessionState.Abandon
- uid: System.Web.SessionState.HttpSessionState.Add*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Add
  nameWithType: HttpSessionState.Add
- uid: System.Web.SessionState.HttpSessionState.Clear*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Clear
  nameWithType: HttpSessionState.Clear
- uid: System.Web.SessionState.HttpSessionState.CodePage*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: CodePage
  nameWithType: HttpSessionState.CodePage
- uid: System.Web.SessionState.HttpSessionState.Contents*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Contents
  nameWithType: HttpSessionState.Contents
- uid: System.Web.SessionState.HttpSessionState.CookieMode*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: CookieMode
  nameWithType: HttpSessionState.CookieMode
- uid: System.Web.SessionState.HttpSessionState.CopyTo*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: CopyTo
  nameWithType: HttpSessionState.CopyTo
- uid: System.Web.SessionState.HttpSessionState.Count*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Count
  nameWithType: HttpSessionState.Count
- uid: System.Web.SessionState.HttpSessionState.GetEnumerator*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: GetEnumerator
  nameWithType: HttpSessionState.GetEnumerator
- uid: System.Web.SessionState.HttpSessionState.IsCookieless*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsCookieless
  nameWithType: HttpSessionState.IsCookieless
- uid: System.Web.SessionState.HttpSessionState.IsNewSession*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsNewSession
  nameWithType: HttpSessionState.IsNewSession
- uid: System.Web.SessionState.HttpSessionState.IsReadOnly*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsReadOnly
  nameWithType: HttpSessionState.IsReadOnly
- uid: System.Web.SessionState.HttpSessionState.IsSynchronized*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: IsSynchronized
  nameWithType: HttpSessionState.IsSynchronized
- uid: System.Web.SessionState.HttpSessionState.Item*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Item
  nameWithType: HttpSessionState.Item
- uid: System.Web.SessionState.HttpSessionState.Keys*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Keys
  nameWithType: HttpSessionState.Keys
- uid: System.Web.SessionState.HttpSessionState.LCID*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: LCID
  nameWithType: HttpSessionState.LCID
- uid: System.Web.SessionState.HttpSessionState.Mode*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Mode
  nameWithType: HttpSessionState.Mode
- uid: System.Web.SessionState.HttpSessionState.Remove*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Remove
  nameWithType: HttpSessionState.Remove
- uid: System.Web.SessionState.HttpSessionState.RemoveAll*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: RemoveAll
  nameWithType: HttpSessionState.RemoveAll
- uid: System.Web.SessionState.HttpSessionState.RemoveAt*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: RemoveAt
  nameWithType: HttpSessionState.RemoveAt
- uid: System.Web.SessionState.HttpSessionState.SessionID*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: SessionID
  nameWithType: HttpSessionState.SessionID
- uid: System.Web.SessionState.HttpSessionState.StaticObjects*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: StaticObjects
  nameWithType: HttpSessionState.StaticObjects
- uid: System.Web.SessionState.HttpSessionState.SyncRoot*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: SyncRoot
  nameWithType: HttpSessionState.SyncRoot
- uid: System.Web.SessionState.HttpSessionState.Timeout*
  parent: System.Web.SessionState.HttpSessionState
  isExternal: false
  name: Timeout
  nameWithType: HttpSessionState.Timeout
