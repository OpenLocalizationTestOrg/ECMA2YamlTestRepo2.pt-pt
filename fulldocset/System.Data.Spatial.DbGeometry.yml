### YamlMime:ManagedReference
items:
- uid: System.Data.Spatial.DbGeometry
  id: DbGeometry
  children:
  - System.Data.Spatial.DbGeometry.Area
  - System.Data.Spatial.DbGeometry.AsBinary
  - System.Data.Spatial.DbGeometry.AsGml
  - System.Data.Spatial.DbGeometry.AsText
  - System.Data.Spatial.DbGeometry.Boundary
  - System.Data.Spatial.DbGeometry.Buffer(System.Nullable{System.Double})
  - System.Data.Spatial.DbGeometry.Centroid
  - System.Data.Spatial.DbGeometry.Contains(System.Data.Spatial.DbGeometry)
  - System.Data.Spatial.DbGeometry.ConvexHull
  - System.Data.Spatial.DbGeometry.CoordinateSystemId
  - System.Data.Spatial.DbGeometry.Crosses(System.Data.Spatial.DbGeometry)
  - System.Data.Spatial.DbGeometry.DefaultCoordinateSystemId
  - System.Data.Spatial.DbGeometry.Difference(System.Data.Spatial.DbGeometry)
  - System.Data.Spatial.DbGeometry.Dimension
  - System.Data.Spatial.DbGeometry.Disjoint(System.Data.Spatial.DbGeometry)
  - System.Data.Spatial.DbGeometry.Distance(System.Data.Spatial.DbGeometry)
  - System.Data.Spatial.DbGeometry.ElementAt(System.Int32)
  - System.Data.Spatial.DbGeometry.ElementCount
  - System.Data.Spatial.DbGeometry.Elevation
  - System.Data.Spatial.DbGeometry.EndPoint
  - System.Data.Spatial.DbGeometry.Envelope
  - System.Data.Spatial.DbGeometry.ExteriorRing
  - System.Data.Spatial.DbGeometry.FromBinary(System.Byte[])
  - System.Data.Spatial.DbGeometry.FromBinary(System.Byte[],System.Int32)
  - System.Data.Spatial.DbGeometry.FromGml(System.String)
  - System.Data.Spatial.DbGeometry.FromGml(System.String,System.Int32)
  - System.Data.Spatial.DbGeometry.FromText(System.String)
  - System.Data.Spatial.DbGeometry.FromText(System.String,System.Int32)
  - System.Data.Spatial.DbGeometry.GeometryCollectionFromBinary(System.Byte[],System.Int32)
  - System.Data.Spatial.DbGeometry.GeometryCollectionFromText(System.String,System.Int32)
  - System.Data.Spatial.DbGeometry.InteriorRingAt(System.Int32)
  - System.Data.Spatial.DbGeometry.InteriorRingCount
  - System.Data.Spatial.DbGeometry.Intersection(System.Data.Spatial.DbGeometry)
  - System.Data.Spatial.DbGeometry.Intersects(System.Data.Spatial.DbGeometry)
  - System.Data.Spatial.DbGeometry.IsClosed
  - System.Data.Spatial.DbGeometry.IsEmpty
  - System.Data.Spatial.DbGeometry.IsRing
  - System.Data.Spatial.DbGeometry.IsSimple
  - System.Data.Spatial.DbGeometry.IsValid
  - System.Data.Spatial.DbGeometry.Length
  - System.Data.Spatial.DbGeometry.LineFromBinary(System.Byte[],System.Int32)
  - System.Data.Spatial.DbGeometry.LineFromText(System.String,System.Int32)
  - System.Data.Spatial.DbGeometry.Measure
  - System.Data.Spatial.DbGeometry.MultiLineFromBinary(System.Byte[],System.Int32)
  - System.Data.Spatial.DbGeometry.MultiLineFromText(System.String,System.Int32)
  - System.Data.Spatial.DbGeometry.MultiPointFromBinary(System.Byte[],System.Int32)
  - System.Data.Spatial.DbGeometry.MultiPointFromText(System.String,System.Int32)
  - System.Data.Spatial.DbGeometry.MultiPolygonFromBinary(System.Byte[],System.Int32)
  - System.Data.Spatial.DbGeometry.MultiPolygonFromText(System.String,System.Int32)
  - System.Data.Spatial.DbGeometry.Overlaps(System.Data.Spatial.DbGeometry)
  - System.Data.Spatial.DbGeometry.PointAt(System.Int32)
  - System.Data.Spatial.DbGeometry.PointCount
  - System.Data.Spatial.DbGeometry.PointFromBinary(System.Byte[],System.Int32)
  - System.Data.Spatial.DbGeometry.PointFromText(System.String,System.Int32)
  - System.Data.Spatial.DbGeometry.PointOnSurface
  - System.Data.Spatial.DbGeometry.PolygonFromBinary(System.Byte[],System.Int32)
  - System.Data.Spatial.DbGeometry.PolygonFromText(System.String,System.Int32)
  - System.Data.Spatial.DbGeometry.ProviderValue
  - System.Data.Spatial.DbGeometry.Relate(System.Data.Spatial.DbGeometry,System.String)
  - System.Data.Spatial.DbGeometry.SpatialEquals(System.Data.Spatial.DbGeometry)
  - System.Data.Spatial.DbGeometry.SpatialTypeName
  - System.Data.Spatial.DbGeometry.StartPoint
  - System.Data.Spatial.DbGeometry.SymmetricDifference(System.Data.Spatial.DbGeometry)
  - System.Data.Spatial.DbGeometry.ToString
  - System.Data.Spatial.DbGeometry.Touches(System.Data.Spatial.DbGeometry)
  - System.Data.Spatial.DbGeometry.Union(System.Data.Spatial.DbGeometry)
  - System.Data.Spatial.DbGeometry.WellKnownValue
  - System.Data.Spatial.DbGeometry.Within(System.Data.Spatial.DbGeometry)
  - System.Data.Spatial.DbGeometry.XCoordinate
  - System.Data.Spatial.DbGeometry.YCoordinate
  langs:
  - csharp
  name: DbGeometry
  nameWithType: DbGeometry
  fullName: System.Data.Spatial.DbGeometry
  type: Class
  summary: "Provides a base class for objects that define geometric shapes."
  syntax:
    content: >-
      [System.ComponentModel.DataAnnotations.BindableType]

      [System.Runtime.Serialization.DataContract]

      public class DbGeometry
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.Area
  id: Area
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: Area
  nameWithType: DbGeometry.Area
  fullName: System.Data.Spatial.DbGeometry.Area
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Gets a nullable double value that indicates the area of this DbGeometry value, which may be null if this value does not represent a surface."
  syntax:
    content: public Nullable<double> Area { get; }
    return:
      type: System.Nullable{System.Double}
      description: "A nullable double value that indicates the area of this DbGeometry value."
  overload: System.Data.Spatial.DbGeometry.Area*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.AsBinary
  id: AsBinary
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: AsBinary()
  nameWithType: DbGeometry.AsBinary()
  fullName: System.Data.Spatial.DbGeometry.AsBinary()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Generates the well known binary representation of this DbGeometry value."
  syntax:
    content: public byte[] AsBinary ();
    parameters: []
    return:
      type: System.Byte[]
      description: "The well-known binary representation of this DbGeometry value."
  overload: System.Data.Spatial.DbGeometry.AsBinary*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.AsGml
  id: AsGml
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: AsGml()
  nameWithType: DbGeometry.AsGml()
  fullName: System.Data.Spatial.DbGeometry.AsGml()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Generates the Geography Markup Language (GML) representation of this DbGeometry value."
  syntax:
    content: public string AsGml ();
    parameters: []
    return:
      type: System.String
      description: "A string containing the GML representation of this DbGeometry value."
  overload: System.Data.Spatial.DbGeometry.AsGml*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.AsText
  id: AsText
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: AsText()
  nameWithType: DbGeometry.AsText()
  fullName: System.Data.Spatial.DbGeometry.AsText()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Generates the well known text representation of this DbGeometry value.  Includes only X and Y coordinates for points."
  syntax:
    content: public string AsText ();
    parameters: []
    return:
      type: System.String
      description: "A string containing the well known text representation of this DbGeometry value."
  overload: System.Data.Spatial.DbGeometry.AsText*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.Boundary
  id: Boundary
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: Boundary
  nameWithType: DbGeometry.Boundary
  fullName: System.Data.Spatial.DbGeometry.Boundary
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Gets the boundary of the DbGeometry objects."
  syntax:
    content: public System.Data.Spatial.DbGeometry Boundary { get; }
    return:
      type: System.Data.Spatial.DbGeometry
      description: "The boundary of the DbGeometry objects."
  overload: System.Data.Spatial.DbGeometry.Boundary*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.Buffer(System.Nullable{System.Double})
  id: Buffer(System.Nullable{System.Double})
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: Buffer(Nullable<Double>)
  nameWithType: DbGeometry.Buffer(Nullable<Double>)
  fullName: System.Data.Spatial.DbGeometry.Buffer(Nullable<Double>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Returns a geometry object that represents the union of all points whose distance from a geometry instance is less than or equal to a specified value."
  syntax:
    content: public System.Data.Spatial.DbGeometry Buffer (Nullable<double> distance);
    parameters:
    - id: distance
      type: System.Nullable{System.Double}
      description: "The distance."
    return:
      type: System.Data.Spatial.DbGeometry
      description: "A geometry object that represents the union of all points."
  overload: System.Data.Spatial.DbGeometry.Buffer*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.Centroid
  id: Centroid
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: Centroid
  nameWithType: DbGeometry.Centroid
  fullName: System.Data.Spatial.DbGeometry.Centroid
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Gets the DbGeometry value that represents the centroid of this DbGeometry value, which may be null if this value does not represent a surface."
  syntax:
    content: public System.Data.Spatial.DbGeometry Centroid { get; }
    return:
      type: System.Data.Spatial.DbGeometry
      description: "The DbGeometry value that represents the centroid of this DbGeometry value."
  overload: System.Data.Spatial.DbGeometry.Centroid*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.Contains(System.Data.Spatial.DbGeometry)
  id: Contains(System.Data.Spatial.DbGeometry)
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: Contains(DbGeometry)
  nameWithType: DbGeometry.Contains(DbGeometry)
  fullName: System.Data.Spatial.DbGeometry.Contains(DbGeometry)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Determines whether this DbGeometry value spatially contains the specified DbGeometry argument."
  syntax:
    content: public bool Contains (System.Data.Spatial.DbGeometry other);
    parameters:
    - id: other
      type: System.Data.Spatial.DbGeometry
      description: "The geometry value that should be compared with this geometry value for containment."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if this geometry value contains <code>other</code>; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.Spatial.DbGeometry.Contains*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>other</code>
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.ConvexHull
  id: ConvexHull
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: ConvexHull
  nameWithType: DbGeometry.ConvexHull
  fullName: System.Data.Spatial.DbGeometry.ConvexHull
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Gets the convex hull of this DbGeometry value as another DbGeometry value."
  syntax:
    content: public System.Data.Spatial.DbGeometry ConvexHull { get; }
    return:
      type: System.Data.Spatial.DbGeometry
      description: "The convex hull of this DbGeometry value as another DbGeometry value."
  overload: System.Data.Spatial.DbGeometry.ConvexHull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.CoordinateSystemId
  id: CoordinateSystemId
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: CoordinateSystemId
  nameWithType: DbGeometry.CoordinateSystemId
  fullName: System.Data.Spatial.DbGeometry.CoordinateSystemId
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Gets the coordinate system identifier of the DbGeometry object."
  syntax:
    content: public int CoordinateSystemId { get; }
    return:
      type: System.Int32
      description: "The coordinate system identifier of the DbGeometry object."
  overload: System.Data.Spatial.DbGeometry.CoordinateSystemId*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.Crosses(System.Data.Spatial.DbGeometry)
  id: Crosses(System.Data.Spatial.DbGeometry)
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: Crosses(DbGeometry)
  nameWithType: DbGeometry.Crosses(DbGeometry)
  fullName: System.Data.Spatial.DbGeometry.Crosses(DbGeometry)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Determines whether this DbGeometry value spatially crosses the specified DbGeometry argument."
  syntax:
    content: public bool Crosses (System.Data.Spatial.DbGeometry other);
    parameters:
    - id: other
      type: System.Data.Spatial.DbGeometry
      description: "The geometry value that should be compared with this geometry value."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <code>other</code> crosses this geometry value; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.Spatial.DbGeometry.Crosses*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>other</code>
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.DefaultCoordinateSystemId
  id: DefaultCoordinateSystemId
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: DefaultCoordinateSystemId
  nameWithType: DbGeometry.DefaultCoordinateSystemId
  fullName: System.Data.Spatial.DbGeometry.DefaultCoordinateSystemId
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Gets the default coordinate system id (SRID) for geometry values."
  syntax:
    content: public static int DefaultCoordinateSystemId { get; }
    return:
      type: System.Int32
      description: "The default coordinate system id (SRID) for geometry values."
  overload: System.Data.Spatial.DbGeometry.DefaultCoordinateSystemId*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.Difference(System.Data.Spatial.DbGeometry)
  id: Difference(System.Data.Spatial.DbGeometry)
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: Difference(DbGeometry)
  nameWithType: DbGeometry.Difference(DbGeometry)
  fullName: System.Data.Spatial.DbGeometry.Difference(DbGeometry)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Computes the difference between this DbGeometry value and another DbGeometry value."
  syntax:
    content: public System.Data.Spatial.DbGeometry Difference (System.Data.Spatial.DbGeometry other);
    parameters:
    - id: other
      type: System.Data.Spatial.DbGeometry
      description: "The geometry value for which the difference with this value should be computed."
    return:
      type: System.Data.Spatial.DbGeometry
      description: "A new DbGeometry value representing the difference between this geometry value and <code>other</code>."
  overload: System.Data.Spatial.DbGeometry.Difference*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>other</code>
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.Dimension
  id: Dimension
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: Dimension
  nameWithType: DbGeometry.Dimension
  fullName: System.Data.Spatial.DbGeometry.Dimension
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Gets the dimension of the given <xref href=&quot;System.Data.Spatial.DbGeometry&quot;></xref> value or, if the value is a collection, the dimension of its largest element."
  syntax:
    content: public int Dimension { get; }
    return:
      type: System.Int32
      description: "The dimension of the given <xref href=&quot;System.Data.Spatial.DbGeometry&quot;></xref> value."
  overload: System.Data.Spatial.DbGeometry.Dimension*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.Disjoint(System.Data.Spatial.DbGeometry)
  id: Disjoint(System.Data.Spatial.DbGeometry)
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: Disjoint(DbGeometry)
  nameWithType: DbGeometry.Disjoint(DbGeometry)
  fullName: System.Data.Spatial.DbGeometry.Disjoint(DbGeometry)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Determines whether this DbGeometry is spatially disjoint from the specified DbGeometry argument."
  syntax:
    content: public bool Disjoint (System.Data.Spatial.DbGeometry other);
    parameters:
    - id: other
      type: System.Data.Spatial.DbGeometry
      description: "The geometry value that should be compared with this geometry value for disjointness."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <code>other</code> is disjoint from this geometry value; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.Spatial.DbGeometry.Disjoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>other</code>
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.Distance(System.Data.Spatial.DbGeometry)
  id: Distance(System.Data.Spatial.DbGeometry)
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: Distance(DbGeometry)
  nameWithType: DbGeometry.Distance(DbGeometry)
  fullName: System.Data.Spatial.DbGeometry.Distance(DbGeometry)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Computes the distance between the closest points in this DbGeometry value and another DbGeometry value."
  syntax:
    content: public Nullable<double> Distance (System.Data.Spatial.DbGeometry other);
    parameters:
    - id: other
      type: System.Data.Spatial.DbGeometry
      description: "The geometry value for which the distance from this value should be computed."
    return:
      type: System.Nullable{System.Double}
      description: "A double value that specifies the distance between the two closest points in this geometry value and <code>other</code>."
  overload: System.Data.Spatial.DbGeometry.Distance*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>other</code>
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.ElementAt(System.Int32)
  id: ElementAt(System.Int32)
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: ElementAt(Int32)
  nameWithType: DbGeometry.ElementAt(Int32)
  fullName: System.Data.Spatial.DbGeometry.ElementAt(Int32)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Returns an element of this DbGeometry value from a specific position, if it represents a geometry collection. &lt;param name=&quot;index&quot;&gt;The position within this geometry value from which the element should be taken.&lt;/param&gt;&lt;returns&gt;The element in this geometry value at the specified position, if it represents a collection of other geometry values; otherwise <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.&lt;/returns&gt;"
  syntax:
    content: public System.Data.Spatial.DbGeometry ElementAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "The index."
    return:
      type: System.Data.Spatial.DbGeometry
      description: "An element of this DbGeometry value from a specific position."
  overload: System.Data.Spatial.DbGeometry.ElementAt*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.ElementCount
  id: ElementCount
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: ElementCount
  nameWithType: DbGeometry.ElementCount
  fullName: System.Data.Spatial.DbGeometry.ElementCount
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Gets the number of elements in this DbGeometry value, if it represents a geometry collection. &lt;returns&gt;The number of elements in this geometry value, if it represents a collection of other geometry values; otherwise <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.&lt;/returns&gt;"
  syntax:
    content: public Nullable<int> ElementCount { get; }
    return:
      type: System.Nullable{System.Int32}
      description: "The number of elements in this DbGeometry value."
  overload: System.Data.Spatial.DbGeometry.ElementCount*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.Elevation
  id: Elevation
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: Elevation
  nameWithType: DbGeometry.Elevation
  fullName: System.Data.Spatial.DbGeometry.Elevation
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Gets the elevation (Z coordinate) of this DbGeometry value, if it represents a point. &lt;returns&gt;The elevation (Z coordinate) of this geometry value, if it represents a point; otherwise <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.&lt;/returns&gt;"
  syntax:
    content: public Nullable<double> Elevation { get; }
    return:
      type: System.Nullable{System.Double}
      description: "The elevation (Z coordinate) of this DbGeometry value."
  overload: System.Data.Spatial.DbGeometry.Elevation*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.EndPoint
  id: EndPoint
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: EndPoint
  nameWithType: DbGeometry.EndPoint
  fullName: System.Data.Spatial.DbGeometry.EndPoint
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Gets a DbGeometry value representing the start point of this value, which may be null if this DbGeometry value does not represent a curve."
  syntax:
    content: public System.Data.Spatial.DbGeometry EndPoint { get; }
    return:
      type: System.Data.Spatial.DbGeometry
      description: "A DbGeometry value representing the start point of this value."
  overload: System.Data.Spatial.DbGeometry.EndPoint*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.Envelope
  id: Envelope
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: Envelope
  nameWithType: DbGeometry.Envelope
  fullName: System.Data.Spatial.DbGeometry.Envelope
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Gets the envelope (minimum bounding box) of this DbGeometry value, as a geometry value."
  syntax:
    content: public System.Data.Spatial.DbGeometry Envelope { get; }
    return:
      type: System.Data.Spatial.DbGeometry
      description: "The envelope (minimum bounding box) of this DbGeometry value."
  overload: System.Data.Spatial.DbGeometry.Envelope*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.ExteriorRing
  id: ExteriorRing
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: ExteriorRing
  nameWithType: DbGeometry.ExteriorRing
  fullName: System.Data.Spatial.DbGeometry.ExteriorRing
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Gets the DbGeometry value that represents the exterior ring of this DbGeometry value, which may be null if this value does not represent a polygon."
  syntax:
    content: public System.Data.Spatial.DbGeometry ExteriorRing { get; }
    return:
      type: System.Data.Spatial.DbGeometry
      description: "The DbGeometry value that represents the exterior ring of this DbGeometry value."
  overload: System.Data.Spatial.DbGeometry.ExteriorRing*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.FromBinary(System.Byte[])
  id: FromBinary(System.Byte[])
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: FromBinary(Byte[])
  nameWithType: DbGeometry.FromBinary(Byte[])
  fullName: System.Data.Spatial.DbGeometry.FromBinary(Byte[])
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Creates a new <xref href=&quot;System.Data.Spatial.DbGeometry&quot;></xref> value based on the specified well known binary value."
  syntax:
    content: public static System.Data.Spatial.DbGeometry FromBinary (byte[] wellKnownBinary);
    parameters:
    - id: wellKnownBinary
      type: System.Byte[]
      description: "A byte array that contains a well known binary representation of the geometry value."
    return:
      type: System.Data.Spatial.DbGeometry
      description: "A new DbGeometry value as defined by the well known binary value with the default geometry coordinate system identifier (<xref:System.Data.Spatial.DbGeometry.DefaultCoordinateSystemId*>)."
  overload: System.Data.Spatial.DbGeometry.FromBinary*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>wellKnownBinary</code>
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.FromBinary(System.Byte[],System.Int32)
  id: FromBinary(System.Byte[],System.Int32)
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: FromBinary(Byte[],Int32)
  nameWithType: DbGeometry.FromBinary(Byte[],Int32)
  fullName: System.Data.Spatial.DbGeometry.FromBinary(Byte[],Int32)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Creates a new <xref href=&quot;System.Data.Spatial.DbGeometry&quot;></xref> value based on the specified well known binary value and coordinate system identifier (SRID)."
  syntax:
    content: public static System.Data.Spatial.DbGeometry FromBinary (byte[] wellKnownBinary, int coordinateSystemId);
    parameters:
    - id: wellKnownBinary
      type: System.Byte[]
      description: "A byte array that contains a well known binary representation of the geometry value."
    - id: coordinateSystemId
      type: System.Int32
      description: "The identifier of the coordinate system that the new DbGeometry value should use."
    return:
      type: System.Data.Spatial.DbGeometry
      description: "A new DbGeometry value as defined by the well known binary value with the specified coordinate system identifier."
  overload: System.Data.Spatial.DbGeometry.FromBinary*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>wellKnownBinary</code>
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>coordinateSystemId</code>
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.FromGml(System.String)
  id: FromGml(System.String)
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: FromGml(String)
  nameWithType: DbGeometry.FromGml(String)
  fullName: System.Data.Spatial.DbGeometry.FromGml(String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Creates a new <xref href=&quot;System.Data.Spatial.DbGeometry&quot;></xref> value based on the specified Geography Markup Language (GML) value."
  syntax:
    content: public static System.Data.Spatial.DbGeometry FromGml (string geometryMarkup);
    parameters:
    - id: geometryMarkup
      type: System.String
      description: "A string that contains a Geography Markup Language (GML) representation of the geometry value."
    return:
      type: System.Data.Spatial.DbGeometry
      description: "A new DbGeometry value as defined by the GML value with the default geometry coordinate system identifier (SRID) (<xref:System.Data.Spatial.DbGeometry.DefaultCoordinateSystemId*>)."
  overload: System.Data.Spatial.DbGeometry.FromGml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>geometryMarkup</code>
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.FromGml(System.String,System.Int32)
  id: FromGml(System.String,System.Int32)
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: FromGml(String,Int32)
  nameWithType: DbGeometry.FromGml(String,Int32)
  fullName: System.Data.Spatial.DbGeometry.FromGml(String,Int32)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Creates a new <xref href=&quot;System.Data.Spatial.DbGeometry&quot;></xref> value based on the specified Geography Markup Language (GML) value and coordinate system identifier (SRID)."
  syntax:
    content: public static System.Data.Spatial.DbGeometry FromGml (string geometryMarkup, int coordinateSystemId);
    parameters:
    - id: geometryMarkup
      type: System.String
      description: "A string that contains a Geography Markup Language (GML) representation of the geometry value."
    - id: coordinateSystemId
      type: System.Int32
      description: "The identifier of the coordinate system that the new DbGeometry value should use."
    return:
      type: System.Data.Spatial.DbGeometry
      description: "A new DbGeometry value as defined by the GML value with the specified coordinate system identifier."
  overload: System.Data.Spatial.DbGeometry.FromGml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>geometryMarkup</code>
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>coordinateSystemId</code>
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.FromText(System.String)
  id: FromText(System.String)
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: FromText(String)
  nameWithType: DbGeometry.FromText(String)
  fullName: System.Data.Spatial.DbGeometry.FromText(String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Creates a new <xref href=&quot;System.Data.Spatial.DbGeometry&quot;></xref> value based on the specified well known text value."
  syntax:
    content: public static System.Data.Spatial.DbGeometry FromText (string wellKnownText);
    parameters:
    - id: wellKnownText
      type: System.String
      description: "A string that contains a well known text representation of the geometry value."
    return:
      type: System.Data.Spatial.DbGeometry
      description: "A new DbGeometry value as defined by the well known text value with the default geometry coordinate system identifier (SRID) (<xref:System.Data.Spatial.DbGeometry.DefaultCoordinateSystemId*>)."
  overload: System.Data.Spatial.DbGeometry.FromText*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>wellKnownText</code>
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.FromText(System.String,System.Int32)
  id: FromText(System.String,System.Int32)
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: FromText(String,Int32)
  nameWithType: DbGeometry.FromText(String,Int32)
  fullName: System.Data.Spatial.DbGeometry.FromText(String,Int32)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Creates a new <xref href=&quot;System.Data.Spatial.DbGeometry&quot;></xref> value based on the specified well known text value and coordinate system identifier (SRID)."
  syntax:
    content: public static System.Data.Spatial.DbGeometry FromText (string wellKnownText, int coordinateSystemId);
    parameters:
    - id: wellKnownText
      type: System.String
      description: "A string that contains a well known text representation of the geometry value."
    - id: coordinateSystemId
      type: System.Int32
      description: "The identifier of the coordinate system that the new DbGeometry value should use."
    return:
      type: System.Data.Spatial.DbGeometry
      description: "A new DbGeometry value as defined by the well known text value with the specified coordinate system identifier."
  overload: System.Data.Spatial.DbGeometry.FromText*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>wellKnownText</code>
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>coordinateSystemId</code>
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.GeometryCollectionFromBinary(System.Byte[],System.Int32)
  id: GeometryCollectionFromBinary(System.Byte[],System.Int32)
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: GeometryCollectionFromBinary(Byte[],Int32)
  nameWithType: DbGeometry.GeometryCollectionFromBinary(Byte[],Int32)
  fullName: System.Data.Spatial.DbGeometry.GeometryCollectionFromBinary(Byte[],Int32)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Creates a new <xref href=&quot;System.Data.Spatial.DbGeometry&quot;></xref> collection value based on the specified well known binary value and coordinate system identifier (SRID)."
  syntax:
    content: public static System.Data.Spatial.DbGeometry GeometryCollectionFromBinary (byte[] geometryCollectionWellKnownBinary, int coordinateSystemId);
    parameters:
    - id: geometryCollectionWellKnownBinary
      type: System.Byte[]
      description: "A byte array that contains a well known binary representation of the geometry value."
    - id: coordinateSystemId
      type: System.Int32
      description: "The identifier of the coordinate system that the new DbGeometry value should use."
    return:
      type: System.Data.Spatial.DbGeometry
      description: "A new DbGeometry value as defined by the well known binary value with the specified coordinate system identifier."
  overload: System.Data.Spatial.DbGeometry.GeometryCollectionFromBinary*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>geometryCollectionWellKnownBinary</code>
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>coordinateSystemId</code>
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.GeometryCollectionFromText(System.String,System.Int32)
  id: GeometryCollectionFromText(System.String,System.Int32)
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: GeometryCollectionFromText(String,Int32)
  nameWithType: DbGeometry.GeometryCollectionFromText(String,Int32)
  fullName: System.Data.Spatial.DbGeometry.GeometryCollectionFromText(String,Int32)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Creates a new <xref href=&quot;System.Data.Spatial.DbGeometry&quot;></xref> collection value based on the specified well known text value and coordinate system identifier (SRID)."
  syntax:
    content: public static System.Data.Spatial.DbGeometry GeometryCollectionFromText (string geometryCollectionWellKnownText, int coordinateSystemId);
    parameters:
    - id: geometryCollectionWellKnownText
      type: System.String
      description: "A string that contains a well known text representation of the geometry value."
    - id: coordinateSystemId
      type: System.Int32
      description: "The identifier of the coordinate system that the new DbGeometry value should use."
    return:
      type: System.Data.Spatial.DbGeometry
      description: "A new DbGeometry value as defined by the well known text value with the specified coordinate system identifier."
  overload: System.Data.Spatial.DbGeometry.GeometryCollectionFromText*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>geometryCollectionWellKnownText</code>
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>coordinateSystemId</code>
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.InteriorRingAt(System.Int32)
  id: InteriorRingAt(System.Int32)
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: InteriorRingAt(Int32)
  nameWithType: DbGeometry.InteriorRingAt(Int32)
  fullName: System.Data.Spatial.DbGeometry.InteriorRingAt(Int32)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Returns an interior ring from this DbGeometry value at a specific position, if it represents a polygon. &lt;param name=&quot;index&quot;&gt;The position within this geometry value from which the interior ring should be taken.&lt;/param&gt;&lt;returns&gt;The interior ring in this geometry value at the specified position, if it represents a polygon; otherwise <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.&lt;/returns&gt;"
  syntax:
    content: public System.Data.Spatial.DbGeometry InteriorRingAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "The index."
    return:
      type: System.Data.Spatial.DbGeometry
      description: "An interior ring from this DbGeometry value at a specific position."
  overload: System.Data.Spatial.DbGeometry.InteriorRingAt*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.InteriorRingCount
  id: InteriorRingCount
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: InteriorRingCount
  nameWithType: DbGeometry.InteriorRingCount
  fullName: System.Data.Spatial.DbGeometry.InteriorRingCount
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Gets the number of interior rings in this DbGeometry value, if it represents a polygon. &lt;returns&gt;The number of elements in this geometry value, if it represents a polygon; otherwise <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.&lt;/returns&gt;"
  syntax:
    content: public Nullable<int> InteriorRingCount { get; }
    return:
      type: System.Nullable{System.Int32}
      description: "The number of interior rings in this DbGeometry value."
  overload: System.Data.Spatial.DbGeometry.InteriorRingCount*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.Intersection(System.Data.Spatial.DbGeometry)
  id: Intersection(System.Data.Spatial.DbGeometry)
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: Intersection(DbGeometry)
  nameWithType: DbGeometry.Intersection(DbGeometry)
  fullName: System.Data.Spatial.DbGeometry.Intersection(DbGeometry)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Computes the intersection of this DbGeometry value and another DbGeometry value."
  syntax:
    content: public System.Data.Spatial.DbGeometry Intersection (System.Data.Spatial.DbGeometry other);
    parameters:
    - id: other
      type: System.Data.Spatial.DbGeometry
      description: "The geometry value for which the intersection with this value should be computed."
    return:
      type: System.Data.Spatial.DbGeometry
      description: "A new DbGeometry value representing the intersection between this geometry value and <code>other</code>."
  overload: System.Data.Spatial.DbGeometry.Intersection*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>other</code>
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.Intersects(System.Data.Spatial.DbGeometry)
  id: Intersects(System.Data.Spatial.DbGeometry)
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: Intersects(DbGeometry)
  nameWithType: DbGeometry.Intersects(DbGeometry)
  fullName: System.Data.Spatial.DbGeometry.Intersects(DbGeometry)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Determines whether this DbGeometry value spatially intersects the specified DbGeometry argument."
  syntax:
    content: public bool Intersects (System.Data.Spatial.DbGeometry other);
    parameters:
    - id: other
      type: System.Data.Spatial.DbGeometry
      description: "The geometry value that should be compared with this geometry value for intersection."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <code>other</code> intersects this geometry value; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.Spatial.DbGeometry.Intersects*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>other</code>
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.IsClosed
  id: IsClosed
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: IsClosed
  nameWithType: DbGeometry.IsClosed
  fullName: System.Data.Spatial.DbGeometry.IsClosed
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Gets a nullable Boolean value indicating whether this DbGeometry value is closed, which may be null if this value does not represent a curve."
  syntax:
    content: public Nullable<bool> IsClosed { get; }
    return:
      type: System.Nullable{System.Boolean}
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref> if this DbGeometry value is closed; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.Spatial.DbGeometry.IsClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.IsEmpty
  id: IsEmpty
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: IsEmpty
  nameWithType: DbGeometry.IsEmpty
  fullName: System.Data.Spatial.DbGeometry.IsEmpty
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Gets a nullable Boolean value indicating whether this DbGeometry value is empty, which may be null if this value does not represent a curve."
  syntax:
    content: public bool IsEmpty { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref> if this DbGeometry value is empty; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.Spatial.DbGeometry.IsEmpty*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.IsRing
  id: IsRing
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: IsRing
  nameWithType: DbGeometry.IsRing
  fullName: System.Data.Spatial.DbGeometry.IsRing
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Gets a nullable Boolean value indicating whether this DbGeometry value is a ring, which may be null if this value does not represent a curve."
  syntax:
    content: public Nullable<bool> IsRing { get; }
    return:
      type: System.Nullable{System.Boolean}
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref> if this DbGeometry value is a ring; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.Spatial.DbGeometry.IsRing*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.IsSimple
  id: IsSimple
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: IsSimple
  nameWithType: DbGeometry.IsSimple
  fullName: System.Data.Spatial.DbGeometry.IsSimple
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Gets a nullable Boolean value indicating whether this DbGeometry value is simple."
  syntax:
    content: public bool IsSimple { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref> if this DbGeometry value is simple; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.Spatial.DbGeometry.IsSimple*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.IsValid
  id: IsValid
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: IsValid
  nameWithType: DbGeometry.IsValid
  fullName: System.Data.Spatial.DbGeometry.IsValid
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Gets a nullable Boolean value indicating whether this DbGeometry value is valid."
  syntax:
    content: public bool IsValid { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref> if this DbGeometry value is valid; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.Spatial.DbGeometry.IsValid*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.Length
  id: Length
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: Length
  nameWithType: DbGeometry.Length
  fullName: System.Data.Spatial.DbGeometry.Length
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Gets a nullable double value that indicates the length of this DbGeometry value, which may be null if this value does not represent a curve."
  syntax:
    content: public Nullable<double> Length { get; }
    return:
      type: System.Nullable{System.Double}
      description: "The length of this DbGeometry value."
  overload: System.Data.Spatial.DbGeometry.Length*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.LineFromBinary(System.Byte[],System.Int32)
  id: LineFromBinary(System.Byte[],System.Int32)
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: LineFromBinary(Byte[],Int32)
  nameWithType: DbGeometry.LineFromBinary(Byte[],Int32)
  fullName: System.Data.Spatial.DbGeometry.LineFromBinary(Byte[],Int32)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Creates a new <xref href=&quot;System.Data.Spatial.DbGeometry&quot;></xref> line value based on the specified well known binary value and coordinate system identifier (SRID)."
  syntax:
    content: public static System.Data.Spatial.DbGeometry LineFromBinary (byte[] lineWellKnownBinary, int coordinateSystemId);
    parameters:
    - id: lineWellKnownBinary
      type: System.Byte[]
      description: "A byte array that contains a well known binary representation of the geometry value."
    - id: coordinateSystemId
      type: System.Int32
      description: "The identifier of the coordinate system that the new DbGeometry value should use."
    return:
      type: System.Data.Spatial.DbGeometry
      description: "A new DbGeometry value as defined by the well known binary value with the specified coordinate system identifier."
  overload: System.Data.Spatial.DbGeometry.LineFromBinary*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>lineWellKnownBinary</code>
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>coordinateSystemId</code>
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.LineFromText(System.String,System.Int32)
  id: LineFromText(System.String,System.Int32)
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: LineFromText(String,Int32)
  nameWithType: DbGeometry.LineFromText(String,Int32)
  fullName: System.Data.Spatial.DbGeometry.LineFromText(String,Int32)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Creates a new <xref href=&quot;System.Data.Spatial.DbGeometry&quot;></xref> line value based on the specified well known text value and coordinate system identifier (SRID)."
  syntax:
    content: public static System.Data.Spatial.DbGeometry LineFromText (string lineWellKnownText, int coordinateSystemId);
    parameters:
    - id: lineWellKnownText
      type: System.String
      description: "A string that contains a well known text representation of the geometry value."
    - id: coordinateSystemId
      type: System.Int32
      description: "The identifier of the coordinate system that the new DbGeometry value should use."
    return:
      type: System.Data.Spatial.DbGeometry
      description: "A new DbGeometry value as defined by the well known text value with the specified coordinate system identifier."
  overload: System.Data.Spatial.DbGeometry.LineFromText*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>lineWellKnownText</code>
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>coordinateSystemId</code>
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.Measure
  id: Measure
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: Measure
  nameWithType: DbGeometry.Measure
  fullName: System.Data.Spatial.DbGeometry.Measure
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Gets the Measure (M coordinate) of this DbGeometry value, if it represents a point. &lt;returns&gt;The Measure (M coordinate) value of this geometry value, if it represents a point; otherwise <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.&lt;/returns&gt;"
  syntax:
    content: public Nullable<double> Measure { get; }
    return:
      type: System.Nullable{System.Double}
      description: "The Measure (M coordinate) of this DbGeometry value."
  overload: System.Data.Spatial.DbGeometry.Measure*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.MultiLineFromBinary(System.Byte[],System.Int32)
  id: MultiLineFromBinary(System.Byte[],System.Int32)
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: MultiLineFromBinary(Byte[],Int32)
  nameWithType: DbGeometry.MultiLineFromBinary(Byte[],Int32)
  fullName: System.Data.Spatial.DbGeometry.MultiLineFromBinary(Byte[],Int32)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Returns the multiline value from a binary value."
  syntax:
    content: public static System.Data.Spatial.DbGeometry MultiLineFromBinary (byte[] multiLineWellKnownBinary, int coordinateSystemId);
    parameters:
    - id: multiLineWellKnownBinary
      type: System.Byte[]
      description: "The well-known binary value."
    - id: coordinateSystemId
      type: System.Int32
      description: "The coordinate system identifier."
    return:
      type: System.Data.Spatial.DbGeometry
      description: "The multiline value from a binary value."
  overload: System.Data.Spatial.DbGeometry.MultiLineFromBinary*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.MultiLineFromText(System.String,System.Int32)
  id: MultiLineFromText(System.String,System.Int32)
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: MultiLineFromText(String,Int32)
  nameWithType: DbGeometry.MultiLineFromText(String,Int32)
  fullName: System.Data.Spatial.DbGeometry.MultiLineFromText(String,Int32)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Returns the multiline value from a well-known text value."
  syntax:
    content: public static System.Data.Spatial.DbGeometry MultiLineFromText (string multiLineWellKnownText, int coordinateSystemId);
    parameters:
    - id: multiLineWellKnownText
      type: System.String
      description: "The well-known text."
    - id: coordinateSystemId
      type: System.Int32
      description: "The coordinate system identifier."
    return:
      type: System.Data.Spatial.DbGeometry
      description: "The multiline value from a well-known text value."
  overload: System.Data.Spatial.DbGeometry.MultiLineFromText*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.MultiPointFromBinary(System.Byte[],System.Int32)
  id: MultiPointFromBinary(System.Byte[],System.Int32)
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: MultiPointFromBinary(Byte[],Int32)
  nameWithType: DbGeometry.MultiPointFromBinary(Byte[],Int32)
  fullName: System.Data.Spatial.DbGeometry.MultiPointFromBinary(Byte[],Int32)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Returns the multipoint value from a well-known binary value."
  syntax:
    content: public static System.Data.Spatial.DbGeometry MultiPointFromBinary (byte[] multiPointWellKnownBinary, int coordinateSystemId);
    parameters:
    - id: multiPointWellKnownBinary
      type: System.Byte[]
      description: "The well-known binary value."
    - id: coordinateSystemId
      type: System.Int32
      description: "The coordinate system identifier."
    return:
      type: System.Data.Spatial.DbGeometry
      description: "The multipoint value from a well-known binary value."
  overload: System.Data.Spatial.DbGeometry.MultiPointFromBinary*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.MultiPointFromText(System.String,System.Int32)
  id: MultiPointFromText(System.String,System.Int32)
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: MultiPointFromText(String,Int32)
  nameWithType: DbGeometry.MultiPointFromText(String,Int32)
  fullName: System.Data.Spatial.DbGeometry.MultiPointFromText(String,Int32)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Returns the multipoint value from a well-known text value."
  syntax:
    content: public static System.Data.Spatial.DbGeometry MultiPointFromText (string multiPointWellKnownText, int coordinateSystemId);
    parameters:
    - id: multiPointWellKnownText
      type: System.String
      description: "The well-known text value."
    - id: coordinateSystemId
      type: System.Int32
      description: "The coordinate system identifier."
    return:
      type: System.Data.Spatial.DbGeometry
      description: "The multipoint value from a well-known text value."
  overload: System.Data.Spatial.DbGeometry.MultiPointFromText*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.MultiPolygonFromBinary(System.Byte[],System.Int32)
  id: MultiPolygonFromBinary(System.Byte[],System.Int32)
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: MultiPolygonFromBinary(Byte[],Int32)
  nameWithType: DbGeometry.MultiPolygonFromBinary(Byte[],Int32)
  fullName: System.Data.Spatial.DbGeometry.MultiPolygonFromBinary(Byte[],Int32)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Returns the multi polygon value from a well-known binary value."
  syntax:
    content: public static System.Data.Spatial.DbGeometry MultiPolygonFromBinary (byte[] multiPolygonWellKnownBinary, int coordinateSystemId);
    parameters:
    - id: multiPolygonWellKnownBinary
      type: System.Byte[]
      description: "The multi polygon well-known text value."
    - id: coordinateSystemId
      type: System.Int32
      description: "The coordinate system identifier."
    return:
      type: System.Data.Spatial.DbGeometry
      description: "The multipoint value from a well-known text value."
  overload: System.Data.Spatial.DbGeometry.MultiPolygonFromBinary*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.MultiPolygonFromText(System.String,System.Int32)
  id: MultiPolygonFromText(System.String,System.Int32)
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: MultiPolygonFromText(String,Int32)
  nameWithType: DbGeometry.MultiPolygonFromText(String,Int32)
  fullName: System.Data.Spatial.DbGeometry.MultiPolygonFromText(String,Int32)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Returns the multi polygon value from a well-known binary value."
  syntax:
    content: public static System.Data.Spatial.DbGeometry MultiPolygonFromText (string multiPolygonWellKnownText, int coordinateSystemId);
    parameters:
    - id: multiPolygonWellKnownText
      type: System.String
      description: "The multi polygon well-known text value."
    - id: coordinateSystemId
      type: System.Int32
      description: "The coordinate system identifier."
    return:
      type: System.Data.Spatial.DbGeometry
      description: "The multi polygon value from a well-known binary value."
  overload: System.Data.Spatial.DbGeometry.MultiPolygonFromText*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.Overlaps(System.Data.Spatial.DbGeometry)
  id: Overlaps(System.Data.Spatial.DbGeometry)
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: Overlaps(DbGeometry)
  nameWithType: DbGeometry.Overlaps(DbGeometry)
  fullName: System.Data.Spatial.DbGeometry.Overlaps(DbGeometry)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Determines whether this DbGeometry value spatially overlaps the specified DbGeometry argument."
  syntax:
    content: public bool Overlaps (System.Data.Spatial.DbGeometry other);
    parameters:
    - id: other
      type: System.Data.Spatial.DbGeometry
      description: "The geometry value that should be compared with this geometry value for overlap."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if this geometry value overlaps <code>other</code>; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.Spatial.DbGeometry.Overlaps*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>other</code>
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.PointAt(System.Int32)
  id: PointAt(System.Int32)
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: PointAt(Int32)
  nameWithType: DbGeometry.PointAt(Int32)
  fullName: System.Data.Spatial.DbGeometry.PointAt(Int32)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Returns an element of this DbGeometry value from a specific position, if it represents a linestring or linear ring. &lt;param name=&quot;index&quot;&gt;The position within this geometry value from which the element should be taken.&lt;/param&gt;&lt;returns&gt;The element in this geometry value at the specified position, if it represents a linestring or linear ring; otherwise <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.&lt;/returns&gt;"
  syntax:
    content: public System.Data.Spatial.DbGeometry PointAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "The index."
    return:
      type: System.Data.Spatial.DbGeometry
      description: "An element of this DbGeometry value from a specific position."
  overload: System.Data.Spatial.DbGeometry.PointAt*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.PointCount
  id: PointCount
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: PointCount
  nameWithType: DbGeometry.PointCount
  fullName: System.Data.Spatial.DbGeometry.PointCount
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Gets the number of points in this DbGeometry value, if it represents a linestring or linear ring. &lt;returns&gt;The number of elements in this geometry value, if it represents a linestring or linear ring; otherwise <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.&lt;/returns&gt;"
  syntax:
    content: public Nullable<int> PointCount { get; }
    return:
      type: System.Nullable{System.Int32}
      description: "The number of points in this DbGeometry value."
  overload: System.Data.Spatial.DbGeometry.PointCount*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.PointFromBinary(System.Byte[],System.Int32)
  id: PointFromBinary(System.Byte[],System.Int32)
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: PointFromBinary(Byte[],Int32)
  nameWithType: DbGeometry.PointFromBinary(Byte[],Int32)
  fullName: System.Data.Spatial.DbGeometry.PointFromBinary(Byte[],Int32)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Creates a new <xref href=&quot;System.Data.Spatial.DbGeometry&quot;></xref> point value based on the specified well known binary value and coordinate system identifier (SRID)."
  syntax:
    content: public static System.Data.Spatial.DbGeometry PointFromBinary (byte[] pointWellKnownBinary, int coordinateSystemId);
    parameters:
    - id: pointWellKnownBinary
      type: System.Byte[]
      description: "A byte array that contains a well known binary representation of the geometry value."
    - id: coordinateSystemId
      type: System.Int32
      description: "The identifier of the coordinate system that the new DbGeometry value should use."
    return:
      type: System.Data.Spatial.DbGeometry
      description: "A new DbGeometry value as defined by the well known binary value with the specified coordinate system identifier."
  overload: System.Data.Spatial.DbGeometry.PointFromBinary*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>pointWellKnownBinary</code>
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>coordinateSystemId</code>
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.PointFromText(System.String,System.Int32)
  id: PointFromText(System.String,System.Int32)
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: PointFromText(String,Int32)
  nameWithType: DbGeometry.PointFromText(String,Int32)
  fullName: System.Data.Spatial.DbGeometry.PointFromText(String,Int32)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Creates a new <xref href=&quot;System.Data.Spatial.DbGeometry&quot;></xref> point value based on the specified well known text value and coordinate system identifier (SRID)."
  syntax:
    content: public static System.Data.Spatial.DbGeometry PointFromText (string pointWellKnownText, int coordinateSystemId);
    parameters:
    - id: pointWellKnownText
      type: System.String
      description: "A string that contains a well known text representation of the geometry value."
    - id: coordinateSystemId
      type: System.Int32
      description: "The identifier of the coordinate system that the new DbGeometry value should use."
    return:
      type: System.Data.Spatial.DbGeometry
      description: "A new DbGeometry value as defined by the well known text value with the specified coordinate system identifier."
  overload: System.Data.Spatial.DbGeometry.PointFromText*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>pointWellKnownText</code>
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>coordinateSystemId</code>
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.PointOnSurface
  id: PointOnSurface
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: PointOnSurface
  nameWithType: DbGeometry.PointOnSurface
  fullName: System.Data.Spatial.DbGeometry.PointOnSurface
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Gets a point on the surface of this DbGeometry value, which may be null if this value does not represent a surface."
  syntax:
    content: public System.Data.Spatial.DbGeometry PointOnSurface { get; }
    return:
      type: System.Data.Spatial.DbGeometry
      description: "A point on the surface of this DbGeometry value."
  overload: System.Data.Spatial.DbGeometry.PointOnSurface*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.PolygonFromBinary(System.Byte[],System.Int32)
  id: PolygonFromBinary(System.Byte[],System.Int32)
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: PolygonFromBinary(Byte[],Int32)
  nameWithType: DbGeometry.PolygonFromBinary(Byte[],Int32)
  fullName: System.Data.Spatial.DbGeometry.PolygonFromBinary(Byte[],Int32)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Creates a new <xref href=&quot;System.Data.Spatial.DbGeometry&quot;></xref> polygon value based on the specified well known binary value and coordinate system identifier (SRID)."
  syntax:
    content: public static System.Data.Spatial.DbGeometry PolygonFromBinary (byte[] polygonWellKnownBinary, int coordinateSystemId);
    parameters:
    - id: polygonWellKnownBinary
      type: System.Byte[]
      description: "A byte array that contains a well known binary representation of the geometry value."
    - id: coordinateSystemId
      type: System.Int32
      description: "The identifier of the coordinate system that the new DbGeometry value should use."
    return:
      type: System.Data.Spatial.DbGeometry
      description: "A new DbGeometry value as defined by the well known binary value with the specified coordinate system identifier."
  overload: System.Data.Spatial.DbGeometry.PolygonFromBinary*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>polygonWellKnownBinary</code>
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>coordinateSystemId</code>
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.PolygonFromText(System.String,System.Int32)
  id: PolygonFromText(System.String,System.Int32)
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: PolygonFromText(String,Int32)
  nameWithType: DbGeometry.PolygonFromText(String,Int32)
  fullName: System.Data.Spatial.DbGeometry.PolygonFromText(String,Int32)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Creates a new <xref href=&quot;System.Data.Spatial.DbGeometry&quot;></xref> polygon value based on the specified well known text value and coordinate system identifier (SRID)."
  syntax:
    content: public static System.Data.Spatial.DbGeometry PolygonFromText (string polygonWellKnownText, int coordinateSystemId);
    parameters:
    - id: polygonWellKnownText
      type: System.String
      description: "A string that contains a well known text representation of the geometry value."
    - id: coordinateSystemId
      type: System.Int32
      description: "The identifier of the coordinate system that the new DbGeometry value should use."
    return:
      type: System.Data.Spatial.DbGeometry
      description: "A new DbGeometry value as defined by the well known text value with the specified coordinate system identifier."
  overload: System.Data.Spatial.DbGeometry.PolygonFromText*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>polygonWellKnownText</code>
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: <code>coordinateSystemId</code>
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.ProviderValue
  id: ProviderValue
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: ProviderValue
  nameWithType: DbGeometry.ProviderValue
  fullName: System.Data.Spatial.DbGeometry.ProviderValue
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Gets a representation of this DbGeometry value that is specific to the underlying provider that constructed it."
  syntax:
    content: public object ProviderValue { get; }
    return:
      type: System.Object
      description: "A representation of this DbGeometry value."
  overload: System.Data.Spatial.DbGeometry.ProviderValue*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.Relate(System.Data.Spatial.DbGeometry,System.String)
  id: Relate(System.Data.Spatial.DbGeometry,System.String)
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: Relate(DbGeometry,String)
  nameWithType: DbGeometry.Relate(DbGeometry,String)
  fullName: System.Data.Spatial.DbGeometry.Relate(DbGeometry,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Determines whether this DbGeometry value spatially relates to the specified DbGeometry argument according to the given Dimensionally Extended Nine-Intersection Model (DE-9IM) intersection pattern."
  syntax:
    content: public bool Relate (System.Data.Spatial.DbGeometry other, string matrix);
    parameters:
    - id: other
      type: System.Data.Spatial.DbGeometry
      description: "The geometry value that should be compared with this geometry value for relation."
    - id: matrix
      type: System.String
      description: "A string that contains the text representation of the (DE-9IM) intersection pattern that defines the relation."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if this geometry value relates to <code>other</code> according to the specified intersection pattern matrix; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.Spatial.DbGeometry.Relate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: >-
      <code>other</code>
          <code>matrix</code>
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.SpatialEquals(System.Data.Spatial.DbGeometry)
  id: SpatialEquals(System.Data.Spatial.DbGeometry)
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: SpatialEquals(DbGeometry)
  nameWithType: DbGeometry.SpatialEquals(DbGeometry)
  fullName: System.Data.Spatial.DbGeometry.SpatialEquals(DbGeometry)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Determines whether this DbGeometry is spatially equal to the specified DbGeometry argument."
  syntax:
    content: public bool SpatialEquals (System.Data.Spatial.DbGeometry other);
    parameters:
    - id: other
      type: System.Data.Spatial.DbGeometry
      description: "The geometry value that should be compared with this geometry value for equality."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <code>other</code> is spatially equal to this geometry value; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.Spatial.DbGeometry.SpatialEquals*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>other</code>
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.SpatialTypeName
  id: SpatialTypeName
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: SpatialTypeName
  nameWithType: DbGeometry.SpatialTypeName
  fullName: System.Data.Spatial.DbGeometry.SpatialTypeName
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Gets a spatial type name representation of this DbGeometry value."
  syntax:
    content: public string SpatialTypeName { get; }
    return:
      type: System.String
      description: "A spatial type name representation of this DbGeometry value."
  overload: System.Data.Spatial.DbGeometry.SpatialTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.StartPoint
  id: StartPoint
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: StartPoint
  nameWithType: DbGeometry.StartPoint
  fullName: System.Data.Spatial.DbGeometry.StartPoint
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Gets a DbGeometry value representing the start point of this value, which may be null if this DbGeometry value does not represent a curve."
  syntax:
    content: public System.Data.Spatial.DbGeometry StartPoint { get; }
    return:
      type: System.Data.Spatial.DbGeometry
      description: "A DbGeometry value representing the start point of this value."
  overload: System.Data.Spatial.DbGeometry.StartPoint*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.SymmetricDifference(System.Data.Spatial.DbGeometry)
  id: SymmetricDifference(System.Data.Spatial.DbGeometry)
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: SymmetricDifference(DbGeometry)
  nameWithType: DbGeometry.SymmetricDifference(DbGeometry)
  fullName: System.Data.Spatial.DbGeometry.SymmetricDifference(DbGeometry)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Computes the symmetric difference between this DbGeometry value and another DbGeometry value."
  syntax:
    content: public System.Data.Spatial.DbGeometry SymmetricDifference (System.Data.Spatial.DbGeometry other);
    parameters:
    - id: other
      type: System.Data.Spatial.DbGeometry
      description: "The geometry value for which the symmetric difference with this value should be computed."
    return:
      type: System.Data.Spatial.DbGeometry
      description: "A new DbGeometry value representing the symmetric difference between this geometry value and <code>other</code>."
  overload: System.Data.Spatial.DbGeometry.SymmetricDifference*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>other</code>
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.ToString
  id: ToString
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: ToString()
  nameWithType: DbGeometry.ToString()
  fullName: System.Data.Spatial.DbGeometry.ToString()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Returns a string representation of the geometry value."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A string representation of the geometry value."
  overload: System.Data.Spatial.DbGeometry.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.Touches(System.Data.Spatial.DbGeometry)
  id: Touches(System.Data.Spatial.DbGeometry)
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: Touches(DbGeometry)
  nameWithType: DbGeometry.Touches(DbGeometry)
  fullName: System.Data.Spatial.DbGeometry.Touches(DbGeometry)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Determines whether this DbGeometry value spatially touches the specified DbGeometry argument."
  syntax:
    content: public bool Touches (System.Data.Spatial.DbGeometry other);
    parameters:
    - id: other
      type: System.Data.Spatial.DbGeometry
      description: "The geometry value that should be compared with this geometry value."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <code>other</code> touches this geometry value; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.Spatial.DbGeometry.Touches*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>other</code>
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.Union(System.Data.Spatial.DbGeometry)
  id: Union(System.Data.Spatial.DbGeometry)
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: Union(DbGeometry)
  nameWithType: DbGeometry.Union(DbGeometry)
  fullName: System.Data.Spatial.DbGeometry.Union(DbGeometry)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Computes the union of this DbGeometry value and another DbGeometry value."
  syntax:
    content: public System.Data.Spatial.DbGeometry Union (System.Data.Spatial.DbGeometry other);
    parameters:
    - id: other
      type: System.Data.Spatial.DbGeometry
      description: "The geometry value for which the union with this value should be computed."
    return:
      type: System.Data.Spatial.DbGeometry
      description: "A new DbGeometry value representing the union between this geometry value and <code>other</code>."
  overload: System.Data.Spatial.DbGeometry.Union*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>other</code>
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.WellKnownValue
  id: WellKnownValue
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: WellKnownValue
  nameWithType: DbGeometry.WellKnownValue
  fullName: System.Data.Spatial.DbGeometry.WellKnownValue
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Gets or sets a data contract serializable well known representation of this DbGeometry value."
  syntax:
    content: public System.Data.Spatial.DbGeometryWellKnownValue WellKnownValue { get; set; }
    return:
      type: System.Data.Spatial.DbGeometryWellKnownValue
      description: "A data contract serializable well known representation of this DbGeometry value."
  overload: System.Data.Spatial.DbGeometry.WellKnownValue*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.Within(System.Data.Spatial.DbGeometry)
  id: Within(System.Data.Spatial.DbGeometry)
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: Within(DbGeometry)
  nameWithType: DbGeometry.Within(DbGeometry)
  fullName: System.Data.Spatial.DbGeometry.Within(DbGeometry)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Determines whether this DbGeometry value is spatially within the specified DbGeometry argument."
  syntax:
    content: public bool Within (System.Data.Spatial.DbGeometry other);
    parameters:
    - id: other
      type: System.Data.Spatial.DbGeometry
      description: "The geometry value that should be compared with this geometry value for containment."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if this geometry value is within <code>other</code>; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.Spatial.DbGeometry.Within*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>other</code>
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.XCoordinate
  id: XCoordinate
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: XCoordinate
  nameWithType: DbGeometry.XCoordinate
  fullName: System.Data.Spatial.DbGeometry.XCoordinate
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Gets the X coordinate of this DbGeometry value, if it represents a point. &lt;returns&gt;The X coordinate value of this geometry value, if it represents a point; otherwise <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.&lt;/returns&gt;"
  syntax:
    content: public Nullable<double> XCoordinate { get; }
    return:
      type: System.Nullable{System.Double}
      description: "The X coordinate of this DbGeometry value."
  overload: System.Data.Spatial.DbGeometry.XCoordinate*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Spatial.DbGeometry.YCoordinate
  id: YCoordinate
  parent: System.Data.Spatial.DbGeometry
  langs:
  - csharp
  name: YCoordinate
  nameWithType: DbGeometry.YCoordinate
  fullName: System.Data.Spatial.DbGeometry.YCoordinate
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Spatial
  summary: "Gets the Y coordinate of this DbGeometry value, if it represents a point. &lt;returns&gt;The Y coordinate value of this geometry value, if it represents a point; otherwise <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.&lt;/returns&gt;"
  syntax:
    content: public Nullable<double> YCoordinate { get; }
    return:
      type: System.Nullable{System.Double}
      description: "The Y coordinate of this DbGeometry value."
  overload: System.Data.Spatial.DbGeometry.YCoordinate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.Spatial.DbGeometry.Area
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: Area
  nameWithType: DbGeometry.Area
  fullName: System.Data.Spatial.DbGeometry.Area
- uid: System.Nullable{System.Double}
  parent: System
  isExternal: true
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Double>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: Double
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Spatial.DbGeometry.AsBinary
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: AsBinary()
  nameWithType: DbGeometry.AsBinary()
  fullName: System.Data.Spatial.DbGeometry.AsBinary()
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Spatial.DbGeometry.AsGml
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: AsGml()
  nameWithType: DbGeometry.AsGml()
  fullName: System.Data.Spatial.DbGeometry.AsGml()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Spatial.DbGeometry.AsText
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: AsText()
  nameWithType: DbGeometry.AsText()
  fullName: System.Data.Spatial.DbGeometry.AsText()
- uid: System.Data.Spatial.DbGeometry.Boundary
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: Boundary
  nameWithType: DbGeometry.Boundary
  fullName: System.Data.Spatial.DbGeometry.Boundary
- uid: System.Data.Spatial.DbGeometry
  parent: System.Data.Spatial
  isExternal: false
  name: DbGeometry
  nameWithType: DbGeometry
  fullName: System.Data.Spatial.DbGeometry
- uid: System.Data.Spatial.DbGeometry.Buffer(System.Nullable{System.Double})
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: Buffer(Nullable<Double>)
  nameWithType: DbGeometry.Buffer(Nullable<Double>)
  fullName: System.Data.Spatial.DbGeometry.Buffer(Nullable<Double>)
- uid: System.Data.Spatial.DbGeometry.Centroid
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: Centroid
  nameWithType: DbGeometry.Centroid
  fullName: System.Data.Spatial.DbGeometry.Centroid
- uid: System.Data.Spatial.DbGeometry.Contains(System.Data.Spatial.DbGeometry)
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: Contains(DbGeometry)
  nameWithType: DbGeometry.Contains(DbGeometry)
  fullName: System.Data.Spatial.DbGeometry.Contains(DbGeometry)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Spatial.DbGeometry.ConvexHull
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: ConvexHull
  nameWithType: DbGeometry.ConvexHull
  fullName: System.Data.Spatial.DbGeometry.ConvexHull
- uid: System.Data.Spatial.DbGeometry.CoordinateSystemId
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: CoordinateSystemId
  nameWithType: DbGeometry.CoordinateSystemId
  fullName: System.Data.Spatial.DbGeometry.CoordinateSystemId
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Spatial.DbGeometry.Crosses(System.Data.Spatial.DbGeometry)
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: Crosses(DbGeometry)
  nameWithType: DbGeometry.Crosses(DbGeometry)
  fullName: System.Data.Spatial.DbGeometry.Crosses(DbGeometry)
- uid: System.Data.Spatial.DbGeometry.DefaultCoordinateSystemId
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: DefaultCoordinateSystemId
  nameWithType: DbGeometry.DefaultCoordinateSystemId
  fullName: System.Data.Spatial.DbGeometry.DefaultCoordinateSystemId
- uid: System.Data.Spatial.DbGeometry.Difference(System.Data.Spatial.DbGeometry)
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: Difference(DbGeometry)
  nameWithType: DbGeometry.Difference(DbGeometry)
  fullName: System.Data.Spatial.DbGeometry.Difference(DbGeometry)
- uid: System.Data.Spatial.DbGeometry.Dimension
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: Dimension
  nameWithType: DbGeometry.Dimension
  fullName: System.Data.Spatial.DbGeometry.Dimension
- uid: System.Data.Spatial.DbGeometry.Disjoint(System.Data.Spatial.DbGeometry)
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: Disjoint(DbGeometry)
  nameWithType: DbGeometry.Disjoint(DbGeometry)
  fullName: System.Data.Spatial.DbGeometry.Disjoint(DbGeometry)
- uid: System.Data.Spatial.DbGeometry.Distance(System.Data.Spatial.DbGeometry)
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: Distance(DbGeometry)
  nameWithType: DbGeometry.Distance(DbGeometry)
  fullName: System.Data.Spatial.DbGeometry.Distance(DbGeometry)
- uid: System.Data.Spatial.DbGeometry.ElementAt(System.Int32)
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: ElementAt(Int32)
  nameWithType: DbGeometry.ElementAt(Int32)
  fullName: System.Data.Spatial.DbGeometry.ElementAt(Int32)
- uid: System.Data.Spatial.DbGeometry.ElementCount
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: ElementCount
  nameWithType: DbGeometry.ElementCount
  fullName: System.Data.Spatial.DbGeometry.ElementCount
- uid: System.Nullable{System.Int32}
  parent: System
  isExternal: true
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Int32>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Spatial.DbGeometry.Elevation
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: Elevation
  nameWithType: DbGeometry.Elevation
  fullName: System.Data.Spatial.DbGeometry.Elevation
- uid: System.Data.Spatial.DbGeometry.EndPoint
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: EndPoint
  nameWithType: DbGeometry.EndPoint
  fullName: System.Data.Spatial.DbGeometry.EndPoint
- uid: System.Data.Spatial.DbGeometry.Envelope
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: Envelope
  nameWithType: DbGeometry.Envelope
  fullName: System.Data.Spatial.DbGeometry.Envelope
- uid: System.Data.Spatial.DbGeometry.ExteriorRing
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: ExteriorRing
  nameWithType: DbGeometry.ExteriorRing
  fullName: System.Data.Spatial.DbGeometry.ExteriorRing
- uid: System.Data.Spatial.DbGeometry.FromBinary(System.Byte[])
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: FromBinary(Byte[])
  nameWithType: DbGeometry.FromBinary(Byte[])
  fullName: System.Data.Spatial.DbGeometry.FromBinary(Byte[])
- uid: System.Data.Spatial.DbGeometry.FromBinary(System.Byte[],System.Int32)
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: FromBinary(Byte[],Int32)
  nameWithType: DbGeometry.FromBinary(Byte[],Int32)
  fullName: System.Data.Spatial.DbGeometry.FromBinary(Byte[],Int32)
- uid: System.Data.Spatial.DbGeometry.FromGml(System.String)
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: FromGml(String)
  nameWithType: DbGeometry.FromGml(String)
  fullName: System.Data.Spatial.DbGeometry.FromGml(String)
- uid: System.Data.Spatial.DbGeometry.FromGml(System.String,System.Int32)
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: FromGml(String,Int32)
  nameWithType: DbGeometry.FromGml(String,Int32)
  fullName: System.Data.Spatial.DbGeometry.FromGml(String,Int32)
- uid: System.Data.Spatial.DbGeometry.FromText(System.String)
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: FromText(String)
  nameWithType: DbGeometry.FromText(String)
  fullName: System.Data.Spatial.DbGeometry.FromText(String)
- uid: System.Data.Spatial.DbGeometry.FromText(System.String,System.Int32)
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: FromText(String,Int32)
  nameWithType: DbGeometry.FromText(String,Int32)
  fullName: System.Data.Spatial.DbGeometry.FromText(String,Int32)
- uid: System.Data.Spatial.DbGeometry.GeometryCollectionFromBinary(System.Byte[],System.Int32)
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: GeometryCollectionFromBinary(Byte[],Int32)
  nameWithType: DbGeometry.GeometryCollectionFromBinary(Byte[],Int32)
  fullName: System.Data.Spatial.DbGeometry.GeometryCollectionFromBinary(Byte[],Int32)
- uid: System.Data.Spatial.DbGeometry.GeometryCollectionFromText(System.String,System.Int32)
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: GeometryCollectionFromText(String,Int32)
  nameWithType: DbGeometry.GeometryCollectionFromText(String,Int32)
  fullName: System.Data.Spatial.DbGeometry.GeometryCollectionFromText(String,Int32)
- uid: System.Data.Spatial.DbGeometry.InteriorRingAt(System.Int32)
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: InteriorRingAt(Int32)
  nameWithType: DbGeometry.InteriorRingAt(Int32)
  fullName: System.Data.Spatial.DbGeometry.InteriorRingAt(Int32)
- uid: System.Data.Spatial.DbGeometry.InteriorRingCount
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: InteriorRingCount
  nameWithType: DbGeometry.InteriorRingCount
  fullName: System.Data.Spatial.DbGeometry.InteriorRingCount
- uid: System.Data.Spatial.DbGeometry.Intersection(System.Data.Spatial.DbGeometry)
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: Intersection(DbGeometry)
  nameWithType: DbGeometry.Intersection(DbGeometry)
  fullName: System.Data.Spatial.DbGeometry.Intersection(DbGeometry)
- uid: System.Data.Spatial.DbGeometry.Intersects(System.Data.Spatial.DbGeometry)
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: Intersects(DbGeometry)
  nameWithType: DbGeometry.Intersects(DbGeometry)
  fullName: System.Data.Spatial.DbGeometry.Intersects(DbGeometry)
- uid: System.Data.Spatial.DbGeometry.IsClosed
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: IsClosed
  nameWithType: DbGeometry.IsClosed
  fullName: System.Data.Spatial.DbGeometry.IsClosed
- uid: System.Nullable{System.Boolean}
  parent: System
  isExternal: true
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Boolean>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Spatial.DbGeometry.IsEmpty
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: IsEmpty
  nameWithType: DbGeometry.IsEmpty
  fullName: System.Data.Spatial.DbGeometry.IsEmpty
- uid: System.Data.Spatial.DbGeometry.IsRing
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: IsRing
  nameWithType: DbGeometry.IsRing
  fullName: System.Data.Spatial.DbGeometry.IsRing
- uid: System.Data.Spatial.DbGeometry.IsSimple
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: IsSimple
  nameWithType: DbGeometry.IsSimple
  fullName: System.Data.Spatial.DbGeometry.IsSimple
- uid: System.Data.Spatial.DbGeometry.IsValid
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: IsValid
  nameWithType: DbGeometry.IsValid
  fullName: System.Data.Spatial.DbGeometry.IsValid
- uid: System.Data.Spatial.DbGeometry.Length
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: Length
  nameWithType: DbGeometry.Length
  fullName: System.Data.Spatial.DbGeometry.Length
- uid: System.Data.Spatial.DbGeometry.LineFromBinary(System.Byte[],System.Int32)
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: LineFromBinary(Byte[],Int32)
  nameWithType: DbGeometry.LineFromBinary(Byte[],Int32)
  fullName: System.Data.Spatial.DbGeometry.LineFromBinary(Byte[],Int32)
- uid: System.Data.Spatial.DbGeometry.LineFromText(System.String,System.Int32)
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: LineFromText(String,Int32)
  nameWithType: DbGeometry.LineFromText(String,Int32)
  fullName: System.Data.Spatial.DbGeometry.LineFromText(String,Int32)
- uid: System.Data.Spatial.DbGeometry.Measure
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: Measure
  nameWithType: DbGeometry.Measure
  fullName: System.Data.Spatial.DbGeometry.Measure
- uid: System.Data.Spatial.DbGeometry.MultiLineFromBinary(System.Byte[],System.Int32)
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: MultiLineFromBinary(Byte[],Int32)
  nameWithType: DbGeometry.MultiLineFromBinary(Byte[],Int32)
  fullName: System.Data.Spatial.DbGeometry.MultiLineFromBinary(Byte[],Int32)
- uid: System.Data.Spatial.DbGeometry.MultiLineFromText(System.String,System.Int32)
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: MultiLineFromText(String,Int32)
  nameWithType: DbGeometry.MultiLineFromText(String,Int32)
  fullName: System.Data.Spatial.DbGeometry.MultiLineFromText(String,Int32)
- uid: System.Data.Spatial.DbGeometry.MultiPointFromBinary(System.Byte[],System.Int32)
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: MultiPointFromBinary(Byte[],Int32)
  nameWithType: DbGeometry.MultiPointFromBinary(Byte[],Int32)
  fullName: System.Data.Spatial.DbGeometry.MultiPointFromBinary(Byte[],Int32)
- uid: System.Data.Spatial.DbGeometry.MultiPointFromText(System.String,System.Int32)
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: MultiPointFromText(String,Int32)
  nameWithType: DbGeometry.MultiPointFromText(String,Int32)
  fullName: System.Data.Spatial.DbGeometry.MultiPointFromText(String,Int32)
- uid: System.Data.Spatial.DbGeometry.MultiPolygonFromBinary(System.Byte[],System.Int32)
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: MultiPolygonFromBinary(Byte[],Int32)
  nameWithType: DbGeometry.MultiPolygonFromBinary(Byte[],Int32)
  fullName: System.Data.Spatial.DbGeometry.MultiPolygonFromBinary(Byte[],Int32)
- uid: System.Data.Spatial.DbGeometry.MultiPolygonFromText(System.String,System.Int32)
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: MultiPolygonFromText(String,Int32)
  nameWithType: DbGeometry.MultiPolygonFromText(String,Int32)
  fullName: System.Data.Spatial.DbGeometry.MultiPolygonFromText(String,Int32)
- uid: System.Data.Spatial.DbGeometry.Overlaps(System.Data.Spatial.DbGeometry)
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: Overlaps(DbGeometry)
  nameWithType: DbGeometry.Overlaps(DbGeometry)
  fullName: System.Data.Spatial.DbGeometry.Overlaps(DbGeometry)
- uid: System.Data.Spatial.DbGeometry.PointAt(System.Int32)
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: PointAt(Int32)
  nameWithType: DbGeometry.PointAt(Int32)
  fullName: System.Data.Spatial.DbGeometry.PointAt(Int32)
- uid: System.Data.Spatial.DbGeometry.PointCount
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: PointCount
  nameWithType: DbGeometry.PointCount
  fullName: System.Data.Spatial.DbGeometry.PointCount
- uid: System.Data.Spatial.DbGeometry.PointFromBinary(System.Byte[],System.Int32)
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: PointFromBinary(Byte[],Int32)
  nameWithType: DbGeometry.PointFromBinary(Byte[],Int32)
  fullName: System.Data.Spatial.DbGeometry.PointFromBinary(Byte[],Int32)
- uid: System.Data.Spatial.DbGeometry.PointFromText(System.String,System.Int32)
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: PointFromText(String,Int32)
  nameWithType: DbGeometry.PointFromText(String,Int32)
  fullName: System.Data.Spatial.DbGeometry.PointFromText(String,Int32)
- uid: System.Data.Spatial.DbGeometry.PointOnSurface
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: PointOnSurface
  nameWithType: DbGeometry.PointOnSurface
  fullName: System.Data.Spatial.DbGeometry.PointOnSurface
- uid: System.Data.Spatial.DbGeometry.PolygonFromBinary(System.Byte[],System.Int32)
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: PolygonFromBinary(Byte[],Int32)
  nameWithType: DbGeometry.PolygonFromBinary(Byte[],Int32)
  fullName: System.Data.Spatial.DbGeometry.PolygonFromBinary(Byte[],Int32)
- uid: System.Data.Spatial.DbGeometry.PolygonFromText(System.String,System.Int32)
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: PolygonFromText(String,Int32)
  nameWithType: DbGeometry.PolygonFromText(String,Int32)
  fullName: System.Data.Spatial.DbGeometry.PolygonFromText(String,Int32)
- uid: System.Data.Spatial.DbGeometry.ProviderValue
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: ProviderValue
  nameWithType: DbGeometry.ProviderValue
  fullName: System.Data.Spatial.DbGeometry.ProviderValue
- uid: System.Data.Spatial.DbGeometry.Relate(System.Data.Spatial.DbGeometry,System.String)
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: Relate(DbGeometry,String)
  nameWithType: DbGeometry.Relate(DbGeometry,String)
  fullName: System.Data.Spatial.DbGeometry.Relate(DbGeometry,String)
- uid: System.Data.Spatial.DbGeometry.SpatialEquals(System.Data.Spatial.DbGeometry)
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: SpatialEquals(DbGeometry)
  nameWithType: DbGeometry.SpatialEquals(DbGeometry)
  fullName: System.Data.Spatial.DbGeometry.SpatialEquals(DbGeometry)
- uid: System.Data.Spatial.DbGeometry.SpatialTypeName
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: SpatialTypeName
  nameWithType: DbGeometry.SpatialTypeName
  fullName: System.Data.Spatial.DbGeometry.SpatialTypeName
- uid: System.Data.Spatial.DbGeometry.StartPoint
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: StartPoint
  nameWithType: DbGeometry.StartPoint
  fullName: System.Data.Spatial.DbGeometry.StartPoint
- uid: System.Data.Spatial.DbGeometry.SymmetricDifference(System.Data.Spatial.DbGeometry)
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: SymmetricDifference(DbGeometry)
  nameWithType: DbGeometry.SymmetricDifference(DbGeometry)
  fullName: System.Data.Spatial.DbGeometry.SymmetricDifference(DbGeometry)
- uid: System.Data.Spatial.DbGeometry.ToString
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: ToString()
  nameWithType: DbGeometry.ToString()
  fullName: System.Data.Spatial.DbGeometry.ToString()
- uid: System.Data.Spatial.DbGeometry.Touches(System.Data.Spatial.DbGeometry)
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: Touches(DbGeometry)
  nameWithType: DbGeometry.Touches(DbGeometry)
  fullName: System.Data.Spatial.DbGeometry.Touches(DbGeometry)
- uid: System.Data.Spatial.DbGeometry.Union(System.Data.Spatial.DbGeometry)
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: Union(DbGeometry)
  nameWithType: DbGeometry.Union(DbGeometry)
  fullName: System.Data.Spatial.DbGeometry.Union(DbGeometry)
- uid: System.Data.Spatial.DbGeometry.WellKnownValue
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: WellKnownValue
  nameWithType: DbGeometry.WellKnownValue
  fullName: System.Data.Spatial.DbGeometry.WellKnownValue
- uid: System.Data.Spatial.DbGeometryWellKnownValue
  parent: System.Data.Spatial
  isExternal: false
  name: DbGeometryWellKnownValue
  nameWithType: DbGeometryWellKnownValue
  fullName: System.Data.Spatial.DbGeometryWellKnownValue
- uid: System.Data.Spatial.DbGeometry.Within(System.Data.Spatial.DbGeometry)
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: Within(DbGeometry)
  nameWithType: DbGeometry.Within(DbGeometry)
  fullName: System.Data.Spatial.DbGeometry.Within(DbGeometry)
- uid: System.Data.Spatial.DbGeometry.XCoordinate
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: XCoordinate
  nameWithType: DbGeometry.XCoordinate
  fullName: System.Data.Spatial.DbGeometry.XCoordinate
- uid: System.Data.Spatial.DbGeometry.YCoordinate
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: YCoordinate
  nameWithType: DbGeometry.YCoordinate
  fullName: System.Data.Spatial.DbGeometry.YCoordinate
- uid: System.Data.Spatial.DbGeometry.Area*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: Area
  nameWithType: DbGeometry.Area
- uid: System.Data.Spatial.DbGeometry.AsBinary*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: AsBinary
  nameWithType: DbGeometry.AsBinary
- uid: System.Data.Spatial.DbGeometry.AsGml*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: AsGml
  nameWithType: DbGeometry.AsGml
- uid: System.Data.Spatial.DbGeometry.AsText*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: AsText
  nameWithType: DbGeometry.AsText
- uid: System.Data.Spatial.DbGeometry.Boundary*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: Boundary
  nameWithType: DbGeometry.Boundary
- uid: System.Data.Spatial.DbGeometry.Buffer*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: Buffer
  nameWithType: DbGeometry.Buffer
- uid: System.Data.Spatial.DbGeometry.Centroid*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: Centroid
  nameWithType: DbGeometry.Centroid
- uid: System.Data.Spatial.DbGeometry.Contains*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: Contains
  nameWithType: DbGeometry.Contains
- uid: System.Data.Spatial.DbGeometry.ConvexHull*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: ConvexHull
  nameWithType: DbGeometry.ConvexHull
- uid: System.Data.Spatial.DbGeometry.CoordinateSystemId*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: CoordinateSystemId
  nameWithType: DbGeometry.CoordinateSystemId
- uid: System.Data.Spatial.DbGeometry.Crosses*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: Crosses
  nameWithType: DbGeometry.Crosses
- uid: System.Data.Spatial.DbGeometry.DefaultCoordinateSystemId*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: DefaultCoordinateSystemId
  nameWithType: DbGeometry.DefaultCoordinateSystemId
- uid: System.Data.Spatial.DbGeometry.Difference*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: Difference
  nameWithType: DbGeometry.Difference
- uid: System.Data.Spatial.DbGeometry.Dimension*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: Dimension
  nameWithType: DbGeometry.Dimension
- uid: System.Data.Spatial.DbGeometry.Disjoint*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: Disjoint
  nameWithType: DbGeometry.Disjoint
- uid: System.Data.Spatial.DbGeometry.Distance*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: Distance
  nameWithType: DbGeometry.Distance
- uid: System.Data.Spatial.DbGeometry.ElementAt*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: ElementAt
  nameWithType: DbGeometry.ElementAt
- uid: System.Data.Spatial.DbGeometry.ElementCount*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: ElementCount
  nameWithType: DbGeometry.ElementCount
- uid: System.Data.Spatial.DbGeometry.Elevation*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: Elevation
  nameWithType: DbGeometry.Elevation
- uid: System.Data.Spatial.DbGeometry.EndPoint*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: EndPoint
  nameWithType: DbGeometry.EndPoint
- uid: System.Data.Spatial.DbGeometry.Envelope*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: Envelope
  nameWithType: DbGeometry.Envelope
- uid: System.Data.Spatial.DbGeometry.ExteriorRing*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: ExteriorRing
  nameWithType: DbGeometry.ExteriorRing
- uid: System.Data.Spatial.DbGeometry.FromBinary*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: FromBinary
  nameWithType: DbGeometry.FromBinary
- uid: System.Data.Spatial.DbGeometry.FromGml*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: FromGml
  nameWithType: DbGeometry.FromGml
- uid: System.Data.Spatial.DbGeometry.FromText*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: FromText
  nameWithType: DbGeometry.FromText
- uid: System.Data.Spatial.DbGeometry.GeometryCollectionFromBinary*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: GeometryCollectionFromBinary
  nameWithType: DbGeometry.GeometryCollectionFromBinary
- uid: System.Data.Spatial.DbGeometry.GeometryCollectionFromText*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: GeometryCollectionFromText
  nameWithType: DbGeometry.GeometryCollectionFromText
- uid: System.Data.Spatial.DbGeometry.InteriorRingAt*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: InteriorRingAt
  nameWithType: DbGeometry.InteriorRingAt
- uid: System.Data.Spatial.DbGeometry.InteriorRingCount*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: InteriorRingCount
  nameWithType: DbGeometry.InteriorRingCount
- uid: System.Data.Spatial.DbGeometry.Intersection*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: Intersection
  nameWithType: DbGeometry.Intersection
- uid: System.Data.Spatial.DbGeometry.Intersects*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: Intersects
  nameWithType: DbGeometry.Intersects
- uid: System.Data.Spatial.DbGeometry.IsClosed*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: IsClosed
  nameWithType: DbGeometry.IsClosed
- uid: System.Data.Spatial.DbGeometry.IsEmpty*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: IsEmpty
  nameWithType: DbGeometry.IsEmpty
- uid: System.Data.Spatial.DbGeometry.IsRing*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: IsRing
  nameWithType: DbGeometry.IsRing
- uid: System.Data.Spatial.DbGeometry.IsSimple*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: IsSimple
  nameWithType: DbGeometry.IsSimple
- uid: System.Data.Spatial.DbGeometry.IsValid*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: IsValid
  nameWithType: DbGeometry.IsValid
- uid: System.Data.Spatial.DbGeometry.Length*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: Length
  nameWithType: DbGeometry.Length
- uid: System.Data.Spatial.DbGeometry.LineFromBinary*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: LineFromBinary
  nameWithType: DbGeometry.LineFromBinary
- uid: System.Data.Spatial.DbGeometry.LineFromText*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: LineFromText
  nameWithType: DbGeometry.LineFromText
- uid: System.Data.Spatial.DbGeometry.Measure*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: Measure
  nameWithType: DbGeometry.Measure
- uid: System.Data.Spatial.DbGeometry.MultiLineFromBinary*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: MultiLineFromBinary
  nameWithType: DbGeometry.MultiLineFromBinary
- uid: System.Data.Spatial.DbGeometry.MultiLineFromText*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: MultiLineFromText
  nameWithType: DbGeometry.MultiLineFromText
- uid: System.Data.Spatial.DbGeometry.MultiPointFromBinary*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: MultiPointFromBinary
  nameWithType: DbGeometry.MultiPointFromBinary
- uid: System.Data.Spatial.DbGeometry.MultiPointFromText*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: MultiPointFromText
  nameWithType: DbGeometry.MultiPointFromText
- uid: System.Data.Spatial.DbGeometry.MultiPolygonFromBinary*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: MultiPolygonFromBinary
  nameWithType: DbGeometry.MultiPolygonFromBinary
- uid: System.Data.Spatial.DbGeometry.MultiPolygonFromText*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: MultiPolygonFromText
  nameWithType: DbGeometry.MultiPolygonFromText
- uid: System.Data.Spatial.DbGeometry.Overlaps*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: Overlaps
  nameWithType: DbGeometry.Overlaps
- uid: System.Data.Spatial.DbGeometry.PointAt*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: PointAt
  nameWithType: DbGeometry.PointAt
- uid: System.Data.Spatial.DbGeometry.PointCount*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: PointCount
  nameWithType: DbGeometry.PointCount
- uid: System.Data.Spatial.DbGeometry.PointFromBinary*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: PointFromBinary
  nameWithType: DbGeometry.PointFromBinary
- uid: System.Data.Spatial.DbGeometry.PointFromText*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: PointFromText
  nameWithType: DbGeometry.PointFromText
- uid: System.Data.Spatial.DbGeometry.PointOnSurface*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: PointOnSurface
  nameWithType: DbGeometry.PointOnSurface
- uid: System.Data.Spatial.DbGeometry.PolygonFromBinary*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: PolygonFromBinary
  nameWithType: DbGeometry.PolygonFromBinary
- uid: System.Data.Spatial.DbGeometry.PolygonFromText*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: PolygonFromText
  nameWithType: DbGeometry.PolygonFromText
- uid: System.Data.Spatial.DbGeometry.ProviderValue*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: ProviderValue
  nameWithType: DbGeometry.ProviderValue
- uid: System.Data.Spatial.DbGeometry.Relate*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: Relate
  nameWithType: DbGeometry.Relate
- uid: System.Data.Spatial.DbGeometry.SpatialEquals*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: SpatialEquals
  nameWithType: DbGeometry.SpatialEquals
- uid: System.Data.Spatial.DbGeometry.SpatialTypeName*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: SpatialTypeName
  nameWithType: DbGeometry.SpatialTypeName
- uid: System.Data.Spatial.DbGeometry.StartPoint*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: StartPoint
  nameWithType: DbGeometry.StartPoint
- uid: System.Data.Spatial.DbGeometry.SymmetricDifference*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: SymmetricDifference
  nameWithType: DbGeometry.SymmetricDifference
- uid: System.Data.Spatial.DbGeometry.ToString*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: ToString
  nameWithType: DbGeometry.ToString
- uid: System.Data.Spatial.DbGeometry.Touches*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: Touches
  nameWithType: DbGeometry.Touches
- uid: System.Data.Spatial.DbGeometry.Union*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: Union
  nameWithType: DbGeometry.Union
- uid: System.Data.Spatial.DbGeometry.WellKnownValue*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: WellKnownValue
  nameWithType: DbGeometry.WellKnownValue
- uid: System.Data.Spatial.DbGeometry.Within*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: Within
  nameWithType: DbGeometry.Within
- uid: System.Data.Spatial.DbGeometry.XCoordinate*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: XCoordinate
  nameWithType: DbGeometry.XCoordinate
- uid: System.Data.Spatial.DbGeometry.YCoordinate*
  parent: System.Data.Spatial.DbGeometry
  isExternal: false
  name: YCoordinate
  nameWithType: DbGeometry.YCoordinate
