### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.OpacityConverter
  id: OpacityConverter
  children:
  - System.Windows.Forms.OpacityConverter.#ctor
  - System.Windows.Forms.OpacityConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Windows.Forms.OpacityConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.Windows.Forms.OpacityConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  langs:
  - csharp
  name: OpacityConverter
  nameWithType: OpacityConverter
  fullName: System.Windows.Forms.OpacityConverter
  type: Class
  summary: "Provides a type converter to convert opacity values to and from a string."
  remarks: 'Typically, you do not directly create an instance of an OpacityConverter. Instead, you call the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method of <xref:System.ComponentModel.TypeDescriptor> class. For more information about type converters and to view code examples, see the <xref:System.ComponentModel.TypeConverter> base class and [How to: Implement a Type Converter](~/add/includes/ajax-current-ext-md.md).'
  syntax:
    content: 'public class OpacityConverter : System.ComponentModel.TypeConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.Windows.Forms.OpacityConverter.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.OpacityConverter
  langs:
  - csharp
  name: OpacityConverter()
  nameWithType: OpacityConverter.OpacityConverter()
  fullName: System.Windows.Forms.OpacityConverter.OpacityConverter()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Initializes an instance of the <xref href=&quot;System.Windows.Forms.OpacityConverter&quot;></xref> class."
  remarks: "This is the default constructor supplied by the compiler.       Typically, you do not directly create an instance of an <xref:System.Windows.Forms.OpacityConverter>. Instead, call the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method of <xref:System.ComponentModel.TypeDescriptor> class. For more information, see the code examples in the <xref:System.ComponentModel.TypeConverter> base class."
  syntax:
    content: public OpacityConverter ();
    parameters: []
  overload: System.Windows.Forms.OpacityConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.OpacityConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Forms.OpacityConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: OpacityConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Windows.Forms.OpacityConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Returns a value indicating whether this converter can convert an object of the specified source type to the native type of the converter that uses the specified context."
  remarks: "The `sourceType` is expected to be a <xref:System.String>."
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "A <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;></xref> that provides information about the context of a type converter."
    - id: sourceType
      type: System.Type
      description: "The <xref:System.Type> that represents the type you want to convert from."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if this converter can perform the conversion; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.OpacityConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.OpacityConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Windows.Forms.OpacityConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: OpacityConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Windows.Forms.OpacityConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Converts the specified object to the converter&quot;s native type."
  remarks: "The ConvertFrom method is specialized to convert <xref:System.String> values that represent percentages or decimal fractions to their corresponding <xref:System.Double> values, which represent the opacity as a percentage. Types other than <xref:System.String> are passed to the base class implementation of this method."
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "A <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;></xref> that provides information about the context of a type converter."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "The locale information for the conversion."
    - id: value
      type: System.Object
      description: "The object to convert."
    return:
      type: System.Object
      description: "An <xref:System.Object> that represents the converted <code>value</code>."
  overload: System.Windows.Forms.OpacityConverter.ConvertFrom*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "The object was not a supported type for the conversion."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>value</code> could not be properly converted to type <xref:System.Double>.       -or-       The resulting converted <code>value</code> was less than zero percent or greater than one hundred percent."
  platform:
  - net462
- uid: System.Windows.Forms.OpacityConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Windows.Forms.OpacityConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: OpacityConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Windows.Forms.OpacityConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Converts from the converter&quot;s native type to a value of the destination type."
  remarks: "The ConvertTo method is specialized to convert integral values to their <xref:System.String> percentage representations. Other types are passed to the base class implementation of this method."
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "A <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;></xref> that provides information about the context of a type converter."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "The locale information for the conversion."
    - id: value
      type: System.Object
      description: "The value to convert."
    - id: destinationType
      type: System.Type
      description: "The type to convert the object to."
    return:
      type: System.Object
      description: "An <xref:System.Object> that represents the converted <code>value</code>."
  overload: System.Windows.Forms.OpacityConverter.ConvertTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>value</code> cannot be converted to the <code>destinationType</code>."
  platform:
  - net462
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Windows.Forms.OpacityConverter.#ctor
  parent: System.Windows.Forms.OpacityConverter
  isExternal: false
  name: OpacityConverter()
  nameWithType: OpacityConverter.OpacityConverter()
  fullName: System.Windows.Forms.OpacityConverter.OpacityConverter()
- uid: System.Windows.Forms.OpacityConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Forms.OpacityConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: OpacityConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Windows.Forms.OpacityConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Forms.OpacityConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Windows.Forms.OpacityConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: OpacityConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Windows.Forms.OpacityConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Windows.Forms.OpacityConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Windows.Forms.OpacityConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: OpacityConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Windows.Forms.OpacityConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.Windows.Forms.OpacityConverter.#ctor*
  parent: System.Windows.Forms.OpacityConverter
  isExternal: false
  name: OpacityConverter
  nameWithType: OpacityConverter.OpacityConverter
- uid: System.Windows.Forms.OpacityConverter.CanConvertFrom*
  parent: System.Windows.Forms.OpacityConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: OpacityConverter.CanConvertFrom
- uid: System.Windows.Forms.OpacityConverter.ConvertFrom*
  parent: System.Windows.Forms.OpacityConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: OpacityConverter.ConvertFrom
- uid: System.Windows.Forms.OpacityConverter.ConvertTo*
  parent: System.Windows.Forms.OpacityConverter
  isExternal: false
  name: ConvertTo
  nameWithType: OpacityConverter.ConvertTo
