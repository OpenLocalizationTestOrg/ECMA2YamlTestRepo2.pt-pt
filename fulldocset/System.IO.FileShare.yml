### YamlMime:ManagedReference
items:
- uid: System.IO.FileShare
  id: FileShare
  children:
  - System.IO.FileShare.Delete
  - System.IO.FileShare.Inheritable
  - System.IO.FileShare.None
  - System.IO.FileShare.Read
  - System.IO.FileShare.ReadWrite
  - System.IO.FileShare.Write
  langs:
  - csharp
  name: FileShare
  nameWithType: FileShare
  fullName: System.IO.FileShare
  type: Enum
  summary: "Contains constants for controlling the kind of access other <xref href=&quot;System.IO.FileStream&quot;></xref> objects can have to the same file."
  remarks: "For an example of creating a file and writing text to a file, see [How to: Write Text to a File](~/add/includes/ajax-current-ext-md.md). For an example of reading text from a file, see [How to: Read Text from a File](~/add/includes/ajax-current-ext-md.md). For an example of reading from and writing to a binary file, see [How to: Read and Write to a Newly Created Data File](~/add/includes/ajax-current-ext-md.md).       A typical use of this enumeration is to define whether two processes can simultaneously read from the same file. For example, if a file is opened and Read is specified, other users can open the file for reading but not for writing.       A FileShare parameter is specified in some of the constructors for <xref:System.IO.FileStream>, <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>, and in some of the `Open` methods of <xref:System.IO.File> and <xref:System.IO.FileInfo> to control how a file is opened."
  example:
  - "The following <xref:System.IO.FileStream> constructor opens an existing file and grants read-only access to other users (Read).  \n  \n [!code-vb[Classic FileAccess Example#1](~/add/codesnippet/visualbasic/t-system.io.fileshare_1.vb)]\n [!code-cpp[Classic FileAccess Example#1](~/add/codesnippet/cpp/t-system.io.fileshare_1.cpp)]\n [!code-cs[Classic FileAccess Example#1](~/add/codesnippet/csharp/t-system.io.fileshare_1.cs)]"
  syntax:
    content: >-
      [System.Flags]

      [System.Runtime.InteropServices.ComVisible(true)]

      public enum FileShare
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.IO.FileShare.Delete
  id: Delete
  parent: System.IO.FileShare
  langs:
  - csharp
  name: Delete
  nameWithType: FileShare.Delete
  fullName: System.IO.FileShare.Delete
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Allows subsequent deleting of a file."
  syntax:
    content: Delete
    return:
      type: System.IO.FileShare
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileShare.Inheritable
  id: Inheritable
  parent: System.IO.FileShare
  langs:
  - csharp
  name: Inheritable
  nameWithType: FileShare.Inheritable
  fullName: System.IO.FileShare.Inheritable
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Makes the file handle inheritable by child processes. This is not directly supported by Win32."
  syntax:
    content: Inheritable
    return:
      type: System.IO.FileShare
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileShare.None
  id: None
  parent: System.IO.FileShare
  langs:
  - csharp
  name: None
  nameWithType: FileShare.None
  fullName: System.IO.FileShare.None
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Declines sharing of the current file. Any request to open the file (by this process or another process) will fail until the file is closed."
  syntax:
    content: None
    return:
      type: System.IO.FileShare
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileShare.Read
  id: Read
  parent: System.IO.FileShare
  langs:
  - csharp
  name: Read
  nameWithType: FileShare.Read
  fullName: System.IO.FileShare.Read
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Allows subsequent opening of the file for reading. If this flag is not specified, any request to open the file for reading (by this process or another process) will fail until the file is closed. However, even if this flag is specified, additional permissions might still be needed to access the file."
  syntax:
    content: Read
    return:
      type: System.IO.FileShare
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileShare.ReadWrite
  id: ReadWrite
  parent: System.IO.FileShare
  langs:
  - csharp
  name: ReadWrite
  nameWithType: FileShare.ReadWrite
  fullName: System.IO.FileShare.ReadWrite
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Allows subsequent opening of the file for reading or writing. If this flag is not specified, any request to open the file for reading or writing (by this process or another process) will fail until the file is closed. However, even if this flag is specified, additional permissions might still be needed to access the file."
  syntax:
    content: ReadWrite
    return:
      type: System.IO.FileShare
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileShare.Write
  id: Write
  parent: System.IO.FileShare
  langs:
  - csharp
  name: Write
  nameWithType: FileShare.Write
  fullName: System.IO.FileShare.Write
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Allows subsequent opening of the file for writing. If this flag is not specified, any request to open the file for writing (by this process or another process) will fail until the file is closed. However, even if this flag is specified, additional permissions might still be needed to access the file."
  syntax:
    content: Write
    return:
      type: System.IO.FileShare
      description: "To be added."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.IO.FileShare.Delete
  parent: System.IO.FileShare
  isExternal: false
  name: Delete
  nameWithType: FileShare.Delete
  fullName: System.IO.FileShare.Delete
- uid: System.IO.FileShare
  parent: System.IO
  isExternal: false
  name: FileShare
  nameWithType: FileShare
  fullName: System.IO.FileShare
- uid: System.IO.FileShare.Inheritable
  parent: System.IO.FileShare
  isExternal: false
  name: Inheritable
  nameWithType: FileShare.Inheritable
  fullName: System.IO.FileShare.Inheritable
- uid: System.IO.FileShare.None
  parent: System.IO.FileShare
  isExternal: false
  name: None
  nameWithType: FileShare.None
  fullName: System.IO.FileShare.None
- uid: System.IO.FileShare.Read
  parent: System.IO.FileShare
  isExternal: false
  name: Read
  nameWithType: FileShare.Read
  fullName: System.IO.FileShare.Read
- uid: System.IO.FileShare.ReadWrite
  parent: System.IO.FileShare
  isExternal: false
  name: ReadWrite
  nameWithType: FileShare.ReadWrite
  fullName: System.IO.FileShare.ReadWrite
- uid: System.IO.FileShare.Write
  parent: System.IO.FileShare
  isExternal: false
  name: Write
  nameWithType: FileShare.Write
  fullName: System.IO.FileShare.Write
