### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.IBindingList
  id: IBindingList
  children:
  - System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)
  - System.ComponentModel.IBindingList.AddNew
  - System.ComponentModel.IBindingList.AllowEdit
  - System.ComponentModel.IBindingList.AllowNew
  - System.ComponentModel.IBindingList.AllowRemove
  - System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)
  - System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)
  - System.ComponentModel.IBindingList.IsSorted
  - System.ComponentModel.IBindingList.ListChanged
  - System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)
  - System.ComponentModel.IBindingList.RemoveSort
  - System.ComponentModel.IBindingList.SortDirection
  - System.ComponentModel.IBindingList.SortProperty
  - System.ComponentModel.IBindingList.SupportsChangeNotification
  - System.ComponentModel.IBindingList.SupportsSearching
  - System.ComponentModel.IBindingList.SupportsSorting
  langs:
  - csharp
  name: IBindingList
  nameWithType: IBindingList
  fullName: System.ComponentModel.IBindingList
  type: Interface
  summary: "Fornece as funcionalidades necessárias para suportar cenários complexos e simples quando se vincula a uma origem de dados."
  remarks: "Esta interface é implementada pela <xref:System.Data.DataView>classe.</xref:System.Data.DataView> Implementação de um método deve apresentem um o mesmo comportamento de implementação desse método de <xref:System.Data.DataView>classe.</xref:System.Data.DataView>       Quando chamar o <xref:System.ComponentModel.IBindingList.ApplySort%2A>ou <xref:System.ComponentModel.IBindingList.RemoveSort%2A>métodos, deve aumentar um <xref:System.ComponentModel.IBindingList.ListChanged>evento com o <xref:System.ComponentModel.ListChangedType>enumeração.</xref:System.ComponentModel.ListChangedType> </xref:System.ComponentModel.IBindingList.ListChanged> </xref:System.ComponentModel.IBindingList.RemoveSort%2A> </xref:System.ComponentModel.IBindingList.ApplySort%2A>       Quando chamar o <xref:System.ComponentModel.IBindingList.AddNew%2A>método, deve aumentar um <xref:System.ComponentModel.IBindingList.ListChanged>evento com o <xref:System.ComponentModel.ListChangedType>enumeração as devidas o índice adequado.</xref:System.ComponentModel.ListChangedType> </xref:System.ComponentModel.IBindingList.ListChanged> </xref:System.ComponentModel.IBindingList.AddNew%2A> A linha adicionada está num Estado em que premir o ESC <xref:System.Windows.Forms.DataGridView>controlo pode remover a nova linha.</xref:System.Windows.Forms.DataGridView> Gerar o <xref:System.ComponentModel.IBindingList.ListChanged>evento com o <xref:System.ComponentModel.ListChangedType>enumeração uma segunda vez esta linha indica que o item é agora uma linha não no estado &quot;novo&quot;.</xref:System.ComponentModel.ListChangedType> </xref:System.ComponentModel.IBindingList.ListChanged>       Ao remover um item ou a chamada de <xref:System.ComponentModel.IEditableObject.CancelEdit%2A>método de uma linha nova (se linha que implementa <xref:System.ComponentModel.IEditableObject>), deve aumentar um <xref:System.ComponentModel.IBindingList.ListChanged>evento com o <xref:System.ComponentModel.ListChangedType>enumeração as devidas o índice adequado.</xref:System.ComponentModel.ListChangedType> </xref:System.ComponentModel.IBindingList.ListChanged> </xref:System.ComponentModel.IEditableObject> </xref:System.ComponentModel.IEditableObject.CancelEdit%2A>"
  example:
  - "The following example provides a simple implementation of the IBindingList interface. The `CustomerList` class stores customer information in a list. This example assumes that you have used the `Customer` class that can be found in the example in the <xref:System.ComponentModel.IEditableObject> class.  \n  \n [!code-cs[Binding_Editable#2](~/add/codesnippet/csharp/t-system.componentmodel._23_1.cs)]\n [!code-cpp[Binding_Editable#2](~/add/codesnippet/cpp/t-system.componentmodel._23_1.cpp)]\n [!code-vb[Binding_Editable#2](~/add/codesnippet/visualbasic/t-system.componentmodel._23_1.vb)]"
  syntax:
    content: 'public interface IBindingList : System.Collections.IList'
  implements:
  - System.Collections.IList
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)
  id: AddIndex(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: AddIndex(PropertyDescriptor)
  nameWithType: IBindingList.AddIndex(PropertyDescriptor)
  fullName: System.ComponentModel.IBindingList.AddIndex(PropertyDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Adiciona o <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> para índices utilizados para procurar."
  remarks: "A lista tem de suportar este método. No entanto, suporte para este método pode ser um nonoperation."
  syntax:
    content: public void AddIndex (System.ComponentModel.PropertyDescriptor property);
    parameters:
    - id: property
      type: System.ComponentModel.PropertyDescriptor
      description: "O <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> para adicionar os índices utilizados para procurar."
  overload: System.ComponentModel.IBindingList.AddIndex*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.AddNew
  id: AddNew
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: AddNew()
  nameWithType: IBindingList.AddNew()
  fullName: System.ComponentModel.IBindingList.AddNew()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Adiciona um novo item à lista."
  remarks: "Este método só é suportado se <xref:System.ComponentModel.IBindingList.AllowNew%2A>é `true`; caso contrário, um <xref:System.NotSupportedException>é emitida.</xref:System.NotSupportedException> </xref:System.ComponentModel.IBindingList.AllowNew%2A>       Implementar este método significa que o <xref:System.ComponentModel.IBindingList>lista tem de compreender o tipo de objetos a adicionar à lista e tem de compreender como criar uma nova instância desse tipo.</xref:System.ComponentModel.IBindingList> Por exemplo, se tiver uma coleção de `myCustomer` objetos, o método AddNew deve adicionar uma nova `myCustomer` objeto à lista.      > [!NOTE] > Se os objetos nesta lista implementam o <xref:System.ComponentModel.IEditableObject>interface, ao chamar o <xref:System.ComponentModel.IEditableObject.CancelEdit%2A>método deve eliminar um objeto, adicione à lista, quando o objeto foi criado utilizando o método AddNew.</xref:System.ComponentModel.IEditableObject.CancelEdit%2A> </xref:System.ComponentModel.IEditableObject> O objecto só deve ser adicionado à lista quando o <xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=fullName>método é chamado.</xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=fullName> Por conseguinte, tem de sychronize o objeto e a lista atentamente.       Quando este método é denominado, deve aumentar um <xref:System.ComponentModel.IBindingList.ListChanged>evento com o <xref:System.ComponentModel.ListChangedType>enumeração as devidas o índice adequado.</xref:System.ComponentModel.ListChangedType> </xref:System.ComponentModel.IBindingList.ListChanged> A linha adicionada está num Estado em que atingir Esc <xref:System.Windows.Forms.DataGridView>controlo pode remover a nova linha.</xref:System.Windows.Forms.DataGridView> Gerar o <xref:System.ComponentModel.IBindingList.ListChanged>evento com o <xref:System.ComponentModel.ListChangedType>enumeração uma segunda vez esta linha indica que o item é agora uma linha normal (não está num estado novo).</xref:System.ComponentModel.ListChangedType> </xref:System.ComponentModel.IBindingList.ListChanged>"
  syntax:
    content: public object AddNew ();
    parameters: []
    return:
      type: System.Object
      description: "O item adicionado à lista."
  overload: System.ComponentModel.IBindingList.AddNew*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.ComponentModel.IBindingList.AllowNew*>is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.ComponentModel.IBindingList.AllowNew*>"
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.AllowEdit
  id: AllowEdit
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: AllowEdit
  nameWithType: IBindingList.AllowEdit
  fullName: System.ComponentModel.IBindingList.AllowEdit
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Obtém se pode atualizar itens na lista."
  syntax:
    content: public bool AllowEdit { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>se pode atualizar os itens na lista; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.IBindingList.AllowEdit*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.AllowNew
  id: AllowNew
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: AllowNew
  nameWithType: IBindingList.AllowNew
  fullName: System.ComponentModel.IBindingList.AllowNew
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Obtém se pode adicionar itens à lista utilizando <xref:System.ComponentModel.IBindingList.AddNew*>.</xref:System.ComponentModel.IBindingList.AddNew*>"
  remarks: "Se <xref:System.Collections.IList.IsFixedSize%2A?displayProperty=fullName>ou <xref:System.Collections.IList.IsReadOnly%2A?displayProperty=fullName>é `true`, esta propriedade devolve `false`.</xref:System.Collections.IList.IsReadOnly%2A?displayProperty=fullName> </xref:System.Collections.IList.IsFixedSize%2A?displayProperty=fullName>"
  syntax:
    content: public bool AllowNew { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>se pode adicionar itens à lista, utilizando <xref:System.ComponentModel.IBindingList.AddNew*>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ComponentModel.IBindingList.AddNew*>"
  overload: System.ComponentModel.IBindingList.AllowNew*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.AllowRemove
  id: AllowRemove
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: AllowRemove
  nameWithType: IBindingList.AllowRemove
  fullName: System.ComponentModel.IBindingList.AllowRemove
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Obtém se pode remover itens da lista, utilizando <> </> *> ou <> </> *>."
  remarks: "Se <xref:System.Collections.IList.IsFixedSize%2A?displayProperty=fullName>ou <xref:System.Collections.IList.IsReadOnly%2A?displayProperty=fullName>é `true`, esta propriedade devolve `false`.</xref:System.Collections.IList.IsReadOnly%2A?displayProperty=fullName> </xref:System.Collections.IList.IsFixedSize%2A?displayProperty=fullName>      > [!NOTE] > AllowRemove se devolve `false` <xref:System.Collections.IList.Remove%2A?displayProperty=fullName>e <xref:System.Collections.IList.RemoveAt%2A?displayProperty=fullName>acionar <xref:System.NotSupportedException>.</xref:System.NotSupportedException> </xref:System.Collections.IList.RemoveAt%2A?displayProperty=fullName> </xref:System.Collections.IList.Remove%2A?displayProperty=fullName>"
  syntax:
    content: public bool AllowRemove { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se remover os itens na lista; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.IBindingList.AllowRemove*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)
  id: ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: ApplySort(PropertyDescriptor,ListSortDirection)
  nameWithType: IBindingList.ApplySort(PropertyDescriptor,ListSortDirection)
  fullName: System.ComponentModel.IBindingList.ApplySort(PropertyDescriptor,ListSortDirection)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ordena a lista com base num <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> e um <xref href=&quot;System.ComponentModel.ListSortDirection&quot;> </xref>."
  remarks: "Se os itens são adicionados ou removidos, estes itens são colocados por ordem da ordenação.       Este método é suportado se <xref:System.ComponentModel.IBindingList.SupportsSorting%2A>é `true`; caso contrário, este método emite <xref:System.NotSupportedException>.</xref:System.NotSupportedException> </xref:System.ComponentModel.IBindingList.SupportsSorting%2A>"
  syntax:
    content: public void ApplySort (System.ComponentModel.PropertyDescriptor property, System.ComponentModel.ListSortDirection direction);
    parameters:
    - id: property
      type: System.ComponentModel.PropertyDescriptor
      description: "O <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> para ordenar por."
    - id: direction
      type: System.ComponentModel.ListSortDirection
      description: "Um do <xref href=&quot;System.ComponentModel.ListSortDirection&quot;> </xref> valores."
  overload: System.ComponentModel.IBindingList.ApplySort*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.ComponentModel.IBindingList.SupportsSorting*>is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.ComponentModel.IBindingList.SupportsSorting*>"
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)
  id: Find(System.ComponentModel.PropertyDescriptor,System.Object)
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: Find(PropertyDescriptor,Object)
  nameWithType: IBindingList.Find(PropertyDescriptor,Object)
  fullName: System.ComponentModel.IBindingList.Find(PropertyDescriptor,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Devolve o índice da linha que tenha o determinado <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref>."
  remarks: "Este método selecionará a primeira linha em que o valor da `property` parâmetro igual ao valor da `key` parâmetro.       Este método é suportado se <xref:System.ComponentModel.IBindingList.SupportsSearching%2A>é `true`, caso contrário, este método emite <xref:System.NotSupportedException>.</xref:System.NotSupportedException> </xref:System.ComponentModel.IBindingList.SupportsSearching%2A>"
  example:
  - "The following code example demonstrates how to implement the Find method.  \n  \n [!code-cs[System.Windows.Forms.BindingSourceAndBindingListOfT#3](~/add/codesnippet/csharp/03c83841-f554-4f60-86f9-_1.cs)]\n [!code-vb[System.Windows.Forms.BindingSourceAndBindingListOfT#3](~/add/codesnippet/visualbasic/03c83841-f554-4f60-86f9-_1.vb)]"
  syntax:
    content: public int Find (System.ComponentModel.PropertyDescriptor property, object key);
    parameters:
    - id: property
      type: System.ComponentModel.PropertyDescriptor
      description: "O <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> procurar."
    - id: key
      type: System.Object
      description: "O valor da `property` parâmetro para procurar."
    return:
      type: System.Int32
      description: "O índice da linha que tenha o determinado <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref>."
  overload: System.ComponentModel.IBindingList.Find*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.ComponentModel.IBindingList.SupportsSearching*>is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.ComponentModel.IBindingList.SupportsSearching*>"
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.IsSorted
  id: IsSorted
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: IsSorted
  nameWithType: IBindingList.IsSorted
  fullName: System.ComponentModel.IBindingList.IsSorted
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Obtém se os itens na lista são ordenados."
  remarks: "Esta propriedade é suportada se <xref:System.ComponentModel.IBindingList.SupportsSorting%2A>é `true`; caso contrário, esta propriedade emite <xref:System.NotSupportedException>.</xref:System.NotSupportedException> </xref:System.ComponentModel.IBindingList.SupportsSorting%2A>       Se devolver IsSorted `true`, itens são adicionados ou removidos por ordem da ordenação."
  syntax:
    content: public bool IsSorted { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <> </> *> EnableNotification for chamada e <> </> *> não foi chamado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.IBindingList.IsSorted*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.ComponentModel.IBindingList.SupportsSorting*>is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.ComponentModel.IBindingList.SupportsSorting*>"
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.ListChanged
  id: ListChanged
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: ListChanged
  nameWithType: IBindingList.ListChanged
  fullName: System.ComponentModel.IBindingList.ListChanged
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Ocorre quando as alterações de lista ou um item na lista de alterações."
  remarks: "Este evento é desencadeado apenas se o <xref:System.ComponentModel.IBindingList.SupportsChangeNotification%2A>propriedade é `true`.</xref:System.ComponentModel.IBindingList.SupportsChangeNotification%2A>"
  syntax:
    content: public event System.ComponentModel.ListChangedEventHandler ListChanged;
    return:
      type: System.ComponentModel.ListChangedEventHandler
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)
  id: RemoveIndex(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: RemoveIndex(PropertyDescriptor)
  nameWithType: IBindingList.RemoveIndex(PropertyDescriptor)
  fullName: System.ComponentModel.IBindingList.RemoveIndex(PropertyDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Remove o <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> de índices utilizados para procurar."
  remarks: "A lista tem de suportar este método. No entanto, suporte para este método pode ser um nonoperation."
  syntax:
    content: public void RemoveIndex (System.ComponentModel.PropertyDescriptor property);
    parameters:
    - id: property
      type: System.ComponentModel.PropertyDescriptor
      description: "O <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> para remover os índices utilizados para procurar."
  overload: System.ComponentModel.IBindingList.RemoveIndex*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.RemoveSort
  id: RemoveSort
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: RemoveSort()
  nameWithType: IBindingList.RemoveSort()
  fullName: System.ComponentModel.IBindingList.RemoveSort()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Remove quaisquer ordenação aplicada com <xref:System.ComponentModel.IBindingList.ApplySort*>.</xref:System.ComponentModel.IBindingList.ApplySort*>"
  remarks: "Esta propriedade é suportada se <xref:System.ComponentModel.IBindingList.SupportsSorting%2A>é `true`; caso contrário, esta propriedade emite <xref:System.NotSupportedException>.</xref:System.NotSupportedException> </xref:System.ComponentModel.IBindingList.SupportsSorting%2A>       Quando chamar este método, deve aumentar um <xref:System.ComponentModel.IBindingList.ListChanged>evento com o <xref:System.ComponentModel.ListChangedType>enumeração.</xref:System.ComponentModel.ListChangedType> </xref:System.ComponentModel.IBindingList.ListChanged>"
  syntax:
    content: public void RemoveSort ();
    parameters: []
  overload: System.ComponentModel.IBindingList.RemoveSort*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.ComponentModel.IBindingList.SupportsSorting*>is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.ComponentModel.IBindingList.SupportsSorting*>"
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.SortDirection
  id: SortDirection
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: SortDirection
  nameWithType: IBindingList.SortDirection
  fullName: System.ComponentModel.IBindingList.SortDirection
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Obtém a direção da ordenação."
  remarks: "Esta propriedade é suportada se <xref:System.ComponentModel.IBindingList.SupportsSorting%2A>é `true`; caso contrário, esta propriedade emite <xref:System.NotSupportedException>.</xref:System.NotSupportedException> </xref:System.ComponentModel.IBindingList.SupportsSorting%2A>"
  syntax:
    content: public System.ComponentModel.ListSortDirection SortDirection { get; }
    return:
      type: System.ComponentModel.ListSortDirection
      description: "Um do <xref href=&quot;System.ComponentModel.ListSortDirection&quot;> </xref> valores."
  overload: System.ComponentModel.IBindingList.SortDirection*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.ComponentModel.IBindingList.SupportsSorting*>is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.ComponentModel.IBindingList.SupportsSorting*>"
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.SortProperty
  id: SortProperty
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: SortProperty
  nameWithType: IBindingList.SortProperty
  fullName: System.ComponentModel.IBindingList.SortProperty
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Obtém o <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> que está a ser utilizado para ordenação."
  remarks: "Esta propriedade é suportada se <xref:System.ComponentModel.IBindingList.SupportsSorting%2A>é `true`; caso contrário, esta propriedade emite <xref:System.NotSupportedException>.</xref:System.NotSupportedException> </xref:System.ComponentModel.IBindingList.SupportsSorting%2A>"
  syntax:
    content: public System.ComponentModel.PropertyDescriptor SortProperty { get; }
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "O <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> que está a ser utilizado para ordenação."
  overload: System.ComponentModel.IBindingList.SortProperty*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.ComponentModel.IBindingList.SupportsSorting*>is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.ComponentModel.IBindingList.SupportsSorting*>"
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.SupportsChangeNotification
  id: SupportsChangeNotification
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: SupportsChangeNotification
  nameWithType: IBindingList.SupportsChangeNotification
  fullName: System.ComponentModel.IBindingList.SupportsChangeNotification
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Obtém se um <xref href=&quot;System.ComponentModel.IBindingList.ListChanged&quot;> </xref> evento é desencadeado quando as alterações de lista ou um item na lista de alterações."
  remarks: "Objetos na lista tem de notificar a lista quando são alterados, pelo que a lista pode originar uma <xref:System.ComponentModel.IBindingList.ListChanged>eventos.</xref:System.ComponentModel.IBindingList.ListChanged>"
  syntax:
    content: public bool SupportsChangeNotification { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se um <xref href=&quot;System.ComponentModel.IBindingList.ListChanged&quot;> </xref> evento é desencadeado quando a lista de alterações ou quando um item é alterado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.IBindingList.SupportsChangeNotification*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.SupportsSearching
  id: SupportsSearching
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: SupportsSearching
  nameWithType: IBindingList.SupportsSearching
  fullName: System.ComponentModel.IBindingList.SupportsSearching
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Obtém se a lista suporta a procura utilizando o <xref:System.ComponentModel.IBindingList.Find*>método.</xref:System.ComponentModel.IBindingList.Find*>"
  remarks: ''
  example:
  - "The following code example demonstrates how to implement the SupportsSearching property.  \n  \n [!code-cs[System.Windows.Forms.BindingSourceAndBindingListOfT#3](~/add/codesnippet/csharp/p-system.componentmodel._7_1.cs)]\n [!code-vb[System.Windows.Forms.BindingSourceAndBindingListOfT#3](~/add/codesnippet/visualbasic/p-system.componentmodel._7_1.vb)]"
  syntax:
    content: public bool SupportsSearching { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a lista suporta a procura utilizando o <xref:System.ComponentModel.IBindingList.Find*>método; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ComponentModel.IBindingList.Find*>"
  overload: System.ComponentModel.IBindingList.SupportsSearching*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.SupportsSorting
  id: SupportsSorting
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: SupportsSorting
  nameWithType: IBindingList.SupportsSorting
  fullName: System.ComponentModel.IBindingList.SupportsSorting
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Obtém se a lista de suporte a ordenação."
  remarks: "Se esta propriedade é `true`, em seguida, <xref:System.ComponentModel.IBindingList.IsSorted%2A>, <xref:System.ComponentModel.IBindingList.SortProperty%2A>, <xref:System.ComponentModel.IBindingList.SortDirection%2A>, <xref:System.ComponentModel.IBindingList.ApplySort%2A>, e <xref:System.ComponentModel.IBindingList.RemoveSort%2A>são suportadas.</xref:System.ComponentModel.IBindingList.RemoveSort%2A> </xref:System.ComponentModel.IBindingList.ApplySort%2A> </xref:System.ComponentModel.IBindingList.SortDirection%2A> </xref:System.ComponentModel.IBindingList.SortProperty%2A> </xref:System.ComponentModel.IBindingList.IsSorted%2A>"
  syntax:
    content: public bool SupportsSorting { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a lista de suporte a ordenação; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.IBindingList.SupportsSorting*
  exceptions: []
  platform:
  - net462
references:
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: AddIndex(PropertyDescriptor)
  nameWithType: IBindingList.AddIndex(PropertyDescriptor)
  fullName: System.ComponentModel.IBindingList.AddIndex(PropertyDescriptor)
- uid: System.ComponentModel.PropertyDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor
- uid: System.ComponentModel.IBindingList.AddNew
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: AddNew()
  nameWithType: IBindingList.AddNew()
  fullName: System.ComponentModel.IBindingList.AddNew()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.IBindingList.AllowEdit
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: AllowEdit
  nameWithType: IBindingList.AllowEdit
  fullName: System.ComponentModel.IBindingList.AllowEdit
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.IBindingList.AllowNew
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: AllowNew
  nameWithType: IBindingList.AllowNew
  fullName: System.ComponentModel.IBindingList.AllowNew
- uid: System.ComponentModel.IBindingList.AllowRemove
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: AllowRemove
  nameWithType: IBindingList.AllowRemove
  fullName: System.ComponentModel.IBindingList.AllowRemove
- uid: System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: ApplySort(PropertyDescriptor,ListSortDirection)
  nameWithType: IBindingList.ApplySort(PropertyDescriptor,ListSortDirection)
  fullName: System.ComponentModel.IBindingList.ApplySort(PropertyDescriptor,ListSortDirection)
- uid: System.ComponentModel.ListSortDirection
  parent: System.ComponentModel
  isExternal: false
  name: ListSortDirection
  nameWithType: ListSortDirection
  fullName: System.ComponentModel.ListSortDirection
- uid: System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: Find(PropertyDescriptor,Object)
  nameWithType: IBindingList.Find(PropertyDescriptor,Object)
  fullName: System.ComponentModel.IBindingList.Find(PropertyDescriptor,Object)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.IBindingList.IsSorted
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: IsSorted
  nameWithType: IBindingList.IsSorted
  fullName: System.ComponentModel.IBindingList.IsSorted
- uid: System.ComponentModel.IBindingList.ListChanged
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: ListChanged
  nameWithType: IBindingList.ListChanged
  fullName: System.ComponentModel.IBindingList.ListChanged
- uid: System.ComponentModel.ListChangedEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: ListChangedEventHandler
  nameWithType: ListChangedEventHandler
  fullName: System.ComponentModel.ListChangedEventHandler
- uid: System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: RemoveIndex(PropertyDescriptor)
  nameWithType: IBindingList.RemoveIndex(PropertyDescriptor)
  fullName: System.ComponentModel.IBindingList.RemoveIndex(PropertyDescriptor)
- uid: System.ComponentModel.IBindingList.RemoveSort
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: RemoveSort()
  nameWithType: IBindingList.RemoveSort()
  fullName: System.ComponentModel.IBindingList.RemoveSort()
- uid: System.ComponentModel.IBindingList.SortDirection
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: SortDirection
  nameWithType: IBindingList.SortDirection
  fullName: System.ComponentModel.IBindingList.SortDirection
- uid: System.ComponentModel.IBindingList.SortProperty
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: SortProperty
  nameWithType: IBindingList.SortProperty
  fullName: System.ComponentModel.IBindingList.SortProperty
- uid: System.ComponentModel.IBindingList.SupportsChangeNotification
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: SupportsChangeNotification
  nameWithType: IBindingList.SupportsChangeNotification
  fullName: System.ComponentModel.IBindingList.SupportsChangeNotification
- uid: System.ComponentModel.IBindingList.SupportsSearching
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: SupportsSearching
  nameWithType: IBindingList.SupportsSearching
  fullName: System.ComponentModel.IBindingList.SupportsSearching
- uid: System.ComponentModel.IBindingList.SupportsSorting
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: SupportsSorting
  nameWithType: IBindingList.SupportsSorting
  fullName: System.ComponentModel.IBindingList.SupportsSorting
- uid: System.ComponentModel.IBindingList.AddIndex*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: AddIndex
  nameWithType: IBindingList.AddIndex
- uid: System.ComponentModel.IBindingList.AddNew*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: AddNew
  nameWithType: IBindingList.AddNew
- uid: System.ComponentModel.IBindingList.AllowEdit*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: AllowEdit
  nameWithType: IBindingList.AllowEdit
- uid: System.ComponentModel.IBindingList.AllowNew*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: AllowNew
  nameWithType: IBindingList.AllowNew
- uid: System.ComponentModel.IBindingList.AllowRemove*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: AllowRemove
  nameWithType: IBindingList.AllowRemove
- uid: System.ComponentModel.IBindingList.ApplySort*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: ApplySort
  nameWithType: IBindingList.ApplySort
- uid: System.ComponentModel.IBindingList.Find*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: Find
  nameWithType: IBindingList.Find
- uid: System.ComponentModel.IBindingList.IsSorted*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: IsSorted
  nameWithType: IBindingList.IsSorted
- uid: System.ComponentModel.IBindingList.RemoveIndex*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: RemoveIndex
  nameWithType: IBindingList.RemoveIndex
- uid: System.ComponentModel.IBindingList.RemoveSort*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: RemoveSort
  nameWithType: IBindingList.RemoveSort
- uid: System.ComponentModel.IBindingList.SortDirection*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: SortDirection
  nameWithType: IBindingList.SortDirection
- uid: System.ComponentModel.IBindingList.SortProperty*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: SortProperty
  nameWithType: IBindingList.SortProperty
- uid: System.ComponentModel.IBindingList.SupportsChangeNotification*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: SupportsChangeNotification
  nameWithType: IBindingList.SupportsChangeNotification
- uid: System.ComponentModel.IBindingList.SupportsSearching*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: SupportsSearching
  nameWithType: IBindingList.SupportsSearching
- uid: System.ComponentModel.IBindingList.SupportsSorting*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: SupportsSorting
  nameWithType: IBindingList.SupportsSorting
