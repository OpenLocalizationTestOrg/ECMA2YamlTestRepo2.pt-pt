### YamlMime:ManagedReference
items:
- uid: System.Printing.PrintCapabilities
  id: PrintCapabilities
  children:
  - System.Printing.PrintCapabilities.#ctor(System.IO.Stream)
  - System.Printing.PrintCapabilities.CollationCapability
  - System.Printing.PrintCapabilities.DeviceFontSubstitutionCapability
  - System.Printing.PrintCapabilities.DuplexingCapability
  - System.Printing.PrintCapabilities.InputBinCapability
  - System.Printing.PrintCapabilities.MaxCopyCount
  - System.Printing.PrintCapabilities.OrientedPageMediaHeight
  - System.Printing.PrintCapabilities.OrientedPageMediaWidth
  - System.Printing.PrintCapabilities.OutputColorCapability
  - System.Printing.PrintCapabilities.OutputQualityCapability
  - System.Printing.PrintCapabilities.PageBorderlessCapability
  - System.Printing.PrintCapabilities.PageImageableArea
  - System.Printing.PrintCapabilities.PageMediaSizeCapability
  - System.Printing.PrintCapabilities.PageMediaTypeCapability
  - System.Printing.PrintCapabilities.PageOrderCapability
  - System.Printing.PrintCapabilities.PageOrientationCapability
  - System.Printing.PrintCapabilities.PageResolutionCapability
  - System.Printing.PrintCapabilities.PageScalingFactorRange
  - System.Printing.PrintCapabilities.PagesPerSheetCapability
  - System.Printing.PrintCapabilities.PagesPerSheetDirectionCapability
  - System.Printing.PrintCapabilities.PhotoPrintingIntentCapability
  - System.Printing.PrintCapabilities.StaplingCapability
  - System.Printing.PrintCapabilities.TrueTypeFontModeCapability
  langs:
  - csharp
  name: PrintCapabilities
  nameWithType: PrintCapabilities
  fullName: System.Printing.PrintCapabilities
  type: Class
  summary: "Defines the capabilities of a printer."
  remarks: "A PrintCapabilities object is an easy-to-work-with representation of a certain type of XML document called a *PrintCapabilities document*. The latter is a snapshot of all of a printer&quot;s capabilities and their current settings. For example, if the printer supports color printing, then the document would have a `<PageOutputColor … >` element that sets out how color output will be handled. The element is, in turn, represented by the <xref:System.Printing.PrintCapabilities.OutputColorCapability%2A> property of the PrintCapabilities object. If the printer does not support color, then there is no `<PageOutputColor … >` element in the document and the value of the <xref:System.Printing.PrintCapabilities.OutputColorCapability%2A> property is `null`. The PrintCapabilities document must conform to the [Print Schema](http://go.microsoft.com/fwlink/?LinkId=186397).       The PrintCapabilities class enables your application to obtain a printer&quot;s capabilities without having to engage in any direct reading of XML <xref:System.IO.Stream> objects.       All of the most popular features of file and photo printers, for both home and business, are encapsulated by the PrintCapabilities class. But the [Print Schema](http://go.microsoft.com/fwlink/?LinkId=186397) defines many more, less common, features and it can be extended to handle features of specialty printing devices. So, although the <xref:System.Printing.PrintTicket> and PrintCapabilities classes cannot be inherited, you can extend the [Print Schema](http://go.microsoft.com/fwlink/?LinkId=186397) to recognize print device features that are not accounted for in the <xref:System.Printing.PrintTicket> or PrintCapabilities classes.       **Note** When the PrintCapabilities object is created with the constructor that takes a PrintCapabilities document (as a <xref:System.IO.Stream>) parameter, that entire document is stored in a non-public field in the object, including the XML elements within it that express less common features that are not represented by any of the public properties of the PrintCapabilities class. In fact, if the driver that produced the PrintCapabilities document is using a private extension of the [Print Schema](http://go.microsoft.com/fwlink/?LinkId=186397), that privately defined markup is also stored as part of the non-public PrintCapabilities document.      > [!CAUTION] >  Classes within the <xref:System.Printing> namespace are not supported for use within a Windows service or ASP.NET application or service. Attempting to use these classes from within one of these application types may produce unexpected problems, such as diminished service performance and run-time exceptions.       If you want to print from a Windows Forms application, see the <xref:System.Drawing.Printing> namespace."
  example:
  - "The following example shows how to determine the capabilities of a specific printer and how to configure a print job to take advantage of them.  \n  \n [!code-cs[XpsCreate#PrinterCapabilities](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#printercapabilities)]\n [!code-cpp[XpsCreate#PrinterCapabilities](~/add/codesnippet/cpp/xpscreate/XpsCreate.cpp#printercapabilities)]\n [!code-vb[XpsCreate#PrinterCapabilities](~/add/codesnippet/visualbasic/xpscreate/xpscreate.vb#printercapabilities)]"
  syntax:
    content: public sealed class PrintCapabilities
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Printing.PrintCapabilities.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Printing.PrintCapabilities
  langs:
  - csharp
  name: PrintCapabilities(Stream)
  nameWithType: PrintCapabilities.PrintCapabilities(Stream)
  fullName: System.Printing.PrintCapabilities.PrintCapabilities(Stream)
  type: Constructor
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "Initializes a new instance of the <xref href=&quot;System.Printing.PrintCapabilities&quot;></xref> class by using an XML stream (that contains a PrintCapabilities document) that specifies printer capabilities and complies with the XML [Print Schema](http://go.microsoft.com/fwlink/?LinkId=186397)."
  remarks: "The entire PrintCapabilities document is stored in a non-public field in the object, including the XML elements within it that express less common features that are not represented by any of the public properties of the <xref:System.Printing.PrintCapabilities> class. In fact, if the driver that produced the PrintCapabilities document is using a private extension of the [Print Schema](http://go.microsoft.com/fwlink/?LinkId=186397), that privately defined markup is also stored as part of the non-public PrintCapabilities document.       The private parts of the document, if any, are not validated by the constructor, but all **Print Schema**-defined parts are validated, including the parts that are not represented by any of the public properties of the <xref:System.Printing.PrintCapabilities> class. Accordingly, the <xref:System.FormatException> could be thrown even if all of the XML markup that corresponds to the public properties is valid."
  syntax:
    content: public PrintCapabilities (System.IO.Stream xmlStream);
    parameters:
    - id: xmlStream
      type: System.IO.Stream
      description: "An XML <xref:System.IO.Stream> that describes printer capabilities and conforms to the Print Schema."
  overload: System.Printing.PrintCapabilities.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>xmlStream</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>xmlStream</code> is not valid XML."
  platform:
  - net462
- uid: System.Printing.PrintCapabilities.CollationCapability
  id: CollationCapability
  parent: System.Printing.PrintCapabilities
  langs:
  - csharp
  name: CollationCapability
  nameWithType: PrintCapabilities.CollationCapability
  fullName: System.Printing.PrintCapabilities.CollationCapability
  type: Property
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "Gets a collection of values that identify the collation capabilities of a printer."
  remarks: "A standard printer typically collates output by printing every page of the first copy, then every page of the second copy, and so on. When a standard printer does not collate, it prints every copy of the first page, then every copy of the second page, and so on.       Some printers are specially equipped with collating bins. The printing sequence for these specially equipped printers may differ from those of standard printers; however the outcome is the same: each copy of a multi-paged print job contains all its pages in the proper sequence without manual sorting.       If the printer does not support collation, the collection is empty.       This property corresponds to the [Print Schema](http://go.microsoft.com/fwlink/?LinkId=186397)&quot;s `DocumentCollate` keyword, not the `JobCollateAllDocuments` keyword."
  example:
  - "The following example shows how to use this property to determine the capabilities of a specific printer and how to configure a print job to take advantage of them.  \n  \n [!code-cs[XpsCreate#PrinterCapabilities](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#printercapabilities)]\n [!code-cpp[XpsCreate#PrinterCapabilities](~/add/codesnippet/cpp/xpscreate/XpsCreate.cpp#printercapabilities)]\n [!code-vb[XpsCreate#PrinterCapabilities](~/add/codesnippet/visualbasic/xpscreate/xpscreate.vb#printercapabilities)]"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Printing.Collation> CollationCapability { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Printing.Collation}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of <xref href=&quot;System.Printing.Collation&quot;></xref> values."
  overload: System.Printing.PrintCapabilities.CollationCapability*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintCapabilities.DeviceFontSubstitutionCapability
  id: DeviceFontSubstitutionCapability
  parent: System.Printing.PrintCapabilities
  langs:
  - csharp
  name: DeviceFontSubstitutionCapability
  nameWithType: PrintCapabilities.DeviceFontSubstitutionCapability
  fullName: System.Printing.PrintCapabilities.DeviceFontSubstitutionCapability
  type: Property
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "Gets a collection of values that identify whether and how a printer can substitute device-based fonts for computer-based fonts."
  remarks: "If the printer does not support device font substitution, the collection is empty. If it does support font substitution, the driver should include both the <xref:System.Printing.DeviceFontSubstitution> and <xref:System.Printing.DeviceFontSubstitution> values in the collection.       This property corresponds to the [Print Schema](http://go.microsoft.com/fwlink/?LinkId=186397)&quot;s `PageDeviceFontSubstitution` keyword."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Printing.DeviceFontSubstitution> DeviceFontSubstitutionCapability { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Printing.DeviceFontSubstitution}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of <xref href=&quot;System.Printing.DeviceFontSubstitution&quot;></xref> values."
  overload: System.Printing.PrintCapabilities.DeviceFontSubstitutionCapability*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintCapabilities.DuplexingCapability
  id: DuplexingCapability
  parent: System.Printing.PrintCapabilities
  langs:
  - csharp
  name: DuplexingCapability
  nameWithType: PrintCapabilities.DuplexingCapability
  fullName: System.Printing.PrintCapabilities.DuplexingCapability
  type: Property
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "Gets a collection of values that identify whether and how a printer can perform two-sided printing."
  remarks: "If the printer does not support duplexing, the collection is empty.       This property corresponds to the [Print Schema](http://go.microsoft.com/fwlink/?LinkId=186397)&quot;s `JobDuplexAllDocumentsContiguously` keyword, not the `DocumentDuplex` keyword."
  example:
  - "The following example shows how to use this property to determine the capabilities of a specific printer and how to configure a print job to take advantage of them.  \n  \n [!code-cs[XpsCreate#PrinterCapabilities](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#printercapabilities)]\n [!code-cpp[XpsCreate#PrinterCapabilities](~/add/codesnippet/cpp/xpscreate/XpsCreate.cpp#printercapabilities)]\n [!code-vb[XpsCreate#PrinterCapabilities](~/add/codesnippet/visualbasic/xpscreate/xpscreate.vb#printercapabilities)]"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Printing.Duplexing> DuplexingCapability { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Printing.Duplexing}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of <xref href=&quot;System.Printing.Duplexing&quot;></xref> values."
  overload: System.Printing.PrintCapabilities.DuplexingCapability*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintCapabilities.InputBinCapability
  id: InputBinCapability
  parent: System.Printing.PrintCapabilities
  langs:
  - csharp
  name: InputBinCapability
  nameWithType: PrintCapabilities.InputBinCapability
  fullName: System.Printing.PrintCapabilities.InputBinCapability
  type: Property
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "Gets a collection of values that indicate what input bin (paper tray) is used."
  remarks: "This property represents the [Print Schema](http://go.microsoft.com/fwlink/?LinkId=186397)&quot;s feature `JobInputBin`, if that feature is supported by the device; otherwise, it represents `DocumentInputBin`, if that feature is supported; otherwise, it represents `PageInputBin`.       If the printer does not support any of these features, the collection is empty."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Printing.InputBin> InputBinCapability { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Printing.InputBin}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of <xref href=&quot;System.Printing.InputBin&quot;></xref> values."
  overload: System.Printing.PrintCapabilities.InputBinCapability*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintCapabilities.MaxCopyCount
  id: MaxCopyCount
  parent: System.Printing.PrintCapabilities
  langs:
  - csharp
  name: MaxCopyCount
  nameWithType: PrintCapabilities.MaxCopyCount
  fullName: System.Printing.PrintCapabilities.MaxCopyCount
  type: Property
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "Gets a value indicating the maximum number of copies that the device can print in a single print job."
  remarks: "This property corresponds to the [Print Schema](http://go.microsoft.com/fwlink/?LinkId=186397)&quot;s `JobCopiesAllDocuments` keyword, not the `DocumentCopiesAllPages` keyword, or the `PageCopies` keyword. If the printer can print unlimited copies, the property value is 9999."
  syntax:
    content: public Nullable<int> MaxCopyCount { get; }
    return:
      type: System.Nullable{System.Int32}
      description: "A nullable <xref:System.Int32> value that specifies the maximum number of copies that a printer can print. Returns <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the device driver does not report a maximum."
  overload: System.Printing.PrintCapabilities.MaxCopyCount*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintCapabilities.OrientedPageMediaHeight
  id: OrientedPageMediaHeight
  parent: System.Printing.PrintCapabilities
  langs:
  - csharp
  name: OrientedPageMediaHeight
  nameWithType: PrintCapabilities.OrientedPageMediaHeight
  fullName: System.Printing.PrintCapabilities.OrientedPageMediaHeight
  type: Property
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "Gets a value indicating the height of the imageable area on a page, where height means the vertical dimension relative to the page&quot;s orientation."
  remarks: "Most printers must leave an unprinted area along the edges of a page to prevent toner from getting on the parts of the printer that move the sheets.       This property corresponds to the **ImageableSizeHeight** property of the [Print Schema](http://go.microsoft.com/fwlink/?LinkId=186397)&quot;s `PageImageableSize` keyword."
  syntax:
    content: public Nullable<double> OrientedPageMediaHeight { get; }
    return:
      type: System.Nullable{System.Double}
      description: "A nullable <xref:System.Double> value indicating the height, in pixels, which are 1/96 inch increments, of the area on a page that the printer is capable of printing."
  overload: System.Printing.PrintCapabilities.OrientedPageMediaHeight*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintCapabilities.OrientedPageMediaWidth
  id: OrientedPageMediaWidth
  parent: System.Printing.PrintCapabilities
  langs:
  - csharp
  name: OrientedPageMediaWidth
  nameWithType: PrintCapabilities.OrientedPageMediaWidth
  fullName: System.Printing.PrintCapabilities.OrientedPageMediaWidth
  type: Property
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "Gets a value indicating the width of the imageable area on a page, where width means the horizontal dimension relative to the page&quot;s orientation."
  remarks: "Most printers must leave an unprinted area along the edges of a page to prevent toner from getting on the parts of the printer that move the sheets.       This property corresponds to the `ImageableSizeWidth` property of the [Print Schema](http://go.microsoft.com/fwlink/?LinkId=186397)&quot;s `PageImageableSize` keyword."
  syntax:
    content: public Nullable<double> OrientedPageMediaWidth { get; }
    return:
      type: System.Nullable{System.Double}
      description: "A nullable <xref:System.Double> value indicating the width, in pixels, which are 1/96 inch increments, of the area on a page that the printer is capable of printing."
  overload: System.Printing.PrintCapabilities.OrientedPageMediaWidth*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintCapabilities.OutputColorCapability
  id: OutputColorCapability
  parent: System.Printing.PrintCapabilities
  langs:
  - csharp
  name: OutputColorCapability
  nameWithType: PrintCapabilities.OutputColorCapability
  fullName: System.Printing.PrintCapabilities.OutputColorCapability
  type: Property
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "Gets a collection of values that specify the ways in which a printer can print content with color and shades of gray."
  remarks: "If the printer does not support output color options, the collection is empty.       This property corresponds to the [Print Schema](http://go.microsoft.com/fwlink/?LinkId=186397)&quot;s `PageOutputColor` keyword."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Printing.OutputColor> OutputColorCapability { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Printing.OutputColor}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of <xref href=&quot;System.Printing.OutputColor&quot;></xref> values."
  overload: System.Printing.PrintCapabilities.OutputColorCapability*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintCapabilities.OutputQualityCapability
  id: OutputQualityCapability
  parent: System.Printing.PrintCapabilities
  langs:
  - csharp
  name: OutputQualityCapability
  nameWithType: PrintCapabilities.OutputQualityCapability
  fullName: System.Printing.PrintCapabilities.OutputQualityCapability
  type: Property
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "Gets a collection of values that indicate the types of output quality the printer supports."
  remarks: "For example, the <xref:System.Printing.OutputQuality> enumeration has values for <xref:System.Printing.OutputQuality>, <xref:System.Printing.OutputQuality>, and <xref:System.Printing.OutputQuality> quality, among others.       If the printer does not support output quality selection, the collection is empty.       This property corresponds to the [Print Schema](http://go.microsoft.com/fwlink/?LinkId=186397)&quot;s `PageOutputQuality` keyword."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Printing.OutputQuality> OutputQualityCapability { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Printing.OutputQuality}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of <xref href=&quot;System.Printing.OutputQuality&quot;></xref> values."
  overload: System.Printing.PrintCapabilities.OutputQualityCapability*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintCapabilities.PageBorderlessCapability
  id: PageBorderlessCapability
  parent: System.Printing.PrintCapabilities
  langs:
  - csharp
  name: PageBorderlessCapability
  nameWithType: PrintCapabilities.PageBorderlessCapability
  fullName: System.Printing.PrintCapabilities.PageBorderlessCapability
  type: Property
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "Gets a collection of values that indicate whether the printer can print up to the edge of the media."
  remarks: "Most laser and inkjet printers do not support borderless printing. They must allow an unprinted margin to prevent toner from getting on the parts of the printer that move the paper. Many photographic printers, however, do support borderless printing.       If the printer does not support borderless printing, the collection is empty.       This property corresponds to the [Print Schema](http://go.microsoft.com/fwlink/?LinkId=186397)&quot;s `PageBorderless` keyword."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Printing.PageBorderless> PageBorderlessCapability { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Printing.PageBorderless}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of <xref href=&quot;System.Printing.PageBorderless&quot;></xref> values."
  overload: System.Printing.PrintCapabilities.PageBorderlessCapability*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintCapabilities.PageImageableArea
  id: PageImageableArea
  parent: System.Printing.PrintCapabilities
  langs:
  - csharp
  name: PageImageableArea
  nameWithType: PrintCapabilities.PageImageableArea
  fullName: System.Printing.PrintCapabilities.PageImageableArea
  type: Property
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "Gets an object that represents the area of a page that the printer can use."
  remarks: "Most laser and inkjet printers must allow an unprinted margin around the edges of a page to prevent toner from getting on the parts of the printer that move the sheets. Many photographic printers, however, can use the entire page to print an image."
  syntax:
    content: public System.Printing.PageImageableArea PageImageableArea { get; }
    return:
      type: System.Printing.PageImageableArea
      description: "A <xref href=&quot;System.Printing.PageImageableArea&quot;></xref> object that specifies the distance, in pixels (units of 1/96 inch), of the upper-left corner of the imageable area. The vertical distance is measured from the top edge of the paper and the horizontal distance is measured from the left edge. The return value also specifies the width and height of the imageable area. If the printer driver does not report an imageable area, then this property is null."
  overload: System.Printing.PrintCapabilities.PageImageableArea*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintCapabilities.PageMediaSizeCapability
  id: PageMediaSizeCapability
  parent: System.Printing.PrintCapabilities
  langs:
  - csharp
  name: PageMediaSizeCapability
  nameWithType: PrintCapabilities.PageMediaSizeCapability
  fullName: System.Printing.PrintCapabilities.PageMediaSizeCapability
  type: Property
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "Gets a collection of <xref href=&quot;System.Printing.PageMediaSize&quot;></xref> objects that identify the paper and media sizes that a printer supports."
  remarks: "Most of the properties of <xref:System.Printing.PrintCapabilities> that have &quot;Capability&quot; at the end of the name, such as <xref:System.Printing.PrintCapabilities.CollationCapability%2A>, are collections of values of an enumerated type. But PageMediaSizeCapability and <xref:System.Printing.PrintCapabilities.PageResolutionCapability%2A> are collections of objects. For the latter two properties, you cannot test for the presence of a particular value by using the **Contains** method of <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>. This is because, with reference types, the method returns `true` only when the memory address of the object passed to it is the same as the address of an object in the collection; that is, they are the same object. Since this will not usually be the case, the method will nearly always return `false` even if there is an object in the collection with exactly the same values in all its properties as the object passed to the **Contains** method of  <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>. To determine the contents of the PageMediaSizeCapability, you must enumerate through each of its members, comparing them with the desired value.       If the printer does not support media size selection, the collection is empty.       This property corresponds to the [Print Schema](http://go.microsoft.com/fwlink/?LinkId=186397)&quot;s `PageMediaSize` keyword."
  example:
  - "The following code example shows how to search for a particular value in the PageMediaSizeCapability.  \n  \n```  \nforeach (PageMediaSize mediaSize in pc.PageMediaSizeCapability)  \n    {  \n        if (mediaSize.PageMediaSizeName == PageMediaSizeName.ISOA4)  \n        {  \n            Console.WriteLine(\"A4 size is supported\");  \n            break;  \n        }  \n    }  \n```"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Printing.PageMediaSize> PageMediaSizeCapability { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Printing.PageMediaSize}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of <xref href=&quot;System.Printing.PageMediaSize&quot;></xref> objects."
  overload: System.Printing.PrintCapabilities.PageMediaSizeCapability*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintCapabilities.PageMediaTypeCapability
  id: PageMediaTypeCapability
  parent: System.Printing.PrintCapabilities
  langs:
  - csharp
  name: PageMediaTypeCapability
  nameWithType: PrintCapabilities.PageMediaTypeCapability
  fullName: System.Printing.PrintCapabilities.PageMediaTypeCapability
  type: Property
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "Gets a collection of values that identify what types of paper and other media a printer supports."
  remarks: "If the printer does not support media type selection, the collection is empty.       This property corresponds to the [Print Schema](http://go.microsoft.com/fwlink/?LinkId=186397)&quot;s `PageMediaType` keyword."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Printing.PageMediaType> PageMediaTypeCapability { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Printing.PageMediaType}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of <xref href=&quot;System.Printing.PageMediaType&quot;></xref> values specifying the print media, such as card stock, label, plain, or photographic."
  overload: System.Printing.PrintCapabilities.PageMediaTypeCapability*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintCapabilities.PageOrderCapability
  id: PageOrderCapability
  parent: System.Printing.PrintCapabilities
  langs:
  - csharp
  name: PageOrderCapability
  nameWithType: PrintCapabilities.PageOrderCapability
  fullName: System.Printing.PrintCapabilities.PageOrderCapability
  type: Property
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "Gets a collection of values that indicate whether a printer is capable of printing multiple-page documents from front-to-back, back-to-front, or both ways."
  remarks: "If the printer does not support page order selection, the collection is empty.       This property corresponds to the [Print Schema](http://go.microsoft.com/fwlink/?LinkId=186397)&quot;s `JobPageOrder` keyword."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Printing.PageOrder> PageOrderCapability { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Printing.PageOrder}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of <xref href=&quot;System.Printing.PageOrder&quot;></xref> values."
  overload: System.Printing.PrintCapabilities.PageOrderCapability*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintCapabilities.PageOrientationCapability
  id: PageOrientationCapability
  parent: System.Printing.PrintCapabilities
  langs:
  - csharp
  name: PageOrientationCapability
  nameWithType: PrintCapabilities.PageOrientationCapability
  fullName: System.Printing.PrintCapabilities.PageOrientationCapability
  type: Property
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "Gets a collection of values that identify what types of page orientation a printer supports."
  remarks: "If the printer does not support page orientation selection, the collection is empty.       This property corresponds to the [Print Schema](http://go.microsoft.com/fwlink/?LinkId=186397)&quot;s `PageOrientation` keyword."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Printing.PageOrientation> PageOrientationCapability { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Printing.PageOrientation}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of <xref href=&quot;System.Printing.PageOrientation&quot;></xref> values."
  overload: System.Printing.PrintCapabilities.PageOrientationCapability*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintCapabilities.PageResolutionCapability
  id: PageResolutionCapability
  parent: System.Printing.PrintCapabilities
  langs:
  - csharp
  name: PageResolutionCapability
  nameWithType: PrintCapabilities.PageResolutionCapability
  fullName: System.Printing.PrintCapabilities.PageResolutionCapability
  type: Property
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "Gets a collection of <xref href=&quot;System.Printing.PageResolution&quot;></xref> objects that identify what levels of page resolution the printer supports."
  remarks: "Most of the properties of <xref:System.Printing.PrintCapabilities> that have &quot;Capability&quot; at the end of the name, such as <xref:System.Printing.PrintCapabilities.CollationCapability%2A>, are collections of values of an enumerated type. But <xref:System.Printing.PrintCapabilities.PageMediaSizeCapability%2A> and PageResolutionCapability are collections of objects. For the latter two properties, you cannot test for the presence of a particular value by using the **Contains** method of <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>. This is because, with reference types, the method returns `true` only when the memory address of the object passed to it is the same as the address of an object in the collection; that is, they are the same object. Since this will not usually be the case, the method will nearly always return `false` even if there is an object in the collection with exactly the same values in all its properties as the object passed to the **Contains** method of <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>. To determine the contents of the PageResolutionCapability, you must enumerate through each of its members, comparing them with the desired value. See the example.       The <xref:System.Printing.PageResolution> class has properties in which you can specify the dots-per-inch for the X and Y dimensions and a property where you can give a qualitative expression to the resolution.       If the printer does not support page resolution choices, the collection is empty.       This property corresponds to the [Print Schema](http://go.microsoft.com/fwlink/?LinkId=186397)&quot;s `PageResolution` keyword."
  example:
  - "The following code example shows how to search for a particular value in the PageResolutionCapability.  \n  \n```  \nforeach (PageResolution pageRes in pc.PageResolutionCapability)  \n    {  \n        if (pageRes.QualitativeResolution == PageQualitativeResolution.High)  \n        {  \n            Console.WriteLine(\"High quality is supported\");  \n            break;  \n        }  \n    }  \n```"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Printing.PageResolution> PageResolutionCapability { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Printing.PageResolution}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of <xref href=&quot;System.Printing.PageResolution&quot;></xref> objects. Each value represents a page resolution as a qualitative value, a dots-per-inch value, or both."
  overload: System.Printing.PrintCapabilities.PageResolutionCapability*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintCapabilities.PageScalingFactorRange
  id: PageScalingFactorRange
  parent: System.Printing.PrintCapabilities
  langs:
  - csharp
  name: PageScalingFactorRange
  nameWithType: PrintCapabilities.PageScalingFactorRange
  fullName: System.Printing.PrintCapabilities.PageScalingFactorRange
  type: Property
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "Gets the maximum and minimum percentages by which a printer can enlarge or reduce the print image on a page."
  remarks: "This PageScalingFactorRange property generally represents the [Print Schema](http://go.microsoft.com/fwlink/?LinkId=186397)&quot;s `PageScaling` keyword. But there are some complexities as follows.      -   If the PrintCapabilities document does not have a `PageScaling` element, or it has one, but neither its **CustomSquare** nor **Custom** options are defined; then the PageScalingFactorRange property is null.      -   In all other cases, the property&quot;s behavior is as follows.           The <xref:System.Printing.PageScalingFactorRange.MinimumScale%2A> property of the PageScalingFactorRange property&quot;s <xref:System.Printing.PageScalingFactorRange> object is the smallest of the following values.          -   The **MinValue** property of the `PageScalingScaleWidth` datatype that provides the value of the **Custom** option’s **ScaleWidth** `ScoredProperty`.          -   The **MinValue** property of the `PageScalingScaleHeight` datatype that provides the value of the **Custom** option’s **ScaleHeight** `ScoredProperty`.          -   The **MinValue** property of the `PageScalingScale` datatype that provides the value of the **CustomSquare** option’s **Scale** `ScoredProperty`.           The <xref:System.Printing.PageScalingFactorRange.MaximumScale%2A> property of the PageScalingFactorRange property&quot;s <xref:System.Printing.PageScalingFactorRange> object is the largest of the following values.          -   The **MaxValue** property of the `PageScalingScaleWidth` datatype that provides the value of the **Custom** option’s **ScaleWidth** `ScoredProperty`.          -   The **MaxValue** property of the `PageScalingScaleHeight` datatype that provides the value of the **Custom** option’s **ScaleHeight** `ScoredProperty`.          -   The **MaxValue** property of the `PageScalingScale` datatype that provides the value of the **CustomSquare** option’s **Scale** `ScoredProperty`."
  syntax:
    content: public System.Printing.PageScalingFactorRange PageScalingFactorRange { get; }
    return:
      type: System.Printing.PageScalingFactorRange
      description: "A <xref href=&quot;System.Printing.PageScalingFactorRange&quot;></xref> object with <xref:System.Printing.PageScalingFactorRange.MaximumScale*> and <xref:System.Printing.PageScalingFactorRange.MinimumScale*> properties holding <xref:System.Int32> values that represent percentages."
  overload: System.Printing.PrintCapabilities.PageScalingFactorRange*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintCapabilities.PagesPerSheetCapability
  id: PagesPerSheetCapability
  parent: System.Printing.PrintCapabilities
  langs:
  - csharp
  name: PagesPerSheetCapability
  nameWithType: PrintCapabilities.PagesPerSheetCapability
  fullName: System.Printing.PrintCapabilities.PagesPerSheetCapability
  type: Property
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "Gets a collection of integers, each identifying the number of pages that a user can choose to print on a single side of a sheet of paper."
  remarks: "Most printers support only a limited number of specific options, such as 1, 2, 4, 6, 9, and 16 pages per side.       If the printer does not support multiple pages per sheet, the collection is empty.       This property corresponds to the `PagesPerSheet ScoredProperty` of the [Print Schema](http://go.microsoft.com/fwlink/?LinkId=186397)&quot;s `JobNUpAllDocumentsContiguously` keyword, not the `DocumentNUp` keyword."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<int> PagesPerSheetCapability { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Int32}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of <xref:System.Int32> values representing the options that a printer supports for printing more than one page per side."
  overload: System.Printing.PrintCapabilities.PagesPerSheetCapability*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintCapabilities.PagesPerSheetDirectionCapability
  id: PagesPerSheetDirectionCapability
  parent: System.Printing.PrintCapabilities
  langs:
  - csharp
  name: PagesPerSheetDirectionCapability
  nameWithType: PrintCapabilities.PagesPerSheetDirectionCapability
  fullName: System.Printing.PrintCapabilities.PagesPerSheetDirectionCapability
  type: Property
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "Gets a collection of values that identify what patterns a printer supports for presenting multiple pages on a single side of a sheet of paper."
  remarks: "For example, some printers can present pages in left-to-right rows with the rows stacked top-to-bottom. Another pattern, which some printers support, is right-to-left rows with the rows stacked bottom-to-top.       If the printer does not support multiple pages per sheet, the collection is empty.       This property corresponds to the `PresentationDirection` subfeature of the [Print Schema](http://go.microsoft.com/fwlink/?LinkId=186397)&quot;s `JobNUpAllDocumentsContiguously` keyword, not the `DocumentNUp` keyword."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Printing.PagesPerSheetDirection> PagesPerSheetDirectionCapability { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Printing.PagesPerSheetDirection}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of <xref href=&quot;System.Printing.PagesPerSheetDirection&quot;></xref> values."
  overload: System.Printing.PrintCapabilities.PagesPerSheetDirectionCapability*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintCapabilities.PhotoPrintingIntentCapability
  id: PhotoPrintingIntentCapability
  parent: System.Printing.PrintCapabilities
  langs:
  - csharp
  name: PhotoPrintingIntentCapability
  nameWithType: PrintCapabilities.PhotoPrintingIntentCapability
  fullName: System.Printing.PrintCapabilities.PhotoPrintingIntentCapability
  type: Property
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "Gets a collection of values that identify the quality options the printer supports for printing photographs."
  remarks: "If the printer does not support options for photographic quality, the collection is empty.       This property corresponds to the [Print Schema](http://go.microsoft.com/fwlink/?LinkId=186397)&quot;s `PagePhotoPrintingIntent`."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Printing.PhotoPrintingIntent> PhotoPrintingIntentCapability { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Printing.PhotoPrintingIntent}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of <xref href=&quot;System.Printing.PhotoPrintingIntent&quot;></xref> values."
  overload: System.Printing.PrintCapabilities.PhotoPrintingIntentCapability*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintCapabilities.StaplingCapability
  id: StaplingCapability
  parent: System.Printing.PrintCapabilities
  langs:
  - csharp
  name: StaplingCapability
  nameWithType: PrintCapabilities.StaplingCapability
  fullName: System.Printing.PrintCapabilities.StaplingCapability
  type: Property
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "Gets a collection of values that identify the types of automatic stapling that a printer supports."
  remarks: "If the printer does not support stapling, the collection is empty.       This property corresponds to the [Print Schema](http://go.microsoft.com/fwlink/?LinkId=186397)&quot;s `JobStapleAllDocuments` keyword, not the `DocumentStaple` keyword."
  example:
  - "The following example shows how to use this property to determine the capabilities of a specific printer and how to configure a print job to take advantage of them.  \n  \n [!code-cs[XpsCreate#PrinterCapabilities](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#printercapabilities)]\n [!code-cpp[XpsCreate#PrinterCapabilities](~/add/codesnippet/cpp/xpscreate/XpsCreate.cpp#printercapabilities)]\n [!code-vb[XpsCreate#PrinterCapabilities](~/add/codesnippet/visualbasic/xpscreate/xpscreate.vb#printercapabilities)]"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Printing.Stapling> StaplingCapability { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Printing.Stapling}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of <xref href=&quot;System.Printing.Stapling&quot;></xref> values."
  overload: System.Printing.PrintCapabilities.StaplingCapability*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintCapabilities.TrueTypeFontModeCapability
  id: TrueTypeFontModeCapability
  parent: System.Printing.PrintCapabilities
  langs:
  - csharp
  name: TrueTypeFontModeCapability
  nameWithType: PrintCapabilities.TrueTypeFontModeCapability
  fullName: System.Printing.PrintCapabilities.TrueTypeFontModeCapability
  type: Property
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "Gets a collection of values that identify the methods that a printer supports for handling TrueType fonts."
  remarks: "If the printer does not support any method of special handling for TrueType fonts, the collection is empty.       This property corresponds to the [Print Schema](http://go.microsoft.com/fwlink/?LinkId=186397)&quot;s `PageTrueTypeFontMode` keyword."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Printing.TrueTypeFontMode> TrueTypeFontModeCapability { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Printing.TrueTypeFontMode}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of <xref href=&quot;System.Printing.TrueTypeFontMode&quot;></xref> values."
  overload: System.Printing.PrintCapabilities.TrueTypeFontModeCapability*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.Printing.PrintCapabilities.#ctor(System.IO.Stream)
  parent: System.Printing.PrintCapabilities
  isExternal: false
  name: PrintCapabilities(Stream)
  nameWithType: PrintCapabilities.PrintCapabilities(Stream)
  fullName: System.Printing.PrintCapabilities.PrintCapabilities(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Printing.PrintCapabilities.CollationCapability
  parent: System.Printing.PrintCapabilities
  isExternal: false
  name: CollationCapability
  nameWithType: PrintCapabilities.CollationCapability
  fullName: System.Printing.PrintCapabilities.CollationCapability
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Printing.Collation}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<Collation>
  nameWithType: ReadOnlyCollection<Collation>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Printing.Collation>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Printing.Collation>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Printing.Collation
    name: Collation
    nameWithType: Collation
    fullName: Collation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Printing.PrintCapabilities.DeviceFontSubstitutionCapability
  parent: System.Printing.PrintCapabilities
  isExternal: false
  name: DeviceFontSubstitutionCapability
  nameWithType: PrintCapabilities.DeviceFontSubstitutionCapability
  fullName: System.Printing.PrintCapabilities.DeviceFontSubstitutionCapability
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Printing.DeviceFontSubstitution}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<DeviceFontSubstitution>
  nameWithType: ReadOnlyCollection<DeviceFontSubstitution>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Printing.DeviceFontSubstitution>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Printing.DeviceFontSubstitution>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Printing.DeviceFontSubstitution
    name: DeviceFontSubstitution
    nameWithType: DeviceFontSubstitution
    fullName: DeviceFontSubstitution
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Printing.PrintCapabilities.DuplexingCapability
  parent: System.Printing.PrintCapabilities
  isExternal: false
  name: DuplexingCapability
  nameWithType: PrintCapabilities.DuplexingCapability
  fullName: System.Printing.PrintCapabilities.DuplexingCapability
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Printing.Duplexing}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<Duplexing>
  nameWithType: ReadOnlyCollection<Duplexing>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Printing.Duplexing>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Printing.Duplexing>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Printing.Duplexing
    name: Duplexing
    nameWithType: Duplexing
    fullName: Duplexing
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Printing.PrintCapabilities.InputBinCapability
  parent: System.Printing.PrintCapabilities
  isExternal: false
  name: InputBinCapability
  nameWithType: PrintCapabilities.InputBinCapability
  fullName: System.Printing.PrintCapabilities.InputBinCapability
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Printing.InputBin}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<InputBin>
  nameWithType: ReadOnlyCollection<InputBin>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Printing.InputBin>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Printing.InputBin>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Printing.InputBin
    name: InputBin
    nameWithType: InputBin
    fullName: InputBin
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Printing.PrintCapabilities.MaxCopyCount
  parent: System.Printing.PrintCapabilities
  isExternal: false
  name: MaxCopyCount
  nameWithType: PrintCapabilities.MaxCopyCount
  fullName: System.Printing.PrintCapabilities.MaxCopyCount
- uid: System.Nullable{System.Int32}
  parent: System
  isExternal: true
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Int32>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Printing.PrintCapabilities.OrientedPageMediaHeight
  parent: System.Printing.PrintCapabilities
  isExternal: false
  name: OrientedPageMediaHeight
  nameWithType: PrintCapabilities.OrientedPageMediaHeight
  fullName: System.Printing.PrintCapabilities.OrientedPageMediaHeight
- uid: System.Nullable{System.Double}
  parent: System
  isExternal: true
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Double>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: Double
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Printing.PrintCapabilities.OrientedPageMediaWidth
  parent: System.Printing.PrintCapabilities
  isExternal: false
  name: OrientedPageMediaWidth
  nameWithType: PrintCapabilities.OrientedPageMediaWidth
  fullName: System.Printing.PrintCapabilities.OrientedPageMediaWidth
- uid: System.Printing.PrintCapabilities.OutputColorCapability
  parent: System.Printing.PrintCapabilities
  isExternal: false
  name: OutputColorCapability
  nameWithType: PrintCapabilities.OutputColorCapability
  fullName: System.Printing.PrintCapabilities.OutputColorCapability
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Printing.OutputColor}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<OutputColor>
  nameWithType: ReadOnlyCollection<OutputColor>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Printing.OutputColor>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Printing.OutputColor>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Printing.OutputColor
    name: OutputColor
    nameWithType: OutputColor
    fullName: OutputColor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Printing.PrintCapabilities.OutputQualityCapability
  parent: System.Printing.PrintCapabilities
  isExternal: false
  name: OutputQualityCapability
  nameWithType: PrintCapabilities.OutputQualityCapability
  fullName: System.Printing.PrintCapabilities.OutputQualityCapability
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Printing.OutputQuality}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<OutputQuality>
  nameWithType: ReadOnlyCollection<OutputQuality>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Printing.OutputQuality>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Printing.OutputQuality>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Printing.OutputQuality
    name: OutputQuality
    nameWithType: OutputQuality
    fullName: OutputQuality
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Printing.PrintCapabilities.PageBorderlessCapability
  parent: System.Printing.PrintCapabilities
  isExternal: false
  name: PageBorderlessCapability
  nameWithType: PrintCapabilities.PageBorderlessCapability
  fullName: System.Printing.PrintCapabilities.PageBorderlessCapability
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Printing.PageBorderless}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<PageBorderless>
  nameWithType: ReadOnlyCollection<PageBorderless>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Printing.PageBorderless>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Printing.PageBorderless>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Printing.PageBorderless
    name: PageBorderless
    nameWithType: PageBorderless
    fullName: PageBorderless
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Printing.PrintCapabilities.PageImageableArea
  parent: System.Printing.PrintCapabilities
  isExternal: false
  name: PageImageableArea
  nameWithType: PrintCapabilities.PageImageableArea
  fullName: System.Printing.PrintCapabilities.PageImageableArea
- uid: System.Printing.PageImageableArea
  parent: System.Printing
  isExternal: false
  name: PageImageableArea
  nameWithType: PageImageableArea
  fullName: System.Printing.PageImageableArea
- uid: System.Printing.PrintCapabilities.PageMediaSizeCapability
  parent: System.Printing.PrintCapabilities
  isExternal: false
  name: PageMediaSizeCapability
  nameWithType: PrintCapabilities.PageMediaSizeCapability
  fullName: System.Printing.PrintCapabilities.PageMediaSizeCapability
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Printing.PageMediaSize}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<PageMediaSize>
  nameWithType: ReadOnlyCollection<PageMediaSize>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Printing.PageMediaSize>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Printing.PageMediaSize>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Printing.PageMediaSize
    name: PageMediaSize
    nameWithType: PageMediaSize
    fullName: PageMediaSize
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Printing.PrintCapabilities.PageMediaTypeCapability
  parent: System.Printing.PrintCapabilities
  isExternal: false
  name: PageMediaTypeCapability
  nameWithType: PrintCapabilities.PageMediaTypeCapability
  fullName: System.Printing.PrintCapabilities.PageMediaTypeCapability
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Printing.PageMediaType}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<PageMediaType>
  nameWithType: ReadOnlyCollection<PageMediaType>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Printing.PageMediaType>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Printing.PageMediaType>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Printing.PageMediaType
    name: PageMediaType
    nameWithType: PageMediaType
    fullName: PageMediaType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Printing.PrintCapabilities.PageOrderCapability
  parent: System.Printing.PrintCapabilities
  isExternal: false
  name: PageOrderCapability
  nameWithType: PrintCapabilities.PageOrderCapability
  fullName: System.Printing.PrintCapabilities.PageOrderCapability
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Printing.PageOrder}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<PageOrder>
  nameWithType: ReadOnlyCollection<PageOrder>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Printing.PageOrder>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Printing.PageOrder>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Printing.PageOrder
    name: PageOrder
    nameWithType: PageOrder
    fullName: PageOrder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Printing.PrintCapabilities.PageOrientationCapability
  parent: System.Printing.PrintCapabilities
  isExternal: false
  name: PageOrientationCapability
  nameWithType: PrintCapabilities.PageOrientationCapability
  fullName: System.Printing.PrintCapabilities.PageOrientationCapability
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Printing.PageOrientation}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<PageOrientation>
  nameWithType: ReadOnlyCollection<PageOrientation>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Printing.PageOrientation>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Printing.PageOrientation>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Printing.PageOrientation
    name: PageOrientation
    nameWithType: PageOrientation
    fullName: PageOrientation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Printing.PrintCapabilities.PageResolutionCapability
  parent: System.Printing.PrintCapabilities
  isExternal: false
  name: PageResolutionCapability
  nameWithType: PrintCapabilities.PageResolutionCapability
  fullName: System.Printing.PrintCapabilities.PageResolutionCapability
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Printing.PageResolution}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<PageResolution>
  nameWithType: ReadOnlyCollection<PageResolution>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Printing.PageResolution>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Printing.PageResolution>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Printing.PageResolution
    name: PageResolution
    nameWithType: PageResolution
    fullName: PageResolution
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Printing.PrintCapabilities.PageScalingFactorRange
  parent: System.Printing.PrintCapabilities
  isExternal: false
  name: PageScalingFactorRange
  nameWithType: PrintCapabilities.PageScalingFactorRange
  fullName: System.Printing.PrintCapabilities.PageScalingFactorRange
- uid: System.Printing.PageScalingFactorRange
  parent: System.Printing
  isExternal: false
  name: PageScalingFactorRange
  nameWithType: PageScalingFactorRange
  fullName: System.Printing.PageScalingFactorRange
- uid: System.Printing.PrintCapabilities.PagesPerSheetCapability
  parent: System.Printing.PrintCapabilities
  isExternal: false
  name: PagesPerSheetCapability
  nameWithType: PrintCapabilities.PagesPerSheetCapability
  fullName: System.Printing.PrintCapabilities.PagesPerSheetCapability
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Int32}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<Int32>
  nameWithType: ReadOnlyCollection<Int32>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Int32>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Int32>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Printing.PrintCapabilities.PagesPerSheetDirectionCapability
  parent: System.Printing.PrintCapabilities
  isExternal: false
  name: PagesPerSheetDirectionCapability
  nameWithType: PrintCapabilities.PagesPerSheetDirectionCapability
  fullName: System.Printing.PrintCapabilities.PagesPerSheetDirectionCapability
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Printing.PagesPerSheetDirection}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<PagesPerSheetDirection>
  nameWithType: ReadOnlyCollection<PagesPerSheetDirection>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Printing.PagesPerSheetDirection>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Printing.PagesPerSheetDirection>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Printing.PagesPerSheetDirection
    name: PagesPerSheetDirection
    nameWithType: PagesPerSheetDirection
    fullName: PagesPerSheetDirection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Printing.PrintCapabilities.PhotoPrintingIntentCapability
  parent: System.Printing.PrintCapabilities
  isExternal: false
  name: PhotoPrintingIntentCapability
  nameWithType: PrintCapabilities.PhotoPrintingIntentCapability
  fullName: System.Printing.PrintCapabilities.PhotoPrintingIntentCapability
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Printing.PhotoPrintingIntent}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<PhotoPrintingIntent>
  nameWithType: ReadOnlyCollection<PhotoPrintingIntent>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Printing.PhotoPrintingIntent>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Printing.PhotoPrintingIntent>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Printing.PhotoPrintingIntent
    name: PhotoPrintingIntent
    nameWithType: PhotoPrintingIntent
    fullName: PhotoPrintingIntent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Printing.PrintCapabilities.StaplingCapability
  parent: System.Printing.PrintCapabilities
  isExternal: false
  name: StaplingCapability
  nameWithType: PrintCapabilities.StaplingCapability
  fullName: System.Printing.PrintCapabilities.StaplingCapability
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Printing.Stapling}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<Stapling>
  nameWithType: ReadOnlyCollection<Stapling>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Printing.Stapling>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Printing.Stapling>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Printing.Stapling
    name: Stapling
    nameWithType: Stapling
    fullName: Stapling
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Printing.PrintCapabilities.TrueTypeFontModeCapability
  parent: System.Printing.PrintCapabilities
  isExternal: false
  name: TrueTypeFontModeCapability
  nameWithType: PrintCapabilities.TrueTypeFontModeCapability
  fullName: System.Printing.PrintCapabilities.TrueTypeFontModeCapability
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Printing.TrueTypeFontMode}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<TrueTypeFontMode>
  nameWithType: ReadOnlyCollection<TrueTypeFontMode>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Printing.TrueTypeFontMode>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Printing.TrueTypeFontMode>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Printing.TrueTypeFontMode
    name: TrueTypeFontMode
    nameWithType: TrueTypeFontMode
    fullName: TrueTypeFontMode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Printing.PrintCapabilities.#ctor*
  parent: System.Printing.PrintCapabilities
  isExternal: false
  name: PrintCapabilities
  nameWithType: PrintCapabilities.PrintCapabilities
- uid: System.Printing.PrintCapabilities.CollationCapability*
  parent: System.Printing.PrintCapabilities
  isExternal: false
  name: CollationCapability
  nameWithType: PrintCapabilities.CollationCapability
- uid: System.Printing.PrintCapabilities.DeviceFontSubstitutionCapability*
  parent: System.Printing.PrintCapabilities
  isExternal: false
  name: DeviceFontSubstitutionCapability
  nameWithType: PrintCapabilities.DeviceFontSubstitutionCapability
- uid: System.Printing.PrintCapabilities.DuplexingCapability*
  parent: System.Printing.PrintCapabilities
  isExternal: false
  name: DuplexingCapability
  nameWithType: PrintCapabilities.DuplexingCapability
- uid: System.Printing.PrintCapabilities.InputBinCapability*
  parent: System.Printing.PrintCapabilities
  isExternal: false
  name: InputBinCapability
  nameWithType: PrintCapabilities.InputBinCapability
- uid: System.Printing.PrintCapabilities.MaxCopyCount*
  parent: System.Printing.PrintCapabilities
  isExternal: false
  name: MaxCopyCount
  nameWithType: PrintCapabilities.MaxCopyCount
- uid: System.Printing.PrintCapabilities.OrientedPageMediaHeight*
  parent: System.Printing.PrintCapabilities
  isExternal: false
  name: OrientedPageMediaHeight
  nameWithType: PrintCapabilities.OrientedPageMediaHeight
- uid: System.Printing.PrintCapabilities.OrientedPageMediaWidth*
  parent: System.Printing.PrintCapabilities
  isExternal: false
  name: OrientedPageMediaWidth
  nameWithType: PrintCapabilities.OrientedPageMediaWidth
- uid: System.Printing.PrintCapabilities.OutputColorCapability*
  parent: System.Printing.PrintCapabilities
  isExternal: false
  name: OutputColorCapability
  nameWithType: PrintCapabilities.OutputColorCapability
- uid: System.Printing.PrintCapabilities.OutputQualityCapability*
  parent: System.Printing.PrintCapabilities
  isExternal: false
  name: OutputQualityCapability
  nameWithType: PrintCapabilities.OutputQualityCapability
- uid: System.Printing.PrintCapabilities.PageBorderlessCapability*
  parent: System.Printing.PrintCapabilities
  isExternal: false
  name: PageBorderlessCapability
  nameWithType: PrintCapabilities.PageBorderlessCapability
- uid: System.Printing.PrintCapabilities.PageImageableArea*
  parent: System.Printing.PrintCapabilities
  isExternal: false
  name: PageImageableArea
  nameWithType: PrintCapabilities.PageImageableArea
- uid: System.Printing.PrintCapabilities.PageMediaSizeCapability*
  parent: System.Printing.PrintCapabilities
  isExternal: false
  name: PageMediaSizeCapability
  nameWithType: PrintCapabilities.PageMediaSizeCapability
- uid: System.Printing.PrintCapabilities.PageMediaTypeCapability*
  parent: System.Printing.PrintCapabilities
  isExternal: false
  name: PageMediaTypeCapability
  nameWithType: PrintCapabilities.PageMediaTypeCapability
- uid: System.Printing.PrintCapabilities.PageOrderCapability*
  parent: System.Printing.PrintCapabilities
  isExternal: false
  name: PageOrderCapability
  nameWithType: PrintCapabilities.PageOrderCapability
- uid: System.Printing.PrintCapabilities.PageOrientationCapability*
  parent: System.Printing.PrintCapabilities
  isExternal: false
  name: PageOrientationCapability
  nameWithType: PrintCapabilities.PageOrientationCapability
- uid: System.Printing.PrintCapabilities.PageResolutionCapability*
  parent: System.Printing.PrintCapabilities
  isExternal: false
  name: PageResolutionCapability
  nameWithType: PrintCapabilities.PageResolutionCapability
- uid: System.Printing.PrintCapabilities.PageScalingFactorRange*
  parent: System.Printing.PrintCapabilities
  isExternal: false
  name: PageScalingFactorRange
  nameWithType: PrintCapabilities.PageScalingFactorRange
- uid: System.Printing.PrintCapabilities.PagesPerSheetCapability*
  parent: System.Printing.PrintCapabilities
  isExternal: false
  name: PagesPerSheetCapability
  nameWithType: PrintCapabilities.PagesPerSheetCapability
- uid: System.Printing.PrintCapabilities.PagesPerSheetDirectionCapability*
  parent: System.Printing.PrintCapabilities
  isExternal: false
  name: PagesPerSheetDirectionCapability
  nameWithType: PrintCapabilities.PagesPerSheetDirectionCapability
- uid: System.Printing.PrintCapabilities.PhotoPrintingIntentCapability*
  parent: System.Printing.PrintCapabilities
  isExternal: false
  name: PhotoPrintingIntentCapability
  nameWithType: PrintCapabilities.PhotoPrintingIntentCapability
- uid: System.Printing.PrintCapabilities.StaplingCapability*
  parent: System.Printing.PrintCapabilities
  isExternal: false
  name: StaplingCapability
  nameWithType: PrintCapabilities.StaplingCapability
- uid: System.Printing.PrintCapabilities.TrueTypeFontModeCapability*
  parent: System.Printing.PrintCapabilities
  isExternal: false
  name: TrueTypeFontModeCapability
  nameWithType: PrintCapabilities.TrueTypeFontModeCapability
