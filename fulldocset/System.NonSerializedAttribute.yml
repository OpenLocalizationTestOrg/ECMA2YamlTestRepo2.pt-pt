### YamlMime:ManagedReference
items:
- uid: System.NonSerializedAttribute
  id: NonSerializedAttribute
  children:
  - System.NonSerializedAttribute.#ctor
  langs:
  - csharp
  name: NonSerializedAttribute
  nameWithType: NonSerializedAttribute
  fullName: System.NonSerializedAttribute
  type: Class
  summary: "Indica que um campo de uma classe serializável não deverá ser serializado. Esta classe não pode ser herdada."
  remarks: "Ao utilizar o <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>ou <xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter>classes de serialização de um objeto, utilize o atributo NonSerializedAttribute para impedir que um campo que está a ser serializado.</xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter> </xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> Por exemplo, pode utilizar este atributo para impedir a serialização dos dados confidenciais.       Os objetos de destino para o atributo NonSerializedAttribute são campos públicos e privados de uma classe serializável. Por predefinição, as classes não são serializáveis, exceto se forem marcados com <xref:System.SerializableAttribute>.</xref:System.SerializableAttribute> Durante o processo de serialização são serializados todos os campos de públicos e privados de uma classe por predefinição. Campos marcados com NonSerializedAttribute são excluídos durante a serialização. Se estiver a utilizar o <xref:System.Xml.Serialization.XmlSerializer>classe para serializar um objeto, utilize o <xref:System.Xml.Serialization.XmlIgnoreAttribute>classe para obter a mesma funcionalidade.</xref:System.Xml.Serialization.XmlIgnoreAttribute> </xref:System.Xml.Serialization.XmlSerializer> Em alternativa, implementar o <xref:System.Runtime.Serialization.ISerializable>interface para controlar explicitamente o processo de serialização.</xref:System.Runtime.Serialization.ISerializable> Tenha em atenção que classes que implemente <xref:System.Runtime.Serialization.ISerializable>ainda devem ser marcadas com <xref:System.SerializableAttribute>.</xref:System.SerializableAttribute> </xref:System.Runtime.Serialization.ISerializable>       Para aplicar a classe de NonSerializedAttribute a um evento, defina a localização de atributo para o campo, conforme mostrado no código c# seguinte.      ```   [field:NonSerializedAttribute()]    public event ChangedEventHandler Changed;   ```Se um campo não está a ser serializado, mas ainda necessita de um valor predefinido, que tem de ser fornecido após a anulação da serialização, pode criar um método que fornece o campo com um valor, aplique o <xref:System.Runtime.Serialization.OnDeserializedAttribute>ao método.</xref:System.Runtime.Serialization.OnDeserializedAttribute>       Para obter mais informações sobre a utilização de atributos, consulte [atributos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates serialization of an object marked with the <xref:System.SerializableAttribute> attribute, and the behavior of a field marked with the NonSerializedAttribute in the serialized object.  \n  \n> [!NOTE]\n>  The code uses the <xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter> class to serialize the object. The class is found in the system.runtime.serialization.formatters.soap.dll, which is not loaded by default into a project. To run the code, you must add a reference to the DLL to your project.  \n  \n [!code-cpp[SerializationAttributes#1](~/add/codesnippet/cpp/t-system.nonserializedat_1.cpp)]\n [!code-cs[SerializationAttributes#1](~/add/codesnippet/csharp/t-system.nonserializedat_1.cs)]\n [!code-vb[SerializationAttributes#1](~/add/codesnippet/visualbasic/t-system.nonserializedat_1.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Field, Inherited=false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class NonSerializedAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.NonSerializedAttribute.#ctor
  id: '#ctor'
  parent: System.NonSerializedAttribute
  langs:
  - csharp
  name: NonSerializedAttribute()
  nameWithType: NonSerializedAttribute.NonSerializedAttribute()
  fullName: System.NonSerializedAttribute.NonSerializedAttribute()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Inicializa uma nova instância do <xref href=&quot;System.NonSerializedAttribute&quot;> </xref> classe."
  syntax:
    content: public NonSerializedAttribute ();
    parameters: []
  overload: System.NonSerializedAttribute.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.NonSerializedAttribute.#ctor
  parent: System.NonSerializedAttribute
  isExternal: false
  name: NonSerializedAttribute()
  nameWithType: NonSerializedAttribute.NonSerializedAttribute()
  fullName: System.NonSerializedAttribute.NonSerializedAttribute()
- uid: System.NonSerializedAttribute.#ctor*
  parent: System.NonSerializedAttribute
  isExternal: false
  name: NonSerializedAttribute
  nameWithType: NonSerializedAttribute.NonSerializedAttribute
