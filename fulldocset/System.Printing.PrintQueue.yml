### YamlMime:ManagedReference
items:
- uid: System.Printing.PrintQueue
  id: PrintQueue
  children:
  - System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String)
  - System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Int32)
  - System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintQueueIndexedProperty[])
  - System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintSystemDesiredAccess)
  - System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.String[])
  - System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Int32,System.Printing.PrintSystemDesiredAccess)
  - System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintQueueIndexedProperty[],System.Printing.PrintSystemDesiredAccess)
  - System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.String[],System.Printing.PrintSystemDesiredAccess)
  - System.Printing.PrintQueue.AddJob
  - System.Printing.PrintQueue.AddJob(System.String)
  - System.Printing.PrintQueue.AddJob(System.String,System.Printing.PrintTicket)
  - System.Printing.PrintQueue.AddJob(System.String,System.String,System.Boolean)
  - System.Printing.PrintQueue.AddJob(System.String,System.String,System.Boolean,System.Printing.PrintTicket)
  - System.Printing.PrintQueue.AveragePagesPerMinute
  - System.Printing.PrintQueue.ClientPrintSchemaVersion
  - System.Printing.PrintQueue.Comment
  - System.Printing.PrintQueue.Commit
  - System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Printing.PrintDocumentImageableArea@)
  - System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Printing.PrintQueue)
  - System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Double@,System.Double@)
  - System.Printing.PrintQueue.CreateXpsDocumentWriter(System.String,System.Printing.PrintDocumentImageableArea@)
  - System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Printing.PrintDocumentImageableArea@,System.Windows.Controls.PageRangeSelection@,System.Windows.Controls.PageRange@)
  - System.Printing.PrintQueue.CreateXpsDocumentWriter(System.String,System.Printing.PrintDocumentImageableArea@,System.Windows.Controls.PageRangeSelection@,System.Windows.Controls.PageRange@)
  - System.Printing.PrintQueue.CurrentJobSettings
  - System.Printing.PrintQueue.DefaultPrintTicket
  - System.Printing.PrintQueue.DefaultPriority
  - System.Printing.PrintQueue.Description
  - System.Printing.PrintQueue.FullName
  - System.Printing.PrintQueue.GetJob(System.Int32)
  - System.Printing.PrintQueue.GetPrintCapabilities
  - System.Printing.PrintQueue.GetPrintCapabilities(System.Printing.PrintTicket)
  - System.Printing.PrintQueue.GetPrintCapabilitiesAsXml
  - System.Printing.PrintQueue.GetPrintCapabilitiesAsXml(System.Printing.PrintTicket)
  - System.Printing.PrintQueue.GetPrintJobInfoCollection
  - System.Printing.PrintQueue.HasPaperProblem
  - System.Printing.PrintQueue.HasToner
  - System.Printing.PrintQueue.HostingPrintServer
  - System.Printing.PrintQueue.InPartialTrust
  - System.Printing.PrintQueue.InternalDispose(System.Boolean)
  - System.Printing.PrintQueue.IsBidiEnabled
  - System.Printing.PrintQueue.IsBusy
  - System.Printing.PrintQueue.IsDevQueryEnabled
  - System.Printing.PrintQueue.IsDirect
  - System.Printing.PrintQueue.IsDoorOpened
  - System.Printing.PrintQueue.IsHidden
  - System.Printing.PrintQueue.IsInError
  - System.Printing.PrintQueue.IsInitializing
  - System.Printing.PrintQueue.IsIOActive
  - System.Printing.PrintQueue.IsManualFeedRequired
  - System.Printing.PrintQueue.IsNotAvailable
  - System.Printing.PrintQueue.IsOffline
  - System.Printing.PrintQueue.IsOutOfMemory
  - System.Printing.PrintQueue.IsOutOfPaper
  - System.Printing.PrintQueue.IsOutputBinFull
  - System.Printing.PrintQueue.IsPaperJammed
  - System.Printing.PrintQueue.IsPaused
  - System.Printing.PrintQueue.IsPendingDeletion
  - System.Printing.PrintQueue.IsPowerSaveOn
  - System.Printing.PrintQueue.IsPrinting
  - System.Printing.PrintQueue.IsProcessing
  - System.Printing.PrintQueue.IsPublished
  - System.Printing.PrintQueue.IsQueued
  - System.Printing.PrintQueue.IsRawOnlyEnabled
  - System.Printing.PrintQueue.IsServerUnknown
  - System.Printing.PrintQueue.IsShared
  - System.Printing.PrintQueue.IsTonerLow
  - System.Printing.PrintQueue.IsWaiting
  - System.Printing.PrintQueue.IsWarmingUp
  - System.Printing.PrintQueue.IsXpsDevice
  - System.Printing.PrintQueue.KeepPrintedJobs
  - System.Printing.PrintQueue.Location
  - System.Printing.PrintQueue.MaxPrintSchemaVersion
  - System.Printing.PrintQueue.MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket)
  - System.Printing.PrintQueue.MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket,System.Printing.PrintTicketScope)
  - System.Printing.PrintQueue.Name
  - System.Printing.PrintQueue.NeedUserIntervention
  - System.Printing.PrintQueue.NumberOfJobs
  - System.Printing.PrintQueue.PagePunt
  - System.Printing.PrintQueue.Pause
  - System.Printing.PrintQueue.PrintingIsCancelled
  - System.Printing.PrintQueue.Priority
  - System.Printing.PrintQueue.Purge
  - System.Printing.PrintQueue.QueueAttributes
  - System.Printing.PrintQueue.QueueDriver
  - System.Printing.PrintQueue.QueuePort
  - System.Printing.PrintQueue.QueuePrintProcessor
  - System.Printing.PrintQueue.QueueStatus
  - System.Printing.PrintQueue.Refresh
  - System.Printing.PrintQueue.Resume
  - System.Printing.PrintQueue.ScheduleCompletedJobsFirst
  - System.Printing.PrintQueue.SeparatorFile
  - System.Printing.PrintQueue.ShareName
  - System.Printing.PrintQueue.StartTimeOfDay
  - System.Printing.PrintQueue.UntilTimeOfDay
  - System.Printing.PrintQueue.UserPrintTicket
  langs:
  - csharp
  name: PrintQueue
  nameWithType: PrintQueue
  fullName: System.Printing.PrintQueue
  type: Class
  summary: "Manages printers and print jobs."
  remarks: "Some properties of the PrintQueue object represent characteristics of the print queue utility that runs on the computer, but others represent features or states of the printer itself. For example, <xref:System.Printing.PrintQueue.NumberOfJobs%2A> is a characteristic of the print queue, but <xref:System.Printing.PrintQueue.Location%2A> is a property of the printer. Many of the properties of the printer, such as whether it needs user attention, need to be passed, by means of the <xref:System.Printing.PrintQueue.Refresh%2A> method, from the printer itself to the PrintQueue object. This should be done before the corresponding property (<xref:System.Printing.PrintQueue.NeedUserIntervention%2A>) is read by your program. Similarly, when your program changes the values of one or more properties of a PrintQueue object, the change must be written to the actual print queue utility on the computer. Do this with the <xref:System.Printing.PrintQueue.Commit%2A> method.      > [!CAUTION] >  Classes within the <xref:System.Printing> namespace are not supported for use within a Windows service or ASP.NET application or service. Attempting to use these classes from within one of these application types may produce unexpected problems, such as diminished service performance and run-time exceptions.       If you want to print from a Windows Forms application, see the <xref:System.Drawing.Printing> namespace."
  syntax:
    content: 'public class PrintQueue : System.Printing.PrintSystemObject'
  inheritance:
  - System.Object
  - System.Printing.PrintSystemObject
  implements: []
  inheritedMembers:
  - System.Printing.PrintSystemObject.BaseAttributeNames
  - System.Printing.PrintSystemObject.Dispose
  - System.Printing.PrintSystemObject.Dispose(System.Boolean)
  - System.Printing.PrintSystemObject.Initialize
  - System.Printing.PrintSystemObject.IsDisposed
  - System.Printing.PrintSystemObject.Parent
  - System.Printing.PrintSystemObject.PropertiesCollection
  platform:
  - net462
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String)
  id: '#ctor(System.Printing.PrintServer,System.String)'
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: PrintQueue(PrintServer,String)
  nameWithType: PrintQueue.PrintQueue(PrintServer,String)
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String)
  type: Constructor
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Initializes a new instance of <xref href=&quot;System.Printing.PrintQueue&quot;></xref> class using the specified <xref href=&quot;System.Printing.PrintServer&quot;></xref> and queue name."
  remarks: "<xref:System.Printing.PrintQueue> constructors that do not include a <xref:System.Printing.PrintSystemDesiredAccess> parameter default to <xref:System.Printing.PrintSystemDesiredAccess> access."
  syntax:
    content: public PrintQueue (System.Printing.PrintServer printServer, string printQueueName);
    parameters:
    - id: printServer
      type: System.Printing.PrintServer
      description: "The print server to host the print queue."
    - id: printQueueName
      type: System.String
      description: "The name of the print queue."
  overload: System.Printing.PrintQueue.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Int32)
  id: '#ctor(System.Printing.PrintServer,System.String,System.Int32)'
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: PrintQueue(PrintServer,String,Int32)
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,Int32)
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,Int32)
  type: Constructor
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Initializes a new instance of <xref href=&quot;System.Printing.PrintQueue&quot;></xref> class using the specified <xref href=&quot;System.Printing.PrintServer&quot;></xref>, queue name, and print schema version."
  remarks: "<xref:System.Printing.PrintQueue> constructors that do not include a <xref:System.Printing.PrintSystemDesiredAccess> parameter  default to <xref:System.Printing.PrintSystemDesiredAccess> access.       The [Print Schema](http://go.microsoft.com/fwlink/?LinkId=186397) version released with Windows Vista is &quot;1&quot;."
  syntax:
    content: public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, int printSchemaVersion);
    parameters:
    - id: printServer
      type: System.Printing.PrintServer
      description: "The print server that hosts the print queue."
    - id: printQueueName
      type: System.String
      description: "The name of the print queue."
    - id: printSchemaVersion
      type: System.Int32
      description: "The version of the Print Schema to use."
  overload: System.Printing.PrintQueue.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintQueueIndexedProperty[])
  id: '#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintQueueIndexedProperty[])'
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: PrintQueue(PrintServer,String,PrintQueueIndexedProperty[])
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,PrintQueueIndexedProperty[])
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,PrintQueueIndexedProperty[])
  type: Constructor
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Initializes a new instance of <xref href=&quot;System.Printing.PrintQueue&quot;></xref> class using the specified <xref href=&quot;System.Printing.PrintServer&quot;></xref>, queue name, and array of <xref href=&quot;System.Printing.PrintQueueIndexedProperty&quot;></xref> values to initialize."
  remarks: "<xref:System.Printing.PrintQueue> constructors that do not include a <xref:System.Printing.PrintSystemDesiredAccess> parameter default to <xref:System.Printing.PrintSystemDesiredAccess> access.       The use of a constructor with the `propertyFilter` parameter improves performance."
  syntax:
    content: public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, System.Printing.PrintQueueIndexedProperty[] propertyFilter);
    parameters:
    - id: printServer
      type: System.Printing.PrintServer
      description: "The print server that hosts the print queue."
    - id: printQueueName
      type: System.String
      description: "The name of the print queue."
    - id: propertyFilter
      type: System.Printing.PrintQueueIndexedProperty[]
      description: "An array of <xref href=&quot;System.Printing.PrintQueueIndexedProperty&quot;></xref> values that specifies the property values to initialize."
  overload: System.Printing.PrintQueue.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintSystemDesiredAccess)
  id: '#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintSystemDesiredAccess)'
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: PrintQueue(PrintServer,String,PrintSystemDesiredAccess)
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,PrintSystemDesiredAccess)
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,PrintSystemDesiredAccess)
  type: Constructor
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Initializes a new instance of <xref href=&quot;System.Printing.PrintQueue&quot;></xref> class using the specified <xref href=&quot;System.Printing.PrintServer&quot;></xref>, queue name, and desired access."
  syntax:
    content: public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, System.Printing.PrintSystemDesiredAccess desiredAccess);
    parameters:
    - id: printServer
      type: System.Printing.PrintServer
      description: "The print server that hosts the print queue."
    - id: printQueueName
      type: System.String
      description: "The name of the print queue."
    - id: desiredAccess
      type: System.Printing.PrintSystemDesiredAccess
      description: "One of the <xref href=&quot;System.Printing.PrintSystemDesiredAccess&quot;></xref> values that specifies the type of access to the print queue that your program needs."
  overload: System.Printing.PrintQueue.#ctor*
  exceptions:
  - type: System.Printing.PrintQueueException
    commentId: T:System.Printing.PrintQueueException
    description: "<code>desiredAccess</code> is a value that can be applied only to a <xref href=&quot;System.Printing.PrintServer&quot;></xref> object, not a <xref href=&quot;System.Printing.PrintQueue&quot;></xref> object. For example, <xref href=&quot;System.Printing.PrintSystemDesiredAccess&quot;></xref>."
  platform:
  - net462
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.String[])
  id: '#ctor(System.Printing.PrintServer,System.String,System.String[])'
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: PrintQueue(PrintServer,String,String[])
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,String[])
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,String[])
  type: Constructor
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Initializes a new instance of <xref href=&quot;System.Printing.PrintQueue&quot;></xref> class using the specified <xref href=&quot;System.Printing.PrintServer&quot;></xref>, queue name, and array of property names to initialize."
  remarks: "<xref:System.Printing.PrintQueue> constructors that do not include a <xref:System.Printing.PrintSystemDesiredAccess> parameter default to <xref:System.Printing.PrintSystemDesiredAccess> access.       The use of a constructor with the `propertyFilter` parameter improves performance."
  syntax:
    content: public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, string[] propertyFilter);
    parameters:
    - id: printServer
      type: System.Printing.PrintServer
      description: "The print server that hosts the print queue."
    - id: printQueueName
      type: System.String
      description: "The name of the print queue."
    - id: propertyFilter
      type: System.String[]
      description: "An array of the names of properties to initialize."
  overload: System.Printing.PrintQueue.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Int32,System.Printing.PrintSystemDesiredAccess)
  id: '#ctor(System.Printing.PrintServer,System.String,System.Int32,System.Printing.PrintSystemDesiredAccess)'
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: PrintQueue(PrintServer,String,Int32,PrintSystemDesiredAccess)
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,Int32,PrintSystemDesiredAccess)
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,Int32,PrintSystemDesiredAccess)
  type: Constructor
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Initializes a new instance of <xref href=&quot;System.Printing.PrintQueue&quot;></xref> class using the specified <xref href=&quot;System.Printing.PrintServer&quot;></xref>, queue name, print schema version, and desired access."
  remarks: "The [Print Schema](http://go.microsoft.com/fwlink/?LinkId=186397) version released with Windows Vista is &quot;1&quot;."
  syntax:
    content: public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, int printSchemaVersion, System.Printing.PrintSystemDesiredAccess desiredAccess);
    parameters:
    - id: printServer
      type: System.Printing.PrintServer
      description: "The print server that hosts the print queue."
    - id: printQueueName
      type: System.String
      description: "The name of the print queue."
    - id: printSchemaVersion
      type: System.Int32
      description: "The version of the Print Schema to use."
    - id: desiredAccess
      type: System.Printing.PrintSystemDesiredAccess
      description: "One of the <xref href=&quot;System.Printing.PrintSystemDesiredAccess&quot;></xref> values that specifies the type of access to the print queue that your program needs."
  overload: System.Printing.PrintQueue.#ctor*
  exceptions:
  - type: System.Printing.PrintQueueException
    commentId: T:System.Printing.PrintQueueException
    description: "<code>desiredAccess</code> is a value that can be applied only to a <xref href=&quot;System.Printing.PrintServer&quot;></xref> object, not a <xref href=&quot;System.Printing.PrintQueue&quot;></xref> object. For example, <xref href=&quot;System.Printing.PrintSystemDesiredAccess&quot;></xref>."
  platform:
  - net462
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintQueueIndexedProperty[],System.Printing.PrintSystemDesiredAccess)
  id: '#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintQueueIndexedProperty[],System.Printing.PrintSystemDesiredAccess)'
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: PrintQueue(PrintServer,String,PrintQueueIndexedProperty[],PrintSystemDesiredAccess)
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,PrintQueueIndexedProperty[],PrintSystemDesiredAccess)
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,PrintQueueIndexedProperty[],PrintSystemDesiredAccess)
  type: Constructor
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Initializes a new instance of <xref href=&quot;System.Printing.PrintQueue&quot;></xref> class with the specified <xref href=&quot;System.Printing.PrintServer&quot;></xref>, queue name, array of <xref href=&quot;System.Printing.PrintQueueIndexedProperty&quot;></xref> values to initialize, and desired access."
  remarks: "The use of a constructor with the `propertyFilter` parameter improves performance."
  syntax:
    content: public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, System.Printing.PrintQueueIndexedProperty[] propertyFilter, System.Printing.PrintSystemDesiredAccess desiredAccess);
    parameters:
    - id: printServer
      type: System.Printing.PrintServer
      description: "The print server that hosts the print queue."
    - id: printQueueName
      type: System.String
      description: "The name of the print queue."
    - id: propertyFilter
      type: System.Printing.PrintQueueIndexedProperty[]
      description: "An array of <xref href=&quot;System.Printing.PrintQueueIndexedProperty&quot;></xref> values that specifies the properties to initialize."
    - id: desiredAccess
      type: System.Printing.PrintSystemDesiredAccess
      description: "One of the <xref href=&quot;System.Printing.PrintSystemDesiredAccess&quot;></xref> values that specifies the type of access to the print queue that your program needs."
  overload: System.Printing.PrintQueue.#ctor*
  exceptions:
  - type: System.Printing.PrintQueueException
    commentId: T:System.Printing.PrintQueueException
    description: "<code>desiredAccess</code> is a value that can be applied only to a <xref href=&quot;System.Printing.PrintServer&quot;></xref> object, not a <xref href=&quot;System.Printing.PrintQueue&quot;></xref> object. For example, <xref href=&quot;System.Printing.PrintSystemDesiredAccess&quot;></xref>."
  platform:
  - net462
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.String[],System.Printing.PrintSystemDesiredAccess)
  id: '#ctor(System.Printing.PrintServer,System.String,System.String[],System.Printing.PrintSystemDesiredAccess)'
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: PrintQueue(PrintServer,String,String[],PrintSystemDesiredAccess)
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,String[],PrintSystemDesiredAccess)
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,String[],PrintSystemDesiredAccess)
  type: Constructor
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Initializes a new instance of <xref href=&quot;System.Printing.PrintQueue&quot;></xref> class using the specified <xref href=&quot;System.Printing.PrintServer&quot;></xref>, queue name, property filter, and desired access."
  remarks: "The use of a constructor with the `propertyFilter` parameter improves performance."
  syntax:
    content: public PrintQueue (System.Printing.PrintServer printServer, string printQueueName, string[] propertyFilter, System.Printing.PrintSystemDesiredAccess desiredAccess);
    parameters:
    - id: printServer
      type: System.Printing.PrintServer
      description: "The print server that hosts the print queue."
    - id: printQueueName
      type: System.String
      description: "The name of the print queue."
    - id: propertyFilter
      type: System.String[]
      description: "An array of the names of properties to initialize."
    - id: desiredAccess
      type: System.Printing.PrintSystemDesiredAccess
      description: "One of the <xref href=&quot;System.Printing.PrintSystemDesiredAccess&quot;></xref> values that specifies the type of access to the print queue that your program needs."
  overload: System.Printing.PrintQueue.#ctor*
  exceptions:
  - type: System.Printing.PrintQueueException
    commentId: T:System.Printing.PrintQueueException
    description: "<code>desiredAccess</code> is a value that can be applied only to a <xref href=&quot;System.Printing.PrintServer&quot;></xref> object, not a <xref href=&quot;System.Printing.PrintQueue&quot;></xref> object. For example, <xref href=&quot;System.Printing.PrintSystemDesiredAccess&quot;></xref>."
  platform:
  - net462
- uid: System.Printing.PrintQueue.AddJob
  id: AddJob
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: AddJob()
  nameWithType: PrintQueue.AddJob()
  fullName: System.Printing.PrintQueue.AddJob()
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Inserts a new (generically named) print job, whose content is a <xref:System.Byte> array, into the queue."
  remarks: "Use this method to write device specific information, to a spool file, that is not automatically included by the [!INCLUDE[TLA#tla_win](~/add/includes/ajax-current-ext-md.md)] spooler. Of course, you need to know whether the spool file is [!INCLUDE[TLA#tla_emf](~/add/includes/tlasharptla-emf-md.md)] or [!INCLUDE[TLA#tla_xps](~/add/includes/tlasharptla-xps-md.md)]. If you prefer to work with the <xref:System.IO.Stream> [!INCLUDE[TLA#tla_api](~/add/includes/tlasharptla-api-md.md)], you can use the <xref:System.Printing.PrintQueueStream> class instead of this method.       After the AddJob method has been called, you must write a <xref:System.Byte> array to the <xref:System.Printing.PrintSystemJobInfo.JobStream%2A> property of the <xref:System.Printing.PrintSystemJobInfo> that is returned by AddJob or no print job is created. This array is what prints if the printer is working and is not paused.      > [!CAUTION] >  If the <xref:System.Printing.PrintSystemJobInfo.JobStream%2A> is not closed with <xref:System.IO.Stream.Close%2A> before the end of the thread in which AddJob is called, then an <xref:System.InvalidOperationException> is thrown when that thread ends because the spooler thread cannot gain control over the <xref:System.IO.Stream> object.       In the print queue&quot;s [!INCLUDE[TLA#tla_gui](~/add/includes/ajax-current-ext-md.md)], the job has the name &quot;Print System Document&quot;. To give the job a different name, use the <xref:System.Printing.PrintQueue.AddJob%28System.String%29> overload.       Other ways to print in [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] include the <xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=fullName> method, which can be used with or without opening the dialog, and the many <xref:System.Windows.Xps.XpsDocumentWriter.Write%2A> and <xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A> methods of the <xref:System.Windows.Xps.XpsDocumentWriter>."
  example:
  - "The following example shows how to use AddJob to send a <xref:System.Byte> array to a print queue. This code only works with printers that can detect and print plain text. Some of them cannot.  \n  \n [!code-vb[WriteToSpoolFile#AddUnnamedJob](~/add/codesnippet/visualbasic/writetospoolfile/program.vb#addunnamedjob)]\n [!code-cs[WriteToSpoolFile#AddUnnamedJob](~/add/codesnippet/csharp/WriteToSpoolFile/Program.cs#addunnamedjob)]"
  syntax:
    content: public System.Printing.PrintSystemJobInfo AddJob ();
    parameters: []
    return:
      type: System.Printing.PrintSystemJobInfo
      description: "A <xref href=&quot;System.Printing.PrintSystemJobInfo&quot;></xref> that represents the print job and its status."
  overload: System.Printing.PrintQueue.AddJob*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.AddJob(System.String)
  id: AddJob(System.String)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: AddJob(String)
  nameWithType: PrintQueue.AddJob(String)
  fullName: System.Printing.PrintQueue.AddJob(String)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Inserts a new print job, whose content is a <xref:System.Byte> array, into the queue."
  remarks: "Use this method to write device specific information, to a spool file, that is not automatically included by the [!INCLUDE[TLA#tla_win](~/add/includes/ajax-current-ext-md.md)] spooler. Of course, you need to know whether the spool file is [!INCLUDE[TLA#tla_emf](~/add/includes/tlasharptla-emf-md.md)] or [!INCLUDE[TLA#tla_xps](~/add/includes/tlasharptla-xps-md.md)]. If you prefer to work with the <xref:System.IO.Stream> [!INCLUDE[TLA#tla_api](~/add/includes/tlasharptla-api-md.md)], you can use the <xref:System.Printing.PrintQueueStream> class instead of this method.       After the <xref:System.Printing.PrintQueue.AddJob%2A> method has been called, you must write a <xref:System.Byte> array to the <xref:System.Printing.PrintSystemJobInfo.JobStream%2A> property of the <xref:System.Printing.PrintSystemJobInfo> that is returned by AddJob or no print job is created. This array is what prints if the printer is working and is not paused.      > [!CAUTION] >  If the <xref:System.Printing.PrintSystemJobInfo.JobStream%2A> is not closed with <xref:System.IO.Stream.Close%2A> before the end of the thread in which <xref:System.Printing.PrintQueue.AddJob%2A> is called, then an <xref:System.InvalidOperationException> is thrown when that thread ends because the spooler thread cannot gain control over the <xref:System.IO.Stream> object.       Other ways to print in [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] include the <xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=fullName> method, which can be used with or without opening the dialog, and the many <xref:System.Windows.Xps.XpsDocumentWriter.Write%2A> and <xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A> methods of the <xref:System.Windows.Xps.XpsDocumentWriter>."
  example:
  - "The following example shows how to use AddJob to read a file into a <xref:System.Byte> array and send the array to a print queue. This code assumes that there is a file called test.txt in the root of the C: drive. This code only works with printers that can detect and print plain text. Some of them cannot.  \n  \n [!code-vb[WriteToSpoolFile#AddNamedJob](~/add/codesnippet/visualbasic/writetospoolfile/program.vb#addnamedjob)]\n [!code-cs[WriteToSpoolFile#AddNamedJob](~/add/codesnippet/csharp/WriteToSpoolFile/Program.cs#addnamedjob)]"
  syntax:
    content: public System.Printing.PrintSystemJobInfo AddJob (string jobName);
    parameters:
    - id: jobName
      type: System.String
      description: "The name of the print job."
    return:
      type: System.Printing.PrintSystemJobInfo
      description: "A <xref href=&quot;System.Printing.PrintSystemJobInfo&quot;></xref> that represents the print job and its status."
  overload: System.Printing.PrintQueue.AddJob*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.AddJob(System.String,System.Printing.PrintTicket)
  id: AddJob(System.String,System.Printing.PrintTicket)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: AddJob(String,PrintTicket)
  nameWithType: PrintQueue.AddJob(String,PrintTicket)
  fullName: System.Printing.PrintQueue.AddJob(String,PrintTicket)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Inserts a new print job for an [!INCLUDE[TLA#tla_xps](~/add/includes/tlasharptla-xps-md.md)] Document into the queue, and gives it the specified name and settings."
  remarks: "For more information, see <xref:System.Printing.PrintQueue.AddJob%28System.String%29>."
  syntax:
    content: public System.Printing.PrintSystemJobInfo AddJob (string jobName, System.Printing.PrintTicket printTicket);
    parameters:
    - id: jobName
      type: System.String
      description: "The path and name of the document that is being printed."
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "The settings of the print job."
    return:
      type: System.Printing.PrintSystemJobInfo
      description: "A <xref href=&quot;System.Printing.PrintSystemJobInfo&quot;></xref> that represents the print job and its status."
  overload: System.Printing.PrintQueue.AddJob*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.AddJob(System.String,System.String,System.Boolean)
  id: AddJob(System.String,System.String,System.Boolean)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: AddJob(String,String,Boolean)
  nameWithType: PrintQueue.AddJob(String,String,Boolean)
  fullName: System.Printing.PrintQueue.AddJob(String,String,Boolean)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Inserts a new print job for an [!INCLUDE[TLA#tla_xps](~/add/includes/tlasharptla-xps-md.md)] Document into the queue, gives it the specified name, and specifies whether or not it should be validated."
  remarks: "If `fastCopy` is `true`, then the printer must be an [Printing Overview](~/add/includes/ajax-current-ext-md.md). If it is not, the AddJob method throws an exception.       If `fastCopy` is `false`, then it is not necessary to use an XPSDrv printer. The [!INCLUDE[TLA2#tla_xps](~/add/includes/ajax-current-ext-md.md)] file being added to the queue is converted to the printer&quot;s page description language, such as PCL or Postscript. However, this kind of printing makes a call to [!INCLUDE[TLA#tla_com](~/add/includes/ajax-current-ext-md.md)]. The call to [!INCLUDE[TLA2#tla_com](~/add/includes/tla2sharptla-com-md.md)] requires that the calling thread have a single-threaded apartment (<xref:System.Threading.ApartmentState>) instead of multiple-threaded apartment (<xref:System.Threading.ApartmentState>) which is the default in [!INCLUDE[TLA#tla_net](~/add/includes/tlasharptla-net-md.md)] 2.0 and later. (For more on threading and apartment states, see [Managed and Unmanaged Threading](http://msdn.microsoft.com/en-us/db425c20-4b2f-4433-bf96-76071c7881e5), and <xref:System.Threading.ApartmentState>.) There are two ways of doing this:      -   The simplest way is to add the <xref:System.STAThreadAttribute> (that is, &quot;`[System.STAThreadAttribute()]`&quot;) just above the first line of the application&quot;s `Main` method (usually &quot;`static void Main(string[] args)`&quot;).      -   If you need your `Main` thread&quot;s apartment state to be <xref:System.Threading.ApartmentState>, you can house the call to AddJob in a separate thread whose apartment state is set to <xref:System.Threading.ApartmentState> with <xref:System.Threading.Thread.SetApartmentState%2A>. The example below illustrates this second technique.      > [!NOTE] >  You cannot apply the <xref:System.STAThreadAttribute> to any method except `Main` and you cannot use <xref:System.Threading.Thread.SetApartmentState%2A> for the `Main` thread.       Other ways to print in [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] include the <xref:System.Windows.Controls.PrintDialog.PrintDocument%2A?displayProperty=fullName> method, which can be used with or without opening the dialog, and the many <xref:System.Windows.Xps.XpsDocumentWriter.Write%2A> and <xref:System.Windows.Xps.XpsDocumentWriter.WriteAsync%2A> methods of the <xref:System.Windows.Xps.XpsDocumentWriter>."
  example:
  - "The following example shows how to use AddJob to batch print all the [!INCLUDE[TLA#tla_xps](~/add/includes/tlasharptla-xps-md.md)] files in a directory.  \n  \n [!code-cs[BatchPrintXPSFiles#BatchPrintXPSFiles](~/add/codesnippet/csharp/BatchPrintXPSFiles/Program.cs#batchprintxpsfiles)]\n [!code-vb[BatchPrintXPSFiles#BatchPrintXPSFiles](~/add/codesnippet/visualbasic/batchprintxpsfiles/program.vb#batchprintxpsfiles)]"
  syntax:
    content: public System.Printing.PrintSystemJobInfo AddJob (string jobName, string documentPath, bool fastCopy);
    parameters:
    - id: jobName
      type: System.String
      description: "The name of the print job."
    - id: documentPath
      type: System.String
      description: "The path and name of the document that is being printed."
    - id: fastCopy
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to spool quickly without page-by-page progress feedback and without validating that the file is valid [!INCLUDE[TLA2#tla_xps](~/add/includes/ajax-current-ext-md.md)]; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Printing.PrintSystemJobInfo
      description: "A <xref href=&quot;System.Printing.PrintSystemJobInfo&quot;></xref> that represents the print job and its status."
  overload: System.Printing.PrintQueue.AddJob*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.AddJob(System.String,System.String,System.Boolean,System.Printing.PrintTicket)
  id: AddJob(System.String,System.String,System.Boolean,System.Printing.PrintTicket)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: AddJob(String,String,Boolean,PrintTicket)
  nameWithType: PrintQueue.AddJob(String,String,Boolean,PrintTicket)
  fullName: System.Printing.PrintQueue.AddJob(String,String,Boolean,PrintTicket)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Inserts a new print job for an [!INCLUDE[TLA#tla_xps](~/add/includes/tlasharptla-xps-md.md)] Document into the queue, gives it the specified name and settings, and specifies whether or not it should be validated."
  remarks: "For more information, see <xref:System.Printing.PrintQueue.AddJob%28System.String%2CSystem.String%2CSystem.Boolean%29>."
  syntax:
    content: public System.Printing.PrintSystemJobInfo AddJob (string jobName, string documentPath, bool fastCopy, System.Printing.PrintTicket printTicket);
    parameters:
    - id: jobName
      type: System.String
      description: "The path and name of the document that is being printed."
    - id: documentPath
      type: System.String
      description: "The path and name of the document that is being printed."
    - id: fastCopy
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to spool quickly without page-by-page progress feedback and without validating that the file is valid [!INCLUDE[TLA2#tla_xps](~/add/includes/ajax-current-ext-md.md)]; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "The settings of the print job."
    return:
      type: System.Printing.PrintSystemJobInfo
      description: "A <xref href=&quot;System.Printing.PrintSystemJobInfo&quot;></xref> that represents the print job and its status."
  overload: System.Printing.PrintQueue.AddJob*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.AveragePagesPerMinute
  id: AveragePagesPerMinute
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: AveragePagesPerMinute
  nameWithType: PrintQueue.AveragePagesPerMinute
  fullName: System.Printing.PrintQueue.AveragePagesPerMinute
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets the speed of the printer measured in pages per minute."
  syntax:
    content: public virtual int AveragePagesPerMinute { get; }
    return:
      type: System.Int32
      description: "The average pages printed per minute of the printer."
  overload: System.Printing.PrintQueue.AveragePagesPerMinute*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.ClientPrintSchemaVersion
  id: ClientPrintSchemaVersion
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: ClientPrintSchemaVersion
  nameWithType: PrintQueue.ClientPrintSchemaVersion
  fullName: System.Printing.PrintQueue.ClientPrintSchemaVersion
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets the version of the [Print Schema](http://go.microsoft.com/fwlink/?LinkId=186397)."
  remarks: "The [Print Schema](http://go.microsoft.com/fwlink/?LinkId=186397) version released with Windows Vista is 1."
  syntax:
    content: public int ClientPrintSchemaVersion { get; }
    return:
      type: System.Int32
      description: "The version of the [Print Schema](http://go.microsoft.com/fwlink/?LinkId=186397) in use."
  overload: System.Printing.PrintQueue.ClientPrintSchemaVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.Comment
  id: Comment
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: Comment
  nameWithType: PrintQueue.Comment
  fullName: System.Printing.PrintQueue.Comment
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets or sets a comment about the printer."
  remarks: "The comment is visible to users in the Windows printer list and on the Windows common print dialog. It can provide information not contained in the printer&quot;s name, model, or location properties, which are also visible in the same places; for example, &quot;Reserved for Payroll Dept. between 3 pm and 4 pm.&quot; (The <xref:System.Printing.PrintQueue.Description%2A> property enables you to store information that users cannot view unless your application makes it visible.)"
  syntax:
    content: public virtual string Comment { get; set; }
    return:
      type: System.String
      description: "A comment about the printer."
  overload: System.Printing.PrintQueue.Comment*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.Commit
  id: Commit
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: Commit()
  nameWithType: PrintQueue.Commit()
  fullName: System.Printing.PrintQueue.Commit()
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Writes the current properties of the <xref href=&quot;System.Printing.PrintQueue&quot;></xref> object to the actual print queue on the print server."
  remarks: "Changes that your program makes to the properties of a <xref:System.Printing.PrintQueue> object do not actually take effect until the program executes the Commit method.       The method requires that the <xref:System.Printing.PrintQueue> object be created with <xref:System.Printing.PrintSystemDesiredAccess> rights."
  example:
  - "The following example shows how to use this method while merging two print tickets.  \n  \n [!code-vb[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/visualbasic/management_printticket/printticket.vb#usingmergeandvalidate)]\n [!code-cs[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/csharp/Management_PrintTicket/printticket.cs#usingmergeandvalidate)]"
  syntax:
    content: public override void Commit ();
    parameters: []
  overload: System.Printing.PrintQueue.Commit*
  exceptions:
  - type: System.Printing.PrintSystemException
    commentId: T:System.Printing.PrintSystemException
    description: "Some of the properties could not be committed."
  - type: System.Printing.PrintCommitAttributesException
    commentId: T:System.Printing.PrintCommitAttributesException
    description: "Some of the properties could not be committed.  \n  \n \\- or -  \n  \n The <xref href=\"System.Printing.PrintQueue\"></xref> object was not created with sufficient rights."
  platform:
  - net462
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Printing.PrintDocumentImageableArea@)
  id: CreateXpsDocumentWriter(System.Printing.PrintDocumentImageableArea@)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: CreateXpsDocumentWriter(PrintDocumentImageableArea)
  nameWithType: PrintQueue.CreateXpsDocumentWriter(PrintDocumentImageableArea)
  fullName: System.Printing.PrintQueue.CreateXpsDocumentWriter(PrintDocumentImageableArea)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Creates an <xref href=&quot;System.Windows.Xps.XpsDocumentWriter&quot;></xref> object, opens a Windows common print dialog and returns a <xref uid=&quot;langword_csharp_ref&quot; name=&quot;ref&quot; href=&quot;&quot;></xref> (<xref uid=&quot;langword_csharp_ByRef&quot; name=&quot;ByRef&quot; href=&quot;&quot;></xref> in Visual Basic) parameter that represents information about the imageable area and the dimensions of the media."
  remarks: "Many printers need up to a quarter of an inch of unprinted space around the edges of each page to grip the paper and move it through the printer. Otherwise toner would foul the paper flow mechanism. The area which can be printed is the &quot;imageable area.&quot;       The type <xref:System.Printing.PrintDocumentImageableArea> has no public constructor. Hence, the variable `documentImageableArea` must be declared and assigned to `null` and only then passed to the method. This method displays a <xref:System.Windows.Controls.PrintDialog> requiring input from the user. After the user has selected a printer, paper size, and orientation and closed the dialog, `documentImageableArea` points to an actual object and its properties are initialized.       If the user cancels or closes the dialog, the return value is `null`. As a consequence, the return value must be checked for `null` by your application."
  syntax:
    content: public static System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter (ref System.Printing.PrintDocumentImageableArea documentImageableArea);
    parameters:
    - id: documentImageableArea
      type: System.Printing.PrintDocumentImageableArea
      description: "A reference to an object that contains the dimensions of the area of the page on which the device can print. Since its data type has no public constructor, this parameter is passed uninitialized."
    return:
      type: System.Windows.Xps.XpsDocumentWriter
      description: "An <xref href=&quot;System.Windows.Xps.XpsDocumentWriter&quot;></xref> that writes XPS data to a stream. This can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>. (The parameter <code>documentImageableArea</code> is a <xref uid=&quot;langword_csharp_ref&quot; name=&quot;ref&quot; href=&quot;&quot;></xref> [<xref uid=&quot;langword_csharp_ByRef&quot; name=&quot;ByRef&quot; href=&quot;&quot;></xref> in Visual Basic] parameter that is initialized by the method, so it represents a second returned item.)"
  overload: System.Printing.PrintQueue.CreateXpsDocumentWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Printing.PrintQueue)
  id: CreateXpsDocumentWriter(System.Printing.PrintQueue)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: CreateXpsDocumentWriter(PrintQueue)
  nameWithType: PrintQueue.CreateXpsDocumentWriter(PrintQueue)
  fullName: System.Printing.PrintQueue.CreateXpsDocumentWriter(PrintQueue)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Creates an <xref href=&quot;System.Windows.Xps.XpsDocumentWriter&quot;></xref> object and associates it with the specified print queue."
  remarks: ''
  example:
  - "The following example shows how to use this method to create an <xref:System.Windows.Xps.XpsDocumentWriter>.  \n  \n [!code-cs[XpsPrint#PrintQueueSnip](~/add/codesnippet/csharp/XpsPrint/XpsPrintHelper.cs#printqueuesnip)]\n [!code-vb[XpsPrint#PrintQueueSnip](~/add/codesnippet/visualbasic/xpsprint/xpsprinthelper.vb#printqueuesnip)]"
  syntax:
    content: public static System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter (System.Printing.PrintQueue printQueue);
    parameters:
    - id: printQueue
      type: System.Printing.PrintQueue
      description: "A print queue to print the XPS document."
    return:
      type: System.Windows.Xps.XpsDocumentWriter
      description: "An <xref href=&quot;System.Windows.Xps.XpsDocumentWriter&quot;></xref> that writes to an XPS stream."
  overload: System.Printing.PrintQueue.CreateXpsDocumentWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Double@,System.Double@)
  id: CreateXpsDocumentWriter(System.Double@,System.Double@)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: CreateXpsDocumentWriter(Double,Double)
  nameWithType: PrintQueue.CreateXpsDocumentWriter(Double,Double)
  fullName: System.Printing.PrintQueue.CreateXpsDocumentWriter(Double,Double)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Creates an <xref href=&quot;System.Windows.Xps.XpsDocumentWriter&quot;></xref> object with the specified dimensions."
  remarks: "This method displays a <xref:System.Windows.Controls.PrintDialog> requiring input from the user. If the user cancels or closes the dialog, the return value is `null`. As a consequence, the return value must be checked for `null` by your application."
  syntax:
    content: public static System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter (ref double width, ref double height);
    parameters:
    - id: width
      type: System.Double
      description: "The width of the XPS document."
    - id: height
      type: System.Double
      description: "The height of the XPS document."
    return:
      type: System.Windows.Xps.XpsDocumentWriter
      description: "An <xref href=&quot;System.Windows.Xps.XpsDocumentWriter&quot;></xref> that writes to an XPS stream. This can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Printing.PrintQueue.CreateXpsDocumentWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter(System.String,System.Printing.PrintDocumentImageableArea@)
  id: CreateXpsDocumentWriter(System.String,System.Printing.PrintDocumentImageableArea@)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: CreateXpsDocumentWriter(String,PrintDocumentImageableArea)
  nameWithType: PrintQueue.CreateXpsDocumentWriter(String,PrintDocumentImageableArea)
  fullName: System.Printing.PrintQueue.CreateXpsDocumentWriter(String,PrintDocumentImageableArea)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Creates an <xref href=&quot;System.Windows.Xps.XpsDocumentWriter&quot;></xref> object, opens a Windows common print dialog (and provides it a job description) and returns a <xref uid=&quot;langword_csharp_ref&quot; name=&quot;ref&quot; href=&quot;&quot;></xref> (<xref uid=&quot;langword_csharp_ByRef&quot; name=&quot;ByRef&quot; href=&quot;&quot;></xref> in Visual Basic) parameter that represents information about the imageable area and the dimensions of the media."
  remarks: "Many printers need up to a quarter of an inch of unprinted space around the edges of each page to grip the paper and move it through the printer. Otherwise toner would foul the paper flow mechanism. The area which can be printed is the &quot;imageable area.&quot;       The type <xref:System.Printing.PrintDocumentImageableArea> has no public constructor. Hence, the variable `documentImageableArea` must be declared and assigned to `null` and only then passed to the method. This method displays a <xref:System.Windows.Controls.PrintDialog> requiring input from the user. After the user has selected a printer, paper size, and orientation and closed the dialog, `documentImageableArea` points to an actual object, and its properties are initialized.       If the user cancels or closes the dialog, the return value is `null`. As a consequence, the return value must be checked for `null` by your application."
  syntax:
    content: public static System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter (string jobDescription, ref System.Printing.PrintDocumentImageableArea documentImageableArea);
    parameters:
    - id: jobDescription
      type: System.String
      description: "A name for the print job. It appears in the Windows printing user interface."
    - id: documentImageableArea
      type: System.Printing.PrintDocumentImageableArea
      description: "A reference to an object that contains the dimensions of the area of the page on which the device can print. Since its data type has no public constructor, this parameter is passed uninitialized."
    return:
      type: System.Windows.Xps.XpsDocumentWriter
      description: "An <xref href=&quot;System.Windows.Xps.XpsDocumentWriter&quot;></xref> that writes XPS data to a stream. This can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>. (The parameter <code>documentImageableArea</code> is a <xref uid=&quot;langword_csharp_ref&quot; name=&quot;ref&quot; href=&quot;&quot;></xref> [<xref uid=&quot;langword_csharp_ByRef&quot; name=&quot;ByRef&quot; href=&quot;&quot;></xref> in Visual Basic] parameter that is initialized by the method, so it represents a second returned item.)"
  overload: System.Printing.PrintQueue.CreateXpsDocumentWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Printing.PrintDocumentImageableArea@,System.Windows.Controls.PageRangeSelection@,System.Windows.Controls.PageRange@)
  id: CreateXpsDocumentWriter(System.Printing.PrintDocumentImageableArea@,System.Windows.Controls.PageRangeSelection@,System.Windows.Controls.PageRange@)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: CreateXpsDocumentWriter(PrintDocumentImageableArea,PageRangeSelection,PageRange)
  nameWithType: PrintQueue.CreateXpsDocumentWriter(PrintDocumentImageableArea,PageRangeSelection,PageRange)
  fullName: System.Printing.PrintQueue.CreateXpsDocumentWriter(PrintDocumentImageableArea,PageRangeSelection,PageRange)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Creates an <xref href=&quot;System.Windows.Xps.XpsDocumentWriter&quot;></xref> object, opens a Windows common print dialog, provides the dialog with a page range and a description of the print job, and returns a <xref uid=&quot;langword_csharp_ref&quot; name=&quot;ref&quot; href=&quot;&quot;></xref> (<xref uid=&quot;langword_csharp_ByRef&quot; name=&quot;ByRef&quot; href=&quot;&quot;></xref> in Visual Basic) parameter that represents information about the imageable area and the dimensions of the media."
  remarks: "Many printers need up to a quarter of an inch of unprinted space around the edges of each page to grip the paper and move it through the printer. Otherwise toner would foul the paper flow mechanism. The area which can be printed is the &quot;imageable area.&quot;       The type <xref:System.Printing.PrintDocumentImageableArea> has no public constructor. Hence, the variable `documentImageableArea` must be declared and assigned to `null` and only then passed to the method. This method displays a <xref:System.Windows.Controls.PrintDialog> requiring input from the user. The user configures his print job on the dialog (including selecting a printer, paper size, orientation, and page range). When the dialog is closed, `pageRangeSelection` and `pageRange` have values, and `documentImageableArea` points to an actual object whose properties are initialized.       If the user cancels or closes the dialog, the return value is `null`. As a consequence, the return value must be checked for `null` by your application."
  syntax:
    content: public static System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter (ref System.Printing.PrintDocumentImageableArea documentImageableArea, ref System.Windows.Controls.PageRangeSelection pageRangeSelection, ref System.Windows.Controls.PageRange pageRange);
    parameters:
    - id: documentImageableArea
      type: System.Printing.PrintDocumentImageableArea
      description: "A reference to an object that contains the dimensions of the area of the page on which the device can print. Since its data type has no public constructor, this parameter is passed uninitialized."
    - id: pageRangeSelection
      type: System.Windows.Controls.PageRangeSelection
      description: "A value that specifies whether to print all pages or only a range that is specified by the user."
    - id: pageRange
      type: System.Windows.Controls.PageRange
      description: "The range of pages that is printed."
    return:
      type: System.Windows.Xps.XpsDocumentWriter
      description: "An <xref href=&quot;System.Windows.Xps.XpsDocumentWriter&quot;></xref> that writes XPS data to a stream. This can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>. (The parameters <code>documentImageableArea</code>, <code>pageRangeSelection</code>, and <code>pageRange</code> are all <xref uid=&quot;langword_csharp_ref&quot; name=&quot;ref&quot; href=&quot;&quot;></xref> [<xref uid=&quot;langword_csharp_ByRef&quot; name=&quot;ByRef&quot; href=&quot;&quot;></xref> in Visual Basic] parameters that are initialized by the user and returned when the dialog is closed, so each represents an additional returned item.)"
  overload: System.Printing.PrintQueue.CreateXpsDocumentWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter(System.String,System.Printing.PrintDocumentImageableArea@,System.Windows.Controls.PageRangeSelection@,System.Windows.Controls.PageRange@)
  id: CreateXpsDocumentWriter(System.String,System.Printing.PrintDocumentImageableArea@,System.Windows.Controls.PageRangeSelection@,System.Windows.Controls.PageRange@)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: CreateXpsDocumentWriter(String,PrintDocumentImageableArea,PageRangeSelection,PageRange)
  nameWithType: PrintQueue.CreateXpsDocumentWriter(String,PrintDocumentImageableArea,PageRangeSelection,PageRange)
  fullName: System.Printing.PrintQueue.CreateXpsDocumentWriter(String,PrintDocumentImageableArea,PageRangeSelection,PageRange)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Creates an <xref href=&quot;System.Windows.Xps.XpsDocumentWriter&quot;></xref> object, opens a Windows common print dialog, provides the dialog with a page range, and returns a <xref uid=&quot;langword_csharp_ref&quot; name=&quot;ref&quot; href=&quot;&quot;></xref> (<xref uid=&quot;langword_csharp_ByRef&quot; name=&quot;ByRef&quot; href=&quot;&quot;></xref> in Visual Basic) parameter that represents information about the imageable area and the dimensions of the media."
  remarks: "Many printers need up to a quarter of an inch of unprinted space around the edges of each page to grip the paper and move it through the printer. Otherwise toner would foul the paper flow mechanism. The area which can be printed is the &quot;imageable area.&quot;       The type <xref:System.Printing.PrintDocumentImageableArea> has no public constructor. Hence, the variable `documentImageableArea` must be declared and assigned to `null` and only then passed to the method. This method displays a <xref:System.Windows.Controls.PrintDialog> requiring input from the user. The user configures his print job on the dialog (including selecting a printer, paper size, orientation, and page range). When the dialog is closed, `pageRangeSelection` and `pageRange` have values, and `documentImageableArea` points to an actual object whose properties are initialized.       If the user cancels or closes the dialog, the return value is `null`. As a consequence, the return value must be checked for `null` by your application."
  syntax:
    content: public static System.Windows.Xps.XpsDocumentWriter CreateXpsDocumentWriter (string jobDescription, ref System.Printing.PrintDocumentImageableArea documentImageableArea, ref System.Windows.Controls.PageRangeSelection pageRangeSelection, ref System.Windows.Controls.PageRange pageRange);
    parameters:
    - id: jobDescription
      type: System.String
      description: "A name for the print job. It appears in the Windows printing user interface."
    - id: documentImageableArea
      type: System.Printing.PrintDocumentImageableArea
      description: "A reference to an object that contains the dimensions of the area of the page on which the device can print. Since its data type has no public constructor, this parameter is passed uninitialized."
    - id: pageRangeSelection
      type: System.Windows.Controls.PageRangeSelection
      description: "A value that specifies whether to print all pages or only a range that is specified by the user."
    - id: pageRange
      type: System.Windows.Controls.PageRange
      description: "The range of pages that is printed."
    return:
      type: System.Windows.Xps.XpsDocumentWriter
      description: "An <xref href=&quot;System.Windows.Xps.XpsDocumentWriter&quot;></xref> that writes XPS data to a stream. This can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>. (The parameters <code>documentImageableArea</code>, <code>pageRangeSelection</code>, and <code>pageRange</code> are all <xref uid=&quot;langword_csharp_ref&quot; name=&quot;ref&quot; href=&quot;&quot;></xref> [<xref uid=&quot;langword_csharp_ByRef&quot; name=&quot;ByRef&quot; href=&quot;&quot;></xref> in Visual Basic] parameters that are initialized by the user and returned when the dialog is closed, so each represents an additional returned item.)"
  overload: System.Printing.PrintQueue.CreateXpsDocumentWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.CurrentJobSettings
  id: CurrentJobSettings
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: CurrentJobSettings
  nameWithType: PrintQueue.CurrentJobSettings
  fullName: System.Printing.PrintQueue.CurrentJobSettings
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets an object that contains the configuration settings for the current print job."
  syntax:
    content: public System.Printing.PrintJobSettings CurrentJobSettings { get; }
    return:
      type: System.Printing.PrintJobSettings
      description: "A <xref href=&quot;System.Printing.PrintJobSettings&quot;></xref> value that holds the settings of the currently printing job. These settings include a description of the job and a reference to the job&quot;s <xref href=&quot;System.Printing.PrintTicket&quot;></xref>."
  overload: System.Printing.PrintQueue.CurrentJobSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.DefaultPrintTicket
  id: DefaultPrintTicket
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: DefaultPrintTicket
  nameWithType: PrintQueue.DefaultPrintTicket
  fullName: System.Printing.PrintQueue.DefaultPrintTicket
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets or sets the default printer options associated with this <xref href=&quot;System.Printing.PrintQueue&quot;></xref>."
  remarks: "The default <xref:System.Printing.PrintTicket> specifies print job options such as <xref:System.Printing.PrintTicket.CopyCount%2A>, <xref:System.Printing.PrintTicket.PageOrientation%2A>, <xref:System.Printing.PrintTicket.Duplexing%2A>, <xref:System.Printing.PrintTicket.Stapling%2A>, and others.       Each <xref:System.Printing.PrintQueue> maintains its own DefaultPrintTicket.       In normal operation the DefaultPrintTicket property returns a <xref:System.Printing.PrintTicket>.  If the <xref:System.Printing.PrintQueue> detects an invalid state, DefaultPrintTicket returns `null`.  If DefaultPrintTicket returns `null`, the application should display an informational user dialog that an error has occurred on this print queue and that the print job should be restarted with the output directed to a different print queue.       Getting or setting the DefaultPrintTicket property does not validate the <xref:System.Printing.PrintTicket>.  The <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A> method can be used to validate a <xref:System.Printing.PrintTicket>."
  example:
  - "The following example shows how to use this property while testing a printer's capabilities and configuring a print job to take advantage of them.  \n  \n [!code-cs[XpsCreate#PrinterCapabilities](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#printercapabilities)]\n [!code-cpp[XpsCreate#PrinterCapabilities](~/add/codesnippet/cpp/xpscreate/XpsCreate.cpp#printercapabilities)]\n [!code-vb[XpsCreate#PrinterCapabilities](~/add/codesnippet/visualbasic/xpscreate/xpscreate.vb#printercapabilities)]"
  syntax:
    content: public virtual System.Printing.PrintTicket DefaultPrintTicket { get; set; }
    return:
      type: System.Printing.PrintTicket
      description: "The default <xref href=&quot;System.Printing.PrintTicket&quot;></xref> for the print queue; or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if an error has occurred in the print queue."
  overload: System.Printing.PrintQueue.DefaultPrintTicket*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.DefaultPriority
  id: DefaultPriority
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: DefaultPriority
  nameWithType: PrintQueue.DefaultPriority
  fullName: System.Printing.PrintQueue.DefaultPriority
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets or sets the default priority that is given to each new print job added to the queue."
  remarks: "A print job&quot;s priority can be changed by users after it enters the print queue."
  syntax:
    content: public virtual int DefaultPriority { get; set; }
    return:
      type: System.Int32
      description: "The default priority for print jobs added to the queue. Possible values range from 1 through 99. The default is 1."
  overload: System.Printing.PrintQueue.DefaultPriority*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.Description
  id: Description
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: Description
  nameWithType: PrintQueue.Description
  fullName: System.Printing.PrintQueue.Description
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets a description of the print queue."
  remarks: "When the queue is created, the description defaults to a three part string that consists of the queue name, model, and location separated by commas. Contrast the Description property with the <xref:System.Printing.PrintQueue.Comment%2A> property which is visible to users in the common print dialog and the Printers and Faxes list."
  syntax:
    content: public virtual string Description { get; }
    return:
      type: System.String
      description: "A description of the print queue."
  overload: System.Printing.PrintQueue.Description*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.FullName
  id: FullName
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: FullName
  nameWithType: PrintQueue.FullName
  fullName: System.Printing.PrintQueue.FullName
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets the complete name of the queue."
  remarks: "For print queues on the local print server, this property&quot;s value is identical to <xref:System.Printing.PrintQueue.Name%2A>, otherwise it includes the full UNC (Universal Naming Convention) name.       The <xref:System.Printing.PrintQueue> object also has writeable <xref:System.Printing.PrintQueue.Name%2A> and <xref:System.Printing.PrintQueue.ShareName%2A> properties."
  example:
  - "The following example shows how to use this property while merging two print tickets.  \n  \n [!code-vb[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/visualbasic/management_printticket/printticket.vb#usingmergeandvalidate)]\n [!code-cs[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/csharp/Management_PrintTicket/printticket.cs#usingmergeandvalidate)]"
  syntax:
    content: public string FullName { get; }
    return:
      type: System.String
      description: "The complete name of the print queue."
  overload: System.Printing.PrintQueue.FullName*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.GetJob(System.Int32)
  id: GetJob(System.Int32)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: GetJob(Int32)
  nameWithType: PrintQueue.GetJob(Int32)
  fullName: System.Printing.PrintQueue.GetJob(Int32)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets the print job with the specified ID number."
  remarks: "You can also use the <xref:System.Printing.PrintSystemJobInfo.Get%2A?displayProperty=fullName> method for the same purpose."
  example:
  - "The following example shows how to use this method when diagnosing a problem with a print job.  \n  \n [!code-cs[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/add/codesnippet/csharp/DiagnoseProblematicPrintJob/Program.cs#enumeratejobsinqueues)]\n [!code-cpp[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/add/codesnippet/cpp/diagnoseproblematicprintjob/Program.cpp#enumeratejobsinqueues)]\n [!code-vb[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/add/codesnippet/visualbasic/diagnoseproblematicprintjob/program.vb#enumeratejobsinqueues)]"
  syntax:
    content: public System.Printing.PrintSystemJobInfo GetJob (int jobId);
    parameters:
    - id: jobId
      type: System.Int32
      description: "The number of the job in the queue."
    return:
      type: System.Printing.PrintSystemJobInfo
      description: "A <xref href=&quot;System.Printing.PrintSystemJobInfo&quot;></xref> that specifies the properties of the job and its status."
  overload: System.Printing.PrintQueue.GetJob*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.GetPrintCapabilities
  id: GetPrintCapabilities
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: GetPrintCapabilities()
  nameWithType: PrintQueue.GetPrintCapabilities()
  fullName: System.Printing.PrintQueue.GetPrintCapabilities()
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets a <xref href=&quot;System.Printing.PrintCapabilities&quot;></xref> object that identifies the capabilities of the printer."
  remarks: ''
  example:
  - "The following example shows how to use this method while merging two print tickets.  \n  \n [!code-vb[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/visualbasic/management_printticket/printticket.vb#usingmergeandvalidate)]\n [!code-cs[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/csharp/Management_PrintTicket/printticket.cs#usingmergeandvalidate)]"
  syntax:
    content: public System.Printing.PrintCapabilities GetPrintCapabilities ();
    parameters: []
    return:
      type: System.Printing.PrintCapabilities
      description: "A <xref href=&quot;System.Printing.PrintCapabilities&quot;></xref> object that specifies what the printer can and cannot do, such as two-sided coping or automatic stapling."
  overload: System.Printing.PrintQueue.GetPrintCapabilities*
  exceptions:
  - type: System.Printing.PrintQueueException
    commentId: T:System.Printing.PrintQueueException
    description: "The <xref href=&quot;System.Printing.PrintCapabilities&quot;></xref> object could not be retrieved."
  platform:
  - net462
- uid: System.Printing.PrintQueue.GetPrintCapabilities(System.Printing.PrintTicket)
  id: GetPrintCapabilities(System.Printing.PrintTicket)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: GetPrintCapabilities(PrintTicket)
  nameWithType: PrintQueue.GetPrintCapabilities(PrintTicket)
  fullName: System.Printing.PrintQueue.GetPrintCapabilities(PrintTicket)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets a <xref href=&quot;System.Printing.PrintCapabilities&quot;></xref> object that identifies the capabilities of the printer."
  remarks: "The <xref:System.Printing.PrintTicket> parameter is used as the basis on which to construct the <xref:System.Printing.PrintCapabilities> object. For example, suppose the printer supported only media types A and B from input bin 1 and it only supported media type C from input bin 2. If the `printTicket` parameter specified input bin 1, then the <xref:System.Printing.PrintCapabilities> object that is returned would include all three media types, but it would report type C as &quot;constrained.&quot; If the `printTicket` parameter specified input bin 2, then the <xref:System.Printing.PrintCapabilities> object that is returned would include all three media types, but it would report types A and B as &quot;constrained.&quot; See the [Print Schema](http://go.microsoft.com/fwlink/?LinkId=186397) for more information on constraints.       If `printTicket` is `null`, the <xref:System.Printing.PrintQueue.UserPrintTicket%2A> is used."
  syntax:
    content: public System.Printing.PrintCapabilities GetPrintCapabilities (System.Printing.PrintTicket printTicket);
    parameters:
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "A print ticket that provides the basis on which the print capabilities are reported."
    return:
      type: System.Printing.PrintCapabilities
      description: "A <xref href=&quot;System.Printing.PrintCapabilities&quot;></xref> object that specifies what the printer can and cannot do, such as two-sided coping or automatic stapling."
  overload: System.Printing.PrintQueue.GetPrintCapabilities*
  exceptions:
  - type: System.Printing.PrintQueueException
    commentId: T:System.Printing.PrintQueueException
    description: "The <xref href=&quot;System.Printing.PrintCapabilities&quot;></xref> object could not be retrieved."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>printTicket</code> is not well-formed."
  platform:
  - net462
- uid: System.Printing.PrintQueue.GetPrintCapabilitiesAsXml
  id: GetPrintCapabilitiesAsXml
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: GetPrintCapabilitiesAsXml()
  nameWithType: PrintQueue.GetPrintCapabilitiesAsXml()
  fullName: System.Printing.PrintQueue.GetPrintCapabilitiesAsXml()
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets a <xref:System.IO.MemoryStream> object that specifies the printer&quot;s capabilities as an XML stream that complies with the [Print Schema](http://go.microsoft.com/fwlink/?LinkId=186397)."
  syntax:
    content: public System.IO.MemoryStream GetPrintCapabilitiesAsXml ();
    parameters: []
    return:
      type: System.IO.MemoryStream
      description: "A <xref:System.IO.MemoryStream> specifying the printer&quot;s capabilities by using the XML schema &quot;PrintCapabilities,&quot; a part of the [Print Schema](http://go.microsoft.com/fwlink/?LinkId=186397) system."
  overload: System.Printing.PrintQueue.GetPrintCapabilitiesAsXml*
  exceptions:
  - type: System.Printing.PrintQueueException
    commentId: T:System.Printing.PrintQueueException
    description: "The print capabilities could not be retrieved."
  platform:
  - net462
- uid: System.Printing.PrintQueue.GetPrintCapabilitiesAsXml(System.Printing.PrintTicket)
  id: GetPrintCapabilitiesAsXml(System.Printing.PrintTicket)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: GetPrintCapabilitiesAsXml(PrintTicket)
  nameWithType: PrintQueue.GetPrintCapabilitiesAsXml(PrintTicket)
  fullName: System.Printing.PrintQueue.GetPrintCapabilitiesAsXml(PrintTicket)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets a <xref:System.IO.MemoryStream> object that specifies the printer&quot;s capabilities in an XML format that complies with the [Print Schema](http://go.microsoft.com/fwlink/?LinkId=186397)."
  remarks: "The <xref:System.Printing.PrintTicket> parameter is used as the basis on which to construct the print capabilities XML. For example, suppose the printer supported only media types A and B from input bin 1 and it only supported media type C from input bin 2. If the `printTicket` parameter specified input bin 1, then the print capabilities XML that is returned would include all three media types, but it would report type C as &quot;constrained.&quot; If the `printTicket` parameter specified input bin 2, then the print capabilities XML that is returned would include all three media types, but it would report types A and B as &quot;constrained.&quot; See the [Print Schema](http://go.microsoft.com/fwlink/?LinkId=186397) for more information on constraints.       If `printTicket` is `null`, the <xref:System.Printing.PrintQueue.UserPrintTicket%2A> is used."
  syntax:
    content: public System.IO.MemoryStream GetPrintCapabilitiesAsXml (System.Printing.PrintTicket printTicket);
    parameters:
    - id: printTicket
      type: System.Printing.PrintTicket
      description: "A print ticket that provides the basis on which the print capabilities are reported."
    return:
      type: System.IO.MemoryStream
      description: "A <xref:System.IO.MemoryStream> specifying the printer&quot;s capabilities by using the XML schema &quot;PrintCapabilities,&quot; a part of the [Print Schema](http://go.microsoft.com/fwlink/?LinkId=186397) system."
  overload: System.Printing.PrintQueue.GetPrintCapabilitiesAsXml*
  exceptions:
  - type: System.Printing.PrintQueueException
    commentId: T:System.Printing.PrintQueueException
    description: "The print capabilities could not be retrieved."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>printTicket</code> is not well-formed."
  platform:
  - net462
- uid: System.Printing.PrintQueue.GetPrintJobInfoCollection
  id: GetPrintJobInfoCollection
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: GetPrintJobInfoCollection()
  nameWithType: PrintQueue.GetPrintJobInfoCollection()
  fullName: System.Printing.PrintQueue.GetPrintJobInfoCollection()
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Creates a collection that contains a <xref href=&quot;System.Printing.PrintSystemJobInfo&quot;></xref> object for each job in the queue."
  remarks: ''
  example:
  - "The following example shows how to use this method when performing the same action on every job in a queue.  \n  \n [!code-cs[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/add/codesnippet/csharp/DiagnoseProblematicPrintJob/Program.cs#enumeratejobsinqueues)]\n [!code-cpp[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/add/codesnippet/cpp/diagnoseproblematicprintjob/Program.cpp#enumeratejobsinqueues)]\n [!code-vb[DiagnoseProblematicPrintJob#EnumerateJobsInQueues](~/add/codesnippet/visualbasic/diagnoseproblematicprintjob/program.vb#enumeratejobsinqueues)]"
  syntax:
    content: public System.Printing.PrintJobInfoCollection GetPrintJobInfoCollection ();
    parameters: []
    return:
      type: System.Printing.PrintJobInfoCollection
      description: "Returns a <xref href=&quot;System.Printing.PrintJobInfoCollection&quot;></xref> of <xref href=&quot;System.Printing.PrintSystemJobInfo&quot;></xref> objects. There is one for each job in the queue."
  overload: System.Printing.PrintQueue.GetPrintJobInfoCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.HasPaperProblem
  id: HasPaperProblem
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: HasPaperProblem
  nameWithType: PrintQueue.HasPaperProblem
  fullName: System.Printing.PrintQueue.HasPaperProblem
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets a value that indicates if the printer is having an unspecified paper problem."
  remarks: "If the printer does not support a signal with this meaning, then the property is always `false`.       The <xref:System.Printing.PrintQueue> object also has <xref:System.Printing.PrintQueue.IsPaperJammed%2A> and <xref:System.Printing.PrintQueue.IsOutOfPaper%2A> properties."
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool HasPaperProblem { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if there is an unspecified paper problem; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Printing.PrintQueue.HasPaperProblem*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.HasToner
  id: HasToner
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: HasToner
  nameWithType: PrintQueue.HasToner
  fullName: System.Printing.PrintQueue.HasToner
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets a value that indicates if the printer has toner."
  remarks: "Some printer manufacturers may use this signal to indicate that toner is not low. Others may use it to indicate that the toner cartridge is present and properly inserted while using <xref:System.Printing.PrintQueue.IsTonerLow%2A> to indicate that toner is low.       If the printer does not support a signal with this meaning, then the property is always `false`."
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool HasToner { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the current printer has toner; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Printing.PrintQueue.HasToner*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.HostingPrintServer
  id: HostingPrintServer
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: HostingPrintServer
  nameWithType: PrintQueue.HostingPrintServer
  fullName: System.Printing.PrintQueue.HostingPrintServer
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets or sets (protected) the print server that controls the print queue."
  remarks: "This property can be set only by a class that derives from <xref:System.Printing.PrintQueue> because the property&quot;s setter is `protected`."
  syntax:
    content: public virtual System.Printing.PrintServer HostingPrintServer { get; protected set; }
    return:
      type: System.Printing.PrintServer
      description: "The name and other properties of the <xref href=&quot;System.Printing.PrintServer&quot;></xref> that is hosting the print queue."
  overload: System.Printing.PrintQueue.HostingPrintServer*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.InPartialTrust
  id: InPartialTrust
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: InPartialTrust
  nameWithType: PrintQueue.InPartialTrust
  fullName: System.Printing.PrintQueue.InPartialTrust
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets or sets a value that indicates whether the queue is operating in a partially trusted mode, a higher level of trust."
  remarks: "When the InPartialTrust property is `true`, your program cannot create a <xref:System.Printing.PrintQueue> object that represents this printer unless the user has full printing permissions for the printer."
  syntax:
    content: public bool InPartialTrust { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the queue is operating in a partially trusted mode; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Printing.PrintQueue.InPartialTrust*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.InternalDispose(System.Boolean)
  id: InternalDispose(System.Boolean)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: InternalDispose(Boolean)
  nameWithType: PrintQueue.InternalDispose(Boolean)
  fullName: System.Printing.PrintQueue.InternalDispose(Boolean)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Releases the unmanaged resources used by the <xref href=&quot;System.Printing.PrintQueue&quot;></xref> and optionally releases the managed resources."
  syntax:
    content: protected override sealed void InternalDispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to release both managed and unmanaged resources; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to release only unmanaged resources."
  overload: System.Printing.PrintQueue.InternalDispose*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsBidiEnabled
  id: IsBidiEnabled
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsBidiEnabled
  nameWithType: PrintQueue.IsBidiEnabled
  fullName: System.Printing.PrintQueue.IsBidiEnabled
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets a value that indicates whether bidirectional communication with the printer is enabled."
  syntax:
    content: public bool IsBidiEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if bidirectional communication with the printer is enabled; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Printing.PrintQueue.IsBidiEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsBusy
  id: IsBusy
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsBusy
  nameWithType: PrintQueue.IsBusy
  fullName: System.Printing.PrintQueue.IsBusy
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets a value that indicates whether the printing device is busy."
  remarks: "Busy does not necessarily mean that it is processing a print job. If the device is a combination printer/fax/copier, then it might be faxing or copying. Compare with the <xref:System.Printing.PrintQueue.IsProcessing%2A> property.       If the device does not support a signal with this meaning, then the property is always `false`."
  syntax:
    content: public bool IsBusy { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the device is busy; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Printing.PrintQueue.IsBusy*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsDevQueryEnabled
  id: IsDevQueryEnabled
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsDevQueryEnabled
  nameWithType: PrintQueue.IsDevQueryEnabled
  fullName: System.Printing.PrintQueue.IsDevQueryEnabled
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets a value that indicates whether the queue holds documents when document and printer configurations do not match."
  syntax:
    content: public bool IsDevQueryEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the queue holds mismatched configurations; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Printing.PrintQueue.IsDevQueryEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsDirect
  id: IsDirect
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsDirect
  nameWithType: PrintQueue.IsDirect
  fullName: System.Printing.PrintQueue.IsDirect
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets a value that indicates whether the queue prints directly to the printer or spools documents first and then prints them."
  remarks: "This property can be set only through the Windows common print dialog."
  syntax:
    content: public bool IsDirect { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the queue prints directly to the printer; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Printing.PrintQueue.IsDirect*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsDoorOpened
  id: IsDoorOpened
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsDoorOpened
  nameWithType: PrintQueue.IsDoorOpened
  fullName: System.Printing.PrintQueue.IsDoorOpened
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets a value that indicates whether a door is open on the printer."
  remarks: "If the printer does not support a signal with this meaning, then the property is always `false`."
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool IsDoorOpened { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if a door is open; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Printing.PrintQueue.IsDoorOpened*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsHidden
  id: IsHidden
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsHidden
  nameWithType: PrintQueue.IsHidden
  fullName: System.Printing.PrintQueue.IsHidden
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets a value that indicates whether the print queue is hidden in your application&quot;s user interface."
  remarks: "You do not automatically hide the print queue when you set this property to `true`. Your program still must take steps to make sure it does not appear in any list of queues in the program&quot;s interface.       Print queues cannot be hidden in the Windows user interface, such as the Printers and Faxes list."
  syntax:
    content: public bool IsHidden { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the print queue is hidden in the Windows user interface; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Printing.PrintQueue.IsHidden*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsInError
  id: IsInError
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsInError
  nameWithType: PrintQueue.IsInError
  fullName: System.Printing.PrintQueue.IsInError
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets a value that indicates whether the printer or device is in an error condition."
  remarks: "If the printer does not support a signal with this meaning, then the property is always `false`."
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool IsInError { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the device is in an error condition; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Printing.PrintQueue.IsInError*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsInitializing
  id: IsInitializing
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsInitializing
  nameWithType: PrintQueue.IsInitializing
  fullName: System.Printing.PrintQueue.IsInitializing
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets a value that indicates whether the printer is initializing itself."
  remarks: "If the printer does not support a signal with this meaning, then the property is always `false`."
  syntax:
    content: public bool IsInitializing { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the printer is initializing; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Printing.PrintQueue.IsInitializing*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsIOActive
  id: IsIOActive
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsIOActive
  nameWithType: PrintQueue.IsIOActive
  fullName: System.Printing.PrintQueue.IsIOActive
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets a value that indicates whether the printer is receiving or sending data or signals."
  remarks: "If the printer does not support a signal with this meaning, then the property is always `false`."
  syntax:
    content: public bool IsIOActive { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the printer is receiving or sending; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Printing.PrintQueue.IsIOActive*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsManualFeedRequired
  id: IsManualFeedRequired
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsManualFeedRequired
  nameWithType: PrintQueue.IsManualFeedRequired
  fullName: System.Printing.PrintQueue.IsManualFeedRequired
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets a value that indicates whether the printer needs to be manually fed paper for the current print job."
  remarks: "If the printer does not support a signal with this meaning, then the property is always `false`."
  syntax:
    content: public bool IsManualFeedRequired { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the printer needs to be manually fed paper; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Printing.PrintQueue.IsManualFeedRequired*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsNotAvailable
  id: IsNotAvailable
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsNotAvailable
  nameWithType: PrintQueue.IsNotAvailable
  fullName: System.Printing.PrintQueue.IsNotAvailable
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets a value that indicates whether the printer is available."
  remarks: "If the printer does not support a signal with this meaning, then the property is always `false`."
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool IsNotAvailable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the printer is available; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Printing.PrintQueue.IsNotAvailable*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsOffline
  id: IsOffline
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsOffline
  nameWithType: PrintQueue.IsOffline
  fullName: System.Printing.PrintQueue.IsOffline
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets a value that indicates whether the printer is offline."
  remarks: "If the printer does not support a signal with this meaning, then the property is always `false`."
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool IsOffline { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the printer is offline; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Printing.PrintQueue.IsOffline*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsOutOfMemory
  id: IsOutOfMemory
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsOutOfMemory
  nameWithType: PrintQueue.IsOutOfMemory
  fullName: System.Printing.PrintQueue.IsOutOfMemory
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets a value that indicates whether the printer is out of memory."
  remarks: "If the printer does not support a signal with this meaning, then the property is always `false`."
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool IsOutOfMemory { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the printer is out of memory; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Printing.PrintQueue.IsOutOfMemory*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsOutOfPaper
  id: IsOutOfPaper
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsOutOfPaper
  nameWithType: PrintQueue.IsOutOfPaper
  fullName: System.Printing.PrintQueue.IsOutOfPaper
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets a value that indicates whether the printer needs to be reloaded with paper of the size required for the current job."
  remarks: "If the printer does not support a signal with this meaning, then the property is always `false`."
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool IsOutOfPaper { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the printer needs to be reloaded; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Printing.PrintQueue.IsOutOfPaper*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsOutputBinFull
  id: IsOutputBinFull
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsOutputBinFull
  nameWithType: PrintQueue.IsOutputBinFull
  fullName: System.Printing.PrintQueue.IsOutputBinFull
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets a value that indicates whether the output area of the printer is in danger of overflowing."
  remarks: "If the printer does not support a signal with this meaning, then the property is always `false`."
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool IsOutputBinFull { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the output area of the printer is full; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Printing.PrintQueue.IsOutputBinFull*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsPaperJammed
  id: IsPaperJammed
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsPaperJammed
  nameWithType: PrintQueue.IsPaperJammed
  fullName: System.Printing.PrintQueue.IsPaperJammed
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets a value that indicates whether the current sheet of paper is stuck in the printer."
  remarks: "If the printer does not support a signal with this meaning, then the property is always `false`."
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool IsPaperJammed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the paper is stuck; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Printing.PrintQueue.IsPaperJammed*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsPaused
  id: IsPaused
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsPaused
  nameWithType: PrintQueue.IsPaused
  fullName: System.Printing.PrintQueue.IsPaused
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets a value that indicates whether the print queue has been paused."
  remarks: "If the printer does not support a signal with this meaning, then the property is always `false`."
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool IsPaused { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the print queue has been paused; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Printing.PrintQueue.IsPaused*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsPendingDeletion
  id: IsPendingDeletion
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsPendingDeletion
  nameWithType: PrintQueue.IsPendingDeletion
  fullName: System.Printing.PrintQueue.IsPendingDeletion
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets a value that indicates whether the printer is in the process of deleting a print job."
  remarks: "If the printer does not support a signal with this meaning, then the property is always `false`."
  syntax:
    content: public bool IsPendingDeletion { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the printer is deleting a job; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Printing.PrintQueue.IsPendingDeletion*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsPowerSaveOn
  id: IsPowerSaveOn
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsPowerSaveOn
  nameWithType: PrintQueue.IsPowerSaveOn
  fullName: System.Printing.PrintQueue.IsPowerSaveOn
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets a value that indicates whether the printer is in power save mode."
  remarks: "If the printer does not support a signal with this meaning, then the property is always `false`."
  syntax:
    content: public bool IsPowerSaveOn { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the printer is in power save mode; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Printing.PrintQueue.IsPowerSaveOn*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsPrinting
  id: IsPrinting
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsPrinting
  nameWithType: PrintQueue.IsPrinting
  fullName: System.Printing.PrintQueue.IsPrinting
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets a value that indicates whether a job is printing."
  remarks: "If the printer does not support a signal with this meaning, then the property is always `false`."
  syntax:
    content: public bool IsPrinting { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if a job is printing; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Printing.PrintQueue.IsPrinting*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsProcessing
  id: IsProcessing
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsProcessing
  nameWithType: PrintQueue.IsProcessing
  fullName: System.Printing.PrintQueue.IsProcessing
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets a value that indicates whether the printer is processing a print job."
  remarks: "Some printer manufacturers support this signal instead of the less specific <xref:System.Printing.PrintQueue.IsBusy%2A>.       If the printer does not support a signal with this meaning, then the property is always `false`."
  syntax:
    content: public bool IsProcessing { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the printer is processing a print job; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Printing.PrintQueue.IsProcessing*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsPublished
  id: IsPublished
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsPublished
  nameWithType: PrintQueue.IsPublished
  fullName: System.Printing.PrintQueue.IsPublished
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets a value that indicates whether the printer is visible to other network users."
  syntax:
    content: public bool IsPublished { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the printer is visible to other network users; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Printing.PrintQueue.IsPublished*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsQueued
  id: IsQueued
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsQueued
  nameWithType: PrintQueue.IsQueued
  fullName: System.Printing.PrintQueue.IsQueued
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets a value that indicates whether the printer can support a queue with more than one print job in it at a time."
  remarks: "If the printer does not support a signal with this meaning, then the property is always `false`."
  syntax:
    content: public bool IsQueued { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the printer can support the queuing of multiple print jobs; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Printing.PrintQueue.IsQueued*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsRawOnlyEnabled
  id: IsRawOnlyEnabled
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsRawOnlyEnabled
  nameWithType: PrintQueue.IsRawOnlyEnabled
  fullName: System.Printing.PrintQueue.IsRawOnlyEnabled
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets a value that indicates whether the print queue can use EMF (Enhanced Meta File) that enables faster data flow from a printing application to the Windows spooler."
  syntax:
    content: public bool IsRawOnlyEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the printer cannot use EMF printing; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Printing.PrintQueue.IsRawOnlyEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsServerUnknown
  id: IsServerUnknown
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsServerUnknown
  nameWithType: PrintQueue.IsServerUnknown
  fullName: System.Printing.PrintQueue.IsServerUnknown
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets a value that indicates whether the printer is in an error state."
  remarks: "If the printer does not support a signal with this meaning, then the property is always `false`."
  syntax:
    content: public bool IsServerUnknown { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if in the printer is in an error state; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Printing.PrintQueue.IsServerUnknown*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsShared
  id: IsShared
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsShared
  nameWithType: PrintQueue.IsShared
  fullName: System.Printing.PrintQueue.IsShared
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets a value that indicates whether the printer is available for use by other computers on the network."
  remarks: "This property can only be set with the Windows common print dialog."
  syntax:
    content: public bool IsShared { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the printer is shared; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Printing.PrintQueue.IsShared*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsTonerLow
  id: IsTonerLow
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsTonerLow
  nameWithType: PrintQueue.IsTonerLow
  fullName: System.Printing.PrintQueue.IsTonerLow
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets a value that indicates whether the printer is running short of toner."
  remarks: "If the printer does not support a signal with this meaning, then the property is always `false`.       The <xref:System.Printing.PrintQueue> object also has a <xref:System.Printing.PrintQueue.HasToner%2A> property."
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool IsTonerLow { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the printer is running short of toner; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Printing.PrintQueue.IsTonerLow*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsWaiting
  id: IsWaiting
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsWaiting
  nameWithType: PrintQueue.IsWaiting
  fullName: System.Printing.PrintQueue.IsWaiting
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets a value that indicates whether the queue is waiting for a job to be added."
  remarks: "If the printer does not support a signal with this meaning, then the property is always `false`."
  syntax:
    content: public bool IsWaiting { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the queue is waiting for a job; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Printing.PrintQueue.IsWaiting*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsWarmingUp
  id: IsWarmingUp
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsWarmingUp
  nameWithType: PrintQueue.IsWarmingUp
  fullName: System.Printing.PrintQueue.IsWarmingUp
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets a value that indicates whether the printer is warming up."
  remarks: "If the printer does not support a signal with this meaning, then the property is always `false`."
  syntax:
    content: public bool IsWarmingUp { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the printer is warming up; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Printing.PrintQueue.IsWarmingUp*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.IsXpsDevice
  id: IsXpsDevice
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: IsXpsDevice
  nameWithType: PrintQueue.IsXpsDevice
  fullName: System.Printing.PrintQueue.IsXpsDevice
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets a value that indicates whether the printer&quot;s driver is built on the [Printing Overview](~/add/includes/ajax-current-ext-md.md) so it uses [!INCLUDE[TLA#tla_xps](~/add/includes/tlasharptla-xps-md.md)] as its page description language."
  remarks: "If the printer does not support a signal with this meaning, then the property is always `false`."
  syntax:
    content: public bool IsXpsDevice { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the printer uses the [Printing Overview](../Topic/Printing%20Overview.md); otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Printing.PrintQueue.IsXpsDevice*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.KeepPrintedJobs
  id: KeepPrintedJobs
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: KeepPrintedJobs
  nameWithType: PrintQueue.KeepPrintedJobs
  fullName: System.Printing.PrintQueue.KeepPrintedJobs
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets a value that indicates whether the queue is saving the printer language file instead of deleting it following printing."
  remarks: "If the printer does not support a signal with this meaning, then the property is always `false`."
  syntax:
    content: public bool KeepPrintedJobs { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the queue is saving the printer language file; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Printing.PrintQueue.KeepPrintedJobs*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.Location
  id: Location
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: Location
  nameWithType: PrintQueue.Location
  fullName: System.Printing.PrintQueue.Location
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets or sets the printer&quot;s physical location."
  remarks: ''
  example:
  - "The following example shows how to use this property to list a subset of available print queues.  \n  \n [!code-cs[EnumerateSubsetOfPrintQueues#ListSubsetOfPrintQueues](~/add/codesnippet/csharp/EnumerateSubsetOfPrintQueues/Program.cs#listsubsetofprintqueues)]\n [!code-vb[EnumerateSubsetOfPrintQueues#ListSubsetOfPrintQueues](~/add/codesnippet/visualbasic/enumeratesubsetofprintqueues/program.vb#listsubsetofprintqueues)]\n [!code-cpp[EnumerateSubsetOfPrintQueues#ListSubsetOfPrintQueues](~/add/codesnippet/cpp/enumeratesubsetofprintqueues/Program.cpp#listsubsetofprintqueues)]"
  syntax:
    content: public virtual string Location { get; set; }
    return:
      type: System.String
      description: "The printer&quot;s physical location."
  overload: System.Printing.PrintQueue.Location*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.MaxPrintSchemaVersion
  id: MaxPrintSchemaVersion
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: MaxPrintSchemaVersion
  nameWithType: PrintQueue.MaxPrintSchemaVersion
  fullName: System.Printing.PrintQueue.MaxPrintSchemaVersion
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets the most recent possible version number of the [Print Schema](http://go.microsoft.com/fwlink/?LinkId=186397) that the queue can use."
  remarks: "The version of the [Print Schema](http://go.microsoft.com/fwlink/?LinkId=186397) released with Windows Vista is 1."
  syntax:
    content: public static int MaxPrintSchemaVersion { get; }
    return:
      type: System.Int32
      description: "The most recent version number of the [Print Schema](http://go.microsoft.com/fwlink/?LinkId=186397) that the queue can use."
  overload: System.Printing.PrintQueue.MaxPrintSchemaVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket)
  id: MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: MergeAndValidatePrintTicket(PrintTicket,PrintTicket)
  nameWithType: PrintQueue.MergeAndValidatePrintTicket(PrintTicket,PrintTicket)
  fullName: System.Printing.PrintQueue.MergeAndValidatePrintTicket(PrintTicket,PrintTicket)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Merges two <xref href=&quot;System.Printing.PrintTicket&quot;></xref>s and guarantees that the resulting <xref href=&quot;System.Printing.PrintTicket&quot;></xref> is valid and does not ask for any printing functionality that the printer does not support."
  remarks: "The method produces a viable print ticket; that is, a ticket that does not request printing features that the printer does not support. The method first validates the two input print tickets against the [Print Schema](http://go.microsoft.com/fwlink/?LinkId=186397). If either is invalid, an exception is thrown.       The two tickets are then merged. If they have different values for a particular property then the resulting merged ticket initially uses the value of the delta ticket.       The merged ticket is then checked against the actual capabilities of the printer. If any settings in the ticket are incompatible with the printer&quot;s capabilities, then the printer driver changes those settings by using whatever logic it wants. Typically, it substitutes the user&quot;s or printer&quot;s default value for the setting. It the driver&quot;s source of substitute values is not the same ticket as `basePrintTicket`, then the merged ticket might have some settings that are different from both of the input tickets. If the printer driver has to change any settings then this fact is reported in the <xref:System.Printing.ValidationResult.ConflictStatus%2A> property of the <xref:System.Printing.ValidationResult>.       To merge and validate based on a print queue’s default settings, you should set `basePrintTicket` to the <xref:System.Printing.PrintQueue.DefaultPrintTicket%2A> or the <xref:System.Printing.PrintQueue.UserPrintTicket%2A>.       The `deltaPrintTicket` parameter can be `null`, in which case the `basePrintTicket` is validated, checked for viability, and returned, possibly with changes.       With this overload of MergeAndValidatePrintTicket, both the `deltaPrintTicket` and the <xref:System.Printing.PrintTicket> in the <xref:System.Printing.ValidationResult> that is returned have job wide scope. To specify a different scope use the other overload of this method."
  example:
  - "The following example shows how to use this method to merge two print tickets and respond to the <xref:System.Printing.ValidationResult> that is returned.  \n  \n [!code-vb[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/visualbasic/management_printticket/printticket.vb#usingmergeandvalidate)]\n [!code-cs[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/csharp/Management_PrintTicket/printticket.cs#usingmergeandvalidate)]"
  syntax:
    content: public System.Printing.ValidationResult MergeAndValidatePrintTicket (System.Printing.PrintTicket basePrintTicket, System.Printing.PrintTicket deltaPrintTicket);
    parameters:
    - id: basePrintTicket
      type: System.Printing.PrintTicket
      description: "The first print ticket."
    - id: deltaPrintTicket
      type: System.Printing.PrintTicket
      description: "The second print ticket. This can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Printing.ValidationResult
      description: "A <xref href=&quot;System.Printing.ValidationResult&quot;></xref> that includes the merged <xref href=&quot;System.Printing.PrintTicket&quot;></xref> and an indication of whether any of its settings had to be changed to guarantee viability."
  overload: System.Printing.PrintQueue.MergeAndValidatePrintTicket*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "At least one of the input print tickets is not valid."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>basePrintTicket</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Printing.PrintQueueException
    commentId: T:System.Printing.PrintQueueException
    description: "The validation, merger, and viability checking operation failed."
  platform:
  - net462
- uid: System.Printing.PrintQueue.MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket,System.Printing.PrintTicketScope)
  id: MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket,System.Printing.PrintTicketScope)
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: MergeAndValidatePrintTicket(PrintTicket,PrintTicket,PrintTicketScope)
  nameWithType: PrintQueue.MergeAndValidatePrintTicket(PrintTicket,PrintTicket,PrintTicketScope)
  fullName: System.Printing.PrintQueue.MergeAndValidatePrintTicket(PrintTicket,PrintTicket,PrintTicketScope)
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Merges two <xref href=&quot;System.Printing.PrintTicket&quot;></xref>s and guarantees that the resulting <xref href=&quot;System.Printing.PrintTicket&quot;></xref> is valid, does not ask for any printing functionality that the printer does not support, and is limited to the specified scope."
  remarks: "The method produces a viable print ticket; that is, a ticket that does not request printing features that the printer does not support. The method first validates the two input print tickets against the [Print Schema](http://go.microsoft.com/fwlink/?LinkId=186397). If either is invalid, an exception is thrown.       The two tickets are then merged. If they have different values for a particular property then the resulting merged ticket initially uses the value of the delta ticket.       The merged ticket is then checked against the actual capabilities of the printer. If any settings in the ticket are incompatible with the printer&quot;s capabilities, then the printer driver changes those settings by using whatever logic it wants. Typically, it substitutes the user&quot;s or printer&quot;s default value for the setting. It the driver&quot;s source of substitute values is not the same ticket as `basePrintTicket`, then the merged ticket might have some settings that are different from both of the input tickets. If the printer driver has to change any settings then this fact is reported in the <xref:System.Printing.ValidationResult.ConflictStatus%2A> property of the <xref:System.Printing.ValidationResult>.       To merge and validate based on a print queue’s default settings, you should set `basePrintTicket` to the <xref:System.Printing.PrintQueue.DefaultPrintTicket%2A> or the <xref:System.Printing.PrintQueue.UserPrintTicket%2A>.       The `deltaPrintTicket` parameter can be `null`, in which case the `basePrintTicket` is validated, checked for viability, and returned, possibly with changes.       If the `scope` is a job, then the print ticket returned in the <xref:System.Printing.ValidationResult> can include [Print Schema](http://go.microsoft.com/fwlink/?LinkId=186397) parameters with Job, Document, and Page prefixes. If the `scope` is a document, then per-job settings in `deltaPrintTicket` are ignored, and the returned ticket can include parameters with Document and Page prefixes. If the `scope` is a page, then the per-job settings and the per-document settings in `deltaPrintTicket` are ignored, and the returned ticket can include parameters with only the Page prefix."
  syntax:
    content: public System.Printing.ValidationResult MergeAndValidatePrintTicket (System.Printing.PrintTicket basePrintTicket, System.Printing.PrintTicket deltaPrintTicket, System.Printing.PrintTicketScope scope);
    parameters:
    - id: basePrintTicket
      type: System.Printing.PrintTicket
      description: "The first print ticket."
    - id: deltaPrintTicket
      type: System.Printing.PrintTicket
      description: "The second print ticket. This can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: scope
      type: System.Printing.PrintTicketScope
      description: "A value indicating whether the scope of `deltaPrintTicket`, and the scope of the print ticket returned in the <xref href=&quot;System.Printing.ValidationResult&quot;></xref>, is a page, a document, or the whole job."
    return:
      type: System.Printing.ValidationResult
      description: "A <xref href=&quot;System.Printing.ValidationResult&quot;></xref> that includes the merged <xref href=&quot;System.Printing.PrintTicket&quot;></xref> and an indication of whether any of its settings had to be changed to guarantee viability."
  overload: System.Printing.PrintQueue.MergeAndValidatePrintTicket*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "At least one of the input print tickets is not valid."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>basePrintTicket</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The <code>scope</code> parameter does not have a valid <xref href=&quot;System.Printing.PrintTicketScope&quot;></xref> value."
  - type: System.Printing.PrintQueueException
    commentId: T:System.Printing.PrintQueueException
    description: "The validation, merger, and viability checking operation failed."
  platform:
  - net462
- uid: System.Printing.PrintQueue.Name
  id: Name
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: Name
  nameWithType: PrintQueue.Name
  fullName: System.Printing.PrintQueue.Name
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets or sets the print queue&quot;s name."
  remarks: "The <xref:System.Printing.PrintQueue> object also has a read only <xref:System.Printing.PrintQueue.FullName%2A> property and a writeable <xref:System.Printing.PrintQueue.ShareName%2A> property.       For queues on the local print server, Name and <xref:System.Printing.PrintQueue.FullName%2A> are the same."
  example:
  - "The following example shows how to use this property to list a subset of available print queues.  \n  \n [!code-cs[EnumerateSubsetOfPrintQueues#ListSubsetOfPrintQueues](~/add/codesnippet/csharp/EnumerateSubsetOfPrintQueues/Program.cs#listsubsetofprintqueues)]\n [!code-vb[EnumerateSubsetOfPrintQueues#ListSubsetOfPrintQueues](~/add/codesnippet/visualbasic/enumeratesubsetofprintqueues/program.vb#listsubsetofprintqueues)]\n [!code-cpp[EnumerateSubsetOfPrintQueues#ListSubsetOfPrintQueues](~/add/codesnippet/cpp/enumeratesubsetofprintqueues/Program.cpp#listsubsetofprintqueues)]"
  syntax:
    content: public override sealed string Name { get; set; }
    return:
      type: System.String
      description: "The name of the print queue."
  overload: System.Printing.PrintQueue.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.NeedUserIntervention
  id: NeedUserIntervention
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: NeedUserIntervention
  nameWithType: PrintQueue.NeedUserIntervention
  fullName: System.Printing.PrintQueue.NeedUserIntervention
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets a value that indicates whether the printer needs the attention of a human being."
  remarks: "If the printer does not support a signal with this meaning, then the property is always `false`."
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueproperties)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueproperties)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueProperties](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueproperties)]"
  syntax:
    content: public bool NeedUserIntervention { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the printer needs human attention; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Printing.PrintQueue.NeedUserIntervention*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.NumberOfJobs
  id: NumberOfJobs
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: NumberOfJobs
  nameWithType: PrintQueue.NumberOfJobs
  fullName: System.Printing.PrintQueue.NumberOfJobs
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets the total number of jobs lined up in the print queue."
  syntax:
    content: public virtual int NumberOfJobs { get; }
    return:
      type: System.Int32
      description: "The number of jobs in the queue."
  overload: System.Printing.PrintQueue.NumberOfJobs*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.PagePunt
  id: PagePunt
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: PagePunt
  nameWithType: PrintQueue.PagePunt
  fullName: System.Printing.PrintQueue.PagePunt
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets a value that indicates whether the printer is unable to print the current page."
  remarks: "If the printer does not support a signal with this meaning, then the property is always `false`."
  syntax:
    content: public bool PagePunt { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the printer is unable to print the current page; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Printing.PrintQueue.PagePunt*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.Pause
  id: Pause
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: Pause()
  nameWithType: PrintQueue.Pause()
  fullName: System.Printing.PrintQueue.Pause()
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Pauses the print queue. It remains paused until <xref:System.Printing.PrintQueue.Resume*> is executed."
  syntax:
    content: public virtual void Pause ();
    parameters: []
  overload: System.Printing.PrintQueue.Pause*
  exceptions:
  - type: System.Printing.PrintSystemException
    commentId: T:System.Printing.PrintSystemException
    description: "The printer cannot be paused."
  platform:
  - net462
- uid: System.Printing.PrintQueue.PrintingIsCancelled
  id: PrintingIsCancelled
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: PrintingIsCancelled
  nameWithType: PrintQueue.PrintingIsCancelled
  fullName: System.Printing.PrintQueue.PrintingIsCancelled
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets or sets a value that indicates whether the current print job is being cancelled."
  syntax:
    content: public bool PrintingIsCancelled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the print job is being cancelled; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Printing.PrintQueue.PrintingIsCancelled*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.Priority
  id: Priority
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: Priority
  nameWithType: PrintQueue.Priority
  fullName: System.Printing.PrintQueue.Priority
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets or sets the priority of the print queue relative to other print queues that are hosted by the same print server and that use the same physical printer."
  remarks: "Contrast this property with the <xref:System.Printing.PrintQueue.DefaultPriority%2A> property which is about the relative priority of print jobs in the queue."
  syntax:
    content: public virtual int Priority { get; set; }
    return:
      type: System.Int32
      description: "The priority for the print queue. Possible values are from 1 through 99. The default is 1."
  overload: System.Printing.PrintQueue.Priority*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.Purge
  id: Purge
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: Purge()
  nameWithType: PrintQueue.Purge()
  fullName: System.Printing.PrintQueue.Purge()
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Removes all the jobs in the print queue."
  syntax:
    content: public virtual void Purge ();
    parameters: []
  overload: System.Printing.PrintQueue.Purge*
  exceptions:
  - type: System.Printing.PrintSystemException
    commentId: T:System.Printing.PrintSystemException
    description: "Some print jobs could not be removed from the queue."
  platform:
  - net462
- uid: System.Printing.PrintQueue.QueueAttributes
  id: QueueAttributes
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: QueueAttributes
  nameWithType: PrintQueue.QueueAttributes
  fullName: System.Printing.PrintQueue.QueueAttributes
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets the properties of the print queue."
  syntax:
    content: public System.Printing.PrintQueueAttributes QueueAttributes { get; }
    return:
      type: System.Printing.PrintQueueAttributes
      description: "A bitwise combination of the <xref href=&quot;System.Printing.PrintQueueAttributes&quot;></xref> enumeration values."
  overload: System.Printing.PrintQueue.QueueAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.QueueDriver
  id: QueueDriver
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: QueueDriver
  nameWithType: PrintQueue.QueueDriver
  fullName: System.Printing.PrintQueue.QueueDriver
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets or sets the printer driver for the queue."
  syntax:
    content: public virtual System.Printing.PrintDriver QueueDriver { get; set; }
    return:
      type: System.Printing.PrintDriver
      description: "The <xref href=&quot;System.Printing.PrintDriver&quot;></xref> that the queue uses."
  overload: System.Printing.PrintQueue.QueueDriver*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.QueuePort
  id: QueuePort
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: QueuePort
  nameWithType: PrintQueue.QueuePort
  fullName: System.Printing.PrintQueue.QueuePort
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets or sets the port that the queue uses."
  syntax:
    content: public virtual System.Printing.PrintPort QueuePort { get; set; }
    return:
      type: System.Printing.PrintPort
      description: "The <xref href=&quot;System.Printing.PrintPort&quot;></xref> that is assigned to the print queue."
  overload: System.Printing.PrintQueue.QueuePort*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.QueuePrintProcessor
  id: QueuePrintProcessor
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: QueuePrintProcessor
  nameWithType: PrintQueue.QueuePrintProcessor
  fullName: System.Printing.PrintQueue.QueuePrintProcessor
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets or sets the print processor that the queue uses."
  syntax:
    content: public virtual System.Printing.PrintProcessor QueuePrintProcessor { get; set; }
    return:
      type: System.Printing.PrintProcessor
      description: "The <xref href=&quot;System.Printing.PrintProcessor&quot;></xref> that the queue uses, such as WinPrint or ModiPrint."
  overload: System.Printing.PrintQueue.QueuePrintProcessor*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.QueueStatus
  id: QueueStatus
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: QueueStatus
  nameWithType: PrintQueue.QueueStatus
  fullName: System.Printing.PrintQueue.QueueStatus
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets a value that represents the status of the printer. These include &quot;warming up,&quot; &quot;initializing,&quot; &quot;printing,&quot; and others."
  remarks: ''
  example:
  - "The following example shows how to use this property as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SpotTroubleUsingQueueAttributes](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#spottroubleusingqueueattributes)]\n [!code-vb[PrinterStatusSurvey#SpotTroubleUsingQueueAttributes](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#spottroubleusingqueueattributes)]\n [!code-cs[PrinterStatusSurvey#SpotTroubleUsingQueueAttributes](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#spottroubleusingqueueattributes)]"
  syntax:
    content: public System.Printing.PrintQueueStatus QueueStatus { get; }
    return:
      type: System.Printing.PrintQueueStatus
      description: "The current <xref href=&quot;System.Printing.PrintQueueStatus&quot;></xref> value."
  overload: System.Printing.PrintQueue.QueueStatus*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.Refresh
  id: Refresh
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: Refresh()
  nameWithType: PrintQueue.Refresh()
  fullName: System.Printing.PrintQueue.Refresh()
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Updates the properties of the <xref href=&quot;System.Printing.PrintQueue&quot;></xref> object with values from the printer and the print queue utility that runs on the computer."
  remarks: "Changes your program makes to a <xref:System.Printing.PrintQueue> object&quot;s properties are lost when Refresh executes, unless they have been written to the printer and print queue with <xref:System.Printing.PrintQueue.Commit%2A>."
  example:
  - "The following example shows how to use this method as part of a survey all printers for possible error status.  \n  \n [!code-cpp[PrinterStatusSurvey#SurveyQueues](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#surveyqueues)]\n [!code-vb[PrinterStatusSurvey#SurveyQueues](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#surveyqueues)]\n [!code-cs[PrinterStatusSurvey#SurveyQueues](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#surveyqueues)]"
  syntax:
    content: public override void Refresh ();
    parameters: []
  overload: System.Printing.PrintQueue.Refresh*
  exceptions:
  - type: System.Printing.PrintSystemException
    commentId: T:System.Printing.PrintSystemException
    description: "Some of the properties could not be refreshed."
  platform:
  - net462
- uid: System.Printing.PrintQueue.Resume
  id: Resume
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: Resume()
  nameWithType: PrintQueue.Resume()
  fullName: System.Printing.PrintQueue.Resume()
  type: Method
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Restarts a print queue that was paused."
  remarks: ''
  example:
  - "The following example shows how to use this method to resume a paused print queue.  \n  \n [!code-cs[DiagnoseProblematicPrintJob#HandlePausedJob](~/add/codesnippet/csharp/DiagnoseProblematicPrintJob/Program.cs#handlepausedjob)]\n [!code-cpp[DiagnoseProblematicPrintJob#HandlePausedJob](~/add/codesnippet/cpp/diagnoseproblematicprintjob/Program.cpp#handlepausedjob)]\n [!code-vb[DiagnoseProblematicPrintJob#HandlePausedJob](~/add/codesnippet/visualbasic/diagnoseproblematicprintjob/program.vb#handlepausedjob)]"
  syntax:
    content: public virtual void Resume ();
    parameters: []
  overload: System.Printing.PrintQueue.Resume*
  exceptions:
  - type: System.Printing.PrintSystemException
    commentId: T:System.Printing.PrintSystemException
    description: "The printer cannot resume."
  platform:
  - net462
- uid: System.Printing.PrintQueue.ScheduleCompletedJobsFirst
  id: ScheduleCompletedJobsFirst
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: ScheduleCompletedJobsFirst
  nameWithType: PrintQueue.ScheduleCompletedJobsFirst
  fullName: System.Printing.PrintQueue.ScheduleCompletedJobsFirst
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets a value that indicates whether the printer prints jobs that have completed the spooling process before jobs that have not fully spooled even if the latter entered the queue first or have a higher priority."
  syntax:
    content: public bool ScheduleCompletedJobsFirst { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the printer prints jobs that have completed the spooling process before jobs that have not fully spooled; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Printing.PrintQueue.ScheduleCompletedJobsFirst*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.SeparatorFile
  id: SeparatorFile
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: SeparatorFile
  nameWithType: PrintQueue.SeparatorFile
  fullName: System.Printing.PrintQueue.SeparatorFile
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets or sets the path and file name of a file that is inserted at the beginning of each print job."
  remarks: "This is normally a single-page file used to make it easier to separate the output of different print jobs."
  syntax:
    content: public virtual string SeparatorFile { get; set; }
    return:
      type: System.String
      description: "The path and file name of the separator file."
  overload: System.Printing.PrintQueue.SeparatorFile*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.ShareName
  id: ShareName
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: ShareName
  nameWithType: PrintQueue.ShareName
  fullName: System.Printing.PrintQueue.ShareName
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets or sets a name for the printer that is seen by users on the network when it is shared."
  remarks: "The <xref:System.Printing.PrintQueue> object also has a read only <xref:System.Printing.PrintQueue.FullName%2A> property and a writeable <xref:System.Printing.PrintQueue.Name%2A> property. For queues on the local print server, these properties have the same value."
  syntax:
    content: public virtual string ShareName { get; set; }
    return:
      type: System.String
      description: "The public name of a shared printer."
  overload: System.Printing.PrintQueue.ShareName*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.StartTimeOfDay
  id: StartTimeOfDay
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: StartTimeOfDay
  nameWithType: PrintQueue.StartTimeOfDay
  fullName: System.Printing.PrintQueue.StartTimeOfDay
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets or sets the earliest time of day, expressed as the number of minutes after midnight Coordinated Universal Time (UTC) (also called Greenwich Mean Time [GMT]), that the printer will print a job."
  remarks: "If you are not in the UTC time zone, you must add or subtract multiples of 60 to set or get the correct time for your time zone. For example, if you are in the Pacific Time Zone of North America and daylight savings time is not in effect, then your local time is 8 hours earlier than UTC. To set StartTimeOfDay to 12 AM in your time zone, you set it to 8 AM UTC, which is 480 (= 8 * 60). You also must remember that time rolls over to zero after 24 hours (that is; after the 1439th minute). To set it to 6 PM in your time zone, you set it to 2 AM UTC, which is 120 (= 2 \\* 60). See <xref:System.TimeZone>, <xref:System.TimeSpan>, and <xref:System.DateTime> classes for helpful time zone manipulating methods.  \n  \n If the printer is always available, then this property returns 0 in all time zones."
  example:
  - "The following example shows how to use this property to determine whether a printer is available at the present time.  \n  \n [!code-cpp[PrinterStatusSurvey#UsingStartAndUntilTimes](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#usingstartanduntiltimes)]\n [!code-vb[PrinterStatusSurvey#UsingStartAndUntilTimes](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#usingstartanduntiltimes)]\n [!code-cs[PrinterStatusSurvey#UsingStartAndUntilTimes](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#usingstartanduntiltimes)]"
  syntax:
    content: public virtual int StartTimeOfDay { get; set; }
    return:
      type: System.Int32
      description: "The time of day that the printer first becomes available, expressed as the number of minutes after midnight (UTC). The maximum value is 1439. When a printer is first installed by using the [!INCLUDE[TLA#tla_win](~/add/includes/ajax-current-ext-md.md)] Add Printer Wizard, the printer defaults to being available all the time, and this property returns 0 in all time zones."
  overload: System.Printing.PrintQueue.StartTimeOfDay*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.UntilTimeOfDay
  id: UntilTimeOfDay
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: UntilTimeOfDay
  nameWithType: PrintQueue.UntilTimeOfDay
  fullName: System.Printing.PrintQueue.UntilTimeOfDay
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets or sets the latest time, expressed as the number of minutes after midnight Coordinated Universal Time (UTC) (also called Greenwich Mean Time [GMT]), that the printer will print a job."
  remarks: "If you are not in the UTC time zone, you must add or subtract multiples of 60 to set or get the correct time for your time zone. For example, if you are in the Pacific Time Zone of North America and daylight savings time is not in effect, then your local time is 8 hours earlier than UTC. To set UntilTimeOfDay to 12 AM in your time zone, you set it to 8 AM UTC, which is 480 (= 8 * 60). You also must remember that time rolls over to zero after the 24th hour (the 1439th minute). To set it to 6 PM in your time zone, you set it to 2 AM UTC, which is 120 (= 2 \\* 60). See <xref:System.TimeZone>, <xref:System.TimeSpan>, and <xref:System.DateTime> classes for helpful time zone manipulating methods.  \n  \n If the printer is always available, then this property returns 0 in all time zones."
  example:
  - "The following example shows how to use this property to determine whether a printer is available at the present time.  \n  \n [!code-cpp[PrinterStatusSurvey#UsingStartAndUntilTimes](~/add/codesnippet/cpp/printerstatussurvey/Program.cpp#usingstartanduntiltimes)]\n [!code-vb[PrinterStatusSurvey#UsingStartAndUntilTimes](~/add/codesnippet/visualbasic/printerstatussurvey/program.vb#usingstartanduntiltimes)]\n [!code-cs[PrinterStatusSurvey#UsingStartAndUntilTimes](~/add/codesnippet/csharp/PrinterStatusSurvey/Program.cs#usingstartanduntiltimes)]"
  syntax:
    content: public virtual int UntilTimeOfDay { get; set; }
    return:
      type: System.Int32
      description: "The time of day that the printer is no longer available, expressed as the number of minutes after midnight (UTC). The maximum value is 1439. When a printer is first installed by using the [!INCLUDE[TLA#tla_win](~/add/includes/ajax-current-ext-md.md)] Add Printer Wizard, the printer defaults to being available all the time, and this property returns 0 in all time zones."
  overload: System.Printing.PrintQueue.UntilTimeOfDay*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.PrintQueue.UserPrintTicket
  id: UserPrintTicket
  parent: System.Printing.PrintQueue
  langs:
  - csharp
  name: UserPrintTicket
  nameWithType: PrintQueue.UserPrintTicket
  fullName: System.Printing.PrintQueue.UserPrintTicket
  type: Property
  assemblies:
  - System.Printing
  namespace: System.Printing
  summary: "Gets or sets the current user&quot;s default <xref href=&quot;System.Printing.PrintTicket&quot;></xref> object which contains detailed information about the print job."
  remarks: "Each user can have his or her own default <xref:System.Printing.PrintTicket>.       This property can be `null`."
  example:
  - "The following example shows how to use this property while merging two print tickets.  \n  \n [!code-vb[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/visualbasic/management_printticket/printticket.vb#usingmergeandvalidate)]\n [!code-cs[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/csharp/Management_PrintTicket/printticket.cs#usingmergeandvalidate)]"
  syntax:
    content: public virtual System.Printing.PrintTicket UserPrintTicket { get; set; }
    return:
      type: System.Printing.PrintTicket
      description: "The <xref href=&quot;System.Printing.PrintTicket&quot;></xref> for the current user, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if a user <xref href=&quot;System.Printing.PrintTicket&quot;></xref> has not been specified."
  overload: System.Printing.PrintQueue.UserPrintTicket*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Printing.PrintSystemObject
  isExternal: false
  name: System.Printing.PrintSystemObject
- uid: System.Printing.PrintQueueException
  parent: System.Printing
  isExternal: false
  name: PrintQueueException
  nameWithType: PrintQueueException
  fullName: System.Printing.PrintQueueException
- uid: System.Printing.PrintSystemException
  parent: System.Printing
  isExternal: false
  name: PrintSystemException
  nameWithType: PrintSystemException
  fullName: System.Printing.PrintSystemException
- uid: System.Printing.PrintCommitAttributesException
  parent: System.Printing
  isExternal: false
  name: PrintCommitAttributesException
  nameWithType: PrintCommitAttributesException
  fullName: System.Printing.PrintCommitAttributesException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PrintQueue(PrintServer,String)
  nameWithType: PrintQueue.PrintQueue(PrintServer,String)
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String)
- uid: System.Printing.PrintServer
  parent: System.Printing
  isExternal: false
  name: PrintServer
  nameWithType: PrintServer
  fullName: System.Printing.PrintServer
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Int32)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PrintQueue(PrintServer,String,Int32)
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,Int32)
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintQueueIndexedProperty[])
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PrintQueue(PrintServer,String,PrintQueueIndexedProperty[])
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,PrintQueueIndexedProperty[])
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,PrintQueueIndexedProperty[])
- uid: System.Printing.PrintQueueIndexedProperty[]
  parent: System.Printing
  isExternal: false
  name: PrintQueueIndexedProperty
  nameWithType: PrintQueueIndexedProperty
  fullName: System.Printing.PrintQueueIndexedProperty[]
  spec.csharp:
  - uid: System.Printing.PrintQueueIndexedProperty
    name: PrintQueueIndexedProperty
    nameWithType: PrintQueueIndexedProperty
    fullName: PrintQueueIndexedProperty[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintSystemDesiredAccess)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PrintQueue(PrintServer,String,PrintSystemDesiredAccess)
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,PrintSystemDesiredAccess)
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,PrintSystemDesiredAccess)
- uid: System.Printing.PrintSystemDesiredAccess
  parent: System.Printing
  isExternal: false
  name: PrintSystemDesiredAccess
  nameWithType: PrintSystemDesiredAccess
  fullName: System.Printing.PrintSystemDesiredAccess
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.String[])
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PrintQueue(PrintServer,String,String[])
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,String[])
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Int32,System.Printing.PrintSystemDesiredAccess)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PrintQueue(PrintServer,String,Int32,PrintSystemDesiredAccess)
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,Int32,PrintSystemDesiredAccess)
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,Int32,PrintSystemDesiredAccess)
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.Printing.PrintQueueIndexedProperty[],System.Printing.PrintSystemDesiredAccess)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PrintQueue(PrintServer,String,PrintQueueIndexedProperty[],PrintSystemDesiredAccess)
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,PrintQueueIndexedProperty[],PrintSystemDesiredAccess)
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,PrintQueueIndexedProperty[],PrintSystemDesiredAccess)
- uid: System.Printing.PrintQueue.#ctor(System.Printing.PrintServer,System.String,System.String[],System.Printing.PrintSystemDesiredAccess)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PrintQueue(PrintServer,String,String[],PrintSystemDesiredAccess)
  nameWithType: PrintQueue.PrintQueue(PrintServer,String,String[],PrintSystemDesiredAccess)
  fullName: System.Printing.PrintQueue.PrintQueue(PrintServer,String,String[],PrintSystemDesiredAccess)
- uid: System.Printing.PrintQueue.AddJob
  parent: System.Printing.PrintQueue
  isExternal: false
  name: AddJob()
  nameWithType: PrintQueue.AddJob()
  fullName: System.Printing.PrintQueue.AddJob()
- uid: System.Printing.PrintSystemJobInfo
  parent: System.Printing
  isExternal: false
  name: PrintSystemJobInfo
  nameWithType: PrintSystemJobInfo
  fullName: System.Printing.PrintSystemJobInfo
- uid: System.Printing.PrintQueue.AddJob(System.String)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: AddJob(String)
  nameWithType: PrintQueue.AddJob(String)
  fullName: System.Printing.PrintQueue.AddJob(String)
- uid: System.Printing.PrintQueue.AddJob(System.String,System.Printing.PrintTicket)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: AddJob(String,PrintTicket)
  nameWithType: PrintQueue.AddJob(String,PrintTicket)
  fullName: System.Printing.PrintQueue.AddJob(String,PrintTicket)
- uid: System.Printing.PrintTicket
  parent: System.Printing
  isExternal: false
  name: PrintTicket
  nameWithType: PrintTicket
  fullName: System.Printing.PrintTicket
- uid: System.Printing.PrintQueue.AddJob(System.String,System.String,System.Boolean)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: AddJob(String,String,Boolean)
  nameWithType: PrintQueue.AddJob(String,String,Boolean)
  fullName: System.Printing.PrintQueue.AddJob(String,String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Printing.PrintQueue.AddJob(System.String,System.String,System.Boolean,System.Printing.PrintTicket)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: AddJob(String,String,Boolean,PrintTicket)
  nameWithType: PrintQueue.AddJob(String,String,Boolean,PrintTicket)
  fullName: System.Printing.PrintQueue.AddJob(String,String,Boolean,PrintTicket)
- uid: System.Printing.PrintQueue.AveragePagesPerMinute
  parent: System.Printing.PrintQueue
  isExternal: false
  name: AveragePagesPerMinute
  nameWithType: PrintQueue.AveragePagesPerMinute
  fullName: System.Printing.PrintQueue.AveragePagesPerMinute
- uid: System.Printing.PrintQueue.ClientPrintSchemaVersion
  parent: System.Printing.PrintQueue
  isExternal: false
  name: ClientPrintSchemaVersion
  nameWithType: PrintQueue.ClientPrintSchemaVersion
  fullName: System.Printing.PrintQueue.ClientPrintSchemaVersion
- uid: System.Printing.PrintQueue.Comment
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Comment
  nameWithType: PrintQueue.Comment
  fullName: System.Printing.PrintQueue.Comment
- uid: System.Printing.PrintQueue.Commit
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Commit()
  nameWithType: PrintQueue.Commit()
  fullName: System.Printing.PrintQueue.Commit()
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Printing.PrintDocumentImageableArea@)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: CreateXpsDocumentWriter(PrintDocumentImageableArea)
  nameWithType: PrintQueue.CreateXpsDocumentWriter(PrintDocumentImageableArea)
  fullName: System.Printing.PrintQueue.CreateXpsDocumentWriter(PrintDocumentImageableArea)
- uid: System.Windows.Xps.XpsDocumentWriter
  parent: System.Windows.Xps
  isExternal: false
  name: XpsDocumentWriter
  nameWithType: XpsDocumentWriter
  fullName: System.Windows.Xps.XpsDocumentWriter
- uid: System.Printing.PrintDocumentImageableArea
  parent: System.Printing
  isExternal: false
  name: PrintDocumentImageableArea
  nameWithType: PrintDocumentImageableArea
  fullName: System.Printing.PrintDocumentImageableArea
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Printing.PrintQueue)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: CreateXpsDocumentWriter(PrintQueue)
  nameWithType: PrintQueue.CreateXpsDocumentWriter(PrintQueue)
  fullName: System.Printing.PrintQueue.CreateXpsDocumentWriter(PrintQueue)
- uid: System.Printing.PrintQueue
  parent: System.Printing
  isExternal: false
  name: PrintQueue
  nameWithType: PrintQueue
  fullName: System.Printing.PrintQueue
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Double@,System.Double@)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: CreateXpsDocumentWriter(Double,Double)
  nameWithType: PrintQueue.CreateXpsDocumentWriter(Double,Double)
  fullName: System.Printing.PrintQueue.CreateXpsDocumentWriter(Double,Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter(System.String,System.Printing.PrintDocumentImageableArea@)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: CreateXpsDocumentWriter(String,PrintDocumentImageableArea)
  nameWithType: PrintQueue.CreateXpsDocumentWriter(String,PrintDocumentImageableArea)
  fullName: System.Printing.PrintQueue.CreateXpsDocumentWriter(String,PrintDocumentImageableArea)
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter(System.Printing.PrintDocumentImageableArea@,System.Windows.Controls.PageRangeSelection@,System.Windows.Controls.PageRange@)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: CreateXpsDocumentWriter(PrintDocumentImageableArea,PageRangeSelection,PageRange)
  nameWithType: PrintQueue.CreateXpsDocumentWriter(PrintDocumentImageableArea,PageRangeSelection,PageRange)
  fullName: System.Printing.PrintQueue.CreateXpsDocumentWriter(PrintDocumentImageableArea,PageRangeSelection,PageRange)
- uid: System.Windows.Controls.PageRangeSelection
  parent: System.Windows.Controls
  isExternal: false
  name: PageRangeSelection
  nameWithType: PageRangeSelection
  fullName: System.Windows.Controls.PageRangeSelection
- uid: System.Windows.Controls.PageRange
  parent: System.Windows.Controls
  isExternal: false
  name: PageRange
  nameWithType: PageRange
  fullName: System.Windows.Controls.PageRange
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter(System.String,System.Printing.PrintDocumentImageableArea@,System.Windows.Controls.PageRangeSelection@,System.Windows.Controls.PageRange@)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: CreateXpsDocumentWriter(String,PrintDocumentImageableArea,PageRangeSelection,PageRange)
  nameWithType: PrintQueue.CreateXpsDocumentWriter(String,PrintDocumentImageableArea,PageRangeSelection,PageRange)
  fullName: System.Printing.PrintQueue.CreateXpsDocumentWriter(String,PrintDocumentImageableArea,PageRangeSelection,PageRange)
- uid: System.Printing.PrintQueue.CurrentJobSettings
  parent: System.Printing.PrintQueue
  isExternal: false
  name: CurrentJobSettings
  nameWithType: PrintQueue.CurrentJobSettings
  fullName: System.Printing.PrintQueue.CurrentJobSettings
- uid: System.Printing.PrintJobSettings
  parent: System.Printing
  isExternal: false
  name: PrintJobSettings
  nameWithType: PrintJobSettings
  fullName: System.Printing.PrintJobSettings
- uid: System.Printing.PrintQueue.DefaultPrintTicket
  parent: System.Printing.PrintQueue
  isExternal: false
  name: DefaultPrintTicket
  nameWithType: PrintQueue.DefaultPrintTicket
  fullName: System.Printing.PrintQueue.DefaultPrintTicket
- uid: System.Printing.PrintQueue.DefaultPriority
  parent: System.Printing.PrintQueue
  isExternal: false
  name: DefaultPriority
  nameWithType: PrintQueue.DefaultPriority
  fullName: System.Printing.PrintQueue.DefaultPriority
- uid: System.Printing.PrintQueue.Description
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Description
  nameWithType: PrintQueue.Description
  fullName: System.Printing.PrintQueue.Description
- uid: System.Printing.PrintQueue.FullName
  parent: System.Printing.PrintQueue
  isExternal: false
  name: FullName
  nameWithType: PrintQueue.FullName
  fullName: System.Printing.PrintQueue.FullName
- uid: System.Printing.PrintQueue.GetJob(System.Int32)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: GetJob(Int32)
  nameWithType: PrintQueue.GetJob(Int32)
  fullName: System.Printing.PrintQueue.GetJob(Int32)
- uid: System.Printing.PrintQueue.GetPrintCapabilities
  parent: System.Printing.PrintQueue
  isExternal: false
  name: GetPrintCapabilities()
  nameWithType: PrintQueue.GetPrintCapabilities()
  fullName: System.Printing.PrintQueue.GetPrintCapabilities()
- uid: System.Printing.PrintCapabilities
  parent: System.Printing
  isExternal: false
  name: PrintCapabilities
  nameWithType: PrintCapabilities
  fullName: System.Printing.PrintCapabilities
- uid: System.Printing.PrintQueue.GetPrintCapabilities(System.Printing.PrintTicket)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: GetPrintCapabilities(PrintTicket)
  nameWithType: PrintQueue.GetPrintCapabilities(PrintTicket)
  fullName: System.Printing.PrintQueue.GetPrintCapabilities(PrintTicket)
- uid: System.Printing.PrintQueue.GetPrintCapabilitiesAsXml
  parent: System.Printing.PrintQueue
  isExternal: false
  name: GetPrintCapabilitiesAsXml()
  nameWithType: PrintQueue.GetPrintCapabilitiesAsXml()
  fullName: System.Printing.PrintQueue.GetPrintCapabilitiesAsXml()
- uid: System.IO.MemoryStream
  parent: System.IO
  isExternal: true
  name: MemoryStream
  nameWithType: MemoryStream
  fullName: System.IO.MemoryStream
- uid: System.Printing.PrintQueue.GetPrintCapabilitiesAsXml(System.Printing.PrintTicket)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: GetPrintCapabilitiesAsXml(PrintTicket)
  nameWithType: PrintQueue.GetPrintCapabilitiesAsXml(PrintTicket)
  fullName: System.Printing.PrintQueue.GetPrintCapabilitiesAsXml(PrintTicket)
- uid: System.Printing.PrintQueue.GetPrintJobInfoCollection
  parent: System.Printing.PrintQueue
  isExternal: false
  name: GetPrintJobInfoCollection()
  nameWithType: PrintQueue.GetPrintJobInfoCollection()
  fullName: System.Printing.PrintQueue.GetPrintJobInfoCollection()
- uid: System.Printing.PrintJobInfoCollection
  parent: System.Printing
  isExternal: false
  name: PrintJobInfoCollection
  nameWithType: PrintJobInfoCollection
  fullName: System.Printing.PrintJobInfoCollection
- uid: System.Printing.PrintQueue.HasPaperProblem
  parent: System.Printing.PrintQueue
  isExternal: false
  name: HasPaperProblem
  nameWithType: PrintQueue.HasPaperProblem
  fullName: System.Printing.PrintQueue.HasPaperProblem
- uid: System.Printing.PrintQueue.HasToner
  parent: System.Printing.PrintQueue
  isExternal: false
  name: HasToner
  nameWithType: PrintQueue.HasToner
  fullName: System.Printing.PrintQueue.HasToner
- uid: System.Printing.PrintQueue.HostingPrintServer
  parent: System.Printing.PrintQueue
  isExternal: false
  name: HostingPrintServer
  nameWithType: PrintQueue.HostingPrintServer
  fullName: System.Printing.PrintQueue.HostingPrintServer
- uid: System.Printing.PrintQueue.InPartialTrust
  parent: System.Printing.PrintQueue
  isExternal: false
  name: InPartialTrust
  nameWithType: PrintQueue.InPartialTrust
  fullName: System.Printing.PrintQueue.InPartialTrust
- uid: System.Printing.PrintQueue.InternalDispose(System.Boolean)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: InternalDispose(Boolean)
  nameWithType: PrintQueue.InternalDispose(Boolean)
  fullName: System.Printing.PrintQueue.InternalDispose(Boolean)
- uid: System.Printing.PrintQueue.IsBidiEnabled
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsBidiEnabled
  nameWithType: PrintQueue.IsBidiEnabled
  fullName: System.Printing.PrintQueue.IsBidiEnabled
- uid: System.Printing.PrintQueue.IsBusy
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsBusy
  nameWithType: PrintQueue.IsBusy
  fullName: System.Printing.PrintQueue.IsBusy
- uid: System.Printing.PrintQueue.IsDevQueryEnabled
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsDevQueryEnabled
  nameWithType: PrintQueue.IsDevQueryEnabled
  fullName: System.Printing.PrintQueue.IsDevQueryEnabled
- uid: System.Printing.PrintQueue.IsDirect
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsDirect
  nameWithType: PrintQueue.IsDirect
  fullName: System.Printing.PrintQueue.IsDirect
- uid: System.Printing.PrintQueue.IsDoorOpened
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsDoorOpened
  nameWithType: PrintQueue.IsDoorOpened
  fullName: System.Printing.PrintQueue.IsDoorOpened
- uid: System.Printing.PrintQueue.IsHidden
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsHidden
  nameWithType: PrintQueue.IsHidden
  fullName: System.Printing.PrintQueue.IsHidden
- uid: System.Printing.PrintQueue.IsInError
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsInError
  nameWithType: PrintQueue.IsInError
  fullName: System.Printing.PrintQueue.IsInError
- uid: System.Printing.PrintQueue.IsInitializing
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsInitializing
  nameWithType: PrintQueue.IsInitializing
  fullName: System.Printing.PrintQueue.IsInitializing
- uid: System.Printing.PrintQueue.IsIOActive
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsIOActive
  nameWithType: PrintQueue.IsIOActive
  fullName: System.Printing.PrintQueue.IsIOActive
- uid: System.Printing.PrintQueue.IsManualFeedRequired
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsManualFeedRequired
  nameWithType: PrintQueue.IsManualFeedRequired
  fullName: System.Printing.PrintQueue.IsManualFeedRequired
- uid: System.Printing.PrintQueue.IsNotAvailable
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsNotAvailable
  nameWithType: PrintQueue.IsNotAvailable
  fullName: System.Printing.PrintQueue.IsNotAvailable
- uid: System.Printing.PrintQueue.IsOffline
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsOffline
  nameWithType: PrintQueue.IsOffline
  fullName: System.Printing.PrintQueue.IsOffline
- uid: System.Printing.PrintQueue.IsOutOfMemory
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsOutOfMemory
  nameWithType: PrintQueue.IsOutOfMemory
  fullName: System.Printing.PrintQueue.IsOutOfMemory
- uid: System.Printing.PrintQueue.IsOutOfPaper
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsOutOfPaper
  nameWithType: PrintQueue.IsOutOfPaper
  fullName: System.Printing.PrintQueue.IsOutOfPaper
- uid: System.Printing.PrintQueue.IsOutputBinFull
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsOutputBinFull
  nameWithType: PrintQueue.IsOutputBinFull
  fullName: System.Printing.PrintQueue.IsOutputBinFull
- uid: System.Printing.PrintQueue.IsPaperJammed
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsPaperJammed
  nameWithType: PrintQueue.IsPaperJammed
  fullName: System.Printing.PrintQueue.IsPaperJammed
- uid: System.Printing.PrintQueue.IsPaused
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsPaused
  nameWithType: PrintQueue.IsPaused
  fullName: System.Printing.PrintQueue.IsPaused
- uid: System.Printing.PrintQueue.IsPendingDeletion
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsPendingDeletion
  nameWithType: PrintQueue.IsPendingDeletion
  fullName: System.Printing.PrintQueue.IsPendingDeletion
- uid: System.Printing.PrintQueue.IsPowerSaveOn
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsPowerSaveOn
  nameWithType: PrintQueue.IsPowerSaveOn
  fullName: System.Printing.PrintQueue.IsPowerSaveOn
- uid: System.Printing.PrintQueue.IsPrinting
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsPrinting
  nameWithType: PrintQueue.IsPrinting
  fullName: System.Printing.PrintQueue.IsPrinting
- uid: System.Printing.PrintQueue.IsProcessing
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsProcessing
  nameWithType: PrintQueue.IsProcessing
  fullName: System.Printing.PrintQueue.IsProcessing
- uid: System.Printing.PrintQueue.IsPublished
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsPublished
  nameWithType: PrintQueue.IsPublished
  fullName: System.Printing.PrintQueue.IsPublished
- uid: System.Printing.PrintQueue.IsQueued
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsQueued
  nameWithType: PrintQueue.IsQueued
  fullName: System.Printing.PrintQueue.IsQueued
- uid: System.Printing.PrintQueue.IsRawOnlyEnabled
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsRawOnlyEnabled
  nameWithType: PrintQueue.IsRawOnlyEnabled
  fullName: System.Printing.PrintQueue.IsRawOnlyEnabled
- uid: System.Printing.PrintQueue.IsServerUnknown
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsServerUnknown
  nameWithType: PrintQueue.IsServerUnknown
  fullName: System.Printing.PrintQueue.IsServerUnknown
- uid: System.Printing.PrintQueue.IsShared
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsShared
  nameWithType: PrintQueue.IsShared
  fullName: System.Printing.PrintQueue.IsShared
- uid: System.Printing.PrintQueue.IsTonerLow
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsTonerLow
  nameWithType: PrintQueue.IsTonerLow
  fullName: System.Printing.PrintQueue.IsTonerLow
- uid: System.Printing.PrintQueue.IsWaiting
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsWaiting
  nameWithType: PrintQueue.IsWaiting
  fullName: System.Printing.PrintQueue.IsWaiting
- uid: System.Printing.PrintQueue.IsWarmingUp
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsWarmingUp
  nameWithType: PrintQueue.IsWarmingUp
  fullName: System.Printing.PrintQueue.IsWarmingUp
- uid: System.Printing.PrintQueue.IsXpsDevice
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsXpsDevice
  nameWithType: PrintQueue.IsXpsDevice
  fullName: System.Printing.PrintQueue.IsXpsDevice
- uid: System.Printing.PrintQueue.KeepPrintedJobs
  parent: System.Printing.PrintQueue
  isExternal: false
  name: KeepPrintedJobs
  nameWithType: PrintQueue.KeepPrintedJobs
  fullName: System.Printing.PrintQueue.KeepPrintedJobs
- uid: System.Printing.PrintQueue.Location
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Location
  nameWithType: PrintQueue.Location
  fullName: System.Printing.PrintQueue.Location
- uid: System.Printing.PrintQueue.MaxPrintSchemaVersion
  parent: System.Printing.PrintQueue
  isExternal: false
  name: MaxPrintSchemaVersion
  nameWithType: PrintQueue.MaxPrintSchemaVersion
  fullName: System.Printing.PrintQueue.MaxPrintSchemaVersion
- uid: System.Printing.PrintQueue.MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: MergeAndValidatePrintTicket(PrintTicket,PrintTicket)
  nameWithType: PrintQueue.MergeAndValidatePrintTicket(PrintTicket,PrintTicket)
  fullName: System.Printing.PrintQueue.MergeAndValidatePrintTicket(PrintTicket,PrintTicket)
- uid: System.Printing.ValidationResult
  parent: System.Printing
  isExternal: false
  name: ValidationResult
  nameWithType: ValidationResult
  fullName: System.Printing.ValidationResult
- uid: System.Printing.PrintQueue.MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket,System.Printing.PrintTicketScope)
  parent: System.Printing.PrintQueue
  isExternal: false
  name: MergeAndValidatePrintTicket(PrintTicket,PrintTicket,PrintTicketScope)
  nameWithType: PrintQueue.MergeAndValidatePrintTicket(PrintTicket,PrintTicket,PrintTicketScope)
  fullName: System.Printing.PrintQueue.MergeAndValidatePrintTicket(PrintTicket,PrintTicket,PrintTicketScope)
- uid: System.Printing.PrintTicketScope
  parent: System.Printing
  isExternal: false
  name: PrintTicketScope
  nameWithType: PrintTicketScope
  fullName: System.Printing.PrintTicketScope
- uid: System.Printing.PrintQueue.Name
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Name
  nameWithType: PrintQueue.Name
  fullName: System.Printing.PrintQueue.Name
- uid: System.Printing.PrintQueue.NeedUserIntervention
  parent: System.Printing.PrintQueue
  isExternal: false
  name: NeedUserIntervention
  nameWithType: PrintQueue.NeedUserIntervention
  fullName: System.Printing.PrintQueue.NeedUserIntervention
- uid: System.Printing.PrintQueue.NumberOfJobs
  parent: System.Printing.PrintQueue
  isExternal: false
  name: NumberOfJobs
  nameWithType: PrintQueue.NumberOfJobs
  fullName: System.Printing.PrintQueue.NumberOfJobs
- uid: System.Printing.PrintQueue.PagePunt
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PagePunt
  nameWithType: PrintQueue.PagePunt
  fullName: System.Printing.PrintQueue.PagePunt
- uid: System.Printing.PrintQueue.Pause
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Pause()
  nameWithType: PrintQueue.Pause()
  fullName: System.Printing.PrintQueue.Pause()
- uid: System.Printing.PrintQueue.PrintingIsCancelled
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PrintingIsCancelled
  nameWithType: PrintQueue.PrintingIsCancelled
  fullName: System.Printing.PrintQueue.PrintingIsCancelled
- uid: System.Printing.PrintQueue.Priority
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Priority
  nameWithType: PrintQueue.Priority
  fullName: System.Printing.PrintQueue.Priority
- uid: System.Printing.PrintQueue.Purge
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Purge()
  nameWithType: PrintQueue.Purge()
  fullName: System.Printing.PrintQueue.Purge()
- uid: System.Printing.PrintQueue.QueueAttributes
  parent: System.Printing.PrintQueue
  isExternal: false
  name: QueueAttributes
  nameWithType: PrintQueue.QueueAttributes
  fullName: System.Printing.PrintQueue.QueueAttributes
- uid: System.Printing.PrintQueueAttributes
  parent: System.Printing
  isExternal: false
  name: PrintQueueAttributes
  nameWithType: PrintQueueAttributes
  fullName: System.Printing.PrintQueueAttributes
- uid: System.Printing.PrintQueue.QueueDriver
  parent: System.Printing.PrintQueue
  isExternal: false
  name: QueueDriver
  nameWithType: PrintQueue.QueueDriver
  fullName: System.Printing.PrintQueue.QueueDriver
- uid: System.Printing.PrintDriver
  parent: System.Printing
  isExternal: false
  name: PrintDriver
  nameWithType: PrintDriver
  fullName: System.Printing.PrintDriver
- uid: System.Printing.PrintQueue.QueuePort
  parent: System.Printing.PrintQueue
  isExternal: false
  name: QueuePort
  nameWithType: PrintQueue.QueuePort
  fullName: System.Printing.PrintQueue.QueuePort
- uid: System.Printing.PrintPort
  parent: System.Printing
  isExternal: false
  name: PrintPort
  nameWithType: PrintPort
  fullName: System.Printing.PrintPort
- uid: System.Printing.PrintQueue.QueuePrintProcessor
  parent: System.Printing.PrintQueue
  isExternal: false
  name: QueuePrintProcessor
  nameWithType: PrintQueue.QueuePrintProcessor
  fullName: System.Printing.PrintQueue.QueuePrintProcessor
- uid: System.Printing.PrintProcessor
  parent: System.Printing
  isExternal: false
  name: PrintProcessor
  nameWithType: PrintProcessor
  fullName: System.Printing.PrintProcessor
- uid: System.Printing.PrintQueue.QueueStatus
  parent: System.Printing.PrintQueue
  isExternal: false
  name: QueueStatus
  nameWithType: PrintQueue.QueueStatus
  fullName: System.Printing.PrintQueue.QueueStatus
- uid: System.Printing.PrintQueueStatus
  parent: System.Printing
  isExternal: false
  name: PrintQueueStatus
  nameWithType: PrintQueueStatus
  fullName: System.Printing.PrintQueueStatus
- uid: System.Printing.PrintQueue.Refresh
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Refresh()
  nameWithType: PrintQueue.Refresh()
  fullName: System.Printing.PrintQueue.Refresh()
- uid: System.Printing.PrintQueue.Resume
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Resume()
  nameWithType: PrintQueue.Resume()
  fullName: System.Printing.PrintQueue.Resume()
- uid: System.Printing.PrintQueue.ScheduleCompletedJobsFirst
  parent: System.Printing.PrintQueue
  isExternal: false
  name: ScheduleCompletedJobsFirst
  nameWithType: PrintQueue.ScheduleCompletedJobsFirst
  fullName: System.Printing.PrintQueue.ScheduleCompletedJobsFirst
- uid: System.Printing.PrintQueue.SeparatorFile
  parent: System.Printing.PrintQueue
  isExternal: false
  name: SeparatorFile
  nameWithType: PrintQueue.SeparatorFile
  fullName: System.Printing.PrintQueue.SeparatorFile
- uid: System.Printing.PrintQueue.ShareName
  parent: System.Printing.PrintQueue
  isExternal: false
  name: ShareName
  nameWithType: PrintQueue.ShareName
  fullName: System.Printing.PrintQueue.ShareName
- uid: System.Printing.PrintQueue.StartTimeOfDay
  parent: System.Printing.PrintQueue
  isExternal: false
  name: StartTimeOfDay
  nameWithType: PrintQueue.StartTimeOfDay
  fullName: System.Printing.PrintQueue.StartTimeOfDay
- uid: System.Printing.PrintQueue.UntilTimeOfDay
  parent: System.Printing.PrintQueue
  isExternal: false
  name: UntilTimeOfDay
  nameWithType: PrintQueue.UntilTimeOfDay
  fullName: System.Printing.PrintQueue.UntilTimeOfDay
- uid: System.Printing.PrintQueue.UserPrintTicket
  parent: System.Printing.PrintQueue
  isExternal: false
  name: UserPrintTicket
  nameWithType: PrintQueue.UserPrintTicket
  fullName: System.Printing.PrintQueue.UserPrintTicket
- uid: System.Printing.PrintQueue.#ctor*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PrintQueue
  nameWithType: PrintQueue.PrintQueue
- uid: System.Printing.PrintQueue.AddJob*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: AddJob
  nameWithType: PrintQueue.AddJob
- uid: System.Printing.PrintQueue.AveragePagesPerMinute*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: AveragePagesPerMinute
  nameWithType: PrintQueue.AveragePagesPerMinute
- uid: System.Printing.PrintQueue.ClientPrintSchemaVersion*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: ClientPrintSchemaVersion
  nameWithType: PrintQueue.ClientPrintSchemaVersion
- uid: System.Printing.PrintQueue.Comment*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Comment
  nameWithType: PrintQueue.Comment
- uid: System.Printing.PrintQueue.Commit*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Commit
  nameWithType: PrintQueue.Commit
- uid: System.Printing.PrintQueue.CreateXpsDocumentWriter*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: CreateXpsDocumentWriter
  nameWithType: PrintQueue.CreateXpsDocumentWriter
- uid: System.Printing.PrintQueue.CurrentJobSettings*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: CurrentJobSettings
  nameWithType: PrintQueue.CurrentJobSettings
- uid: System.Printing.PrintQueue.DefaultPrintTicket*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: DefaultPrintTicket
  nameWithType: PrintQueue.DefaultPrintTicket
- uid: System.Printing.PrintQueue.DefaultPriority*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: DefaultPriority
  nameWithType: PrintQueue.DefaultPriority
- uid: System.Printing.PrintQueue.Description*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Description
  nameWithType: PrintQueue.Description
- uid: System.Printing.PrintQueue.FullName*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: FullName
  nameWithType: PrintQueue.FullName
- uid: System.Printing.PrintQueue.GetJob*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: GetJob
  nameWithType: PrintQueue.GetJob
- uid: System.Printing.PrintQueue.GetPrintCapabilities*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: GetPrintCapabilities
  nameWithType: PrintQueue.GetPrintCapabilities
- uid: System.Printing.PrintQueue.GetPrintCapabilitiesAsXml*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: GetPrintCapabilitiesAsXml
  nameWithType: PrintQueue.GetPrintCapabilitiesAsXml
- uid: System.Printing.PrintQueue.GetPrintJobInfoCollection*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: GetPrintJobInfoCollection
  nameWithType: PrintQueue.GetPrintJobInfoCollection
- uid: System.Printing.PrintQueue.HasPaperProblem*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: HasPaperProblem
  nameWithType: PrintQueue.HasPaperProblem
- uid: System.Printing.PrintQueue.HasToner*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: HasToner
  nameWithType: PrintQueue.HasToner
- uid: System.Printing.PrintQueue.HostingPrintServer*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: HostingPrintServer
  nameWithType: PrintQueue.HostingPrintServer
- uid: System.Printing.PrintQueue.InPartialTrust*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: InPartialTrust
  nameWithType: PrintQueue.InPartialTrust
- uid: System.Printing.PrintQueue.InternalDispose*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: InternalDispose
  nameWithType: PrintQueue.InternalDispose
- uid: System.Printing.PrintQueue.IsBidiEnabled*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsBidiEnabled
  nameWithType: PrintQueue.IsBidiEnabled
- uid: System.Printing.PrintQueue.IsBusy*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsBusy
  nameWithType: PrintQueue.IsBusy
- uid: System.Printing.PrintQueue.IsDevQueryEnabled*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsDevQueryEnabled
  nameWithType: PrintQueue.IsDevQueryEnabled
- uid: System.Printing.PrintQueue.IsDirect*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsDirect
  nameWithType: PrintQueue.IsDirect
- uid: System.Printing.PrintQueue.IsDoorOpened*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsDoorOpened
  nameWithType: PrintQueue.IsDoorOpened
- uid: System.Printing.PrintQueue.IsHidden*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsHidden
  nameWithType: PrintQueue.IsHidden
- uid: System.Printing.PrintQueue.IsInError*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsInError
  nameWithType: PrintQueue.IsInError
- uid: System.Printing.PrintQueue.IsInitializing*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsInitializing
  nameWithType: PrintQueue.IsInitializing
- uid: System.Printing.PrintQueue.IsIOActive*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsIOActive
  nameWithType: PrintQueue.IsIOActive
- uid: System.Printing.PrintQueue.IsManualFeedRequired*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsManualFeedRequired
  nameWithType: PrintQueue.IsManualFeedRequired
- uid: System.Printing.PrintQueue.IsNotAvailable*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsNotAvailable
  nameWithType: PrintQueue.IsNotAvailable
- uid: System.Printing.PrintQueue.IsOffline*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsOffline
  nameWithType: PrintQueue.IsOffline
- uid: System.Printing.PrintQueue.IsOutOfMemory*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsOutOfMemory
  nameWithType: PrintQueue.IsOutOfMemory
- uid: System.Printing.PrintQueue.IsOutOfPaper*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsOutOfPaper
  nameWithType: PrintQueue.IsOutOfPaper
- uid: System.Printing.PrintQueue.IsOutputBinFull*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsOutputBinFull
  nameWithType: PrintQueue.IsOutputBinFull
- uid: System.Printing.PrintQueue.IsPaperJammed*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsPaperJammed
  nameWithType: PrintQueue.IsPaperJammed
- uid: System.Printing.PrintQueue.IsPaused*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsPaused
  nameWithType: PrintQueue.IsPaused
- uid: System.Printing.PrintQueue.IsPendingDeletion*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsPendingDeletion
  nameWithType: PrintQueue.IsPendingDeletion
- uid: System.Printing.PrintQueue.IsPowerSaveOn*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsPowerSaveOn
  nameWithType: PrintQueue.IsPowerSaveOn
- uid: System.Printing.PrintQueue.IsPrinting*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsPrinting
  nameWithType: PrintQueue.IsPrinting
- uid: System.Printing.PrintQueue.IsProcessing*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsProcessing
  nameWithType: PrintQueue.IsProcessing
- uid: System.Printing.PrintQueue.IsPublished*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsPublished
  nameWithType: PrintQueue.IsPublished
- uid: System.Printing.PrintQueue.IsQueued*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsQueued
  nameWithType: PrintQueue.IsQueued
- uid: System.Printing.PrintQueue.IsRawOnlyEnabled*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsRawOnlyEnabled
  nameWithType: PrintQueue.IsRawOnlyEnabled
- uid: System.Printing.PrintQueue.IsServerUnknown*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsServerUnknown
  nameWithType: PrintQueue.IsServerUnknown
- uid: System.Printing.PrintQueue.IsShared*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsShared
  nameWithType: PrintQueue.IsShared
- uid: System.Printing.PrintQueue.IsTonerLow*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsTonerLow
  nameWithType: PrintQueue.IsTonerLow
- uid: System.Printing.PrintQueue.IsWaiting*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsWaiting
  nameWithType: PrintQueue.IsWaiting
- uid: System.Printing.PrintQueue.IsWarmingUp*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsWarmingUp
  nameWithType: PrintQueue.IsWarmingUp
- uid: System.Printing.PrintQueue.IsXpsDevice*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: IsXpsDevice
  nameWithType: PrintQueue.IsXpsDevice
- uid: System.Printing.PrintQueue.KeepPrintedJobs*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: KeepPrintedJobs
  nameWithType: PrintQueue.KeepPrintedJobs
- uid: System.Printing.PrintQueue.Location*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Location
  nameWithType: PrintQueue.Location
- uid: System.Printing.PrintQueue.MaxPrintSchemaVersion*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: MaxPrintSchemaVersion
  nameWithType: PrintQueue.MaxPrintSchemaVersion
- uid: System.Printing.PrintQueue.MergeAndValidatePrintTicket*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: MergeAndValidatePrintTicket
  nameWithType: PrintQueue.MergeAndValidatePrintTicket
- uid: System.Printing.PrintQueue.Name*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Name
  nameWithType: PrintQueue.Name
- uid: System.Printing.PrintQueue.NeedUserIntervention*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: NeedUserIntervention
  nameWithType: PrintQueue.NeedUserIntervention
- uid: System.Printing.PrintQueue.NumberOfJobs*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: NumberOfJobs
  nameWithType: PrintQueue.NumberOfJobs
- uid: System.Printing.PrintQueue.PagePunt*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PagePunt
  nameWithType: PrintQueue.PagePunt
- uid: System.Printing.PrintQueue.Pause*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Pause
  nameWithType: PrintQueue.Pause
- uid: System.Printing.PrintQueue.PrintingIsCancelled*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: PrintingIsCancelled
  nameWithType: PrintQueue.PrintingIsCancelled
- uid: System.Printing.PrintQueue.Priority*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Priority
  nameWithType: PrintQueue.Priority
- uid: System.Printing.PrintQueue.Purge*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Purge
  nameWithType: PrintQueue.Purge
- uid: System.Printing.PrintQueue.QueueAttributes*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: QueueAttributes
  nameWithType: PrintQueue.QueueAttributes
- uid: System.Printing.PrintQueue.QueueDriver*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: QueueDriver
  nameWithType: PrintQueue.QueueDriver
- uid: System.Printing.PrintQueue.QueuePort*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: QueuePort
  nameWithType: PrintQueue.QueuePort
- uid: System.Printing.PrintQueue.QueuePrintProcessor*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: QueuePrintProcessor
  nameWithType: PrintQueue.QueuePrintProcessor
- uid: System.Printing.PrintQueue.QueueStatus*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: QueueStatus
  nameWithType: PrintQueue.QueueStatus
- uid: System.Printing.PrintQueue.Refresh*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Refresh
  nameWithType: PrintQueue.Refresh
- uid: System.Printing.PrintQueue.Resume*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: Resume
  nameWithType: PrintQueue.Resume
- uid: System.Printing.PrintQueue.ScheduleCompletedJobsFirst*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: ScheduleCompletedJobsFirst
  nameWithType: PrintQueue.ScheduleCompletedJobsFirst
- uid: System.Printing.PrintQueue.SeparatorFile*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: SeparatorFile
  nameWithType: PrintQueue.SeparatorFile
- uid: System.Printing.PrintQueue.ShareName*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: ShareName
  nameWithType: PrintQueue.ShareName
- uid: System.Printing.PrintQueue.StartTimeOfDay*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: StartTimeOfDay
  nameWithType: PrintQueue.StartTimeOfDay
- uid: System.Printing.PrintQueue.UntilTimeOfDay*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: UntilTimeOfDay
  nameWithType: PrintQueue.UntilTimeOfDay
- uid: System.Printing.PrintQueue.UserPrintTicket*
  parent: System.Printing.PrintQueue
  isExternal: false
  name: UserPrintTicket
  nameWithType: PrintQueue.UserPrintTicket
