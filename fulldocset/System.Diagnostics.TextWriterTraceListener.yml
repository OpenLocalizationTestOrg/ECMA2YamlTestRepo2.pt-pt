### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.TextWriterTraceListener
  id: TextWriterTraceListener
  children:
  - System.Diagnostics.TextWriterTraceListener.#ctor
  - System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream)
  - System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter)
  - System.Diagnostics.TextWriterTraceListener.#ctor(System.String)
  - System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream,System.String)
  - System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter,System.String)
  - System.Diagnostics.TextWriterTraceListener.#ctor(System.String,System.String)
  - System.Diagnostics.TextWriterTraceListener.Close
  - System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)
  - System.Diagnostics.TextWriterTraceListener.Flush
  - System.Diagnostics.TextWriterTraceListener.Write(System.String)
  - System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)
  - System.Diagnostics.TextWriterTraceListener.Writer
  langs:
  - csharp
  name: TextWriterTraceListener
  nameWithType: TextWriterTraceListener
  fullName: System.Diagnostics.TextWriterTraceListener
  type: Class
  summary: "Directs tracing or debugging output to a <xref:System.IO.TextWriter> or to a <xref:System.IO.Stream>, such as <xref href=&quot;System.IO.FileStream&quot;></xref>."
  remarks: "The TextWriterTraceListener class provides the <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> property to get or set the text writer that receives the tracing or debugging output.      > [!IMPORTANT] >  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the “Using an Object that Implements IDisposable” section in the <xref:System.IDisposable> interface topic.       This class also provides methods to <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> the <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> so that it no longer receives tracing or debugging output, to <xref:System.Diagnostics.TextWriterTraceListener.Flush%2A> the output buffer for the <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A>, and to <xref:System.Diagnostics.TextWriterTraceListener.Write%2A> a message to the <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A>.       You must enable tracing or debugging to use a trace listener. The following syntax is compiler specific. If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.      -   To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or you can add `#define DEBUG` to the top of your file. In Visual Basic, add the `/d:DEBUG=True` flag to the compiler command line.      -   To enable tracing in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file. In Visual Basic, add the `/d:TRACE=True` flag to the compiler command line.       To add a trace listener, edit the configuration file that corresponds to the name of your application. Within this file, you can add a listener, set its type and set its parameter, remove a listener, or clear all the listeners previously set by the application. The configuration file should be formatted like the following example.      ```   <configuration>     <system.diagnostics>       <trace autoflush=&quot;false&quot; indentsize=&quot;4&quot;>         <listeners>           <add name=&quot;myListener&quot;              type=&quot;System.Diagnostics.TextWriterTraceListener&quot;              initializeData=&quot;TextWriterOutput.log&quot; />           <remove name=&quot;Default&quot; />         </listeners>       </trace>     </system.diagnostics>   </configuration>   ```      > [!NOTE] >  If an attempt is made to write to a file that is in use or unavailable, the file name is automatically prefixed by a GUID."
  example:
  - "The following example implements an instance of the TextWriterTraceListener class that uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`. First the example creates a file for output. Then it creates the <xref:System.IO.StreamWriter> for the first text writer, assigns it the output file, and adds it to the <xref:System.Diagnostics.Trace.Listeners%2A>. Then, the code outputs one line of text to the file. Finally, the example flushes the output buffer.  \n  \n After running this sample, you can open the `TestFile.txt` file to see the output.  \n  \n [!code-cpp[Classic TextWriterTraceListener Example#1](~/add/codesnippet/cpp/t-system.diagnostics.tex_1.cpp)]\n [!code-cs[Classic TextWriterTraceListener Example#1](~/add/codesnippet/csharp/t-system.diagnostics.tex_1.cs)]\n [!code-vb[Classic TextWriterTraceListener Example#1](~/add/codesnippet/visualbasic/t-system.diagnostics.tex_1.vb)]"
  syntax:
    content: 'public class TextWriterTraceListener : System.Diagnostics.TraceListener'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Diagnostics.TraceListener
  implements: []
  inheritedMembers:
  - System.Diagnostics.TraceListener.Attributes
  - System.Diagnostics.TraceListener.Dispose
  - System.Diagnostics.TraceListener.Fail(System.String)
  - System.Diagnostics.TraceListener.Fail(System.String,System.String)
  - System.Diagnostics.TraceListener.Filter
  - System.Diagnostics.TraceListener.GetSupportedAttributes
  - System.Diagnostics.TraceListener.IndentLevel
  - System.Diagnostics.TraceListener.IndentSize
  - System.Diagnostics.TraceListener.IsThreadSafe
  - System.Diagnostics.TraceListener.Name
  - System.Diagnostics.TraceListener.NeedIndent
  - System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  - System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)
  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  - System.Diagnostics.TraceListener.TraceOutputOptions
  - System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  - System.Diagnostics.TraceListener.Write(System.Object)
  - System.Diagnostics.TraceListener.Write(System.Object,System.String)
  - System.Diagnostics.TraceListener.Write(System.String,System.String)
  - System.Diagnostics.TraceListener.WriteIndent
  - System.Diagnostics.TraceListener.WriteLine(System.Object)
  - System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)
  - System.Diagnostics.TraceListener.WriteLine(System.String,System.String)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.#ctor
  id: '#ctor'
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: TextWriterTraceListener()
  nameWithType: TextWriterTraceListener.TextWriterTraceListener()
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener()
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Initializes a new instance of the <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;></xref> class with <xref:System.IO.TextWriter> as the output recipient."
  remarks: "This constructor uses the <xref:System.IO.TextWriter> stream as the recipient of the tracing or debugging output. Its <xref:System.Diagnostics.TraceListener.Name%2A> property is initialized to an empty string (&quot;&quot;, or <xref:System.String.Empty?displayProperty=fullName>)."
  example:
  - "The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the TextWriterTraceListener constructor. It sets the <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> property to console output, and then adds the <xref:System.Diagnostics.TextWriterTraceListener> to the <xref:System.Diagnostics.TraceListenerCollection>. It writes a message in two segments, and then closes the <xref:System.Diagnostics.TextWriterTraceListener>.  \n  \n [!code-cpp[Classic TextWriterTraceListener.WriteLine Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tex_3_1.cpp)]\n [!code-vb[Classic TextWriterTraceListener.WriteLine Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tex_3_1.vb)]\n [!code-cs[Classic TextWriterTraceListener.WriteLine Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tex_3_1.cs)]"
  syntax:
    content: public TextWriterTraceListener ();
    parameters: []
  overload: System.Diagnostics.TextWriterTraceListener.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: TextWriterTraceListener(Stream)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(Stream)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(Stream)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Initializes a new instance of the <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;></xref> class, using the stream as the recipient of the debugging and tracing output."
  remarks: "This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string (&quot;&quot;)."
  example:
  - "The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the TextWriterTraceListener constructor and adds it to the <xref:System.Diagnostics.TraceListenerCollection>. The example then writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener>, and writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>. Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.  \n  \n [!code-cs[System.Diagnostics.TextWriterTraceListener.Ctor#1](~/add/codesnippet/csharp/m-system.diagnostics.tex_5_1.cs)]\n [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tex_5_1.vb)]"
  syntax:
    content: public TextWriterTraceListener (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream> that represents the stream the <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;></xref> writes to."
  overload: System.Diagnostics.TextWriterTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The stream is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter)
  id: '#ctor(System.IO.TextWriter)'
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: TextWriterTraceListener(TextWriter)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(TextWriter)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(TextWriter)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Initializes a new instance of the <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;></xref> class using the specified writer as recipient of the tracing or debugging output."
  remarks: "This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string (&quot;&quot;)."
  example:
  - "The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the TextWriterTraceListener constructor. The example creates a <xref:System.IO.StreamWriter>, then references the <xref:System.IO.StreamWriter> when it creates the <xref:System.Diagnostics.TextWriterTraceListener>, which it then adds to the <xref:System.Diagnostics.TraceListenerCollection>. The example writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>, then closes this <xref:System.Diagnostics.TextWriterTraceListener>.  \n  \n [!code-cpp[Classic TextWriterTraceListener.Close Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tex_6_1.cpp)]\n [!code-cs[Classic TextWriterTraceListener.Close Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tex_6_1.cs)]\n [!code-vb[Classic TextWriterTraceListener.Close Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tex_6_1.vb)]"
  syntax:
    content: public TextWriterTraceListener (System.IO.TextWriter writer);
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: "A <xref:System.IO.TextWriter> that receives the output from the <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;></xref>."
  overload: System.Diagnostics.TextWriterTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The writer is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: TextWriterTraceListener(String)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(String)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Initializes a new instance of the <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;></xref> class, using the file as the recipient of the debugging and tracing output."
  remarks: "This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to an empty string (&quot;&quot;)."
  example:
  - "The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the TextWriterTraceListener constructor, then adds it to the <xref:System.Diagnostics.TraceListenerCollection>. The example writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener>, then writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>. Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.  \n  \n [!code-cs[System.Diagnostics.TextWriterTraceListener.Ctor#3](~/add/codesnippet/csharp/m-system.diagnostics.tex_1_1.cs)]\n [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#3](~/add/codesnippet/visualbasic/m-system.diagnostics.tex_1_1.vb)]"
  syntax:
    content: public TextWriterTraceListener (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "The name of the file the <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;></xref> writes to."
  overload: System.Diagnostics.TextWriterTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The file is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream,System.String)
  id: '#ctor(System.IO.Stream,System.String)'
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: TextWriterTraceListener(Stream,String)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(Stream,String)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(Stream,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Initializes a new instance of the <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;></xref> class with the specified name, using the stream as the recipient of the debugging and tracing output."
  remarks: "This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the `name` parameter or to an empty string (&quot;&quot;), if the `name` parameter is `null`."
  example:
  - "The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the TextWriterTraceListener constructor and adds it to the <xref:System.Diagnostics.TraceListenerCollection>. The example then writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener> and writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>. Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.  \n  \n [!code-cs[System.Diagnostics.TextWriterTraceListener.Ctor#2](~/add/codesnippet/csharp/904be5a7-d634-4f01-8e66-_1.cs)]\n [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#2](~/add/codesnippet/visualbasic/904be5a7-d634-4f01-8e66-_1.vb)]"
  syntax:
    content: public TextWriterTraceListener (System.IO.Stream stream, string name);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream> that represents the stream the <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;></xref> writes to."
    - id: name
      type: System.String
      description: "The name of the new instance."
  overload: System.Diagnostics.TextWriterTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The stream is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter,System.String)
  id: '#ctor(System.IO.TextWriter,System.String)'
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: TextWriterTraceListener(TextWriter,String)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(TextWriter,String)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(TextWriter,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Initializes a new instance of the <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;></xref> class with the specified name, using the specified writer as recipient of the tracing or debugging output."
  remarks: ''
  example:
  - "The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the TextWriterTraceListener constructor. The example creates a <xref:System.IO.StreamWriter>, then references the <xref:System.IO.StreamWriter> when it creates the <xref:System.Diagnostics.TextWriterTraceListener>, which it then adds to the <xref:System.Diagnostics.TraceListenerCollection>. The example writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener>, then writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>. Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.  \n  \n [!code-cs[System.Diagnostics.TextWriterTraceListener.Ctor#5](~/add/codesnippet/csharp/81bb968a-b680-446b-b301-_1.cs)]\n [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#5](~/add/codesnippet/visualbasic/81bb968a-b680-446b-b301-_1.vb)]"
  syntax:
    content: public TextWriterTraceListener (System.IO.TextWriter writer, string name);
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: "A <xref:System.IO.TextWriter> that receives the output from the <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;></xref>."
    - id: name
      type: System.String
      description: "The name of the new instance."
  overload: System.Diagnostics.TextWriterTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The writer is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: TextWriterTraceListener(String,String)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(String,String)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Initializes a new instance of the <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;></xref> class with the specified name, using the file as the recipient of the debugging and tracing output."
  remarks: "This constructor initializes the <xref:System.Diagnostics.TraceListener.Name%2A> property to the `name` parameter or to an empty string (&quot;&quot;), if the `name` parameter is `null`."
  example:
  - "The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the TextWriterTraceListener constructor, then adds it to the <xref:System.Diagnostics.TraceListenerCollection>. The example writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener>, then writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>. Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.  \n  \n [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#4](~/add/codesnippet/visualbasic/9ea7970a-0298-4bde-b5e1-_1.vb)]\n [!code-cs[System.Diagnostics.TextWriterTraceListener.Ctor#4](~/add/codesnippet/csharp/9ea7970a-0298-4bde-b5e1-_1.cs)]"
  syntax:
    content: public TextWriterTraceListener (string fileName, string name);
    parameters:
    - id: fileName
      type: System.String
      description: "The name of the file the <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;></xref> writes to."
    - id: name
      type: System.String
      description: "The name of the new instance."
  overload: System.Diagnostics.TextWriterTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The stream is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.Close
  id: Close
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: Close()
  nameWithType: TextWriterTraceListener.Close()
  fullName: System.Diagnostics.TextWriterTraceListener.Close()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Closes the <xref:System.Diagnostics.TextWriterTraceListener.Writer*> so that it no longer receives tracing or debugging output."
  remarks: "Calling a <xref:System.Diagnostics.TextWriterTraceListener.Write%2A> or <xref:System.Diagnostics.TextWriterTraceListener.WriteLine%2A> method after calling Close automatically reopens the stream."
  example:
  - "The following example implements a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`, which uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`. The example creates the file, stream, and text writer, writes one line of text to the file, and then flushes and closes the stream.  \n  \n [!code-cpp[Classic TextWriterTraceListener.Close Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tex_2_1.cpp)]\n [!code-cs[Classic TextWriterTraceListener.Close Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tex_2_1.cs)]\n [!code-vb[Classic TextWriterTraceListener.Close Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tex_2_1.vb)]"
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Diagnostics.TextWriterTraceListener.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: TextWriterTraceListener.Dispose(Boolean)
  fullName: System.Diagnostics.TextWriterTraceListener.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Disposes this <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;></xref> object."
  remarks: "Use the <xref:System.Diagnostics.TextWriterTraceListener.Close%2A> method of the <xref:System.Diagnostics.TextWriterTraceListener> class to release the managed resources of a <xref:System.Diagnostics.TextWriterTraceListener> object."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to release managed resources; if <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>, Dispose has no effect."
  overload: System.Diagnostics.TextWriterTraceListener.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.Flush
  id: Flush
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: Flush()
  nameWithType: TextWriterTraceListener.Flush()
  fullName: System.Diagnostics.TextWriterTraceListener.Flush()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Flushes the output buffer for the <xref:System.Diagnostics.TextWriterTraceListener.Writer*>."
  remarks: ''
  example:
  - "The following example implements a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`, which uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`. The example creates the file, stream, and text writer, writes one line of text to the file, and then flushes and closes the stream.  \n  \n [!code-cpp[Classic TextWriterTraceListener.Close Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tex_7_1.cpp)]\n [!code-cs[Classic TextWriterTraceListener.Close Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tex_7_1.cs)]\n [!code-vb[Classic TextWriterTraceListener.Close Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tex_7_1.vb)]"
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.Diagnostics.TextWriterTraceListener.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.Write(System.String)
  id: Write(System.String)
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: Write(String)
  nameWithType: TextWriterTraceListener.Write(String)
  fullName: System.Diagnostics.TextWriterTraceListener.Write(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Writes a message to this instance&quot;s <xref:System.Diagnostics.TextWriterTraceListener.Writer*>."
  remarks: ''
  example:
  - "The following example implements a <xref:System.Diagnostics.TextWriterTraceListener> named `myWriter` to write to the console screen. The example writes two lines to the console screen. Note the second write appears on the same line as the first write. The example then flushes and closes the stream.  \n  \n [!code-cpp[Classic TextWriterTraceListener.Write Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tex_0_1.cpp)]\n [!code-cs[Classic TextWriterTraceListener.Write Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tex_0_1.cs)]\n [!code-vb[Classic TextWriterTraceListener.Write Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tex_0_1.vb)]"
  syntax:
    content: public override void Write (string message);
    parameters:
    - id: message
      type: System.String
      description: "A message to write."
  overload: System.Diagnostics.TextWriterTraceListener.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)
  id: WriteLine(System.String)
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: WriteLine(String)
  nameWithType: TextWriterTraceListener.WriteLine(String)
  fullName: System.Diagnostics.TextWriterTraceListener.WriteLine(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Writes a message to this instance&quot;s <xref:System.Diagnostics.TextWriterTraceListener.Writer*> followed by a line terminator. The default line terminator is a carriage return followed by a line feed (\\r )."
  remarks: ''
  example:
  - "The following example implements a <xref:System.Diagnostics.TextWriterTraceListener> named `myWriter` to write to the console screen. The example writes two lines to the console screen. Note the second write appears on the same line as the first write. The example then flushes and closes the stream.  \n  \n [!code-cpp[Classic TextWriterTraceListener.WriteLine Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tex_4_1.cpp)]\n [!code-vb[Classic TextWriterTraceListener.WriteLine Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tex_4_1.vb)]\n [!code-cs[Classic TextWriterTraceListener.WriteLine Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tex_4_1.cs)]"
  syntax:
    content: public override void WriteLine (string message);
    parameters:
    - id: message
      type: System.String
      description: "A message to write."
  overload: System.Diagnostics.TextWriterTraceListener.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.Writer
  id: Writer
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: Writer
  nameWithType: TextWriterTraceListener.Writer
  fullName: System.Diagnostics.TextWriterTraceListener.Writer
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Gets or sets the text writer that receives the tracing or debugging output."
  remarks: ''
  example:
  - "The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> that writes to the console screen. Then the code adds the new trace listener to the <xref:System.Diagnostics.Trace.Listeners%2A> in the trace class.  \n  \n [!code-cpp[Classic TextWriterTraceListener.Writer Example#1](~/add/codesnippet/cpp/p-system.diagnostics.tex_1.cpp)]\n [!code-cs[Classic TextWriterTraceListener.Writer Example#1](~/add/codesnippet/csharp/p-system.diagnostics.tex_1.cs)]\n [!code-vb[Classic TextWriterTraceListener.Writer Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.tex_1.vb)]"
  syntax:
    content: public System.IO.TextWriter Writer { get; set; }
    return:
      type: System.IO.TextWriter
      description: "A <xref:System.IO.TextWriter> that represents the writer that receives the tracing or debugging output."
  overload: System.Diagnostics.TextWriterTraceListener.Writer*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Diagnostics.TraceListener
  isExternal: false
  name: System.Diagnostics.TraceListener
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Diagnostics.TextWriterTraceListener.#ctor
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: TextWriterTraceListener()
  nameWithType: TextWriterTraceListener.TextWriterTraceListener()
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener()
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream)
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: TextWriterTraceListener(Stream)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(Stream)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter)
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: TextWriterTraceListener(TextWriter)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(TextWriter)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(TextWriter)
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.String)
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: TextWriterTraceListener(String)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(String)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream,System.String)
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: TextWriterTraceListener(Stream,String)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(Stream,String)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(Stream,String)
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter,System.String)
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: TextWriterTraceListener(TextWriter,String)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(TextWriter,String)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(TextWriter,String)
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.String,System.String)
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: TextWriterTraceListener(String,String)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(String,String)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(String,String)
- uid: System.Diagnostics.TextWriterTraceListener.Close
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Close()
  nameWithType: TextWriterTraceListener.Close()
  fullName: System.Diagnostics.TextWriterTraceListener.Close()
- uid: System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: TextWriterTraceListener.Dispose(Boolean)
  fullName: System.Diagnostics.TextWriterTraceListener.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.TextWriterTraceListener.Flush
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Flush()
  nameWithType: TextWriterTraceListener.Flush()
  fullName: System.Diagnostics.TextWriterTraceListener.Flush()
- uid: System.Diagnostics.TextWriterTraceListener.Write(System.String)
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Write(String)
  nameWithType: TextWriterTraceListener.Write(String)
  fullName: System.Diagnostics.TextWriterTraceListener.Write(String)
- uid: System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: WriteLine(String)
  nameWithType: TextWriterTraceListener.WriteLine(String)
  fullName: System.Diagnostics.TextWriterTraceListener.WriteLine(String)
- uid: System.Diagnostics.TextWriterTraceListener.Writer
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Writer
  nameWithType: TextWriterTraceListener.Writer
  fullName: System.Diagnostics.TextWriterTraceListener.Writer
- uid: System.Diagnostics.TextWriterTraceListener.#ctor*
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: TextWriterTraceListener
  nameWithType: TextWriterTraceListener.TextWriterTraceListener
- uid: System.Diagnostics.TextWriterTraceListener.Close*
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Close
  nameWithType: TextWriterTraceListener.Close
- uid: System.Diagnostics.TextWriterTraceListener.Dispose*
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Dispose
  nameWithType: TextWriterTraceListener.Dispose
- uid: System.Diagnostics.TextWriterTraceListener.Flush*
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Flush
  nameWithType: TextWriterTraceListener.Flush
- uid: System.Diagnostics.TextWriterTraceListener.Write*
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Write
  nameWithType: TextWriterTraceListener.Write
- uid: System.Diagnostics.TextWriterTraceListener.WriteLine*
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: WriteLine
  nameWithType: TextWriterTraceListener.WriteLine
- uid: System.Diagnostics.TextWriterTraceListener.Writer*
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Writer
  nameWithType: TextWriterTraceListener.Writer
