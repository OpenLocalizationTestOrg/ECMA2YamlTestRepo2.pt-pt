### YamlMime:ManagedReference
items:
- uid: System.Xml.Xsl.XslTransform
  id: XslTransform
  children:
  - System.Xml.Xsl.XslTransform.#ctor
  - System.Xml.Xsl.XslTransform.Load(System.String)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)
  - System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  - System.Xml.Xsl.XslTransform.Transform(System.String,System.String)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)
  - System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.XmlResolver
  langs:
  - csharp
  name: XslTransform
  nameWithType: XslTransform
  fullName: System.Xml.Xsl.XslTransform
  type: Class
  summary: "Transforma os dados XML a utilizar uma linguagem de folha de estilos extensível para folha de estilos de transformações (XSLT)."
  remarks: "> [!NOTE]> XslTransform classe está obsoleta no Microsoft .NET Framework versão 2.0. O <xref:System.Xml.Xsl.XslCompiledTransform>classe é o processador XSLT nova.</xref:System.Xml.Xsl.XslCompiledTransform> Para obter mais informações, consulte [utilizando a classe de XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) e [migrar da classe de XslTransform o](~/add/includes/ajax-current-ext-md.md).       XslTransform suporta a sintaxe de XSLT 1.0. A folha de estilo XSLT tem de utilizar o espaço de nomes `http://www.w3.org/1999/XSL/Transform`.       Também podem ser adicionados argumentos adicionais para a folha de estilo utilizando a <xref:System.Xml.Xsl.XsltArgumentList>classe.</xref:System.Xml.Xsl.XsltArgumentList> Esta classe contém parâmetros de entrada para os objetos de extensão e folha de estilo que podem ser chamados a partir da folha de estilos.       Para transformar dados XML: 1.  Crie um objeto de XslTransform.      2.  Utilize o <xref:System.Xml.Xsl.XslTransform.Load%2A>método ao carregar a folha de estilo para a transformação.</xref:System.Xml.Xsl.XslTransform.Load%2A> Este método tem várias sobrecargas e pode carregar uma folha de estilo utilizando um <xref:System.Xml.XmlReader>, <xref:System.Xml.XPath.XPathNavigator>, <xref:System.Xml.XPath.IXPathNavigable>, ou um URL com a localização do ficheiro.</xref:System.Xml.XPath.IXPathNavigable> </xref:System.Xml.XPath.XPathNavigator> </xref:System.Xml.XmlReader>      3.  Utilize o <xref:System.Xml.Xsl.XslTransform.Transform%2A>método para transformar os dados XML.</xref:System.Xml.Xsl.XslTransform.Transform%2A> Este método tem várias sobrecargas e pode processar diferentes tipos de entrada e saída. Também pode especificar um <xref:System.Xml.Xsl.XsltArgumentList>que contêm argumentos adicionais a utilizar como entrada durante a transformação.</xref:System.Xml.Xsl.XsltArgumentList>       **Considerações de segurança** quando criar uma aplicação que utiliza a classe de XslTransform, deve ter em consideração os seguintes itens e as implicações:-objetos de extensão são ativadas por predefinição. Se um <xref:System.Xml.Xsl.XsltArgumentList>é transmitido um objeto que contém objetos de extensão para o <xref:System.Xml.Xsl.XslTransform.Transform%2A>método, são utilizados.</xref:System.Xml.Xsl.XslTransform.Transform%2A> </xref:System.Xml.Xsl.XsltArgumentList>      -Folhas de estilo XSLT podem incluir referências a outros ficheiros e blocos de script incorporado. Um utilizador mal intencionado pode explorar esta fornecendo, com dados ou folhas de estilos que quando executado fará com que o sistema processar até que o computador que executa baixo nos recursos.      -Aplicações de XSLT que são executadas num ambiente misto de fidedignidade podem resultar em spoofing de folha de estilo. Por exemplo, um utilizador mal intencionado pode carregar um objeto com uma folha de estilo prejudicial e entregam para outro utilizador, subsequentemente, chama o <xref:System.Xml.Xsl.XslTransform.Transform%2A>método e executa a transformação.</xref:System.Xml.Xsl.XslTransform.Transform%2A>       Estes problemas de segurança podem ser mitigados ao não aceitar XslTransform objetos, folhas de estilo XSLT ou dados de origem do XML de fontes não fidedignas.       **Suporte de Scripting** esta classe suporta scripts incorporados, utilizando o `msxsl:script` elemento.       Na versão 1.1 do .NET Framework, provas da folha de estilo determina que permissões são fornecidos para os scripts incorporados.      -Se a folha de estilo foi carregada a partir de um Uniform Resource Identifier (URI), o URI é utilizado para criar a provas. Esta prova inclui o URI, juntamente com o seu site e a zona.      -Se a folha de estilo foi carregada utilizando outra origem, pode fornecer provas transferindo uma <xref:System.Security.Policy.Evidence?displayProperty=fullName>de objeto para o <xref:System.Xml.Xsl.XslTransform.Load%2A>método.</xref:System.Xml.Xsl.XslTransform.Load%2A> </xref:System.Security.Policy.Evidence?displayProperty=fullName> Caso contrário, a assemblagem de script tem fidedignidade total.       Por fidedignos os chamadores: `UnmanagedCode` é necessária permissão para compilar o script incorporado. `ControlEvidence`é necessária permissão para fornecer <xref:System.Security.Policy.Evidence>para o <xref:System.Xml.Xsl.XslTransform.Load%2A>método.</xref:System.Xml.Xsl.XslTransform.Load%2A> </xref:System.Security.Policy.Evidence> A <xref:System.Security.SecurityException>é emitida se o autor da chamada não tiver as permissões necessárias.</xref:System.Security.SecurityException> Consulte <xref:System.Security.Permissions.SecurityPermission?displayProperty=fullName>e <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>para obter mais informações.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission?displayProperty=fullName>       O `msxsl:script` elemento tem os seguintes requisitos: - `msxsl:script` elemento pertence a `urn:schemas-microsoft-com:xslt` espaço de nomes. A folha de estilos tem de incluir a declaração de espaço de nomes `xmlns:msxsl=urn:schemas-microsoft-com:xslt`.      -O `msxsl:script` elemento pode incluir um `language` atributo que especifica a linguagem de scripts a utilizar. O valor da `language` atributo tem de ser um dos seguintes: c#, CSharp, VB, VisualBasic, JScript ou JavaScript. Porque o nome de idioma não for maiúsculas e minúsculas, JavaScript e javascript são válidos. Se um `language` atributo não for especificado, assume como JScript.      -O `msxsl:script` elemento tem de incluir um `implements-prefix` atributo que contém o prefixo que representa o espaço de nomes associado com o bloco de script. Este espaço de nomes tem de ser definido numa folha de estilos. Folha de estilos pode incluir vários blocos de script quais estão agrupados por espaço de nomes. Não é possível ter blocos de script com vários idiomas no mesmo espaço de nomes. Blocos de script podem chamar uma função definida no outro bloco de script fornecidos os blocos de script residem no mesmo espaço de nomes. O conteúdo de um bloco de script é analisado, de acordo com as regras e a sintaxe da linguagem de script (fornecido pelo `language` atributo). Por exemplo, se tiver um bloco de script do c#, comentários deverá ter o prefixo de `//` carateres. Os comentários tem de ser conteúdo XML válido.       `Note`Recomenda-se que moldar blocos de script numa secção CDATA.      ```   <msxsl:script implements-prefix=&quot;xy&quot; language=&quot;C#&quot;>     <![CDATA[     // Add code here.     ]]>   </msxsl:script>   ```As funções podem ser declaradas dentro de `msxsl:script` elemento. A tabela seguinte mostra os espaços de nomes que são suportados por predefinição.      | Espaços de nomes de suportados | Descrição |   |--------------------------|-----------------|   | `System`| Classes de System. |   | `System.Collection`| Classes de coleção. |   | `System.Text`| Processamento de classes de texto. |   | `System.Xml`| Principais classes XML. |   | `System.Xml.Xsl`| Classes XSLT. |   | `System.Xml.XPath`| Classes de linguagem XML (XPath). |       Os argumentos fornecidos e valores de retorno definidos pelas funções de script tem de ser um dos tipos Consortium World Wide Web (W3C) listados abaixo. A tabela seguinte fornece detalhes sobre o mapeamento entre os tipos de W3C, XPath ou XSLT e as classes correspondentes do .NET Framework.      | Tipo de W3C | Classe de .NET equivalente |   |--------------|---------------------------|   | Cadeia (XPath) | `System.String`|   | Valor booleano (XPath) | `System.Boolean`|   | O número (XPath) | `System.Double`|   | Resultar fragmento da árvore (XSLT) | `System.Xml.XPath.XPathNavigator`|   | Conjunto de nós (XPath) | `System.Xml.XPath.XPathNodeIterator`|       Se a função de script utiliza um dos seguintes tipos de numérico: Int16, UInt16, Int32, UInt32, Int64, UInt64, único ou Decimal, estes tipos são forçados para duplo, que mapeia para o número de tipo XPath de W3C.       É emitida uma exceção quando uma função denomina-se que não é possível converter o resultado de argumento um dos tipos necessários.      > [!NOTE]  >   `msxsl:script` e `msxsl:node-list` são as funções de apenas o `urn:schemas-microsoft-com:xslt` espaço de nomes que são suportados pela classe XslTransform.       XslTransform tem a capacidade de utilizar o código de runtime (CLR) de idioma comum como um mecanismo de extensão. Isto é conseguido ao transferir uma instância de uma classe à classe XslTransform e chamar os métodos públicos dentro de uma folha de estilo XSLT. Métodos que são definidos com o `params` palavra-chave, o que permite um número de parâmetros a transmitir não especificado, não funcionam corretamente neste cenário. Consulte [params](~/add/includes/ajax-current-ext-md.md) para obter mais detalhes.       Para obter mais informações consulte [XSLT transformações com a classe de XslTransform](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example transforms the specified XML document and outputs the result to the console.  \n  \n [!code-vb[Classic WebData XslTransform Example#1](~/add/codesnippet/visualbasic/t-system.xml.xsl.xsltran_1.vb)]\n [!code-cs[Classic WebData XslTransform Example#1](~/add/codesnippet/csharp/t-system.xml.xsl.xsltran_1.cs)]"
  syntax:
    content: >-
      [System.Obsolete("This class has been deprecated. Please use System.Xml.Xsl.XslCompiledTransform instead. http://go.microsoft.com/fwlink/?linkid=14202")]

      public sealed class XslTransform
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.#ctor
  id: '#ctor'
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: XslTransform()
  nameWithType: XslTransform.XslTransform()
  fullName: System.Xml.Xsl.XslTransform.XslTransform()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Xml.Xsl.XslTransform&quot;> </xref> classe."
  syntax:
    content: public XslTransform ();
    parameters: []
  overload: System.Xml.Xsl.XslTransform.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.String)
  id: Load(System.String)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(String)
  nameWithType: XslTransform.Load(String)
  fullName: System.Xml.Xsl.XslTransform.Load(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Carrega a folha de estilo XSLT especificada por um URL."
  remarks: "> [!NOTE]> O <xref:System.Xml.Xsl.XslTransform>classe está obsoleta no .NET Framework versão 2.0.</xref:System.Xml.Xsl.XslTransform> O <xref:System.Xml.Xsl.XslCompiledTransform>classe é o processador XSLT nova.</xref:System.Xml.Xsl.XslCompiledTransform> Para obter mais informações, consulte [utilizando a classe de XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) e [migrar da classe de XslTransform o](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>suporta a sintaxe de XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> A folha de estilo XSLT tem de incluir a declaração de espaço de nomes `xmlns:xsl=``http://www.w3.org/1999/XSL/Transform`.       Este método carrega a folha de estilo XSLT, incluindo todas as folhas de estilos referenciadas no `xsl:include` e `xsl:import` elementos. Recursos externos são resolvidos utilizando um <xref:System.Xml.XmlUrlResolver>com credenciais do utilizador.</xref:System.Xml.XmlUrlResolver> Se a folhas de estilo, porque estão localizadas no recurso de rede que requer autenticação, utilize a sobrecarga que recebe um <xref:System.Xml.XmlResolver>como um dos respetivos argumentos e especifique um <xref:System.Xml.XmlResolver>com as credenciais necessárias.</xref:System.Xml.XmlResolver> </xref:System.Xml.XmlResolver>       Se a folha de estilos contém scripting incorporados, o script é compilado para uma assemblagem. O URI da folha de estilo é utilizado para criar provas, que é aplicada à assemblagem. Existência de problemas com o <xref:System.Xml.Xsl.XslTransform.Load%2A>folhas de método e estilo com scripts incorporados, consulte o artigo Q316755 na Base de dados de conhecimento da Microsoft em http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>      > [!NOTE] > Se o autor da chamada não tiver `UnmanagedCode` permissão, o script incorporado não é compilado e um <xref:System.Security.SecurityException>é emitida.</xref:System.Security.SecurityException> Consulte <xref:System.Security.Permissions.SecurityPermission>e <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>para obter mais informações.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission>"
  example:
  - "The following example transforms an XML document into an HTML document. It displays the ISBN, title, and price for each book in a table.  \n  \n [!code-cs[Classic WebData XslTransform.Transform7 Example#1](~/add/codesnippet/csharp/m-system.xml.xsl.xsltran_0_1.cs)]\n [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/add/codesnippet/cpp/m-system.xml.xsl.xsltran_0_1.cpp)]\n [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/add/codesnippet/visualbasic/m-system.xml.xsl.xsltran_0_1.vb)]  \n  \n The sample uses the following two input files.  \n  \n `books.xml`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_0_2.xml)]  \n  \n `output.xsl`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_0_3.xsl)]"
  syntax:
    content: public void Load (string url);
    parameters:
    - id: url
      type: System.String
      description: "O URL que especifica a folha de estilo XSLT para carregar."
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "O recurso carregado não é uma folha de estilo válido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "A folha de estilos contém o script incorporado e não tem o autor da chamada <xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;> </xref> permissão."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)
  id: Load(System.Xml.XmlReader)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(XmlReader)
  nameWithType: XslTransform.Load(XmlReader)
  fullName: System.Xml.Xsl.XslTransform.Load(XmlReader)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Carrega a folha de estilo XSLT contida no <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  remarks: "> [!NOTE]> O <xref:System.Xml.Xsl.XslTransform>classe está obsoleta no .NET Framework versão 2.0.</xref:System.Xml.Xsl.XslTransform> O <xref:System.Xml.Xsl.XslCompiledTransform>classe é o processador XSLT nova.</xref:System.Xml.Xsl.XslCompiledTransform> Para obter mais informações, consulte [utilizando a classe de XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) e [migrar da classe de XslTransform o](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>suporta a sintaxe de XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> A folha de estilo XSLT tem de incluir a declaração de espaço de nomes `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Este método carrega a folha de estilo XSLT, incluindo todas as folhas de estilos referenciadas no `xsl:include` e `xsl:import` elementos. Recursos externos são resolvidos utilizando um <xref:System.Xml.XmlUrlResolver>com credenciais do utilizador.</xref:System.Xml.XmlUrlResolver> Se a folhas de estilo, porque estão localizadas no recurso de rede que requer autenticação, utilize a sobrecarga que recebe um <xref:System.Xml.XmlResolver>como um dos respetivos argumentos e especifique um <xref:System.Xml.XmlResolver>com as credenciais necessárias.</xref:System.Xml.XmlResolver> </xref:System.Xml.XmlResolver>       A folha de estilo carrega a partir do nó atual do <xref:System.Xml.XmlReader>através de todos os respectivos valores secundários.</xref:System.Xml.XmlReader> Isto permite-lhe utilizar uma parte de um documento como a folha de estilos. Depois do <xref:System.Xml.Xsl.XslTransform.Load%2A>devolve método, o <xref:System.Xml.XmlReader>está posicionado no nó seguinte após o fim da folha de estilo.</xref:System.Xml.XmlReader> </xref:System.Xml.Xsl.XslTransform.Load%2A> Se for atingido o fim do documento, o <xref:System.Xml.XmlReader>está posicionado o fim do ficheiro (EOF).</xref:System.Xml.XmlReader>       Se a folha de estilos contém entidades, deve especificar um <xref:System.Xml.XmlReader>que pode resolver entidades (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=fullName> devolve `true`).</xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=fullName> </xref:System.Xml.XmlReader> Neste caso, um <xref:System.Xml.XmlValidatingReader>pode ser utilizado.</xref:System.Xml.XmlValidatingReader>       Se a folha de estilos contém scripting incorporados, o script é compilado para uma assemblagem. A assemblagem tem fidedignidade total. A prática recomendada consiste em fornecer provas utilizando o <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>método.</xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> Existência de problemas com o <xref:System.Xml.Xsl.XslTransform.Load%2A>folhas de método e estilo com scripts incorporados, consulte o artigo Q316755 na Base de dados de conhecimento da Microsoft em http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>      > [!NOTE] > Se o autor da chamada não tiver `UnmanagedCode` permissão, o script incorporado não é compilado e um <xref:System.Security.SecurityException>é emitida.</xref:System.Security.SecurityException> Consulte <xref:System.Security.Permissions.SecurityPermission>e <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>para obter mais informações.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission>"
  example:
  - "The following example transforms an XML file sorting all the books by title.  \n  \n [!code-cs[XslTransform.Load3#1](~/add/codesnippet/csharp/m-system.xml.xsl.xsltran_1_1.cs)]\n [!code-cpp[XslTransform.Load3#1](~/add/codesnippet/cpp/m-system.xml.xsl.xsltran_1_1.cpp)]\n [!code-vb[XslTransform.Load3#1](~/add/codesnippet/visualbasic/m-system.xml.xsl.xsltran_1_1.vb)]  \n  \n The example uses the following data files as input.  \n  \n `books.xml`  \n  \n [!code-xml[XslTransform.Load3#2](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_1_2.xml)]  \n  \n `titles.xsl`  \n  \n [!code-xml[XslTransform.Load3#3](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_1_3.xsl)]"
  syntax:
    content: public void Load (System.Xml.XmlReader stylesheet);
    parameters:
    - id: stylesheet
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>objeto que contém a folha de estilo XSLT.</xref:System.Xml.XmlReader>"
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "Não é compatível com o nó atual para uma folha de estilo válido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "A folha de estilos contém scripts incorporados e o chamador não tem <xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;> </xref> permissão."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)
  id: Load(System.Xml.XPath.IXPathNavigable)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(IXPathNavigable)
  nameWithType: XslTransform.Load(IXPathNavigable)
  fullName: System.Xml.Xsl.XslTransform.Load(IXPathNavigable)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Carrega a folha de estilo XSLT contida no <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref>."
  remarks: "> [!NOTE]> O <xref:System.Xml.Xsl.XslTransform>classe está obsoleta no .NET Framework versão 2.0.</xref:System.Xml.Xsl.XslTransform> O <xref:System.Xml.Xsl.XslCompiledTransform>classe é o processador XSLT nova.</xref:System.Xml.Xsl.XslCompiledTransform> Para obter mais informações, consulte [utilizando a classe de XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) e [migrar da classe de XslTransform o](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>suporta a sintaxe de XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> A folha de estilo XSLT tem de incluir a declaração de espaço de nomes `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Este método carrega a folha de estilo XSLT, incluindo todas as folhas de estilos referenciadas no `xsl:include` e `xsl:import` elementos. Recursos externos são resolvidos utilizando um <xref:System.Xml.XmlUrlResolver>com credenciais do utilizador.</xref:System.Xml.XmlUrlResolver> Se a folhas de estilo, porque estão localizadas no recurso de rede que requer autenticação, utilize a sobrecarga que recebe um <xref:System.Xml.XmlResolver>como um dos respetivos argumentos e especifique um <xref:System.Xml.XmlResolver>com as credenciais necessárias.</xref:System.Xml.XmlResolver> </xref:System.Xml.XmlResolver>       Se a folha de estilos contém scripting incorporados, o script é compilado para uma assemblagem. A assemblagem tem fidedignidade total. A prática recomendada consiste em fornecer provas utilizando o <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>método.</xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> Existência de problemas com o <xref:System.Xml.Xsl.XslTransform.Load%2A>folhas de método e estilo com scripts incorporados, consulte o artigo Q316755 na Base de dados de conhecimento da Microsoft em http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>      > [!NOTE] > Se o autor da chamada não tiver `UnmanagedCode` permissão, o script incorporado não é compilado e um <xref:System.Security.SecurityException>é emitida.</xref:System.Security.SecurityException> Consulte <xref:System.Security.Permissions.SecurityPermission>e <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>para obter mais informações.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission>"
  syntax:
    content: public void Load (System.Xml.XPath.IXPathNavigable stylesheet);
    parameters:
    - id: stylesheet
      type: System.Xml.XPath.IXPathNavigable
      description: "Implementar um objeto de <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> interface. No .NET Framework, isto pode ser um <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (normalmente, um <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), ou um <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> que contém a folha de estilo XSLT."
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "O recurso carregado não é uma folha de estilo válido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "A folha de estilos contém scripts incorporados e o chamador não tem <xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;> </xref> permissão."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)
  id: Load(System.Xml.XPath.XPathNavigator)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(XPathNavigator)
  nameWithType: XslTransform.Load(XPathNavigator)
  fullName: System.Xml.Xsl.XslTransform.Load(XPathNavigator)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Carrega a folha de estilo XSLT contida no <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>."
  remarks: "> [!NOTE]> O <xref:System.Xml.Xsl.XslTransform>classe está obsoleta no .NET Framework versão 2.0.</xref:System.Xml.Xsl.XslTransform> O <xref:System.Xml.Xsl.XslCompiledTransform>classe é o processador XSLT nova.</xref:System.Xml.Xsl.XslCompiledTransform> Para obter mais informações, consulte [utilizando a classe de XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) e [migrar da classe de XslTransform o](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>suporta a sintaxe de XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> A folha de estilo XSLT tem de incluir a declaração de espaço de nomes `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Este método carrega a folha de estilo XSLT, incluindo todas as folhas de estilos referenciadas no `xsl:include` e `xsl:import` elementos. Recursos externos são resolvidos utilizando um <xref:System.Xml.XmlUrlResolver>com credenciais do utilizador.</xref:System.Xml.XmlUrlResolver> Se a folhas de estilo, porque estão localizadas no recurso de rede que requer autenticação, utilize a sobrecarga que recebe um <xref:System.Xml.XmlResolver>como um dos respetivos argumentos e especifique um <xref:System.Xml.XmlResolver>com as credenciais necessárias.</xref:System.Xml.XmlResolver> </xref:System.Xml.XmlResolver>       A folha de estilos é carregada a partir da posição atual do <xref:System.Xml.XPath.XPathNavigator>.</xref:System.Xml.XPath.XPathNavigator> Para utilizar apenas uma parte do documento carregada como a folha de estilo, navegue para o nó correspondente para o início da folha de estilo. Depois de o devolve o método de carregamento, a <xref:System.Xml.XPath.XPathNavigator>está posicionado no início da folha de estilo (no `xsl:style sheet` nó).</xref:System.Xml.XPath.XPathNavigator>       Se a folha de estilos contém scripting incorporados, o script é compilado para uma assemblagem. A assemblagem tem fidedignidade total. A prática recomendada consiste em fornecer provas utilizando o <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>método.</xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> Existência de problemas com o <xref:System.Xml.Xsl.XslTransform.Load%2A>folhas de método e estilo com scripts incorporados, consulte o artigo Q316755 na Base de dados de conhecimento da Microsoft em http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>      > [!NOTE] > Se o autor da chamada não tiver `UnmanagedCode` permissão, o script incorporado não é compilado e um <xref:System.Security.SecurityException>é emitida.</xref:System.Security.SecurityException> Consulte <xref:System.Security.Permissions.SecurityPermission>e <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>para obter mais informações.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission>"
  syntax:
    content: public void Load (System.Xml.XPath.XPathNavigator stylesheet);
    parameters:
    - id: stylesheet
      type: System.Xml.XPath.XPathNavigator
      description: "Um <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> objeto que contém a folha de estilo XSLT."
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "Não é compatível com o nó atual para uma folha de estilo válido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "A folha de estilos contém scripts incorporados e o chamador não tem <xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;> </xref> permissão."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)
  id: Load(System.String,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(String,XmlResolver)
  nameWithType: XslTransform.Load(String,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(String,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Carrega a folha de estilo XSLT especificada por um URL."
  remarks: "> [!NOTE]> O <xref:System.Xml.Xsl.XslTransform>classe está obsoleta no .NET Framework versão 2.0.</xref:System.Xml.Xsl.XslTransform> O <xref:System.Xml.Xsl.XslCompiledTransform>classe é o processador XSLT nova.</xref:System.Xml.Xsl.XslCompiledTransform> Para obter mais informações, consulte [utilizando a classe de XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) e [migrar da classe de XslTransform o](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>suporta a sintaxe de XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> A folha de estilo XSLT tem de incluir a declaração de espaço de nomes `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Se a folha de estilos contém scripting incorporados, o script é compilado para uma assemblagem. O URI da folha de estilo é utilizado para criar provas, que é aplicada à assemblagem. Existência de problemas com o <xref:System.Xml.Xsl.XslTransform.Load%2A>folhas de método e estilo com scripts incorporados, consulte o artigo Q316755 na Base de dados de conhecimento da Microsoft em http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>      > [!NOTE] > Se o autor da chamada não tiver `UnmanagedCode` permissão, o script incorporado não é compilado e um <xref:System.Security.SecurityException>é emitida.</xref:System.Security.SecurityException> Consulte <xref:System.Security.Permissions.SecurityPermission>e <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>para obter mais informações.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission>"
  example:
  - "The following example transforms an XML document into an HTML document. The example loads an XSLT style sheet which contains an `xsl:include` element referencing another style sheet. An <xref:System.Xml.XmlUrlResolver> is passed to the Load method which sets the credentials necessary to access the network resource for the included style sheet.  \n  \n [!code-vb[XslTransform.Load2#1](~/add/codesnippet/visualbasic/m-system.xml.xsl.xsltran_3_1.vb)]\n [!code-cs[XslTransform.Load2#1](~/add/codesnippet/csharp/m-system.xml.xsl.xsltran_3_1.cs)]  \n  \n The example uses the following data files as input.  \n  \n `books.xml`  \n  \n [!code-xml[XslTransform.Load2#2](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_3_2.xml)]  \n  \n `sort.xsl`  \n  \n [!code-xml[XslTransform.Load2#3](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_3_3.xsl)]  \n  \n `includefile.xsl`  \n  \n [!code-xml[XslTransform.Load2#4](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_3_4.xsl)]"
  syntax:
    content: public void Load (string url, System.Xml.XmlResolver resolver);
    parameters:
    - id: url
      type: System.String
      description: "O URL que especifica a folha de estilo XSLT para carregar."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "O <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> a utilizar para carregar a folha de estilo e qualquer estilo folhas, porque, referenciado no `xsl:import` e `xsl:include` elementos.       Se este for <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, uma predefinição <xref href=&quot;System.Xml.XmlUrlResolver&quot;> </xref> with nenhum utilizador credenciais é utilizado para abrir a folha de estilos. A predefinição <xref href=&quot;System.Xml.XmlUrlResolver&quot;> </xref> não é utilizado para resolver quaisquer recursos externos na folha de estilo, por isso, `xsl:import` e `xsl:include` elementos não estão resolvidos.       O <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> não é colocadas em cache após a conclusão do método de carregamento."
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "O recurso carregado não é uma folha de estilo válido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "A folha de estilos contém o script incorporado e não tem o autor da chamada <xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;> </xref> permissão."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)
  id: Load(System.Xml.XmlReader,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(XmlReader,XmlResolver)
  nameWithType: XslTransform.Load(XmlReader,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(XmlReader,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Carrega a folha de estilo XSLT contida no <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  remarks: "> [!NOTE]> O <xref:System.Xml.Xsl.XslTransform>classe está obsoleta no .NET Framework versão 2.0.</xref:System.Xml.Xsl.XslTransform> O <xref:System.Xml.Xsl.XslCompiledTransform>classe é o processador XSLT nova.</xref:System.Xml.Xsl.XslCompiledTransform> Para obter mais informações, consulte [utilizando a classe de XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) e [migrar da classe de XslTransform o](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>suporta a sintaxe de XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> A folha de estilo XSLT tem de incluir a declaração de espaço de nomes `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Este método carrega a folha de estilo XSLT, incluindo todas as folhas de estilos referenciadas no `xsl:include` e `xsl:import` elementos. A folha de estilo carrega a partir do nó atual do <xref:System.Xml.XmlReader>através de todos os respectivos valores secundários.</xref:System.Xml.XmlReader> Isto permite-lhe utilizar uma parte de um documento como a folha de estilos.       Depois de devolve o método de carregamento, a <xref:System.Xml.XmlReader>está posicionado no nó seguinte após o fim da folha de estilo.</xref:System.Xml.XmlReader> Se for atingido o fim do documento, o <xref:System.Xml.XmlReader>está posicionado o fim do ficheiro (EOF).</xref:System.Xml.XmlReader>       Se a folha de estilos contém entidades, deve especificar um <xref:System.Xml.XmlReader>que pode resolver entidades (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=fullName> devolve `true`).</xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=fullName> </xref:System.Xml.XmlReader> Neste caso, um <xref:System.Xml.XmlValidatingReader>pode ser utilizado.</xref:System.Xml.XmlValidatingReader>       Se a folha de estilos contém scripting incorporados, o script é compilado para uma assemblagem. A assemblagem tem fidedignidade total. A prática recomendada consiste em fornecer provas utilizando o <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>método.</xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> Existência de problemas com o <xref:System.Xml.Xsl.XslTransform.Load%2A>folhas de método e estilo com embedded scripts Consulte o artigo Q316755 na Base de dados de conhecimento da Microsoft em http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>      > [!NOTE] > Se o autor da chamada não tiver `UnmanagedCode` permissão, o script incorporado não é compilado e um <xref:System.Security.SecurityException>é emitida.</xref:System.Security.SecurityException> Consulte <xref:System.Security.Permissions.SecurityPermission>e <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>para obter mais informações.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission>"
  syntax:
    content: public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver);
    parameters:
    - id: stylesheet
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>objeto que contém a folha de estilo XSLT.</xref:System.Xml.XmlReader>"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "O <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> utilizada para carregar todas as folhas de estilos referenciadas no `xsl:import` e `xsl:include` elementos. Se este for <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, recursos externos não estão resolvidos.       O <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> não é colocadas em cache após a conclusão do método de carregamento."
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "Não é compatível com o nó atual para uma folha de estilo válido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "A folha de estilos contém scripts incorporados e o chamador não tem <xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;> </xref> permissão."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)
  id: Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(IXPathNavigable,XmlResolver)
  nameWithType: XslTransform.Load(IXPathNavigable,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(IXPathNavigable,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Carrega a folha de estilo XSLT contida no <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref>."
  remarks: "> [!NOTE]> O <xref:System.Xml.Xsl.XslTransform>classe está obsoleta no .NET Framework versão 2.0.</xref:System.Xml.Xsl.XslTransform> O <xref:System.Xml.Xsl.XslCompiledTransform>classe é o processador XSLT nova.</xref:System.Xml.Xsl.XslCompiledTransform> Para obter mais informações, consulte [utilizando a classe de XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) e [migrar da classe de XslTransform o](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>suporta a sintaxe de XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> A folha de estilo XSLT tem de incluir a declaração de espaço de nomes `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Se a folha de estilos contém scripting incorporados, o script é compilado para uma assemblagem. A assemblagem tem fidedignidade total. A prática recomendada consiste em fornecer provas utilizando o <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>método.</xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> Existência de problemas com o <xref:System.Xml.Xsl.XslTransform.Load%2A>folhas de método e estilo com scripts incorporados, consulte o artigo Q316755 na Base de dados de conhecimento da Microsoft em http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>      > [!NOTE] > Se o autor da chamada não tiver `UnmanagedCode` permissão, o script incorporado não é compilado e um <xref:System.Security.SecurityException>é emitida.</xref:System.Security.SecurityException> Consulte <xref:System.Security.Permissions.SecurityPermission>e <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>para obter mais informações.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission>"
  syntax:
    content: public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver);
    parameters:
    - id: stylesheet
      type: System.Xml.XPath.IXPathNavigable
      description: "Implementar um objeto de <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> interface. No .NET Framework, isto pode ser um <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (normalmente, um <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), ou um <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> que contém a folha de estilo XSLT."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "O <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> utilizada para carregar todas as folhas de estilos referenciadas no `xsl:import` e `xsl:include` elementos. Se este for <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, recursos externos não estão resolvidos.       O <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> não é colocado em cache após o <xref:System.Xml.Xsl.XslTransform.Load*>método concluída.</xref:System.Xml.Xsl.XslTransform.Load*>"
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "O recurso carregado não é uma folha de estilo válido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "A folha de estilos contém scripts incorporados e o chamador não tem <xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;> </xref> permissão."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)
  id: Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(XPathNavigator,XmlResolver)
  nameWithType: XslTransform.Load(XPathNavigator,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(XPathNavigator,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Carrega a folha de estilo XSLT contida no <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>."
  remarks: "> [!NOTE]> O <xref:System.Xml.Xsl.XslTransform>classe está obsoleta no .NET Framework versão 2.0.</xref:System.Xml.Xsl.XslTransform> O <xref:System.Xml.Xsl.XslCompiledTransform>classe é o processador XSLT nova.</xref:System.Xml.Xsl.XslCompiledTransform> Para obter mais informações, consulte [utilizando a classe de XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) e [migrar da classe de XslTransform o](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>suporta a sintaxe de XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> A folha de estilo XSLT tem de incluir a declaração de espaço de nomes `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       A folha de estilos é carregada a partir da posição atual do <xref:System.Xml.XPath.XPathNavigator>.</xref:System.Xml.XPath.XPathNavigator> Para utilizar uma parte do documento carregada como a folha de estilo, navegue para o nó correspondente para o início da folha de estilo. Depois de o devolve o método de carregamento, a <xref:System.Xml.XPath.XPathNavigator>está posicionado no início da folha de estilo (no `xsl:style sheet` nó).</xref:System.Xml.XPath.XPathNavigator>       Se a folha de estilos contém scripting incorporados, o script é compilado para uma assemblagem. A assemblagem tem fidedignidade total. A prática recomendada consiste em fornecer provas utilizando <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>.</xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> Existência de problemas com o <xref:System.Xml.Xsl.XslTransform.Load%2A>folhas de método e estilo com scripts incorporados, consulte o artigo Q316755 na Base de dados de conhecimento da Microsoft em http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>      > [!NOTE] > Se o autor da chamada não tiver `UnmanagedCode` permissão, o script incorporado não é compilado e um <xref:System.Security.SecurityException>é emitida.</xref:System.Security.SecurityException> Consulte <xref:System.Security.Permissions.SecurityPermission>e <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>para obter mais informações.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission>"
  syntax:
    content: public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver);
    parameters:
    - id: stylesheet
      type: System.Xml.XPath.XPathNavigator
      description: "Um <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> objeto que contém a folha de estilo XSLT."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "O <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> utilizada para carregar todas as folhas de estilos referenciadas no `xsl:import` e `xsl:include` elementos. Se este for <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, recursos externos não estão resolvidos.       O <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> não é colocado em cache após o <xref:System.Xml.Xsl.XslTransform.Load*>método concluída.</xref:System.Xml.Xsl.XslTransform.Load*>"
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "Não é compatível com o nó atual para uma folha de estilo válido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "A folha de estilos contém scripts incorporados e o chamador não tem <xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;> </xref> permissão."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  id: Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(XmlReader,XmlResolver,Evidence)
  nameWithType: XslTransform.Load(XmlReader,XmlResolver,Evidence)
  fullName: System.Xml.Xsl.XslTransform.Load(XmlReader,XmlResolver,Evidence)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Carrega a folha de estilo XSLT contida no <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader> Este método permite-lhe limitar as permissões da folha de estilo, especificando provas."
  remarks: "> [!NOTE]> O <xref:System.Xml.Xsl.XslTransform>classe está obsoleta no .NET Framework versão 2.0.</xref:System.Xml.Xsl.XslTransform> O <xref:System.Xml.Xsl.XslCompiledTransform>classe é o processador XSLT nova.</xref:System.Xml.Xsl.XslCompiledTransform> Para obter mais informações, consulte [utilizando a classe de XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) e [migrar da classe de XslTransform o](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>suporta a sintaxe de XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> A folha de estilo XSLT tem de incluir a declaração de espaço de nomes `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Este método carrega a folha de estilo XSLT, incluindo todas as folhas de estilos referenciadas no `xsl:include` e `xsl:import` elementos. A folha de estilo carrega a partir do nó atual do <xref:System.Xml.XmlReader>através de todos os respectivos valores secundários.</xref:System.Xml.XmlReader> Isto permite-lhe utilizar uma parte de um documento como a folha de estilos.       Depois de devolve o método de carregamento, a <xref:System.Xml.XmlReader>está posicionado no nó seguinte após o fim da folha de estilo.</xref:System.Xml.XmlReader> Se for atingido o fim do documento, o <xref:System.Xml.XmlReader>está posicionado o fim do ficheiro (EOF).</xref:System.Xml.XmlReader>       Se a folha de estilos contém entidades, deve especificar um <xref:System.Xml.XmlReader>que pode resolver entidades (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=fullName> devolve `true`).</xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=fullName> </xref:System.Xml.XmlReader> Neste caso, um <xref:System.Xml.XmlValidatingReader>pode ser utilizado.</xref:System.Xml.XmlValidatingReader>       Existência de problemas com o <xref:System.Xml.Xsl.XslTransform.Load%2A>folhas de método e estilo com scripts incorporados, consulte o artigo Q316755 na Base de dados de conhecimento da Microsoft em http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>       Existem várias formas para fornecer provas. A tabela seguinte descreve o tipo de prova para fornecer para cenários comuns do utilizador."
  example:
  - "The following example performs an XSLT transformation where `xsltReader` is an <xref:System.Xml.XmlReader> containing a style sheet and `secureURL` is a trusted URL that can be used to create <xref:System.Security.Policy.Evidence>. The <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A?displayProperty=fullName> method is used to create <xref:System.Security.Policy.Evidence> which is applied to the style sheet.  \n  \n [!code-vb[XslTransform.Load4#1](~/add/codesnippet/visualbasic/a033551f-1c0f-4994-8153-_1.vb)]\n [!code-cs[XslTransform.Load4#1](~/add/codesnippet/csharp/a033551f-1c0f-4994-8153-_1.cs)]\n [!code-cpp[XslTransform.Load4#1](~/add/codesnippet/cpp/a033551f-1c0f-4994-8153-_1.cpp)]"
  syntax:
    content: public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);
    parameters:
    - id: stylesheet
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>objeto que contém a folha de estilo para carregar.</xref:System.Xml.XmlReader>"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "O <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> utilizada para carregar todas as folhas de estilos referenciadas no `xsl:import` e `xsl:include` elementos. Se este for <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, recursos externos não estão resolvidos.       O <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> não é colocado em cache após o <xref:System.Xml.Xsl.XslTransform.Load*>método concluída.</xref:System.Xml.Xsl.XslTransform.Load*>"
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "O <xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> definido na assemblagem gerada para o bloco de script na folha de estilo de XSLT.       Se este for <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, script blocos não são processados, o XSLT `document()` função não é suportada e objetos de extensão com privilégios não são permitidos.       O chamador tem de ter <xref uid=&quot;langword_csharp_ControlEvidence&quot; name=&quot;ControlEvidence&quot; href=&quot;&quot;> </xref> permissão para fornecer provas para a assemblagem de script. Os chamadores por fidedignos podem defina este parâmetro <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "Não é compatível com o nó atual para uma folha de estilo válido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "A folha de estilos referenciado requerer a funcionalidade que não é permitida pelo provas fornecida.       O autor da chamada tenta fornecer provas e não tem <xref uid=&quot;langword_csharp_ControlEvidence&quot; name=&quot;ControlEvidence&quot; href=&quot;&quot;> </xref> permissão."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  id: Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(IXPathNavigable,XmlResolver,Evidence)
  nameWithType: XslTransform.Load(IXPathNavigable,XmlResolver,Evidence)
  fullName: System.Xml.Xsl.XslTransform.Load(IXPathNavigable,XmlResolver,Evidence)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Carrega a folha de estilo XSLT contida no <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref>. Este método permite-lhe limitar as permissões da folha de estilo, especificando provas."
  remarks: "> [!NOTE]> O <xref:System.Xml.Xsl.XslTransform>classe está obsoleta no .NET Framework versão 2.0.</xref:System.Xml.Xsl.XslTransform> O <xref:System.Xml.Xsl.XslCompiledTransform>classe é o processador XSLT nova.</xref:System.Xml.Xsl.XslCompiledTransform> Para obter mais informações, consulte [utilizando a classe de XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) e [migrar da classe de XslTransform o](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>suporta a sintaxe de XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> A folha de estilo XSLT tem de incluir a declaração de espaço de nomes `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       Existência de problemas com o <xref:System.Xml.Xsl.XslTransform.Load%2A>folhas de método e estilo com scripts incorporados, consulte o artigo Q316755 na Base de dados de conhecimento da Microsoft em http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>       Existem várias formas para fornecer provas. A tabela seguinte descreve o tipo de prova para fornecer para cenários comuns do utilizador."
  syntax:
    content: public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);
    parameters:
    - id: stylesheet
      type: System.Xml.XPath.IXPathNavigable
      description: "Implementar um objeto de <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> interface. No .NET Framework, isto pode ser um <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (normalmente, um <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), ou um <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> que contém a folha de estilo XSLT."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "O <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> utilizada para carregar todas as folhas de estilos referenciadas no `xsl:import` e `xsl:include` elementos. Se este for <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, recursos externos não estão resolvidos.       O <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> não é colocado em cache após o <xref:System.Xml.Xsl.XslTransform.Load*>método concluída.</xref:System.Xml.Xsl.XslTransform.Load*>"
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "O <xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> definido na assemblagem gerada para o bloco de script na folha de estilo de XSLT.       Se este for <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, script blocos não são processados, o XSLT `document()` função não é suportada e objetos de extensão com privilégios não são permitidos.       O chamador tem de ter <xref uid=&quot;langword_csharp_ControlEvidence&quot; name=&quot;ControlEvidence&quot; href=&quot;&quot;> </xref> permissão para fornecer provas para a assemblagem de script. Os chamadores por fidedignos podem defina este parâmetro <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "O recurso carregado não é uma folha de estilo válido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "A folha de estilos referenciado requerer a funcionalidade que não é permitida pelo provas fornecida.       O autor da chamada tenta fornecer provas e não tem <xref uid=&quot;langword_csharp_ControlEvidence&quot; name=&quot;ControlEvidence&quot; href=&quot;&quot;> </xref> permissão."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  id: Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(XPathNavigator,XmlResolver,Evidence)
  nameWithType: XslTransform.Load(XPathNavigator,XmlResolver,Evidence)
  fullName: System.Xml.Xsl.XslTransform.Load(XPathNavigator,XmlResolver,Evidence)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Carrega a folha de estilo XSLT contida no <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>. Este método permite-lhe limitar as permissões da folha de estilo, especificando provas."
  remarks: "> [!NOTE]> O <xref:System.Xml.Xsl.XslTransform>classe está obsoleta no .NET Framework versão 2.0.</xref:System.Xml.Xsl.XslTransform> O <xref:System.Xml.Xsl.XslCompiledTransform>classe é o processador XSLT nova.</xref:System.Xml.Xsl.XslCompiledTransform> Para obter mais informações, consulte [utilizando a classe de XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) e [migrar da classe de XslTransform o](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>suporta a sintaxe de XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> A folha de estilo XSLT tem de incluir a declaração de espaço de nomes `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       A folha de estilos é carregada a partir da posição atual do <xref:System.Xml.XPath.XPathNavigator>.</xref:System.Xml.XPath.XPathNavigator> Para utilizar uma parte do documento carregada como a folha de estilo, navegue para o nó correspondente para o início da folha de estilo. Depois de o devolve o método de carregamento, a <xref:System.Xml.XPath.XPathNavigator>está posicionado no início da folha de estilo (no `xsl:style sheet` nó).</xref:System.Xml.XPath.XPathNavigator>       Existência de problemas com o <xref:System.Xml.Xsl.XslTransform.Load%2A>folhas de método e estilo com scripts incorporados, consulte o artigo Q316755 na Base de dados de conhecimento da Microsoft em http://support.microsoft.com.</xref:System.Xml.Xsl.XslTransform.Load%2A>       Existem várias formas para fornecer provas. A tabela seguinte descreve o tipo de prova para fornecer para cenários comuns do utilizador."
  example:
  - "The following example performs an XSLT transformation using a style sheet from an outside source. Because the style sheet comes from an untrusted source, the `resolver` and `evidence` parameters are set to `null`.  \n  \n [!code-cs[XslTransform.Load5#1](~/add/codesnippet/csharp/3ff68c6b-cad3-409a-909a-_1.cs)]\n [!code-vb[XslTransform.Load5#1](~/add/codesnippet/visualbasic/3ff68c6b-cad3-409a-909a-_1.vb)]"
  syntax:
    content: public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);
    parameters:
    - id: stylesheet
      type: System.Xml.XPath.XPathNavigator
      description: "Um <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> objeto que contém a folha de estilo para carregar."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "O <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> utilizada para carregar todas as folhas de estilos referenciadas no `xsl:import` e `xsl:include` elementos. Se este for <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, recursos externos não estão resolvidos.       O <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> não é colocado em cache após o <xref:System.Xml.Xsl.XslTransform.Load*>método concluída.</xref:System.Xml.Xsl.XslTransform.Load*>"
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "O <xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> definido na assemblagem gerada para o bloco de script na folha de estilo de XSLT.       Se este for <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, script blocos não são processados, o XSLT `document()` função não é suportada e objetos de extensão com privilégios não são permitidos.       O chamador tem de ter <xref uid=&quot;langword_csharp_ControlEvidence&quot; name=&quot;ControlEvidence&quot; href=&quot;&quot;> </xref> permissão para fornecer provas para a assemblagem de script. Os chamadores por fidedignos podem defina este parâmetro <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "Não é compatível com o nó atual para uma folha de estilo válido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "A folha de estilos referenciado requerer a funcionalidade que não é permitida pelo provas fornecida.       O autor da chamada tenta fornecer provas e não tem <xref uid=&quot;langword_csharp_ControlEvidence&quot; name=&quot;ControlEvidence&quot; href=&quot;&quot;> </xref> permissão."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.String,System.String)
  id: Transform(System.String,System.String)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(String,String)
  nameWithType: XslTransform.Transform(String,String)
  fullName: System.Xml.Xsl.XslTransform.Transform(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transforma os dados XML no ficheiro de entrada e produz o resultado para um ficheiro de saída."
  remarks: "> [!NOTE]> O <xref:System.Xml.Xsl.XslTransform>classe está obsoleta no .NET Framework versão 2.0.</xref:System.Xml.Xsl.XslTransform> O <xref:System.Xml.Xsl.XslCompiledTransform>classe é o processador XSLT nova.</xref:System.Xml.Xsl.XslCompiledTransform> Para obter mais informações, consulte [utilizando a classe de XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) e [migrar da classe de XslTransform o](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>suporta a sintaxe de XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> A folha de estilo XSLT tem de incluir a declaração de espaço de nomes `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.      > [!NOTE] > Este método está obsoleto na versão 1.1 do .NET Framework. A definição do <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>propriedade determina como o XSLT `document()` função está resolvida.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> A prática recomendada consiste em utilizar o <xref:System.Xml.Xsl.XslTransform.Transform%2A>método que assume um <xref:System.Xml.XmlResolver>objeto como um dos respetivos argumentos.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>"
  example:
  - "The following example transforms the `books.xml` file using the `output.xsl` style sheet and outputs the results to the `books.html` file.  \n  \n [!code-cs[XslTransform.Transform3#1](~/add/codesnippet/csharp/m-system.xml.xsl.xsltran_2_1.cs)]\n [!code-cpp[XslTransform.Transform3#1](~/add/codesnippet/cpp/m-system.xml.xsl.xsltran_2_1.cpp)]\n [!code-vb[XslTransform.Transform3#1](~/add/codesnippet/visualbasic/m-system.xml.xsl.xsltran_2_1.vb)]  \n  \n The sample uses the following two input files:  \n  \n `books.xml`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_2_2.xml)]  \n  \n `output.xsl`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_2_3.xsl)]"
  syntax:
    content: public void Transform (string inputfile, string outputfile);
    parameters:
    - id: inputfile
      type: System.String
      description: "O URL do documento de origem ser transformados."
    - id: outputfile
      type: System.String
      description: "O URL do ficheiro de saída."
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transforma os dados XML a <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> utilizando especificado <code> args </code> e produz o resultado a uma <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  remarks: "> [!NOTE]> O <xref:System.Xml.Xsl.XslTransform>classe está obsoleta no .NET Framework versão 2.0.</xref:System.Xml.Xsl.XslTransform> O <xref:System.Xml.Xsl.XslCompiledTransform>classe é o processador XSLT nova.</xref:System.Xml.Xsl.XslCompiledTransform> Para obter mais informações, consulte [utilizando a classe de XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) e [migrar da classe de XslTransform o](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>suporta a sintaxe de XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> A folha de estilo XSLT tem de incluir a declaração de espaço de nomes `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.      > [!NOTE] > Este método está obsoleto. A definição do <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>propriedade determina como o XSLT `document()` função está resolvida.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> A prática recomendada consiste em utilizar o <xref:System.Xml.Xsl.XslTransform.Transform%2A>método que assume um <xref:System.Xml.XmlResolver>objeto como um dos respetivos argumentos.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>       O `args` é feita a correspondência com a `xsl:param` elementos definidos na folha de estilo. O `xsl:output` elemento não é suportado quando exportar para um <xref:System.Xml.XmlReader>(o `xsl:output` elemento é ignorado).</xref:System.Xml.XmlReader> Consulte [saídas de um XslTransform](~/add/includes/ajax-current-ext-md.md) para obter mais informações.       Este método permite-lhe fazer uma transformação assíncrona do documento de origem.       Transformações de aplicam o documento como um todo. Por outras palavras, se passar num nó diferente do nó de raiz do documento, este não impede que o processo de transformação aceder a todos os nós no documento de carregar. Transformar um fragmento de nó, tem de criar um <xref:System.Xml.XmlDocument>que contém apenas o nó de fragmento e passar que <xref:System.Xml.XmlDocument>para o método de transformação.</xref:System.Xml.XmlDocument> </xref:System.Xml.XmlDocument>       O exemplo seguinte executa uma transformação num fragmento de nó.      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out);   ```O exemplo utiliza o `library.xml` e `print_root.xsl` ficheiros como entrada e produz o seguinte para a consola.      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />      <template match=&quot;/&quot;>        Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  syntax:
    content: public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "Implementar um objeto de <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> interface. No .NET Framework, isto pode ser um <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (normalmente, um <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), ou um <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> que contém os dados para ser transformados."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "Um <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> que contém os argumentos de espaço de nomes qualificado utilizados como entrada para a transformação."
    return:
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>que contém os resultados da transformação.</xref:System.Xml.XmlReader>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transforma os dados XML a <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> utilizando especificado <code> args </code> e produz o resultado a uma <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  remarks: "> [!NOTE]> O <xref:System.Xml.Xsl.XslTransform>classe está obsoleta no .NET Framework versão 2.0.</xref:System.Xml.Xsl.XslTransform> O <xref:System.Xml.Xsl.XslCompiledTransform>classe é o processador XSLT nova.</xref:System.Xml.Xsl.XslCompiledTransform> Para obter mais informações, consulte [utilizando a classe de XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) e [migrar da classe de XslTransform o](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>suporta a sintaxe de XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> A folha de estilo XSLT tem de incluir a declaração de espaço de nomes `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       O `args` é feita a correspondência com a `xsl:param` elementos definidos na folha de estilo. As seleções de transformação aplicam-se o documento como um todo. Por outras palavras, se o nó atual está definido numa árvore de nó que não seja o nó de raiz do documento, este não impede que o processo de transformação aceder a todos os nós no documento de carregar. Depois de ter sido efetuada a transformação, a <xref:System.Xml.XPath.XPathNavigator>permanece no seu estado original.</xref:System.Xml.XPath.XPathNavigator> Isto significa que o nó, o que é atual antes do processo de transformação, permanece o nó atual depois de ter sido chamado o método de transformação.       Porque <xref:System.Xml.XmlReader>fornece saída só de leitura, o `xsl:output` elemento é ignorado.</xref:System.Xml.XmlReader> Consulte [saídas de um XslTransform](~/add/includes/ajax-current-ext-md.md) para obter mais informações.       Este método permite-lhe fazer uma transformação assíncrona do documento de origem.      > [!NOTE] > Este método está obsoleto. A definição do <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>propriedade determina a forma como a função de Document () XSLT está resolvida.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> A prática recomendada consiste em utilizar o <xref:System.Xml.Xsl.XslTransform.Transform%2A>método que assume um <xref:System.Xml.XmlResolver>objeto como um dos respetivos argumentos.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>"
  syntax:
    content: public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "Um <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> que contém os dados para ser transformados."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "Um <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> que contém os argumentos de espaço de nomes qualificado utilizados como entrada para a transformação."
    return:
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>que contém os resultados da transformação.</xref:System.Xml.XmlReader>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ocorreu um erro ao processar a transformação XSLT.       Nota: Esta é uma alteração no comportamento de versões anteriores. Um <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> é emitida se estiver a utilizar o Microsoft .NET Framework versão 1.1 ou anterior."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)
  id: Transform(System.String,System.String,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(String,String,XmlResolver)
  nameWithType: XslTransform.Transform(String,String,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(String,String,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transforma os dados XML no ficheiro de entrada e produz o resultado para um ficheiro de saída."
  remarks: "> [!NOTE]> O <xref:System.Xml.Xsl.XslTransform>classe está obsoleta no .NET Framework versão 2.0.</xref:System.Xml.Xsl.XslTransform> O <xref:System.Xml.Xsl.XslCompiledTransform>classe é o processador XSLT nova.</xref:System.Xml.Xsl.XslCompiledTransform> Para obter mais informações, consulte [utilizando a classe de XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) e [migrar da classe de XslTransform o](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>suporta a sintaxe de XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> A folha de estilo XSLT tem de incluir a declaração de espaço de nomes `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`."
  example:
  - "The following example performs an XSLT transformation and outputs to a file. An <xref:System.Xml.XmlUrlResolver> with default credentials is used resolve an external resources. See <xref:System.Net.CredentialCache.DefaultCredentials%2A> for details.  \n  \n [!code-cs[XslTransform.Transform7#1](~/add/codesnippet/csharp/86f1726f-f5ec-4750-8359-_1.cs)]\n [!code-vb[XslTransform.Transform7#1](~/add/codesnippet/visualbasic/86f1726f-f5ec-4750-8359-_1.vb)]\n [!code-cpp[XslTransform.Transform7#1](~/add/codesnippet/cpp/86f1726f-f5ec-4750-8359-_1.cpp)]"
  syntax:
    content: public void Transform (string inputfile, string outputfile, System.Xml.XmlResolver resolver);
    parameters:
    - id: inputfile
      type: System.String
      description: "O URL do documento de origem ser transformados."
    - id: outputfile
      type: System.String
      description: "O URL do ficheiro de saída."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "O <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> utilizado para resolver o XSLT `document()` função. Se este for <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, a `document()` função não está resolvida.       O <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> não é colocado em cache após o <xref:System.Xml.Xsl.XslTransform.Transform*>método concluída.</xref:System.Xml.Xsl.XslTransform.Transform*>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,Stream)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transforma os dados XML a <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> utilizando especificado <code> args </code> e produz o resultado a uma <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "> [!NOTE]> O <xref:System.Xml.Xsl.XslTransform>classe está obsoleta no .NET Framework versão 2.0.</xref:System.Xml.Xsl.XslTransform> O <xref:System.Xml.Xsl.XslCompiledTransform>classe é o processador XSLT nova.</xref:System.Xml.Xsl.XslCompiledTransform> Para obter mais informações, consulte [utilizando a classe de XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) e [migrar da classe de XslTransform o](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>suporta a sintaxe de XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> A folha de estilo XSLT tem de incluir a declaração de espaço de nomes `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.      > [!NOTE] > Este método está obsoleto. A definição do <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>propriedade determina como o XSLT `document()` função está resolvida.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> A prática recomendada consiste em utilizar o <xref:System.Xml.Xsl.XslTransform.Transform%2A>método que assume um <xref:System.Xml.XmlResolver>objeto como um dos respetivos argumentos.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>       O `args` é feita a correspondência com a `xsl:param` elementos definidos na folha de estilo.       Transformações de aplicam o documento como um todo. Por outras palavras, se passar num nó diferente do nó de raiz do documento, este não impede que o processo de transformação aceder a todos os nós no documento de carregar. Transformar um fragmento de nó, tem de criar um <xref:System.Xml.XmlDocument>que contém apenas o nó de fragmento e passar que <xref:System.Xml.XmlDocument>para o método de transformação.</xref:System.Xml.XmlDocument> </xref:System.Xml.XmlDocument>       O exemplo seguinte executa uma transformação num fragmento de nó.      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out);   ```O exemplo utiliza o `library.xml` e `print_root.xsl` ficheiros como entrada e produz o seguinte para a consola.      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />      <template match=&quot;/&quot;>        Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "Implementar um objeto de <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> interface. No .NET Framework, isto pode ser um <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (normalmente, um <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), ou um <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> que contém os dados para ser transformados."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "Um <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> que contém os argumentos de espaço de nomes qualificado utilizados como entrada para a transformação."
    - id: output
      type: System.IO.Stream
      description: "O fluxo para o qual pretende de saída."
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ocorreu um erro ao processar a transformação XSLT.       Nota: Esta é uma alteração no comportamento de versões anteriores. Um <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> é emitida se estiver a utilizar o Microsoft .NET Framework versão 1.1 ou anterior."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,TextWriter)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transforma os dados XML a <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> utilizando especificado <code> args </code> e produz o resultado a uma <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter>"
  remarks: "> [!NOTE]> O <xref:System.Xml.Xsl.XslTransform>classe está obsoleta no .NET Framework versão 2.0.</xref:System.Xml.Xsl.XslTransform> O <xref:System.Xml.Xsl.XslCompiledTransform>classe é o processador XSLT nova.</xref:System.Xml.Xsl.XslCompiledTransform> Para obter mais informações, consulte [utilizando a classe de XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) e [migrar da classe de XslTransform o](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>suporta a sintaxe de XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> A folha de estilo XSLT tem de incluir a declaração de espaço de nomes `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.      > [!NOTE] > Este método está obsoleto. A definição do <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>propriedade determina como o XSLT `document()` função está resolvida.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> A prática recomendada consiste em utilizar o <xref:System.Xml.Xsl.XslTransform.Transform%2A>método que assume um <xref:System.Xml.XmlResolver>objeto como um dos respetivos argumentos.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>       O `args` é feita a correspondência com a `xsl:param` elementos definidos na folha de estilo.       O atributo de codificação num `xsl:output` elemento não é suportado quando exportar para um <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter> Consulte [saídas de um XslTransform](~/add/includes/ajax-current-ext-md.md) para especificações no qual `xsl:output` atributos são suportados.       Transformações de aplicam o documento como um todo. Por outras palavras, se passar num nó diferente do nó de raiz do documento, este não impede que o processo de transformação aceder a todos os nós no documento de carregar. Transformar um fragmento de nó, tem de criar um <xref:System.Xml.XmlDocument>que contém apenas o nó de fragmento e passar que <xref:System.Xml.XmlDocument>para o método de transformação.</xref:System.Xml.XmlDocument> </xref:System.Xml.XmlDocument>       O exemplo seguinte executa uma transformação num fragmento de nó.      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out);   ```O exemplo utiliza o `library.xml` e `print_root.xsl` ficheiros como entrada e produz o seguinte para a consola.      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />      <template match=&quot;/&quot;>        Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "Implementar um objeto de <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> interface. No .NET Framework, isto pode ser um <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (normalmente, um <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), ou um <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> que contém os dados para ser transformados."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "Um <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> que contém os argumentos de espaço de nomes qualificado utilizados como entrada para a transformação."
    - id: output
      type: System.IO.TextWriter
      description: "O <xref:System.IO.TextWriter>ao qual pretende de saída.</xref:System.IO.TextWriter>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ocorreu um erro ao processar a transformação XSLT.       Nota: Esta é uma alteração no comportamento de versões anteriores. Um <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> é emitida se estiver a utilizar o Microsoft .NET Framework versão 1.1 ou anterior."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transforma os dados XML a <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> utilizando especificado <code> args </code> e produz o resultado a uma <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  remarks: "> [!NOTE]> O <xref:System.Xml.Xsl.XslTransform>classe está obsoleta no .NET Framework versão 2.0.</xref:System.Xml.Xsl.XslTransform> O <xref:System.Xml.Xsl.XslCompiledTransform>classe é o processador XSLT nova.</xref:System.Xml.Xsl.XslCompiledTransform> Para obter mais informações, consulte [utilizando a classe de XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) e [migrar da classe de XslTransform o](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>suporta a sintaxe de XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> A folha de estilo XSLT tem de incluir a declaração de espaço de nomes `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       O `args` é feita a correspondência com a `xsl:param` elementos definidos na folha de estilo. O `xsl:output` elemento não é suportado quando exportar para um <xref:System.Xml.XmlReader>(o `xsl:output` elemento é ignorado).</xref:System.Xml.XmlReader> Consulte [saídas de um XslTransform](~/add/includes/ajax-current-ext-md.md) para obter mais informações.       Este método permite-lhe fazer uma transformação assíncrona do documento de origem.       Transformações de aplicam o documento como um todo. Por outras palavras, se passar num nó diferente do nó de raiz do documento, este não impede que o processo de transformação aceder a todos os nós no documento de carregar. Transformar um fragmento de nó, tem de criar um <xref:System.Xml.XmlDocument>que contém apenas o nó de fragmento e passar que <xref:System.Xml.XmlDocument>para o método de transformação.</xref:System.Xml.XmlDocument> </xref:System.Xml.XmlDocument>       O exemplo seguinte executa uma transformação num fragmento de nó.      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out, null);   ```O exemplo utiliza o `library.xml` e `print_root.xsl` ficheiros como entrada e produz o seguinte para a consola.      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />      <template match=&quot;/&quot;>        Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  example:
  - "The following example transforms an XML document and outputs the results to an `XmlReader`. An <xref:System.Xml.XmlUrlResolver> with the necessary credentials is used to process any XSLT `document()` functions.  \n  \n [!code-cpp[XslTransform.Transform4#1](~/add/codesnippet/cpp/33389ef1-3a26-4334-acdd-_1.cpp)]\n [!code-cs[XslTransform.Transform4#1](~/add/codesnippet/csharp/33389ef1-3a26-4334-acdd-_1.cs)]\n [!code-vb[XslTransform.Transform4#1](~/add/codesnippet/visualbasic/33389ef1-3a26-4334-acdd-_1.vb)]"
  syntax:
    content: public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "Implementar um objeto de <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> interface. No .NET Framework, isto pode ser um <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (normalmente, um <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), ou um <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> que contém os dados para ser transformados."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "Um <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> que contém os argumentos de espaço de nomes qualificado utilizados como entrada para a transformação."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "O <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> utilizado para resolver o XSLT `document()` função. Se este for <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, a `document()` função não está resolvida.       O <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> não é colocadas em cache após a conclusão do método de transformação."
    return:
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>que contém os resultados da transformação.</xref:System.Xml.XmlReader>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transforma os dados XML a <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> utilizando especificado <code> args </code> e produz o resultado a uma <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter>"
  remarks: "> [!NOTE]> O <xref:System.Xml.Xsl.XslTransform>classe está obsoleta no .NET Framework versão 2.0.</xref:System.Xml.Xsl.XslTransform> O <xref:System.Xml.Xsl.XslCompiledTransform>classe é o processador XSLT nova.</xref:System.Xml.Xsl.XslCompiledTransform> Para obter mais informações, consulte [utilizando a classe de XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) e [migrar da classe de XslTransform o](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>suporta a sintaxe de XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> A folha de estilo XSLT tem de incluir a declaração de espaço de nomes `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.      > [!NOTE] > Este método está obsoleto. A definição do <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>propriedade determina como o XSLT `document()` função está resolvida.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> A prática recomendada consiste em utilizar o <xref:System.Xml.Xsl.XslTransform.Transform%2A>método que assume um <xref:System.Xml.XmlResolver>objeto como um dos respetivos argumentos.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>       O `args` é feita a correspondência com a `xsl:param` elementos definidos na folha de estilo. O `xsl:output` elemento não é suportado quando exportar para um <xref:System.Xml.XmlWriter>(`xsl:output` é ignorada).</xref:System.Xml.XmlWriter> Consulte [saídas de um XslTransform](~/add/includes/ajax-current-ext-md.md) para obter mais informações.       Transformações de aplicam o documento como um todo. Por outras palavras, se passar num nó diferente do nó de raiz do documento, este não impede que o processo de transformação aceder a todos os nós no documento de carregar. Transformar um fragmento de nó, tem de criar um <xref:System.Xml.XmlDocument>que contém apenas o nó de fragmento e passar que <xref:System.Xml.XmlDocument>para o método de transformação.</xref:System.Xml.XmlDocument> </xref:System.Xml.XmlDocument>       O exemplo seguinte executa uma transformação num fragmento de nó.      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out);   ```O exemplo utiliza o `library.xml` e `print_root.xsl` ficheiros como entrada e produz o seguinte para a consola.      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />     <template match=&quot;/&quot;>     Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "Implementar um objeto de <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> interface. No .NET Framework, isto pode ser um <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (normalmente, um <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), ou um <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> que contém os dados para ser transformados."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "Um <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> que contém os argumentos de espaço de nomes qualificado utilizados como entrada para a transformação."
    - id: output
      type: System.Xml.XmlWriter
      description: "O <xref:System.Xml.XmlWriter>ao qual pretende de saída.</xref:System.Xml.XmlWriter>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ocorreu um erro ao processar a transformação XSLT.       Nota: Esta é uma alteração no comportamento de versões anteriores. Um <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> é emitida se estiver a utilizar o Microsoft .NET Framework versão 1.1 ou anterior."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList,Stream)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transforma os dados XML a <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> utilizando especificado <code> args </code> e produz o resultado a uma <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "> [!NOTE]> O <xref:System.Xml.Xsl.XslTransform>classe está obsoleta no .NET Framework versão 2.0.</xref:System.Xml.Xsl.XslTransform> O <xref:System.Xml.Xsl.XslCompiledTransform>classe é o processador XSLT nova.</xref:System.Xml.Xsl.XslCompiledTransform> Para obter mais informações, consulte [utilizando a classe de XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) e [migrar da classe de XslTransform o](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>suporta a sintaxe de XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> A folha de estilo XSLT tem de incluir a declaração de espaço de nomes `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       O `args` é feita a correspondência com a `xsl:param` elementos definidos na folha de estilo. As seleções de transformação aplicam-se o documento como um todo. Por outras palavras, se o nó atual está definido numa árvore de nó que não seja o nó de raiz do documento, este não impede que o processo de transformação aceder a todos os nós no documento de carregar. Depois de ter sido efetuada a transformação, a <xref:System.Xml.XPath.XPathNavigator>permanece no seu estado original.</xref:System.Xml.XPath.XPathNavigator> Isto significa que o nó, o que é atual antes do processo de transformação, permanece o nó atual depois de ter sido chamado o método de transformação.       Consulte [saídas de um XslTransform](~/add/includes/ajax-current-ext-md.md) para especificações no qual `xsl:output` atributos são suportados.      > [!NOTE] > Este método está obsoleto. A definição do <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>propriedade determina como o XSLT `document()` função está resolvida.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> A prática recomendada consiste em utilizar o <xref:System.Xml.Xsl.XslTransform.Transform%2A>método que assume um <xref:System.Xml.XmlResolver>objeto como um dos respetivos argumentos.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>"
  syntax:
    content: public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "Um <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> que contém os dados para ser transformados."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "Um <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> que contém os argumentos de espaço de nomes qualificado utilizados como entrada para a transformação."
    - id: output
      type: System.IO.Stream
      description: "O fluxo para o qual pretende de saída."
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ocorreu um erro ao processar a transformação XSLT.       Nota: Esta é uma alteração no comportamento de versões anteriores. Um <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> é emitida se estiver a utilizar o Microsoft .NET Framework versão 1.1 ou anterior."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList,TextWriter)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transforma os dados XML a <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> utilizando especificado <code> args </code> e produz o resultado a uma <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter>"
  remarks: "> [!NOTE]> O <xref:System.Xml.Xsl.XslTransform>classe está obsoleta no .NET Framework versão 2.0.</xref:System.Xml.Xsl.XslTransform> O <xref:System.Xml.Xsl.XslCompiledTransform>classe é o processador XSLT nova.</xref:System.Xml.Xsl.XslCompiledTransform> Para obter mais informações, consulte [utilizando a classe de XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) e [migrar da classe de XslTransform o](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>suporta a sintaxe de XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> A folha de estilo XSLT tem de incluir a declaração de espaço de nomes `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       O `args` é feita a correspondência com a `xsl:param` elementos definidos na folha de estilo. As seleções de transformação aplicam-se o documento como um todo. Por outras palavras, se o nó atual está definido numa árvore de nó que não seja o nó de raiz do documento, este não impede que o processo de transformação aceder a todos os nós no documento de carregar. Depois da transformação é executada, o <xref:System.Xml.XPath.XPathNavigator>permanece no seu estado original.</xref:System.Xml.XPath.XPathNavigator> Isto significa que o nó, o que é atual antes do processo de transformação, permanece o nó atual depois de ter sido chamado o método de transformação.       O atributo de codificação num `xsl:output` elemento não é suportado quando exportar para um <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter> Consulte [saídas de um XslTransform](~/add/includes/ajax-current-ext-md.md) para especificações no qual `xsl:output` atributos são suportados.      > [!NOTE] > Este método está obsoleto. A definição do <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>propriedade determina como o XSLT `document()` função está resolvida.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> A prática recomendada consiste em utilizar o <xref:System.Xml.Xsl.XslTransform.Transform%2A>método que assume um <xref:System.Xml.XmlResolver>objeto como um dos respetivos argumentos.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>"
  syntax:
    content: public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "Um <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> que contém os dados para ser transformados."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "Um <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> que contém os argumentos de espaço de nomes qualificado utilizados como entrada para a transformação."
    - id: output
      type: System.IO.TextWriter
      description: "O <xref:System.IO.TextWriter>ao qual pretende de saída.</xref:System.IO.TextWriter>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ocorreu um erro ao processar a transformação XSLT.       Nota: Esta é uma alteração no comportamento de versões anteriores. Um <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> é emitida se estiver a utilizar o Microsoft .NET Framework versão 1.1 ou anterior."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transforma os dados XML a <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> utilizando especificado <code> args </code> e produz o resultado a uma <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  remarks: "> [!NOTE]> O <xref:System.Xml.Xsl.XslTransform>classe está obsoleta no .NET Framework versão 2.0.</xref:System.Xml.Xsl.XslTransform> O <xref:System.Xml.Xsl.XslCompiledTransform>classe é o processador XSLT nova.</xref:System.Xml.Xsl.XslCompiledTransform> Para obter mais informações, consulte [utilizando a classe de XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) e [migrar da classe de XslTransform o](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>suporta a sintaxe de XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> A folha de estilo XSLT tem de incluir a declaração de espaço de nomes `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       O `args` é feita a correspondência com a `xsl:param` elementos definidos na folha de estilo. As seleções de transformação aplicam-se o documento como um todo. Por outras palavras, se o nó atual está definido numa árvore de nó que não seja o nó de raiz do documento, este não impede que o processo de transformação aceder a todos os nós no documento de carregar. Depois de ter sido efetuada a transformação, a <xref:System.Xml.XPath.XPathNavigator>permanece no seu estado original.</xref:System.Xml.XPath.XPathNavigator> Isto significa que o nó, o que é atual antes do processo de transformação, permanece o nó atual depois de ter sido chamado o método de transformação.       Porque <xref:System.Xml.XmlReader>fornece saída só de leitura, o `xsl:output` elemento é ignorado.</xref:System.Xml.XmlReader> Consulte [saídas de um XslTransform](~/add/includes/ajax-current-ext-md.md) para obter mais informações.       Este método permite-lhe fazer uma transformação assíncrona do documento de origem."
  syntax:
    content: public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "Um <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> que contém os dados para ser transformados."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "Um <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> que contém os argumentos de espaço de nomes qualificado utilizados como entrada para a transformação."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "O <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> utilizado para resolver o XSLT `document()` função. Se este for <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, a `document()` função não está resolvida.       O <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> não é colocadas em cache após a conclusão do método de transformação."
    return:
      type: System.Xml.XmlReader
      description: "Um <xref:System.Xml.XmlReader>que contém os resultados da transformação.</xref:System.Xml.XmlReader>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ocorreu um erro ao processar a transformação XSLT.       Nota: Esta é uma alteração no comportamento de versões anteriores. Um <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> é emitida se estiver a utilizar o Microsoft .NET Framework versão 1.1 ou anterior."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList,XmlWriter)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transforma os dados XML a <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> utilizando o args especificado e devolve o resultado a uma <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter>"
  remarks: "> [!NOTE]> O <xref:System.Xml.Xsl.XslTransform>classe está obsoleta no .NET Framework versão 2.0.</xref:System.Xml.Xsl.XslTransform> O <xref:System.Xml.Xsl.XslCompiledTransform>classe é o processador XSLT nova.</xref:System.Xml.Xsl.XslCompiledTransform> Para obter mais informações, consulte [utilizando a classe de XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) e [migrar da classe de XslTransform o](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>suporta a sintaxe de XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> A folha de estilo XSLT tem de incluir a declaração de espaço de nomes `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       O `args` é feita a correspondência com a `xsl:param` elementos definidos na folha de estilo. As seleções de transformação aplicam-se o documento como um todo. Por outras palavras, se o nó atual está definido numa árvore de nó que não seja o nó de raiz do documento, este não impede que o processo de transformação aceder a todos os nós no documento de carregar. Depois da transformação é executada, o <xref:System.Xml.XPath.XPathNavigator>permanece no seu estado original.</xref:System.Xml.XPath.XPathNavigator> Isto significa que o nó que está atualizado antes do processo de transformação, permanece o nó atual depois de ter sido chamado o método de transformação.       O `xsl:output` elemento não é suportado quando exportar para um <xref:System.Xml.XmlWriter>(`xsl:output` é ignorada).</xref:System.Xml.XmlWriter> Consulte [saídas de um XslTransform](~/add/includes/ajax-current-ext-md.md) para obter mais informações.      > [!NOTE] > Este método está obsoleto. A definição do <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>propriedade determina como o XSLT `document()` função está resolvida.</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> A prática recomendada consiste em utilizar o <xref:System.Xml.Xsl.XslTransform.Transform%2A>método que assume um <xref:System.Xml.XmlResolver>objeto como um dos respetivos argumentos.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Transform%2A>"
  syntax:
    content: public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "Um <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> que contém os dados para ser transformados."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "Um <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> que contém os argumentos de espaço de nomes qualificado utilizados como entrada para a transformação."
    - id: output
      type: System.Xml.XmlWriter
      description: "O <xref:System.Xml.XmlWriter>ao qual pretende de saída.</xref:System.Xml.XmlWriter>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ocorreu um erro ao processar a transformação XSLT.       Nota: Esta é uma alteração no comportamento de versões anteriores. Um <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> é emitida se estiver a utilizar o Microsoft .NET Framework versão 1.1 ou anterior."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,Stream,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transforma os dados XML a <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> utilizando especificado <code> args </code> e produz o resultado a uma <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "> [!NOTE]> O <xref:System.Xml.Xsl.XslTransform>classe está obsoleta no .NET Framework versão 2.0.</xref:System.Xml.Xsl.XslTransform> O <xref:System.Xml.Xsl.XslCompiledTransform>classe é o processador XSLT nova.</xref:System.Xml.Xsl.XslCompiledTransform> Para obter mais informações, consulte [utilizando a classe de XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) e [migrar da classe de XslTransform o](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>suporta a sintaxe de XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> A folha de estilo XSLT tem de incluir a declaração de espaço de nomes `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       O `args` é feita a correspondência com a `xsl:param` elementos definidos na folha de estilo.       Transformações de aplicam o documento como um todo. Por outras palavras, se passar num nó diferente do nó de raiz do documento, este não impede que o processo de transformação aceder a todos os nós no documento de carregar. Transformar um fragmento de nó, tem de criar um <xref:System.Xml.XmlDocument>que contém apenas o nó de fragmento e passar que <xref:System.Xml.XmlDocument>para o método de transformação.</xref:System.Xml.XmlDocument> </xref:System.Xml.XmlDocument>       O exemplo seguinte executa uma transformação num fragmento de nó.      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out, null);   ```O exemplo utiliza o `library.xml` e `print_root.xsl` ficheiros como entrada e produz o seguinte para a consola.      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />      <template match=&quot;/&quot;>        Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  example:
  - "The following example performs a transformation within an ASP.NET page.  \n  \n [!code-vb[XslTransform.Transform5#1](~/add/codesnippet/visualbasic/0aececb0-8968-432a-8b61-_1.aspx)]\n [!code-cs[XslTransform.Transform5#1](~/add/codesnippet/csharp/0aececb0-8968-432a-8b61-_1.aspx)]"
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "Implementar um objeto de <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> interface. No .NET Framework, isto pode ser um <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (normalmente, um <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), ou um <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> que contém os dados para ser transformados."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "Um <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> que contém os argumentos de espaço de nomes qualificado utilizados como entrada para a transformação."
    - id: output
      type: System.IO.Stream
      description: "O fluxo para o qual pretende de saída."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "O <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> utilizado para resolver o XSLT `document()` função. Se este for <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, a `document()` função não está resolvida.       O <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> não é colocado em cache após o <xref:System.Xml.Xsl.XslTransform.Transform*>método concluída.</xref:System.Xml.Xsl.XslTransform.Transform*>"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ocorreu um erro ao processar a transformação XSLT.       Nota: Esta é uma alteração no comportamento de versões anteriores. Um <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> é emitida se estiver a utilizar o Microsoft .NET Framework versão 1.1 ou anterior."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,TextWriter,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transforma os dados XML a <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> utilizando especificado <code> args </code> e produz o resultado a uma <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter>"
  remarks: "> [!NOTE]> O <xref:System.Xml.Xsl.XslTransform>classe está obsoleta no .NET Framework versão 2.0.</xref:System.Xml.Xsl.XslTransform> O <xref:System.Xml.Xsl.XslCompiledTransform>classe é o processador XSLT nova.</xref:System.Xml.Xsl.XslCompiledTransform> Para obter mais informações, consulte [utilizando a classe de XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) e [migrar da classe de XslTransform o](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>suporta a sintaxe de XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> A folha de estilo XSLT tem de incluir a declaração de espaço de nomes `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       O `args` é feita a correspondência com a `xsl:param` elementos definidos na folha de estilo.       O atributo de codificação num `xsl:output` elemento não é suportado quando exportar para um <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter> Consulte [saídas de um XslTransform](~/add/includes/ajax-current-ext-md.md) para especificações no qual `xsl:output` atributos são suportados.       Transformações de aplicam o documento como um todo. Por outras palavras, se passar num nó diferente do nó de raiz do documento, este não impede que o processo de transformação aceder a todos os nós no documento de carregar. Transformar um fragmento de nó, tem de criar um <xref:System.Xml.XmlDocument>que contém apenas o nó de fragmento e passar que <xref:System.Xml.XmlDocument>para o método de transformação.</xref:System.Xml.XmlDocument> </xref:System.Xml.XmlDocument>       O exemplo seguinte executa uma transformação num fragmento de nó.      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out, null);   ```O exemplo utiliza o `library.xml` e `print_root.xsl` ficheiros como entrada e produz o seguinte para a consola.      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />      <template match=&quot;/&quot;>        Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  example:
  - "The following example transforms an XML file and outputs an HTML string. The <xref:System.IO.StringReader> and <xref:System.IO.StringWriter> classes are used to read and write the strings.  \n  \n [!code-vb[XslTransform.Transform6#1](~/add/codesnippet/visualbasic/f37e0493-6ab0-43d9-9439-_1.vb)]\n [!code-cs[XslTransform.Transform6#1](~/add/codesnippet/csharp/f37e0493-6ab0-43d9-9439-_1.cs)]  \n  \n The example uses the `books.xml` file as input.  \n  \n [!code-xml[XslTransform.Transform6#2](~/add/codesnippet/xml/f37e0493-6ab0-43d9-9439-_2.xml)]"
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "Implementar um objeto de <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> interface. No .NET Framework, isto pode ser um <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (normalmente, um <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), ou um <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> que contém os dados para ser transformados."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "Um <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> que contém os argumentos de espaço de nomes qualificado utilizados como entrada para a transformação."
    - id: output
      type: System.IO.TextWriter
      description: "O <xref:System.IO.TextWriter>ao qual pretende de saída.</xref:System.IO.TextWriter>"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "O <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> utilizado para resolver o XSLT `document()` função. Se este for <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, a `document()` função não está resolvida.       O <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> não é colocadas em cache após a conclusão do método de transformação."
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ocorreu um erro ao processar a transformação XSLT.       Nota: Esta é uma alteração no comportamento de versões anteriores. Um <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> é emitida se estiver a utilizar o Microsoft .NET Framework versão 1.1 ou anterior."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transforma os dados XML a <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> utilizando especificado <code> args </code> e produz o resultado a uma <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter>"
  remarks: "> [!NOTE]> O <xref:System.Xml.Xsl.XslTransform>classe está obsoleta no .NET Framework versão 2.0.</xref:System.Xml.Xsl.XslTransform> O <xref:System.Xml.Xsl.XslCompiledTransform>classe é o processador XSLT nova.</xref:System.Xml.Xsl.XslCompiledTransform> Para obter mais informações, consulte [utilizando a classe de XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) e [migrar da classe de XslTransform o](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>suporta a sintaxe de XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> A folha de estilo XSLT tem de incluir a declaração de espaço de nomes `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       O `args` é feita a correspondência com a `xsl:param` elementos definidos na folha de estilo. O `xsl:output` elemento não é suportado quando exportar para um <xref:System.Xml.XmlWriter>(`xsl:output` é ignorada).</xref:System.Xml.XmlWriter> Consulte [saídas de um XslTransform](~/add/includes/ajax-current-ext-md.md) para obter mais informações.       Transformações de aplicam o documento como um todo. Por outras palavras, se passar num nó diferente do nó de raiz do documento, este não impede que o processo de transformação aceder a todos os nós no documento de carregar. Transformar um fragmento de nó, tem de criar um <xref:System.Xml.XmlDocument>que contém apenas o nó de fragmento e passar que <xref:System.Xml.XmlDocument>para o método de transformação.</xref:System.Xml.XmlDocument> </xref:System.Xml.XmlDocument>       O exemplo seguinte executa uma transformação num fragmento de nó.      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out, null);   ```O exemplo utiliza o `library.xml` e `print_root.xsl` ficheiros como entrada e produz o seguinte para a consola.      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />     <template match=&quot;/&quot;>     Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  example:
  - "The following example transforms an XML document into an HTML document. It displays the ISBN, title, and price for each book in a table.  \n  \n [!code-cs[Classic WebData XslTransform.Transform7 Example#1](~/add/codesnippet/csharp/e2f436c8-72f8-4045-80f0-_1.cs)]\n [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/add/codesnippet/cpp/e2f436c8-72f8-4045-80f0-_1.cpp)]\n [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/add/codesnippet/visualbasic/e2f436c8-72f8-4045-80f0-_1.vb)]  \n  \n The sample uses the following two input files.  \n  \n `books.xml`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/add/codesnippet/xml/e2f436c8-72f8-4045-80f0-_2.xml)]  \n  \n `output.xsl`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/add/codesnippet/xml/e2f436c8-72f8-4045-80f0-_3.xsl)]"
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "Implementar um objeto de <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref> interface. No .NET Framework, isto pode ser um <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (normalmente, um <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>), ou um <xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> que contém os dados para ser transformados."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "Um <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> que contém os argumentos de espaço de nomes qualificado utilizados como entrada para a transformação."
    - id: output
      type: System.Xml.XmlWriter
      description: "O <xref:System.Xml.XmlWriter>ao qual pretende de saída.</xref:System.Xml.XmlWriter>"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "O <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> utilizado para resolver o XSLT `document()` função. Se este for <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, a `document()` função não está resolvida.       O <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> não é colocadas em cache após a conclusão do método de transformação."
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ocorreu um erro ao processar a transformação XSLT.       Nota: Esta é uma alteração no comportamento de versões anteriores. Um <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> é emitida se estiver a utilizar o Microsoft .NET Framework versão 1.1 ou anterior."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList,Stream,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transforma os dados XML a <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> utilizando especificado <code> args </code> e produz o resultado a uma <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "> [!NOTE]> O <xref:System.Xml.Xsl.XslTransform>classe está obsoleta no .NET Framework versão 2.0.</xref:System.Xml.Xsl.XslTransform> O <xref:System.Xml.Xsl.XslCompiledTransform>classe é o processador XSLT nova.</xref:System.Xml.Xsl.XslCompiledTransform> Para obter mais informações, consulte [utilizando a classe de XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) e [migrar da classe de XslTransform o](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>suporta a sintaxe de XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> A folha de estilo XSLT tem de incluir a declaração de espaço de nomes `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       O `args` é feita a correspondência com a `xsl:param` elementos definidos na folha de estilo. As seleções de transformação aplicam-se o documento como um todo. Por outras palavras, se o nó atual está definido numa árvore de nó que não seja o nó de raiz do documento, este não impede que o processo de transformação aceder a todos os nós no documento de carregar. Depois de ter sido efetuada a transformação, a <xref:System.Xml.XPath.XPathNavigator>permanece no seu estado original.</xref:System.Xml.XPath.XPathNavigator> Isto significa que o nó, o que é atual antes do processo de transformação, permanece o nó atual depois de ter sido chamado o método de transformação.       Consulte [saídas de um XslTransform](~/add/includes/ajax-current-ext-md.md) para especificações no qual `xsl:output` atributos são suportados."
  example:
  - "The following example loads a customer table into an <xref:System.Xml.XmlDataDocument> and performs an XSLT transformation to pull the customer data into an HTML table. The example uses the Microsoft SQL Server 2000 Northwind database.  \n  \n [!code-cs[XmlDataDocument.CreateNavigator#1](~/add/codesnippet/csharp/cf85a737-72d0-4c28-b81d-_1.cs)]\n [!code-vb[XmlDataDocument.CreateNavigator#1](~/add/codesnippet/visualbasic/cf85a737-72d0-4c28-b81d-_1.vb)]  \n  \n The example uses the `customers.xsl` file as input.  \n  \n [!code-xml[XmlDataDocument.CreateNavigator#2](~/add/codesnippet/xml/cf85a737-72d0-4c28-b81d-_2.xsl)]"
  syntax:
    content: public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "Um <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> que contém os dados para ser transformados."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "Um <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> que contém os argumentos de espaço de nomes qualificado utilizados como entrada para a transformação."
    - id: output
      type: System.IO.Stream
      description: "O fluxo para o qual pretende de saída."
    - id: resolver
      type: System.Xml.XmlResolver
      description: "O <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> utilizado para resolver o XSLT `document()` função. Se este for <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, a `document()` função não está resolvida.       O <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> não é colocadas em cache após a conclusão do método de transformação."
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ocorreu um erro ao processar a transformação XSLT.       Nota: Esta é uma alteração no comportamento de versões anteriores. Um <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> é emitida se estiver a utilizar o Microsoft .NET Framework versão 1.1 ou anterior."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList,TextWriter,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transforma os dados XML a <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> utilizando especificado <code> args </code> e produz o resultado a uma <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter>"
  remarks: "> [!NOTE]> O <xref:System.Xml.Xsl.XslTransform>classe está obsoleta no .NET Framework versão 2.0.</xref:System.Xml.Xsl.XslTransform> O <xref:System.Xml.Xsl.XslCompiledTransform>classe é o processador XSLT nova.</xref:System.Xml.Xsl.XslCompiledTransform> Para obter mais informações, consulte [utilizando a classe de XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) e [migrar da classe de XslTransform o](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>suporta a sintaxe de XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> A folha de estilo XSLT tem de incluir a declaração de espaço de nomes `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       O `args` é feita a correspondência com a `xsl:param` elementos definidos na folha de estilo. As seleções de transformação aplicam-se o documento como um todo. Por outras palavras, se o nó atual está definido numa árvore de nó que não seja o nó de raiz do documento, este não impede que o processo de transformação aceder a todos os nós no documento de carregar. Depois da transformação é executada, o <xref:System.Xml.XPath.XPathNavigator>permanece no seu estado original.</xref:System.Xml.XPath.XPathNavigator> Isto significa que o nó, o que é atual antes do processo de transformação, permanece o nó atual depois de ter sido chamado o método de transformação.       O atributo de codificação num `xsl:output` elemento não é suportado quando exportar para um <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter> Consulte [saídas de um XslTransform](~/add/includes/ajax-current-ext-md.md) para especificações no qual `xsl:output` atributos são suportados."
  syntax:
    content: public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "Um <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> que contém os dados para ser transformados."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "Um <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> que contém os argumentos de espaço de nomes qualificado utilizados como entrada para a transformação."
    - id: output
      type: System.IO.TextWriter
      description: "O <xref:System.IO.TextWriter>ao qual pretende de saída.</xref:System.IO.TextWriter>"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "O <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> utilizado para resolver o XSLT `document()` função. Se este for <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, a `document()` função não está resolvida.       O <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> não é colocadas em cache após a conclusão do método de transformação."
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ocorreu um erro ao processar a transformação XSLT.       Nota: Esta é uma alteração no comportamento de versões anteriores. Um <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> é emitida se estiver a utilizar o Microsoft .NET Framework versão 1.1 ou anterior."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList,XmlWriter,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Transforma os dados XML a <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> utilizando o args especificado e devolve o resultado a uma <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter>"
  remarks: "> [!NOTE]> O <xref:System.Xml.Xsl.XslTransform>classe está obsoleta no .NET Framework versão 2.0.</xref:System.Xml.Xsl.XslTransform> O <xref:System.Xml.Xsl.XslCompiledTransform>classe é o processador XSLT nova.</xref:System.Xml.Xsl.XslCompiledTransform> Para obter mais informações, consulte [utilizando a classe de XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) e [migrar da classe de XslTransform o](~/add/includes/ajax-current-ext-md.md).       <xref:System.Xml.Xsl.XslTransform>suporta a sintaxe de XSLT 1.0.</xref:System.Xml.Xsl.XslTransform> A folha de estilo XSLT tem de incluir a declaração de espaço de nomes `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.       O `args` é feita a correspondência com a `xsl:param` elementos definidos na folha de estilo. As seleções de transformação aplicam-se o documento como um todo. Por outras palavras, se o nó atual está definido numa árvore de nó que não seja o nó de raiz do documento, este não impede que o processo de transformação aceder a todos os nós no documento de carregar. Depois da transformação é executada, o <xref:System.Xml.XPath.XPathNavigator>permanece no seu estado original.</xref:System.Xml.XPath.XPathNavigator> Isto significa que o nó que está atualizado antes do processo de transformação, permanece o nó atual depois de ter sido chamado o método de transformação.       O `xsl:output` elemento não é suportado quando exportar para um <xref:System.Xml.XmlWriter>(`xsl:output` é ignorada).</xref:System.Xml.XmlWriter> Consulte [saídas de um XslTransform](~/add/includes/ajax-current-ext-md.md) para obter mais informações."
  example:
  - "The following example loads and edits an XML document before performing an XSLT transform.  \n  \n [!code-vb[XslTransform.Transform2#1](~/add/codesnippet/visualbasic/3e32b237-2708-4620-b957-_1.vb)]\n [!code-cs[XslTransform.Transform2#1](~/add/codesnippet/csharp/3e32b237-2708-4620-b957-_1.cs)]\n [!code-cpp[XslTransform.Transform2#1](~/add/codesnippet/cpp/3e32b237-2708-4620-b957-_1.cpp)]"
  syntax:
    content: public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "Um <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> que contém os dados para ser transformados."
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "Um <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> que contém os argumentos de espaço de nomes qualificado utilizados como entrada para a transformação."
    - id: output
      type: System.Xml.XmlWriter
      description: "O <xref:System.Xml.XmlWriter>ao qual pretende de saída.</xref:System.Xml.XmlWriter>"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "O <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> utilizado para resolver o XSLT `document()` função. Se este for <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, a `document()` função não está resolvida.       O <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> não é colocadas em cache após a conclusão do método de transformação."
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ocorreu um erro ao processar a transformação XSLT.       Nota: Esta é uma alteração no comportamento de versões anteriores. Um <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> é emitida se estiver a utilizar o Microsoft .NET Framework versão 1.1 ou anterior."
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.XmlResolver
  id: XmlResolver
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: XmlResolver
  nameWithType: XslTransform.XmlResolver
  fullName: System.Xml.Xsl.XslTransform.XmlResolver
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "Define o <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> utilizado para resolver recursos externos quando o <xref:System.Xml.Xsl.XslTransform.Transform*>método é chamado.</xref:System.Xml.Xsl.XslTransform.Transform*>"
  remarks: "> [!NOTE]> O <xref:System.Xml.Xsl.XslTransform>classe está obsoleta no .NET Framework versão 2.0.</xref:System.Xml.Xsl.XslTransform> O <xref:System.Xml.Xsl.XslCompiledTransform>classe é o processador XSLT nova.</xref:System.Xml.Xsl.XslCompiledTransform> Para obter mais informações, consulte [utilizando a classe de XslCompiledTransform](~/add/includes/ajax-current-ext-md.md) e [migrar da classe de XslTransform o](~/add/includes/ajax-current-ext-md.md).       Na versão 1.1 do .NET Framework, o nível de fidedignidade da aplicação determina o comportamento predefinido: `Fully trusted code:` uma predefinição <xref:System.Xml.XmlUrlResolver>com nenhum utilizador credenciais é utilizado para resolver o `document()` função.</xref:System.Xml.XmlUrlResolver> Se é necessária a autenticação para aceder ao recurso externo, utilize esta propriedade para especificar um <xref:System.Xml.XmlResolver>com as credenciais necessárias.</xref:System.Xml.XmlResolver>       `Semi-trusted code:`A propriedade está definida como `null`, que significa que o `document()` função não está resolvida. Porque a confiança completa é necessário especificar um <xref:System.Xml.XmlResolver>, também não é possível definir esta propriedade.</xref:System.Xml.XmlResolver>       Esta resolução é utilizada quando o XSLT `document()` invocar a função. Não é utilizado para resolver `xsl:import` e `xsl:include` elementos referenciados na folha de estilo. Para especificar um <xref:System.Xml.XmlResolver>a utilizar para resolver `xsl:import` e `xsl:include` elementos referenciados na folha de estilo, utilize o <xref:System.Xml.Xsl.XslTransform.Load%2A>sobrecarga, que demora um <xref:System.Xml.XmlResolver>como um dos respetivos argumentos.</xref:System.Xml.XmlResolver> </xref:System.Xml.Xsl.XslTransform.Load%2A> </xref:System.Xml.XmlResolver>      > [!NOTE] > Esta propriedade está obsoleta versão 1.1 do .NET Framework. Especificar um <xref:System.Xml.XmlResolver>utilizando o <xref:System.Xml.Xsl.XslTransform.Transform%2A>método é a prática recomendada.</xref:System.Xml.Xsl.XslTransform.Transform%2A> </xref:System.Xml.XmlResolver> Neste caso, o <xref:System.Xml.XmlResolver>não é colocado em cache após o <xref:System.Xml.Xsl.XslTransform.Transform%2A>método concluída.</xref:System.Xml.Xsl.XslTransform.Transform%2A> </xref:System.Xml.XmlResolver>"
  syntax:
    content: public System.Xml.XmlResolver XmlResolver { set; }
    return:
      type: System.Xml.XmlResolver
      description: "O <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> a utilizar durante a transformação. Se definido como <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, o XSLT `document()` função não está resolvida."
  overload: System.Xml.Xsl.XslTransform.XmlResolver*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Xml.Xsl.XsltCompileException
  parent: System.Xml.Xsl
  isExternal: false
  name: XsltCompileException
  nameWithType: XsltCompileException
  fullName: System.Xml.Xsl.XsltCompileException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Xml.Xsl.XslTransform.#ctor
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: XslTransform()
  nameWithType: XslTransform.XslTransform()
  fullName: System.Xml.Xsl.XslTransform.XslTransform()
- uid: System.Xml.Xsl.XslTransform.Load(System.String)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(String)
  nameWithType: XslTransform.Load(String)
  fullName: System.Xml.Xsl.XslTransform.Load(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(XmlReader)
  nameWithType: XslTransform.Load(XmlReader)
  fullName: System.Xml.Xsl.XslTransform.Load(XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(IXPathNavigable)
  nameWithType: XslTransform.Load(IXPathNavigable)
  fullName: System.Xml.Xsl.XslTransform.Load(IXPathNavigable)
- uid: System.Xml.XPath.IXPathNavigable
  parent: System.Xml.XPath
  isExternal: false
  name: IXPathNavigable
  nameWithType: IXPathNavigable
  fullName: System.Xml.XPath.IXPathNavigable
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(XPathNavigator)
  nameWithType: XslTransform.Load(XPathNavigator)
  fullName: System.Xml.Xsl.XslTransform.Load(XPathNavigator)
- uid: System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: false
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(String,XmlResolver)
  nameWithType: XslTransform.Load(String,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(String,XmlResolver)
- uid: System.Xml.XmlResolver
  parent: System.Xml
  isExternal: false
  name: XmlResolver
  nameWithType: XmlResolver
  fullName: System.Xml.XmlResolver
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(XmlReader,XmlResolver)
  nameWithType: XslTransform.Load(XmlReader,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(XmlReader,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(IXPathNavigable,XmlResolver)
  nameWithType: XslTransform.Load(IXPathNavigable,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(IXPathNavigable,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(XPathNavigator,XmlResolver)
  nameWithType: XslTransform.Load(XPathNavigator,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(XPathNavigator,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(XmlReader,XmlResolver,Evidence)
  nameWithType: XslTransform.Load(XmlReader,XmlResolver,Evidence)
  fullName: System.Xml.Xsl.XslTransform.Load(XmlReader,XmlResolver,Evidence)
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(IXPathNavigable,XmlResolver,Evidence)
  nameWithType: XslTransform.Load(IXPathNavigable,XmlResolver,Evidence)
  fullName: System.Xml.Xsl.XslTransform.Load(IXPathNavigable,XmlResolver,Evidence)
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(XPathNavigator,XmlResolver,Evidence)
  nameWithType: XslTransform.Load(XPathNavigator,XmlResolver,Evidence)
  fullName: System.Xml.Xsl.XslTransform.Load(XPathNavigator,XmlResolver,Evidence)
- uid: System.Xml.Xsl.XslTransform.Transform(System.String,System.String)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(String,String)
  nameWithType: XslTransform.Transform(String,String)
  fullName: System.Xml.Xsl.XslTransform.Transform(String,String)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList)
- uid: System.Xml.Xsl.XsltArgumentList
  parent: System.Xml.Xsl
  isExternal: false
  name: XsltArgumentList
  nameWithType: XsltArgumentList
  fullName: System.Xml.Xsl.XsltArgumentList
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList)
- uid: System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(String,String,XmlResolver)
  nameWithType: XslTransform.Transform(String,String,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(String,String,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,Stream)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,TextWriter)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter)
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList,Stream)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList,TextWriter)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList,XmlWriter)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,Stream,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,TextWriter,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList,Stream,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList,TextWriter,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList,XmlWriter,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.XmlResolver
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: XmlResolver
  nameWithType: XslTransform.XmlResolver
  fullName: System.Xml.Xsl.XslTransform.XmlResolver
- uid: System.Xml.Xsl.XslTransform.#ctor*
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: XslTransform
  nameWithType: XslTransform.XslTransform
- uid: System.Xml.Xsl.XslTransform.Load*
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load
  nameWithType: XslTransform.Load
- uid: System.Xml.Xsl.XslTransform.Transform*
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform
  nameWithType: XslTransform.Transform
- uid: System.Xml.Xsl.XslTransform.XmlResolver*
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: XmlResolver
  nameWithType: XslTransform.XmlResolver
