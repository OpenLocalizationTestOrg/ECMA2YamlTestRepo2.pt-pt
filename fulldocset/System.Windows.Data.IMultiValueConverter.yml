### YamlMime:ManagedReference
items:
- uid: System.Windows.Data.IMultiValueConverter
  id: IMultiValueConverter
  children:
  - System.Windows.Data.IMultiValueConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)
  - System.Windows.Data.IMultiValueConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)
  langs:
  - csharp
  name: IMultiValueConverter
  nameWithType: IMultiValueConverter
  fullName: System.Windows.Data.IMultiValueConverter
  type: Interface
  summary: "Fornece uma forma de aplicar a lógica personalizada num <xref href=&quot;System.Windows.Data.MultiBinding&quot;> </xref>."
  remarks: "Para associar um conversor com um <xref:System.Windows.Data.MultiBinding>, crie uma classe que implementa a interface IMultiValueConverter e, em seguida, implementar o <xref:System.Windows.Data.IMultiValueConverter.Convert%2A>e <xref:System.Windows.Data.IMultiValueConverter.ConvertBack%2A>métodos.</xref:System.Windows.Data.IMultiValueConverter.ConvertBack%2A> </xref:System.Windows.Data.IMultiValueConverter.Convert%2A> </xref:System.Windows.Data.MultiBinding>       Enlaces individuais na coleção podem ter os seus próprios conversores de valor. Para obter mais informações, consulte <xref:System.Windows.Data.IValueConverter>.</xref:System.Windows.Data.IValueConverter>"
  syntax:
    content: public interface IMultiValueConverter
  implements: []
  platform:
  - net462
- uid: System.Windows.Data.IMultiValueConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)
  id: Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Data.IMultiValueConverter
  langs:
  - csharp
  name: Convert(Object[],Type,Object,CultureInfo)
  nameWithType: IMultiValueConverter.Convert(Object[],Type,Object,CultureInfo)
  fullName: System.Windows.Data.IMultiValueConverter.Convert(Object[],Type,Object,CultureInfo)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Converte valores de origem para um valor para o destino de enlace. O motor de enlace de dados chama este método quando propaga-os valores dos enlaces de origem para o destino de enlace."
  remarks: "O motor de enlace de dados não interceta exceções forem emitidas por um conversor fornecido pelo utilizador. Qualquer exceção que é emitida pelo método converter ou quaisquer exceções não identificadas que são acionadas por métodos que chama o método converter, são tratadas como erros de tempo de execução. Lidar com problemas previstos devolvendo <xref:System.Windows.DependencyProperty>.<xref:System.Windows.DependencyProperty.UnsetValue>.</xref:System.Windows.DependencyProperty.UnsetValue> </xref:System.Windows.DependencyProperty>"
  syntax:
    content: public object Convert (object[] values, Type targetType, object parameter, System.Globalization.CultureInfo culture);
    parameters:
    - id: values
      type: System.Object[]
      description: "A matriz de valores que os enlaces de origem no <xref href=&quot;System.Windows.Data.MultiBinding&quot;> </xref> produz. O valor <xref href=&quot;System.Windows.DependencyProperty.UnsetValue&quot;> </xref> indica que o enlace de origem não tem um valor para fornecer para conversão."
    - id: targetType
      type: System.Type
      description: "O tipo da propriedade de destino de enlace."
    - id: parameter
      type: System.Object
      description: "O parâmetro de conversor para utilizar."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A cultura a utilizar o conversor."
    return:
      type: System.Object
      description: "Um valor convertido.       Se o método devolve <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, válido <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> valor é utilizado.       Um valor de retorno da <xref href=&quot;System.Windows.DependencyProperty&quot;> </xref>.<xref href=&quot;System.Windows.DependencyProperty.UnsetValue&quot;></xref> indica que o conversor não produziu um valor, e que irá utilizar o enlace a <> </> *> se estiver disponível, ou outra pessoa utilizará o valor predefinido.       Um valor de retorno da <xref href=&quot;System.Windows.Data.Binding&quot;> </xref>.<xref href=&quot;System.Windows.Data.Binding.DoNothing&quot;> </xref> indica que o enlace não transferir o valor ou utilize o <> </> *> ou o valor predefinido."
  overload: System.Windows.Data.IMultiValueConverter.Convert*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.IMultiValueConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)
  id: ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Data.IMultiValueConverter
  langs:
  - csharp
  name: ConvertBack(Object,Type[],Object,CultureInfo)
  nameWithType: IMultiValueConverter.ConvertBack(Object,Type[],Object,CultureInfo)
  fullName: System.Windows.Data.IMultiValueConverter.ConvertBack(Object,Type[],Object,CultureInfo)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Converte um valor de destino do enlace para os valores de enlace de origem."
  remarks: "Se existirem mais valores de retorno que existem enlaces no <xref:System.Windows.Data.MultiBinding>, os valores de retorno em excesso são ignorados.</xref:System.Windows.Data.MultiBinding> Se existirem mais enlaces de origem que existem valores de retorno, os restantes enlaces de origem não tem quaisquer valores definidos nos mesmos. Tipos de valores de retorno não são verificados contra `targetTypes`; os valores estão definidos nos enlaces de origem diretamente.       Devolver <xref:System.Windows.Data.Binding.DoNothing>na posição `i` para indicar que nenhum valor está a ser definido no enlace de origem no índice `i`.</xref:System.Windows.Data.Binding.DoNothing>       Devolver <xref:System.Windows.DependencyProperty>.<xref:System.Windows.DependencyProperty.UnsetValue> na posição `i` para indicar que o conversor não consegue fornecer um valor para o enlace de origem no índice `i`, e que nenhum valor deve ser definido no mesmo.</xref:System.Windows.DependencyProperty.UnsetValue> </xref:System.Windows.DependencyProperty>       Devolver `null` para indicar que o conversor não é possível efetuar a conversão ou que não suporta a conversão nesta direção.       O motor de enlace de dados não interceta exceções forem emitidas por um conversor fornecido pelo utilizador. Qualquer exceção que é emitida pelo método ConvertBack ou quaisquer exceções não identificadas que são acionadas por métodos que chama o método ConvertBack são tratadas como erros de tempo de execução. Lidar com problemas previstos devolvendo `null`."
  syntax:
    content: public object[] ConvertBack (object value, Type[] targetTypes, object parameter, System.Globalization.CultureInfo culture);
    parameters:
    - id: value
      type: System.Object
      description: "O valor que produz o destino de enlace."
    - id: targetTypes
      type: System.Type[]
      description: "A matriz de tipos para converter. O comprimento da matriz indica o número e tipos de valores são sugeridos para o método devolver."
    - id: parameter
      type: System.Object
      description: "O parâmetro de conversor para utilizar."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A cultura a utilizar o conversor."
    return:
      type: System.Object[]
      description: "Uma matriz de valores que foi convertido a partir do valor de destino para os valores de origem."
  overload: System.Windows.Data.IMultiValueConverter.ConvertBack*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Data.IMultiValueConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Data.IMultiValueConverter
  isExternal: false
  name: Convert(Object[],Type,Object,CultureInfo)
  nameWithType: IMultiValueConverter.Convert(Object[],Type,Object,CultureInfo)
  fullName: System.Windows.Data.IMultiValueConverter.Convert(Object[],Type,Object,CultureInfo)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Windows.Data.IMultiValueConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Data.IMultiValueConverter
  isExternal: false
  name: ConvertBack(Object,Type[],Object,CultureInfo)
  nameWithType: IMultiValueConverter.ConvertBack(Object,Type[],Object,CultureInfo)
  fullName: System.Windows.Data.IMultiValueConverter.ConvertBack(Object,Type[],Object,CultureInfo)
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Data.IMultiValueConverter.Convert*
  parent: System.Windows.Data.IMultiValueConverter
  isExternal: false
  name: Convert
  nameWithType: IMultiValueConverter.Convert
- uid: System.Windows.Data.IMultiValueConverter.ConvertBack*
  parent: System.Windows.Data.IMultiValueConverter
  isExternal: false
  name: ConvertBack
  nameWithType: IMultiValueConverter.ConvertBack
