### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol
  id: HttpSimpleClientProtocol
  children:
  - System.Web.Services.Protocols.HttpSimpleClientProtocol.#ctor
  - System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)
  - System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)
  - System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])
  - System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback)
  - System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)
  langs:
  - csharp
  name: HttpSimpleClientProtocol
  nameWithType: HttpSimpleClientProtocol
  fullName: System.Web.Services.Protocols.HttpSimpleClientProtocol
  type: Class
  summary: "Representa a classe base para comunicar com um serviço XML Web service utilizando os enlaces de protocolos HTTP GET e POST de HTTP simples."
  remarks: "Esta classe especifica a maior parte da implementação para comunicar com um serviço XML Web service através de HTTP utilizando codificadores para codificar os parâmetros e valores de retorno para formatos MIME comuns. Estes codificadores derivam da <xref:System.Web.Services.Protocols.MimeFormatter>classe.</xref:System.Web.Services.Protocols.MimeFormatter> Por predefinição, uma classe de proxy efectuar a derivação de HttpSimpleClientProtocol codifica parâmetros a utilizar o application/x-www-form-urlencoded tipo de MIME e a resposta em XML simples. Ao mesmo tempo mime personalizado pode ser especificado utilizando o <xref:System.Web.Services.Protocols.HttpMethodAttribute>atributo, no entanto, não são suportadas para integrar isto para geração de descrição e o proxy de serviço.</xref:System.Web.Services.Protocols.HttpMethodAttribute>       `Notes to Inheritors:`Quando substituir esta classe, poderá introduzir métodos na classe derivada que são específicos para um determinado tipo de um serviço XML Web service. Os métodos simplesmente capturar os parâmetros e chamar a classe base para realizar o trabalho de comunicar com o site. Se os métodos introduzidos são assíncronos, chame o <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A>e <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A>métodos.</xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A> </xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> Se os métodos introduzidos são síncronos, chame o <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A>método.</xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> O construtor substituído normalmente define o <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A>propriedade para o URI do método de serviço Web de XML.</xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A>       A ferramenta de linguagem de descrição de serviços Web (Wsdl.exe) gera classes derivadas de HttpSimpleClientProtocol para obter uma descrição de serviço fornecido."
  example:
  - "The following code example is a proxy class generated by Wsdl.exe for the `Math` XML Web service below. The proxy class derives from <xref:System.Web.Services.Protocols.HttpGetClientProtocol>, which derives from the abstract HttpSimpleClientProtocol class.  \n  \n [!code-cs[Classic HttpGetClientProtocol Example#1](~/add/codesnippet/csharp/t-system.web.services.pr_3_1.cs)]\n [!code-cpp[Classic HttpGetClientProtocol Example#1](~/add/codesnippet/cpp/t-system.web.services.pr_3_1.cpp)]\n [!code-vb[Classic HttpGetClientProtocol Example#1](~/add/codesnippet/visualbasic/t-system.web.services.pr_3_1.vb)]  \n  \n The following code example is the `Math` XML Web service, from which the preceding proxy class was created.  \n  \n [!code-vb[Classic HttpSimpleClientProtocol Example#1](~/add/codesnippet/visualbasic/t-system.web.services.pr_3_2.vb)]\n [!code-cpp[Classic HttpSimpleClientProtocol Example#1](~/add/codesnippet/cpp/t-system.web.services.pr_3_2.cpp)]\n [!code-cs[Classic HttpSimpleClientProtocol Example#1](~/add/codesnippet/csharp/t-system.web.services.pr_3_2.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class HttpSimpleClientProtocol : System.Web.Services.Protocols.HttpWebClientProtocol
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Web.Services.Protocols.WebClientProtocol
  - System.Web.Services.Protocols.HttpWebClientProtocol
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect
  - System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync(System.Object)
  - System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates
  - System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer
  - System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression
  - System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type,System.Collections.ArrayList)
  - System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type[],System.Collections.ArrayList)
  - System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest(System.Uri)
  - System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest)
  - System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)
  - System.Web.Services.Protocols.HttpWebClientProtocol.Proxy
  - System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing
  - System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent
  - System.Web.Services.Protocols.WebClientProtocol.Abort
  - System.Web.Services.Protocols.WebClientProtocol.AddToCache(System.Type,System.Object)
  - System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName
  - System.Web.Services.Protocols.WebClientProtocol.Credentials
  - System.Web.Services.Protocols.WebClientProtocol.GetFromCache(System.Type)
  - System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate
  - System.Web.Services.Protocols.WebClientProtocol.RequestEncoding
  - System.Web.Services.Protocols.WebClientProtocol.Timeout
  - System.Web.Services.Protocols.WebClientProtocol.Url
  - System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.#ctor
  id: '#ctor'
  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol
  langs:
  - csharp
  name: HttpSimpleClientProtocol()
  nameWithType: HttpSimpleClientProtocol.HttpSimpleClientProtocol()
  fullName: System.Web.Services.Protocols.HttpSimpleClientProtocol.HttpSimpleClientProtocol()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.Services.Protocols.HttpSimpleClientProtocol&quot;> </xref> classe."
  syntax:
    content: protected HttpSimpleClientProtocol ();
    parameters: []
  overload: System.Web.Services.Protocols.HttpSimpleClientProtocol.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)
  id: BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)
  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol
  langs:
  - csharp
  name: BeginInvoke(String,String,Object[],AsyncCallback,Object)
  nameWithType: HttpSimpleClientProtocol.BeginInvoke(String,String,Object[],AsyncCallback,Object)
  fullName: System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(String,String,Object[],AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Inicia uma invocação assíncrona de um método de um serviço XML Web service."
  remarks: "O `methodName` parâmetro é utilizado para localizar os tipos dos parâmetros e valores do método que é a invocar o método BeginInvoke de retorno. Também é utilizado para localizar os atributos personalizados que foram adicionados ao método. <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>, <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>, e <xref:System.Xml.Serialization.XmlElementAttribute>fornecem informações adicionais sobre o método derivado que é necessário para o protocolo HTTP.</xref:System.Xml.Serialization.XmlElementAttribute> </xref:System.Web.Services.Protocols.SoapRpcMethodAttribute></xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>       `asyncState`é transmitido `callback` e está incluído no <xref:System.IAsyncResult>que é devolvido do método BeginInvoke.</xref:System.IAsyncResult> É útil para passar informações a partir do contexto da chamada assíncrona para o processamento do resultado assíncrono no `callback`."
  example:
  - "The following code example is an ASP.NET Web Form, which calls an XML Web service named `Math`. Within the `EnterBtn_Click` function, the Web Form starts and completes an asynchronous invocation of the `Add` XML Web service method.  \n  \n [!code-cs[Classic HttpSimpleClientProtocol.EndInvoke Example#1](~/add/codesnippet/csharp/610d2bee-8011-4b46-8264-_1.aspx)]\n [!code-vb[Classic HttpSimpleClientProtocol.EndInvoke Example#1](~/add/codesnippet/visualbasic/610d2bee-8011-4b46-8264-_1.aspx)]  \n  \n The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the `Math` XML Web service below. Within the `BeginAdd` method of the proxy class, the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> method starts an asynchronous invocation of the `Add` XML Web service method.  \n  \n [!code-cpp[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/add/codesnippet/cpp/610d2bee-8011-4b46-8264-_2.cpp)]\n [!code-cs[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/add/codesnippet/csharp/610d2bee-8011-4b46-8264-_2.cs)]\n [!code-vb[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/add/codesnippet/visualbasic/610d2bee-8011-4b46-8264-_2.vb)]  \n  \n The following code example is the `Math` XML Web service, from which the preceding proxy class was created.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: protected IAsyncResult BeginInvoke (string methodName, string requestUrl, object[] parameters, AsyncCallback callback, object asyncState);
    parameters:
    - id: methodName
      type: System.String
      description: "O nome do método de serviço Web de XML."
    - id: requestUrl
      type: System.String
      description: "O URL a utilizar quando criar <xref:System.Net.WebRequest>.</xref:System.Net.WebRequest>"
    - id: parameters
      type: System.Object[]
      description: "Uma matriz de objetos que contém os parâmetros a transmitir ao método de serviço Web de XML. Corresponde a ordem dos valores na matriz da conformidade os parâmetros no método de chamada de classe derivada."
    - id: callback
      type: System.AsyncCallback
      description: "O delegado para chamar depois de concluída a chamada de método assíncronas. Se `callback` é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, o delegado não está a ser chamado."
    - id: asyncState
      type: System.Object
      description: "As informações adicionais fornecidas por um cliente."
    return:
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>que podem ser transmitidos para o <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke*>método para obter os valores de retorno do método de serviço Web de XML.</xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke*> </xref:System.IAsyncResult>"
  overload: System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "O pedido atingiu o computador do servidor, mas não foi processado com êxito."
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)
  id: EndInvoke(System.IAsyncResult)
  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol
  langs:
  - csharp
  name: EndInvoke(IAsyncResult)
  nameWithType: HttpSimpleClientProtocol.EndInvoke(IAsyncResult)
  fullName: System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(IAsyncResult)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Conclui assíncrona invocação de um método do serviço XML Web através de HTTP."
  remarks: ''
  example:
  - "The following code example is an ASP.NET Web Form, which calls an XML Web service named `Math`. Within the `EnterBtn_Click` function, the Web Form starts and completes an asynchronous invocation of the `Add` XML Web service method.  \n  \n [!code-cs[Classic HttpSimpleClientProtocol.EndInvoke Example#1](~/add/codesnippet/csharp/df330565-2b74-43bd-92c4-_1.aspx)]\n [!code-vb[Classic HttpSimpleClientProtocol.EndInvoke Example#1](~/add/codesnippet/visualbasic/df330565-2b74-43bd-92c4-_1.aspx)]  \n  \n The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the `Math` XML Web service below. Within the `EndAdd` method of the proxy class, the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> method starts an asynchronous invocation of the `Add` XML Web service method.  \n  \n [!code-cpp[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/add/codesnippet/cpp/df330565-2b74-43bd-92c4-_2.cpp)]\n [!code-cs[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/add/codesnippet/csharp/df330565-2b74-43bd-92c4-_2.cs)]\n [!code-vb[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/add/codesnippet/visualbasic/df330565-2b74-43bd-92c4-_2.vb)]  \n  \n The following code example is the `Math` XML Web service, from which the above proxy class was created.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: protected object EndInvoke (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "O <xref:System.IAsyncResult>devolveu o <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke*>método.</xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke*> </xref:System.IAsyncResult>"
    return:
      type: System.Object
      description: "Uma matriz de objetos que contém o valor de retorno e quaisquer por referência ou <code> out </code> método do serviço de parâmetros para a Web de XML."
  overload: System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>Não é o valor devolvido do <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke*> método."
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])
  id: Invoke(System.String,System.String,System.Object[])
  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol
  langs:
  - csharp
  name: Invoke(String,String,Object[])
  nameWithType: HttpSimpleClientProtocol.Invoke(String,String,Object[])
  fullName: System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(String,String,Object[])
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Invoca um método do serviço XML Web através de HTTP."
  remarks: "O `methodName` parâmetro é utilizado para localizar os tipos dos parâmetros e valores do método que é a invocar o método Invoke de retorno. Também é utilizado para localizar os atributos personalizados que foram adicionados ao método. <xref:System.Web.Services.Protocols.HttpMethodAttribute>e <xref:System.Xml.Serialization.XmlElementAttribute>fornecem informações adicionais sobre o método derivado que é necessário para o protocolo SOAP.</xref:System.Xml.Serialization.XmlElementAttribute></xref:System.Web.Services.Protocols.HttpMethodAttribute>"
  example:
  - "The following code example is an ASP.NET Web Form, which calls an XML Web service named `Math`. Within the `EnterBtn_Click` function, the Web Form synchronously invokes the `Add` XML Web service method.  \n  \n [!code-cs[HttpSimpleClientProtocol.Invoke Example#2](~/add/codesnippet/csharp/3a69f415-9422-4839-9833-_1.aspx)]\n [!code-vb[HttpSimpleClientProtocol.Invoke Example#2](~/add/codesnippet/visualbasic/3a69f415-9422-4839-9833-_1.aspx)]  \n  \n The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the `Math` XML Web service below. Within the `Add` method of the proxy class, the Invoke method synchronously invokes the `Add` Web Service method.  \n  \n [!code-vb[HttpSimpleClientProtocol.Invoke Example#1](~/add/codesnippet/visualbasic/3a69f415-9422-4839-9833-_2.vb)]\n [!code-cs[HttpSimpleClientProtocol.Invoke Example#1](~/add/codesnippet/csharp/3a69f415-9422-4839-9833-_2.cs)]\n [!code-cpp[HttpSimpleClientProtocol.Invoke Example#1](~/add/codesnippet/cpp/3a69f415-9422-4839-9833-_2.cpp)]  \n  \n The following code example is the `Math` XML Web service, from which the above proxy class was created.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: protected object Invoke (string methodName, string requestUrl, object[] parameters);
    parameters:
    - id: methodName
      type: System.String
      description: "O nome do método do serviço XML Web na classe derivada que é a invocar o método Invoke."
    - id: requestUrl
      type: System.String
      description: "O URL do método de serviço XML Web que o cliente está a pedir."
    - id: parameters
      type: System.Object[]
      description: "Uma matriz de objetos que contém os parâmetros a transmitir para o serviço XML Web remoto. Corresponde a ordem dos valores na matriz da conformidade os parâmetros no método de chamada de classe derivada."
    return:
      type: System.Object
      description: "Uma matriz de objetos que contém o valor de retorno e qualquer por referência ou <code> out </code> parâmetros do método de classe derivada."
  overload: System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "O pedido atingiu o computador do servidor, mas não foi processado com êxito."
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback)
  id: InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback)
  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol
  langs:
  - csharp
  name: InvokeAsync(String,String,Object[],SendOrPostCallback)
  nameWithType: HttpSimpleClientProtocol.InvokeAsync(String,String,Object[],SendOrPostCallback)
  fullName: System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(String,String,Object[],SendOrPostCallback)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Invoca o método especificado no modo assíncrono."
  syntax:
    content: protected void InvokeAsync (string methodName, string requestUrl, object[] parameters, System.Threading.SendOrPostCallback callback);
    parameters:
    - id: methodName
      type: System.String
      description: "O nome do método a invocar."
    - id: requestUrl
      type: System.String
      description: "O URL de pedido do serviço web invocado."
    - id: parameters
      type: System.Object[]
      description: "Os parâmetros a transmitir ao método."
    - id: callback
      type: System.Threading.SendOrPostCallback
      description: "O delegado chamado quando a invocação do método foi concluída."
  overload: System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)
  id: InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)
  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol
  langs:
  - csharp
  name: InvokeAsync(String,String,Object[],SendOrPostCallback,Object)
  nameWithType: HttpSimpleClientProtocol.InvokeAsync(String,String,Object[],SendOrPostCallback,Object)
  fullName: System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(String,String,Object[],SendOrPostCallback,Object)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Invoca o método especificado no modo assíncrono, mantendo em simultâneo um Estado associado."
  syntax:
    content: protected void InvokeAsync (string methodName, string requestUrl, object[] parameters, System.Threading.SendOrPostCallback callback, object userState);
    parameters:
    - id: methodName
      type: System.String
      description: "O nome do método a invocar."
    - id: requestUrl
      type: System.String
      description: "O URL de pedido do serviço web invocado."
    - id: parameters
      type: System.Object[]
      description: "Os parâmetros a transmitir ao método."
    - id: callback
      type: System.Threading.SendOrPostCallback
      description: "O delegado chamado quando a invocação do método foi concluída."
    - id: userState
      type: System.Object
      description: "Informações de estado que são transmitidas ao associados a um objeto que contém o `callback` delegar quando o método foi concluída."
  overload: System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: System.Web.Services.Protocols.HttpWebClientProtocol
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.#ctor
  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol
  isExternal: false
  name: HttpSimpleClientProtocol()
  nameWithType: HttpSimpleClientProtocol.HttpSimpleClientProtocol()
  fullName: System.Web.Services.Protocols.HttpSimpleClientProtocol.HttpSimpleClientProtocol()
- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)
  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol
  isExternal: false
  name: BeginInvoke(String,String,Object[],AsyncCallback,Object)
  nameWithType: HttpSimpleClientProtocol.BeginInvoke(String,String,Object[],AsyncCallback,Object)
  fullName: System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(String,String,Object[],AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)
  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol
  isExternal: false
  name: EndInvoke(IAsyncResult)
  nameWithType: HttpSimpleClientProtocol.EndInvoke(IAsyncResult)
  fullName: System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(IAsyncResult)
- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])
  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol
  isExternal: false
  name: Invoke(String,String,Object[])
  nameWithType: HttpSimpleClientProtocol.Invoke(String,String,Object[])
  fullName: System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(String,String,Object[])
- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback)
  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol
  isExternal: false
  name: InvokeAsync(String,String,Object[],SendOrPostCallback)
  nameWithType: HttpSimpleClientProtocol.InvokeAsync(String,String,Object[],SendOrPostCallback)
  fullName: System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(String,String,Object[],SendOrPostCallback)
- uid: System.Threading.SendOrPostCallback
  parent: System.Threading
  isExternal: true
  name: SendOrPostCallback
  nameWithType: SendOrPostCallback
  fullName: System.Threading.SendOrPostCallback
- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)
  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol
  isExternal: false
  name: InvokeAsync(String,String,Object[],SendOrPostCallback,Object)
  nameWithType: HttpSimpleClientProtocol.InvokeAsync(String,String,Object[],SendOrPostCallback,Object)
  fullName: System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(String,String,Object[],SendOrPostCallback,Object)
- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.#ctor*
  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol
  isExternal: false
  name: HttpSimpleClientProtocol
  nameWithType: HttpSimpleClientProtocol.HttpSimpleClientProtocol
- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke*
  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol
  isExternal: false
  name: BeginInvoke
  nameWithType: HttpSimpleClientProtocol.BeginInvoke
- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke*
  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol
  isExternal: false
  name: EndInvoke
  nameWithType: HttpSimpleClientProtocol.EndInvoke
- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke*
  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol
  isExternal: false
  name: Invoke
  nameWithType: HttpSimpleClientProtocol.Invoke
- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync*
  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol
  isExternal: false
  name: InvokeAsync
  nameWithType: HttpSimpleClientProtocol.InvokeAsync
