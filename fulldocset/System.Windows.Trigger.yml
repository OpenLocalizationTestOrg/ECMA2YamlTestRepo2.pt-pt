### YamlMime:ManagedReference
items:
- uid: System.Windows.Trigger
  id: Trigger
  children:
  - System.Windows.Trigger.#ctor
  - System.Windows.Trigger.Property
  - System.Windows.Trigger.ReceiveTypeConverter(System.Object,System.Windows.Markup.XamlSetTypeConverterEventArgs)
  - System.Windows.Trigger.Setters
  - System.Windows.Trigger.SourceName
  - System.Windows.Trigger.System#ComponentModel#ISupportInitialize#BeginInit
  - System.Windows.Trigger.System#ComponentModel#ISupportInitialize#EndInit
  - System.Windows.Trigger.System#Windows#Markup#IAddChild#AddChild(System.Object)
  - System.Windows.Trigger.System#Windows#Markup#IAddChild#AddText(System.String)
  - System.Windows.Trigger.Value
  langs:
  - csharp
  name: Trigger
  nameWithType: Trigger
  fullName: System.Windows.Trigger
  type: Class
  summary: "Representa um acionador que aplica-se os valores de propriedade ou efetua ações condicionalmente."
  remarks: "[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]Define as propriedades que correspondem a ação do utilizador final, tais como o <xref:System.Windows.UIElement.IsMouseOver%2A>propriedade está definida como `true` quando o utilizador passa o cursor sobre um <xref:System.Windows.UIElement>ou a <xref:System.Windows.ContentElement.IsMouseOver%2A>propriedade de <xref:System.Windows.ContentElement>.</xref:System.Windows.ContentElement> </xref:System.Windows.ContentElement.IsMouseOver%2A> correspondentes</xref:System.Windows.UIElement> </xref:System.Windows.UIElement.IsMouseOver%2A> Permite que representa as ações de utilizador final nos valores de propriedade, juntamente com o elemento de Acionador [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] estilos para alterar os valores de propriedade com base nessas ações do utilizador final, tudo a partir de dentro do markup.       As propriedades alteradas pelo acionadores automaticamente são repostas para o valor anterior, quando a condição accionada já não é satisfeita. Acionadores estão otimizados para transitório Estados que são esperados para alterar e volte ao original Estado, tal como <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> <xref:System.Windows.Controls.Button> <xref:System.Windows.Controls.ListBoxItem.IsSelected%2A>no <xref:System.Windows.Controls.ListBoxItem>.</xref:System.Windows.Controls.ListBoxItem> </xref:System.Windows.Controls.ListBoxItem.IsSelected%2A> </xref:System.Windows.Controls.Button> </xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> O <xref:System.Windows.Trigger.Property%2A>de interesse tem de ser uma propriedade de dependência.</xref:System.Windows.Trigger.Property%2A>       Tenha em atenção que tem de especificar o <xref:System.Windows.Trigger.Property%2A>e <xref:System.Windows.Trigger.Value%2A>as propriedades de um acionador para o acionador ser significativo.</xref:System.Windows.Trigger.Value%2A> </xref:System.Windows.Trigger.Property%2A> Se uma ou ambas as propriedades não estiverem definidas, é emitida uma exceção.       O <xref:System.Windows.Trigger.Setters%2A>propriedade de um objeto de Acionador apenas pode consistir de <xref:System.Windows.Setter>objetos.</xref:System.Windows.Setter> </xref:System.Windows.Trigger.Setters%2A> Adicionar um <xref:System.Windows.Setter>subordinado para um objecto accionador implicitamente adiciona-o para o <xref:System.Windows.SetterBaseCollection>para o objeto de Acionador.</xref:System.Windows.SetterBaseCollection> </xref:System.Windows.Setter> <xref:System.Windows.EventSetter>não são suportados objectos; apenas <xref:System.Windows.Style.Setters%2A?displayProperty=fullName>suporta <xref:System.Windows.EventSetter>objetos.</xref:System.Windows.EventSetter> </xref:System.Windows.Style.Setters%2A?displayProperty=fullName></xref:System.Windows.EventSetter>       Existem outros tipos de acionadores. <xref:System.Windows.MultiTrigger>permite-lhe aplicar alterações com base no estado de várias propriedades.</xref:System.Windows.MultiTrigger> <xref:System.Windows.EventTrigger>permite-lhe aplicar as alterações quando ocorre um evento.</xref:System.Windows.EventTrigger> <xref:System.Windows.DataTrigger>e <xref:System.Windows.MultiDataTrigger>são as propriedades de dados vinculados.</xref:System.Windows.MultiDataTrigger></xref:System.Windows.DataTrigger>"
  example:
  - "The following example shows a named <xref:System.Windows.Style> available to <xref:System.Windows.Controls.Button> controls. The <xref:System.Windows.Style> defines a Trigger element that changes the <xref:System.Windows.Controls.Control.Foreground%2A> property of a button when the <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> property is `true`.  \n  \n [!code-xml[BtnStyles#2](~/add/codesnippet/xaml/ButtonStyles2/app.xaml#2)]"
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("Setters")]

      [System.Windows.Markup.XamlSetTypeConverter("ReceiveTypeConverter")]

      public class Trigger : System.Windows.TriggerBase, System.ComponentModel.ISupportInitialize, System.Windows.Markup.IAddChild
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.TriggerBase
  implements:
  - System.ComponentModel.ISupportInitialize
  - System.Windows.Markup.IAddChild
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  - System.Windows.TriggerBase.EnterActions
  - System.Windows.TriggerBase.ExitActions
  platform:
  - net462
- uid: System.Windows.Trigger.#ctor
  id: '#ctor'
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: Trigger()
  nameWithType: Trigger.Trigger()
  fullName: System.Windows.Trigger.Trigger()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.Trigger&quot;> </xref> classe."
  syntax:
    content: public Trigger ();
    parameters: []
  overload: System.Windows.Trigger.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Trigger.Property
  id: Property
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: Property
  nameWithType: Trigger.Property
  fullName: System.Windows.Trigger.Property
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Obtém ou define a propriedade que devolve o valor que é comparado com o <xref:System.Windows.Trigger.Value*>propriedade do acionador.</xref:System.Windows.Trigger.Value*> A comparação é uma verificação de igualdade de referência."
  remarks: "O valor devolvido por esta propriedade é comparado com o valor especificado pelo <xref:System.Windows.Trigger.Value%2A>propriedade.</xref:System.Windows.Trigger.Value%2A> A comparação que é executada é uma verificação de igualdade de referência. Se os dois valores corresponderem, em seguida, associada <xref:System.Windows.Setter>s aplicam-se os valores de propriedade especificado.</xref:System.Windows.Setter>       Utilize o `ClassName.PropertyName` sintaxe para qualificar a propriedade especifica se o estilo ou o modelo que contém este acionador não tem o `TargetType` propriedade definida.       Tenha em atenção que tem de especificar a propriedade de ambos os e <xref:System.Windows.Trigger.Value%2A>as propriedades de um <xref:System.Windows.Trigger>para o acionador ser significativo.</xref:System.Windows.Trigger> </xref:System.Windows.Trigger.Value%2A> Se uma ou ambas as propriedades não estiverem definidas, é emitida uma exceção."
  example:
  - "The following example contains two triggers. The first changes the <xref:System.Windows.Controls.Control.Background%2A> property of a <xref:System.Windows.Controls.Button> when the <xref:System.Windows.UIElement.IsMouseOver%2A> property is **true**. The second changes the <xref:System.Windows.Controls.Control.Foreground%2A> property of a button when the <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> property is **true**. The <xref:System.Windows.Style.TargetType%2A> of the <xref:System.Windows.Style> is set to <xref:System.Windows.Controls.Button> and therefore there is no need to qualify the `Property` properties with the class name.  \n  \n [!code-xml[BtnStyles#2](~/add/codesnippet/xaml/ButtonStyles2/app.xaml#2)]"
  syntax:
    content: public System.Windows.DependencyProperty Property { get; set; }
    return:
      type: System.Windows.DependencyProperty
      description: "A <xref href=&quot;System.Windows.DependencyProperty&quot;> </xref> que devolve o valor da propriedade do elemento. O valor predefinido é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Trigger.Property*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A <xref href=&quot;System.Windows.Style&quot;> </xref> não pode conter um <xref href=&quot;System.Windows.Trigger&quot;> </xref> que referencia o <xref href=&quot;System.Windows.Style&quot;> </xref> propriedade."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Após um <xref href=&quot;System.Windows.Trigger&quot;> </xref> está em utilização, não pode ser modificado."
  platform:
  - net462
- uid: System.Windows.Trigger.ReceiveTypeConverter(System.Object,System.Windows.Markup.XamlSetTypeConverterEventArgs)
  id: ReceiveTypeConverter(System.Object,System.Windows.Markup.XamlSetTypeConverterEventArgs)
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: ReceiveTypeConverter(Object,XamlSetTypeConverterEventArgs)
  nameWithType: Trigger.ReceiveTypeConverter(Object,XamlSetTypeConverterEventArgs)
  fullName: System.Windows.Trigger.ReceiveTypeConverter(Object,XamlSetTypeConverterEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Processa casos em que um conversor de tipos fornece um valor para uma propriedade de um <xref href=&quot;System.Windows.Trigger&quot;> </xref> objeto."
  remarks: "Este é o método referenciado por um aplicados <xref:System.Windows.Markup.XamlSetTypeConverterAttribute>atributo ao nível da classe, o que significa que este método processa todas as tentativas para definir os valores de <xref:System.Windows.Trigger>com um conversor de tipos.</xref:System.Windows.Trigger> </xref:System.Windows.Markup.XamlSetTypeConverterAttribute> Não normalmente chamar este método diretamente."
  syntax:
    content: public static void ReceiveTypeConverter (object targetObject, System.Windows.Markup.XamlSetTypeConverterEventArgs eventArgs);
    parameters:
    - id: targetObject
      type: System.Object
      description: "O objecto onde o conversor de tipos define o valor."
    - id: eventArgs
      type: System.Windows.Markup.XamlSetTypeConverterEventArgs
      description: "Tipo de dados que são relevantes para processamento de conversor."
  overload: System.Windows.Trigger.ReceiveTypeConverter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Trigger.Setters
  id: Setters
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: Setters
  nameWithType: Trigger.Setters
  fullName: System.Windows.Trigger.Setters
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Obtém uma coleção de <xref href=&quot;System.Windows.Setter&quot;> </xref> objetos, que descrevem os valores de propriedade a aplicar quando a condição especificada foi cumprida."
  remarks: "<a name=&quot;xamlPropertyElementUsage_Setters&quot;></a># # Utilização de elemento de propriedade de XAML ```   <object>     <object.Setters>       ZeroOrMoreSetters     </object.Setters>   </object>   ``` <a name=&quot;xamlValues_Setters&quot;> </a> # # XAML valores *ZeroOrMoreSetters* Zero ou mais <xref:System.Windows.Setter>objetos.</xref:System.Windows.Setter>       Isto não suporta <xref:System.Windows.EventSetter>objeto.</xref:System.Windows.EventSetter>       A <xref:System.Windows.Trigger>permite-lhe utilizar <xref:System.Windows.Setter>s para aplicar a propriedade valores quando o elemento cumpre uma condição especificada.</xref:System.Windows.Setter> </xref:System.Windows.Trigger> Por exemplo, poderá pretender alterar a cor de fundo de um elemento quando se encontrar no foco.       Se a mesma propriedade estiver definida mais do que uma vez, o último valor da propriedade será aplicado.       A propriedade Setters um <xref:System.Windows.Trigger>objeto apenas pode consistir de <xref:System.Windows.Setter>objetos.</xref:System.Windows.Setter> </xref:System.Windows.Trigger> Adicionar um <xref:System.Windows.Setter>subordinado para um <xref:System.Windows.Trigger>objeto implicitamente adiciona-o para o <xref:System.Windows.SetterBaseCollection>para o <xref:System.Windows.Trigger>objeto.</xref:System.Windows.Trigger> </xref:System.Windows.SetterBaseCollection> </xref:System.Windows.Trigger> </xref:System.Windows.Setter> <xref:System.Windows.EventSetter>não são suportados objectos; apenas <xref:System.Windows.Style.Setters%2A?displayProperty=fullName>suporta <xref:System.Windows.EventSetter>objetos.</xref:System.Windows.EventSetter> </xref:System.Windows.Style.Setters%2A?displayProperty=fullName></xref:System.Windows.EventSetter>"
  example:
  - "As mentioned above, adding a <xref:System.Windows.Setter> child to a <xref:System.Windows.Trigger> object implicitly adds it to the <xref:System.Windows.SetterBaseCollection> for the <xref:System.Windows.Trigger> object. In the following example, `<Trigger.Setters>` is implicit.  \n  \n [!code-xml[PhotoStoreDemoStyled#TriggerSettersRef](~/add/codesnippet/xaml/photostore/window1.xaml#triggersettersref)]\n [!code-xml[PhotoStoreDemoStyled#TriggerSettersRef](~/add/codesnippet/xaml/p-system.windows.trigger_3_1.xaml)]"
  syntax:
    content: public System.Windows.SetterBaseCollection Setters { get; }
    return:
      type: System.Windows.SetterBaseCollection
      description: "O valor predefinido é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Trigger.Setters*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Trigger.SourceName
  id: SourceName
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: SourceName
  nameWithType: Trigger.SourceName
  fullName: System.Windows.Trigger.SourceName
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Obtém ou define o nome do objeto com a propriedade que faz com que a setters associadas sejam aplicadas."
  remarks: "Pode definir esta propriedade para o nome de qualquer elemento dentro do âmbito em que a coleção de Acionador (a coleção que este <xref:System.Windows.Trigger>faz parte do) é aplicada.</xref:System.Windows.Trigger> Isto é, geralmente, um elemento com nome que esteja dentro do modelo que contém esta <xref:System.Windows.Trigger>.</xref:System.Windows.Trigger>       Nome de um objeto utilizando o [x: nome da diretiva](~/add/includes/ajax-current-ext-md.md) sintaxe."
  example:
  - "One scenario when you would use the SourceName property is when the property of interest is not a property of the templated parent, as in the following example:  \n  \n [!code-xml[ControlTemplateExamples#TriggerSourceName](~/add/codesnippet/xaml/controltemplateexamples/resources/menu.xaml#triggersourcename)]"
  syntax:
    content: public string SourceName { get; set; }
    return:
      type: System.String
      description: "A propriedade predefinida é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>. Se esta propriedade é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, em seguida, a <xref:System.Windows.Trigger.Property*>propriedade é avaliada relativamente ao elemento este estilo ou o modelo está a ser aplicado (styled principal ou transformada em modelo principal).</xref:System.Windows.Trigger.Property*>"
  overload: System.Windows.Trigger.SourceName*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Após um <xref href=&quot;System.Windows.Trigger&quot;> </xref> está em utilização, não pode ser modificado."
  platform:
  - net462
- uid: System.Windows.Trigger.System#ComponentModel#ISupportInitialize#BeginInit
  id: System#ComponentModel#ISupportInitialize#BeginInit
  isEii: true
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: System.ComponentModel.ISupportInitialize.BeginInit()
  nameWithType: Trigger.System.ComponentModel.ISupportInitialize.BeginInit()
  fullName: System.Windows.Trigger.System.ComponentModel.ISupportInitialize.BeginInit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Sinalizar o objeto que inicialização está a iniciar."
  remarks: "Este membro é uma implementação de membro de interface explícita. Pode ser utilizado apenas quando o <xref:System.Windows.Setter>instância é convertida para um <xref:System.ComponentModel.ISupportInitialize>interface.</xref:System.ComponentModel.ISupportInitialize> </xref:System.Windows.Setter>"
  syntax:
    content: void ISupportInitialize.BeginInit ();
    parameters: []
  overload: System.Windows.Trigger.System#ComponentModel#ISupportInitialize#BeginInit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Trigger.System#ComponentModel#ISupportInitialize#EndInit
  id: System#ComponentModel#ISupportInitialize#EndInit
  isEii: true
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: System.ComponentModel.ISupportInitialize.EndInit()
  nameWithType: Trigger.System.ComponentModel.ISupportInitialize.EndInit()
  fullName: System.Windows.Trigger.System.ComponentModel.ISupportInitialize.EndInit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Sinalizar o objeto que inicialização está concluída."
  remarks: "Este membro é uma implementação de membro de interface explícita. Pode ser utilizado apenas quando o <xref:System.Windows.Setter>instância é convertida para um <xref:System.ComponentModel.ISupportInitialize>interface.</xref:System.ComponentModel.ISupportInitialize> </xref:System.Windows.Setter>"
  syntax:
    content: void ISupportInitialize.EndInit ();
    parameters: []
  overload: System.Windows.Trigger.System#ComponentModel#ISupportInitialize#EndInit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Trigger.System#Windows#Markup#IAddChild#AddChild(System.Object)
  id: System#Windows#Markup#IAddChild#AddChild(System.Object)
  isEii: true
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: System.Windows.Markup.IAddChild.AddChild(Object)
  nameWithType: Trigger.System.Windows.Markup.IAddChild.AddChild(Object)
  fullName: System.Windows.Trigger.System.Windows.Markup.IAddChild.AddChild(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Adiciona um objeto subordinado."
  remarks: "Este membro é uma implementação de membro de interface explícita. Pode ser utilizado apenas quando o <xref:System.Windows.Trigger>instância é convertida para um <xref:System.Windows.Markup.IAddChild>interface.</xref:System.Windows.Markup.IAddChild> </xref:System.Windows.Trigger>"
  syntax:
    content: void IAddChild.AddChild (object value);
    parameters:
    - id: value
      type: System.Object
      description: "O objeto subordinado para adicionar."
  overload: System.Windows.Trigger.System#Windows#Markup#IAddChild#AddChild*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Trigger.System#Windows#Markup#IAddChild#AddText(System.String)
  id: System#Windows#Markup#IAddChild#AddText(System.String)
  isEii: true
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: System.Windows.Markup.IAddChild.AddText(String)
  nameWithType: Trigger.System.Windows.Markup.IAddChild.AddText(String)
  fullName: System.Windows.Trigger.System.Windows.Markup.IAddChild.AddText(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Adiciona o conteúdo de texto de um nó para o objeto."
  remarks: "Este membro é uma implementação de membro de interface explícita. Pode ser utilizado apenas quando o <xref:System.Windows.Trigger>instância é convertida para um <xref:System.Windows.Markup.IAddChild>interface.</xref:System.Windows.Markup.IAddChild> </xref:System.Windows.Trigger>"
  syntax:
    content: void IAddChild.AddText (string text);
    parameters:
    - id: text
      type: System.String
      description: "O texto a adicionar ao objeto."
  overload: System.Windows.Trigger.System#Windows#Markup#IAddChild#AddText*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Trigger.Value
  id: Value
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: Value
  nameWithType: Trigger.Value
  fullName: System.Windows.Trigger.Value
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Obtém ou define o valor a ser comparada com o valor da propriedade do elemento. A comparação é uma verificação de igualdade de referência."
  remarks: "Este valor é comparado com o valor da propriedade devolvido pela <xref:System.Windows.Trigger.Property%2A>propriedade de <xref:System.Windows.Trigger>.</xref:System.Windows.Trigger> </xref:System.Windows.Trigger.Property%2A> A comparação que é executada é uma verificação de qualidade de referência. Se os dois valores forem igual, em seguida, associada <xref:System.Windows.Setter>s aplicam-se os valores de propriedade especificado.</xref:System.Windows.Setter>       Tenha em atenção que tem de especificar o <xref:System.Windows.Trigger.Property%2A>e o valor de propriedades num <xref:System.Windows.Trigger>para o acionador ser significativo.</xref:System.Windows.Trigger> </xref:System.Windows.Trigger.Property%2A> Por conseguinte, se uma ou ambas as propriedades não forem especificadas, em seguida, é emitida uma exceção.      <a name=&quot;xamlPropertyElementUsage_Value&quot;></a># # Utilização de elemento de propriedade de XAML```   <object>     <object.Value>       Value     </object.Value>   </object>   ```"
  example:
  - "The following example changes the <xref:System.Windows.Controls.Control.Foreground%2A> property of a button when the <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> property is **true**.  \n  \n [!code-xml[BtnStyles#2](~/add/codesnippet/xaml/ButtonStyles2/app.xaml#2)]"
  syntax:
    content: public object Value { get; set; }
    return:
      type: System.Object
      description: "O valor predefinido é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>. Consulte também a secção de exceções."
  overload: System.Windows.Trigger.Value*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "As expressões, tais como enlaces não são suportadas."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Após um <xref href=&quot;System.Windows.Trigger&quot;> </xref> está em utilização, não pode ser modificado."
  platform:
  - net462
references:
- uid: System.Windows.TriggerBase
  isExternal: false
  name: System.Windows.TriggerBase
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Trigger.#ctor
  parent: System.Windows.Trigger
  isExternal: false
  name: Trigger()
  nameWithType: Trigger.Trigger()
  fullName: System.Windows.Trigger.Trigger()
- uid: System.Windows.Trigger.Property
  parent: System.Windows.Trigger
  isExternal: false
  name: Property
  nameWithType: Trigger.Property
  fullName: System.Windows.Trigger.Property
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Trigger.ReceiveTypeConverter(System.Object,System.Windows.Markup.XamlSetTypeConverterEventArgs)
  parent: System.Windows.Trigger
  isExternal: false
  name: ReceiveTypeConverter(Object,XamlSetTypeConverterEventArgs)
  nameWithType: Trigger.ReceiveTypeConverter(Object,XamlSetTypeConverterEventArgs)
  fullName: System.Windows.Trigger.ReceiveTypeConverter(Object,XamlSetTypeConverterEventArgs)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Markup.XamlSetTypeConverterEventArgs
  parent: System.Windows.Markup
  isExternal: false
  name: XamlSetTypeConverterEventArgs
  nameWithType: XamlSetTypeConverterEventArgs
  fullName: System.Windows.Markup.XamlSetTypeConverterEventArgs
- uid: System.Windows.Trigger.Setters
  parent: System.Windows.Trigger
  isExternal: false
  name: Setters
  nameWithType: Trigger.Setters
  fullName: System.Windows.Trigger.Setters
- uid: System.Windows.SetterBaseCollection
  parent: System.Windows
  isExternal: false
  name: SetterBaseCollection
  nameWithType: SetterBaseCollection
  fullName: System.Windows.SetterBaseCollection
- uid: System.Windows.Trigger.SourceName
  parent: System.Windows.Trigger
  isExternal: false
  name: SourceName
  nameWithType: Trigger.SourceName
  fullName: System.Windows.Trigger.SourceName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Trigger.System#ComponentModel#ISupportInitialize#BeginInit
  parent: System.Windows.Trigger
  isExternal: false
  name: System.ComponentModel.ISupportInitialize.BeginInit()
  nameWithType: Trigger.System.ComponentModel.ISupportInitialize.BeginInit()
  fullName: System.Windows.Trigger.System.ComponentModel.ISupportInitialize.BeginInit()
- uid: System.Windows.Trigger.System#ComponentModel#ISupportInitialize#EndInit
  parent: System.Windows.Trigger
  isExternal: false
  name: System.ComponentModel.ISupportInitialize.EndInit()
  nameWithType: Trigger.System.ComponentModel.ISupportInitialize.EndInit()
  fullName: System.Windows.Trigger.System.ComponentModel.ISupportInitialize.EndInit()
- uid: System.Windows.Trigger.System#Windows#Markup#IAddChild#AddChild(System.Object)
  parent: System.Windows.Trigger
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddChild(Object)
  nameWithType: Trigger.System.Windows.Markup.IAddChild.AddChild(Object)
  fullName: System.Windows.Trigger.System.Windows.Markup.IAddChild.AddChild(Object)
- uid: System.Windows.Trigger.System#Windows#Markup#IAddChild#AddText(System.String)
  parent: System.Windows.Trigger
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddText(String)
  nameWithType: Trigger.System.Windows.Markup.IAddChild.AddText(String)
  fullName: System.Windows.Trigger.System.Windows.Markup.IAddChild.AddText(String)
- uid: System.Windows.Trigger.Value
  parent: System.Windows.Trigger
  isExternal: false
  name: Value
  nameWithType: Trigger.Value
  fullName: System.Windows.Trigger.Value
- uid: System.Windows.Trigger.#ctor*
  parent: System.Windows.Trigger
  isExternal: false
  name: Trigger
  nameWithType: Trigger.Trigger
- uid: System.Windows.Trigger.Property*
  parent: System.Windows.Trigger
  isExternal: false
  name: Property
  nameWithType: Trigger.Property
- uid: System.Windows.Trigger.ReceiveTypeConverter*
  parent: System.Windows.Trigger
  isExternal: false
  name: ReceiveTypeConverter
  nameWithType: Trigger.ReceiveTypeConverter
- uid: System.Windows.Trigger.Setters*
  parent: System.Windows.Trigger
  isExternal: false
  name: Setters
  nameWithType: Trigger.Setters
- uid: System.Windows.Trigger.SourceName*
  parent: System.Windows.Trigger
  isExternal: false
  name: SourceName
  nameWithType: Trigger.SourceName
- uid: System.Windows.Trigger.System#ComponentModel#ISupportInitialize#BeginInit*
  parent: System.Windows.Trigger
  isExternal: false
  name: System.ComponentModel.ISupportInitialize.BeginInit
  nameWithType: Trigger.System.ComponentModel.ISupportInitialize.BeginInit
- uid: System.Windows.Trigger.System#ComponentModel#ISupportInitialize#EndInit*
  parent: System.Windows.Trigger
  isExternal: false
  name: System.ComponentModel.ISupportInitialize.EndInit
  nameWithType: Trigger.System.ComponentModel.ISupportInitialize.EndInit
- uid: System.Windows.Trigger.System#Windows#Markup#IAddChild#AddChild*
  parent: System.Windows.Trigger
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddChild
  nameWithType: Trigger.System.Windows.Markup.IAddChild.AddChild
- uid: System.Windows.Trigger.System#Windows#Markup#IAddChild#AddText*
  parent: System.Windows.Trigger
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddText
  nameWithType: Trigger.System.Windows.Markup.IAddChild.AddText
- uid: System.Windows.Trigger.Value*
  parent: System.Windows.Trigger
  isExternal: false
  name: Value
  nameWithType: Trigger.Value
