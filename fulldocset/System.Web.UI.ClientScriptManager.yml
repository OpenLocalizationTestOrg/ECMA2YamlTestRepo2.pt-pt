### YamlMime:ManagedReference
items:
- uid: System.Web.UI.ClientScriptManager
  id: ClientScriptManager
  children:
  - System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)
  - System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)
  - System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)
  - System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)
  - System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)
  - System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)
  - System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions)
  - System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)
  - System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)
  - System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)
  - System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)
  - System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)
  - System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)
  - System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)
  - System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)
  - System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)
  - System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)
  - System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)
  - System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)
  - System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)
  - System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)
  - System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)
  - System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)
  - System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)
  - System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)
  - System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String)
  - System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)
  - System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)
  - System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.Web.UI.PostBackOptions)
  - System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)
  - System.Web.UI.ClientScriptManager.RegisterHiddenField(System.String,System.String)
  - System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)
  - System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)
  - System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)
  - System.Web.UI.ClientScriptManager.ValidateEvent(System.String)
  - System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)
  langs:
  - csharp
  name: ClientScriptManager
  nameWithType: ClientScriptManager
  fullName: System.Web.UI.ClientScriptManager
  type: Class
  summary: "Define os métodos para gerir scripts de cliente em aplicações Web."
  remarks: "A classe de ClientScriptManager é utilizada para gerir scripts de cliente e adicioná-los para aplicações Web. Pode obter uma referência para a classe de ClientScriptManager do <xref:System.Web.UI.Page.ClientScript%2A>propriedade o <xref:System.Web.UI.Page>objeto.</xref:System.Web.UI.Page> </xref:System.Web.UI.Page.ClientScript%2A>       Pode adicionar um script de cliente para uma página Web forma declarativa, incluindo o script na marcação de HTML da página. No entanto, existem situações quando o adicionar dinamicamente o script de cliente é necessário. Para adicionar um script dinamicamente, utilize o <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>método, o <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>método, o <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>método, ou o <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A>método, consoante quando e como que pretende adicionar o script.</xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> </xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> </xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> </xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Para obter mais informações, consulte [como: Adicionar cliente Script dinamicamente para o ASP.NET Web Pages](~/add/includes/ajax-current-ext-md.md).       A classe de ClientScriptManager identifica exclusivamente scripts por chave <xref:System.String>e um <xref:System.Type>.</xref:System.Type> </xref:System.String> Scripts com a mesma chave e tipo são considerados os duplicados. Utilizando o tipo de script ajuda a evitar que scripts semelhantes confusas controlos de utilizador diferentes que podem ser utilizados na página.       A classe de ClientScriptManager pode ser utilizada para invocar chamadas de retorno de cliente em situações quando é necessário para executar código do servidor do cliente sem efetuar uma nova colocação. Isto é referido como efetuar uma chamada de retorno de fora de banda para o servidor. Numa chamada de retorno do cliente, uma função de script do cliente envia um pedido assíncrono para uma página ASP.NET Web. A página Web é executada uma versão modificada do respetivo ciclo de vida normal para processar a chamada de retorno. Utilize o <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>método para obter uma referência a uma função de cliente que, quando foi invocado, inicia uma chamada de retorno de cliente para um evento de servidor.</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Para obter mais informações, consulte [implementar cliente chamadas de retorno sem novas colocações](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Chamadas de retorno do script não funcionará em caso de browsers antigos que não suportam o documento Object Model (DOM) e necessitam que ECMAScript está ativado no cliente. Para verificar se o browser suporta chamadas de retorno, utilize o <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A>propriedade, o que é acessível através de <xref:System.Web.HttpRequest.Browser%2A>propriedade do ASP.NET intrínseco <xref:System.Web.HttpContext.Request%2A>objeto.</xref:System.Web.HttpContext.Request%2A> </xref:System.Web.HttpRequest.Browser%2A> </xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A>       Utilize o <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>método e o <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A>método para definir um evento de nova colocação do cliente.</xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Estes métodos de ativar as funções de script de cliente, quando foi invocado, para fazer com que o servidor após regressar à página. Um evento de nova colocação do cliente é diferente de uma chamada de retorno do cliente em que a página Web concluir um ciclo de vida normal para processar o evento de nova colocação do cliente.      > [!NOTE] > Se estiver a utilizar um <xref:System.Web.UI.WebControls.Button>controlo e o <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>propriedade está definida como `false`, em seguida, pode utilizar o <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>método para devolver o cliente voltar a colocar eventos para o <xref:System.Web.UI.WebControls.Button>controlo.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> </xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> </xref:System.Web.UI.WebControls.Button>       O <xref:System.Web.UI.WebControls.Button.OnClientClick%2A>propriedade o <xref:System.Web.UI.WebControls.Button>controlo, <xref:System.Web.UI.WebControls.ImageButton>controlo, e <xref:System.Web.UI.WebControls.LinkButton>controlo pode ser utilizado para executar o cliente script</xref:System.Web.UI.WebControls.LinkButton> </xref:System.Web.UI.WebControls.ImageButton> </xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button.OnClientClick%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the ClientScriptManager class. Two client scripts are defined in the page: `PopupScript`, which displays an alert message when the page is loaded, and `ButtonClickScript`, which defines a client handler for an HTML button's `onClick` event.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager1#1](~/add/codesnippet/csharp/t-system.web.ui.clientsc_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager1#1](~/add/codesnippet/visualbasic/t-system.web.ui.clientsc_1.aspx)]"
  syntax:
    content: public sealed class ClientScriptManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)
  id: GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetCallbackEventReference(Control,String,String,String)
  nameWithType: ClientScriptManager.GetCallbackEventReference(Control,String,String,String)
  fullName: System.Web.UI.ClientScriptManager.GetCallbackEventReference(Control,String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém uma referência a uma função de cliente que, quando foi invocado, inicia um cliente a chamada anterior para um evento de servidor. A função de cliente para que este método sobrecarregado inclui um controlo especificado, o argumento, o script de cliente e o contexto."
  remarks: "O método GetCallbackEventReference efetua uma chamada de retorno de fora de banda para o servidor que é uma versão modificada do ciclo de vida normal da página. Para obter mais informações, consulte [implementar cliente chamadas de retorno sem novas colocações](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Quando o browser Microsoft Internet Explorer (versão 5.0 ou posterior), o mecanismo de chamada de retorno de script é implementado através do objeto Microsoft.XmlHttp COM e requer o browser para ser definido como executar controlos ActiveX. Para outros browsers, é utilizado um XMLHttpRequest utilizando o browser local documento Object Model (DOM). Para verificar se o browser suporta chamadas de retorno do cliente, utilize o <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A>propriedade.</xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> Para verificar se o browser suporta XML através de HTTP, utilize o <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp%2A>propriedade.</xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp%2A> Ambas as propriedades estão acessíveis através de <xref:System.Web.HttpRequest.Browser%2A>propriedade do ASP.NET intrínseco <xref:System.Web.HttpContext.Request%2A>objeto.</xref:System.Web.HttpContext.Request%2A> </xref:System.Web.HttpRequest.Browser%2A>       A sobrecarga de GetCallbackEventReference do <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>método efetua uma chamada de retorno de forma síncrona utilizando XML através de HTTP.</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Ao enviar dados de forma síncrona num cenário de chamada de retorno, chamadas de retorno síncronas devolvem imediatamente e não bloqueiam o browser. Nenhuma chamada de retorno de chamadas de retorno síncrona dois pode ser executados em simultâneo no browser. Se uma segunda chamada de retorno síncrona é desencadeada enquanto uma está pendente atualmente, a segunda chamada de retorno síncrona cancela o primeiro e apenas a chamada de retorno segundo irá devolver.       Para enviar dados de forma assíncrona, utilize uma das sobrecargas que demora a `useAsync` parâmetro, que é um valor boleano valor controla este comportamento. No cenário assíncrono pode ter várias chamadas de retorno pendentes; No entanto, a ordem na qual devolver não é assegurada para corresponder à ordem na qual foram iniciadas.       Além disso, esta sobrecarga do <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>método não especifica nenhuma função de cliente para processar o caso de uma condição de erro gerado pelo <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>método.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> </xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Para especificar um processador de chamada de retorno de erro do cliente, utilize uma das sobrecargas que demora a `clientErrorCallback` parâmetro.       O método de GetCallbackEventReference assume uma cadeia opcional `argument` parâmetro e devolve uma cadeia. Para passar ou para receber vários valores, concatenar valores na entrada ou devolver cadeia, respetivamente.      > [!NOTE] > Evite utilizar o estado de visualização na implementação de propriedades de página ou controlo que tem de ser atualizadas durante operações de chamada de retorno de script. Se as propriedades são sobreviver pedidos de página, pode utilizar o estado da sessão."
  example:
  - "The following code example demonstrates how to use two overloads of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method in a client callback scenario that increments integers.  \n  \n Two callback mechanisms are shown; the difference between them is the use of the `context` parameter. A `ReceiveServerData1` client callback function is provided using the `context` parameter. In contrast, the `ReceiveServerData2` client callback function is defined in a `<script>` block on the page. A <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method is the server handler that increments the value that is passed to it and the <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> method returns the incremented value as a string. If the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method returns an error, then the `ProcessCallBackError` client function is called.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager7#1](~/add/codesnippet/csharp/0153bfa5-9a40-4257-b817-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager7#1](~/add/codesnippet/visualbasic/0153bfa5-9a40-4257-b817-_1.aspx)]"
  syntax:
    content: public string GetCallbackEventReference (System.Web.UI.Control control, string argument, string clientCallback, string context);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "O servidor <xref href=&quot;System.Web.UI.Control&quot;> </xref> que processa a chamada de retorno do cliente. O controlo tem de implementar o <xref href=&quot;System.Web.UI.ICallbackEventHandler&quot;> </xref> interface e fornecer um <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>método.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>"
    - id: argument
      type: System.String
      description: "Um argumento transmitido a partir do script de cliente para o servidor <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>método.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>"
    - id: clientCallback
      type: System.String
      description: "O nome do processador de eventos de cliente que recebe o resultado do evento de servidor com êxito."
    - id: context
      type: System.String
      description: "O script de cliente que é avaliado no cliente antes de iniciar a chamada de retorno. O resultado do script é reenviado para o processador de eventos de cliente."
    return:
      type: System.String
      description: "O nome de uma função de cliente invoca a chamada de retorno do cliente."
  overload: System.Web.UI.ClientScriptManager.GetCallbackEventReference*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <xref href=&quot;System.Web.UI.Control&quot;></xref> specified is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <xref href=&quot;System.Web.UI.Control&quot;> </xref> especificado não implementa o <xref href=&quot;System.Web.UI.ICallbackEventHandler&quot;> </xref> interface."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)
  id: GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetCallbackEventReference(Control,String,String,String,Boolean)
  nameWithType: ClientScriptManager.GetCallbackEventReference(Control,String,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetCallbackEventReference(Control,String,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém uma referência a uma função de cliente que, quando foi invocado, inicia um cliente a chamada anterior para eventos de servidor. A função de cliente para que este método sobrecarregado inclui um controlo especificado, argumento, o script de cliente, contexto e valor booleano."
  remarks: "Esta sobrecarga do <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>método requer uma `useAsync` parâmetro, que permite efetuar a chamada de retorno do cliente no modo assíncrono, definindo o valor como `true`.</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> As versões de sobrecarga deste método que não requerem o `useAsync` parâmetro defina o valor como `false` por predefinição.       Para obter mais informações sobre este método, consulte os comentários para a sobrecarga <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>método.</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>"
  syntax:
    content: public string GetCallbackEventReference (System.Web.UI.Control control, string argument, string clientCallback, string context, bool useAsync);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "O servidor <xref href=&quot;System.Web.UI.Control&quot;> </xref> que processa a chamada de retorno do cliente. O controlo tem de implementar o <xref href=&quot;System.Web.UI.ICallbackEventHandler&quot;> </xref> interface e fornecer um <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>método.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>"
    - id: argument
      type: System.String
      description: "Um argumento transmitido a partir do script de cliente para o servidor <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>método.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>"
    - id: clientCallback
      type: System.String
      description: "O nome do processador de eventos de cliente que recebe o resultado do evento de servidor com êxito."
    - id: context
      type: System.String
      description: "O script de cliente que é avaliado no cliente antes de iniciar a chamada de retorno. O resultado do script é reenviado para o processador de eventos de cliente."
    - id: useAsync
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para efetuar a chamada de retorno assíncrona; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para efetuar a chamada de retorno de forma síncrona."
    return:
      type: System.String
      description: "O nome de uma função de cliente invoca a chamada de retorno do cliente."
  overload: System.Web.UI.ClientScriptManager.GetCallbackEventReference*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <xref href=&quot;System.Web.UI.Control&quot;></xref> specified is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <xref href=&quot;System.Web.UI.Control&quot;> </xref> especificado não implementa o <xref href=&quot;System.Web.UI.ICallbackEventHandler&quot;> </xref> interface."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)
  id: GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetCallbackEventReference(String,String,String,String,String,Boolean)
  nameWithType: ClientScriptManager.GetCallbackEventReference(String,String,String,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetCallbackEventReference(String,String,String,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém uma referência a uma função de cliente que, quando foi invocado, inicia um cliente a chamada anterior para eventos de servidor. A função de cliente para que este método sobrecarregado inclui um destino especificado, argumento, o script de cliente, contexto, processador de erros e valor booleano."
  remarks: "Esta sobrecarga do <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>método um `target` cadeia parâmetro em vez de um <xref:System.Web.UI.Control>parâmetro.</xref:System.Web.UI.Control> </xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Utilize esta sobrecarga quando pretender que a chamada de retorno para regressar ao algo diferente de uma cadeia que contém o <xref:System.Web.UI.Control.UniqueID%2A>do controlo.</xref:System.Web.UI.Control.UniqueID%2A>       Além disso, esta sobrecarga do <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>método requer uma `useAsync` e um `clientErrorCallback` parâmetro.</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> O `useAsync` parâmetro permite-lhe efetuar a chamada de retorno do cliente no modo assíncrono, definindo o valor como `true`. As versões de sobrecarga deste método que não requerem o `useAsync` parâmetro defina o valor como `false` por predefinição. O `clientErrorCallback` parâmetro permite-lhe definir o nome da função de cliente que é chamada se o processador do servidor, o <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>método devolve um erro.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> As versões de sobrecarga deste método que não requerem o `clientErrorCallback` parâmetro defina o valor nulo.       Para obter mais informações sobre este método, consulte os comentários para a sobrecarga <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>método.</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>"
  example:
  - "The following code example demonstrates how to use two overloads of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method in a client callback scenario that increments integers.  \n  \n Two callback mechanisms are shown; the difference between them is the use of the `context` parameter. A `ReceiveServerData1` client callback function is provided using the `context` parameter. In contrast, the `ReceiveServerData2` client callback function is defined in a `<script>` block on the page. A <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method is the server handler that increments the value that is passed to it and the <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> method returns the incremented value as a string. If the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method returns an error, then the client function `ProcessCallBackError` is called.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager7#1](~/add/codesnippet/csharp/b09113ee-01c3-4887-82a1-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager7#1](~/add/codesnippet/visualbasic/b09113ee-01c3-4887-82a1-_1.aspx)]"
  syntax:
    content: public string GetCallbackEventReference (string target, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync);
    parameters:
    - id: target
      type: System.String
      description: "O nome de um servidor <xref href=&quot;System.Web.UI.Control&quot;> </xref> que processa a chamada de retorno do cliente. O controlo tem de implementar o <xref href=&quot;System.Web.UI.ICallbackEventHandler&quot;> </xref> interface e fornecer um <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>método.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>"
    - id: argument
      type: System.String
      description: "Um argumento transmitido a partir do script de cliente para o servidor <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>método.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>"
    - id: clientCallback
      type: System.String
      description: "O nome do processador de eventos de cliente que recebe o resultado do evento de servidor com êxito."
    - id: context
      type: System.String
      description: "O script de cliente que é avaliado no cliente antes de iniciar a chamada de retorno. O resultado do script é reenviado para o processador de eventos de cliente."
    - id: clientErrorCallback
      type: System.String
      description: "O nome do processador de eventos de cliente que recebe o resultado quando ocorre um erro de processador de eventos do servidor."
    - id: useAsync
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true &quot; name=&quot;true &quot; href=&quot;&quot;></xref>para efetuar a chamada de retorno assíncrona; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para efetuar a chamada de retorno de forma síncrona."
    return:
      type: System.String
      description: "O nome de uma função de cliente invoca a chamada de retorno do cliente."
  overload: System.Web.UI.ClientScriptManager.GetCallbackEventReference*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)
  id: GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetCallbackEventReference(Control,String,String,String,String,Boolean)
  nameWithType: ClientScriptManager.GetCallbackEventReference(Control,String,String,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetCallbackEventReference(Control,String,String,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém uma referência a uma função de cliente que, quando foi invocado, inicia um cliente a chamada anterior para eventos de servidor. A função de cliente para que este método sobrecarregado inclui um controlo especificado, argumento, o script de cliente, contexto, processador de erros e valor booleano."
  remarks: "Esta sobrecarga do <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>método requer uma `useAsync` e um `clientErrorCallback` parâmetro.</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> O `useAsync` parâmetro permite-lhe efetuar a chamada de retorno do cliente no modo assíncrono, definindo o valor como `true`. As versões de sobrecarga deste método que não requerem o `useAsync` parâmetro defina o valor como `false` por predefinição. O `clientErrorCallback` parâmetro permite-lhe definir o nome da função de cliente que é chamada se o processador do servidor (o <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>método) devolve um erro.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> As versões de sobrecarga deste método que não requerem o `clientErrorCallback` parâmetro defina o valor nulo.       Para obter mais informações sobre este método, consulte os comentários para a sobrecarga <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>método.</xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>"
  syntax:
    content: public string GetCallbackEventReference (System.Web.UI.Control control, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "O servidor <xref href=&quot;System.Web.UI.Control&quot;> </xref> que processa a chamada de retorno do cliente. O controlo tem de implementar o <xref href=&quot;System.Web.UI.ICallbackEventHandler&quot;> </xref> interface e fornecer um <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>método.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>"
    - id: argument
      type: System.String
      description: "Um argumento transmitido a partir do script de cliente para o servidor <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>método.</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*>"
    - id: clientCallback
      type: System.String
      description: "O nome do processador de eventos de cliente que recebe o resultado do evento de servidor com êxito."
    - id: context
      type: System.String
      description: "O script de cliente que é avaliado no cliente antes de iniciar a chamada de retorno. O resultado do script é reenviado para o processador de eventos de cliente."
    - id: clientErrorCallback
      type: System.String
      description: "O nome do processador de eventos de cliente que recebe o resultado quando ocorre um erro de processador de eventos do servidor."
    - id: useAsync
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true &quot; name=&quot;true &quot; href=&quot;&quot;></xref>para efetuar a chamada de retorno assíncrona; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para efetuar a chamada de retorno de forma síncrona."
    return:
      type: System.String
      description: "O nome de uma função de cliente invoca a chamada de retorno do cliente."
  overload: System.Web.UI.ClientScriptManager.GetCallbackEventReference*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <xref href=&quot;System.Web.UI.Control&quot;></xref> specified is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <xref href=&quot;System.Web.UI.Control&quot;> </xref> especificado não implementa o <xref href=&quot;System.Web.UI.ICallbackEventHandler&quot;> </xref> interface."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)
  id: GetPostBackClientHyperlink(System.Web.UI.Control,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetPostBackClientHyperlink(Control,String)
  nameWithType: ClientScriptManager.GetPostBackClientHyperlink(Control,String)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(Control,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém uma referência, com <xref uid=&quot;langword_csharp_javascript:&quot; name=&quot;javascript:&quot; href=&quot;&quot;> </xref> anexado ao início do mesmo, que pode ser utilizado um evento de cliente para publicar novamente para o servidor para o controlo especificado e com os argumentos de evento especificado."
  remarks: "Utilizar o <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>método requer que o controlo que processa a nova colocação para implementar o <xref:System.Web.UI.IPostBackEventHandler>interface.</xref:System.Web.UI.IPostBackEventHandler> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Para implementar o <xref:System.Web.UI.IPostBackEventHandler>interface para um <xref:System.Web.UI.Page>, utilize a diretiva.</xref:System.Web.UI.Page> </xref:System.Web.UI.IPostBackEventHandler>"
  example:
  - "The following code example demonstrates the use of the GetPostBackClientHyperlink method. The custom control, `MyControl`, implements the <xref:System.Web.UI.IPostBackEventHandler> interface. When the HTML anchor element on the page is clicked, the <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> method of the custom control is invoked.  \n  \n [!code-vb[System.Web.UI.ClientScriptManager8#1](~/add/codesnippet/visualbasic/366d34c0-2826-48a7-a56d-_1.aspx)]\n [!code-cs[System.Web.UI.ClientScriptManager8#1](~/add/codesnippet/csharp/366d34c0-2826-48a7-a56d-_1.aspx)]  \n  \n The following code example has the same functionality as the preceding one, except that instead of a custom control, the <xref:System.Web.UI.Page> class implements the <xref:System.Web.UI.IPostBackEventHandler> interface.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager8#2](~/add/codesnippet/csharp/366d34c0-2826-48a7-a56d-_2.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager8#2](~/add/codesnippet/visualbasic/366d34c0-2826-48a7-a56d-_2.aspx)]"
  syntax:
    content: public string GetPostBackClientHyperlink (System.Web.UI.Control control, string argument);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "O controlo de servidor para processar a nova colocação."
    - id: argument
      type: System.String
      description: "O parâmetro transmitido para o controlo de servidor."
    return:
      type: System.String
      description: "Uma cadeia que representa uma chamada de JavaScript para a função originem que inclui os argumentos de ID e eventos de controlo de destino."
  overload: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)
  id: GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetPostBackClientHyperlink(Control,String,Boolean)
  nameWithType: ClientScriptManager.GetPostBackClientHyperlink(Control,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(Control,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém uma referência, com <xref uid=&quot;langword_csharp_javascript:&quot; name=&quot;javascript:&quot; href=&quot;&quot;> </xref> anexado ao início do mesmo, que pode ser utilizado um evento de cliente para publicar novamente para o servidor para especificado controla com os argumentos de evento especificado e uma indicação booleana se pretende registar a mensagem para a validação de eventos."
  remarks: "Utilizar o <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>método requer que o controlo que processa a nova colocação para implementar o <xref:System.Web.UI.IPostBackEventHandler>interface.</xref:System.Web.UI.IPostBackEventHandler> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Para implementar o <xref:System.Web.UI.IPostBackEventHandler>interface para um <xref:System.Web.UI.Page>, utilize a diretiva.</xref:System.Web.UI.Page> </xref:System.Web.UI.IPostBackEventHandler>"
  syntax:
    content: public string GetPostBackClientHyperlink (System.Web.UI.Control control, string argument, bool registerForEventValidation);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "O controlo de servidor para processar a nova colocação."
    - id: argument
      type: System.String
      description: "O parâmetro transmitido para o controlo de servidor."
    - id: registerForEventValidation
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para registar o evento de nova colocação para validação; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> não registar o evento de back-post para a validação."
    return:
      type: System.String
      description: "Uma cadeia que representa uma chamada de JavaScript para a função originem que inclui os argumentos de ID e eventos de controlo de destino."
  overload: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions)
  id: GetPostBackEventReference(System.Web.UI.PostBackOptions)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetPostBackEventReference(PostBackOptions)
  nameWithType: ClientScriptManager.GetPostBackEventReference(PostBackOptions)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackEventReference(PostBackOptions)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Devolve uma cadeia que pode ser utilizada um evento de cliente para fazer com que a nova colocação para o servidor. A cadeia de referência está definida por especificado <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref> instância."
  remarks: "Para implementar o <xref:System.Web.UI.IPostBackEventHandler>interface para um <xref:System.Web.UI.Page>, utilize a diretiva.</xref:System.Web.UI.Page> </xref:System.Web.UI.IPostBackEventHandler>       O <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>método pode ser utilizado com o <xref:System.Web.UI.WebControls.Button>controlar quando o <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>propriedade é `false`.</xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> </xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Neste cenário, o <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>devolve método, o cliente voltar a colocar eventos para o <xref:System.Web.UI.WebControls.Button>controlo.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>"
  syntax:
    content: public string GetPostBackEventReference (System.Web.UI.PostBackOptions options);
    parameters:
    - id: options
      type: System.Web.UI.PostBackOptions
      description: "A <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref> que define a nova colocação."
    return:
      type: System.String
      description: "A cadeia que, quando tratado como script no cliente, inicia o cliente voltar a colocar."
  overload: System.Web.UI.ClientScriptManager.GetPostBackEventReference*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref> é o parâmetro<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)
  id: GetPostBackEventReference(System.Web.UI.Control,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetPostBackEventReference(Control,String)
  nameWithType: ClientScriptManager.GetPostBackEventReference(Control,String)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackEventReference(Control,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Devolve uma cadeia que pode ser utilizada um evento de cliente para fazer com que a nova colocação para o servidor. A cadeia de referência está definida pelo controlo especificado que processa a nova colocação e um argumento de cadeia de informações sobre eventos adicionais."
  remarks: "Para implementar o <xref:System.Web.UI.IPostBackEventHandler>interface para um <xref:System.Web.UI.Page>, utilize a diretiva.</xref:System.Web.UI.Page> </xref:System.Web.UI.IPostBackEventHandler>       O <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>método pode ser utilizado com o <xref:System.Web.UI.WebControls.Button>controlar quando o <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>propriedade é `false`.</xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> </xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Neste cenário, o <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>devolve método, o cliente voltar a colocar eventos para o <xref:System.Web.UI.WebControls.Button>controlo.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>"
  example:
  - "The following code example demonstrates the use of the GetPostBackEventReference method. The custom control, `MyControl`, implements the <xref:System.Web.UI.IPostBackEventHandler> interface. When the button on the page is clicked, the <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> method of the custom control is invoked.  \n  \n [!code-vb[System.Web.UI.ClientScriptManager8#1](~/add/codesnippet/visualbasic/13f44f5d-33c0-40e6-bb2f-_1.aspx)]\n [!code-cs[System.Web.UI.ClientScriptManager8#1](~/add/codesnippet/csharp/13f44f5d-33c0-40e6-bb2f-_1.aspx)]  \n  \n The following code example has the same functionality as the preceding one, except that instead of a custom control, the <xref:System.Web.UI.Page> class implements the <xref:System.Web.UI.IPostBackEventHandler> interface.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager8#2](~/add/codesnippet/csharp/13f44f5d-33c0-40e6-bb2f-_2.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager8#2](~/add/codesnippet/visualbasic/13f44f5d-33c0-40e6-bb2f-_2.aspx)]"
  syntax:
    content: public string GetPostBackEventReference (System.Web.UI.Control control, string argument);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "O servidor <xref href=&quot;System.Web.UI.Control&quot;> </xref> que processa a nova colocação no servidor."
    - id: argument
      type: System.String
      description: "Uma cadeia de argumentos opcionais para passar para o controlo que processa a nova colocação."
    return:
      type: System.String
      description: "A cadeia que, quando tratado como o script do cliente, inicia a nova colocação."
  overload: System.Web.UI.ClientScriptManager.GetPostBackEventReference*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The specified <xref href=&quot;System.Web.UI.Control&quot;></xref> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)
  id: GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetPostBackEventReference(PostBackOptions,Boolean)
  nameWithType: ClientScriptManager.GetPostBackEventReference(PostBackOptions,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackEventReference(PostBackOptions,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Devolve uma cadeia que pode ser utilizada um evento de cliente para fazer com que a nova colocação para o servidor. A cadeia de referência está definida por especificado <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref> objeto. Opcionalmente, regista a referência de evento para a validação."
  remarks: "Para implementar o <xref:System.Web.UI.IPostBackEventHandler>interface para um <xref:System.Web.UI.Page>objeto, utilize a diretiva.</xref:System.Web.UI.Page> </xref:System.Web.UI.IPostBackEventHandler>       O <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>método pode ser utilizado com o <xref:System.Web.UI.WebControls.Button>controlar quando o <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>propriedade é `false`.</xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> </xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Neste cenário, o <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>devolve método, o cliente voltar a colocar eventos para o <xref:System.Web.UI.WebControls.Button>controlo.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>       Se `registerForEventValidation` é `true`, as chamadas de método GetPostBackEventReference o <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29>método para registar a referência de eventos para validação com um ID de controlo exclusivo que representa o controlo de cliente que está a gerar o evento.</xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29>"
  syntax:
    content: public string GetPostBackEventReference (System.Web.UI.PostBackOptions options, bool registerForEventValidation);
    parameters:
    - id: options
      type: System.Web.UI.PostBackOptions
      description: "A <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref> que define a nova colocação."
    - id: registerForEventValidation
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para registar a referência de eventos para validação; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String
      description: "A cadeia que, quando tratado como script no cliente, inicia o cliente voltar a colocar."
  overload: System.Web.UI.ClientScriptManager.GetPostBackEventReference*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <xref href=&quot;System.Web.UI.PostBackOptions&quot;></xref> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)
  id: GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetPostBackEventReference(Control,String,Boolean)
  nameWithType: ClientScriptManager.GetPostBackEventReference(Control,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackEventReference(Control,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Devolve uma cadeia para utilizar um evento de cliente para fazer com que a nova colocação para o servidor. A cadeia de referência está definida pelo controlo especificado que processa a nova colocação e um argumento de cadeia de informações sobre eventos adicionais. Opcionalmente, regista a referência de evento para a validação."
  remarks: "Para implementar o <xref:System.Web.UI.IPostBackEventHandler>interface para um <xref:System.Web.UI.Page>, utilize a diretiva.</xref:System.Web.UI.Page> </xref:System.Web.UI.IPostBackEventHandler>       O <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>método pode ser utilizado com o <xref:System.Web.UI.WebControls.Button>controlar quando o <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>propriedade é `false`.</xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> </xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Neste cenário, o <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>devolve método, o cliente voltar a colocar eventos para o <xref:System.Web.UI.WebControls.Button>controlo.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>       Se `registerForEventValidation` for VERDADEIRO, o <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29>chamadas de método de <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29>método para registar a referência de eventos para validação com um ID de controlo exclusivo que representa o controlo de cliente que está a gerar o evento.</xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29>"
  syntax:
    content: public string GetPostBackEventReference (System.Web.UI.Control control, string argument, bool registerForEventValidation);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "O servidor <xref href=&quot;System.Web.UI.Control&quot;> </xref> que processa a nova colocação no servidor."
    - id: argument
      type: System.String
      description: "Uma cadeia de argumentos opcionais para passar para `control`."
    - id: registerForEventValidation
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para registar a referência de eventos para validação; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String
      description: "A cadeia que, quando tratado como o script do cliente, inicia a nova colocação."
  overload: System.Web.UI.ClientScriptManager.GetPostBackEventReference*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The specified <xref href=&quot;System.Web.UI.Control&quot;></xref> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)
  id: GetWebResourceUrl(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: GetWebResourceUrl(Type,String)
  nameWithType: ClientScriptManager.GetWebResourceUrl(Type,String)
  fullName: System.Web.UI.ClientScriptManager.GetWebResourceUrl(Type,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém uma referência de URL para um recurso numa assemblagem."
  remarks: "O método de GetWebResourceUrl devolve uma referência de URL para um recurso incorporado numa assemblagem. A referência devolvida não é codificado. Recursos podem ser ficheiros de script, imagens ou qualquer ficheiro estático. Especifique o tipo com base no objeto que será possível aceder ao recurso.       Um recurso Web registado com a página é identificado de forma exclusiva pelo respetivo tipo e nome. Apenas um recurso com um tipo indicado e um par nome / pode ser registado com a página. Tentativa de registar um recurso que já está registado não cria um duplicado do recurso registado.       O método GetWebResourceUrl é utilizado em conjunto com o <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A>método para aceder a recursos incorporados em assemblagens.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> Para obter mais informações sobre a utilização de recursos em aplicações, consulte [descrição geral de recursos de página Web ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates the use of the GetWebResourceUrl method. The *type* parameter in this example is set to the type of class in the assembly containing the resource. The `resourceName` parameter is specified with the fully qualified path to the resource, which includes the default namespace.  \n  \n [!code-vb[System.Web.UI.ClientScriptManager4#1](~/add/codesnippet/visualbasic/m-system.web.ui.clientsc_2_1.aspx)]\n [!code-cs[System.Web.UI.ClientScriptManager4#1](~/add/codesnippet/csharp/m-system.web.ui.clientsc_2_1.aspx)]  \n  \n The following code example demonstrates how to programmatically apply the <xref:System.Web.UI.WebResourceAttribute> metadata attribute to mark the assembly for the resources that will be served. Compile the following class in a class library with a default namespace set to `Samples.AspNet.CS.Controls` or `Samples.AspNet.VB.Controls`, depending on what language you are using.  \n  \n [!code-vb[System.Web.UI.ClientScriptManager4#2](~/add/codesnippet/visualbasic/m-system.web.ui.clientsc_2_2.vb)]\n [!code-cs[System.Web.UI.ClientScriptManager4#2](~/add/codesnippet/csharp/m-system.web.ui.clientsc_2_2.cs)]  \n  \n This example requires a JavaScript file named `Script_include.js`. The .js file is an embedded resource in the assembly that contains the `ClientScriptResourceLabel` object. If you are using [!INCLUDE[vs_current_short](~/add/includes/ajax-current-ext-md.md)], in the Properties window of the class library project, set **Build Action** to **Embedded Resource** when the script file is selected. If you are compiling the library at the command line, use the  switch to embed the resource.  \n  \n```  \nfunction DoClick() {Form1.Message.value='Text from resource script.'}  \n```"
  syntax:
    content: public string GetWebResourceUrl (Type type, string resourceName);
    parameters:
    - id: type
      type: System.Type
      description: "O tipo de recurso."
    - id: resourceName
      type: System.String
      description: "O nome completamente qualificado do recurso na assemblagem."
    return:
      type: System.String
      description: "A referência de URL para o recurso."
  overload: System.Web.UI.ClientScriptManager.GetWebResourceUrl*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The web resource name is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The web resource name has a length of zero."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)
  id: IsClientScriptBlockRegistered(System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: IsClientScriptBlockRegistered(String)
  nameWithType: ClientScriptManager.IsClientScriptBlockRegistered(String)
  fullName: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Determina se o bloco de script de cliente está registado com o <xref href=&quot;System.Web.UI.Page&quot;> </xref> objeto utilizando a chave especificada."
  remarks: "Chamar este método antes de chamar o <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>método para impedir a registar scripts duplicados.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Isto é especialmente importante se o script requer uma grande quantidade de recursos do servidor para criar.       Um script de cliente é identificado de forma exclusiva pela respetiva chave e o respetivo tipo. Scripts com a mesma chave e tipo são considerados os duplicados.       Esta sobrecarga do <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A>chama o método a sobrecarga que recebe ambos um `key` e um `type` parâmetro com o tipo definido como um <xref:System.Web.UI.Page>objeto</xref:System.Web.UI.Page> </xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A>"
  example:
  - >-
    [!code-cs[System.Web.UI.ClientScriptManager1#2](~/add/codesnippet/csharp/m-system.web.ui.clientsc_0_1.aspx)]
     [!code-vb[System.Web.UI.ClientScriptManager1#2](~/add/codesnippet/visualbasic/m-system.web.ui.clientsc_0_1.aspx)]
  syntax:
    content: public bool IsClientScriptBlockRegistered (string key);
    parameters:
    - id: key
      type: System.String
      description: "A chave do bloco de script de cliente para procurar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o bloco de script de cliente está registado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)
  id: IsClientScriptBlockRegistered(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: IsClientScriptBlockRegistered(Type,String)
  nameWithType: ClientScriptManager.IsClientScriptBlockRegistered(Type,String)
  fullName: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(Type,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Determina se o bloco de script de cliente está registado com o <xref href=&quot;System.Web.UI.Page&quot;> </xref> utilizando uma chave e o tipo de objeto."
  remarks: "Chamar este método antes de chamar o <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>método para impedir a registar scripts duplicados.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Isto é especialmente importante se o script requer uma grande quantidade de recursos do servidor para criar.       Um script de cliente é identificado de forma exclusiva pela respetiva chave e o respetivo tipo. Scripts com a mesma chave e tipo são considerados os duplicados. Especifique o tipo com base no objeto que será possível aceder ao recurso. Por exemplo, quando utilizar um `Page` instância para aceder ao recurso, especificar o `Page` tipo."
  example:
  - "The following code example demonstrates the use of the IsClientScriptBlockRegistered method. Note that, if the logic to check for the existing client script block were removed, there would not be two duplicate client scripts in the HTML source code of the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method checks for duplicates. The benefit of checking is to reduce unnecessary computation.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager1#1](~/add/codesnippet/csharp/b20ef5ac-aa44-4132-8ad3-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager1#1](~/add/codesnippet/visualbasic/b20ef5ac-aa44-4132-8ad3-_1.aspx)]"
  syntax:
    content: public bool IsClientScriptBlockRegistered (Type type, string key);
    parameters:
    - id: type
      type: System.Type
      description: "O tipo de bloco de script de cliente para procurar."
    - id: key
      type: System.String
      description: "A chave do bloco de script de cliente para procurar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o bloco de script de cliente está registado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O tipo de script de cliente é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)
  id: IsClientScriptIncludeRegistered(System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: IsClientScriptIncludeRegistered(String)
  nameWithType: ClientScriptManager.IsClientScriptIncludeRegistered(String)
  fullName: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Determina se o script de cliente incluem está registado com o <xref href=&quot;System.Web.UI.Page&quot;> </xref> objeto utilizando a chave especificada."
  remarks: "Chamar este método antes de chamar o <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>método para impedir a registar scripts duplicados.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> Isto é especialmente importante se o script requer uma grande quantidade de recursos do servidor para criar.       Incluir um script de cliente é identificado de forma exclusiva pela respetiva chave e o respetivo tipo. Scripts com a mesma chave e tipo são considerados os duplicados.       Esta sobrecarga do <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>chama o método a sobrecarga que recebe ambos um `key` e um `type` parâmetro com o tipo definido como um <xref:System.Web.UI.Page>objeto.</xref:System.Web.UI.Page> </xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>"
  syntax:
    content: public bool IsClientScriptIncludeRegistered (string key);
    parameters:
    - id: key
      type: System.String
      description: "A chave do script de cliente incluem a pesquisar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o script de cliente incluem está registado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)
  id: IsClientScriptIncludeRegistered(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: IsClientScriptIncludeRegistered(Type,String)
  nameWithType: ClientScriptManager.IsClientScriptIncludeRegistered(Type,String)
  fullName: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(Type,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Determina se o script de cliente incluem está registado com o <xref href=&quot;System.Web.UI.Page&quot;> </xref> utilizando uma chave e o tipo de objeto."
  remarks: "Chamar este método antes de chamar o <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>inclui de método para impedir a registar o script de cliente duplicado.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> Isto é especialmente importante se o script requer uma grande quantidade de recursos do servidor para criar.       Incluir um script de cliente é identificado de forma exclusiva pela respetiva chave e o respetivo tipo. Scripts com a mesma chave e tipo são considerados os duplicados. Especifique o tipo com base no objeto que será possível aceder ao recurso. Por exemplo, quando utilizar uma instância de página para aceder ao recurso, especifique o `Page` tipo."
  example:
  - "The following code example demonstrates the use of the IsClientScriptIncludeRegistered method. Note that, if the logic to check for the existing client script include were removed, there would not be two duplicate client scripts in the HTML source code of the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method checks for duplicates. The benefit of checking is to reduce unnecessary computation.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager2#1](~/add/codesnippet/csharp/1a97f23b-4196-4af6-89d9-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager2#1](~/add/codesnippet/visualbasic/1a97f23b-4196-4af6-89d9-_1.aspx)]  \n  \n This example requires a JavaScript file named `Script_include.js`, with the following contents:  \n  \n```  \nfunction DoClick() {Form1.Message.value='Text from include script.'}  \n```"
  syntax:
    content: public bool IsClientScriptIncludeRegistered (Type type, string key);
    parameters:
    - id: type
      type: System.Type
      description: "O tipo de script de cliente incluem a pesquisar."
    - id: key
      type: System.String
      description: "A chave do script de cliente incluem a pesquisar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o script de cliente incluem está registado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O script do cliente inclui um tipo é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)
  id: IsOnSubmitStatementRegistered(System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: IsOnSubmitStatementRegistered(String)
  nameWithType: ClientScriptManager.IsOnSubmitStatementRegistered(String)
  fullName: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Determina se a instrução OnSubmit está registada com o <xref href=&quot;System.Web.UI.Page&quot;> </xref> objeto utilizando a chave especificada."
  remarks: "Chamar este método antes de chamar o <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A>método para impedir a registar as instruções OnSubmit duplicadas.</xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> Isto é especialmente importante se necessita de uma grande quantidade de recursos do servidor para criar.       Uma instrução é identificada de forma exclusiva pela respetiva chave e o respetivo tipo. Instruções com a mesma chave e tipo são consideradas os duplicados.       Esta sobrecarga do <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A>chama o método a sobrecarga que recebe ambos um `key` e um `type` parâmetro com o tipo definido como um <xref:System.Web.UI.Page>objeto</xref:System.Web.UI.Page> </xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A>"
  syntax:
    content: public bool IsOnSubmitStatementRegistered (string key);
    parameters:
    - id: key
      type: System.String
      description: "A chave da instrução OnSubmit para procurar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a instrução OnSubmit estiver registada; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)
  id: IsOnSubmitStatementRegistered(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: IsOnSubmitStatementRegistered(Type,String)
  nameWithType: ClientScriptManager.IsOnSubmitStatementRegistered(Type,String)
  fullName: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(Type,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Determina se a instrução OnSubmit está registada com o <xref href=&quot;System.Web.UI.Page&quot;> </xref> com o nome da chave e o tipo de objeto."
  remarks: "Chamar este método antes de chamar o <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A>método para impedir a registar instruções duplicadas.</xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> Isto é especialmente importante se necessita de uma grande quantidade de recursos do servidor para criar.       Uma instrução é identificada de forma exclusiva pela respetiva chave e o respetivo tipo. Instruções com a mesma chave e tipo são consideradas os duplicados. Especifique o tipo com base no objeto que será possível aceder ao recurso. Por exemplo, quando utilizar um `Page` instância para aceder ao recurso, especificar o `Page` tipo."
  example:
  - "The following code example demonstrates the use of the IsOnSubmitStatementRegistered method. A script named `OnSubmitScript` is registered with the <xref:System.Web.UI.Page> so that when the page's form is submitted the script is invoked.  \n  \n [!code-vb[System.Web.UI.ClientScriptManager3#1](~/add/codesnippet/visualbasic/081fc7d2-9213-49e8-ad42-_1.aspx)]\n [!code-cs[System.Web.UI.ClientScriptManager3#1](~/add/codesnippet/csharp/081fc7d2-9213-49e8-ad42-_1.aspx)]"
  syntax:
    content: public bool IsOnSubmitStatementRegistered (Type type, string key);
    parameters:
    - id: type
      type: System.Type
      description: "O tipo de instrução OnSubmit para procurar."
    - id: key
      type: System.String
      description: "A chave da instrução OnSubmit para procurar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a instrução OnSubmit estiver registada; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O tipo de instrução OnSubmit é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)
  id: IsStartupScriptRegistered(System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: IsStartupScriptRegistered(String)
  nameWithType: ClientScriptManager.IsStartupScriptRegistered(String)
  fullName: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Determina se o script de arranque está registado com o <xref href=&quot;System.Web.UI.Page&quot;> </xref> objeto utilizando a chave especificada."
  remarks: "Chamar este método antes de chamar o <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>método para impedir a registar scripts duplicados.</xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> Isto é especialmente importante se o script requer uma grande quantidade de recursos do servidor para criar.       Um script de arranque é identificado de forma exclusiva pela respetiva chave e o respetivo tipo. Scripts com a mesma chave e tipo são considerados os duplicados.       Esta sobrecarga do <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>a sobrecarga que recebe uma cadeia de ambas as chamadas de método `key` e um `type` parâmetro com o tipo definido como um <xref:System.Web.UI.Page>objeto</xref:System.Web.UI.Page> </xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>"
  syntax:
    content: public bool IsStartupScriptRegistered (string key);
    parameters:
    - id: key
      type: System.String
      description: "A chave do script de arranque para procurar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o script de arranque estiver registado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)
  id: IsStartupScriptRegistered(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: IsStartupScriptRegistered(Type,String)
  nameWithType: ClientScriptManager.IsStartupScriptRegistered(Type,String)
  fullName: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(Type,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Determina se o script de arranque está registado com o <xref href=&quot;System.Web.UI.Page&quot;> </xref> com o nome da chave e o tipo de objeto."
  remarks: "Chamar este método antes de chamar o <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>método para impedir a registar scripts duplicados.</xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> Isto é especialmente importante se o script requer uma grande quantidade de recursos do servidor para criar.       Um script de arranque de cliente é identificado de forma exclusiva pela respetiva chave e o respetivo tipo. Scripts com a mesma chave e tipo são considerados os duplicados."
  example:
  - "The following code example demonstrates the use of the IsStartupScriptRegistered method. Note that, if the logic to check for the existing startup script block were removed, there would not be two duplicate startup scripts in the HTML source code of the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method checks for duplicates. The benefit of checking is to reduce unnecessary computation.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager1#1](~/add/codesnippet/csharp/31c56db0-942d-4a34-be1e-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager1#1](~/add/codesnippet/visualbasic/31c56db0-942d-4a34-be1e-_1.aspx)]"
  syntax:
    content: public bool IsStartupScriptRegistered (Type type, string key);
    parameters:
    - id: type
      type: System.Type
      description: "O tipo de script de arranque para procurar."
    - id: key
      type: System.String
      description: "A chave do script de arranque para procurar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o script de arranque estiver registado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O tipo de script de arranque é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)
  id: RegisterArrayDeclaration(System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterArrayDeclaration(String,String)
  nameWithType: ClientScriptManager.RegisterArrayDeclaration(String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Regista uma declaração de matriz de JavaScript com o <xref href=&quot;System.Web.UI.Page&quot;> </xref> utilizando um valor de matriz e o nome da matriz de objetos."
  remarks: "The RegisterArrayDeclaration checks to see whether a registered array exists with the same name as the name specified in the `arrayName` parameter and, if so, adds the values specified in the `arrayValue` parameter. Because the underlying storage mechanism is based on an <xref:System.Collections.ArrayList>, duplicates are allowed. If a registered array with the same name as the `arrayName` parameter does not exist, it is created and the values in the `arrayValue` parameter added to it.  \n  \n If you want string literals in the resulting JavaScript array, include single quotation marks (') or escaped double quotation marks (\\\\\") in the `arrayValue` parameter. The value of the `arrayValue` parameter should be a single element. If more than one value needs to be added to the array, make multiple calls using the RegisterArrayDeclaration method."
  example:
  - "The following code example demonstrates the use of the RegisterArrayDeclaration and <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> methods. The example registers an array and a hidden value and defines the `OnClick` event of an `<input>` button to calculate the sum of two values of the array and the hidden value.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager5#1](~/add/codesnippet/csharp/fb15aead-cb5d-4924-8be4-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager5#1](~/add/codesnippet/visualbasic/fb15aead-cb5d-4924-8be4-_1.aspx)]"
  syntax:
    content: public void RegisterArrayDeclaration (string arrayName, string arrayValue);
    parameters:
    - id: arrayName
      type: System.String
      description: "O nome de matriz para registar."
    - id: arrayValue
      type: System.String
      description: "O valor de matriz ou valores de registo."
  overload: System.Web.UI.ClientScriptManager.RegisterArrayDeclaration*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>arrayName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)
  id: RegisterClientScriptBlock(System.Type,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterClientScriptBlock(Type,String,String)
  nameWithType: ClientScriptManager.RegisterClientScriptBlock(Type,String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(Type,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Regista o script de cliente com o <xref href=&quot;System.Web.UI.Page&quot;> </xref> objeto através de um tipo, a chave e o script literal."
  remarks: "Um script de cliente é identificado de forma exclusiva pela respetiva chave e o respetivo tipo. Scripts com a mesma chave e tipo são considerados os duplicados. Apenas um script com um tipo indicado e um par de chaves pode ser registado com a página. Tentativa de registar um script que já está registado não cria um duplicado do script.       Chamar o <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A>método para determinar se um script de cliente com um par de tipo e a chave especificada já está registado e evitar desnecessariamente a tentar adicionar o script.</xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A>       Nesta sobrecarga do <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>método, tem de se certificar de que o script fornecido no `script` parâmetro é moldado num `<script>` blocos de elemento.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>       O <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>método adiciona um bloco de script na parte superior da página composta.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Não são garantidos que os blocos de script ser saída pela ordem que estão registados. Se a ordem dos blocos de script é importante, utilize um <xref:System.Text.StringBuilder>para reunir os scripts existentes numa cadeia única de objeto e, em seguida, registe-las a todos num bloco de script de cliente único.</xref:System.Text.StringBuilder>"
  example:
  - "The following code example demonstrates the use of the RegisterClientScriptBlock method.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager12#1](~/add/codesnippet/csharp/41f57bff-a479-4a3c-91bb-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager12#1](~/add/codesnippet/visualbasic/41f57bff-a479-4a3c-91bb-_1.aspx)]"
  syntax:
    content: public void RegisterClientScriptBlock (Type type, string key, string script);
    parameters:
    - id: type
      type: System.Type
      description: "O tipo de script de cliente para registar."
    - id: key
      type: System.String
      description: "A chave do script de cliente para registar."
    - id: script
      type: System.String
      description: "O script de cliente literal para registar."
  overload: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)
  id: RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterClientScriptBlock(Type,String,String,Boolean)
  nameWithType: ClientScriptManager.RegisterClientScriptBlock(Type,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(Type,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Regista o script de cliente com o <xref href=&quot;System.Web.UI.Page&quot;> </xref> utilizando um tipo, a chave, o valor de literal e booleano de script que indica se pretende adicionar etiquetas de script de objeto."
  remarks: "Um script de cliente é identificado de forma exclusiva pela respetiva chave e o respetivo tipo. Scripts com a mesma chave e tipo são considerados os duplicados. Apenas um script com um tipo indicado e um par de chaves pode ser registado com a página. Tentativa de registar um script que já está registado não cria um duplicado do script.       Chamar o <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A>método para determinar se um script de cliente com um par de chaves e o tipo especificado já está registado.</xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> Isto permite-lhe evitar desnecessariamente a tentar adicionar o script.       Nesta sobrecarga do <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>método, pode indicar se o script fornecido no `script` parâmetro está moldado com um `<script>` blocos de elemento utilizando o `addScriptTags` parâmetro.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Definição `addScriptTags` para `true` indica que as tags de script serão adicionadas automaticamente.       O <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>método adiciona um bloco de script na parte superior da página composta.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Não são garantidos que os blocos de script ser saída pela ordem que estão registados. Se a ordem dos blocos de script é importante, utilize um <xref:System.Text.StringBuilder>para reunir os scripts existentes numa cadeia única de objeto e, em seguida, registe-las a todos num bloco de script de cliente único.</xref:System.Text.StringBuilder>"
  example:
  - "The following code example demonstrates the use of the RegisterClientScriptBlock method. Note that the `addScriptTags` parameter is set to `true` so the beginning and closing script tags are not included with the `script` parameter.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager1#1](~/add/codesnippet/csharp/e4221441-a348-44c8-8a15-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager1#1](~/add/codesnippet/visualbasic/e4221441-a348-44c8-8a15-_1.aspx)]"
  syntax:
    content: public void RegisterClientScriptBlock (Type type, string key, string script, bool addScriptTags);
    parameters:
    - id: type
      type: System.Type
      description: "O tipo de script de cliente para registar."
    - id: key
      type: System.String
      description: "A chave do script de cliente para registar."
    - id: script
      type: System.String
      description: "O script de cliente literal para registar."
    - id: addScriptTags
      type: System.Boolean
      description: "Um valor de Booleano indicando se pretende adicionar etiquetas de script."
  overload: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O tipo de bloco de script de cliente é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)
  id: RegisterClientScriptInclude(System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterClientScriptInclude(String,String)
  nameWithType: ClientScriptManager.RegisterClientScriptInclude(String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Regista o script de cliente com o <xref href=&quot;System.Web.UI.Page&quot;> </xref> objeto com uma chave e um URL, que permite que o script a ser chamado a partir do cliente."
  remarks: "Incluir um script de cliente é identificado de forma exclusiva pela respetiva chave e o respetivo tipo. Scripts com a mesma chave e tipo são considerados os duplicados. Apenas um script com um tipo indicado e um par de chaves pode ser registado com a página. Tentativa de registar um script que já está registado não cria um duplicado do script.       Chamar o <xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A>método para determinar se um script de cliente incluem com uma determinada chave e o par de tipo já está registado e evitar desnecessariamente a tentar adicionar o script.</xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A>      > [!NOTE] > Para resolver o URL de cliente, utilize o <xref:System.Web.UI.Control.ResolveClientUrl%2A>método.</xref:System.Web.UI.Control.ResolveClientUrl%2A> Este método utiliza o contexto do URL no qual é denominado resolver o caminho.       Esta sobrecarga do <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>chama o método a sobrecarga que recebe um `key`, um `URL`e um `type` parâmetro.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>       O método adiciona um bloco de script na parte superior da página composta."
  example:
  - For related information, including syntax, usage, and an example, see <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>.
  syntax:
    content: public void RegisterClientScriptInclude (string key, string url);
    parameters:
    - id: key
      type: System.String
      description: "A chave do script de cliente incluem para registar."
    - id: url
      type: System.String
      description: "O URL do script de cliente incluem para registar."
  overload: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)
  id: RegisterClientScriptInclude(System.Type,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterClientScriptInclude(Type,String,String)
  nameWithType: ClientScriptManager.RegisterClientScriptInclude(Type,String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(Type,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Regista o script de cliente incluem com o <xref href=&quot;System.Web.UI.Page&quot;> </xref> através de um tipo, uma chave e um URL de objeto."
  remarks: "Esta sobrecarga do <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>método *chave* e *url* parâmetros a identificar o script, bem como um `type` parâmetro para especificar a identificação do script de cliente incluem.</xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> Especifique o tipo com base no objeto que será possível aceder ao recurso. Por exemplo, quando utilizar um `Page` instância para aceder ao recurso, especificar o `Page` tipo.      > [!NOTE] > Para resolver o URL de cliente, utilize o <xref:System.Web.UI.Control.ResolveClientUrl%2A>método.</xref:System.Web.UI.Control.ResolveClientUrl%2A> Este método utiliza o contexto do URL no qual é denominado resolver o caminho.       Este método adiciona um bloco de script na parte superior da página composta."
  example:
  - "The following code example demonstrates the use of the RegisterClientScriptInclude method. Note that if the logic to check for the existing client script include were removed, there would still not be duplicate client scripts in the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method checks for duplicates. The benefit of checking is to reduce unnecessary computation.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager2#1](~/add/codesnippet/csharp/cbae2904-30a8-438b-9fac-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager2#1](~/add/codesnippet/visualbasic/cbae2904-30a8-438b-9fac-_1.aspx)]  \n  \n This example requires a JavaScript file named Script_include.js with the following contents:  \n  \n```  \nfunction DoClick() {Form1.Message.value='Text from include script.'}  \n```"
  syntax:
    content: public void RegisterClientScriptInclude (Type type, string key, string url);
    parameters:
    - id: type
      type: System.Type
      description: "O tipo de script de cliente incluem para registar."
    - id: key
      type: System.String
      description: "A chave do script de cliente incluem para registar."
    - id: url
      type: System.String
      description: "O URL do script de cliente incluem para registar."
  overload: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O script do cliente inclui um tipo é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The URL is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The URL is empty."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)
  id: RegisterClientScriptResource(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterClientScriptResource(Type,String)
  nameWithType: ClientScriptManager.RegisterClientScriptResource(Type,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterClientScriptResource(Type,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Regista o recurso de script de cliente com o <xref href=&quot;System.Web.UI.Page&quot;> </xref> objeto com um tipo e um nome de recurso."
  remarks: "O método RegisterClientScriptResource é utilizado quando acedem a compilados em recursos de assemblagens através o processador WebResource.axd HTTP. O método RegisterClientScriptResource regista o script com o <xref:System.Web.UI.Page>de objeto e impedem que scripts duplicados.</xref:System.Web.UI.Page> Este método encapsula num wrapper o conteúdo do URL de recurso com um `<script>` blocos de elemento."
  example:
  - "The following code example demonstrates the use of the RegisterClientScriptResource method.  \n  \n [!code-vb[System.Web.UI.ClientScriptManager4#1](~/add/codesnippet/visualbasic/e804ef10-67d2-47bd-8da2-_1.aspx)]\n [!code-cs[System.Web.UI.ClientScriptManager4#1](~/add/codesnippet/csharp/e804ef10-67d2-47bd-8da2-_1.aspx)]  \n  \n The following code example demonstrates how to programmatically apply the <xref:System.Web.UI.WebResourceAttribute> metadata attribute to mark the assembly for the resources that will be served.  \n  \n [!code-vb[System.Web.UI.ClientScriptManager4#2](~/add/codesnippet/visualbasic/e804ef10-67d2-47bd-8da2-_2.vb)]\n [!code-cs[System.Web.UI.ClientScriptManager4#2](~/add/codesnippet/csharp/e804ef10-67d2-47bd-8da2-_2.cs)]  \n  \n This example requires a JavaScript file named `Script_include.js`, with the following contents:  \n  \n```  \nfunction DoClick() {Form1.Message.value='Text from resource script.'}  \n```  \n  \n Compile the `Script_include.js` file as a resource in the `Samples.AspNet.CS.Controls` assembly that contains the `ClientScriptResourceLabel` class."
  syntax:
    content: public void RegisterClientScriptResource (Type type, string resourceName);
    parameters:
    - id: type
      type: System.Type
      description: "O tipo de recurso de script de cliente para registar."
    - id: resourceName
      type: System.String
      description: "O nome do recurso de script de cliente para registar."
  overload: System.Web.UI.ClientScriptManager.RegisterClientScriptResource*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The client resource name is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The client resource name has a length of zero."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String)
  id: RegisterExpandoAttribute(System.String,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterExpandoAttribute(String,String,String)
  nameWithType: ClientScriptManager.RegisterExpandoAttribute(String,String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Regista um par nome/valor como um atributo personalizado (expando) do controlo especificado com um ID de controlo, o nome de atributo e o valor do atributo."
  remarks: "O método RegisterExpandoAttribute regista um par nome/valor como um atributo personalizado (expando) no <xref:System.Web.UI.Control>.</xref:System.Web.UI.Control> especificado O atributo expando está definido dinamicamente do JavaScript para preservar a compatibilidade XHTML do markup do controlo composto. As aspas e barras invertidas valores do atributo personalizado (expando) são caráter de escape correto. Se não pretender escape aspas e barras invertidas, chame o <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A>sobrecarga de método e definir o `encode` parâmetro `false`.</xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A>       Se o expando não foi encontrado o atributo ou o controlo para adicionar o atributo expando para não for encontrado, o script de cliente ainda está a ser emitido, mas não afetará o controlo."
  syntax:
    content: public void RegisterExpandoAttribute (string controlId, string attributeName, string attributeValue);
    parameters:
    - id: controlId
      type: System.String
      description: "O <xref href=&quot;System.Web.UI.Control&quot;> </xref> na página que contém o atributo personalizado."
    - id: attributeName
      type: System.String
      description: "O nome do atributo personalizado para registar."
    - id: attributeValue
      type: System.String
      description: "O valor do atributo personalizado."
  overload: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)
  id: RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterExpandoAttribute(String,String,String,Boolean)
  nameWithType: ClientScriptManager.RegisterExpandoAttribute(String,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(String,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Regista um par nome/valor como um atributo personalizado (expando) do controlo especificado indicado um ID de controlo, um nome de atributo, um valor de atributo e um valor de Booleano indicando se pretende codificar o valor do atributo."
  remarks: "O método RegisterExpandoAttribute regista um par nome/valor como um atributo personalizado (expando) no <xref:System.Web.UI.Control>.</xref:System.Web.UI.Control> especificado O atributo expando está definido dinamicamente do JavaScript para preservar a compatibilidade XHTML do markup do controlo composto. Definir o `encode` parâmetro `true` se precisar de escape aspas e barras invertidas no valor do atributo a expando.       Se o expando não foi encontrado o atributo ou o controlo para adicionar o atributo expando para não for encontrado, o script de cliente ainda está a ser emitido, mas não afetará o controlo."
  example:
  - "The following code example demonstrates how to use the RegisterExpandoAttribute method of the <xref:System.Web.UI.ClientScriptManager> class. The client script in the rendered page sets the `title` attribute of a `<span>` element.  \n  \n [!code-vb[System.Web.UI.ClientScriptManager6#1](~/add/codesnippet/visualbasic/fbe2457b-d4ba-44a2-ac6e-_1.aspx)]\n [!code-cs[System.Web.UI.ClientScriptManager6#1](~/add/codesnippet/csharp/fbe2457b-d4ba-44a2-ac6e-_1.aspx)]"
  syntax:
    content: public void RegisterExpandoAttribute (string controlId, string attributeName, string attributeValue, bool encode);
    parameters:
    - id: controlId
      type: System.String
      description: "O <xref href=&quot;System.Web.UI.Control&quot;> </xref> na página que contém o atributo personalizado."
    - id: attributeName
      type: System.String
      description: "O nome do atributo personalizado para registar."
    - id: attributeValue
      type: System.String
      description: "O valor do atributo personalizado."
    - id: encode
      type: System.Boolean
      description: "Um valor de Booleano indicando se pretende codificar o atributo personalizado para registar."
  overload: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)
  id: RegisterForEventValidation(System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterForEventValidation(String)
  nameWithType: ClientScriptManager.RegisterForEventValidation(String)
  fullName: System.Web.UI.ClientScriptManager.RegisterForEventValidation(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Regista uma referência de eventos para validação com um ID de controlo exclusivo que representa o controlo de cliente gerar o evento."
  remarks: "Para obter mais informações e exemplos, consulte o <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A>método.</xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A>"
  example:
  - "The following example shows how to use the RegisterForEventValidation method and the <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> method in order to register a callback for validation, and how to validate that the callback originated from the page.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager9#2](~/add/codesnippet/csharp/m-system.web.ui.clientsc_1_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager9#2](~/add/codesnippet/visualbasic/m-system.web.ui.clientsc_1_1.aspx)]"
  syntax:
    content: public void RegisterForEventValidation (string uniqueId);
    parameters:
    - id: uniqueId
      type: System.String
      description: "Um ID exclusivo que representa o controlo de cliente gerar o evento."
  overload: System.Web.UI.ClientScriptManager.RegisterForEventValidation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.Web.UI.PostBackOptions)
  id: RegisterForEventValidation(System.Web.UI.PostBackOptions)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterForEventValidation(PostBackOptions)
  nameWithType: ClientScriptManager.RegisterForEventValidation(PostBackOptions)
  fullName: System.Web.UI.ClientScriptManager.RegisterForEventValidation(PostBackOptions)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Regista uma referência de eventos para validação com <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref>."
  remarks: "Para obter mais informações e exemplos, consulte o <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A>método.</xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A>"
  syntax:
    content: public void RegisterForEventValidation (System.Web.UI.PostBackOptions options);
    parameters:
    - id: options
      type: System.Web.UI.PostBackOptions
      description: "A <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref> objeto que especifica a forma como o cliente JavaScript é gerada para iniciar um evento de nova colocação."
  overload: System.Web.UI.ClientScriptManager.RegisterForEventValidation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)
  id: RegisterForEventValidation(System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterForEventValidation(String,String)
  nameWithType: ClientScriptManager.RegisterForEventValidation(String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterForEventValidation(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Regista uma referência de eventos para validação com um controlo exclusivo ID de evento os argumentos e que representa o controlo de cliente gerar o evento."
  remarks: ''
  example:
  - "The following code example demonstrates using the RegisterForEventValidation method and the <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> method to register a callback for validation and to validate that the callback originated from the page. To improve on the validation shown in the example, you could modify the validation `argument` parameter to contain information specific to the user such as an identity or role  \n  \n [!code-vb[System.Web.UI.ClientScriptManager9#1](~/add/codesnippet/visualbasic/b1669fea-2f0d-4c7f-a7ff-_1.aspx)]\n [!code-cs[System.Web.UI.ClientScriptManager9#1](~/add/codesnippet/csharp/b1669fea-2f0d-4c7f-a7ff-_1.aspx)]  \n  \n The following code example demonstrates using the RegisterForEventValidation method to register a callback for validation.  \n  \n [!code-vb[System.Web.UI.ClientScriptManager10#1](~/add/codesnippet/visualbasic/b1669fea-2f0d-4c7f-a7ff-_2.aspx)]\n [!code-cs[System.Web.UI.ClientScriptManager10#1](~/add/codesnippet/csharp/b1669fea-2f0d-4c7f-a7ff-_2.aspx)]"
  syntax:
    content: public void RegisterForEventValidation (string uniqueId, string argument);
    parameters:
    - id: uniqueId
      type: System.String
      description: "Um ID exclusivo que representa o controlo de cliente gerar o evento."
    - id: argument
      type: System.String
      description: "Os argumentos de eventos transmitidos com o evento de cliente."
  overload: System.Web.UI.ClientScriptManager.RegisterForEventValidation*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O método é chamado antes de <xref:System.Web.UI.Page.Render*>método.</xref:System.Web.UI.Page.Render*>"
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterHiddenField(System.String,System.String)
  id: RegisterHiddenField(System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterHiddenField(String,String)
  nameWithType: ClientScriptManager.RegisterHiddenField(String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterHiddenField(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Regista um valor ocultado com o <xref href=&quot;System.Web.UI.Page&quot;> </xref> objeto."
  remarks: "O método RegisterHiddenField cria um oculto `<input>` elemento na página HTML composto."
  example:
  - "The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> and RegisterHiddenField methods. The example registers an array and a hidden value and defines the `OnClick` event of an `<input>` button to calculate the sum of two values of the array and the hidden value.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager5#1](~/add/codesnippet/csharp/0defa6d5-d8c8-43f1-af03-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager5#1](~/add/codesnippet/visualbasic/0defa6d5-d8c8-43f1-af03-_1.aspx)]"
  syntax:
    content: public void RegisterHiddenField (string hiddenFieldName, string hiddenFieldInitialValue);
    parameters:
    - id: hiddenFieldName
      type: System.String
      description: "O nome do campo oculto para registar."
    - id: hiddenFieldInitialValue
      type: System.String
      description: "O valor inicial do campo para registar."
  overload: System.Web.UI.ClientScriptManager.RegisterHiddenField*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hiddenFieldName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)
  id: RegisterOnSubmitStatement(System.Type,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterOnSubmitStatement(Type,String,String)
  nameWithType: ClientScriptManager.RegisterOnSubmitStatement(Type,String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(Type,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Regista uma instrução OnSubmit com o <xref href=&quot;System.Web.UI.Page&quot;> </xref> objeto utilizando um tipo, uma chave e um script literal. A instrução executa quando o <xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;> </xref> foi submetido."
  remarks: "Uma instrução OnSubmit é identificada de forma exclusiva pela respetiva chave e o respetivo tipo. Instruções com a mesma chave e tipo são consideradas os duplicados. Apenas uma instrução com um tipo indicado e um par de chaves pode ser registada com a página. Tentativa de registar uma instrução que já está registada não criará um duplicado da instrução.       Chamar o <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A>método para determinar se uma instrução OnSubmit já está registada com um determinado par de chaves e o tipo e evitar desnecessariamente a tentar adicionar o script.</xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A>       O `script` parâmetro do método RegisterOnSubmitStatement pode conter vários comandos de script, desde que sejam corretamente delimitados com um ponto e vírgula (;).       O RegisterOnSubmitStatement adiciona um script que é executado antes da página é submetida e dá-lhe uma oportunidade para cancelar a submissão.       Para mais informações sobre formulários HTML e o `OnSubmit` de atributos, consulte o [Consortium World Wide Web (W3C) Web site](http://go.microsoft.com/fwlink/?linkid=37125)."
  example:
  - "The following code example demonstrates the use of the RegisterOnSubmitStatement method.  \n  \n [!code-vb[System.Web.UI.ClientScriptManager3#1](~/add/codesnippet/visualbasic/597b1063-1251-4d00-82f9-_1.aspx)]\n [!code-cs[System.Web.UI.ClientScriptManager3#1](~/add/codesnippet/csharp/597b1063-1251-4d00-82f9-_1.aspx)]"
  syntax:
    content: public void RegisterOnSubmitStatement (Type type, string key, string script);
    parameters:
    - id: type
      type: System.Type
      description: "O tipo de instrução OnSubmit para registar."
    - id: key
      type: System.String
      description: "A chave da instrução OnSubmit para registar."
    - id: script
      type: System.String
      description: "O literal de script da instrução OnSubmit para registar."
  overload: System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)
  id: RegisterStartupScript(System.Type,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterStartupScript(Type,String,String)
  nameWithType: ClientScriptManager.RegisterStartupScript(Type,String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterStartupScript(Type,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Regista o script de arranque com o <xref href=&quot;System.Web.UI.Page&quot;> </xref> objeto utilizando um tipo, uma chave e um script literal."
  remarks: "Um script de cliente é identificado de forma exclusiva pela respetiva chave e o respetivo tipo. Scripts com a mesma chave e tipo são considerados os duplicados. Apenas um script com um tipo indicado e um par de chaves pode ser registado com a página. Tentativa de registar um script que já está registado não cria um duplicado do script.       Chamar o <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>método para determinar se um script de arranque com um par de tipo e a chave especificada já está registado e evitar desnecessariamente a tentar adicionar o script.</xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>       Nesta sobrecarga do <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>método, tem de se certificar de que o script fornecido no `script` parâmetro está moldado com um `<script>` blocos de elemento.</xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>       O bloco de script adicionado pelo <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>método executa quando a página de conclusão do carregamento, mas antes da página <xref:System.Web.UI.Control.OnLoad%2A>o evento é gerado.</xref:System.Web.UI.Control.OnLoad%2A> </xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> Não são garantidos que os blocos de script ser saída pela ordem que estão registados. Se a ordem dos blocos de script é importante, utilize um <xref:System.Text.StringBuilder>para reunir os scripts existentes numa cadeia única de objeto e, em seguida, registe-las a todos num bloco de script de cliente único.</xref:System.Text.StringBuilder>"
  example:
  - "The following code example demonstrates the use of the RegisterStartupScript method. Note that the beginning and closing script tags are included within the `script` parameter. To have the script tags added based on an additional parameter setting, see the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager11#1](~/add/codesnippet/csharp/77e56a73-ddd0-4c6d-99c5-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager11#1](~/add/codesnippet/visualbasic/77e56a73-ddd0-4c6d-99c5-_1.aspx)]"
  syntax:
    content: public void RegisterStartupScript (Type type, string key, string script);
    parameters:
    - id: type
      type: System.Type
      description: "O tipo de script de arranque para registar."
    - id: key
      type: System.String
      description: "A chave do script de arranque para registar."
    - id: script
      type: System.String
      description: "O script de arranque literal para registar."
  overload: System.Web.UI.ClientScriptManager.RegisterStartupScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)
  id: RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: RegisterStartupScript(Type,String,String,Boolean)
  nameWithType: ClientScriptManager.RegisterStartupScript(Type,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.RegisterStartupScript(Type,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Regista o script de arranque com o <xref href=&quot;System.Web.UI.Page&quot;> </xref> utilizando um tipo, uma chave, um literal de script e um valor de Booleano indicando se pretende adicionar etiquetas de script de objeto."
  remarks: "Um script de arranque é identificado de forma exclusiva pela respetiva chave e o respetivo tipo. Scripts com a mesma chave e tipo são considerados os duplicados. Apenas um script com um tipo indicado e um par de chaves pode ser registado com a página. Tentativa de registar um script que já está registado não cria um duplicado do script.       Chamar o <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>método para determinar se um script de arranque com um par de tipo e a chave especificada já está registado e evitar desnecessariamente a tentar adicionar o script.</xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>       Nesta sobrecarga do <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>método, pode indicar se o script fornecido no `script` parâmetro está moldado com um `<script>` blocos de elemento utilizando o `addScriptTags` parâmetro.</xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> Definição `addScriptTags` para `true` indica que as tags de script serão adicionadas automaticamente.       O bloco de script adicionado pelo <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>método executa quando a página de conclusão do carregamento, mas antes da página <xref:System.Web.UI.Control.OnLoad%2A>o evento é gerado.</xref:System.Web.UI.Control.OnLoad%2A> </xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> Não são garantidos que os blocos de script ser saída pela ordem que estão registados. Se a ordem dos blocos de script é importante, utilize um <xref:System.Text.StringBuilder>para reunir os scripts existentes numa cadeia única de objeto e, em seguida, registe-las a todos num bloco de script de cliente único.</xref:System.Text.StringBuilder>"
  example:
  - "The following code example demonstrates the use of the RegisterStartupScript method. Note that the `addScriptTags` parameter is set to `false` so the beginning and closing script tags are included with the `script` parameter.  \n  \n [!code-cs[System.Web.UI.ClientScriptManager1#1](~/add/codesnippet/csharp/8a83f4c8-e8ef-4a4a-b8c6-_1.aspx)]\n [!code-vb[System.Web.UI.ClientScriptManager1#1](~/add/codesnippet/visualbasic/8a83f4c8-e8ef-4a4a-b8c6-_1.aspx)]"
  syntax:
    content: public void RegisterStartupScript (Type type, string key, string script, bool addScriptTags);
    parameters:
    - id: type
      type: System.Type
      description: "O tipo de script de arranque para registar."
    - id: key
      type: System.String
      description: "A chave do script de arranque para registar."
    - id: script
      type: System.String
      description: "O script de arranque literal para registar."
    - id: addScriptTags
      type: System.Boolean
      description: "Um valor de Booleano indicando se pretende adicionar etiquetas de script."
  overload: System.Web.UI.ClientScriptManager.RegisterStartupScript*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.ValidateEvent(System.String)
  id: ValidateEvent(System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: ValidateEvent(String)
  nameWithType: ClientScriptManager.ValidateEvent(String)
  fullName: System.Web.UI.ClientScriptManager.ValidateEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Valida um evento de cliente que se encontrava registado para a utilização de validação de eventos de <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation*>método.</xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation*>"
  syntax:
    content: public void ValidateEvent (string uniqueId);
    parameters:
    - id: uniqueId
      type: System.String
      description: "Um ID exclusivo que representa o controlo de cliente gerar o evento."
  overload: System.Web.UI.ClientScriptManager.ValidateEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)
  id: ValidateEvent(System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  langs:
  - csharp
  name: ValidateEvent(String,String)
  nameWithType: ClientScriptManager.ValidateEvent(String,String)
  fullName: System.Web.UI.ClientScriptManager.ValidateEvent(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Valida um evento de cliente que se encontrava registado para a utilização de validação de eventos de <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation*>método.</xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation*>"
  remarks: ''
  example:
  - "The following code example demonstrates using the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method and the ValidateEvent method to register a callback for validation and to validate that the callback originated from the page. To improve on the validation shown here, you could modify the validation `argument` parameter to contain information specific to the user such as an identity or role  \n  \n [!code-vb[System.Web.UI.ClientScriptManager9#1](~/add/codesnippet/visualbasic/m-system.web.ui.clientsc_3_1.aspx)]\n [!code-cs[System.Web.UI.ClientScriptManager9#1](~/add/codesnippet/csharp/m-system.web.ui.clientsc_3_1.aspx)]"
  syntax:
    content: public void ValidateEvent (string uniqueId, string argument);
    parameters:
    - id: uniqueId
      type: System.String
      description: "Um ID exclusivo que representa o controlo de cliente gerar o evento."
    - id: argument
      type: System.String
      description: "Os argumentos de eventos transmitidos com o evento de cliente."
  overload: System.Web.UI.ClientScriptManager.ValidateEvent*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>uniqueId</code>é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou uma cadeia vazia (&quot;&quot;)."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetCallbackEventReference(Control,String,String,String)
  nameWithType: ClientScriptManager.GetCallbackEventReference(Control,String,String,String)
  fullName: System.Web.UI.ClientScriptManager.GetCallbackEventReference(Control,String,String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetCallbackEventReference(Control,String,String,String,Boolean)
  nameWithType: ClientScriptManager.GetCallbackEventReference(Control,String,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetCallbackEventReference(Control,String,String,String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetCallbackEventReference(String,String,String,String,String,Boolean)
  nameWithType: ClientScriptManager.GetCallbackEventReference(String,String,String,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetCallbackEventReference(String,String,String,String,String,Boolean)
- uid: System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetCallbackEventReference(Control,String,String,String,String,Boolean)
  nameWithType: ClientScriptManager.GetCallbackEventReference(Control,String,String,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetCallbackEventReference(Control,String,String,String,String,Boolean)
- uid: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetPostBackClientHyperlink(Control,String)
  nameWithType: ClientScriptManager.GetPostBackClientHyperlink(Control,String)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(Control,String)
- uid: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetPostBackClientHyperlink(Control,String,Boolean)
  nameWithType: ClientScriptManager.GetPostBackClientHyperlink(Control,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(Control,String,Boolean)
- uid: System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetPostBackEventReference(PostBackOptions)
  nameWithType: ClientScriptManager.GetPostBackEventReference(PostBackOptions)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackEventReference(PostBackOptions)
- uid: System.Web.UI.PostBackOptions
  parent: System.Web.UI
  isExternal: false
  name: PostBackOptions
  nameWithType: PostBackOptions
  fullName: System.Web.UI.PostBackOptions
- uid: System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetPostBackEventReference(Control,String)
  nameWithType: ClientScriptManager.GetPostBackEventReference(Control,String)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackEventReference(Control,String)
- uid: System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetPostBackEventReference(PostBackOptions,Boolean)
  nameWithType: ClientScriptManager.GetPostBackEventReference(PostBackOptions,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackEventReference(PostBackOptions,Boolean)
- uid: System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetPostBackEventReference(Control,String,Boolean)
  nameWithType: ClientScriptManager.GetPostBackEventReference(Control,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.GetPostBackEventReference(Control,String,Boolean)
- uid: System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetWebResourceUrl(Type,String)
  nameWithType: ClientScriptManager.GetWebResourceUrl(Type,String)
  fullName: System.Web.UI.ClientScriptManager.GetWebResourceUrl(Type,String)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsClientScriptBlockRegistered(String)
  nameWithType: ClientScriptManager.IsClientScriptBlockRegistered(String)
  fullName: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(String)
- uid: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsClientScriptBlockRegistered(Type,String)
  nameWithType: ClientScriptManager.IsClientScriptBlockRegistered(Type,String)
  fullName: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(Type,String)
- uid: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsClientScriptIncludeRegistered(String)
  nameWithType: ClientScriptManager.IsClientScriptIncludeRegistered(String)
  fullName: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(String)
- uid: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsClientScriptIncludeRegistered(Type,String)
  nameWithType: ClientScriptManager.IsClientScriptIncludeRegistered(Type,String)
  fullName: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(Type,String)
- uid: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsOnSubmitStatementRegistered(String)
  nameWithType: ClientScriptManager.IsOnSubmitStatementRegistered(String)
  fullName: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(String)
- uid: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsOnSubmitStatementRegistered(Type,String)
  nameWithType: ClientScriptManager.IsOnSubmitStatementRegistered(Type,String)
  fullName: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(Type,String)
- uid: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsStartupScriptRegistered(String)
  nameWithType: ClientScriptManager.IsStartupScriptRegistered(String)
  fullName: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(String)
- uid: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsStartupScriptRegistered(Type,String)
  nameWithType: ClientScriptManager.IsStartupScriptRegistered(Type,String)
  fullName: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(Type,String)
- uid: System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterArrayDeclaration(String,String)
  nameWithType: ClientScriptManager.RegisterArrayDeclaration(String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(String,String)
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterClientScriptBlock(Type,String,String)
  nameWithType: ClientScriptManager.RegisterClientScriptBlock(Type,String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(Type,String,String)
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterClientScriptBlock(Type,String,String,Boolean)
  nameWithType: ClientScriptManager.RegisterClientScriptBlock(Type,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(Type,String,String,Boolean)
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterClientScriptInclude(String,String)
  nameWithType: ClientScriptManager.RegisterClientScriptInclude(String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(String,String)
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterClientScriptInclude(Type,String,String)
  nameWithType: ClientScriptManager.RegisterClientScriptInclude(Type,String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(Type,String,String)
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterClientScriptResource(Type,String)
  nameWithType: ClientScriptManager.RegisterClientScriptResource(Type,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterClientScriptResource(Type,String)
- uid: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterExpandoAttribute(String,String,String)
  nameWithType: ClientScriptManager.RegisterExpandoAttribute(String,String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(String,String,String)
- uid: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterExpandoAttribute(String,String,String,Boolean)
  nameWithType: ClientScriptManager.RegisterExpandoAttribute(String,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(String,String,String,Boolean)
- uid: System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterForEventValidation(String)
  nameWithType: ClientScriptManager.RegisterForEventValidation(String)
  fullName: System.Web.UI.ClientScriptManager.RegisterForEventValidation(String)
- uid: System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.Web.UI.PostBackOptions)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterForEventValidation(PostBackOptions)
  nameWithType: ClientScriptManager.RegisterForEventValidation(PostBackOptions)
  fullName: System.Web.UI.ClientScriptManager.RegisterForEventValidation(PostBackOptions)
- uid: System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterForEventValidation(String,String)
  nameWithType: ClientScriptManager.RegisterForEventValidation(String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterForEventValidation(String,String)
- uid: System.Web.UI.ClientScriptManager.RegisterHiddenField(System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterHiddenField(String,String)
  nameWithType: ClientScriptManager.RegisterHiddenField(String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterHiddenField(String,String)
- uid: System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterOnSubmitStatement(Type,String,String)
  nameWithType: ClientScriptManager.RegisterOnSubmitStatement(Type,String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(Type,String,String)
- uid: System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterStartupScript(Type,String,String)
  nameWithType: ClientScriptManager.RegisterStartupScript(Type,String,String)
  fullName: System.Web.UI.ClientScriptManager.RegisterStartupScript(Type,String,String)
- uid: System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterStartupScript(Type,String,String,Boolean)
  nameWithType: ClientScriptManager.RegisterStartupScript(Type,String,String,Boolean)
  fullName: System.Web.UI.ClientScriptManager.RegisterStartupScript(Type,String,String,Boolean)
- uid: System.Web.UI.ClientScriptManager.ValidateEvent(System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: ValidateEvent(String)
  nameWithType: ClientScriptManager.ValidateEvent(String)
  fullName: System.Web.UI.ClientScriptManager.ValidateEvent(String)
- uid: System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: ValidateEvent(String,String)
  nameWithType: ClientScriptManager.ValidateEvent(String,String)
  fullName: System.Web.UI.ClientScriptManager.ValidateEvent(String,String)
- uid: System.Web.UI.ClientScriptManager.GetCallbackEventReference*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetCallbackEventReference
  nameWithType: ClientScriptManager.GetCallbackEventReference
- uid: System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetPostBackClientHyperlink
  nameWithType: ClientScriptManager.GetPostBackClientHyperlink
- uid: System.Web.UI.ClientScriptManager.GetPostBackEventReference*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetPostBackEventReference
  nameWithType: ClientScriptManager.GetPostBackEventReference
- uid: System.Web.UI.ClientScriptManager.GetWebResourceUrl*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: GetWebResourceUrl
  nameWithType: ClientScriptManager.GetWebResourceUrl
- uid: System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsClientScriptBlockRegistered
  nameWithType: ClientScriptManager.IsClientScriptBlockRegistered
- uid: System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsClientScriptIncludeRegistered
  nameWithType: ClientScriptManager.IsClientScriptIncludeRegistered
- uid: System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsOnSubmitStatementRegistered
  nameWithType: ClientScriptManager.IsOnSubmitStatementRegistered
- uid: System.Web.UI.ClientScriptManager.IsStartupScriptRegistered*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: IsStartupScriptRegistered
  nameWithType: ClientScriptManager.IsStartupScriptRegistered
- uid: System.Web.UI.ClientScriptManager.RegisterArrayDeclaration*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterArrayDeclaration
  nameWithType: ClientScriptManager.RegisterArrayDeclaration
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptBlock*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterClientScriptBlock
  nameWithType: ClientScriptManager.RegisterClientScriptBlock
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptInclude*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterClientScriptInclude
  nameWithType: ClientScriptManager.RegisterClientScriptInclude
- uid: System.Web.UI.ClientScriptManager.RegisterClientScriptResource*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterClientScriptResource
  nameWithType: ClientScriptManager.RegisterClientScriptResource
- uid: System.Web.UI.ClientScriptManager.RegisterExpandoAttribute*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterExpandoAttribute
  nameWithType: ClientScriptManager.RegisterExpandoAttribute
- uid: System.Web.UI.ClientScriptManager.RegisterForEventValidation*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterForEventValidation
  nameWithType: ClientScriptManager.RegisterForEventValidation
- uid: System.Web.UI.ClientScriptManager.RegisterHiddenField*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterHiddenField
  nameWithType: ClientScriptManager.RegisterHiddenField
- uid: System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterOnSubmitStatement
  nameWithType: ClientScriptManager.RegisterOnSubmitStatement
- uid: System.Web.UI.ClientScriptManager.RegisterStartupScript*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: RegisterStartupScript
  nameWithType: ClientScriptManager.RegisterStartupScript
- uid: System.Web.UI.ClientScriptManager.ValidateEvent*
  parent: System.Web.UI.ClientScriptManager
  isExternal: false
  name: ValidateEvent
  nameWithType: ClientScriptManager.ValidateEvent
