### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Xml.XmlLicenseTransform
  id: XmlLicenseTransform
  children:
  - System.Security.Cryptography.Xml.XmlLicenseTransform.#ctor
  - System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor
  - System.Security.Cryptography.Xml.XmlLicenseTransform.GetInnerXml
  - System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput
  - System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput(System.Type)
  - System.Security.Cryptography.Xml.XmlLicenseTransform.InputTypes
  - System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInnerXml(System.Xml.XmlNodeList)
  - System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput(System.Object)
  - System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes
  langs:
  - csharp
  name: XmlLicenseTransform
  nameWithType: XmlLicenseTransform
  fullName: System.Security.Cryptography.Xml.XmlLicenseTransform
  type: Class
  summary: "Represents the license transform algorithm used to normalize XrML licenses for signatures."
  remarks: "The XmlLicenseTransform class represents the license transform algorithm as defined in the MPEG Rights Extension Language (MPEG REL).       Use the XmlLicenseTransform class to transform XrML licenses for signatures.       The Uniform Resource Identifier (URI) that describes the XmlLicenseTransform class is defined by the <xref:System.Security.Cryptography.Xml.SignedXml.XmlLicenseTransformUrl> field."
  example:
  - "The following code example shows how to validate an XML digital signature using the <xref:System.Security.Cryptography.Xml.IRelDecryptor> interface and the XmlLicenseTransform class.  \n  \n [!code-cs[Cryptography.XML.XmlLicenseTransform#2](~/add/codesnippet/csharp/t-system.security.crypto_114_1.cs)]\n [!code-cpp[Cryptography.XML.XmlLicenseTransform#2](~/add/codesnippet/cpp/t-system.security.crypto_114_1.cpp)]\n [!code-vb[Cryptography.XML.XmlLicenseTransform#2](~/add/codesnippet/visualbasic/t-system.security.crypto_114_1.vb)]"
  syntax:
    content: 'public class XmlLicenseTransform : System.Security.Cryptography.Xml.Transform'
  inheritance:
  - System.Object
  - System.Security.Cryptography.Xml.Transform
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.Xml.Transform.Algorithm
  - System.Security.Cryptography.Xml.Transform.Context
  - System.Security.Cryptography.Xml.Transform.GetDigestedOutput(System.Security.Cryptography.HashAlgorithm)
  - System.Security.Cryptography.Xml.Transform.GetXml
  - System.Security.Cryptography.Xml.Transform.PropagatedNamespaces
  - System.Security.Cryptography.Xml.Transform.Resolver
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Xml.XmlLicenseTransform
  langs:
  - csharp
  name: XmlLicenseTransform()
  nameWithType: XmlLicenseTransform.XmlLicenseTransform()
  fullName: System.Security.Cryptography.Xml.XmlLicenseTransform.XmlLicenseTransform()
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Initializes a new instance of the <xref href=&quot;System.Security.Cryptography.Xml.XmlLicenseTransform&quot;></xref> class."
  syntax:
    content: public XmlLicenseTransform ();
    parameters: []
  overload: System.Security.Cryptography.Xml.XmlLicenseTransform.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor
  id: Decryptor
  parent: System.Security.Cryptography.Xml.XmlLicenseTransform
  langs:
  - csharp
  name: Decryptor
  nameWithType: XmlLicenseTransform.Decryptor
  fullName: System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Gets or sets the decryptor of the current <xref href=&quot;System.Security.Cryptography.Xml.XmlLicenseTransform&quot;></xref> object."
  remarks: "The <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> object uses an <xref:System.Security.Cryptography.Xml.IRelDecryptor> interface to decrypt `<encryptedGrant>` elements from the current `<license>` element."
  example:
  - "The following code example shows how to validate an XML digital signature using the <xref:System.Security.Cryptography.Xml.IRelDecryptor> interface and the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class.  \n  \n [!code-cs[Cryptography.XML.XmlLicenseTransform#2](~/add/codesnippet/csharp/p-system.security.crypto_17_1.cs)]\n [!code-cpp[Cryptography.XML.XmlLicenseTransform#2](~/add/codesnippet/cpp/p-system.security.crypto_17_1.cpp)]\n [!code-vb[Cryptography.XML.XmlLicenseTransform#2](~/add/codesnippet/visualbasic/p-system.security.crypto_17_1.vb)]"
  syntax:
    content: public System.Security.Cryptography.Xml.IRelDecryptor Decryptor { get; set; }
    return:
      type: System.Security.Cryptography.Xml.IRelDecryptor
      description: "The decryptor of the current <xref href=&quot;System.Security.Cryptography.Xml.XmlLicenseTransform&quot;></xref> object."
  overload: System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.GetInnerXml
  id: GetInnerXml
  parent: System.Security.Cryptography.Xml.XmlLicenseTransform
  langs:
  - csharp
  name: GetInnerXml()
  nameWithType: XmlLicenseTransform.GetInnerXml()
  fullName: System.Security.Cryptography.Xml.XmlLicenseTransform.GetInnerXml()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Returns an XML representation of the parameters of an <xref href=&quot;System.Security.Cryptography.Xml.XmlLicenseTransform&quot;></xref> object that are suitable to be included as subelements of an XMLDSIG <xref uid=&quot;langword_csharp_&lt;Transform&gt;&quot; name=&quot;&lt;Transform&gt;&quot; href=&quot;&quot;></xref> element."
  syntax:
    content: protected override System.Xml.XmlNodeList GetInnerXml ();
    parameters: []
    return:
      type: System.Xml.XmlNodeList
      description: "A list of the XML nodes that represent the transform-specific content needed to describe the current <xref href=&quot;System.Security.Cryptography.Xml.XmlLicenseTransform&quot;></xref> object in an XMLDSIG <xref uid=&quot;langword_csharp_&lt;Transform&gt;&quot; name=&quot;&lt;Transform&gt;&quot; href=&quot;&quot;></xref> element."
  overload: System.Security.Cryptography.Xml.XmlLicenseTransform.GetInnerXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput
  id: GetOutput
  parent: System.Security.Cryptography.Xml.XmlLicenseTransform
  langs:
  - csharp
  name: GetOutput()
  nameWithType: XmlLicenseTransform.GetOutput()
  fullName: System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Returns the output of an <xref href=&quot;System.Security.Cryptography.Xml.XmlLicenseTransform&quot;></xref> object."
  remarks: "The type of the returned object must be <xref:System.Xml.XmlDocument>."
  syntax:
    content: public override object GetOutput ();
    parameters: []
    return:
      type: System.Object
      description: "The output of the <xref href=&quot;System.Security.Cryptography.Xml.XmlLicenseTransform&quot;></xref> object."
  overload: System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput(System.Type)
  id: GetOutput(System.Type)
  parent: System.Security.Cryptography.Xml.XmlLicenseTransform
  langs:
  - csharp
  name: GetOutput(Type)
  nameWithType: XmlLicenseTransform.GetOutput(Type)
  fullName: System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput(Type)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Returns the output of an <xref href=&quot;System.Security.Cryptography.Xml.XmlLicenseTransform&quot;></xref> object."
  syntax:
    content: public override object GetOutput (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "The type of the output to return. <xref href=&quot;System.Xml.XmlDocument&quot;></xref> is the only valid type for this parameter."
    return:
      type: System.Object
      description: "The output of the <xref href=&quot;System.Security.Cryptography.Xml.XmlLicenseTransform&quot;></xref> object."
  overload: System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>type</code> parameter is not an <xref href=&quot;System.Xml.XmlDocument&quot;></xref> object."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.InputTypes
  id: InputTypes
  parent: System.Security.Cryptography.Xml.XmlLicenseTransform
  langs:
  - csharp
  name: InputTypes
  nameWithType: XmlLicenseTransform.InputTypes
  fullName: System.Security.Cryptography.Xml.XmlLicenseTransform.InputTypes
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Gets an array of types that are valid inputs to the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes*> method of the current <xref href=&quot;System.Security.Cryptography.Xml.XmlLicenseTransform&quot;></xref> object."
  remarks: "The only valid input type to the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class is <xref:System.Xml.XmlDocument>."
  syntax:
    content: public override Type[] InputTypes { get; }
    return:
      type: System.Type[]
      description: "An array of types that are valid inputs to the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes*> method of the current <xref href=&quot;System.Security.Cryptography.Xml.XmlLicenseTransform&quot;></xref> object; you can pass only objects of one of these types to the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes*> method of the current <xref href=&quot;System.Security.Cryptography.Xml.XmlLicenseTransform&quot;></xref> object."
  overload: System.Security.Cryptography.Xml.XmlLicenseTransform.InputTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInnerXml(System.Xml.XmlNodeList)
  id: LoadInnerXml(System.Xml.XmlNodeList)
  parent: System.Security.Cryptography.Xml.XmlLicenseTransform
  langs:
  - csharp
  name: LoadInnerXml(XmlNodeList)
  nameWithType: XmlLicenseTransform.LoadInnerXml(XmlNodeList)
  fullName: System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInnerXml(XmlNodeList)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Parses the specified <xref href=&quot;System.Xml.XmlNodeList&quot;></xref> object as transform-specific content of a <xref uid=&quot;langword_csharp_&lt;Transform&gt;&quot; name=&quot;&lt;Transform&gt;&quot; href=&quot;&quot;></xref> element; this method is not supported because the <xref href=&quot;System.Security.Cryptography.Xml.XmlLicenseTransform&quot;></xref> object has no inner XML elements."
  syntax:
    content: public override void LoadInnerXml (System.Xml.XmlNodeList nodeList);
    parameters:
    - id: nodeList
      type: System.Xml.XmlNodeList
      description: "An <xref href=&quot;System.Xml.XmlNodeList&quot;></xref> object that encapsulates the transform to load into the current <xref href=&quot;System.Security.Cryptography.Xml.XmlLicenseTransform&quot;></xref> object."
  overload: System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInnerXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput(System.Object)
  id: LoadInput(System.Object)
  parent: System.Security.Cryptography.Xml.XmlLicenseTransform
  langs:
  - csharp
  name: LoadInput(Object)
  nameWithType: XmlLicenseTransform.LoadInput(Object)
  fullName: System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput(Object)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Loads the specified input into the current <xref href=&quot;System.Security.Cryptography.Xml.XmlLicenseTransform&quot;></xref> object."
  syntax:
    content: public override void LoadInput (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "The input to load into the current <xref href=&quot;System.Security.Cryptography.Xml.XmlLicenseTransform&quot;></xref> object. The type of the input object must be <xref href=&quot;System.Xml.XmlDocument&quot;></xref>."
  overload: System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "The context was not set before this transform was invoked.       -or-       The <xref uid=&quot;langword_csharp_&lt;issuer&gt;&quot; name=&quot;&lt;issuer&gt;&quot; href=&quot;&quot;></xref> element was not set before this transform was invoked.       -or-       The <xref uid=&quot;langword_csharp_&lt;license&gt;&quot; name=&quot;&lt;license&gt;&quot; href=&quot;&quot;></xref> element was not set before this transform was invoked.       -or-       The <xref:System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor*> property was not set before this transform was invoked."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes
  id: OutputTypes
  parent: System.Security.Cryptography.Xml.XmlLicenseTransform
  langs:
  - csharp
  name: OutputTypes
  nameWithType: XmlLicenseTransform.OutputTypes
  fullName: System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Gets an array of types that are valid outputs from the OutputTypes method of the current <xref href=&quot;System.Security.Cryptography.Xml.XmlLicenseTransform&quot;></xref> object."
  remarks: "The only valid output type to the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform> class is <xref:System.Xml.XmlDocument>."
  syntax:
    content: public override Type[] OutputTypes { get; }
    return:
      type: System.Type[]
      description: "An array of valid output types for the current <xref href=&quot;System.Security.Cryptography.Xml.XmlLicenseTransform&quot;></xref> object; only objects of one of these types are returned from the <xref:System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput*> methods of the current <xref href=&quot;System.Security.Cryptography.Xml.XmlLicenseTransform&quot;></xref> object."
  overload: System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Cryptography.Xml.Transform
  isExternal: false
  name: System.Security.Cryptography.Xml.Transform
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.#ctor
  parent: System.Security.Cryptography.Xml.XmlLicenseTransform
  isExternal: false
  name: XmlLicenseTransform()
  nameWithType: XmlLicenseTransform.XmlLicenseTransform()
  fullName: System.Security.Cryptography.Xml.XmlLicenseTransform.XmlLicenseTransform()
- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor
  parent: System.Security.Cryptography.Xml.XmlLicenseTransform
  isExternal: false
  name: Decryptor
  nameWithType: XmlLicenseTransform.Decryptor
  fullName: System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor
- uid: System.Security.Cryptography.Xml.IRelDecryptor
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: IRelDecryptor
  nameWithType: IRelDecryptor
  fullName: System.Security.Cryptography.Xml.IRelDecryptor
- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.GetInnerXml
  parent: System.Security.Cryptography.Xml.XmlLicenseTransform
  isExternal: false
  name: GetInnerXml()
  nameWithType: XmlLicenseTransform.GetInnerXml()
  fullName: System.Security.Cryptography.Xml.XmlLicenseTransform.GetInnerXml()
- uid: System.Xml.XmlNodeList
  parent: System.Xml
  isExternal: false
  name: XmlNodeList
  nameWithType: XmlNodeList
  fullName: System.Xml.XmlNodeList
- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput
  parent: System.Security.Cryptography.Xml.XmlLicenseTransform
  isExternal: false
  name: GetOutput()
  nameWithType: XmlLicenseTransform.GetOutput()
  fullName: System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput(System.Type)
  parent: System.Security.Cryptography.Xml.XmlLicenseTransform
  isExternal: false
  name: GetOutput(Type)
  nameWithType: XmlLicenseTransform.GetOutput(Type)
  fullName: System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.InputTypes
  parent: System.Security.Cryptography.Xml.XmlLicenseTransform
  isExternal: false
  name: InputTypes
  nameWithType: XmlLicenseTransform.InputTypes
  fullName: System.Security.Cryptography.Xml.XmlLicenseTransform.InputTypes
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInnerXml(System.Xml.XmlNodeList)
  parent: System.Security.Cryptography.Xml.XmlLicenseTransform
  isExternal: false
  name: LoadInnerXml(XmlNodeList)
  nameWithType: XmlLicenseTransform.LoadInnerXml(XmlNodeList)
  fullName: System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInnerXml(XmlNodeList)
- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput(System.Object)
  parent: System.Security.Cryptography.Xml.XmlLicenseTransform
  isExternal: false
  name: LoadInput(Object)
  nameWithType: XmlLicenseTransform.LoadInput(Object)
  fullName: System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput(Object)
- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes
  parent: System.Security.Cryptography.Xml.XmlLicenseTransform
  isExternal: false
  name: OutputTypes
  nameWithType: XmlLicenseTransform.OutputTypes
  fullName: System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes
- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.#ctor*
  parent: System.Security.Cryptography.Xml.XmlLicenseTransform
  isExternal: false
  name: XmlLicenseTransform
  nameWithType: XmlLicenseTransform.XmlLicenseTransform
- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.Decryptor*
  parent: System.Security.Cryptography.Xml.XmlLicenseTransform
  isExternal: false
  name: Decryptor
  nameWithType: XmlLicenseTransform.Decryptor
- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.GetInnerXml*
  parent: System.Security.Cryptography.Xml.XmlLicenseTransform
  isExternal: false
  name: GetInnerXml
  nameWithType: XmlLicenseTransform.GetInnerXml
- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.GetOutput*
  parent: System.Security.Cryptography.Xml.XmlLicenseTransform
  isExternal: false
  name: GetOutput
  nameWithType: XmlLicenseTransform.GetOutput
- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.InputTypes*
  parent: System.Security.Cryptography.Xml.XmlLicenseTransform
  isExternal: false
  name: InputTypes
  nameWithType: XmlLicenseTransform.InputTypes
- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInnerXml*
  parent: System.Security.Cryptography.Xml.XmlLicenseTransform
  isExternal: false
  name: LoadInnerXml
  nameWithType: XmlLicenseTransform.LoadInnerXml
- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.LoadInput*
  parent: System.Security.Cryptography.Xml.XmlLicenseTransform
  isExternal: false
  name: LoadInput
  nameWithType: XmlLicenseTransform.LoadInput
- uid: System.Security.Cryptography.Xml.XmlLicenseTransform.OutputTypes*
  parent: System.Security.Cryptography.Xml.XmlLicenseTransform
  isExternal: false
  name: OutputTypes
  nameWithType: XmlLicenseTransform.OutputTypes
