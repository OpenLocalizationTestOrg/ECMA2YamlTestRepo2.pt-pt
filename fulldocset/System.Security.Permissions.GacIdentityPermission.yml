### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.GacIdentityPermission
  id: GacIdentityPermission
  children:
  - System.Security.Permissions.GacIdentityPermission.#ctor
  - System.Security.Permissions.GacIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Security.Permissions.GacIdentityPermission.Copy
  - System.Security.Permissions.GacIdentityPermission.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.GacIdentityPermission.Intersect(System.Security.IPermission)
  - System.Security.Permissions.GacIdentityPermission.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.GacIdentityPermission.ToXml
  - System.Security.Permissions.GacIdentityPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: GacIdentityPermission
  nameWithType: GacIdentityPermission
  fullName: System.Security.Permissions.GacIdentityPermission
  type: Class
  summary: "Defines the identity permission for files originating in the global assembly cache. This class cannot be inherited."
  remarks: "Files are either in the global assembly cache, or they are not. There are no variations to the permission granted, so all GacIdentityPermission objects are equal.      > [!IMPORTANT] >  Starting with the [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], identity permissions are not used.   >    >  In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective even when the calling assembly is fully trusted. That is, although the calling assembly has full trust, a demand for an identity permission fails if the assembly does not meet the demanded criteria. Starting with the .NET Framework version 2.0, demands for identity permissions are ineffective if the calling assembly has full trust. This assures consistency for all permissions, eliminating the treatment of identity permissions as a special case."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class GacIdentityPermission : System.Security.CodeAccessPermission
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements: []
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Security.Permissions.GacIdentityPermission.#ctor
  id: '#ctor'
  parent: System.Security.Permissions.GacIdentityPermission
  langs:
  - csharp
  name: GacIdentityPermission()
  nameWithType: GacIdentityPermission.GacIdentityPermission()
  fullName: System.Security.Permissions.GacIdentityPermission.GacIdentityPermission()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Initializes a new instance of the <xref href=&quot;System.Security.Permissions.GacIdentityPermission&quot;></xref> class."
  remarks: "This constructor creates a <xref:System.Security.Permissions.GacIdentityPermission> with a <xref:System.Security.Permissions.PermissionState> value of <xref:System.Security.Permissions.PermissionState>."
  example:
  - "The following code example shows the use of the GacIdentityPermission constructor.  \n  \n [!code-cpp[System.Security.Permissions.GacIdentityPermission#9](~/add/codesnippet/cpp/m-system.security.permis_24_1.cpp)]\n [!code-vb[System.Security.Permissions.GacIdentityPermission#9](~/add/codesnippet/visualbasic/m-system.security.permis_24_1.vb)]\n [!code-cs[System.Security.Permissions.GacIdentityPermission#9](~/add/codesnippet/csharp/m-system.security.permis_24_1.cs)]"
  syntax:
    content: public GacIdentityPermission ();
    parameters: []
  overload: System.Security.Permissions.GacIdentityPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.GacIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Security.Permissions.GacIdentityPermission
  langs:
  - csharp
  name: GacIdentityPermission(PermissionState)
  nameWithType: GacIdentityPermission.GacIdentityPermission(PermissionState)
  fullName: System.Security.Permissions.GacIdentityPermission.GacIdentityPermission(PermissionState)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Initializes a new instance of the <xref href=&quot;System.Security.Permissions.GacIdentityPermission&quot;></xref> class with fully restricted <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref>."
  remarks: >-
    > [!NOTE]

    >  In the .NET Framework versions 1.0 and 1.1, identity permissions cannot have an <xref:System.Security.Permissions.PermissionState> permission state value. Starting with the .NET Framework version 2.0, identity permissions can have any permission state value. This means that in 2.0 and later versions, identity permissions have the same behavior as permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface.
  example:
  - "The following code example shows the use of the GacIdentityPermission constructor.  \n  \n [!code-cpp[System.Security.Permissions.GacIdentityPermission#7](~/add/codesnippet/cpp/b35f448c-27ac-4fe2-9d04-_1.cpp)]\n [!code-vb[System.Security.Permissions.GacIdentityPermission#7](~/add/codesnippet/visualbasic/b35f448c-27ac-4fe2-9d04-_1.vb)]\n [!code-cs[System.Security.Permissions.GacIdentityPermission#7](~/add/codesnippet/csharp/b35f448c-27ac-4fe2-9d04-_1.cs)]"
  syntax:
    content: public GacIdentityPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "One of the <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref> values."
  overload: System.Security.Permissions.GacIdentityPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>state</code> is not a valid <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref> value."
  platform:
  - net462
- uid: System.Security.Permissions.GacIdentityPermission.Copy
  id: Copy
  parent: System.Security.Permissions.GacIdentityPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: GacIdentityPermission.Copy()
  fullName: System.Security.Permissions.GacIdentityPermission.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Creates and returns an identical copy of the current permission."
  remarks: "A copy of a permission represents the same access to resources as the original permission."
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "A copy of the current permission."
  overload: System.Security.Permissions.GacIdentityPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.GacIdentityPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.GacIdentityPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: GacIdentityPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.GacIdentityPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Creates a permission from an XML encoding."
  remarks: "The FromXml method creates a <xref:System.Security.Permissions.GacIdentityPermission> from an XML encoding defined by a <xref:System.Security.SecurityElement> object. Use the <xref:System.Security.Permissions.GacIdentityPermission.ToXml%2A> method to XML-encode the <xref:System.Security.Permissions.GacIdentityPermission>, including state information."
  syntax:
    content: public override void FromXml (System.Security.SecurityElement securityElement);
    parameters:
    - id: securityElement
      type: System.Security.SecurityElement
      description: "A <xref href=&quot;System.Security.SecurityElement&quot;></xref> that contains the XML encoding to use to create the permission."
  overload: System.Security.Permissions.GacIdentityPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>securityElement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>securityElement</code> is not a valid permission element.       -or-       The version number of <code>securityElement</code> is not valid."
  platform:
  - net462
- uid: System.Security.Permissions.GacIdentityPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.GacIdentityPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: GacIdentityPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.GacIdentityPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Creates and returns a permission that is the intersection of the current permission and the specified permission."
  remarks: "The intersection of two permissions is a permission that describes the set of operations they both describe in common. Only a demand that passes both original permissions will pass the intersection.       A <xref:System.Security.Permissions.GacIdentityPermission> only supports set operations (the <xref:System.Security.Permissions.GacIdentityPermission.IsSubsetOf%2A>, Intersect, and <xref:System.Security.Permissions.GacIdentityPermission.Union%2A> methods) when the current permission is equal to the specified permission."
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "A permission to intersect with the current permission. It must be of the same type as the current permission."
    return:
      type: System.Security.IPermission
      description: "A new permission that represents the intersection of the current permission and the specified permission. The new permission is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the intersection is empty."
  overload: System.Security.Permissions.GacIdentityPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code> is not <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> and is not of the same type as the current permission."
  platform:
  - net462
- uid: System.Security.Permissions.GacIdentityPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.GacIdentityPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: GacIdentityPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.GacIdentityPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Indicates whether the current permission is a subset of the specified permission."
  remarks: "The current permission is a subset of the specified permission if the current permission represents a set of operations that is wholly contained by the specified permission. If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.       A <xref:System.Security.Permissions.GacIdentityPermission> only supports set operations (the IsSubsetOf, <xref:System.Security.Permissions.GacIdentityPermission.Intersect%2A>, and <xref:System.Security.Permissions.GacIdentityPermission.Union%2A> methods) when the current permission is equal to the specified permission."
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "A permission object to test for the subset relationship. The permission must be of the same type as the current permission."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the current permission is a subset of the specified permission; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Permissions.GacIdentityPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code> is not <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> and is not of the same type as the current permission."
  platform:
  - net462
- uid: System.Security.Permissions.GacIdentityPermission.ToXml
  id: ToXml
  parent: System.Security.Permissions.GacIdentityPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: GacIdentityPermission.ToXml()
  fullName: System.Security.Permissions.GacIdentityPermission.ToXml()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Creates an XML encoding of the permission and its current state."
  remarks: "Use the <xref:System.Security.Permissions.GacIdentityPermission.FromXml%2A> method to create a <xref:System.Security.Permissions.GacIdentityPermission> from a <xref:System.Security.SecurityElement>."
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "A <xref href=&quot;System.Security.SecurityElement&quot;></xref> that represents the XML encoding of the permission, including any state information."
  overload: System.Security.Permissions.GacIdentityPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.GacIdentityPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Security.Permissions.GacIdentityPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: GacIdentityPermission.Union(IPermission)
  fullName: System.Security.Permissions.GacIdentityPermission.Union(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Creates and returns a permission that is the union of the current permission and the specified permission."
  remarks: "The result of a call to the Union method is a permission that includes all the operations represented by both the current permission and the specified permission. Any demand that passes either permission passes their union.       A <xref:System.Security.Permissions.GacIdentityPermission> only supports set operations (the <xref:System.Security.Permissions.GacIdentityPermission.IsSubsetOf%2A>, <xref:System.Security.Permissions.GacIdentityPermission.Intersect%2A>, and Union methods) when the current permission is equal to the specified permission."
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "A permission to combine with the current permission. It must be of the same type as the current permission."
    return:
      type: System.Security.IPermission
      description: "A new permission that represents the union of the current permission and the specified permission."
  overload: System.Security.Permissions.GacIdentityPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code> is not <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> and is not of the same type as the current permission."
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Permissions.GacIdentityPermission.#ctor
  parent: System.Security.Permissions.GacIdentityPermission
  isExternal: false
  name: GacIdentityPermission()
  nameWithType: GacIdentityPermission.GacIdentityPermission()
  fullName: System.Security.Permissions.GacIdentityPermission.GacIdentityPermission()
- uid: System.Security.Permissions.GacIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Security.Permissions.GacIdentityPermission
  isExternal: false
  name: GacIdentityPermission(PermissionState)
  nameWithType: GacIdentityPermission.GacIdentityPermission(PermissionState)
  fullName: System.Security.Permissions.GacIdentityPermission.GacIdentityPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Security.Permissions.GacIdentityPermission.Copy
  parent: System.Security.Permissions.GacIdentityPermission
  isExternal: false
  name: Copy()
  nameWithType: GacIdentityPermission.Copy()
  fullName: System.Security.Permissions.GacIdentityPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.GacIdentityPermission.FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.GacIdentityPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: GacIdentityPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.GacIdentityPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Permissions.GacIdentityPermission.Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.GacIdentityPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: GacIdentityPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.GacIdentityPermission.Intersect(IPermission)
- uid: System.Security.Permissions.GacIdentityPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.GacIdentityPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: GacIdentityPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.GacIdentityPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.GacIdentityPermission.ToXml
  parent: System.Security.Permissions.GacIdentityPermission
  isExternal: false
  name: ToXml()
  nameWithType: GacIdentityPermission.ToXml()
  fullName: System.Security.Permissions.GacIdentityPermission.ToXml()
- uid: System.Security.Permissions.GacIdentityPermission.Union(System.Security.IPermission)
  parent: System.Security.Permissions.GacIdentityPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: GacIdentityPermission.Union(IPermission)
  fullName: System.Security.Permissions.GacIdentityPermission.Union(IPermission)
- uid: System.Security.Permissions.GacIdentityPermission.#ctor*
  parent: System.Security.Permissions.GacIdentityPermission
  isExternal: false
  name: GacIdentityPermission
  nameWithType: GacIdentityPermission.GacIdentityPermission
- uid: System.Security.Permissions.GacIdentityPermission.Copy*
  parent: System.Security.Permissions.GacIdentityPermission
  isExternal: false
  name: Copy
  nameWithType: GacIdentityPermission.Copy
- uid: System.Security.Permissions.GacIdentityPermission.FromXml*
  parent: System.Security.Permissions.GacIdentityPermission
  isExternal: false
  name: FromXml
  nameWithType: GacIdentityPermission.FromXml
- uid: System.Security.Permissions.GacIdentityPermission.Intersect*
  parent: System.Security.Permissions.GacIdentityPermission
  isExternal: false
  name: Intersect
  nameWithType: GacIdentityPermission.Intersect
- uid: System.Security.Permissions.GacIdentityPermission.IsSubsetOf*
  parent: System.Security.Permissions.GacIdentityPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: GacIdentityPermission.IsSubsetOf
- uid: System.Security.Permissions.GacIdentityPermission.ToXml*
  parent: System.Security.Permissions.GacIdentityPermission
  isExternal: false
  name: ToXml
  nameWithType: GacIdentityPermission.ToXml
- uid: System.Security.Permissions.GacIdentityPermission.Union*
  parent: System.Security.Permissions.GacIdentityPermission
  isExternal: false
  name: Union
  nameWithType: GacIdentityPermission.Union
