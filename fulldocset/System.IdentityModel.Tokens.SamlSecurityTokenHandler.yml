### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  id: SamlSecurityTokenHandler
  children:
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.#ctor
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.#ctor(System.IdentityModel.Tokens.SamlSecurityTokenRequirement)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.AddDelegateToAttributes(System.Security.Claims.ClaimsIdentity,System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute},System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.Assertion
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.BearerConfirmationMethod
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanValidateToken
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanWriteToken
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CertificateValidator
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CollectAttributeValues(System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute})
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAdvice(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAssertion(System.String,System.IdentityModel.Tokens.SamlConditions,System.IdentityModel.Tokens.SamlAdvice,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement})
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttribute(System.Security.Claims.Claim,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttributeStatement(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.ClaimsIdentity,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAuthenticationStatement(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.AuthenticationInformation,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateClaims(System.IdentityModel.Tokens.SamlSecurityToken)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateConditions(System.IdentityModel.Protocols.WSTrust.Lifetime,System.String,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSamlSubject(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateStatements(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateWindowsIdentity(System.String)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateXmlStringFromAttributes(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAttribute})
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.DenormalizeAuthenticationType(System.String)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.FindUpn(System.Security.Claims.ClaimsIdentity)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetEncryptingCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetSigningCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime(System.IdentityModel.Tokens.SamlSecurityToken)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenTypeIdentifiers
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.KeyInfoSerializer
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.Namespace
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.NormalizeAuthenticationType(System.String)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAttributeStatement(System.IdentityModel.Tokens.SamlAttributeStatement,System.Security.Claims.ClaimsIdentity,System.String)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthenticationStatement(System.IdentityModel.Tokens.SamlAuthenticationStatement,System.Security.Claims.ClaimsIdentity,System.String)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthorizationDecisionStatement(System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement,System.Security.Claims.ClaimsIdentity,System.String)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessSamlSubject(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.ClaimsIdentity,System.String)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessStatement(System.Collections.Generic.IList{System.IdentityModel.Tokens.SamlStatement},System.Security.Claims.ClaimsIdentity,System.String)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAction(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAdvice(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAssertion(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttribute(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeStatement(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeValue(System.Xml.XmlReader,System.IdentityModel.Tokens.SamlAttribute)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAudienceRestrictionCondition(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthenticationStatement(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorityBinding(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorizationDecisionStatement(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadCondition(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadConditions(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadDoNotCacheCondition(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadEvidence(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSigningKeyInfo(System.Xml.XmlReader,System.IdentityModel.Tokens.SamlAssertion)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadStatement(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubject(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubjectKeyInfo(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveIssuerToken(System.IdentityModel.Tokens.SamlAssertion,System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveSubjectKeyIdentifier(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenRequirement
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.SetDelegateFromAttribute(System.IdentityModel.Tokens.SamlAttribute,System.Security.Claims.ClaimsIdentity,System.String)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.TokenType
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.TryResolveIssuerToken(System.IdentityModel.Tokens.SamlAssertion,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Tokens.SecurityToken@)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.UnspecifiedAuthenticationMethod
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateConditions(System.IdentityModel.Tokens.SamlConditions,System.Boolean)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAction(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAction)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAdvice(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAdvice)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAssertion(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAssertion)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttribute(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAttribute)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAttributeStatement)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeValue(System.Xml.XmlWriter,System.String,System.IdentityModel.Tokens.SamlAttribute)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAudienceRestrictionCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAudienceRestrictionCondition)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthenticationStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthenticationStatement)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorityBinding(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthorityBinding)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorizationDecisionStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlCondition)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteConditions(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlConditions)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteDoNotCacheCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlDoNotCacheCondition)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteEvidence(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlEvidence)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSigningKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlStatement)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubject(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlSubject)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubjectKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  - System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  langs:
  - csharp
  name: SamlSecurityTokenHandler
  nameWithType: SamlSecurityTokenHandler
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  type: Class
  summary: "Represents a security token handler that creates security tokens from SAML 1.1 Assertions."
  remarks: "The SamlSecurityTokenHandler class serializes and deserializes security tokens backed by SAML 1.1 Assertions into <xref:System.IdentityModel.Tokens.SamlSecurityToken> objects. Security token handlers are responsible for creating, reading, writing, and validating tokens.       You can configure a security token service (STS) or relying party (RP) application to process SAML 1.1 Assertion-backed security tokens by adding an instance of the SamlSecurityTokenHandler class to the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection> object configured for the service (or application). This can be done either programmatically or in the configuration file. The handler itself is configured from the configuration specified for the collection through the collection’s <xref:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Configuration%2A> property when it is added to the collection. While it is possible to configure the handler individually by setting its <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property, this is not normally necessary; however, if the handler must be configured individually, the property should be set after the handler is added to the collection.       For many scenarios, the SamlSecurityTokenHandler class can be used as-is; however, the class provides many extension points through the methods it exposes. By deriving from the SamlSecurityTokenHandler and overriding specific methods, you can modify the functionality of the token processing provided in the default implementation, or you can add processing for extensions to the SAML Assertion specification that may be needed in some custom scenarios."
  syntax:
    content: 'public class SamlSecurityTokenHandler : System.IdentityModel.Tokens.SecurityTokenHandler'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityTokenHandler
  implements: []
  inheritedMembers:
  - System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)
  - System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.SecurityTokenHandler.Configuration
  - System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection
  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)
  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)
  - System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: SamlSecurityTokenHandler()
  nameWithType: SamlSecurityTokenHandler.SamlSecurityTokenHandler()
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenHandler()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Initializes a new instance of the <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityTokenHandler&quot;></xref> class with default security token requirements."
  remarks: "The <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenRequirement%2A> property is set to an instance of <xref:System.IdentityModel.Tokens.SamlSecurityTokenRequirement> that is created with the default constructor."
  syntax:
    content: public SamlSecurityTokenHandler ();
    parameters: []
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.#ctor(System.IdentityModel.Tokens.SamlSecurityTokenRequirement)
  id: '#ctor(System.IdentityModel.Tokens.SamlSecurityTokenRequirement)'
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: SamlSecurityTokenHandler(SamlSecurityTokenRequirement)
  nameWithType: SamlSecurityTokenHandler.SamlSecurityTokenHandler(SamlSecurityTokenRequirement)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenHandler(SamlSecurityTokenRequirement)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Initializes a new instance of the <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityTokenHandler&quot;></xref> class with the specified security token requirements."
  syntax:
    content: public SamlSecurityTokenHandler (System.IdentityModel.Tokens.SamlSecurityTokenRequirement samlSecurityTokenRequirement);
    parameters:
    - id: samlSecurityTokenRequirement
      type: System.IdentityModel.Tokens.SamlSecurityTokenRequirement
      description: "The <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityTokenRequirement&quot;></xref> to be used by this instance when validating tokens. Sets the <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenRequirement*> property."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>samlSecurityTokenRequirement</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.AddDelegateToAttributes(System.Security.Claims.ClaimsIdentity,System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute},System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: AddDelegateToAttributes(System.Security.Claims.ClaimsIdentity,System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute},System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: AddDelegateToAttributes(ClaimsIdentity,ICollection<SamlAttribute>,SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.AddDelegateToAttributes(ClaimsIdentity,ICollection<SamlAttribute>,SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.AddDelegateToAttributes(ClaimsIdentity,ICollection<SamlAttribute>,SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Adds all of the delegates associated with the ActAs subject into the attribute collection."
  syntax:
    content: protected virtual void AddDelegateToAttributes (System.Security.Claims.ClaimsIdentity subject, System.Collections.Generic.ICollection<System.IdentityModel.Tokens.SamlAttribute> attributes, System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: subject
      type: System.Security.Claims.ClaimsIdentity
      description: "The delegate of this <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;></xref> object will be serialized into a <xref href=&quot;System.IdentityModel.Tokens.SamlAttribute&quot;></xref>. The delegate is specified by the <xref:System.Security.Claims.ClaimsIdentity.Actor*> property."
    - id: attributes
      type: System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute}
      description: "The attribute collection to which the ActAs token will be serialized."
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "The token descriptor."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.AddDelegateToAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subject</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>tokenDescriptor</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.Assertion
  id: Assertion
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: Assertion
  nameWithType: SamlSecurityTokenHandler.Assertion
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.Assertion
  type: Field
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "urn:oasis:names:tc:SAML:1.0:assertion"
  syntax:
    content: public const string Assertion;
    return:
      type: System.String
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.BearerConfirmationMethod
  id: BearerConfirmationMethod
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: BearerConfirmationMethod
  nameWithType: SamlSecurityTokenHandler.BearerConfirmationMethod
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.BearerConfirmationMethod
  type: Field
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "urn:oasis:names:tc:SAML:1.0:cm:bearer"
  syntax:
    content: public const string BearerConfirmationMethod;
    return:
      type: System.String
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  id: CanReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CanReadToken(XmlReader)
  nameWithType: SamlSecurityTokenHandler.CanReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanReadToken(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Indicates whether the current XML element can be read as a token of the type handled by this instance."
  syntax:
    content: public override bool CanReadToken (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "An XML reader positioned at a start element. The reader should not be advanced."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadToken*> method can read the element; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanReadToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanValidateToken
  id: CanValidateToken
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CanValidateToken
  nameWithType: SamlSecurityTokenHandler.CanValidateToken
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanValidateToken
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets a value that indicates if this handler can validate tokens of type <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;></xref>."
  remarks: "This method overrides the base class method and always returns `true`."
  syntax:
    content: public override bool CanValidateToken { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, which indicates that the handler can validate tokens of type <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;></xref>."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanValidateToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanWriteToken
  id: CanWriteToken
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CanWriteToken
  nameWithType: SamlSecurityTokenHandler.CanWriteToken
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanWriteToken
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets a value that indicates whether this handler can serialize tokens of type <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;></xref>."
  remarks: "This method overrides the base class method and always returns `true`."
  syntax:
    content: public override bool CanWriteToken { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>; which indicates that the handler can serialize tokens of type <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;></xref>."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanWriteToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CertificateValidator
  id: CertificateValidator
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CertificateValidator
  nameWithType: SamlSecurityTokenHandler.CertificateValidator
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CertificateValidator
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets or sets the X.509 certificate validator that is used by the current instance to validate X.509 certificates."
  syntax:
    content: public System.IdentityModel.Selectors.X509CertificateValidator CertificateValidator { get; set; }
    return:
      type: System.IdentityModel.Selectors.X509CertificateValidator
      description: "An <xref href=&quot;System.IdentityModel.Selectors.X509CertificateValidator&quot;></xref> that represents the validator."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CertificateValidator*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CollectAttributeValues(System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute})
  id: CollectAttributeValues(System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute})
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CollectAttributeValues(ICollection<SamlAttribute>)
  nameWithType: SamlSecurityTokenHandler.CollectAttributeValues(ICollection<SamlAttribute>)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CollectAttributeValues(ICollection<SamlAttribute>)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Collects attributes with a common claim type, claim value type, and original issuer into a single attribute with multiple values."
  syntax:
    content: protected virtual System.Collections.Generic.ICollection<System.IdentityModel.Tokens.SamlAttribute> CollectAttributeValues (System.Collections.Generic.ICollection<System.IdentityModel.Tokens.SamlAttribute> attributes);
    parameters:
    - id: attributes
      type: System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute}
      description: "A collection of type <xref href=&quot;System.IdentityModel.Tokens.SamlAttribute&quot;></xref> that contains the attributes generated from claims."
    return:
      type: System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute}
      description: "A collection of <xref href=&quot;System.IdentityModel.Tokens.SamlAttribute&quot;></xref> that contains attributes derived from the input collection. Attributes in the input collection that share a common claim type, claim value, and original issuer with other attributes are consolidated into a single attribute with multiple values in the output collection. Attributes in the input collection that do not share claim type, claim value, or original issuer with other attributes appear unaltered in the output collection."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CollectAttributeValues*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAdvice(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: CreateAdvice(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CreateAdvice(SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.CreateAdvice(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAdvice(SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "When overridden in a derived class, creates a <xref href=&quot;System.IdentityModel.Tokens.SamlAdvice&quot;></xref> object for the assertion."
  remarks: "By default, this method returns `null`."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlAdvice CreateAdvice (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "The token descriptor."
    return:
      type: System.IdentityModel.Tokens.SamlAdvice
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlAdvice&quot;></xref> object. The default is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAdvice*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAssertion(System.String,System.IdentityModel.Tokens.SamlConditions,System.IdentityModel.Tokens.SamlAdvice,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement})
  id: CreateAssertion(System.String,System.IdentityModel.Tokens.SamlConditions,System.IdentityModel.Tokens.SamlAdvice,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement})
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CreateAssertion(String,SamlConditions,SamlAdvice,IEnumerable<SamlStatement>)
  nameWithType: SamlSecurityTokenHandler.CreateAssertion(String,SamlConditions,SamlAdvice,IEnumerable<SamlStatement>)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAssertion(String,SamlConditions,SamlAdvice,IEnumerable<SamlStatement>)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Creates a <xref href=&quot;System.IdentityModel.Tokens.SamlAssertion&quot;></xref> object by using the specified issuer, conditions, advice and statements. You can override this method to customize the parameters used to create the assertion."
  remarks: "A unique random id is created for the assertion and the <xref:System.IdentityModel.Tokens.SamlAssertion.AssertionId%2A> property is set to this value. The <xref:System.IdentityModel.Tokens.SamlAssertion.IssueInstant%2A> is set to <xref:System.DateTime.UtcNow%2A>."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlAssertion CreateAssertion (string issuer, System.IdentityModel.Tokens.SamlConditions conditions, System.IdentityModel.Tokens.SamlAdvice advice, System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SamlStatement> statements);
    parameters:
    - id: issuer
      type: System.String
      description: "The issuer of the assertion."
    - id: conditions
      type: System.IdentityModel.Tokens.SamlConditions
      description: "The <xref href=&quot;System.IdentityModel.Tokens.SamlConditions&quot;></xref> to add to the assertion."
    - id: advice
      type: System.IdentityModel.Tokens.SamlAdvice
      description: "The <xref href=&quot;System.IdentityModel.Tokens.SamlAdvice&quot;></xref> to add to the assertion."
    - id: statements
      type: System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement}
      description: "The collection of <xref href=&quot;System.IdentityModel.Tokens.SamlStatement&quot;></xref> to add to the assertion."
    return:
      type: System.IdentityModel.Tokens.SamlAssertion
      description: "The SAML assertion that was created."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAssertion*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttribute(System.Security.Claims.Claim,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: CreateAttribute(System.Security.Claims.Claim,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CreateAttribute(Claim,SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.CreateAttribute(Claim,SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttribute(Claim,SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Creates a <xref href=&quot;System.IdentityModel.Tokens.SamlAttribute&quot;></xref> object from a claim."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlAttribute CreateAttribute (System.Security.Claims.Claim claim, System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: claim
      type: System.Security.Claims.Claim
      description: "The <xref href=&quot;System.Security.Claims.Claim&quot;></xref> from which to generate the SAML Attribute."
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "The token descriptor."
    return:
      type: System.IdentityModel.Tokens.SamlAttribute
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlAttribute&quot;></xref> that contains the converted claim."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttribute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>claim</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttributeStatement(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.ClaimsIdentity,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: CreateAttributeStatement(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.ClaimsIdentity,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CreateAttributeStatement(SamlSubject,ClaimsIdentity,SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.CreateAttributeStatement(SamlSubject,ClaimsIdentity,SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttributeStatement(SamlSubject,ClaimsIdentity,SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Creates a <xref href=&quot;System.IdentityModel.Tokens.SamlAttributeStatement&quot;></xref> object from a token descriptor."
  remarks: "This method may return `null` if the token descriptor does not contain any subject or the subject does not have any claims."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlAttributeStatement CreateAttributeStatement (System.IdentityModel.Tokens.SamlSubject samlSubject, System.Security.Claims.ClaimsIdentity subject, System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: samlSubject
      type: System.IdentityModel.Tokens.SamlSubject
      description: "The <xref href=&quot;System.IdentityModel.Tokens.SamlSubject&quot;></xref> to use in the <xref href=&quot;System.IdentityModel.Tokens.SamlAttributeStatement&quot;></xref> that is created."
    - id: subject
      type: System.Security.Claims.ClaimsIdentity
      description: "The <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;></xref> object that contains claims which will be converted to SAML Attributes."
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "The token descriptor."
    return:
      type: System.IdentityModel.Tokens.SamlAttributeStatement
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlAttributeStatement&quot;></xref> that contains the converted claims."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttributeStatement*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAuthenticationStatement(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.AuthenticationInformation,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: CreateAuthenticationStatement(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.AuthenticationInformation,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CreateAuthenticationStatement(SamlSubject,AuthenticationInformation,SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.CreateAuthenticationStatement(SamlSubject,AuthenticationInformation,SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAuthenticationStatement(SamlSubject,AuthenticationInformation,SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Creates a SAML 1.1 authentication statement from the specified authentication information."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlAuthenticationStatement CreateAuthenticationStatement (System.IdentityModel.Tokens.SamlSubject samlSubject, System.Security.Claims.AuthenticationInformation authInfo, System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: samlSubject
      type: System.IdentityModel.Tokens.SamlSubject
      description: "The SamlSubject of the statement."
    - id: authInfo
      type: System.Security.Claims.AuthenticationInformation
      description: "The <xref href=&quot;System.Security.Claims.AuthenticationInformation&quot;></xref> from which to generate the SAML authentication statement."
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "Contains all the other information that is used in token issuance."
    return:
      type: System.IdentityModel.Tokens.SamlAuthenticationStatement
      description: "The SAML authentication statement that was created."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAuthenticationStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>samlSubject</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>tokenDescriptor</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateClaims(System.IdentityModel.Tokens.SamlSecurityToken)
  id: CreateClaims(System.IdentityModel.Tokens.SamlSecurityToken)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CreateClaims(SamlSecurityToken)
  nameWithType: SamlSecurityTokenHandler.CreateClaims(SamlSecurityToken)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateClaims(SamlSecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Creates claims from a SAML 1.1 token."
  syntax:
    content: protected virtual System.Security.Claims.ClaimsIdentity CreateClaims (System.IdentityModel.Tokens.SamlSecurityToken samlSecurityToken);
    parameters:
    - id: samlSecurityToken
      type: System.IdentityModel.Tokens.SamlSecurityToken
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;></xref> that represents the security token from which to create the claims."
    return:
      type: System.Security.Claims.ClaimsIdentity
      description: "A <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;></xref> that contains the claims extracted from the token."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateClaims*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>samlSecurityToken</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref:System.IdentityModel.Tokens.SamlSecurityToken.Assertion*> property of <code>samlSecurityToken</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The handler is not configured or an issuer name registry is not configured for the handler. (The <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.Configuration*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or is set to a <xref href=&quot;System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration&quot;></xref> with an <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry*> property that is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IdentityModel.Tokens.SecurityTokenException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenException
    description: "The issuer name returned by the configured issuer name registry for the security token (<code>samlSecurityToken</code>) is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or empty."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateConditions(System.IdentityModel.Protocols.WSTrust.Lifetime,System.String,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: CreateConditions(System.IdentityModel.Protocols.WSTrust.Lifetime,System.String,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CreateConditions(Lifetime,String,SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.CreateConditions(Lifetime,String,SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateConditions(Lifetime,String,SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Creates the conditions for the assertion."
  remarks: "Generally, conditions should be included in assertions to limit the impact of misuse of the assertion. Specifying the NotBefore and NotOnOrAfter conditions can limit the period of vulnerability in the case of a compromised assertion. The AudienceRestrictionCondition can be used to explicitly state the intended relying party or parties of the assertion, which coupled with appropriate audience restriction enforcement at relying parties can help to mitigate spoofing attacks between relying parties.       The default implementation creates NotBefore and NotOnOrAfter conditions based on the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime%2A> property of the `tokenDescriptor`. It will also generate an AudienceRestrictionCondition limiting consumption of the assertion to the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress%2A> property of the `tokenDescriptor`."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlConditions CreateConditions (System.IdentityModel.Protocols.WSTrust.Lifetime tokenLifetime, string relyingPartyAddress, System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: tokenLifetime
      type: System.IdentityModel.Protocols.WSTrust.Lifetime
      description: "The lifetime of the token."
    - id: relyingPartyAddress
      type: System.String
      description: "The endpoint address for which the token is created. The address is modeled as an AudienceRestriction condition."
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "The token descriptor."
    return:
      type: System.IdentityModel.Tokens.SamlConditions
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlConditions&quot;></xref> object that contains the conditions for the assertion."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateConditions*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSamlSubject(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: CreateSamlSubject(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CreateSamlSubject(SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.CreateSamlSubject(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSamlSubject(SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Creates a SAML 1.1 subject for the assertion."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlSubject CreateSamlSubject (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "The security token descriptor from which to create the subject."
    return:
      type: System.IdentityModel.Tokens.SamlSubject
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlSubject&quot;></xref> that represents the subject of the assertion."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSamlSubject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>tokenDescriptor</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)
  id: CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CreateSecurityTokenReference(SecurityToken,Boolean)
  nameWithType: SamlSecurityTokenHandler.CreateSecurityTokenReference(SecurityToken,Boolean)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSecurityTokenReference(SecurityToken,Boolean)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Creates the security token reference when the token is not attached to the message."
  syntax:
    content: public override System.IdentityModel.Tokens.SecurityKeyIdentifierClause CreateSecurityTokenReference (System.IdentityModel.Tokens.SecurityToken token, bool attached);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "The SAML token."
    - id: attached
      type: System.Boolean
      description: "A value that indicates whether an attached or unattached reference should be created."
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;></xref> that represents the token reference. (An instance of <xref href=&quot;System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause&quot;></xref> is actually returned.)"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSecurityTokenReference*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>token</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateStatements(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: CreateStatements(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CreateStatements(SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.CreateStatements(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateStatements(SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Creates SAML 1.1 statements to be included in the assertion."
  remarks: "Statements are not required in a SAML 1.1 assertion. This method may return an empty collection."
  syntax:
    content: protected virtual System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SamlStatement> CreateStatements (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "The token descriptor from which to create the statements."
    return:
      type: System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement}
      description: "An enumeration of <xref href=&quot;System.IdentityModel.Tokens.SamlStatement&quot;></xref> that contains the statements."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateStatements*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>tokenDescriptor</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CreateToken(SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.CreateToken(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateToken(SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Creates a security token based on a token descriptor."
  syntax:
    content: public override System.IdentityModel.Tokens.SecurityToken CreateToken (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "The token descriptor from which to create the security token."
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;></xref> that represents the SAML 1.1 security token. (The token returned is actually an instance of <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;></xref>.)"
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>tokenDescriptor</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateWindowsIdentity(System.String)
  id: CreateWindowsIdentity(System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CreateWindowsIdentity(String)
  nameWithType: SamlSecurityTokenHandler.CreateWindowsIdentity(String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateWindowsIdentity(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Creates a <xref href=&quot;System.Security.Principal.WindowsIdentity&quot;></xref> object using the specified User Principal Name (UPN)."
  syntax:
    content: protected virtual System.Security.Principal.WindowsIdentity CreateWindowsIdentity (string upn);
    parameters:
    - id: upn
      type: System.String
      description: "The UPN to use to create the identity."
    return:
      type: System.Security.Principal.WindowsIdentity
      description: "The Windows identity that was created."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateWindowsIdentity*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>upn</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or an empty string."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateXmlStringFromAttributes(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAttribute})
  id: CreateXmlStringFromAttributes(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAttribute})
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: CreateXmlStringFromAttributes(IEnumerable<SamlAttribute>)
  nameWithType: SamlSecurityTokenHandler.CreateXmlStringFromAttributes(IEnumerable<SamlAttribute>)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateXmlStringFromAttributes(IEnumerable<SamlAttribute>)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Builds an XML formatted string from a collection of SAML 1.1 attributes that represent the Actor."
  remarks: "The string is of the form &quot;\\<Actor>\\<Attribute name, ns>\\<AttributeValue>...\\</AttributeValue>, ...\\</Attribute>...\\</Actor>&quot;"
  syntax:
    content: protected virtual string CreateXmlStringFromAttributes (System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SamlAttribute> attributes);
    parameters:
    - id: attributes
      type: System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAttribute}
      description: "An enumeration of type <xref href=&quot;System.IdentityModel.Tokens.SamlAttribute&quot;></xref> that contains the attributes."
    return:
      type: System.String
      description: "A well-formed XML string constructed using the attributes."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateXmlStringFromAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.DenormalizeAuthenticationType(System.String)
  id: DenormalizeAuthenticationType(System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: DenormalizeAuthenticationType(String)
  nameWithType: SamlSecurityTokenHandler.DenormalizeAuthenticationType(String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.DenormalizeAuthenticationType(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Returns the SAML11 authentication method identifier that matches the specified normalized value for a SAML authentication method."
  remarks: 'The DenormalizeAuthenticationType method returns the SAML11 authentication method identifier that matches the specified normalized URI. For example, if <xref:System.IdentityModel.Tokens.AuthenticationMethods.X509> is specified for `normalizedAuthenticationType`, the following URI is returned: `urn:oasis:names:tc:SAML:1.0:am:X509-PKI`. If a mapping does not exist for `normalizedAuthenticationType`, it is returned unaltered.'
  syntax:
    content: protected virtual string DenormalizeAuthenticationType (string normalizedAuthenticationType);
    parameters:
    - id: normalizedAuthenticationType
      type: System.String
      description: "The normalized value. One of the <xref href=&quot;System.IdentityModel.Tokens.AuthenticationMethods&quot;></xref> values."
    return:
      type: System.String
      description: "The SAML11 authentication method identifier (URI) that matches the specified normalized identifier. If no matching SAML11 authentication method is found, the <code>normalizedAuthenticationType</code> URI is returned unaltered."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.DenormalizeAuthenticationType*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)
  id: DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: DetectReplayedToken(SecurityToken)
  nameWithType: SamlSecurityTokenHandler.DetectReplayedToken(SecurityToken)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.DetectReplayedToken(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Throws an exception if the specified token already exists in the token replay cache; otherwise the token is added to the cache."
  remarks: "The default behavior is to only check bearer tokens (tokens that do not have keys). The token replay cache is the <xref:System.IdentityModel.Tokens.TokenReplayCache> object configured for this handler through the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.TokenReplayCache%2A> property of the <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration> object referenced through the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration%2A> property."
  syntax:
    content: protected override void DetectReplayedToken (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;></xref> that represents the SAML 1.1 security token (the token should be of type <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;></xref>) to be checked."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.DetectReplayedToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>token</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.TokenReplayCache*> property of the handler configuration (accessed through the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration*> property) is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>token</code> cannot be cast as an instance of <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;></xref>."
  - type: System.IdentityModel.Tokens.SecurityTokenValidationException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenValidationException
    description: "The ID of the assertion associated with the token is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or empty. (The <xref:System.IdentityModel.Tokens.SamlSecurityToken.Assertion*> property of the token references a <xref href=&quot;System.IdentityModel.Tokens.SamlAssertion&quot;></xref> that has an <xref:System.IdentityModel.Tokens.SamlAssertion.Id*> property that references a <xref:System.IdentityModel.Tokens.SamlId> with a <xref:System.IdentityModel.Tokens.SamlId.Value*> property that is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or empty.)"
  - type: System.IdentityModel.Tokens.SecurityTokenReplayDetectedException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException
    description: "The token already exists in the <xref href=&quot;System.IdentityModel.Tokens.TokenReplayCache&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.FindUpn(System.Security.Claims.ClaimsIdentity)
  id: FindUpn(System.Security.Claims.ClaimsIdentity)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: FindUpn(ClaimsIdentity)
  nameWithType: SamlSecurityTokenHandler.FindUpn(ClaimsIdentity)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.FindUpn(ClaimsIdentity)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Finds the UPN claim value in the specified <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;></xref> object for the purpose of mapping the identity to a <xref:System.Security.Claims.WindowsClaimsIdentity> object."
  syntax:
    content: protected virtual string FindUpn (System.Security.Claims.ClaimsIdentity claimsIdentity);
    parameters:
    - id: claimsIdentity
      type: System.Security.Claims.ClaimsIdentity
      description: "The claims identity object containing the desired UPN claim."
    return:
      type: System.String
      description: "A string that contains the UPN claim value found."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.FindUpn*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetEncryptingCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: GetEncryptingCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: GetEncryptingCredentials(SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.GetEncryptingCredentials(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetEncryptingCredentials(SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets the token encrypting credentials. Override this method to change the token encrypting credentials."
  remarks: "The default implementation retrieves the encrypting credentials from the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials%2A> property of the `tokenDescriptor`."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.EncryptingCredentials GetEncryptingCredentials (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "Retrieves some scope encrypting credentials from the Scope object."
    return:
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "An <xref:System.IdentityModel.SecurityTokenService.EncryptingCredentials> that represents the token encrypting credentials."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetEncryptingCredentials*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>tokenDescriptor</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IdentityModel.Tokens.SecurityTokenException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenException
    description: "The encrypting credentials retrieved from the token descriptor are asymmetric."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetSigningCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  id: GetSigningCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: GetSigningCredentials(SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.GetSigningCredentials(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetSigningCredentials(SecurityTokenDescriptor)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets the credentials for signing the assertion."
  remarks: "SAML2 assertions used as security tokens should be signed.       The default implementation uses the <xref:System.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials%2A> property of the `tokenDescriptor` to retrieve the credentials."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SigningCredentials GetSigningCredentials (System.IdentityModel.Tokens.SecurityTokenDescriptor tokenDescriptor);
    parameters:
    - id: tokenDescriptor
      type: System.IdentityModel.Tokens.SecurityTokenDescriptor
      description: "The token descriptor."
    return:
      type: System.IdentityModel.Tokens.SigningCredentials
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SigningCredentials&quot;></xref> that represents the credentials for signing the assertion."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetSigningCredentials*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>tokenDescriptor</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime(System.IdentityModel.Tokens.SamlSecurityToken)
  id: GetTokenReplayCacheEntryExpirationTime(System.IdentityModel.Tokens.SamlSecurityToken)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: GetTokenReplayCacheEntryExpirationTime(SamlSecurityToken)
  nameWithType: SamlSecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime(SamlSecurityToken)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime(SamlSecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Returns the time until which the token should be held in the token replay cache."
  remarks: "By default, this method returns the NotOnOrAfter of the SAML Condition if present.       If that value does not exist, it returns the NotOnOrAfter of the first SubjectConfirmationData.       This function will never return a value further from the current time (<xref:System.DateTime.Now%2A>) than Configuration.TokenReplayCacheExpirationPeriod."
  syntax:
    content: protected virtual DateTime GetTokenReplayCacheEntryExpirationTime (System.IdentityModel.Tokens.SamlSecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SamlSecurityToken
      description: "The token for which to return the expiration time."
    return:
      type: System.DateTime
      description: "A <xref:System.DateTime> that represents the expiration time."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>token</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenTypeIdentifiers
  id: GetTokenTypeIdentifiers
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: GetTokenTypeIdentifiers()
  nameWithType: SamlSecurityTokenHandler.GetTokenTypeIdentifiers()
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenTypeIdentifiers()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets the token type identifier(s) supported by this handler."
  syntax:
    content: public override string[] GetTokenTypeIdentifiers ();
    parameters: []
    return:
      type: System.String[]
      description: "An array of strings that contains the token type identifier(s) supported by this handler."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenTypeIdentifiers*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.KeyInfoSerializer
  id: KeyInfoSerializer
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: KeyInfoSerializer
  nameWithType: SamlSecurityTokenHandler.KeyInfoSerializer
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.KeyInfoSerializer
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets or sets the security token serializer that is used to serialize and deserialize key identifiers."
  remarks: "Serializes and deserializes <xref:System.IdentityModel.Tokens.SecurityKeyIdentifier> objects."
  syntax:
    content: public System.IdentityModel.Selectors.SecurityTokenSerializer KeyInfoSerializer { get; set; }
    return:
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenSerializer&quot;></xref> that represents the serializer."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.KeyInfoSerializer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "An attempt to set the value to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> occurs."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)
  id: LoadCustomConfiguration(System.Xml.XmlNodeList)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: LoadCustomConfiguration(XmlNodeList)
  nameWithType: SamlSecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Loads custom configuration from XML."
  syntax:
    content: public override void LoadCustomConfiguration (System.Xml.XmlNodeList customConfigElements);
    parameters:
    - id: customConfigElements
      type: System.Xml.XmlNodeList
      description: "An <xref href=&quot;System.Xml.XmlNodeList&quot;></xref> that specifies the SAML token authentication requirements."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.LoadCustomConfiguration*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>customConfigElements</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The configuration specified in <code>customConfigElements</code> is not valid."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.Namespace
  id: Namespace
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: Namespace
  nameWithType: SamlSecurityTokenHandler.Namespace
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.Namespace
  type: Field
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "urn:oasis:names:tc:SAML:1.0"
  syntax:
    content: public const string Namespace;
    return:
      type: System.String
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.NormalizeAuthenticationType(System.String)
  id: NormalizeAuthenticationType(System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: NormalizeAuthenticationType(String)
  nameWithType: SamlSecurityTokenHandler.NormalizeAuthenticationType(String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.NormalizeAuthenticationType(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Returns the normalized value that matches a SAML 1.1 authentication method identifier."
  remarks: "The NormalizeAuthenticationType method returns the <xref:System.IdentityModel.Tokens.AuthenticationMethods> value that matches the specified SAML11 authentication method identifier. For example, if `urn:oasis:names:tc:SAML:1.0:am:X509-PKI` is specified for `saml11AuthenticationMethod`, <xref:System.IdentityModel.Tokens.AuthenticationMethods.X509> is returned. If a mapping does not exist for `saml11AuthenticationMethod`, it is returned unaltered."
  syntax:
    content: protected virtual string NormalizeAuthenticationType (string saml11AuthenticationMethod);
    parameters:
    - id: saml11AuthenticationMethod
      type: System.String
      description: "The SAML 1.1 authentication method identifier (URI) to normalize."
    return:
      type: System.String
      description: "The normalized value, which is one of the <xref href=&quot;System.IdentityModel.Tokens.AuthenticationMethods&quot;></xref> values. If no matching value exists, <code>saml11AuthenticationMethod</code> is returned, unaltered."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.NormalizeAuthenticationType*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAttributeStatement(System.IdentityModel.Tokens.SamlAttributeStatement,System.Security.Claims.ClaimsIdentity,System.String)
  id: ProcessAttributeStatement(System.IdentityModel.Tokens.SamlAttributeStatement,System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ProcessAttributeStatement(SamlAttributeStatement,ClaimsIdentity,String)
  nameWithType: SamlSecurityTokenHandler.ProcessAttributeStatement(SamlAttributeStatement,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAttributeStatement(SamlAttributeStatement,ClaimsIdentity,String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Creates claims from a SAML 1.1 attribute statement and adds them to the specified subject."
  remarks: "The created claims are added to the subject."
  syntax:
    content: protected virtual void ProcessAttributeStatement (System.IdentityModel.Tokens.SamlAttributeStatement samlStatement, System.Security.Claims.ClaimsIdentity subject, string issuer);
    parameters:
    - id: samlStatement
      type: System.IdentityModel.Tokens.SamlAttributeStatement
      description: "The <xref href=&quot;System.IdentityModel.Tokens.SamlAttributeStatement&quot;></xref> from which the claims are created."
    - id: subject
      type: System.Security.Claims.ClaimsIdentity
      description: "The subject to which the claims are added."
    - id: issuer
      type: System.String
      description: "The issuer."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAttributeStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>samlStatement</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>subject</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthenticationStatement(System.IdentityModel.Tokens.SamlAuthenticationStatement,System.Security.Claims.ClaimsIdentity,System.String)
  id: ProcessAuthenticationStatement(System.IdentityModel.Tokens.SamlAuthenticationStatement,System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ProcessAuthenticationStatement(SamlAuthenticationStatement,ClaimsIdentity,String)
  nameWithType: SamlSecurityTokenHandler.ProcessAuthenticationStatement(SamlAuthenticationStatement,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthenticationStatement(SamlAuthenticationStatement,ClaimsIdentity,String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Creates claims from a SAML 1.1 authentication statement and adds them to the specified subject."
  syntax:
    content: protected virtual void ProcessAuthenticationStatement (System.IdentityModel.Tokens.SamlAuthenticationStatement samlStatement, System.Security.Claims.ClaimsIdentity subject, string issuer);
    parameters:
    - id: samlStatement
      type: System.IdentityModel.Tokens.SamlAuthenticationStatement
      description: "The <xref href=&quot;System.IdentityModel.Tokens.SamlAuthenticationStatement&quot;></xref> from which the claims are created."
    - id: subject
      type: System.Security.Claims.ClaimsIdentity
      description: "The subject to which the claims are added."
    - id: issuer
      type: System.String
      description: "The issuer."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthenticationStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>samlStatement</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>subject</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthorizationDecisionStatement(System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement,System.Security.Claims.ClaimsIdentity,System.String)
  id: ProcessAuthorizationDecisionStatement(System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement,System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ProcessAuthorizationDecisionStatement(SamlAuthorizationDecisionStatement,ClaimsIdentity,String)
  nameWithType: SamlSecurityTokenHandler.ProcessAuthorizationDecisionStatement(SamlAuthorizationDecisionStatement,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthorizationDecisionStatement(SamlAuthorizationDecisionStatement,ClaimsIdentity,String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Creates claims from a SAML 1.1 authorization decision statement and adds them to the specified subject."
  remarks: "The default implementation does nothing."
  syntax:
    content: protected virtual void ProcessAuthorizationDecisionStatement (System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement samlStatement, System.Security.Claims.ClaimsIdentity subject, string issuer);
    parameters:
    - id: samlStatement
      type: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
      description: "The <xref href=&quot;System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement&quot;></xref> from which the claims are created."
    - id: subject
      type: System.Security.Claims.ClaimsIdentity
      description: "The subject to which the claims are added."
    - id: issuer
      type: System.String
      description: "The issuer."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthorizationDecisionStatement*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessSamlSubject(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.ClaimsIdentity,System.String)
  id: ProcessSamlSubject(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ProcessSamlSubject(SamlSubject,ClaimsIdentity,String)
  nameWithType: SamlSecurityTokenHandler.ProcessSamlSubject(SamlSubject,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessSamlSubject(SamlSubject,ClaimsIdentity,String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Creates claims from the SAML 1.1 subject and adds them to the specified subject."
  syntax:
    content: protected virtual void ProcessSamlSubject (System.IdentityModel.Tokens.SamlSubject samlSubject, System.Security.Claims.ClaimsIdentity subject, string issuer);
    parameters:
    - id: samlSubject
      type: System.IdentityModel.Tokens.SamlSubject
      description: "The <xref href=&quot;System.IdentityModel.Tokens.SamlSubject&quot;></xref> from which the claims are created."
    - id: subject
      type: System.Security.Claims.ClaimsIdentity
      description: "The subject to which the claims are added."
    - id: issuer
      type: System.String
      description: "The issuer."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessSamlSubject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>samlSubject</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessStatement(System.Collections.Generic.IList{System.IdentityModel.Tokens.SamlStatement},System.Security.Claims.ClaimsIdentity,System.String)
  id: ProcessStatement(System.Collections.Generic.IList{System.IdentityModel.Tokens.SamlStatement},System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ProcessStatement(IList<SamlStatement>,ClaimsIdentity,String)
  nameWithType: SamlSecurityTokenHandler.ProcessStatement(IList<SamlStatement>,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessStatement(IList<SamlStatement>,ClaimsIdentity,String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Creates claims from a collection of SAML 1.1 statements and adds them to the specified subject."
  syntax:
    content: protected virtual void ProcessStatement (System.Collections.Generic.IList<System.IdentityModel.Tokens.SamlStatement> statements, System.Security.Claims.ClaimsIdentity subject, string issuer);
    parameters:
    - id: statements
      type: System.Collections.Generic.IList{System.IdentityModel.Tokens.SamlStatement}
      description: "The SAML statements from which the claims are created."
    - id: subject
      type: System.Security.Claims.ClaimsIdentity
      description: "The subject to which the claims are added."
    - id: issuer
      type: System.String
      description: "The issuer."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>statements</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAction(System.Xml.XmlReader)
  id: ReadAction(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadAction(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAction(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAction(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Reads the &lt;saml:Action&gt; element."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlAction ReadAction (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "An <xref:System.Xml.XmlReader> positioned at the element to read."
    return:
      type: System.IdentityModel.Tokens.SamlAction
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlAction&quot;></xref> that represents the Action element that is read."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAction*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAdvice(System.Xml.XmlReader)
  id: ReadAdvice(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadAdvice(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAdvice(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAdvice(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Reads the &lt;saml:Advice&gt; element."
  remarks: "The Advice element has an extensibility point to allow XML elements from non-SAML 1.1 namespaces to be included. By default, because the Advice may be ignored without affecting the semantics of the assertion, any such elements are ignored. To handle the processing of those elements, override this method."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlAdvice ReadAdvice (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "An <xref:System.Xml.XmlReader> positioned at the element to read."
    return:
      type: System.IdentityModel.Tokens.SamlAdvice
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlAdvice&quot;></xref> that represents the Advice element that is read."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAdvice*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAssertion(System.Xml.XmlReader)
  id: ReadAssertion(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadAssertion(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAssertion(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAssertion(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Reads the &lt;saml:Assertion&gt; element."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlAssertion ReadAssertion (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "An <xref:System.Xml.XmlReader> positioned at the element to read."
    return:
      type: System.IdentityModel.Tokens.SamlAssertion
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlAssertion&quot;></xref> that represents the Assertion element that is read."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAssertion*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttribute(System.Xml.XmlReader)
  id: ReadAttribute(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadAttribute(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAttribute(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttribute(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Reads the &lt;saml:Attribute&gt; element."
  remarks: "The default implementation requires that the content of the Attribute element be a simple string. To handle complex content or content of declared simple types other than xs:string, override this method."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlAttribute ReadAttribute (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "An <xref:System.Xml.XmlReader> positioned at the element to read."
    return:
      type: System.IdentityModel.Tokens.SamlAttribute
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlAssertion&quot;></xref> that represents the Assertion element that is read."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttribute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeStatement(System.Xml.XmlReader)
  id: ReadAttributeStatement(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadAttributeStatement(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAttributeStatement(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeStatement(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Reads the &lt;saml:AttributeStatement&gt; element, or a &lt;saml:Statement&gt; element that specifies an xsi:type of saml:AttributeStatementType."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlAttributeStatement ReadAttributeStatement (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "An <xref:System.Xml.XmlReader> positioned at the element to read."
    return:
      type: System.IdentityModel.Tokens.SamlAttributeStatement
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlAttributeStatement&quot;></xref> that represents the element that is read."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeValue(System.Xml.XmlReader,System.IdentityModel.Tokens.SamlAttribute)
  id: ReadAttributeValue(System.Xml.XmlReader,System.IdentityModel.Tokens.SamlAttribute)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadAttributeValue(XmlReader,SamlAttribute)
  nameWithType: SamlSecurityTokenHandler.ReadAttributeValue(XmlReader,SamlAttribute)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeValue(XmlReader,SamlAttribute)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Reads an attribute value."
  syntax:
    content: protected virtual string ReadAttributeValue (System.Xml.XmlReader reader, System.IdentityModel.Tokens.SamlAttribute attribute);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "An <xref:System.Xml.XmlReader> positioned at the element to read."
    - id: attribute
      type: System.IdentityModel.Tokens.SamlAttribute
      description: "The attribute being read."
    return:
      type: System.String
      description: "A string that contains the attribute value."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAudienceRestrictionCondition(System.Xml.XmlReader)
  id: ReadAudienceRestrictionCondition(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadAudienceRestrictionCondition(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAudienceRestrictionCondition(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAudienceRestrictionCondition(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Reads the &lt;saml:AudienceRestrictionCondition&gt; element from the specified XML reader."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlAudienceRestrictionCondition ReadAudienceRestrictionCondition (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "An XML reader positioned at the &lt;saml:AudienceRestrictionCondition&gt; element to read."
    return:
      type: System.IdentityModel.Tokens.SamlAudienceRestrictionCondition
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlAudienceRestrictionCondition&quot;></xref> that represents the element that was read."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAudienceRestrictionCondition*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthenticationStatement(System.Xml.XmlReader)
  id: ReadAuthenticationStatement(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadAuthenticationStatement(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAuthenticationStatement(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthenticationStatement(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Reads the &lt;saml:AuthnStatement&gt; element or a &lt;saml:Statement&gt; element that specifies an xsi:type of saml:AuthnStatementType."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlAuthenticationStatement ReadAuthenticationStatement (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "An <xref:System.Xml.XmlReader> positioned at the element to read."
    return:
      type: System.IdentityModel.Tokens.SamlAuthenticationStatement
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlAuthenticationStatement&quot;></xref> that represents the element that is read."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthenticationStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorityBinding(System.Xml.XmlReader)
  id: ReadAuthorityBinding(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadAuthorityBinding(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAuthorityBinding(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorityBinding(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Read the &lt;saml:AuthorityBinding&gt; element."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlAuthorityBinding ReadAuthorityBinding (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "An XML reader positioned at the &lt;saml:AuthorityBinding&gt; element"
    return:
      type: System.IdentityModel.Tokens.SamlAuthorityBinding
      description: "The <xref href=&quot;System.IdentityModel.Tokens.SamlAuthorityBinding&quot;></xref> that was read."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorityBinding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>reader</code> is not positioned at a saml:AuthorityBinding element or contains an unrecognized child element or a child element that is not valid."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorizationDecisionStatement(System.Xml.XmlReader)
  id: ReadAuthorizationDecisionStatement(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadAuthorizationDecisionStatement(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAuthorizationDecisionStatement(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorizationDecisionStatement(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Reads the &lt;saml:AuthzDecisionStatement&gt; element or a &lt;saml:Statement&gt; element that specifies an xsi:type of saml:AuthzDecisionStatementType."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement ReadAuthorizationDecisionStatement (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "An <xref:System.Xml.XmlReader> positioned at the element to read."
    return:
      type: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
      description: "A <xref:System.IdentityModel.Tokens.SamlAuthorizationStatement> that represents the element that is read."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorizationDecisionStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadCondition(System.Xml.XmlReader)
  id: ReadCondition(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadCondition(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadCondition(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadCondition(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Reads a saml:AudienceRestrictionCondition or a saml:DoNotCacheCondition from the specified reader"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlCondition ReadCondition (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "The reader from which to read the element."
    return:
      type: System.IdentityModel.Tokens.SamlCondition
      description: "The <xref href=&quot;System.IdentityModel.Tokens.SamlCondition&quot;></xref> that was read from the XML."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadCondition*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>reader</code> is positioned at an unknown element."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadConditions(System.Xml.XmlReader)
  id: ReadConditions(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadConditions(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadConditions(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadConditions(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Reads the &lt;saml:Conditions&gt; element."
  remarks: "To handle custom \\<saml:Condition> elements, override this method."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlConditions ReadConditions (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "An <xref:System.Xml.XmlReader> positioned at the element to read."
    return:
      type: System.IdentityModel.Tokens.SamlConditions
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlConditions&quot;></xref> that represents the Conditions element that is read."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadConditions*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>reader</code> is not positioned at a Conditions element."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadDoNotCacheCondition(System.Xml.XmlReader)
  id: ReadDoNotCacheCondition(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadDoNotCacheCondition(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadDoNotCacheCondition(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadDoNotCacheCondition(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Reads a  saml:DoNotCacheCondition element from the specified XML reader."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlDoNotCacheCondition ReadDoNotCacheCondition (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "An XML reader positioned at a saml:DoNotCacheCondition element"
    return:
      type: System.IdentityModel.Tokens.SamlDoNotCacheCondition
      description: "The <xref href=&quot;System.IdentityModel.Tokens.SamlDoNotCacheCondition&quot;></xref> that was read."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadDoNotCacheCondition*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>reader</code> is not positioned at a saml:DoNotCacheCondition element."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadEvidence(System.Xml.XmlReader)
  id: ReadEvidence(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadEvidence(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadEvidence(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadEvidence(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Reads the &lt;saml:Evidence&gt; element."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlEvidence ReadEvidence (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "An <xref:System.Xml.XmlReader> positioned at the element to read."
    return:
      type: System.IdentityModel.Tokens.SamlEvidence
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlEvidence&quot;></xref> that represents the Evidence element that is read."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadEvidence*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSigningKeyInfo(System.Xml.XmlReader,System.IdentityModel.Tokens.SamlAssertion)
  id: ReadSigningKeyInfo(System.Xml.XmlReader,System.IdentityModel.Tokens.SamlAssertion)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadSigningKeyInfo(XmlReader,SamlAssertion)
  nameWithType: SamlSecurityTokenHandler.ReadSigningKeyInfo(XmlReader,SamlAssertion)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSigningKeyInfo(XmlReader,SamlAssertion)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Deserializes the SAML Signing KeyInfo."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SecurityKeyIdentifier ReadSigningKeyInfo (System.Xml.XmlReader reader, System.IdentityModel.Tokens.SamlAssertion assertion);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "An XmlReader that can be positioned at a ds:KeyInfo element."
    - id: assertion
      type: System.IdentityModel.Tokens.SamlAssertion
      description: "The assertion that is having the signature checked."
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "The <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;></xref> that represents the key to use to check the signature."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSigningKeyInfo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadStatement(System.Xml.XmlReader)
  id: ReadStatement(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadStatement(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadStatement(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadStatement(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Reads the &lt;saml:Statement&gt; element."
  remarks: "The default implementation only handles Statement elements that specify an xsi:type of saml:AttributeStatementType, saml:AuthnStatementType, and saml:AuthzDecisionStatementType. To handle custom statements, override this method."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlStatement ReadStatement (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "An <xref:System.Xml.XmlReader> positioned at the element to read."
    return:
      type: System.IdentityModel.Tokens.SamlStatement
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlStatement&quot;></xref> that represents the Statement element that was read."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubject(System.Xml.XmlReader)
  id: ReadSubject(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadSubject(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadSubject(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubject(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Reads the &lt;saml:Subject&gt; element."
  remarks: "The default implementation does not handle the optional \\<EncryptedID> element. To handle encryped IDs in the Subject, override this method."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SamlSubject ReadSubject (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "An <xref:System.Xml.XmlReader> positioned at the element to read."
    return:
      type: System.IdentityModel.Tokens.SamlSubject
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlSubject&quot;></xref> that represents the Subject element that was read."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubjectKeyInfo(System.Xml.XmlReader)
  id: ReadSubjectKeyInfo(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadSubjectKeyInfo(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadSubjectKeyInfo(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubjectKeyInfo(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Deserializes the SAML Subject &lt;ds:KeyInfo&gt; element."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SecurityKeyIdentifier ReadSubjectKeyInfo (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "An <xref:System.Xml.XmlReader> positioned at a &lt;ds:KeyInfo&gt; element."
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;></xref> that represents the contents of the &lt;ds:KeyInfo&gt; element."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubjectKeyInfo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  id: ReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ReadToken(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadToken(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Reads a SAML 1.1 token from the specified stream."
  syntax:
    content: public override System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "A <xref:System.Xml.XmlReader> stream to a SAML 1.1 Security Token."
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "An instance of <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;></xref>."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadToken*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerTokenResolver*> property of the configuration specified by the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <xref:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.ServiceTokenResolver*> property of the configuration specified by the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveIssuerToken(System.IdentityModel.Tokens.SamlAssertion,System.IdentityModel.Selectors.SecurityTokenResolver)
  id: ResolveIssuerToken(System.IdentityModel.Tokens.SamlAssertion,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ResolveIssuerToken(SamlAssertion,SecurityTokenResolver)
  nameWithType: SamlSecurityTokenHandler.ResolveIssuerToken(SamlAssertion,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveIssuerToken(SamlAssertion,SecurityTokenResolver)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Resolves the Signing Key Identifier to a <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;></xref>."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SecurityToken ResolveIssuerToken (System.IdentityModel.Tokens.SamlAssertion assertion, System.IdentityModel.Selectors.SecurityTokenResolver issuerResolver);
    parameters:
    - id: assertion
      type: System.IdentityModel.Tokens.SamlAssertion
      description: "The <xref href=&quot;System.IdentityModel.Tokens.SamlAssertion&quot;></xref> for which the Issuer token is to be resolved."
    - id: issuerResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "The current <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;></xref> associated with this handler."
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;></xref> that represents the resolved token."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveIssuerToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>assertion</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IdentityModel.Tokens.SecurityTokenException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenException
    description: "The handler is unable to resolve the token."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveSubjectKeyIdentifier(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  id: ResolveSubjectKeyIdentifier(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ResolveSubjectKeyIdentifier(SecurityKeyIdentifier)
  nameWithType: SamlSecurityTokenHandler.ResolveSubjectKeyIdentifier(SecurityKeyIdentifier)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveSubjectKeyIdentifier(SecurityKeyIdentifier)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Resolves the <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;></xref> specified in a saml:Subject element."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SecurityKey ResolveSubjectKeyIdentifier (System.IdentityModel.Tokens.SecurityKeyIdentifier subjectKeyIdentifier);
    parameters:
    - id: subjectKeyIdentifier
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "The key identifier to resolve into a key."
    return:
      type: System.IdentityModel.Tokens.SecurityKey
      description: "The key resolved from the key identifier."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveSubjectKeyIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenRequirement
  id: SamlSecurityTokenRequirement
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: SamlSecurityTokenRequirement
  nameWithType: SamlSecurityTokenHandler.SamlSecurityTokenRequirement
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenRequirement
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets or sets the security token requirements for this instance."
  syntax:
    content: public System.IdentityModel.Tokens.SamlSecurityTokenRequirement SamlSecurityTokenRequirement { get; set; }
    return:
      type: System.IdentityModel.Tokens.SamlSecurityTokenRequirement
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityTokenRequirement&quot;></xref> that specifies the requirements."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenRequirement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "An attempt to set the value to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> occurs."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.SetDelegateFromAttribute(System.IdentityModel.Tokens.SamlAttribute,System.Security.Claims.ClaimsIdentity,System.String)
  id: SetDelegateFromAttribute(System.IdentityModel.Tokens.SamlAttribute,System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: SetDelegateFromAttribute(SamlAttribute,ClaimsIdentity,String)
  nameWithType: SamlSecurityTokenHandler.SetDelegateFromAttribute(SamlAttribute,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.SetDelegateFromAttribute(SamlAttribute,ClaimsIdentity,String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "This method gets called when a special type of <xref href=&quot;System.IdentityModel.Tokens.SamlAttribute&quot;></xref> is detected. The <xref href=&quot;System.IdentityModel.Tokens.SamlAttribute&quot;></xref> passed in wraps a <xref href=&quot;System.IdentityModel.Tokens.SamlAttribute&quot;></xref> that contains a collection of attribute values (in the <xref:System.IdentityModel.Tokens.SamlAttribute.Values*> property), each of which will get mapped to a claim. All of the claims will be returned in an <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;></xref> with the specified issuer."
  syntax:
    content: protected virtual void SetDelegateFromAttribute (System.IdentityModel.Tokens.SamlAttribute attribute, System.Security.Claims.ClaimsIdentity subject, string issuer);
    parameters:
    - id: attribute
      type: System.IdentityModel.Tokens.SamlAttribute
      description: "The <xref href=&quot;System.IdentityModel.Tokens.SamlAttribute&quot;></xref> to use."
    - id: subject
      type: System.Security.Claims.ClaimsIdentity
      description: "The <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;></xref> that is the subject of this token."
    - id: issuer
      type: System.String
      description: "The issuer of the claim."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.SetDelegateFromAttribute*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref href=&quot;System.IdentityModel.Tokens.SamlAttribute&quot;></xref> does not contain any valid attribute values."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.TokenType
  id: TokenType
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: TokenType
  nameWithType: SamlSecurityTokenHandler.TokenType
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.TokenType
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets the token type supported by this handler."
  syntax:
    content: public override Type TokenType { get; }
    return:
      type: System.Type
      description: "The <xref:System.Type> of the <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;></xref> class."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.TokenType*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.TryResolveIssuerToken(System.IdentityModel.Tokens.SamlAssertion,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Tokens.SecurityToken@)
  id: TryResolveIssuerToken(System.IdentityModel.Tokens.SamlAssertion,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: TryResolveIssuerToken(SamlAssertion,SecurityTokenResolver,SecurityToken)
  nameWithType: SamlSecurityTokenHandler.TryResolveIssuerToken(SamlAssertion,SecurityTokenResolver,SecurityToken)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.TryResolveIssuerToken(SamlAssertion,SecurityTokenResolver,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Resolves the Signing Key Identifier to a SecurityToken."
  syntax:
    content: protected virtual bool TryResolveIssuerToken (System.IdentityModel.Tokens.SamlAssertion assertion, System.IdentityModel.Selectors.SecurityTokenResolver issuerResolver, out System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: assertion
      type: System.IdentityModel.Tokens.SamlAssertion
      description: "The <xref href=&quot;System.IdentityModel.Tokens.SamlAssertion&quot;></xref> for which the Issuer token is to be resolved."
    - id: issuerResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "The current <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;></xref> associated with this handler."
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "When this method returns, contains the resolved security token if a token was successfully resolved."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the token is resolved."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.TryResolveIssuerToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.UnspecifiedAuthenticationMethod
  id: UnspecifiedAuthenticationMethod
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: UnspecifiedAuthenticationMethod
  nameWithType: SamlSecurityTokenHandler.UnspecifiedAuthenticationMethod
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.UnspecifiedAuthenticationMethod
  type: Field
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "urn:oasis:names:tc:SAML:1.0:am:unspecified"
  syntax:
    content: public const string UnspecifiedAuthenticationMethod;
    return:
      type: System.String
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateConditions(System.IdentityModel.Tokens.SamlConditions,System.Boolean)
  id: ValidateConditions(System.IdentityModel.Tokens.SamlConditions,System.Boolean)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ValidateConditions(SamlConditions,Boolean)
  nameWithType: SamlSecurityTokenHandler.ValidateConditions(SamlConditions,Boolean)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateConditions(SamlConditions,Boolean)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Validates the specified <xref href=&quot;System.IdentityModel.Tokens.SamlConditions&quot;></xref> object."
  remarks: "Throws an appropriate exception if the condition is not valid. The token may not be valid for a number of reasons. For example, the current time may not be within the token&quot;s validity period, the token may contain data that is contradictory or not valid, or the token may contain unsupported SAML 1.1 elements."
  syntax:
    content: protected virtual void ValidateConditions (System.IdentityModel.Tokens.SamlConditions conditions, bool enforceAudienceRestriction);
    parameters:
    - id: conditions
      type: System.IdentityModel.Tokens.SamlConditions
      description: "The SAML 1.1 condition to be validated."
    - id: enforceAudienceRestriction
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to check for Audience Restriction condition."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateConditions*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  id: ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: ValidateToken(SecurityToken)
  nameWithType: SamlSecurityTokenHandler.ValidateToken(SecurityToken)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateToken(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Validates the token data and returns its claims."
  remarks: "Throws an appropriate exception if the token is not valid."
  syntax:
    content: public override System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity> ValidateToken (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "The SAML 1.1 token to be validated."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}
      description: "The identities contained in the token."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAction(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAction)
  id: WriteAction(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAction)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteAction(XmlWriter,SamlAction)
  nameWithType: SamlSecurityTokenHandler.WriteAction(XmlWriter,SamlAction)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAction(XmlWriter,SamlAction)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Writes the &lt;saml:Action&gt; element."
  syntax:
    content: protected virtual void WriteAction (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlAction action);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "The <xref:System.Xml.XmlWriter> with which to write the data."
    - id: action
      type: System.IdentityModel.Tokens.SamlAction
      description: "The data to write."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAction*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>action</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAdvice(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAdvice)
  id: WriteAdvice(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAdvice)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteAdvice(XmlWriter,SamlAdvice)
  nameWithType: SamlSecurityTokenHandler.WriteAdvice(XmlWriter,SamlAdvice)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAdvice(XmlWriter,SamlAdvice)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Writes the &lt;saml:Advice&gt; element."
  syntax:
    content: protected virtual void WriteAdvice (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlAdvice advice);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "The <xref:System.Xml.XmlWriter> with which to write the data."
    - id: advice
      type: System.IdentityModel.Tokens.SamlAdvice
      description: "The data to write."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAdvice*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>advice</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAssertion(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAssertion)
  id: WriteAssertion(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAssertion)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteAssertion(XmlWriter,SamlAssertion)
  nameWithType: SamlSecurityTokenHandler.WriteAssertion(XmlWriter,SamlAssertion)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAssertion(XmlWriter,SamlAssertion)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Serializes the specified SAML assertion to the specified XML writer."
  syntax:
    content: protected virtual void WriteAssertion (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlAssertion assertion);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "The <xref:System.Xml.XmlWriter> to use for the serialization."
    - id: assertion
      type: System.IdentityModel.Tokens.SamlAssertion
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlAssertion&quot;></xref> that represents the assertion to serialize."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAssertion*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>assertion</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The assertion specified by <code>assertion</code> has both the <xref:System.IdentityModel.SecurityTokenService.EncryptingCredentials> and <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReceivedEncryptingCredentials> properties set to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       There are no statements and no subject in the assertion specified by <code>data</code>. (Both the <xref:System.IdentityModel.Tokens.SamlAssertion.Subject*> property and the <xref:System.IdentityModel.Tokens.SamlAssertion.Statements*> property are <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.) If an assertion does not contain statements, it must contain a subject.       -or-       The assertion specified by <code>assertion</code> contains an authentication, attribute, or authorization decision statement and no subject—these statements require a subject. (The <xref:System.IdentityModel.Tokens.SamlAssertion.Statements*> property contains a statement of type <xref href=&quot;System.IdentityModel.Tokens.SamlAttributeStatement&quot;></xref>, <xref href=&quot;System.IdentityModel.Tokens.SamlAuthenticationStatement&quot;></xref>, or <xref href=&quot;System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement&quot;></xref> and the <xref:System.IdentityModel.Tokens.SamlAssertion.Subject*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>)."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "The token encrypting credentials do not have a Symmetric Key specified."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttribute(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAttribute)
  id: WriteAttribute(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAttribute)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteAttribute(XmlWriter,SamlAttribute)
  nameWithType: SamlSecurityTokenHandler.WriteAttribute(XmlWriter,SamlAttribute)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttribute(XmlWriter,SamlAttribute)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Writes the &lt;saml:Attribute&gt; element."
  syntax:
    content: protected virtual void WriteAttribute (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlAttribute attribute);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "The <xref:System.Xml.XmlWriter> with which to write the data."
    - id: attribute
      type: System.IdentityModel.Tokens.SamlAttribute
      description: "The data to write."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttribute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>attribute</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAttributeStatement)
  id: WriteAttributeStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAttributeStatement)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteAttributeStatement(XmlWriter,SamlAttributeStatement)
  nameWithType: SamlSecurityTokenHandler.WriteAttributeStatement(XmlWriter,SamlAttributeStatement)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeStatement(XmlWriter,SamlAttributeStatement)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Writes the &lt;saml:AttributeStatement&gt; element."
  syntax:
    content: protected virtual void WriteAttributeStatement (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlAttributeStatement statement);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "The <xref:System.Xml.XmlWriter> with which to write the data."
    - id: statement
      type: System.IdentityModel.Tokens.SamlAttributeStatement
      description: "The data to write."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>statement</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeValue(System.Xml.XmlWriter,System.String,System.IdentityModel.Tokens.SamlAttribute)
  id: WriteAttributeValue(System.Xml.XmlWriter,System.String,System.IdentityModel.Tokens.SamlAttribute)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteAttributeValue(XmlWriter,String,SamlAttribute)
  nameWithType: SamlSecurityTokenHandler.WriteAttributeValue(XmlWriter,String,SamlAttribute)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeValue(XmlWriter,String,SamlAttribute)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Writes the saml:Attribute value."
  remarks: "By default the method writes the value as a string."
  syntax:
    content: protected virtual void WriteAttributeValue (System.Xml.XmlWriter writer, string value, System.IdentityModel.Tokens.SamlAttribute attribute);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "The <xref:System.Xml.XmlWriter> with which to write."
    - id: value
      type: System.String
      description: "A string that contains the attribute value to be written."
    - id: attribute
      type: System.IdentityModel.Tokens.SamlAttribute
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlAttribute&quot;></xref> that represents the attribute whose value is being written."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAudienceRestrictionCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAudienceRestrictionCondition)
  id: WriteAudienceRestrictionCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAudienceRestrictionCondition)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteAudienceRestrictionCondition(XmlWriter,SamlAudienceRestrictionCondition)
  nameWithType: SamlSecurityTokenHandler.WriteAudienceRestrictionCondition(XmlWriter,SamlAudienceRestrictionCondition)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAudienceRestrictionCondition(XmlWriter,SamlAudienceRestrictionCondition)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Writes the &lt;saml:AudienceRestriction&gt; element."
  syntax:
    content: protected virtual void WriteAudienceRestrictionCondition (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlAudienceRestrictionCondition condition);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "The <xref:System.Xml.XmlWriter> with which to write the data."
    - id: condition
      type: System.IdentityModel.Tokens.SamlAudienceRestrictionCondition
      description: "The data to write."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAudienceRestrictionCondition*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.IdentityModel.Tokens.SamlConditions.Conditions*> property of the <xref href=&quot;System.IdentityModel.Tokens.SamlAudienceRestrictionCondition&quot;></xref> specified in <code>condition</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or an empty collection."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthenticationStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthenticationStatement)
  id: WriteAuthenticationStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthenticationStatement)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteAuthenticationStatement(XmlWriter,SamlAuthenticationStatement)
  nameWithType: SamlSecurityTokenHandler.WriteAuthenticationStatement(XmlWriter,SamlAuthenticationStatement)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthenticationStatement(XmlWriter,SamlAuthenticationStatement)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Writes the &lt;saml:AuthnStatement&gt; element."
  syntax:
    content: protected virtual void WriteAuthenticationStatement (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlAuthenticationStatement statement);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "The <xref:System.Xml.XmlWriter> with which to write the data."
    - id: statement
      type: System.IdentityModel.Tokens.SamlAuthenticationStatement
      description: "The data to write."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthenticationStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>statement</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorityBinding(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthorityBinding)
  id: WriteAuthorityBinding(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthorityBinding)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteAuthorityBinding(XmlWriter,SamlAuthorityBinding)
  nameWithType: SamlSecurityTokenHandler.WriteAuthorityBinding(XmlWriter,SamlAuthorityBinding)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorityBinding(XmlWriter,SamlAuthorityBinding)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Writes the &lt;saml:AuthorityBinding&gt; element."
  syntax:
    content: protected virtual void WriteAuthorityBinding (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlAuthorityBinding authorityBinding);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "The <xref:System.Xml.XmlWriter> with which to write the data."
    - id: authorityBinding
      type: System.IdentityModel.Tokens.SamlAuthorityBinding
      description: "The data to write."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorityBinding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>authorityBinding</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorizationDecisionStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement)
  id: WriteAuthorizationDecisionStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteAuthorizationDecisionStatement(XmlWriter,SamlAuthorizationDecisionStatement)
  nameWithType: SamlSecurityTokenHandler.WriteAuthorizationDecisionStatement(XmlWriter,SamlAuthorizationDecisionStatement)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorizationDecisionStatement(XmlWriter,SamlAuthorizationDecisionStatement)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Writes the &lt;saml:AuthzDecisionStatement&gt; element."
  syntax:
    content: protected virtual void WriteAuthorizationDecisionStatement (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement statement);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "The <xref:System.Xml.XmlWriter> with which to write the data."
    - id: statement
      type: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
      description: "The data to write."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorizationDecisionStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>statement</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlCondition)
  id: WriteCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlCondition)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteCondition(XmlWriter,SamlCondition)
  nameWithType: SamlSecurityTokenHandler.WriteCondition(XmlWriter,SamlCondition)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteCondition(XmlWriter,SamlCondition)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Serializes the specified <xref href=&quot;System.IdentityModel.Tokens.SamlCondition&quot;></xref> object."
  remarks: "By default, the method invokes either the <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAudienceRestrictionCondition%2A> or <xref:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteDoNotCacheCondition%2A> method to serialize the condition based on the type of <xref:System.IdentityModel.Tokens.SamlCondition> specified."
  syntax:
    content: protected virtual void WriteCondition (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlCondition condition);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "The <xref:System.Xml.XmlWriter> with which to write the data."
    - id: condition
      type: System.IdentityModel.Tokens.SamlCondition
      description: "The data to write. By default, only <xref href=&quot;System.IdentityModel.Tokens.SamlAudienceRestrictionCondition&quot;></xref> and <xref href=&quot;System.IdentityModel.Tokens.SamlDoNotCacheCondition&quot;></xref> are supported."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteCondition*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>condition</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IdentityModel.Tokens.SecurityTokenException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenException
    description: "<code>condition</code> is not supported. . By default, only <xref href=&quot;System.IdentityModel.Tokens.SamlAudienceRestrictionCondition&quot;></xref> and <xref href=&quot;System.IdentityModel.Tokens.SamlDoNotCacheCondition&quot;></xref> are supported."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteConditions(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlConditions)
  id: WriteConditions(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlConditions)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteConditions(XmlWriter,SamlConditions)
  nameWithType: SamlSecurityTokenHandler.WriteConditions(XmlWriter,SamlConditions)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteConditions(XmlWriter,SamlConditions)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Writes the &lt;saml:Conditions&gt; element."
  syntax:
    content: protected virtual void WriteConditions (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlConditions conditions);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "The <xref:System.Xml.XmlWriter> with which to write the data."
    - id: conditions
      type: System.IdentityModel.Tokens.SamlConditions
      description: "The data to write."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteConditions*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>conditions</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteDoNotCacheCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlDoNotCacheCondition)
  id: WriteDoNotCacheCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlDoNotCacheCondition)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteDoNotCacheCondition(XmlWriter,SamlDoNotCacheCondition)
  nameWithType: SamlSecurityTokenHandler.WriteDoNotCacheCondition(XmlWriter,SamlDoNotCacheCondition)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteDoNotCacheCondition(XmlWriter,SamlDoNotCacheCondition)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Writes the &lt;saml:DoNotCacheCondition&gt; element."
  syntax:
    content: protected virtual void WriteDoNotCacheCondition (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlDoNotCacheCondition condition);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "The XML writer with which to write the data."
    - id: condition
      type: System.IdentityModel.Tokens.SamlDoNotCacheCondition
      description: "The data to write."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteDoNotCacheCondition*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>condition</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteEvidence(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlEvidence)
  id: WriteEvidence(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlEvidence)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteEvidence(XmlWriter,SamlEvidence)
  nameWithType: SamlSecurityTokenHandler.WriteEvidence(XmlWriter,SamlEvidence)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteEvidence(XmlWriter,SamlEvidence)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Writes the &lt;saml:Evidence&gt; element."
  syntax:
    content: protected virtual void WriteEvidence (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlEvidence evidence);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "The <xref:System.Xml.XmlWriter> with which to write the data."
    - id: evidence
      type: System.IdentityModel.Tokens.SamlEvidence
      description: "The data to write."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteEvidence*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>evidence</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSigningKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  id: WriteSigningKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteSigningKeyInfo(XmlWriter,SecurityKeyIdentifier)
  nameWithType: SamlSecurityTokenHandler.WriteSigningKeyInfo(XmlWriter,SecurityKeyIdentifier)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSigningKeyInfo(XmlWriter,SecurityKeyIdentifier)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Writes the Signing &lt;ds:KeyInfo&gt; element using the specified XML writer."
  syntax:
    content: protected virtual void WriteSigningKeyInfo (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifier signingKeyIdentifier);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "The <xref:System.Xml.XmlWriter> with which to serialize the key identifier."
    - id: signingKeyIdentifier
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "The <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;></xref> that represents the key identifier to write."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSigningKeyInfo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>signingKeyIdentifier</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The handler cannot serialize the key identifier specified by <code>signingKeyIdentifier</code>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlStatement)
  id: WriteStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlStatement)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteStatement(XmlWriter,SamlStatement)
  nameWithType: SamlSecurityTokenHandler.WriteStatement(XmlWriter,SamlStatement)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteStatement(XmlWriter,SamlStatement)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Writes a SamlStatement."
  remarks: "This method may write a \\<saml:AttributeStatement>, \\<saml:AuthnStatement>, or \\<saml:AuthzDecisionStatement> element. To handle custom <xref:System.IdentityModel.Tokens.SamlStatement> classes for writing a \\<saml:Statement> element, override this method."
  syntax:
    content: protected virtual void WriteStatement (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlStatement statement);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "The <xref:System.Xml.XmlWriter> with which to write the data."
    - id: statement
      type: System.IdentityModel.Tokens.SamlStatement
      description: "The data to write."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteStatement*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>statement</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubject(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlSubject)
  id: WriteSubject(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlSubject)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteSubject(XmlWriter,SamlSubject)
  nameWithType: SamlSecurityTokenHandler.WriteSubject(XmlWriter,SamlSubject)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubject(XmlWriter,SamlSubject)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Writes the &lt;saml:Subject&gt; element."
  syntax:
    content: protected virtual void WriteSubject (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SamlSubject subject);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "The <xref:System.Xml.XmlWriter> with which to write the data."
    - id: subject
      type: System.IdentityModel.Tokens.SamlSubject
      description: "The data to write."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subject</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubjectKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  id: WriteSubjectKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteSubjectKeyInfo(XmlWriter,SecurityKeyIdentifier)
  nameWithType: SamlSecurityTokenHandler.WriteSubjectKeyInfo(XmlWriter,SecurityKeyIdentifier)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubjectKeyInfo(XmlWriter,SecurityKeyIdentifier)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Serializes the Subject &lt;ds:KeyInfo&gt; element using the specified XML writer."
  syntax:
    content: protected virtual void WriteSubjectKeyInfo (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifier subjectSki);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "The <xref:System.Xml.XmlWriter> with which to serialize the key identifier."
    - id: subjectSki
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "The <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;></xref> that represents the key identifier to write."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubjectKeyInfo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subjectSki</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  id: WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  langs:
  - csharp
  name: WriteToken(XmlWriter,SecurityToken)
  nameWithType: SamlSecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Writes a Saml Token to the specified XML writer."
  syntax:
    content: public override void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "The <xref:System.Xml.XmlWriter> with which to write the data."
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "The token to write."
  overload: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>data</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>token</code> is not a <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;></xref> object."
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: false
  name: System.IdentityModel.Tokens.SecurityTokenHandler
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IdentityModel.Tokens.SecurityTokenException
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenException
  nameWithType: SecurityTokenException
  fullName: System.IdentityModel.Tokens.SecurityTokenException
- uid: System.IdentityModel.Tokens.SecurityTokenValidationException
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenValidationException
  nameWithType: SecurityTokenValidationException
  fullName: System.IdentityModel.Tokens.SecurityTokenValidationException
- uid: System.IdentityModel.Tokens.SecurityTokenReplayDetectedException
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenReplayDetectedException
  nameWithType: SecurityTokenReplayDetectedException
  fullName: System.IdentityModel.Tokens.SecurityTokenReplayDetectedException
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.#ctor
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: SamlSecurityTokenHandler()
  nameWithType: SamlSecurityTokenHandler.SamlSecurityTokenHandler()
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenHandler()
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.#ctor(System.IdentityModel.Tokens.SamlSecurityTokenRequirement)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: SamlSecurityTokenHandler(SamlSecurityTokenRequirement)
  nameWithType: SamlSecurityTokenHandler.SamlSecurityTokenHandler(SamlSecurityTokenRequirement)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenHandler(SamlSecurityTokenRequirement)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenRequirement
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlSecurityTokenRequirement
  nameWithType: SamlSecurityTokenRequirement
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenRequirement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.AddDelegateToAttributes(System.Security.Claims.ClaimsIdentity,System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute},System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: AddDelegateToAttributes(ClaimsIdentity,ICollection<SamlAttribute>,SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.AddDelegateToAttributes(ClaimsIdentity,ICollection<SamlAttribute>,SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.AddDelegateToAttributes(ClaimsIdentity,ICollection<SamlAttribute>,SecurityTokenDescriptor)
- uid: System.Security.Claims.ClaimsIdentity
  parent: System.Security.Claims
  isExternal: false
  name: ClaimsIdentity
  nameWithType: ClaimsIdentity
  fullName: System.Security.Claims.ClaimsIdentity
- uid: System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<SamlAttribute>
  nameWithType: ICollection<SamlAttribute>
  fullName: System.Collections.Generic.ICollection<System.IdentityModel.Tokens.SamlAttribute>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.IdentityModel.Tokens.SamlAttribute>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SamlAttribute
    name: SamlAttribute
    nameWithType: SamlAttribute
    fullName: SamlAttribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SecurityTokenDescriptor
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenDescriptor
  nameWithType: SecurityTokenDescriptor
  fullName: System.IdentityModel.Tokens.SecurityTokenDescriptor
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.Assertion
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: Assertion
  nameWithType: SamlSecurityTokenHandler.Assertion
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.Assertion
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.BearerConfirmationMethod
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: BearerConfirmationMethod
  nameWithType: SamlSecurityTokenHandler.BearerConfirmationMethod
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.BearerConfirmationMethod
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CanReadToken(XmlReader)
  nameWithType: SamlSecurityTokenHandler.CanReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanReadToken(XmlReader)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanValidateToken
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CanValidateToken
  nameWithType: SamlSecurityTokenHandler.CanValidateToken
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanValidateToken
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanWriteToken
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CanWriteToken
  nameWithType: SamlSecurityTokenHandler.CanWriteToken
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanWriteToken
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CertificateValidator
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CertificateValidator
  nameWithType: SamlSecurityTokenHandler.CertificateValidator
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CertificateValidator
- uid: System.IdentityModel.Selectors.X509CertificateValidator
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: X509CertificateValidator
  nameWithType: X509CertificateValidator
  fullName: System.IdentityModel.Selectors.X509CertificateValidator
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CollectAttributeValues(System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute})
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CollectAttributeValues(ICollection<SamlAttribute>)
  nameWithType: SamlSecurityTokenHandler.CollectAttributeValues(ICollection<SamlAttribute>)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CollectAttributeValues(ICollection<SamlAttribute>)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAdvice(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateAdvice(SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.CreateAdvice(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAdvice(SecurityTokenDescriptor)
- uid: System.IdentityModel.Tokens.SamlAdvice
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlAdvice
  nameWithType: SamlAdvice
  fullName: System.IdentityModel.Tokens.SamlAdvice
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAssertion(System.String,System.IdentityModel.Tokens.SamlConditions,System.IdentityModel.Tokens.SamlAdvice,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement})
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateAssertion(String,SamlConditions,SamlAdvice,IEnumerable<SamlStatement>)
  nameWithType: SamlSecurityTokenHandler.CreateAssertion(String,SamlConditions,SamlAdvice,IEnumerable<SamlStatement>)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAssertion(String,SamlConditions,SamlAdvice,IEnumerable<SamlStatement>)
- uid: System.IdentityModel.Tokens.SamlAssertion
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlAssertion
  nameWithType: SamlAssertion
  fullName: System.IdentityModel.Tokens.SamlAssertion
- uid: System.IdentityModel.Tokens.SamlConditions
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlConditions
  nameWithType: SamlConditions
  fullName: System.IdentityModel.Tokens.SamlConditions
- uid: System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<SamlStatement>
  nameWithType: IEnumerable<SamlStatement>
  fullName: System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SamlStatement>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.IdentityModel.Tokens.SamlStatement>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SamlStatement
    name: SamlStatement
    nameWithType: SamlStatement
    fullName: SamlStatement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttribute(System.Security.Claims.Claim,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateAttribute(Claim,SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.CreateAttribute(Claim,SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttribute(Claim,SecurityTokenDescriptor)
- uid: System.IdentityModel.Tokens.SamlAttribute
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlAttribute
  nameWithType: SamlAttribute
  fullName: System.IdentityModel.Tokens.SamlAttribute
- uid: System.Security.Claims.Claim
  parent: System.Security.Claims
  isExternal: false
  name: Claim
  nameWithType: Claim
  fullName: System.Security.Claims.Claim
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttributeStatement(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.ClaimsIdentity,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateAttributeStatement(SamlSubject,ClaimsIdentity,SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.CreateAttributeStatement(SamlSubject,ClaimsIdentity,SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttributeStatement(SamlSubject,ClaimsIdentity,SecurityTokenDescriptor)
- uid: System.IdentityModel.Tokens.SamlAttributeStatement
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlAttributeStatement
  nameWithType: SamlAttributeStatement
  fullName: System.IdentityModel.Tokens.SamlAttributeStatement
- uid: System.IdentityModel.Tokens.SamlSubject
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlSubject
  nameWithType: SamlSubject
  fullName: System.IdentityModel.Tokens.SamlSubject
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAuthenticationStatement(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.AuthenticationInformation,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateAuthenticationStatement(SamlSubject,AuthenticationInformation,SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.CreateAuthenticationStatement(SamlSubject,AuthenticationInformation,SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAuthenticationStatement(SamlSubject,AuthenticationInformation,SecurityTokenDescriptor)
- uid: System.IdentityModel.Tokens.SamlAuthenticationStatement
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlAuthenticationStatement
  nameWithType: SamlAuthenticationStatement
  fullName: System.IdentityModel.Tokens.SamlAuthenticationStatement
- uid: System.Security.Claims.AuthenticationInformation
  parent: System.Security.Claims
  isExternal: false
  name: AuthenticationInformation
  nameWithType: AuthenticationInformation
  fullName: System.Security.Claims.AuthenticationInformation
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateClaims(System.IdentityModel.Tokens.SamlSecurityToken)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateClaims(SamlSecurityToken)
  nameWithType: SamlSecurityTokenHandler.CreateClaims(SamlSecurityToken)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateClaims(SamlSecurityToken)
- uid: System.IdentityModel.Tokens.SamlSecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlSecurityToken
  nameWithType: SamlSecurityToken
  fullName: System.IdentityModel.Tokens.SamlSecurityToken
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateConditions(System.IdentityModel.Protocols.WSTrust.Lifetime,System.String,System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateConditions(Lifetime,String,SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.CreateConditions(Lifetime,String,SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateConditions(Lifetime,String,SecurityTokenDescriptor)
- uid: System.IdentityModel.Protocols.WSTrust.Lifetime
  parent: System.IdentityModel.Protocols.WSTrust
  isExternal: false
  name: Lifetime
  nameWithType: Lifetime
  fullName: System.IdentityModel.Protocols.WSTrust.Lifetime
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSamlSubject(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateSamlSubject(SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.CreateSamlSubject(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSamlSubject(SecurityTokenDescriptor)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateSecurityTokenReference(SecurityToken,Boolean)
  nameWithType: SamlSecurityTokenHandler.CreateSecurityTokenReference(SecurityToken,Boolean)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSecurityTokenReference(SecurityToken,Boolean)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateStatements(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateStatements(SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.CreateStatements(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateStatements(SecurityTokenDescriptor)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateToken(SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.CreateToken(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateToken(SecurityTokenDescriptor)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateWindowsIdentity(System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateWindowsIdentity(String)
  nameWithType: SamlSecurityTokenHandler.CreateWindowsIdentity(String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateWindowsIdentity(String)
- uid: System.Security.Principal.WindowsIdentity
  parent: System.Security.Principal
  isExternal: false
  name: WindowsIdentity
  nameWithType: WindowsIdentity
  fullName: System.Security.Principal.WindowsIdentity
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateXmlStringFromAttributes(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAttribute})
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateXmlStringFromAttributes(IEnumerable<SamlAttribute>)
  nameWithType: SamlSecurityTokenHandler.CreateXmlStringFromAttributes(IEnumerable<SamlAttribute>)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateXmlStringFromAttributes(IEnumerable<SamlAttribute>)
- uid: System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAttribute}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<SamlAttribute>
  nameWithType: IEnumerable<SamlAttribute>
  fullName: System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SamlAttribute>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.IdentityModel.Tokens.SamlAttribute>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SamlAttribute
    name: SamlAttribute
    nameWithType: SamlAttribute
    fullName: SamlAttribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.DenormalizeAuthenticationType(System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: DenormalizeAuthenticationType(String)
  nameWithType: SamlSecurityTokenHandler.DenormalizeAuthenticationType(String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.DenormalizeAuthenticationType(String)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: DetectReplayedToken(SecurityToken)
  nameWithType: SamlSecurityTokenHandler.DetectReplayedToken(SecurityToken)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.DetectReplayedToken(SecurityToken)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.FindUpn(System.Security.Claims.ClaimsIdentity)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: FindUpn(ClaimsIdentity)
  nameWithType: SamlSecurityTokenHandler.FindUpn(ClaimsIdentity)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.FindUpn(ClaimsIdentity)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetEncryptingCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: GetEncryptingCredentials(SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.GetEncryptingCredentials(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetEncryptingCredentials(SecurityTokenDescriptor)
- uid: System.IdentityModel.Tokens.EncryptingCredentials
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: EncryptingCredentials
  nameWithType: EncryptingCredentials
  fullName: System.IdentityModel.Tokens.EncryptingCredentials
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetSigningCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: GetSigningCredentials(SecurityTokenDescriptor)
  nameWithType: SamlSecurityTokenHandler.GetSigningCredentials(SecurityTokenDescriptor)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetSigningCredentials(SecurityTokenDescriptor)
- uid: System.IdentityModel.Tokens.SigningCredentials
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SigningCredentials
  nameWithType: SigningCredentials
  fullName: System.IdentityModel.Tokens.SigningCredentials
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime(System.IdentityModel.Tokens.SamlSecurityToken)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: GetTokenReplayCacheEntryExpirationTime(SamlSecurityToken)
  nameWithType: SamlSecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime(SamlSecurityToken)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime(SamlSecurityToken)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenTypeIdentifiers
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: GetTokenTypeIdentifiers()
  nameWithType: SamlSecurityTokenHandler.GetTokenTypeIdentifiers()
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenTypeIdentifiers()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.KeyInfoSerializer
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: KeyInfoSerializer
  nameWithType: SamlSecurityTokenHandler.KeyInfoSerializer
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.KeyInfoSerializer
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenSerializer
  nameWithType: SecurityTokenSerializer
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: LoadCustomConfiguration(XmlNodeList)
  nameWithType: SamlSecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)
- uid: System.Xml.XmlNodeList
  parent: System.Xml
  isExternal: false
  name: XmlNodeList
  nameWithType: XmlNodeList
  fullName: System.Xml.XmlNodeList
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.Namespace
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: Namespace
  nameWithType: SamlSecurityTokenHandler.Namespace
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.Namespace
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.NormalizeAuthenticationType(System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: NormalizeAuthenticationType(String)
  nameWithType: SamlSecurityTokenHandler.NormalizeAuthenticationType(String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.NormalizeAuthenticationType(String)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAttributeStatement(System.IdentityModel.Tokens.SamlAttributeStatement,System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ProcessAttributeStatement(SamlAttributeStatement,ClaimsIdentity,String)
  nameWithType: SamlSecurityTokenHandler.ProcessAttributeStatement(SamlAttributeStatement,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAttributeStatement(SamlAttributeStatement,ClaimsIdentity,String)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthenticationStatement(System.IdentityModel.Tokens.SamlAuthenticationStatement,System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ProcessAuthenticationStatement(SamlAuthenticationStatement,ClaimsIdentity,String)
  nameWithType: SamlSecurityTokenHandler.ProcessAuthenticationStatement(SamlAuthenticationStatement,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthenticationStatement(SamlAuthenticationStatement,ClaimsIdentity,String)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthorizationDecisionStatement(System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement,System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ProcessAuthorizationDecisionStatement(SamlAuthorizationDecisionStatement,ClaimsIdentity,String)
  nameWithType: SamlSecurityTokenHandler.ProcessAuthorizationDecisionStatement(SamlAuthorizationDecisionStatement,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthorizationDecisionStatement(SamlAuthorizationDecisionStatement,ClaimsIdentity,String)
- uid: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlAuthorizationDecisionStatement
  nameWithType: SamlAuthorizationDecisionStatement
  fullName: System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessSamlSubject(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ProcessSamlSubject(SamlSubject,ClaimsIdentity,String)
  nameWithType: SamlSecurityTokenHandler.ProcessSamlSubject(SamlSubject,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessSamlSubject(SamlSubject,ClaimsIdentity,String)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessStatement(System.Collections.Generic.IList{System.IdentityModel.Tokens.SamlStatement},System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ProcessStatement(IList<SamlStatement>,ClaimsIdentity,String)
  nameWithType: SamlSecurityTokenHandler.ProcessStatement(IList<SamlStatement>,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessStatement(IList<SamlStatement>,ClaimsIdentity,String)
- uid: System.Collections.Generic.IList{System.IdentityModel.Tokens.SamlStatement}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<SamlStatement>
  nameWithType: IList<SamlStatement>
  fullName: System.Collections.Generic.IList<System.IdentityModel.Tokens.SamlStatement>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.IdentityModel.Tokens.SamlStatement>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SamlStatement
    name: SamlStatement
    nameWithType: SamlStatement
    fullName: SamlStatement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAction(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAction(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAction(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAction(XmlReader)
- uid: System.IdentityModel.Tokens.SamlAction
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlAction
  nameWithType: SamlAction
  fullName: System.IdentityModel.Tokens.SamlAction
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAdvice(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAdvice(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAdvice(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAdvice(XmlReader)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAssertion(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAssertion(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAssertion(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAssertion(XmlReader)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttribute(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAttribute(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAttribute(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttribute(XmlReader)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeStatement(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAttributeStatement(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAttributeStatement(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeStatement(XmlReader)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeValue(System.Xml.XmlReader,System.IdentityModel.Tokens.SamlAttribute)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAttributeValue(XmlReader,SamlAttribute)
  nameWithType: SamlSecurityTokenHandler.ReadAttributeValue(XmlReader,SamlAttribute)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeValue(XmlReader,SamlAttribute)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAudienceRestrictionCondition(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAudienceRestrictionCondition(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAudienceRestrictionCondition(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAudienceRestrictionCondition(XmlReader)
- uid: System.IdentityModel.Tokens.SamlAudienceRestrictionCondition
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlAudienceRestrictionCondition
  nameWithType: SamlAudienceRestrictionCondition
  fullName: System.IdentityModel.Tokens.SamlAudienceRestrictionCondition
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthenticationStatement(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAuthenticationStatement(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAuthenticationStatement(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthenticationStatement(XmlReader)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorityBinding(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAuthorityBinding(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAuthorityBinding(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorityBinding(XmlReader)
- uid: System.IdentityModel.Tokens.SamlAuthorityBinding
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlAuthorityBinding
  nameWithType: SamlAuthorityBinding
  fullName: System.IdentityModel.Tokens.SamlAuthorityBinding
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorizationDecisionStatement(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAuthorizationDecisionStatement(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadAuthorizationDecisionStatement(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorizationDecisionStatement(XmlReader)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadCondition(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadCondition(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadCondition(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadCondition(XmlReader)
- uid: System.IdentityModel.Tokens.SamlCondition
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlCondition
  nameWithType: SamlCondition
  fullName: System.IdentityModel.Tokens.SamlCondition
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadConditions(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadConditions(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadConditions(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadConditions(XmlReader)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadDoNotCacheCondition(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadDoNotCacheCondition(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadDoNotCacheCondition(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadDoNotCacheCondition(XmlReader)
- uid: System.IdentityModel.Tokens.SamlDoNotCacheCondition
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlDoNotCacheCondition
  nameWithType: SamlDoNotCacheCondition
  fullName: System.IdentityModel.Tokens.SamlDoNotCacheCondition
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadEvidence(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadEvidence(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadEvidence(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadEvidence(XmlReader)
- uid: System.IdentityModel.Tokens.SamlEvidence
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlEvidence
  nameWithType: SamlEvidence
  fullName: System.IdentityModel.Tokens.SamlEvidence
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSigningKeyInfo(System.Xml.XmlReader,System.IdentityModel.Tokens.SamlAssertion)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadSigningKeyInfo(XmlReader,SamlAssertion)
  nameWithType: SamlSecurityTokenHandler.ReadSigningKeyInfo(XmlReader,SamlAssertion)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSigningKeyInfo(XmlReader,SamlAssertion)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifier
  nameWithType: SecurityKeyIdentifier
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadStatement(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadStatement(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadStatement(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadStatement(XmlReader)
- uid: System.IdentityModel.Tokens.SamlStatement
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlStatement
  nameWithType: SamlStatement
  fullName: System.IdentityModel.Tokens.SamlStatement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubject(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadSubject(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadSubject(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubject(XmlReader)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubjectKeyInfo(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadSubjectKeyInfo(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadSubjectKeyInfo(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubjectKeyInfo(XmlReader)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadToken(XmlReader)
  nameWithType: SamlSecurityTokenHandler.ReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadToken(XmlReader)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveIssuerToken(System.IdentityModel.Tokens.SamlAssertion,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ResolveIssuerToken(SamlAssertion,SecurityTokenResolver)
  nameWithType: SamlSecurityTokenHandler.ResolveIssuerToken(SamlAssertion,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveIssuerToken(SamlAssertion,SecurityTokenResolver)
- uid: System.IdentityModel.Selectors.SecurityTokenResolver
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenResolver
  nameWithType: SecurityTokenResolver
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveSubjectKeyIdentifier(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ResolveSubjectKeyIdentifier(SecurityKeyIdentifier)
  nameWithType: SamlSecurityTokenHandler.ResolveSubjectKeyIdentifier(SecurityKeyIdentifier)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveSubjectKeyIdentifier(SecurityKeyIdentifier)
- uid: System.IdentityModel.Tokens.SecurityKey
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKey
  nameWithType: SecurityKey
  fullName: System.IdentityModel.Tokens.SecurityKey
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenRequirement
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: SamlSecurityTokenRequirement
  nameWithType: SamlSecurityTokenHandler.SamlSecurityTokenRequirement
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenRequirement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.SetDelegateFromAttribute(System.IdentityModel.Tokens.SamlAttribute,System.Security.Claims.ClaimsIdentity,System.String)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: SetDelegateFromAttribute(SamlAttribute,ClaimsIdentity,String)
  nameWithType: SamlSecurityTokenHandler.SetDelegateFromAttribute(SamlAttribute,ClaimsIdentity,String)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.SetDelegateFromAttribute(SamlAttribute,ClaimsIdentity,String)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.TokenType
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: TokenType
  nameWithType: SamlSecurityTokenHandler.TokenType
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.TokenType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.TryResolveIssuerToken(System.IdentityModel.Tokens.SamlAssertion,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: TryResolveIssuerToken(SamlAssertion,SecurityTokenResolver,SecurityToken)
  nameWithType: SamlSecurityTokenHandler.TryResolveIssuerToken(SamlAssertion,SecurityTokenResolver,SecurityToken)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.TryResolveIssuerToken(SamlAssertion,SecurityTokenResolver,SecurityToken)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.UnspecifiedAuthenticationMethod
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: UnspecifiedAuthenticationMethod
  nameWithType: SamlSecurityTokenHandler.UnspecifiedAuthenticationMethod
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.UnspecifiedAuthenticationMethod
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateConditions(System.IdentityModel.Tokens.SamlConditions,System.Boolean)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ValidateConditions(SamlConditions,Boolean)
  nameWithType: SamlSecurityTokenHandler.ValidateConditions(SamlConditions,Boolean)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateConditions(SamlConditions,Boolean)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ValidateToken(SecurityToken)
  nameWithType: SamlSecurityTokenHandler.ValidateToken(SecurityToken)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateToken(SecurityToken)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<ClaimsIdentity>
  nameWithType: ReadOnlyCollection<ClaimsIdentity>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Security.Claims.ClaimsIdentity>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.ClaimsIdentity
    name: ClaimsIdentity
    nameWithType: ClaimsIdentity
    fullName: ClaimsIdentity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAction(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAction)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAction(XmlWriter,SamlAction)
  nameWithType: SamlSecurityTokenHandler.WriteAction(XmlWriter,SamlAction)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAction(XmlWriter,SamlAction)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAdvice(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAdvice)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAdvice(XmlWriter,SamlAdvice)
  nameWithType: SamlSecurityTokenHandler.WriteAdvice(XmlWriter,SamlAdvice)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAdvice(XmlWriter,SamlAdvice)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAssertion(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAssertion)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAssertion(XmlWriter,SamlAssertion)
  nameWithType: SamlSecurityTokenHandler.WriteAssertion(XmlWriter,SamlAssertion)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAssertion(XmlWriter,SamlAssertion)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttribute(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAttribute)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAttribute(XmlWriter,SamlAttribute)
  nameWithType: SamlSecurityTokenHandler.WriteAttribute(XmlWriter,SamlAttribute)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttribute(XmlWriter,SamlAttribute)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAttributeStatement)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAttributeStatement(XmlWriter,SamlAttributeStatement)
  nameWithType: SamlSecurityTokenHandler.WriteAttributeStatement(XmlWriter,SamlAttributeStatement)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeStatement(XmlWriter,SamlAttributeStatement)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeValue(System.Xml.XmlWriter,System.String,System.IdentityModel.Tokens.SamlAttribute)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAttributeValue(XmlWriter,String,SamlAttribute)
  nameWithType: SamlSecurityTokenHandler.WriteAttributeValue(XmlWriter,String,SamlAttribute)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeValue(XmlWriter,String,SamlAttribute)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAudienceRestrictionCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAudienceRestrictionCondition)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAudienceRestrictionCondition(XmlWriter,SamlAudienceRestrictionCondition)
  nameWithType: SamlSecurityTokenHandler.WriteAudienceRestrictionCondition(XmlWriter,SamlAudienceRestrictionCondition)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAudienceRestrictionCondition(XmlWriter,SamlAudienceRestrictionCondition)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthenticationStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthenticationStatement)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAuthenticationStatement(XmlWriter,SamlAuthenticationStatement)
  nameWithType: SamlSecurityTokenHandler.WriteAuthenticationStatement(XmlWriter,SamlAuthenticationStatement)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthenticationStatement(XmlWriter,SamlAuthenticationStatement)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorityBinding(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthorityBinding)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAuthorityBinding(XmlWriter,SamlAuthorityBinding)
  nameWithType: SamlSecurityTokenHandler.WriteAuthorityBinding(XmlWriter,SamlAuthorityBinding)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorityBinding(XmlWriter,SamlAuthorityBinding)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorizationDecisionStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAuthorizationDecisionStatement(XmlWriter,SamlAuthorizationDecisionStatement)
  nameWithType: SamlSecurityTokenHandler.WriteAuthorizationDecisionStatement(XmlWriter,SamlAuthorizationDecisionStatement)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorizationDecisionStatement(XmlWriter,SamlAuthorizationDecisionStatement)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlCondition)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteCondition(XmlWriter,SamlCondition)
  nameWithType: SamlSecurityTokenHandler.WriteCondition(XmlWriter,SamlCondition)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteCondition(XmlWriter,SamlCondition)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteConditions(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlConditions)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteConditions(XmlWriter,SamlConditions)
  nameWithType: SamlSecurityTokenHandler.WriteConditions(XmlWriter,SamlConditions)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteConditions(XmlWriter,SamlConditions)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteDoNotCacheCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlDoNotCacheCondition)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteDoNotCacheCondition(XmlWriter,SamlDoNotCacheCondition)
  nameWithType: SamlSecurityTokenHandler.WriteDoNotCacheCondition(XmlWriter,SamlDoNotCacheCondition)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteDoNotCacheCondition(XmlWriter,SamlDoNotCacheCondition)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteEvidence(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlEvidence)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteEvidence(XmlWriter,SamlEvidence)
  nameWithType: SamlSecurityTokenHandler.WriteEvidence(XmlWriter,SamlEvidence)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteEvidence(XmlWriter,SamlEvidence)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSigningKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteSigningKeyInfo(XmlWriter,SecurityKeyIdentifier)
  nameWithType: SamlSecurityTokenHandler.WriteSigningKeyInfo(XmlWriter,SecurityKeyIdentifier)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSigningKeyInfo(XmlWriter,SecurityKeyIdentifier)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlStatement)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteStatement(XmlWriter,SamlStatement)
  nameWithType: SamlSecurityTokenHandler.WriteStatement(XmlWriter,SamlStatement)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteStatement(XmlWriter,SamlStatement)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubject(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlSubject)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteSubject(XmlWriter,SamlSubject)
  nameWithType: SamlSecurityTokenHandler.WriteSubject(XmlWriter,SamlSubject)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubject(XmlWriter,SamlSubject)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubjectKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteSubjectKeyInfo(XmlWriter,SecurityKeyIdentifier)
  nameWithType: SamlSecurityTokenHandler.WriteSubjectKeyInfo(XmlWriter,SecurityKeyIdentifier)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubjectKeyInfo(XmlWriter,SecurityKeyIdentifier)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteToken(XmlWriter,SecurityToken)
  nameWithType: SamlSecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)
  fullName: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.#ctor*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: SamlSecurityTokenHandler
  nameWithType: SamlSecurityTokenHandler.SamlSecurityTokenHandler
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.AddDelegateToAttributes*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: AddDelegateToAttributes
  nameWithType: SamlSecurityTokenHandler.AddDelegateToAttributes
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanReadToken*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CanReadToken
  nameWithType: SamlSecurityTokenHandler.CanReadToken
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanValidateToken*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CanValidateToken
  nameWithType: SamlSecurityTokenHandler.CanValidateToken
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanWriteToken*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CanWriteToken
  nameWithType: SamlSecurityTokenHandler.CanWriteToken
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CertificateValidator*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CertificateValidator
  nameWithType: SamlSecurityTokenHandler.CertificateValidator
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CollectAttributeValues*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CollectAttributeValues
  nameWithType: SamlSecurityTokenHandler.CollectAttributeValues
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAdvice*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateAdvice
  nameWithType: SamlSecurityTokenHandler.CreateAdvice
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAssertion*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateAssertion
  nameWithType: SamlSecurityTokenHandler.CreateAssertion
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttribute*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateAttribute
  nameWithType: SamlSecurityTokenHandler.CreateAttribute
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttributeStatement*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateAttributeStatement
  nameWithType: SamlSecurityTokenHandler.CreateAttributeStatement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAuthenticationStatement*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateAuthenticationStatement
  nameWithType: SamlSecurityTokenHandler.CreateAuthenticationStatement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateClaims*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateClaims
  nameWithType: SamlSecurityTokenHandler.CreateClaims
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateConditions*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateConditions
  nameWithType: SamlSecurityTokenHandler.CreateConditions
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSamlSubject*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateSamlSubject
  nameWithType: SamlSecurityTokenHandler.CreateSamlSubject
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSecurityTokenReference*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateSecurityTokenReference
  nameWithType: SamlSecurityTokenHandler.CreateSecurityTokenReference
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateStatements*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateStatements
  nameWithType: SamlSecurityTokenHandler.CreateStatements
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateToken*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateToken
  nameWithType: SamlSecurityTokenHandler.CreateToken
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateWindowsIdentity*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateWindowsIdentity
  nameWithType: SamlSecurityTokenHandler.CreateWindowsIdentity
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateXmlStringFromAttributes*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: CreateXmlStringFromAttributes
  nameWithType: SamlSecurityTokenHandler.CreateXmlStringFromAttributes
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.DenormalizeAuthenticationType*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: DenormalizeAuthenticationType
  nameWithType: SamlSecurityTokenHandler.DenormalizeAuthenticationType
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.DetectReplayedToken*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: DetectReplayedToken
  nameWithType: SamlSecurityTokenHandler.DetectReplayedToken
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.FindUpn*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: FindUpn
  nameWithType: SamlSecurityTokenHandler.FindUpn
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetEncryptingCredentials*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: GetEncryptingCredentials
  nameWithType: SamlSecurityTokenHandler.GetEncryptingCredentials
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetSigningCredentials*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: GetSigningCredentials
  nameWithType: SamlSecurityTokenHandler.GetSigningCredentials
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: GetTokenReplayCacheEntryExpirationTime
  nameWithType: SamlSecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenTypeIdentifiers*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: GetTokenTypeIdentifiers
  nameWithType: SamlSecurityTokenHandler.GetTokenTypeIdentifiers
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.KeyInfoSerializer*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: KeyInfoSerializer
  nameWithType: SamlSecurityTokenHandler.KeyInfoSerializer
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.LoadCustomConfiguration*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: LoadCustomConfiguration
  nameWithType: SamlSecurityTokenHandler.LoadCustomConfiguration
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.NormalizeAuthenticationType*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: NormalizeAuthenticationType
  nameWithType: SamlSecurityTokenHandler.NormalizeAuthenticationType
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAttributeStatement*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ProcessAttributeStatement
  nameWithType: SamlSecurityTokenHandler.ProcessAttributeStatement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthenticationStatement*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ProcessAuthenticationStatement
  nameWithType: SamlSecurityTokenHandler.ProcessAuthenticationStatement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthorizationDecisionStatement*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ProcessAuthorizationDecisionStatement
  nameWithType: SamlSecurityTokenHandler.ProcessAuthorizationDecisionStatement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessSamlSubject*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ProcessSamlSubject
  nameWithType: SamlSecurityTokenHandler.ProcessSamlSubject
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessStatement*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ProcessStatement
  nameWithType: SamlSecurityTokenHandler.ProcessStatement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAction*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAction
  nameWithType: SamlSecurityTokenHandler.ReadAction
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAdvice*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAdvice
  nameWithType: SamlSecurityTokenHandler.ReadAdvice
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAssertion*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAssertion
  nameWithType: SamlSecurityTokenHandler.ReadAssertion
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttribute*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAttribute
  nameWithType: SamlSecurityTokenHandler.ReadAttribute
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeStatement*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAttributeStatement
  nameWithType: SamlSecurityTokenHandler.ReadAttributeStatement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeValue*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAttributeValue
  nameWithType: SamlSecurityTokenHandler.ReadAttributeValue
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAudienceRestrictionCondition*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAudienceRestrictionCondition
  nameWithType: SamlSecurityTokenHandler.ReadAudienceRestrictionCondition
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthenticationStatement*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAuthenticationStatement
  nameWithType: SamlSecurityTokenHandler.ReadAuthenticationStatement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorityBinding*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAuthorityBinding
  nameWithType: SamlSecurityTokenHandler.ReadAuthorityBinding
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorizationDecisionStatement*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadAuthorizationDecisionStatement
  nameWithType: SamlSecurityTokenHandler.ReadAuthorizationDecisionStatement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadCondition*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadCondition
  nameWithType: SamlSecurityTokenHandler.ReadCondition
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadConditions*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadConditions
  nameWithType: SamlSecurityTokenHandler.ReadConditions
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadDoNotCacheCondition*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadDoNotCacheCondition
  nameWithType: SamlSecurityTokenHandler.ReadDoNotCacheCondition
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadEvidence*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadEvidence
  nameWithType: SamlSecurityTokenHandler.ReadEvidence
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSigningKeyInfo*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadSigningKeyInfo
  nameWithType: SamlSecurityTokenHandler.ReadSigningKeyInfo
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadStatement*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadStatement
  nameWithType: SamlSecurityTokenHandler.ReadStatement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubject*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadSubject
  nameWithType: SamlSecurityTokenHandler.ReadSubject
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubjectKeyInfo*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadSubjectKeyInfo
  nameWithType: SamlSecurityTokenHandler.ReadSubjectKeyInfo
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadToken*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ReadToken
  nameWithType: SamlSecurityTokenHandler.ReadToken
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveIssuerToken*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ResolveIssuerToken
  nameWithType: SamlSecurityTokenHandler.ResolveIssuerToken
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveSubjectKeyIdentifier*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ResolveSubjectKeyIdentifier
  nameWithType: SamlSecurityTokenHandler.ResolveSubjectKeyIdentifier
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenRequirement*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: SamlSecurityTokenRequirement
  nameWithType: SamlSecurityTokenHandler.SamlSecurityTokenRequirement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.SetDelegateFromAttribute*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: SetDelegateFromAttribute
  nameWithType: SamlSecurityTokenHandler.SetDelegateFromAttribute
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.TokenType*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: TokenType
  nameWithType: SamlSecurityTokenHandler.TokenType
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.TryResolveIssuerToken*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: TryResolveIssuerToken
  nameWithType: SamlSecurityTokenHandler.TryResolveIssuerToken
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateConditions*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ValidateConditions
  nameWithType: SamlSecurityTokenHandler.ValidateConditions
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateToken*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: ValidateToken
  nameWithType: SamlSecurityTokenHandler.ValidateToken
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAction*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAction
  nameWithType: SamlSecurityTokenHandler.WriteAction
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAdvice*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAdvice
  nameWithType: SamlSecurityTokenHandler.WriteAdvice
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAssertion*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAssertion
  nameWithType: SamlSecurityTokenHandler.WriteAssertion
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttribute*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAttribute
  nameWithType: SamlSecurityTokenHandler.WriteAttribute
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeStatement*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAttributeStatement
  nameWithType: SamlSecurityTokenHandler.WriteAttributeStatement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeValue*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAttributeValue
  nameWithType: SamlSecurityTokenHandler.WriteAttributeValue
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAudienceRestrictionCondition*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAudienceRestrictionCondition
  nameWithType: SamlSecurityTokenHandler.WriteAudienceRestrictionCondition
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthenticationStatement*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAuthenticationStatement
  nameWithType: SamlSecurityTokenHandler.WriteAuthenticationStatement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorityBinding*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAuthorityBinding
  nameWithType: SamlSecurityTokenHandler.WriteAuthorityBinding
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorizationDecisionStatement*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteAuthorizationDecisionStatement
  nameWithType: SamlSecurityTokenHandler.WriteAuthorizationDecisionStatement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteCondition*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteCondition
  nameWithType: SamlSecurityTokenHandler.WriteCondition
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteConditions*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteConditions
  nameWithType: SamlSecurityTokenHandler.WriteConditions
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteDoNotCacheCondition*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteDoNotCacheCondition
  nameWithType: SamlSecurityTokenHandler.WriteDoNotCacheCondition
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteEvidence*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteEvidence
  nameWithType: SamlSecurityTokenHandler.WriteEvidence
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSigningKeyInfo*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteSigningKeyInfo
  nameWithType: SamlSecurityTokenHandler.WriteSigningKeyInfo
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteStatement*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteStatement
  nameWithType: SamlSecurityTokenHandler.WriteStatement
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubject*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteSubject
  nameWithType: SamlSecurityTokenHandler.WriteSubject
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubjectKeyInfo*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteSubjectKeyInfo
  nameWithType: SamlSecurityTokenHandler.WriteSubjectKeyInfo
- uid: System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteToken*
  parent: System.IdentityModel.Tokens.SamlSecurityTokenHandler
  isExternal: false
  name: WriteToken
  nameWithType: SamlSecurityTokenHandler.WriteToken
