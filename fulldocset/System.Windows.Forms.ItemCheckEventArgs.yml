### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.ItemCheckEventArgs
  id: ItemCheckEventArgs
  children:
  - System.Windows.Forms.ItemCheckEventArgs.#ctor(System.Int32,System.Windows.Forms.CheckState,System.Windows.Forms.CheckState)
  - System.Windows.Forms.ItemCheckEventArgs.CurrentValue
  - System.Windows.Forms.ItemCheckEventArgs.Index
  - System.Windows.Forms.ItemCheckEventArgs.NewValue
  langs:
  - csharp
  name: ItemCheckEventArgs
  nameWithType: ItemCheckEventArgs
  fullName: System.Windows.Forms.ItemCheckEventArgs
  type: Class
  summary: "Provides data for the <xref href=&quot;System.Windows.Forms.CheckedListBox.ItemCheck&quot;></xref> event of the <xref href=&quot;System.Windows.Forms.CheckedListBox&quot;></xref> and <xref href=&quot;System.Windows.Forms.ListView&quot;></xref> controls."
  remarks: "The <xref:System.Windows.Forms.CheckedListBox.ItemCheck> event occurs when the checked state of an item in a checked list box changes. The ItemCheckEventArgs class specifies the index of the item to change, the current value of the check box for the item, and the new value to set for the check box.       For more information about handling events, see [Events](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates a checked <xref:System.Windows.Forms.ListView> control that handles the <xref:System.Windows.Forms.ListView.ItemCheck?displayProperty=fullName> event. The method uses the <xref:System.Windows.Forms.ItemCheckEventArgs.CurrentValue%2A> and <xref:System.Windows.Forms.ItemCheckEventArgs.Index%2A> properties of the ItemCheckEventArgs object to retrieve and tally the price of the menu items selected. To run this example paste the following code in a form containing a <xref:System.Windows.Forms.ListView> named `ListView1` and a <xref:System.Windows.Forms.TextBox> named `Textbox1`. Call the `InititalizeListView` method from the form's constructor or `Load` method. Ensure all events are associated with their event-handling methods.  \n  \n [!code-cs[System.Windows.Forms.ListView2#1](~/add/codesnippet/csharp/t-system.windows.forms.i_3_1.cs)]\n [!code-vb[System.Windows.Forms.ListView2#1](~/add/codesnippet/visualbasic/t-system.windows.forms.i_3_1.vb)]\n [!code-cpp[System.Windows.Forms.ListView2#1](~/add/codesnippet/cpp/t-system.windows.forms.i_3_1.cpp)]  \n[!code-cs[System.Windows.Forms.ListView2#2](~/add/codesnippet/csharp/t-system.windows.forms.i_3_2.cs)]\n[!code-vb[System.Windows.Forms.ListView2#2](~/add/codesnippet/visualbasic/t-system.windows.forms.i_3_2.vb)]\n[!code-cpp[System.Windows.Forms.ListView2#2](~/add/codesnippet/cpp/t-system.windows.forms.i_3_2.cpp)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class ItemCheckEventArgs : EventArgs
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.ItemCheckEventArgs.#ctor(System.Int32,System.Windows.Forms.CheckState,System.Windows.Forms.CheckState)
  id: '#ctor(System.Int32,System.Windows.Forms.CheckState,System.Windows.Forms.CheckState)'
  parent: System.Windows.Forms.ItemCheckEventArgs
  langs:
  - csharp
  name: ItemCheckEventArgs(Int32,CheckState,CheckState)
  nameWithType: ItemCheckEventArgs.ItemCheckEventArgs(Int32,CheckState,CheckState)
  fullName: System.Windows.Forms.ItemCheckEventArgs.ItemCheckEventArgs(Int32,CheckState,CheckState)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Forms.ItemCheckEventArgs&quot;></xref> class."
  syntax:
    content: public ItemCheckEventArgs (int index, System.Windows.Forms.CheckState newCheckValue, System.Windows.Forms.CheckState currentValue);
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based index of the item to change."
    - id: newCheckValue
      type: System.Windows.Forms.CheckState
      description: "One of the <xref href=&quot;System.Windows.Forms.CheckState&quot;></xref> values that indicates whether to change the check box for the item to be checked, unchecked, or indeterminate."
    - id: currentValue
      type: System.Windows.Forms.CheckState
      description: "One of the <xref href=&quot;System.Windows.Forms.CheckState&quot;></xref> values that indicates whether the check box for the item is currently checked, unchecked, or indeterminate."
  overload: System.Windows.Forms.ItemCheckEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ItemCheckEventArgs.CurrentValue
  id: CurrentValue
  parent: System.Windows.Forms.ItemCheckEventArgs
  langs:
  - csharp
  name: CurrentValue
  nameWithType: ItemCheckEventArgs.CurrentValue
  fullName: System.Windows.Forms.ItemCheckEventArgs.CurrentValue
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets a value indicating the current state of the item&quot;s check box."
  remarks: "This property enables you to determine the check state of the specified item in the <xref:System.Windows.Forms.CheckedListBox> before the check state change to apply is made."
  example:
  - "The following code example demonstrates a checked <xref:System.Windows.Forms.ListView> control that handles the <xref:System.Windows.Forms.ListView.ItemChecked?displayProperty=fullName> event. The method uses the CurrentValue and <xref:System.Windows.Forms.ItemCheckEventArgs.Index%2A> properties of the <xref:System.Windows.Forms.ItemCheckEventArgs> object to retrieve and tally the price of the menu items selected. To run this example paste the following code in a form containing a <xref:System.Windows.Forms.ListView> named `ListView1` and a <xref:System.Windows.Forms.TextBox> named `Textbox1`. Call the `InititalizeListView` method from the form's constructor or `Load` method. Ensure all events are associated with their event-handling methods.  \n  \n [!code-cs[System.Windows.Forms.ListView2#1](~/add/codesnippet/csharp/p-system.windows.forms.i_26_1.cs)]\n [!code-vb[System.Windows.Forms.ListView2#1](~/add/codesnippet/visualbasic/p-system.windows.forms.i_26_1.vb)]\n [!code-cpp[System.Windows.Forms.ListView2#1](~/add/codesnippet/cpp/p-system.windows.forms.i_26_1.cpp)]  \n[!code-cs[System.Windows.Forms.ListView2#2](~/add/codesnippet/csharp/p-system.windows.forms.i_26_2.cs)]\n[!code-vb[System.Windows.Forms.ListView2#2](~/add/codesnippet/visualbasic/p-system.windows.forms.i_26_2.vb)]\n[!code-cpp[System.Windows.Forms.ListView2#2](~/add/codesnippet/cpp/p-system.windows.forms.i_26_2.cpp)]"
  syntax:
    content: public System.Windows.Forms.CheckState CurrentValue { get; }
    return:
      type: System.Windows.Forms.CheckState
      description: "One of the <xref href=&quot;System.Windows.Forms.CheckState&quot;></xref> values."
  overload: System.Windows.Forms.ItemCheckEventArgs.CurrentValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ItemCheckEventArgs.Index
  id: Index
  parent: System.Windows.Forms.ItemCheckEventArgs
  langs:
  - csharp
  name: Index
  nameWithType: ItemCheckEventArgs.Index
  fullName: System.Windows.Forms.ItemCheckEventArgs.Index
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the zero-based index of the item to change."
  remarks: "You can use this property to determine which item&quot;s check box in the <xref:System.Windows.Forms.CheckedListBox> is being changed."
  example:
  - "The following code example demonstrates a checked <xref:System.Windows.Forms.ListView> control that handles the <xref:System.Windows.Forms.ListView.ItemChecked?displayProperty=fullName> event. The method uses the <xref:System.Windows.Forms.ItemCheckEventArgs.CurrentValue%2A> and Index properties of the <xref:System.Windows.Forms.ItemCheckEventArgs> object to retrieve and tally the price of the menu items selected. To run this example paste the following code in a form containing a <xref:System.Windows.Forms.ListView> named `ListView1` and a <xref:System.Windows.Forms.TextBox> named `Textbox1`. Call the `InititalizeListView` method from the form's constructor or `Load` method. Ensure all events are associated with their event-handling methods.  \n  \n [!code-cs[System.Windows.Forms.ListView2#1](~/add/codesnippet/csharp/p-system.windows.forms.i_29_1.cs)]\n [!code-vb[System.Windows.Forms.ListView2#1](~/add/codesnippet/visualbasic/p-system.windows.forms.i_29_1.vb)]\n [!code-cpp[System.Windows.Forms.ListView2#1](~/add/codesnippet/cpp/p-system.windows.forms.i_29_1.cpp)]  \n[!code-cs[System.Windows.Forms.ListView2#2](~/add/codesnippet/csharp/p-system.windows.forms.i_29_2.cs)]\n[!code-vb[System.Windows.Forms.ListView2#2](~/add/codesnippet/visualbasic/p-system.windows.forms.i_29_2.vb)]\n[!code-cpp[System.Windows.Forms.ListView2#2](~/add/codesnippet/cpp/p-system.windows.forms.i_29_2.cpp)]"
  syntax:
    content: public int Index { get; }
    return:
      type: System.Int32
      description: "The zero-based index of the item to change."
  overload: System.Windows.Forms.ItemCheckEventArgs.Index*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.ItemCheckEventArgs.NewValue
  id: NewValue
  parent: System.Windows.Forms.ItemCheckEventArgs
  langs:
  - csharp
  name: NewValue
  nameWithType: ItemCheckEventArgs.NewValue
  fullName: System.Windows.Forms.ItemCheckEventArgs.NewValue
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets a value indicating whether to set the check box for the item to be checked, unchecked, or indeterminate."
  remarks: "This property enables you to determine the new check state for the specified item before the check state is changed by the <xref:System.Windows.Forms.CheckedListBox> control. In addition to determining the new check state, you can use this property in an event handler for the <xref:System.Windows.Forms.CheckedListBox.ItemCheck> event to change the state to a different check state than the one specified. For example, if the user placed a check mark next to an item in the <xref:System.Windows.Forms.CheckedListBox> that you have determined should not be checked based on the state of your application, you can override the change in the check mark state by setting this property to its previous setting or to a different check state."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.CheckedListBox.ItemCheck?displayProperty=fullName> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.CheckedListBox> named `CheckedListBox1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.CheckedListBox.ItemCheck?displayProperty=fullName> event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#156](~/add/codesnippet/csharp/p-system.windows.forms.i_12_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#156](~/add/codesnippet/visualbasic/p-system.windows.forms.i_12_1.vb)]"
  syntax:
    content: public System.Windows.Forms.CheckState NewValue { get; set; }
    return:
      type: System.Windows.Forms.CheckState
      description: "One of the <xref href=&quot;System.Windows.Forms.CheckState&quot;></xref> values."
  overload: System.Windows.Forms.ItemCheckEventArgs.NewValue*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Windows.Forms.ItemCheckEventArgs.#ctor(System.Int32,System.Windows.Forms.CheckState,System.Windows.Forms.CheckState)
  parent: System.Windows.Forms.ItemCheckEventArgs
  isExternal: false
  name: ItemCheckEventArgs(Int32,CheckState,CheckState)
  nameWithType: ItemCheckEventArgs.ItemCheckEventArgs(Int32,CheckState,CheckState)
  fullName: System.Windows.Forms.ItemCheckEventArgs.ItemCheckEventArgs(Int32,CheckState,CheckState)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.CheckState
  parent: System.Windows.Forms
  isExternal: false
  name: CheckState
  nameWithType: CheckState
  fullName: System.Windows.Forms.CheckState
- uid: System.Windows.Forms.ItemCheckEventArgs.CurrentValue
  parent: System.Windows.Forms.ItemCheckEventArgs
  isExternal: false
  name: CurrentValue
  nameWithType: ItemCheckEventArgs.CurrentValue
  fullName: System.Windows.Forms.ItemCheckEventArgs.CurrentValue
- uid: System.Windows.Forms.ItemCheckEventArgs.Index
  parent: System.Windows.Forms.ItemCheckEventArgs
  isExternal: false
  name: Index
  nameWithType: ItemCheckEventArgs.Index
  fullName: System.Windows.Forms.ItemCheckEventArgs.Index
- uid: System.Windows.Forms.ItemCheckEventArgs.NewValue
  parent: System.Windows.Forms.ItemCheckEventArgs
  isExternal: false
  name: NewValue
  nameWithType: ItemCheckEventArgs.NewValue
  fullName: System.Windows.Forms.ItemCheckEventArgs.NewValue
- uid: System.Windows.Forms.ItemCheckEventArgs.#ctor*
  parent: System.Windows.Forms.ItemCheckEventArgs
  isExternal: false
  name: ItemCheckEventArgs
  nameWithType: ItemCheckEventArgs.ItemCheckEventArgs
- uid: System.Windows.Forms.ItemCheckEventArgs.CurrentValue*
  parent: System.Windows.Forms.ItemCheckEventArgs
  isExternal: false
  name: CurrentValue
  nameWithType: ItemCheckEventArgs.CurrentValue
- uid: System.Windows.Forms.ItemCheckEventArgs.Index*
  parent: System.Windows.Forms.ItemCheckEventArgs
  isExternal: false
  name: Index
  nameWithType: ItemCheckEventArgs.Index
- uid: System.Windows.Forms.ItemCheckEventArgs.NewValue*
  parent: System.Windows.Forms.ItemCheckEventArgs
  isExternal: false
  name: NewValue
  nameWithType: ItemCheckEventArgs.NewValue
