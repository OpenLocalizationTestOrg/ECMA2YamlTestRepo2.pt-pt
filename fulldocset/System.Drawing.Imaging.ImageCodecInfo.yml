### YamlMime:ManagedReference
items:
- uid: System.Drawing.Imaging.ImageCodecInfo
  id: ImageCodecInfo
  children:
  - System.Drawing.Imaging.ImageCodecInfo.Clsid
  - System.Drawing.Imaging.ImageCodecInfo.CodecName
  - System.Drawing.Imaging.ImageCodecInfo.DllName
  - System.Drawing.Imaging.ImageCodecInfo.FilenameExtension
  - System.Drawing.Imaging.ImageCodecInfo.Flags
  - System.Drawing.Imaging.ImageCodecInfo.FormatDescription
  - System.Drawing.Imaging.ImageCodecInfo.FormatID
  - System.Drawing.Imaging.ImageCodecInfo.GetImageDecoders
  - System.Drawing.Imaging.ImageCodecInfo.GetImageEncoders
  - System.Drawing.Imaging.ImageCodecInfo.MimeType
  - System.Drawing.Imaging.ImageCodecInfo.SignatureMasks
  - System.Drawing.Imaging.ImageCodecInfo.SignaturePatterns
  - System.Drawing.Imaging.ImageCodecInfo.Version
  langs:
  - csharp
  name: ImageCodecInfo
  nameWithType: ImageCodecInfo
  fullName: System.Drawing.Imaging.ImageCodecInfo
  type: Class
  summary: "The ImageCodecInfo class provides the necessary storage members and methods to retrieve all pertinent information about the installed image encoders and decoders (called codecs). Not inheritable."
  remarks: "GDI+ uses image encoders to convert the images stored in <xref:System.Drawing.Bitmap> objects to various file formats. Image encoders are built into GDI+ for the BMP, JPEG, GIF, TIFF, and PNG formats. An encoder is invoked when you call the <xref:System.Drawing.Image.Save%2A> or <xref:System.Drawing.Image.SaveAdd%2A> method of a <xref:System.Drawing.Image> object."
  syntax:
    content: public sealed class ImageCodecInfo
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageCodecInfo.Clsid
  id: Clsid
  parent: System.Drawing.Imaging.ImageCodecInfo
  langs:
  - csharp
  name: Clsid
  nameWithType: ImageCodecInfo.Clsid
  fullName: System.Drawing.Imaging.ImageCodecInfo.Clsid
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Gets or sets a <xref:System.Guid> structure that contains a GUID that identifies a specific codec."
  syntax:
    content: public Guid Clsid { get; set; }
    return:
      type: System.Guid
      description: "A <xref:System.Guid> structure that contains a GUID that identifies a specific codec."
  overload: System.Drawing.Imaging.ImageCodecInfo.Clsid*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageCodecInfo.CodecName
  id: CodecName
  parent: System.Drawing.Imaging.ImageCodecInfo
  langs:
  - csharp
  name: CodecName
  nameWithType: ImageCodecInfo.CodecName
  fullName: System.Drawing.Imaging.ImageCodecInfo.CodecName
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Gets or sets a string that contains the name of the codec."
  syntax:
    content: public string CodecName { get; set; }
    return:
      type: System.String
      description: "A string that contains the name of the codec."
  overload: System.Drawing.Imaging.ImageCodecInfo.CodecName*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageCodecInfo.DllName
  id: DllName
  parent: System.Drawing.Imaging.ImageCodecInfo
  langs:
  - csharp
  name: DllName
  nameWithType: ImageCodecInfo.DllName
  fullName: System.Drawing.Imaging.ImageCodecInfo.DllName
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Gets or sets string that contains the path name of the DLL that holds the codec. If the codec is not in a DLL, this pointer is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  syntax:
    content: public string DllName { get; set; }
    return:
      type: System.String
      description: "A string that contains the path name of the DLL that holds the codec."
  overload: System.Drawing.Imaging.ImageCodecInfo.DllName*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageCodecInfo.FilenameExtension
  id: FilenameExtension
  parent: System.Drawing.Imaging.ImageCodecInfo
  langs:
  - csharp
  name: FilenameExtension
  nameWithType: ImageCodecInfo.FilenameExtension
  fullName: System.Drawing.Imaging.ImageCodecInfo.FilenameExtension
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Gets or sets string that contains the file name extension(s) used in the codec. The extensions are separated by semicolons."
  syntax:
    content: public string FilenameExtension { get; set; }
    return:
      type: System.String
      description: "A string that contains the file name extension(s) used in the codec."
  overload: System.Drawing.Imaging.ImageCodecInfo.FilenameExtension*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageCodecInfo.Flags
  id: Flags
  parent: System.Drawing.Imaging.ImageCodecInfo
  langs:
  - csharp
  name: Flags
  nameWithType: ImageCodecInfo.Flags
  fullName: System.Drawing.Imaging.ImageCodecInfo.Flags
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Gets or sets 32-bit value used to store additional information about the codec. This property returns a combination of flags from the <xref href=&quot;System.Drawing.Imaging.ImageCodecFlags&quot;></xref> enumeration."
  syntax:
    content: public System.Drawing.Imaging.ImageCodecFlags Flags { get; set; }
    return:
      type: System.Drawing.Imaging.ImageCodecFlags
      description: "A 32-bit value used to store additional information about the codec."
  overload: System.Drawing.Imaging.ImageCodecInfo.Flags*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageCodecInfo.FormatDescription
  id: FormatDescription
  parent: System.Drawing.Imaging.ImageCodecInfo
  langs:
  - csharp
  name: FormatDescription
  nameWithType: ImageCodecInfo.FormatDescription
  fullName: System.Drawing.Imaging.ImageCodecInfo.FormatDescription
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Gets or sets a string that describes the codec&quot;s file format."
  syntax:
    content: public string FormatDescription { get; set; }
    return:
      type: System.String
      description: "A string that describes the codec&quot;s file format."
  overload: System.Drawing.Imaging.ImageCodecInfo.FormatDescription*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageCodecInfo.FormatID
  id: FormatID
  parent: System.Drawing.Imaging.ImageCodecInfo
  langs:
  - csharp
  name: FormatID
  nameWithType: ImageCodecInfo.FormatID
  fullName: System.Drawing.Imaging.ImageCodecInfo.FormatID
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Gets or sets a <xref:System.Guid> structure that contains a GUID that identifies the codec&quot;s format."
  syntax:
    content: public Guid FormatID { get; set; }
    return:
      type: System.Guid
      description: "A <xref:System.Guid> structure that contains a GUID that identifies the codec&quot;s format."
  overload: System.Drawing.Imaging.ImageCodecInfo.FormatID*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageCodecInfo.GetImageDecoders
  id: GetImageDecoders
  parent: System.Drawing.Imaging.ImageCodecInfo
  langs:
  - csharp
  name: GetImageDecoders()
  nameWithType: ImageCodecInfo.GetImageDecoders()
  fullName: System.Drawing.Imaging.ImageCodecInfo.GetImageDecoders()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Returns an array of <xref href=&quot;System.Drawing.Imaging.ImageCodecInfo&quot;></xref> objects that contain information about the image decoders built into GDI+."
  remarks: ''
  example:
  - For an example, see <xref:System.Drawing.Imaging.ImageCodecInfo.GetImageEncoders%2A>.
  syntax:
    content: public static System.Drawing.Imaging.ImageCodecInfo[] GetImageDecoders ();
    parameters: []
    return:
      type: System.Drawing.Imaging.ImageCodecInfo[]
      description: "An array of <xref href=&quot;System.Drawing.Imaging.ImageCodecInfo&quot;></xref> objects. Each <xref href=&quot;System.Drawing.Imaging.ImageCodecInfo&quot;></xref> object in the array contains information about one of the built-in image decoders."
  overload: System.Drawing.Imaging.ImageCodecInfo.GetImageDecoders*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageCodecInfo.GetImageEncoders
  id: GetImageEncoders
  parent: System.Drawing.Imaging.ImageCodecInfo
  langs:
  - csharp
  name: GetImageEncoders()
  nameWithType: ImageCodecInfo.GetImageEncoders()
  fullName: System.Drawing.Imaging.ImageCodecInfo.GetImageEncoders()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Returns an array of <xref href=&quot;System.Drawing.Imaging.ImageCodecInfo&quot;></xref> objects that contain information about the image encoders built into GDI+."
  remarks: ''
  example:
  - "The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code uses the GetImageEncoders method to retrieve all the codec information for all installed image encoders and codecs, and then draws all the information about each codec to the screen.  \n  \n [!code-cpp[System.Drawing.Imaging.ClassicImageCodecExample#1](~/add/codesnippet/cpp/m-system.drawing.imaging_3_1.cpp)]\n [!code-vb[System.Drawing.Imaging.ClassicImageCodecExample#1](~/add/codesnippet/visualbasic/m-system.drawing.imaging_3_1.vb)]\n [!code-cs[System.Drawing.Imaging.ClassicImageCodecExample#1](~/add/codesnippet/csharp/m-system.drawing.imaging_3_1.cs)]"
  syntax:
    content: public static System.Drawing.Imaging.ImageCodecInfo[] GetImageEncoders ();
    parameters: []
    return:
      type: System.Drawing.Imaging.ImageCodecInfo[]
      description: "An array of <xref href=&quot;System.Drawing.Imaging.ImageCodecInfo&quot;></xref> objects. Each <xref href=&quot;System.Drawing.Imaging.ImageCodecInfo&quot;></xref> object in the array contains information about one of the built-in image encoders."
  overload: System.Drawing.Imaging.ImageCodecInfo.GetImageEncoders*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageCodecInfo.MimeType
  id: MimeType
  parent: System.Drawing.Imaging.ImageCodecInfo
  langs:
  - csharp
  name: MimeType
  nameWithType: ImageCodecInfo.MimeType
  fullName: System.Drawing.Imaging.ImageCodecInfo.MimeType
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Gets or sets a string that contains the codec&quot;s Multipurpose Internet Mail Extensions (MIME) type."
  syntax:
    content: public string MimeType { get; set; }
    return:
      type: System.String
      description: "A string that contains the codec&quot;s Multipurpose Internet Mail Extensions (MIME) type."
  overload: System.Drawing.Imaging.ImageCodecInfo.MimeType*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageCodecInfo.SignatureMasks
  id: SignatureMasks
  parent: System.Drawing.Imaging.ImageCodecInfo
  langs:
  - csharp
  name: SignatureMasks
  nameWithType: ImageCodecInfo.SignatureMasks
  fullName: System.Drawing.Imaging.ImageCodecInfo.SignatureMasks
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Gets or sets a two dimensional array of bytes that can be used as a filter."
  syntax:
    content: public byte[][] SignatureMasks { get; set; }
    return:
      type: System.Byte[][]
      description: "A two dimensional array of bytes that can be used as a filter."
  overload: System.Drawing.Imaging.ImageCodecInfo.SignatureMasks*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageCodecInfo.SignaturePatterns
  id: SignaturePatterns
  parent: System.Drawing.Imaging.ImageCodecInfo
  langs:
  - csharp
  name: SignaturePatterns
  nameWithType: ImageCodecInfo.SignaturePatterns
  fullName: System.Drawing.Imaging.ImageCodecInfo.SignaturePatterns
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Gets or sets a two dimensional array of bytes that represents the signature of the codec."
  syntax:
    content: public byte[][] SignaturePatterns { get; set; }
    return:
      type: System.Byte[][]
      description: "A two dimensional array of bytes that represents the signature of the codec."
  overload: System.Drawing.Imaging.ImageCodecInfo.SignaturePatterns*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.ImageCodecInfo.Version
  id: Version
  parent: System.Drawing.Imaging.ImageCodecInfo
  langs:
  - csharp
  name: Version
  nameWithType: ImageCodecInfo.Version
  fullName: System.Drawing.Imaging.ImageCodecInfo.Version
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "Gets or sets the version number of the codec."
  syntax:
    content: public int Version { get; set; }
    return:
      type: System.Int32
      description: "The version number of the codec."
  overload: System.Drawing.Imaging.ImageCodecInfo.Version*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Drawing.Imaging.ImageCodecInfo.Clsid
  parent: System.Drawing.Imaging.ImageCodecInfo
  isExternal: false
  name: Clsid
  nameWithType: ImageCodecInfo.Clsid
  fullName: System.Drawing.Imaging.ImageCodecInfo.Clsid
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Drawing.Imaging.ImageCodecInfo.CodecName
  parent: System.Drawing.Imaging.ImageCodecInfo
  isExternal: false
  name: CodecName
  nameWithType: ImageCodecInfo.CodecName
  fullName: System.Drawing.Imaging.ImageCodecInfo.CodecName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.Imaging.ImageCodecInfo.DllName
  parent: System.Drawing.Imaging.ImageCodecInfo
  isExternal: false
  name: DllName
  nameWithType: ImageCodecInfo.DllName
  fullName: System.Drawing.Imaging.ImageCodecInfo.DllName
- uid: System.Drawing.Imaging.ImageCodecInfo.FilenameExtension
  parent: System.Drawing.Imaging.ImageCodecInfo
  isExternal: false
  name: FilenameExtension
  nameWithType: ImageCodecInfo.FilenameExtension
  fullName: System.Drawing.Imaging.ImageCodecInfo.FilenameExtension
- uid: System.Drawing.Imaging.ImageCodecInfo.Flags
  parent: System.Drawing.Imaging.ImageCodecInfo
  isExternal: false
  name: Flags
  nameWithType: ImageCodecInfo.Flags
  fullName: System.Drawing.Imaging.ImageCodecInfo.Flags
- uid: System.Drawing.Imaging.ImageCodecFlags
  parent: System.Drawing.Imaging
  isExternal: false
  name: ImageCodecFlags
  nameWithType: ImageCodecFlags
  fullName: System.Drawing.Imaging.ImageCodecFlags
- uid: System.Drawing.Imaging.ImageCodecInfo.FormatDescription
  parent: System.Drawing.Imaging.ImageCodecInfo
  isExternal: false
  name: FormatDescription
  nameWithType: ImageCodecInfo.FormatDescription
  fullName: System.Drawing.Imaging.ImageCodecInfo.FormatDescription
- uid: System.Drawing.Imaging.ImageCodecInfo.FormatID
  parent: System.Drawing.Imaging.ImageCodecInfo
  isExternal: false
  name: FormatID
  nameWithType: ImageCodecInfo.FormatID
  fullName: System.Drawing.Imaging.ImageCodecInfo.FormatID
- uid: System.Drawing.Imaging.ImageCodecInfo.GetImageDecoders
  parent: System.Drawing.Imaging.ImageCodecInfo
  isExternal: false
  name: GetImageDecoders()
  nameWithType: ImageCodecInfo.GetImageDecoders()
  fullName: System.Drawing.Imaging.ImageCodecInfo.GetImageDecoders()
- uid: System.Drawing.Imaging.ImageCodecInfo[]
  parent: System.Drawing.Imaging
  isExternal: false
  name: ImageCodecInfo
  nameWithType: ImageCodecInfo
  fullName: System.Drawing.Imaging.ImageCodecInfo[]
  spec.csharp:
  - uid: System.Drawing.Imaging.ImageCodecInfo
    name: ImageCodecInfo
    nameWithType: ImageCodecInfo
    fullName: ImageCodecInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Imaging.ImageCodecInfo.GetImageEncoders
  parent: System.Drawing.Imaging.ImageCodecInfo
  isExternal: false
  name: GetImageEncoders()
  nameWithType: ImageCodecInfo.GetImageEncoders()
  fullName: System.Drawing.Imaging.ImageCodecInfo.GetImageEncoders()
- uid: System.Drawing.Imaging.ImageCodecInfo.MimeType
  parent: System.Drawing.Imaging.ImageCodecInfo
  isExternal: false
  name: MimeType
  nameWithType: ImageCodecInfo.MimeType
  fullName: System.Drawing.Imaging.ImageCodecInfo.MimeType
- uid: System.Drawing.Imaging.ImageCodecInfo.SignatureMasks
  parent: System.Drawing.Imaging.ImageCodecInfo
  isExternal: false
  name: SignatureMasks
  nameWithType: ImageCodecInfo.SignatureMasks
  fullName: System.Drawing.Imaging.ImageCodecInfo.SignatureMasks
- uid: System.Byte[][]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[][]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[][]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Imaging.ImageCodecInfo.SignaturePatterns
  parent: System.Drawing.Imaging.ImageCodecInfo
  isExternal: false
  name: SignaturePatterns
  nameWithType: ImageCodecInfo.SignaturePatterns
  fullName: System.Drawing.Imaging.ImageCodecInfo.SignaturePatterns
- uid: System.Drawing.Imaging.ImageCodecInfo.Version
  parent: System.Drawing.Imaging.ImageCodecInfo
  isExternal: false
  name: Version
  nameWithType: ImageCodecInfo.Version
  fullName: System.Drawing.Imaging.ImageCodecInfo.Version
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.Imaging.ImageCodecInfo.Clsid*
  parent: System.Drawing.Imaging.ImageCodecInfo
  isExternal: false
  name: Clsid
  nameWithType: ImageCodecInfo.Clsid
- uid: System.Drawing.Imaging.ImageCodecInfo.CodecName*
  parent: System.Drawing.Imaging.ImageCodecInfo
  isExternal: false
  name: CodecName
  nameWithType: ImageCodecInfo.CodecName
- uid: System.Drawing.Imaging.ImageCodecInfo.DllName*
  parent: System.Drawing.Imaging.ImageCodecInfo
  isExternal: false
  name: DllName
  nameWithType: ImageCodecInfo.DllName
- uid: System.Drawing.Imaging.ImageCodecInfo.FilenameExtension*
  parent: System.Drawing.Imaging.ImageCodecInfo
  isExternal: false
  name: FilenameExtension
  nameWithType: ImageCodecInfo.FilenameExtension
- uid: System.Drawing.Imaging.ImageCodecInfo.Flags*
  parent: System.Drawing.Imaging.ImageCodecInfo
  isExternal: false
  name: Flags
  nameWithType: ImageCodecInfo.Flags
- uid: System.Drawing.Imaging.ImageCodecInfo.FormatDescription*
  parent: System.Drawing.Imaging.ImageCodecInfo
  isExternal: false
  name: FormatDescription
  nameWithType: ImageCodecInfo.FormatDescription
- uid: System.Drawing.Imaging.ImageCodecInfo.FormatID*
  parent: System.Drawing.Imaging.ImageCodecInfo
  isExternal: false
  name: FormatID
  nameWithType: ImageCodecInfo.FormatID
- uid: System.Drawing.Imaging.ImageCodecInfo.GetImageDecoders*
  parent: System.Drawing.Imaging.ImageCodecInfo
  isExternal: false
  name: GetImageDecoders
  nameWithType: ImageCodecInfo.GetImageDecoders
- uid: System.Drawing.Imaging.ImageCodecInfo.GetImageEncoders*
  parent: System.Drawing.Imaging.ImageCodecInfo
  isExternal: false
  name: GetImageEncoders
  nameWithType: ImageCodecInfo.GetImageEncoders
- uid: System.Drawing.Imaging.ImageCodecInfo.MimeType*
  parent: System.Drawing.Imaging.ImageCodecInfo
  isExternal: false
  name: MimeType
  nameWithType: ImageCodecInfo.MimeType
- uid: System.Drawing.Imaging.ImageCodecInfo.SignatureMasks*
  parent: System.Drawing.Imaging.ImageCodecInfo
  isExternal: false
  name: SignatureMasks
  nameWithType: ImageCodecInfo.SignatureMasks
- uid: System.Drawing.Imaging.ImageCodecInfo.SignaturePatterns*
  parent: System.Drawing.Imaging.ImageCodecInfo
  isExternal: false
  name: SignaturePatterns
  nameWithType: ImageCodecInfo.SignaturePatterns
- uid: System.Drawing.Imaging.ImageCodecInfo.Version*
  parent: System.Drawing.Imaging.ImageCodecInfo
  isExternal: false
  name: Version
  nameWithType: ImageCodecInfo.Version
