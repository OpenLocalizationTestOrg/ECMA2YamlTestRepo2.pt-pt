### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.RC2CryptoServiceProvider
  id: RC2CryptoServiceProvider
  children:
  - System.Security.Cryptography.RC2CryptoServiceProvider.#ctor
  - System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])
  - System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])
  - System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize
  - System.Security.Cryptography.RC2CryptoServiceProvider.GenerateIV
  - System.Security.Cryptography.RC2CryptoServiceProvider.GenerateKey
  - System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt
  langs:
  - csharp
  name: RC2CryptoServiceProvider
  nameWithType: RC2CryptoServiceProvider
  fullName: System.Security.Cryptography.RC2CryptoServiceProvider
  type: Class
  summary: "Define um objeto de wrapper para aceder a implementação do fornecedor (CSP) de serviços de criptografia do <xref href=&quot;System.Security.Cryptography.RC2&quot;> </xref> algoritmo. Esta classe não pode ser herdada."
  remarks: "A implementação de RC2CryptoServiceProvider suporta comprimentos de chave de 40 bits a 128 bits, em incrementos de 8 bits.       O objeto de RC2CryptoServiceProvider é uma cifra de bloco que encripta e desencripta os dados em blocos de 8 bytes.  Esta classe pads o bloco final de dados, se for inferior a 8 bytes.  Como resultado desta preenchimento, o comprimento dos dados encriptados pode ser maior que o texto não encriptado original.       Tenha em atenção que o objeto de RC2CryptoServiceProvider utilize salt.      > [!NOTE] > Um algoritmo de encriptação simétrica mais recente, a encriptação AES (Advanced Standard), está disponível. Considere a utilização do <xref:System.Security.Cryptography.Aes>algoritmo e respetivas classes derivadas em vez de classe RC2CryptoServiceProvider.</xref:System.Security.Cryptography.Aes> Utilize RC2CryptoServiceProvider apenas para compatibilidade com aplicações antigas e os dados."
  example:
  - "The following code example encrypts and then decrypts a string.  \n  \n [!code-cs[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/add/codesnippet/csharp/t-system.security.crypto_11_1.cs)]\n [!code-vb[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/add/codesnippet/visualbasic/t-system.security.crypto_11_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class RC2CryptoServiceProvider : System.Security.Cryptography.RC2
  inheritance:
  - System.Object
  - System.Security.Cryptography.SymmetricAlgorithm
  - System.Security.Cryptography.RC2
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.RC2.Create
  - System.Security.Cryptography.RC2.Create(System.String)
  - System.Security.Cryptography.RC2.EffectiveKeySizeValue
  - System.Security.Cryptography.RC2.KeySize
  - System.Security.Cryptography.SymmetricAlgorithm.BlockSize
  - System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.Clear
  - System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor
  - System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor
  - System.Security.Cryptography.SymmetricAlgorithm.Dispose
  - System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)
  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize
  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.IV
  - System.Security.Cryptography.SymmetricAlgorithm.IVValue
  - System.Security.Cryptography.SymmetricAlgorithm.Key
  - System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue
  - System.Security.Cryptography.SymmetricAlgorithm.KeyValue
  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes
  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue
  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes
  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue
  - System.Security.Cryptography.SymmetricAlgorithm.Mode
  - System.Security.Cryptography.SymmetricAlgorithm.ModeValue
  - System.Security.Cryptography.SymmetricAlgorithm.Padding
  - System.Security.Cryptography.SymmetricAlgorithm.PaddingValue
  - System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)
  platform:
  - net462
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  langs:
  - csharp
  name: RC2CryptoServiceProvider()
  nameWithType: RC2CryptoServiceProvider.RC2CryptoServiceProvider()
  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.RC2CryptoServiceProvider()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Cryptography.RC2CryptoServiceProvider&quot;> </xref> classe."
  remarks: ''
  example:
  - "The following code example encrypts and then decrypts a string.  \n  \n [!code-cs[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/add/codesnippet/csharp/m-system.security.crypto_73_1.cs)]\n [!code-vb[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/add/codesnippet/visualbasic/m-system.security.crypto_73_1.vb)]"
  syntax:
    content: public RC2CryptoServiceProvider ();
    parameters: []
  overload: System.Security.Cryptography.RC2CryptoServiceProvider.#ctor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Não é possível adquirir o fornecedor de serviços de criptografia (CSP)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Foi encontrado um algoritmo FIPS incompatíveis."
  platform:
  - net462
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])
  id: CreateDecryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  langs:
  - csharp
  name: CreateDecryptor(Byte[],Byte[])
  nameWithType: RC2CryptoServiceProvider.CreateDecryptor(Byte[],Byte[])
  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor(Byte[],Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Cria um simétrica <xref href=&quot;System.Security.Cryptography.RC2&quot;> </xref> objeto desencriptador com a chave especificada (<>*>) e o vetor de inicialização (<>*>)."
  remarks: "Este método é utilizado para desencriptar uma mensagem encriptada criada utilizando o <xref:System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor%2A>com os mesmos parâmetros de sobrecarga.</xref:System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor%2A>"
  example:
  - "The following code example encrypts and then decrypts a string.  \n  \n [!code-cs[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/add/codesnippet/csharp/6db44da5-ba5f-4459-90f5-_1.cs)]\n [!code-vb[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/add/codesnippet/visualbasic/6db44da5-ba5f-4459-90f5-_1.vb)]"
  syntax:
    content: public override System.Security.Cryptography.ICryptoTransform CreateDecryptor (byte[] rgbKey, byte[] rgbIV);
    parameters:
    - id: rgbKey
      type: System.Byte[]
      description: "A chave secreta a utilizar para o algoritmo simétrico."
    - id: rgbIV
      type: System.Byte[]
      description: "O vetor de inicialização a utilizar para o algoritmo simétrico."
    return:
      type: System.Security.Cryptography.ICryptoTransform
      description: "Um simétrica <xref href=&quot;System.Security.Cryptography.RC2&quot;> </xref> objeto desencriptador."
  overload: System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Um <xref href=&quot;System.Security.Cryptography.CipherMode&quot;> </xref> modo de cifra foi utilizado.       - ou - D <xref href=&quot;System.Security.Cryptography.CipherMode&quot;> </xref> foi utilizado o modo de cifra com um tamanho de comentários diferente de 8 bits.       - ou - foi utilizado um tamanho de chave inválido.       - ou - o tamanho da chave de algoritmo não estava disponível."
  platform:
  - net462
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])
  id: CreateEncryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  langs:
  - csharp
  name: CreateEncryptor(Byte[],Byte[])
  nameWithType: RC2CryptoServiceProvider.CreateEncryptor(Byte[],Byte[])
  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor(Byte[],Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Cria um simétrica <xref href=&quot;System.Security.Cryptography.RC2&quot;> </xref> objeto encriptador com a chave especificada (<>*>) e o vetor de inicialização (<>*>)."
  remarks: "Utilize o <xref:System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor%2A>com os mesmos parâmetros para desencriptar o resultado deste método de sobrecarga.</xref:System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor%2A>"
  example:
  - "The following code example encrypts and then decrypts a string.  \n  \n [!code-cs[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/add/codesnippet/csharp/78d990fe-60aa-40f6-ad5c-_1.cs)]\n [!code-vb[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/add/codesnippet/visualbasic/78d990fe-60aa-40f6-ad5c-_1.vb)]"
  syntax:
    content: public override System.Security.Cryptography.ICryptoTransform CreateEncryptor (byte[] rgbKey, byte[] rgbIV);
    parameters:
    - id: rgbKey
      type: System.Byte[]
      description: "A chave secreta a utilizar para o algoritmo simétrico."
    - id: rgbIV
      type: System.Byte[]
      description: "O vetor de inicialização a utilizar para o algoritmo simétrico."
    return:
      type: System.Security.Cryptography.ICryptoTransform
      description: "Um simétrica <xref href=&quot;System.Security.Cryptography.RC2&quot;> </xref> objeto encriptador."
  overload: System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Um <xref href=&quot;System.Security.Cryptography.CipherMode&quot;> </xref> modo de cifra foi utilizado.       - ou - D <xref href=&quot;System.Security.Cryptography.CipherMode&quot;> </xref> foi utilizado o modo de cifra com um tamanho de comentários diferente de 8 bits.       - ou - foi utilizado um tamanho de chave inválido.       - ou - o tamanho da chave de algoritmo não estava disponível."
  platform:
  - net462
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize
  id: EffectiveKeySize
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  langs:
  - csharp
  name: EffectiveKeySize
  nameWithType: RC2CryptoServiceProvider.EffectiveKeySize
  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Obtém ou define o tamanho Efetivo, em bits e da chave secreta utilizada pelo <xref href=&quot;System.Security.Cryptography.RC2&quot;> </xref> algoritmo."
  syntax:
    content: public override int EffectiveKeySize { get; set; }
    return:
      type: System.Int32
      description: "O tamanho da chave em vigor, em bits, utilizado pelo <xref href=&quot;System.Security.Cryptography.RC2&quot;> </xref> algoritmo."
  overload: System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize*
  exceptions:
  - type: System.Security.Cryptography.CryptographicUnexpectedOperationException
    commentId: T:System.Security.Cryptography.CryptographicUnexpectedOperationException
    description: "A propriedade de EffectiveKeySize foi definida como um valor diferente do <xref href=&quot;System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue&quot;> </xref> propriedade."
  platform:
  - net462
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateIV
  id: GenerateIV
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  langs:
  - csharp
  name: GenerateIV()
  nameWithType: RC2CryptoServiceProvider.GenerateIV()
  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateIV()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Gera um vetor de inicialização aleatório (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>) a utilizar para o algoritmo.</xref:System.Security.Cryptography.SymmetricAlgorithm.IV*>"
  remarks: "Utilize este método para gerar um aleatório <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>quando não for especificado nenhum.</xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>"
  example:
  - "The following code example encrypts and then decrypts a string.  \n  \n [!code-cs[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/add/codesnippet/csharp/m-system.security.crypto_28_1.cs)]\n [!code-vb[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/add/codesnippet/visualbasic/m-system.security.crypto_28_1.vb)]"
  syntax:
    content: public override void GenerateIV ();
    parameters: []
  overload: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateIV*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateKey
  id: GenerateKey
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  langs:
  - csharp
  name: GenerateKey()
  nameWithType: RC2CryptoServiceProvider.GenerateKey()
  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateKey()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Gera uma chave aleatória (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key*>) a ser utilizada para o algoritmo.</xref:System.Security.Cryptography.SymmetricAlgorithm.Key*>"
  remarks: "Utilize este método para gerar uma chave aleatória quando não for especificado nenhum.       O <xref:System.Security.Cryptography.RC2CryptoServiceProvider>implementação suporta comprimentos de chave de 40 bits a 128 bits, em incrementos de 8 bits.</xref:System.Security.Cryptography.RC2CryptoServiceProvider>"
  example:
  - "The following code example encrypts and then decrypts a string.  \n  \n [!code-cs[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/add/codesnippet/csharp/m-system.security.crypto_5_1.cs)]\n [!code-vb[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/add/codesnippet/visualbasic/m-system.security.crypto_5_1.vb)]"
  syntax:
    content: public override void GenerateKey ();
    parameters: []
  overload: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateKey*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt
  id: UseSalt
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  langs:
  - csharp
  name: UseSalt
  nameWithType: RC2CryptoServiceProvider.UseSalt
  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Obtém ou define um valor que determina se deve criar uma chave com um salt 11-byte-longa, o valor de zero."
  remarks: "A propriedade UseSalt permite-lhe interagir com uma aplicação existente que utiliza um salt 11-byte-longa, o valor de zero.  Para a maioria dos cenários, não deve utilizar um salt com um <xref:System.Security.Cryptography.RC2CryptoServiceProvider>chave.</xref:System.Security.Cryptography.RC2CryptoServiceProvider>"
  example:
  - "The following code example sets the UseSalt property to `true`, and then encrypts and decrypts a value.  \n  \n [!code-cs[Cryptography.RC2CryptoServiceProvider#1](~/add/codesnippet/csharp/p-system.security.crypto_12_1.cs)]\n [!code-vb[Cryptography.RC2CryptoServiceProvider#1](~/add/codesnippet/visualbasic/p-system.security.crypto_12_1.vb)]\n [!code-cpp[Cryptography.RC2CryptoServiceProvider#1](~/add/codesnippet/cpp/p-system.security.crypto_12_1.cpp)]"
  syntax:
    content: public bool UseSalt { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a chave deve ser criada com uma salt 11-byte-longa, o valor de zero caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Cryptography.RC2
  isExternal: false
  name: System.Security.Cryptography.RC2
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.Cryptography.CryptographicUnexpectedOperationException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicUnexpectedOperationException
  nameWithType: CryptographicUnexpectedOperationException
  fullName: System.Security.Cryptography.CryptographicUnexpectedOperationException
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.#ctor
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  isExternal: false
  name: RC2CryptoServiceProvider()
  nameWithType: RC2CryptoServiceProvider.RC2CryptoServiceProvider()
  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.RC2CryptoServiceProvider()
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  isExternal: false
  name: CreateDecryptor(Byte[],Byte[])
  nameWithType: RC2CryptoServiceProvider.CreateDecryptor(Byte[],Byte[])
  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor(Byte[],Byte[])
- uid: System.Security.Cryptography.ICryptoTransform
  parent: System.Security.Cryptography
  isExternal: false
  name: ICryptoTransform
  nameWithType: ICryptoTransform
  fullName: System.Security.Cryptography.ICryptoTransform
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  isExternal: false
  name: CreateEncryptor(Byte[],Byte[])
  nameWithType: RC2CryptoServiceProvider.CreateEncryptor(Byte[],Byte[])
  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor(Byte[],Byte[])
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  isExternal: false
  name: EffectiveKeySize
  nameWithType: RC2CryptoServiceProvider.EffectiveKeySize
  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateIV
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  isExternal: false
  name: GenerateIV()
  nameWithType: RC2CryptoServiceProvider.GenerateIV()
  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateIV()
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateKey
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  isExternal: false
  name: GenerateKey()
  nameWithType: RC2CryptoServiceProvider.GenerateKey()
  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateKey()
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  isExternal: false
  name: UseSalt
  nameWithType: RC2CryptoServiceProvider.UseSalt
  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.#ctor*
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  isExternal: false
  name: RC2CryptoServiceProvider
  nameWithType: RC2CryptoServiceProvider.RC2CryptoServiceProvider
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor*
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  isExternal: false
  name: CreateDecryptor
  nameWithType: RC2CryptoServiceProvider.CreateDecryptor
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor*
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  isExternal: false
  name: CreateEncryptor
  nameWithType: RC2CryptoServiceProvider.CreateEncryptor
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize*
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  isExternal: false
  name: EffectiveKeySize
  nameWithType: RC2CryptoServiceProvider.EffectiveKeySize
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateIV*
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  isExternal: false
  name: GenerateIV
  nameWithType: RC2CryptoServiceProvider.GenerateIV
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateKey*
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  isExternal: false
  name: GenerateKey
  nameWithType: RC2CryptoServiceProvider.GenerateKey
- uid: System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt*
  parent: System.Security.Cryptography.RC2CryptoServiceProvider
  isExternal: false
  name: UseSalt
  nameWithType: RC2CryptoServiceProvider.UseSalt
