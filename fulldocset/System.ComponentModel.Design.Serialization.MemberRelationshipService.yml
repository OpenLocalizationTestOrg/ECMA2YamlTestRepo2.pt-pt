### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService
  id: MemberRelationshipService
  children:
  - System.ComponentModel.Design.Serialization.MemberRelationshipService.#ctor
  - System.ComponentModel.Design.Serialization.MemberRelationshipService.GetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship)
  - System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.ComponentModel.Design.Serialization.MemberRelationship)
  - System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.Object,System.ComponentModel.MemberDescriptor)
  - System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)
  - System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)
  langs:
  - csharp
  name: MemberRelationshipService
  nameWithType: MemberRelationshipService
  fullName: System.ComponentModel.Design.Serialization.MemberRelationshipService
  type: Class
  summary: "Fornece a classe base para relacionado com um membro de outro."
  remarks: "Designers serializar próprios no código através de um motor de pesquisa através de valores de propriedade em direto de objetos e gera esses valores como código. Por isso, por exemplo, o texto de um botão é gerado no seguinte formato.      ```c#   this.okButton.Text = &quot;OK&quot;;   ```Uma das limitações deste esquema é que é difícil obter uma propriedade de outra localização. Por exemplo, é muito difícil emitir o código no seguinte formato, porque a única coisa que o gerador de código pode depender é o valor da propriedade.      ```c#   this.titleLabel.Text = this.Text;   ```"
  example:
  - "The MemberRelationshipService simplifies retrieval of a property value from another location. A designer can access this service to dictate that one member is assigned the value of another. The code generator searches for such relationships when generating code, and if a relationship between two members is found the code generator, it emits code for the relationship rather than searching for the property value. Using the previous text assignment as an example, the following code example shows design time code used to establish a relationship.  \n  \n```c#  \nobject titleLabel, form;  \nPropertyDescriptor titleLabelText = TypeDescriptor.GetProperties(titleLabel)[\"Text\"];  \nPropertyDescriptor formText = TypeDescriptor.GetProperties(form)[\"Text\"];  \nMemberRelationshipService ms = GetService(typeof(MemberRelationshipService);  \nms[titleLabel, titleLabelText] = new MemberRelationship(form, formText);  \n```"
  syntax:
    content: public abstract class MemberRelationshipService
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService
  langs:
  - csharp
  name: MemberRelationshipService()
  nameWithType: MemberRelationshipService.MemberRelationshipService()
  fullName: System.ComponentModel.Design.Serialization.MemberRelationshipService.MemberRelationshipService()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ComponentModel.Design.Serialization.MemberRelationshipService&quot;> </xref> classe."
  syntax:
    content: protected MemberRelationshipService ();
    parameters: []
  overload: System.ComponentModel.Design.Serialization.MemberRelationshipService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.GetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship)
  id: GetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship)
  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService
  langs:
  - csharp
  name: GetRelationship(MemberRelationship)
  nameWithType: MemberRelationshipService.GetRelationship(MemberRelationship)
  fullName: System.ComponentModel.Design.Serialization.MemberRelationshipService.GetRelationship(MemberRelationship)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Obtém uma relação com a relação de origem especificada."
  remarks: "A implementação predefinida armazena relações um dicionário utilizar referências fracas, pelo que a tabela de relação não manter objetos alive."
  syntax:
    content: protected virtual System.ComponentModel.Design.Serialization.MemberRelationship GetRelationship (System.ComponentModel.Design.Serialization.MemberRelationship source);
    parameters:
    - id: source
      type: System.ComponentModel.Design.Serialization.MemberRelationship
      description: "A relação de origem."
    return:
      type: System.ComponentModel.Design.Serialization.MemberRelationship
      description: "Uma relação com <code> source </code>, ou <xref href=&quot;System.ComponentModel.Design.Serialization.MemberRelationship&quot;> </xref> se não existe nenhuma relação."
  overload: System.ComponentModel.Design.Serialization.MemberRelationshipService.GetRelationship*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.ComponentModel.Design.Serialization.MemberRelationship)
  id: Item(System.ComponentModel.Design.Serialization.MemberRelationship)
  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService
  langs:
  - csharp
  name: Item(MemberRelationship)
  nameWithType: MemberRelationshipService.Item(MemberRelationship)
  fullName: System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(MemberRelationship)
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Estabelece uma relação entre um objeto de origem e de destino."
  remarks: "Se <xref:System.ComponentModel.Design.Serialization.MemberRelationship>está atribuído à origem de qualquer relação existente é removida.</xref:System.ComponentModel.Design.Serialization.MemberRelationship>"
  syntax:
    content: public System.ComponentModel.Design.Serialization.MemberRelationship this[System.ComponentModel.Design.Serialization.MemberRelationship source] { get; set; }
    parameters:
    - id: source
      type: System.ComponentModel.Design.Serialization.MemberRelationship
      description: "A relação de origem. Este é o lado esquerdo de uma atribuição de relação."
    return:
      type: System.ComponentModel.Design.Serialization.MemberRelationship
      description: "A relação atual associada <code> source </code>, ou <xref href=&quot;System.ComponentModel.Design.Serialization.MemberRelationship&quot;> </xref> se não houver nenhuma relação."
  overload: System.ComponentModel.Design.Serialization.MemberRelationshipService.Item*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>source</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>source</code>está vazio, ou a relação não é suportada pelo serviço."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.Object,System.ComponentModel.MemberDescriptor)
  id: Item(System.Object,System.ComponentModel.MemberDescriptor)
  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService
  langs:
  - csharp
  name: Item(Object,MemberDescriptor)
  nameWithType: MemberRelationshipService.Item(Object,MemberDescriptor)
  fullName: System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(Object,MemberDescriptor)
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Estabelece uma relação entre um objeto de origem e de destino."
  syntax:
    content: public System.ComponentModel.Design.Serialization.MemberRelationship this[object sourceOwner, System.ComponentModel.MemberDescriptor sourceMember] { get; set; }
    parameters:
    - id: sourceOwner
      type: System.Object
      description: "O proprietário de uma relação de origem."
    - id: sourceMember
      type: System.ComponentModel.MemberDescriptor
      description: "O membro de uma relação de origem."
    return:
      type: System.ComponentModel.Design.Serialization.MemberRelationship
      description: "A <xref href=&quot;System.ComponentModel.Design.Serialization.MemberRelationship&quot;> </xref> estrutura ao encapsular a relação entre um objeto de origem e de destino, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se não houver nenhuma relação."
  overload: System.ComponentModel.Design.Serialization.MemberRelationshipService.Item*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceOwner</code>or <code>sourceMember</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sourceOwner</code>ou <code>sourceMember</code> está vazio, ou a relação não é suportada pelo serviço."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)
  id: SetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)
  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService
  langs:
  - csharp
  name: SetRelationship(MemberRelationship,MemberRelationship)
  nameWithType: MemberRelationshipService.SetRelationship(MemberRelationship,MemberRelationship)
  fullName: System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship(MemberRelationship,MemberRelationship)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Cria uma relação entre o objeto e o destino da relação de origem."
  remarks: "O método SetRelationship limpa qualquer relação existente se o parâmetro de relação é <xref:System.ComponentModel.Design.Serialization.MemberRelationship>.</xref:System.ComponentModel.Design.Serialization.MemberRelationship> A implementação predefinida armazena relações um dicionário utilizando fracas referências para a tabela de relação não manter objetos alive."
  syntax:
    content: protected virtual void SetRelationship (System.ComponentModel.Design.Serialization.MemberRelationship source, System.ComponentModel.Design.Serialization.MemberRelationship relationship);
    parameters:
    - id: source
      type: System.ComponentModel.Design.Serialization.MemberRelationship
      description: "A relação de origem."
    - id: relationship
      type: System.ComponentModel.Design.Serialization.MemberRelationship
      description: "A relação para definir na origem."
  overload: System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A relação não é suportada pelo serviço."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)
  id: SupportsRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)
  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService
  langs:
  - csharp
  name: SupportsRelationship(MemberRelationship,MemberRelationship)
  nameWithType: MemberRelationshipService.SupportsRelationship(MemberRelationship,MemberRelationship)
  fullName: System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship(MemberRelationship,MemberRelationship)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Obtém um valor que indica se a relação especificada é suportada."
  syntax:
    content: public abstract bool SupportsRelationship (System.ComponentModel.Design.Serialization.MemberRelationship source, System.ComponentModel.Design.Serialization.MemberRelationship relationship);
    parameters:
    - id: source
      type: System.ComponentModel.Design.Serialization.MemberRelationship
      description: "A relação de origem."
    - id: relationship
      type: System.ComponentModel.Design.Serialization.MemberRelationship
      description: "A relação para definir na origem."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se for suportada uma relação entre os dois objetos determinados; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.#ctor
  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService
  isExternal: false
  name: MemberRelationshipService()
  nameWithType: MemberRelationshipService.MemberRelationshipService()
  fullName: System.ComponentModel.Design.Serialization.MemberRelationshipService.MemberRelationshipService()
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.GetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship)
  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService
  isExternal: false
  name: GetRelationship(MemberRelationship)
  nameWithType: MemberRelationshipService.GetRelationship(MemberRelationship)
  fullName: System.ComponentModel.Design.Serialization.MemberRelationshipService.GetRelationship(MemberRelationship)
- uid: System.ComponentModel.Design.Serialization.MemberRelationship
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: MemberRelationship
  nameWithType: MemberRelationship
  fullName: System.ComponentModel.Design.Serialization.MemberRelationship
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.ComponentModel.Design.Serialization.MemberRelationship)
  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService
  isExternal: false
  name: Item(MemberRelationship)
  nameWithType: MemberRelationshipService.Item(MemberRelationship)
  fullName: System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(MemberRelationship)
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.Object,System.ComponentModel.MemberDescriptor)
  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService
  isExternal: false
  name: Item(Object,MemberDescriptor)
  nameWithType: MemberRelationshipService.Item(Object,MemberDescriptor)
  fullName: System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(Object,MemberDescriptor)
- uid: System.ComponentModel.MemberDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: MemberDescriptor
  nameWithType: MemberDescriptor
  fullName: System.ComponentModel.MemberDescriptor
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)
  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService
  isExternal: false
  name: SetRelationship(MemberRelationship,MemberRelationship)
  nameWithType: MemberRelationshipService.SetRelationship(MemberRelationship,MemberRelationship)
  fullName: System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship(MemberRelationship,MemberRelationship)
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)
  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService
  isExternal: false
  name: SupportsRelationship(MemberRelationship,MemberRelationship)
  nameWithType: MemberRelationshipService.SupportsRelationship(MemberRelationship,MemberRelationship)
  fullName: System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship(MemberRelationship,MemberRelationship)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.#ctor*
  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService
  isExternal: false
  name: MemberRelationshipService
  nameWithType: MemberRelationshipService.MemberRelationshipService
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.GetRelationship*
  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService
  isExternal: false
  name: GetRelationship
  nameWithType: MemberRelationshipService.GetRelationship
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.Item*
  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService
  isExternal: false
  name: Item
  nameWithType: MemberRelationshipService.Item
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship*
  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService
  isExternal: false
  name: SetRelationship
  nameWithType: MemberRelationshipService.SetRelationship
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship*
  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService
  isExternal: false
  name: SupportsRelationship
  nameWithType: MemberRelationshipService.SupportsRelationship
