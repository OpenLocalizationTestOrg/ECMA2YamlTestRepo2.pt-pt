### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService
  id: MemberRelationshipService
  children:
  - System.ComponentModel.Design.Serialization.MemberRelationshipService.#ctor
  - System.ComponentModel.Design.Serialization.MemberRelationshipService.GetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship)
  - System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.ComponentModel.Design.Serialization.MemberRelationship)
  - System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.Object,System.ComponentModel.MemberDescriptor)
  - System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)
  - System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)
  langs:
  - csharp
  name: MemberRelationshipService
  nameWithType: MemberRelationshipService
  fullName: System.ComponentModel.Design.Serialization.MemberRelationshipService
  type: Class
  summary: "Provides the base class for relating one member to another."
  remarks: "Designers serialize themselves to code through an engine that searches through the live property values of objects and generates those values as code. So, for example, the text of a button is generated in the following format.      ```c#   this.okButton.Text = &quot;OK&quot;;   ```       One of the limitations of this scheme is that it is difficult to retrieve a property from another location. For example, it is very difficult to emit code in the following format, because the only thing the code generator can rely on is the value in the property.      ```c#   this.titleLabel.Text = this.Text;   ```"
  example:
  - "The MemberRelationshipService simplifies retrieval of a property value from another location. A designer can access this service to dictate that one member is assigned the value of another. The code generator searches for such relationships when generating code, and if a relationship between two members is found the code generator, it emits code for the relationship rather than searching for the property value. Using the previous text assignment as an example, the following code example shows design time code used to establish a relationship.  \n  \n```c#  \nobject titleLabel, form;  \nPropertyDescriptor titleLabelText = TypeDescriptor.GetProperties(titleLabel)[\"Text\"];  \nPropertyDescriptor formText = TypeDescriptor.GetProperties(form)[\"Text\"];  \nMemberRelationshipService ms = GetService(typeof(MemberRelationshipService);  \nms[titleLabel, titleLabelText] = new MemberRelationship(form, formText);  \n```"
  syntax:
    content: public abstract class MemberRelationshipService
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService
  langs:
  - csharp
  name: MemberRelationshipService()
  nameWithType: MemberRelationshipService.MemberRelationshipService()
  fullName: System.ComponentModel.Design.Serialization.MemberRelationshipService.MemberRelationshipService()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Initializes a new instance of the <xref href=&quot;System.ComponentModel.Design.Serialization.MemberRelationshipService&quot;></xref> class."
  syntax:
    content: protected MemberRelationshipService ();
    parameters: []
  overload: System.ComponentModel.Design.Serialization.MemberRelationshipService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.GetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship)
  id: GetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship)
  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService
  langs:
  - csharp
  name: GetRelationship(MemberRelationship)
  nameWithType: MemberRelationshipService.GetRelationship(MemberRelationship)
  fullName: System.ComponentModel.Design.Serialization.MemberRelationshipService.GetRelationship(MemberRelationship)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Gets a relationship to the given source relationship."
  remarks: "The default implementation stores relationships in a dictionary using weak references, so the relationship table does not keep objects alive."
  syntax:
    content: protected virtual System.ComponentModel.Design.Serialization.MemberRelationship GetRelationship (System.ComponentModel.Design.Serialization.MemberRelationship source);
    parameters:
    - id: source
      type: System.ComponentModel.Design.Serialization.MemberRelationship
      description: "The source relationship."
    return:
      type: System.ComponentModel.Design.Serialization.MemberRelationship
      description: "A relationship to <code>source</code>, or <xref href=&quot;System.ComponentModel.Design.Serialization.MemberRelationship&quot;></xref> if no relationship exists."
  overload: System.ComponentModel.Design.Serialization.MemberRelationshipService.GetRelationship*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.ComponentModel.Design.Serialization.MemberRelationship)
  id: Item(System.ComponentModel.Design.Serialization.MemberRelationship)
  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService
  langs:
  - csharp
  name: Item(MemberRelationship)
  nameWithType: MemberRelationshipService.Item(MemberRelationship)
  fullName: System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(MemberRelationship)
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Establishes a relationship between a source and target object."
  remarks: "If <xref:System.ComponentModel.Design.Serialization.MemberRelationship> is assigned to the source, any existing relationship is removed."
  syntax:
    content: public System.ComponentModel.Design.Serialization.MemberRelationship this[System.ComponentModel.Design.Serialization.MemberRelationship source] { get; set; }
    parameters:
    - id: source
      type: System.ComponentModel.Design.Serialization.MemberRelationship
      description: "The source relationship. This is the left-hand side of a relationship assignment."
    return:
      type: System.ComponentModel.Design.Serialization.MemberRelationship
      description: "The current relationship associated with <code>source</code>, or <xref href=&quot;System.ComponentModel.Design.Serialization.MemberRelationship&quot;></xref> if there is no relationship."
  overload: System.ComponentModel.Design.Serialization.MemberRelationshipService.Item*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>source</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>source</code> is empty, or the relationship is not supported by the service."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.Object,System.ComponentModel.MemberDescriptor)
  id: Item(System.Object,System.ComponentModel.MemberDescriptor)
  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService
  langs:
  - csharp
  name: Item(Object,MemberDescriptor)
  nameWithType: MemberRelationshipService.Item(Object,MemberDescriptor)
  fullName: System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(Object,MemberDescriptor)
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Establishes a relationship between a source and target object."
  syntax:
    content: public System.ComponentModel.Design.Serialization.MemberRelationship this[object sourceOwner, System.ComponentModel.MemberDescriptor sourceMember] { get; set; }
    parameters:
    - id: sourceOwner
      type: System.Object
      description: "The owner of a source relationship."
    - id: sourceMember
      type: System.ComponentModel.MemberDescriptor
      description: "The member of a source relationship."
    return:
      type: System.ComponentModel.Design.Serialization.MemberRelationship
      description: "A <xref href=&quot;System.ComponentModel.Design.Serialization.MemberRelationship&quot;></xref> structure encapsulating the relationship between a source and target object, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if there is no relationship."
  overload: System.ComponentModel.Design.Serialization.MemberRelationshipService.Item*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceOwner</code> or <code>sourceMember</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sourceOwner</code> or <code>sourceMember</code> is empty, or the relationship is not supported by the service."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)
  id: SetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)
  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService
  langs:
  - csharp
  name: SetRelationship(MemberRelationship,MemberRelationship)
  nameWithType: MemberRelationshipService.SetRelationship(MemberRelationship,MemberRelationship)
  fullName: System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship(MemberRelationship,MemberRelationship)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Creates a relationship between the source object and target relationship."
  remarks: "The SetRelationship method clears any existing relationship if the relationship parameter is <xref:System.ComponentModel.Design.Serialization.MemberRelationship>. The default implementation stores relationships in a dictionary using weak references so the relationship table does not keep objects alive."
  syntax:
    content: protected virtual void SetRelationship (System.ComponentModel.Design.Serialization.MemberRelationship source, System.ComponentModel.Design.Serialization.MemberRelationship relationship);
    parameters:
    - id: source
      type: System.ComponentModel.Design.Serialization.MemberRelationship
      description: "The source relationship."
    - id: relationship
      type: System.ComponentModel.Design.Serialization.MemberRelationship
      description: "The relationship to set into the source."
  overload: System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The relationship is not supported by the service."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)
  id: SupportsRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)
  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService
  langs:
  - csharp
  name: SupportsRelationship(MemberRelationship,MemberRelationship)
  nameWithType: MemberRelationshipService.SupportsRelationship(MemberRelationship,MemberRelationship)
  fullName: System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship(MemberRelationship,MemberRelationship)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Gets a value indicating whether the given relationship is supported."
  syntax:
    content: public abstract bool SupportsRelationship (System.ComponentModel.Design.Serialization.MemberRelationship source, System.ComponentModel.Design.Serialization.MemberRelationship relationship);
    parameters:
    - id: source
      type: System.ComponentModel.Design.Serialization.MemberRelationship
      description: "The source relationship."
    - id: relationship
      type: System.ComponentModel.Design.Serialization.MemberRelationship
      description: "The relationship to set into the source."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if a relationship between the given two objects is supported; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.#ctor
  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService
  isExternal: false
  name: MemberRelationshipService()
  nameWithType: MemberRelationshipService.MemberRelationshipService()
  fullName: System.ComponentModel.Design.Serialization.MemberRelationshipService.MemberRelationshipService()
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.GetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship)
  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService
  isExternal: false
  name: GetRelationship(MemberRelationship)
  nameWithType: MemberRelationshipService.GetRelationship(MemberRelationship)
  fullName: System.ComponentModel.Design.Serialization.MemberRelationshipService.GetRelationship(MemberRelationship)
- uid: System.ComponentModel.Design.Serialization.MemberRelationship
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: MemberRelationship
  nameWithType: MemberRelationship
  fullName: System.ComponentModel.Design.Serialization.MemberRelationship
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.ComponentModel.Design.Serialization.MemberRelationship)
  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService
  isExternal: false
  name: Item(MemberRelationship)
  nameWithType: MemberRelationshipService.Item(MemberRelationship)
  fullName: System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(MemberRelationship)
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.Object,System.ComponentModel.MemberDescriptor)
  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService
  isExternal: false
  name: Item(Object,MemberDescriptor)
  nameWithType: MemberRelationshipService.Item(Object,MemberDescriptor)
  fullName: System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(Object,MemberDescriptor)
- uid: System.ComponentModel.MemberDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: MemberDescriptor
  nameWithType: MemberDescriptor
  fullName: System.ComponentModel.MemberDescriptor
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)
  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService
  isExternal: false
  name: SetRelationship(MemberRelationship,MemberRelationship)
  nameWithType: MemberRelationshipService.SetRelationship(MemberRelationship,MemberRelationship)
  fullName: System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship(MemberRelationship,MemberRelationship)
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship(System.ComponentModel.Design.Serialization.MemberRelationship,System.ComponentModel.Design.Serialization.MemberRelationship)
  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService
  isExternal: false
  name: SupportsRelationship(MemberRelationship,MemberRelationship)
  nameWithType: MemberRelationshipService.SupportsRelationship(MemberRelationship,MemberRelationship)
  fullName: System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship(MemberRelationship,MemberRelationship)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.#ctor*
  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService
  isExternal: false
  name: MemberRelationshipService
  nameWithType: MemberRelationshipService.MemberRelationshipService
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.GetRelationship*
  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService
  isExternal: false
  name: GetRelationship
  nameWithType: MemberRelationshipService.GetRelationship
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.Item*
  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService
  isExternal: false
  name: Item
  nameWithType: MemberRelationshipService.Item
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.SetRelationship*
  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService
  isExternal: false
  name: SetRelationship
  nameWithType: MemberRelationshipService.SetRelationship
- uid: System.ComponentModel.Design.Serialization.MemberRelationshipService.SupportsRelationship*
  parent: System.ComponentModel.Design.Serialization.MemberRelationshipService
  isExternal: false
  name: SupportsRelationship
  nameWithType: MemberRelationshipService.SupportsRelationship
