### YamlMime:ManagedReference
items:
- uid: System.Net.Http.Headers.HttpHeaders
  id: HttpHeaders
  children:
  - System.Net.Http.Headers.HttpHeaders.#ctor
  - System.Net.Http.Headers.HttpHeaders.Add(System.String,System.Collections.Generic.IEnumerable{System.String})
  - System.Net.Http.Headers.HttpHeaders.Add(System.String,System.String)
  - System.Net.Http.Headers.HttpHeaders.Clear
  - System.Net.Http.Headers.HttpHeaders.Contains(System.String)
  - System.Net.Http.Headers.HttpHeaders.GetEnumerator
  - System.Net.Http.Headers.HttpHeaders.GetValues(System.String)
  - System.Net.Http.Headers.HttpHeaders.Remove(System.String)
  - System.Net.Http.Headers.HttpHeaders.System#Collections#IEnumerable#GetEnumerator
  - System.Net.Http.Headers.HttpHeaders.ToString
  - System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.Collections.Generic.IEnumerable{System.String})
  - System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.String)
  - System.Net.Http.Headers.HttpHeaders.TryGetValues(System.String,System.Collections.Generic.IEnumerable{System.String}@)
  langs:
  - csharp
  name: HttpHeaders
  nameWithType: HttpHeaders
  fullName: System.Net.Http.Headers.HttpHeaders
  type: Class
  summary: "Uma coleção de cabeçalhos e os respetivos valores, conforme definido na RFC 2616."
  syntax:
    content: 'public abstract class HttpHeaders : System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,System.Collections.Generic.IEnumerable<string>>>'
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Collections.Generic.IEnumerable<System.String>>>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.Http.Headers.HttpHeaders.#ctor
  id: '#ctor'
  parent: System.Net.Http.Headers.HttpHeaders
  langs:
  - csharp
  name: HttpHeaders()
  nameWithType: HttpHeaders.HttpHeaders()
  fullName: System.Net.Http.Headers.HttpHeaders.HttpHeaders()
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Net.Http.Headers.HttpHeaders&quot;> </xref> classe."
  syntax:
    content: protected HttpHeaders ();
    parameters: []
  overload: System.Net.Http.Headers.HttpHeaders.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.HttpHeaders.Add(System.String,System.Collections.Generic.IEnumerable{System.String})
  id: Add(System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: System.Net.Http.Headers.HttpHeaders
  langs:
  - csharp
  name: Add(String,IEnumerable<String>)
  nameWithType: HttpHeaders.Add(String,IEnumerable<String>)
  fullName: System.Net.Http.Headers.HttpHeaders.Add(String,IEnumerable<String>)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Adiciona o cabeçalho especificado e os respetivos valores para o <xref href=&quot;System.Net.Http.Headers.HttpHeaders&quot;> </xref> coleção."
  remarks: "O cabeçalho `values` será analisado e validado.       Se o cabeçalho especificado não existir, o método Add insere um novo cabeçalho na lista de pares nome/valor de cabeçalho.       Se o cabeçalho especificado já se encontra presente, `values` são adicionados à lista de valores separados por vírgulas dos valores associados com o cabeçalho."
  syntax:
    content: public void Add (string name, System.Collections.Generic.IEnumerable<string> values);
    parameters:
    - id: name
      type: System.String
      description: "O cabeçalho para adicionar à coleção."
    - id: values
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "Uma lista de valores de cabeçalho para adicionar à coleção."
  overload: System.Net.Http.Headers.HttpHeaders.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.HttpHeaders.Add(System.String,System.String)
  id: Add(System.String,System.String)
  parent: System.Net.Http.Headers.HttpHeaders
  langs:
  - csharp
  name: Add(String,String)
  nameWithType: HttpHeaders.Add(String,String)
  fullName: System.Net.Http.Headers.HttpHeaders.Add(String,String)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Adiciona o cabeçalho especificado e o respetivo valor para o <xref href=&quot;System.Net.Http.Headers.HttpHeaders&quot;> </xref> coleção."
  remarks: "O cabeçalho `value` será analisado e validado.       Se o cabeçalho especificado não existir, o método Add insere um novo cabeçalho na lista de pares nome/valor de cabeçalho.       Se o cabeçalho especificado já se encontra presente, `value` é adicionado à lista de valores separados por vírgulas dos valores associados com o cabeçalho."
  syntax:
    content: public void Add (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "O cabeçalho para adicionar à coleção."
    - id: value
      type: System.String
      description: "O conteúdo do cabeçalho."
  overload: System.Net.Http.Headers.HttpHeaders.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.HttpHeaders.Clear
  id: Clear
  parent: System.Net.Http.Headers.HttpHeaders
  langs:
  - csharp
  name: Clear()
  nameWithType: HttpHeaders.Clear()
  fullName: System.Net.Http.Headers.HttpHeaders.Clear()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Remove todos os cabeçalhos a partir de <xref href=&quot;System.Net.Http.Headers.HttpHeaders&quot;> </xref> coleção."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Net.Http.Headers.HttpHeaders.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.HttpHeaders.Contains(System.String)
  id: Contains(System.String)
  parent: System.Net.Http.Headers.HttpHeaders
  langs:
  - csharp
  name: Contains(String)
  nameWithType: HttpHeaders.Contains(String)
  fullName: System.Net.Http.Headers.HttpHeaders.Contains(String)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Devolve se existe um cabeçalho específico a <xref href=&quot;System.Net.Http.Headers.HttpHeaders&quot;> </xref> coleção."
  syntax:
    content: public bool Contains (string name);
    parameters:
    - id: name
      type: System.String
      description: "O cabeçalho específico."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>é que o cabeçalho especificado existe na coleção; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.Headers.HttpHeaders.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.HttpHeaders.GetEnumerator
  id: GetEnumerator
  parent: System.Net.Http.Headers.HttpHeaders
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: HttpHeaders.GetEnumerator()
  fullName: System.Net.Http.Headers.HttpHeaders.GetEnumerator()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Devolve um enumerador que pode itere através de <xref href=&quot;System.Net.Http.Headers.HttpHeaders&quot;> </xref> instância."
  syntax:
    content: public System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<string,System.Collections.Generic.IEnumerable<string>>> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IEnumerable{System.String}}}
      description: "O enumerador do <xref href=&quot;System.Net.Http.Headers.HttpHeaders&quot;> </xref>."
  overload: System.Net.Http.Headers.HttpHeaders.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.HttpHeaders.GetValues(System.String)
  id: GetValues(System.String)
  parent: System.Net.Http.Headers.HttpHeaders
  langs:
  - csharp
  name: GetValues(String)
  nameWithType: HttpHeaders.GetValues(String)
  fullName: System.Net.Http.Headers.HttpHeaders.GetValues(String)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Devolve todos os valores de cabeçalho para um cabeçalho especificado armazenada no <xref href=&quot;System.Net.Http.Headers.HttpHeaders&quot;> </xref> coleção."
  syntax:
    content: public System.Collections.Generic.IEnumerable<string> GetValues (string name);
    parameters:
    - id: name
      type: System.String
      description: "O cabeçalho especificado para devolver valores para."
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "Uma matriz de cadeias de cabeçalho."
  overload: System.Net.Http.Headers.HttpHeaders.GetValues*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.HttpHeaders.Remove(System.String)
  id: Remove(System.String)
  parent: System.Net.Http.Headers.HttpHeaders
  langs:
  - csharp
  name: Remove(String)
  nameWithType: HttpHeaders.Remove(String)
  fullName: System.Net.Http.Headers.HttpHeaders.Remove(String)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Remove o cabeçalho especificado do <xref href=&quot;System.Net.Http.Headers.HttpHeaders&quot;> </xref> coleção."
  syntax:
    content: public bool Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome de cabeçalho para remover da coleção."
    return:
      type: System.Boolean
      description: "Devolve <xref:System.Boolean>.</xref:System.Boolean>"
  overload: System.Net.Http.Headers.HttpHeaders.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.HttpHeaders.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Net.Http.Headers.HttpHeaders
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: HttpHeaders.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Net.Http.Headers.HttpHeaders.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Obtém um enumerador que pode iterar através de um <xref href=&quot;System.Net.Http.Headers.HttpHeaders&quot;> </xref>."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Uma instância de uma implementação de um <xref:System.Collections.IEnumerator>que pode iterar através de um <xref href=&quot;System.Net.Http.Headers.HttpHeaders&quot;> </xref>.</xref:System.Collections.IEnumerator>"
  overload: System.Net.Http.Headers.HttpHeaders.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.HttpHeaders.ToString
  id: ToString
  parent: System.Net.Http.Headers.HttpHeaders
  langs:
  - csharp
  name: ToString()
  nameWithType: HttpHeaders.ToString()
  fullName: System.Net.Http.Headers.HttpHeaders.ToString()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Devolve uma cadeia que representa o atual <xref href=&quot;System.Net.Http.Headers.HttpHeaders&quot;> </xref> objeto."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Uma cadeia que representa o objeto atual."
  overload: System.Net.Http.Headers.HttpHeaders.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.Collections.Generic.IEnumerable{System.String})
  id: TryAddWithoutValidation(System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: System.Net.Http.Headers.HttpHeaders
  langs:
  - csharp
  name: TryAddWithoutValidation(String,IEnumerable<String>)
  nameWithType: HttpHeaders.TryAddWithoutValidation(String,IEnumerable<String>)
  fullName: System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(String,IEnumerable<String>)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Devolve um valor que indica se o cabeçalho especificado e os respetivos valores foram adicionados para o <xref href=&quot;System.Net.Http.Headers.HttpHeaders&quot;> </xref> coleção sem validar as informações fornecidas."
  syntax:
    content: public bool TryAddWithoutValidation (string name, System.Collections.Generic.IEnumerable<string> values);
    parameters:
    - id: name
      type: System.String
      description: "O cabeçalho para adicionar à coleção."
    - id: values
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "Os valores do cabeçalho."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o cabeçalho especificado <code> name </code> e <code> values </code> pode ser adicionado à coleção; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.String)
  id: TryAddWithoutValidation(System.String,System.String)
  parent: System.Net.Http.Headers.HttpHeaders
  langs:
  - csharp
  name: TryAddWithoutValidation(String,String)
  nameWithType: HttpHeaders.TryAddWithoutValidation(String,String)
  fullName: System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(String,String)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Devolve um valor que indica se o cabeçalho especificado e o respetivo valor foram adicionadas para o <xref href=&quot;System.Net.Http.Headers.HttpHeaders&quot;> </xref> coleção sem validar as informações fornecidas."
  syntax:
    content: public bool TryAddWithoutValidation (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "O cabeçalho para adicionar à coleção."
    - id: value
      type: System.String
      description: "O conteúdo do cabeçalho."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o cabeçalho especificado <code> name </code> e <code> value </code> pode ser adicionado à coleção; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.HttpHeaders.TryGetValues(System.String,System.Collections.Generic.IEnumerable{System.String}@)
  id: TryGetValues(System.String,System.Collections.Generic.IEnumerable{System.String}@)
  parent: System.Net.Http.Headers.HttpHeaders
  langs:
  - csharp
  name: TryGetValues(String,IEnumerable<String>)
  nameWithType: HttpHeaders.TryGetValues(String,IEnumerable<String>)
  fullName: System.Net.Http.Headers.HttpHeaders.TryGetValues(String,IEnumerable<String>)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Devolver se um cabeçalho especificado e valores especificados são armazenados no <xref href=&quot;System.Net.Http.Headers.HttpHeaders&quot;> </xref> coleção."
  syntax:
    content: public bool TryGetValues (string name, out System.Collections.Generic.IEnumerable<string> values);
    parameters:
    - id: name
      type: System.String
      description: "O cabeçalho especificado."
    - id: values
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "Os valores de cabeçalho especificado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>é o cabeçalho especificado <code> name </code> e <xref uid=&quot;langword_csharp_values&quot; name=&quot;values&quot; href=&quot;&quot;> </xref> são armazenados na coleção; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.Headers.HttpHeaders.TryGetValues*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Net.Http.Headers.HttpHeaders.#ctor
  parent: System.Net.Http.Headers.HttpHeaders
  isExternal: false
  name: HttpHeaders()
  nameWithType: HttpHeaders.HttpHeaders()
  fullName: System.Net.Http.Headers.HttpHeaders.HttpHeaders()
- uid: System.Net.Http.Headers.HttpHeaders.Add(System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: System.Net.Http.Headers.HttpHeaders
  isExternal: false
  name: Add(String,IEnumerable<String>)
  nameWithType: HttpHeaders.Add(String,IEnumerable<String>)
  fullName: System.Net.Http.Headers.HttpHeaders.Add(String,IEnumerable<String>)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.Headers.HttpHeaders.Add(System.String,System.String)
  parent: System.Net.Http.Headers.HttpHeaders
  isExternal: false
  name: Add(String,String)
  nameWithType: HttpHeaders.Add(String,String)
  fullName: System.Net.Http.Headers.HttpHeaders.Add(String,String)
- uid: System.Net.Http.Headers.HttpHeaders.Clear
  parent: System.Net.Http.Headers.HttpHeaders
  isExternal: false
  name: Clear()
  nameWithType: HttpHeaders.Clear()
  fullName: System.Net.Http.Headers.HttpHeaders.Clear()
- uid: System.Net.Http.Headers.HttpHeaders.Contains(System.String)
  parent: System.Net.Http.Headers.HttpHeaders
  isExternal: false
  name: Contains(String)
  nameWithType: HttpHeaders.Contains(String)
  fullName: System.Net.Http.Headers.HttpHeaders.Contains(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Http.Headers.HttpHeaders.GetEnumerator
  parent: System.Net.Http.Headers.HttpHeaders
  isExternal: false
  name: GetEnumerator()
  nameWithType: HttpHeaders.GetEnumerator()
  fullName: System.Net.Http.Headers.HttpHeaders.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IEnumerable{System.String}}}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<KeyValuePair<String,IEnumerable<String>>>
  nameWithType: IEnumerator<KeyValuePair<String,IEnumerable<String>>>
  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Collections.Generic.IEnumerable<System.String>>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Collections.Generic.IEnumerable<System.String>>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.String,System.Collections.Generic.IEnumerable<System.String>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.Headers.HttpHeaders.GetValues(System.String)
  parent: System.Net.Http.Headers.HttpHeaders
  isExternal: false
  name: GetValues(String)
  nameWithType: HttpHeaders.GetValues(String)
  fullName: System.Net.Http.Headers.HttpHeaders.GetValues(String)
- uid: System.Net.Http.Headers.HttpHeaders.Remove(System.String)
  parent: System.Net.Http.Headers.HttpHeaders
  isExternal: false
  name: Remove(String)
  nameWithType: HttpHeaders.Remove(String)
  fullName: System.Net.Http.Headers.HttpHeaders.Remove(String)
- uid: System.Net.Http.Headers.HttpHeaders.System#Collections#IEnumerable#GetEnumerator
  parent: System.Net.Http.Headers.HttpHeaders
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: HttpHeaders.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Net.Http.Headers.HttpHeaders.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Net.Http.Headers.HttpHeaders.ToString
  parent: System.Net.Http.Headers.HttpHeaders
  isExternal: false
  name: ToString()
  nameWithType: HttpHeaders.ToString()
  fullName: System.Net.Http.Headers.HttpHeaders.ToString()
- uid: System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: System.Net.Http.Headers.HttpHeaders
  isExternal: false
  name: TryAddWithoutValidation(String,IEnumerable<String>)
  nameWithType: HttpHeaders.TryAddWithoutValidation(String,IEnumerable<String>)
  fullName: System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(String,IEnumerable<String>)
- uid: System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.String)
  parent: System.Net.Http.Headers.HttpHeaders
  isExternal: false
  name: TryAddWithoutValidation(String,String)
  nameWithType: HttpHeaders.TryAddWithoutValidation(String,String)
  fullName: System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(String,String)
- uid: System.Net.Http.Headers.HttpHeaders.TryGetValues(System.String,System.Collections.Generic.IEnumerable{System.String}@)
  parent: System.Net.Http.Headers.HttpHeaders
  isExternal: false
  name: TryGetValues(String,IEnumerable<String>)
  nameWithType: HttpHeaders.TryGetValues(String,IEnumerable<String>)
  fullName: System.Net.Http.Headers.HttpHeaders.TryGetValues(String,IEnumerable<String>)
- uid: System.Net.Http.Headers.HttpHeaders.#ctor*
  parent: System.Net.Http.Headers.HttpHeaders
  isExternal: false
  name: HttpHeaders
  nameWithType: HttpHeaders.HttpHeaders
- uid: System.Net.Http.Headers.HttpHeaders.Add*
  parent: System.Net.Http.Headers.HttpHeaders
  isExternal: false
  name: Add
  nameWithType: HttpHeaders.Add
- uid: System.Net.Http.Headers.HttpHeaders.Clear*
  parent: System.Net.Http.Headers.HttpHeaders
  isExternal: false
  name: Clear
  nameWithType: HttpHeaders.Clear
- uid: System.Net.Http.Headers.HttpHeaders.Contains*
  parent: System.Net.Http.Headers.HttpHeaders
  isExternal: false
  name: Contains
  nameWithType: HttpHeaders.Contains
- uid: System.Net.Http.Headers.HttpHeaders.GetEnumerator*
  parent: System.Net.Http.Headers.HttpHeaders
  isExternal: false
  name: GetEnumerator
  nameWithType: HttpHeaders.GetEnumerator
- uid: System.Net.Http.Headers.HttpHeaders.GetValues*
  parent: System.Net.Http.Headers.HttpHeaders
  isExternal: false
  name: GetValues
  nameWithType: HttpHeaders.GetValues
- uid: System.Net.Http.Headers.HttpHeaders.Remove*
  parent: System.Net.Http.Headers.HttpHeaders
  isExternal: false
  name: Remove
  nameWithType: HttpHeaders.Remove
- uid: System.Net.Http.Headers.HttpHeaders.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Net.Http.Headers.HttpHeaders
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: HttpHeaders.System.Collections.IEnumerable.GetEnumerator
- uid: System.Net.Http.Headers.HttpHeaders.ToString*
  parent: System.Net.Http.Headers.HttpHeaders
  isExternal: false
  name: ToString
  nameWithType: HttpHeaders.ToString
- uid: System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation*
  parent: System.Net.Http.Headers.HttpHeaders
  isExternal: false
  name: TryAddWithoutValidation
  nameWithType: HttpHeaders.TryAddWithoutValidation
- uid: System.Net.Http.Headers.HttpHeaders.TryGetValues*
  parent: System.Net.Http.Headers.HttpHeaders
  isExternal: false
  name: TryGetValues
  nameWithType: HttpHeaders.TryGetValues
