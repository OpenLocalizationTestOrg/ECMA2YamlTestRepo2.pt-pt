### YamlMime:ManagedReference
items:
- uid: System.Net.Http.Headers.HttpHeaders
  id: HttpHeaders
  children:
  - System.Net.Http.Headers.HttpHeaders.#ctor
  - System.Net.Http.Headers.HttpHeaders.Add(System.String,System.Collections.Generic.IEnumerable{System.String})
  - System.Net.Http.Headers.HttpHeaders.Add(System.String,System.String)
  - System.Net.Http.Headers.HttpHeaders.Clear
  - System.Net.Http.Headers.HttpHeaders.Contains(System.String)
  - System.Net.Http.Headers.HttpHeaders.GetEnumerator
  - System.Net.Http.Headers.HttpHeaders.GetValues(System.String)
  - System.Net.Http.Headers.HttpHeaders.Remove(System.String)
  - System.Net.Http.Headers.HttpHeaders.System#Collections#IEnumerable#GetEnumerator
  - System.Net.Http.Headers.HttpHeaders.ToString
  - System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.Collections.Generic.IEnumerable{System.String})
  - System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.String)
  - System.Net.Http.Headers.HttpHeaders.TryGetValues(System.String,System.Collections.Generic.IEnumerable{System.String}@)
  langs:
  - csharp
  name: HttpHeaders
  nameWithType: HttpHeaders
  fullName: System.Net.Http.Headers.HttpHeaders
  type: Class
  summary: "A collection of headers and their values as defined in RFC 2616."
  syntax:
    content: 'public abstract class HttpHeaders : System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,System.Collections.Generic.IEnumerable<string>>>'
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Collections.Generic.IEnumerable<System.String>>>
  inheritedMembers: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Http.Headers.HttpHeaders.#ctor
  id: '#ctor'
  parent: System.Net.Http.Headers.HttpHeaders
  langs:
  - csharp
  name: HttpHeaders()
  nameWithType: HttpHeaders.HttpHeaders()
  fullName: System.Net.Http.Headers.HttpHeaders.HttpHeaders()
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Initializes a new instance of the <see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot;></see> class."
  syntax:
    content: protected HttpHeaders ();
    parameters: []
  overload: System.Net.Http.Headers.HttpHeaders.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Http.Headers.HttpHeaders.Add(System.String,System.Collections.Generic.IEnumerable{System.String})
  id: Add(System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: System.Net.Http.Headers.HttpHeaders
  langs:
  - csharp
  name: Add(String,IEnumerable<String>)
  nameWithType: HttpHeaders.Add(String,IEnumerable<String>)
  fullName: System.Net.Http.Headers.HttpHeaders.Add(String,IEnumerable<String>)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Adds the specified header and its values into the <see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot;></see> collection."
  remarks: "The header `values` will be parsed and validated.       If the specified header does not exist, the Add method inserts a new header into the list of header name/value pairs.       If the specified header is already present, `values` are added to the comma-separated list of values associated with the header."
  syntax:
    content: public void Add (string name, System.Collections.Generic.IEnumerable<string> values);
    parameters:
    - id: name
      type: System.String
      description: "The header to add to the collection."
    - id: values
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "A list of header values to add to the collection."
  overload: System.Net.Http.Headers.HttpHeaders.Add*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Http.Headers.HttpHeaders.Add(System.String,System.String)
  id: Add(System.String,System.String)
  parent: System.Net.Http.Headers.HttpHeaders
  langs:
  - csharp
  name: Add(String,String)
  nameWithType: HttpHeaders.Add(String,String)
  fullName: System.Net.Http.Headers.HttpHeaders.Add(String,String)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Adds the specified header and its value into the <see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot;></see> collection."
  remarks: "The header `value` will be parsed and validated.       If the specified header does not exist, the Add method inserts a new header into the list of header name/value pairs.       If the specified header is already present, `value` is added to the comma-separated list of values associated with the header."
  syntax:
    content: public void Add (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "The header to add to the collection."
    - id: value
      type: System.String
      description: "The content of the header."
  overload: System.Net.Http.Headers.HttpHeaders.Add*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Http.Headers.HttpHeaders.Clear
  id: Clear
  parent: System.Net.Http.Headers.HttpHeaders
  langs:
  - csharp
  name: Clear()
  nameWithType: HttpHeaders.Clear()
  fullName: System.Net.Http.Headers.HttpHeaders.Clear()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Removes all headers from the <see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot;></see> collection."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Net.Http.Headers.HttpHeaders.Clear*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Http.Headers.HttpHeaders.Contains(System.String)
  id: Contains(System.String)
  parent: System.Net.Http.Headers.HttpHeaders
  langs:
  - csharp
  name: Contains(String)
  nameWithType: HttpHeaders.Contains(String)
  fullName: System.Net.Http.Headers.HttpHeaders.Contains(String)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Returns if  a specific header exists in the <see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot;></see> collection."
  syntax:
    content: public bool Contains (string name);
    parameters:
    - id: name
      type: System.String
      description: "The specific header."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Net.Http.Headers.HttpHeaders.Contains*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Http.Headers.HttpHeaders.GetEnumerator
  id: GetEnumerator
  parent: System.Net.Http.Headers.HttpHeaders
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: HttpHeaders.GetEnumerator()
  fullName: System.Net.Http.Headers.HttpHeaders.GetEnumerator()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Returns an enumerator that can iterate through the <see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot;></see> instance."
  syntax:
    content: public System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<string,System.Collections.Generic.IEnumerable<string>>> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IEnumerable{System.String}}}
      description: "To be added."
  overload: System.Net.Http.Headers.HttpHeaders.GetEnumerator*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Http.Headers.HttpHeaders.GetValues(System.String)
  id: GetValues(System.String)
  parent: System.Net.Http.Headers.HttpHeaders
  langs:
  - csharp
  name: GetValues(String)
  nameWithType: HttpHeaders.GetValues(String)
  fullName: System.Net.Http.Headers.HttpHeaders.GetValues(String)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Returns all header values for a specified header stored in the <see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot;></see> collection."
  syntax:
    content: public System.Collections.Generic.IEnumerable<string> GetValues (string name);
    parameters:
    - id: name
      type: System.String
      description: "The specified header to return values for."
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "To be added."
  overload: System.Net.Http.Headers.HttpHeaders.GetValues*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Http.Headers.HttpHeaders.Remove(System.String)
  id: Remove(System.String)
  parent: System.Net.Http.Headers.HttpHeaders
  langs:
  - csharp
  name: Remove(String)
  nameWithType: HttpHeaders.Remove(String)
  fullName: System.Net.Http.Headers.HttpHeaders.Remove(String)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Removes the specified header from the <see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot;></see> collection."
  syntax:
    content: public bool Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: "The name of the header to remove from the collection."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Net.Http.Headers.HttpHeaders.Remove*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Http.Headers.HttpHeaders.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Net.Http.Headers.HttpHeaders
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: HttpHeaders.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Net.Http.Headers.HttpHeaders.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Gets an enumerator that can iterate through a <see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot;></see>."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "To be added."
  overload: System.Net.Http.Headers.HttpHeaders.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Http.Headers.HttpHeaders.ToString
  id: ToString
  parent: System.Net.Http.Headers.HttpHeaders
  langs:
  - csharp
  name: ToString()
  nameWithType: HttpHeaders.ToString()
  fullName: System.Net.Http.Headers.HttpHeaders.ToString()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Returns a string that represents the current <see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot;></see> object."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "To be added."
  overload: System.Net.Http.Headers.HttpHeaders.ToString*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.Collections.Generic.IEnumerable{System.String})
  id: TryAddWithoutValidation(System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: System.Net.Http.Headers.HttpHeaders
  langs:
  - csharp
  name: TryAddWithoutValidation(String,IEnumerable<String>)
  nameWithType: HttpHeaders.TryAddWithoutValidation(String,IEnumerable<String>)
  fullName: System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(String,IEnumerable<String>)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Returns a value that indicates whether the specified header and its values were added to the <see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot;></see> collection without validating the provided information."
  syntax:
    content: public bool TryAddWithoutValidation (string name, System.Collections.Generic.IEnumerable<string> values);
    parameters:
    - id: name
      type: System.String
      description: "The header to add to the collection."
    - id: values
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "The values of the header."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.String)
  id: TryAddWithoutValidation(System.String,System.String)
  parent: System.Net.Http.Headers.HttpHeaders
  langs:
  - csharp
  name: TryAddWithoutValidation(String,String)
  nameWithType: HttpHeaders.TryAddWithoutValidation(String,String)
  fullName: System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(String,String)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Returns a value that indicates whether the specified header and its value were added to the <see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot;></see> collection without validating the provided information."
  syntax:
    content: public bool TryAddWithoutValidation (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "The header to add to the collection."
    - id: value
      type: System.String
      description: "The content of the header."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Net.Http.Headers.HttpHeaders.TryGetValues(System.String,System.Collections.Generic.IEnumerable{System.String}@)
  id: TryGetValues(System.String,System.Collections.Generic.IEnumerable{System.String}@)
  parent: System.Net.Http.Headers.HttpHeaders
  langs:
  - csharp
  name: TryGetValues(String,IEnumerable<String>)
  nameWithType: HttpHeaders.TryGetValues(String,IEnumerable<String>)
  fullName: System.Net.Http.Headers.HttpHeaders.TryGetValues(String,IEnumerable<String>)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Return if a specified header and specified values are stored in the <see cref=&quot;T:System.Net.Http.Headers.HttpHeaders&quot;></see> collection."
  syntax:
    content: public bool TryGetValues (string name, out System.Collections.Generic.IEnumerable<string> values);
    parameters:
    - id: name
      type: System.String
      description: "The specified header."
    - id: values
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "The specified header values."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Net.Http.Headers.HttpHeaders.TryGetValues*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Net.Http.Headers.HttpHeaders.#ctor
  parent: System.Net.Http.Headers.HttpHeaders
  isExternal: false
  name: HttpHeaders()
  nameWithType: HttpHeaders.HttpHeaders()
  fullName: System.Net.Http.Headers.HttpHeaders.HttpHeaders()
- uid: System.Net.Http.Headers.HttpHeaders.Add(System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: System.Net.Http.Headers.HttpHeaders
  isExternal: false
  name: Add(String,IEnumerable<String>)
  nameWithType: HttpHeaders.Add(String,IEnumerable<String>)
  fullName: System.Net.Http.Headers.HttpHeaders.Add(String,IEnumerable<String>)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.Headers.HttpHeaders.Add(System.String,System.String)
  parent: System.Net.Http.Headers.HttpHeaders
  isExternal: false
  name: Add(String,String)
  nameWithType: HttpHeaders.Add(String,String)
  fullName: System.Net.Http.Headers.HttpHeaders.Add(String,String)
- uid: System.Net.Http.Headers.HttpHeaders.Clear
  parent: System.Net.Http.Headers.HttpHeaders
  isExternal: false
  name: Clear()
  nameWithType: HttpHeaders.Clear()
  fullName: System.Net.Http.Headers.HttpHeaders.Clear()
- uid: System.Net.Http.Headers.HttpHeaders.Contains(System.String)
  parent: System.Net.Http.Headers.HttpHeaders
  isExternal: false
  name: Contains(String)
  nameWithType: HttpHeaders.Contains(String)
  fullName: System.Net.Http.Headers.HttpHeaders.Contains(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Http.Headers.HttpHeaders.GetEnumerator
  parent: System.Net.Http.Headers.HttpHeaders
  isExternal: false
  name: GetEnumerator()
  nameWithType: HttpHeaders.GetEnumerator()
  fullName: System.Net.Http.Headers.HttpHeaders.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IEnumerable{System.String}}}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<KeyValuePair<String,IEnumerable<String>>>
  nameWithType: IEnumerator<KeyValuePair<String,IEnumerable<String>>>
  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Collections.Generic.IEnumerable<System.String>>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Collections.Generic.IEnumerable<System.String>>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.String,System.Collections.Generic.IEnumerable<System.String>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.Headers.HttpHeaders.GetValues(System.String)
  parent: System.Net.Http.Headers.HttpHeaders
  isExternal: false
  name: GetValues(String)
  nameWithType: HttpHeaders.GetValues(String)
  fullName: System.Net.Http.Headers.HttpHeaders.GetValues(String)
- uid: System.Net.Http.Headers.HttpHeaders.Remove(System.String)
  parent: System.Net.Http.Headers.HttpHeaders
  isExternal: false
  name: Remove(String)
  nameWithType: HttpHeaders.Remove(String)
  fullName: System.Net.Http.Headers.HttpHeaders.Remove(String)
- uid: System.Net.Http.Headers.HttpHeaders.System#Collections#IEnumerable#GetEnumerator
  parent: System.Net.Http.Headers.HttpHeaders
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: HttpHeaders.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Net.Http.Headers.HttpHeaders.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Net.Http.Headers.HttpHeaders.ToString
  parent: System.Net.Http.Headers.HttpHeaders
  isExternal: false
  name: ToString()
  nameWithType: HttpHeaders.ToString()
  fullName: System.Net.Http.Headers.HttpHeaders.ToString()
- uid: System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: System.Net.Http.Headers.HttpHeaders
  isExternal: false
  name: TryAddWithoutValidation(String,IEnumerable<String>)
  nameWithType: HttpHeaders.TryAddWithoutValidation(String,IEnumerable<String>)
  fullName: System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(String,IEnumerable<String>)
- uid: System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.String)
  parent: System.Net.Http.Headers.HttpHeaders
  isExternal: false
  name: TryAddWithoutValidation(String,String)
  nameWithType: HttpHeaders.TryAddWithoutValidation(String,String)
  fullName: System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(String,String)
- uid: System.Net.Http.Headers.HttpHeaders.TryGetValues(System.String,System.Collections.Generic.IEnumerable{System.String}@)
  parent: System.Net.Http.Headers.HttpHeaders
  isExternal: false
  name: TryGetValues(String,IEnumerable<String>)
  nameWithType: HttpHeaders.TryGetValues(String,IEnumerable<String>)
  fullName: System.Net.Http.Headers.HttpHeaders.TryGetValues(String,IEnumerable<String>)
- uid: System.Net.Http.Headers.HttpHeaders.#ctor*
  parent: System.Net.Http.Headers.HttpHeaders
  isExternal: false
  name: HttpHeaders
  nameWithType: HttpHeaders.HttpHeaders
- uid: System.Net.Http.Headers.HttpHeaders.Add*
  parent: System.Net.Http.Headers.HttpHeaders
  isExternal: false
  name: Add
  nameWithType: HttpHeaders.Add
- uid: System.Net.Http.Headers.HttpHeaders.Clear*
  parent: System.Net.Http.Headers.HttpHeaders
  isExternal: false
  name: Clear
  nameWithType: HttpHeaders.Clear
- uid: System.Net.Http.Headers.HttpHeaders.Contains*
  parent: System.Net.Http.Headers.HttpHeaders
  isExternal: false
  name: Contains
  nameWithType: HttpHeaders.Contains
- uid: System.Net.Http.Headers.HttpHeaders.GetEnumerator*
  parent: System.Net.Http.Headers.HttpHeaders
  isExternal: false
  name: GetEnumerator
  nameWithType: HttpHeaders.GetEnumerator
- uid: System.Net.Http.Headers.HttpHeaders.GetValues*
  parent: System.Net.Http.Headers.HttpHeaders
  isExternal: false
  name: GetValues
  nameWithType: HttpHeaders.GetValues
- uid: System.Net.Http.Headers.HttpHeaders.Remove*
  parent: System.Net.Http.Headers.HttpHeaders
  isExternal: false
  name: Remove
  nameWithType: HttpHeaders.Remove
- uid: System.Net.Http.Headers.HttpHeaders.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Net.Http.Headers.HttpHeaders
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: HttpHeaders.System.Collections.IEnumerable.GetEnumerator
- uid: System.Net.Http.Headers.HttpHeaders.ToString*
  parent: System.Net.Http.Headers.HttpHeaders
  isExternal: false
  name: ToString
  nameWithType: HttpHeaders.ToString
- uid: System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation*
  parent: System.Net.Http.Headers.HttpHeaders
  isExternal: false
  name: TryAddWithoutValidation
  nameWithType: HttpHeaders.TryAddWithoutValidation
- uid: System.Net.Http.Headers.HttpHeaders.TryGetValues*
  parent: System.Net.Http.Headers.HttpHeaders
  isExternal: false
  name: TryGetValues
  nameWithType: HttpHeaders.TryGetValues
