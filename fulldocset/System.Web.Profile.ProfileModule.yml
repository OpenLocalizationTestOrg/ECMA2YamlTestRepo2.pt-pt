### YamlMime:ManagedReference
items:
- uid: System.Web.Profile.ProfileModule
  id: ProfileModule
  children:
  - System.Web.Profile.ProfileModule.#ctor
  - System.Web.Profile.ProfileModule.Dispose
  - System.Web.Profile.ProfileModule.Init(System.Web.HttpApplication)
  - System.Web.Profile.ProfileModule.MigrateAnonymous
  - System.Web.Profile.ProfileModule.Personalize
  - System.Web.Profile.ProfileModule.ProfileAutoSaving
  langs:
  - csharp
  name: ProfileModule
  nameWithType: ProfileModule
  fullName: System.Web.Profile.ProfileModule
  type: Class
  summary: "Manages the creation of the user profile and profile events. This class cannot be inherited."
  remarks: "When the user profile is enabled, ASP.NET uses the ProfileModule to create the user profile and store it in the <xref:System.Web.HttpContext.Profile%2A> property of the current <xref:System.Web.HttpContext>.       The ProfileModule exposes the following events you can handle to configure authentication in your application:      -   The <xref:System.Web.Profile.ProfileModule.MigrateAnonymous> event, to migrate profile settings from an anonymous profile to an authenticated profile when an anonymous user logs in.      -   The <xref:System.Web.Profile.ProfileModule.Personalize> event, to customize how the user profile is created.      -   The <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> event, to control how the user profile is saved when the <xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A> property is set to `true`.       For information about enabling the user profile, see [profile Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/ccb9bf3a-a044-464d-b89b-5cb5a3d389dd)."
  example:
  - "The following example shows a Web.config file that enables anonymous identification and profile properties that support anonymous users.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <authentication mode=\"Forms\" >  \n      <forms loginUrl=\"login.aspx\" name=\".ASPXFORMSAUTH\" />  \n    </authentication>  \n  \n    <anonymousIdentification enabled=\"true\" />  \n  \n    <profile enabled=\"true\" defaultProvider=\"AspNetSqlProvider\">  \n      <properties>  \n        <add name=\"ZipCode\" allowAnonymous=\"true\" />  \n        <add name=\"CityAndState\" allowAnonymous=\"true\" />  \n        <add name=\"StockSymbols\" type=\"System.Collections.ArrayList\" allowAnonymous=\"true\" />  \n      </properties>  \n    </profile>  \n  </system.web>  \n</configuration>  \n```  \n  \n The following code example shows the <xref:System.Web.Profile.ProfileModule.MigrateAnonymous> event included in the Global.asax file for an ASP.NET application. The <xref:System.Web.Profile.ProfileModule.MigrateAnonymous> event copies profile property values from the anonymous profile to the profile for the current user.  \n  \n [!code-vb[System.Web.Profile.ProfileManager#1](~/add/codesnippet/visualbasic/t-system.web.profile.pro_13_1.asax)]\n [!code-cs[System.Web.Profile.ProfileManager#1](~/add/codesnippet/csharp/t-system.web.profile.pro_13_1.asax)]"
  syntax:
    content: 'public sealed class ProfileModule : System.Web.IHttpModule'
  inheritance:
  - System.Object
  implements:
  - System.Web.IHttpModule
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileModule.#ctor
  id: '#ctor'
  parent: System.Web.Profile.ProfileModule
  langs:
  - csharp
  name: ProfileModule()
  nameWithType: ProfileModule.ProfileModule()
  fullName: System.Web.Profile.ProfileModule.ProfileModule()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.Profile.ProfileModule&quot;></xref> class."
  remarks: "This constructor is not intended to be called from application code.       An <xref:System.Web.HttpApplication> is created when an ASP.NET application is started. The <xref:System.Web.HttpApplication> calls the <xref:System.Web.Profile.ProfileModule> constructor to create the <xref:System.Web.Profile.ProfileModule> for the application. The <xref:System.Web.Profile.ProfileModule> is specified in the configuration for an application."
  syntax:
    content: public ProfileModule ();
    parameters: []
  overload: System.Web.Profile.ProfileModule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileModule.Dispose
  id: Dispose
  parent: System.Web.Profile.ProfileModule
  langs:
  - csharp
  name: Dispose()
  nameWithType: ProfileModule.Dispose()
  fullName: System.Web.Profile.ProfileModule.Dispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Releases all resources used by the <xref href=&quot;System.Web.Profile.ProfileModule&quot;></xref>."
  remarks: "This method is not intended to be called from application code.       An <xref:System.Web.HttpApplication> is created when an ASP.NET application is started. The <xref:System.Web.HttpApplication> creates and initializes the <xref:System.Web.Profile.ProfileModule> for the application and calls the Dispose method when the object is released. The <xref:System.Web.Profile.ProfileModule> is specified in the configuration for an application."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Web.Profile.ProfileModule.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileModule.Init(System.Web.HttpApplication)
  id: Init(System.Web.HttpApplication)
  parent: System.Web.Profile.ProfileModule
  langs:
  - csharp
  name: Init(HttpApplication)
  nameWithType: ProfileModule.Init(HttpApplication)
  fullName: System.Web.Profile.ProfileModule.Init(HttpApplication)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Calls initialization code when a <xref href=&quot;System.Web.Profile.ProfileModule&quot;></xref> object is created."
  remarks: "This method is not intended to be called from application code.       An <xref:System.Web.HttpApplication> is created when an ASP.NET application is started. The <xref:System.Web.HttpApplication> calls the Init method when it creates the <xref:System.Web.Profile.ProfileModule> for the application. The <xref:System.Web.Profile.ProfileModule> is specified in the configuration for an application."
  syntax:
    content: public void Init (System.Web.HttpApplication app);
    parameters:
    - id: app
      type: System.Web.HttpApplication
      description: "The current application."
  overload: System.Web.Profile.ProfileModule.Init*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileModule.MigrateAnonymous
  id: MigrateAnonymous
  parent: System.Web.Profile.ProfileModule
  langs:
  - csharp
  name: MigrateAnonymous
  nameWithType: ProfileModule.MigrateAnonymous
  fullName: System.Web.Profile.ProfileModule.MigrateAnonymous
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Occurs when the anonymous user for a profile logs in."
  remarks: "You can access the MigrateAnonymous event of the <xref:System.Web.Profile.ProfileModule> class in the Global.asax file for your ASP.NET application by using the `Profile_MigrateAnonymous` global event, as shown in the example for this topic.       You can use the MigrateAnonymous event to copy profile property values from an anonymous profile to an authenticated profile when a user who has been anonymously using your application logs in.       When an application that has the user profile enabled is started, ASP.NET creates a new class of type `ProfileCommon`, which inherits from the <xref:System.Web.Profile.ProfileBase> class. Strongly typed accessors are added to the `ProfileCommon` class for each property defined in the  configuration section. A `GetProfile` method enables you to retrieve a `ProfileCommon` object based on a user name. You can use the `GetProfile` method of the current, authenticated profile to retrieve the property values of the anonymous profile. The anonymous property values can then be copied to the current profile for the authenticated user."
  example:
  - "The following example shows a Web.config file that enables anonymous identification and profile properties that support anonymous users.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <authentication mode=\"Forms\" >  \n      <forms loginUrl=\"login.aspx\" name=\".ASPXFORMSAUTH\" />  \n    </authentication>  \n  \n    <anonymousIdentification enabled=\"true\" />  \n  \n    <profile enabled=\"true\" defaultProvider=\"AspNetSqlProvider\">  \n      <properties>  \n        <add name=\"ZipCode\" allowAnonymous=\"true\" />  \n        <add name=\"CityAndState\" allowAnonymous=\"true\" />  \n        <add name=\"StockSymbols\" type=\"System.Collections.ArrayList\" allowAnonymous=\"true\" />  \n      </properties>  \n    </profile>  \n  </system.web>  \n</configuration>  \n```  \n  \n The following code example shows the MigrateAnonymous event included in the Global.asax file for an ASP.NET application. The MigrateAnonymous event copies profile property values from the anonymous profile to the profile for the current user.  \n  \n [!code-vb[System.Web.Profile.ProfileManager#1](~/add/codesnippet/visualbasic/e-system.web.profile.pro_0_1.asax)]\n [!code-cs[System.Web.Profile.ProfileManager#1](~/add/codesnippet/csharp/e-system.web.profile.pro_0_1.asax)]"
  syntax:
    content: public event System.Web.Profile.ProfileMigrateEventHandler MigrateAnonymous;
    return:
      type: System.Web.Profile.ProfileMigrateEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileModule.Personalize
  id: Personalize
  parent: System.Web.Profile.ProfileModule
  langs:
  - csharp
  name: Personalize
  nameWithType: ProfileModule.Personalize
  fullName: System.Web.Profile.ProfileModule.Personalize
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Occurs before the user profile is created."
  remarks: "The Personalize event is raised during the <xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=fullName> event. You can access the Personalize event of the <xref:System.Web.Profile.ProfileModule> class in the Global.asax file for your ASP.NET application using the `Profile_Personalize` global event as shown in the example for this topic.       You can use the Personalize event to specify a custom user profile. If the <xref:System.Web.Profile.ProfileEventArgs.Profile%2A?displayProperty=fullName> property value specified for the <xref:System.Web.Profile.ProfileEventHandler> event handler for the Personalize event is set to a value that is not `null` when the Personalize event ends, then the <xref:System.Web.Profile.ProfileModule> will use the specified value of the <xref:System.Web.Profile.ProfileEventArgs.Profile%2A?displayProperty=fullName> property as the value of the <xref:System.Web.HttpContext.Profile%2A> property of the current <xref:System.Web.HttpContext>."
  example:
  - "The following code example shows the Personalize event declared in the Global.asax file for an application. The event code loads a user profile for a user based on role membership.  \n  \n [!code-vb[System.Web.Profile.ProfileManager.Personalize#12](~/add/codesnippet/visualbasic/e-system.web.profile.pro_1_1.asax)]\n [!code-cs[System.Web.Profile.ProfileManager.Personalize#12](~/add/codesnippet/csharp/e-system.web.profile.pro_1_1.asax)]"
  syntax:
    content: public event System.Web.Profile.ProfileEventHandler Personalize;
    return:
      type: System.Web.Profile.ProfileEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileModule.ProfileAutoSaving
  id: ProfileAutoSaving
  parent: System.Web.Profile.ProfileModule
  langs:
  - csharp
  name: ProfileAutoSaving
  nameWithType: ProfileModule.ProfileAutoSaving
  fullName: System.Web.Profile.ProfileModule.ProfileAutoSaving
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Occurs at the end of page execution if automatic profile saving is enabled."
  remarks: "The ProfileAutoSaving event is raised at the end of page execution if the <xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A?displayProperty=fullName> property is `true`. You can access the ProfileAutoSaving event of the <xref:System.Web.Profile.ProfileModule> class in the Global.asax file for your ASP.NET application using the `Profile_ProfileAutoSaving` global event, as shown in the example for this topic.       The <xref:System.Configuration.SettingsBase.Save%2A?displayProperty=fullName> method checks the <xref:System.Configuration.SettingsPropertyValue.IsDirty%2A> property value for each <xref:System.Configuration.SettingsPropertyValue> in the user profile to determine whether properties that are made up of primitive types, strings, or <xref:System.DateTime> objects have been changed. The <xref:System.Configuration.SettingsBase.Save%2A> method cannot explicitly determine whether a custom class has changed. You can use the ProfileAutoSaving event to determine whether a custom object has been changed and then either to continue with the automatic save for modified objects or to cancel the automatic save if no objects have been modified.       To cancel the automatic profile save operation, set the <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> property to `false` in the ProfileAutoSaving event; otherwise, set the <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> property to `true`.       There may be multiple subscribers to the ProfileAutoSaving event. The <xref:System.Web.Profile.ProfileModule> will use the last value that the <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> property is set to. As a result, it is recommended that you explicitly set the <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> property in the ProfileAutoSaving event whether you are canceling or continuing with the automatic save, as you may need to overwrite the value set by an earlier subscriber."
  example:
  - "The following code example shows the ProfileAutoSaving event included in the Global.asax file for an ASP.NET application.  \n  \n [!code-cs[System.Web.Profile.ProfileManager.ProfileAutoSaving#11](~/add/codesnippet/csharp/e-system.web.profile.pro_2_1.asax)]\n [!code-vb[System.Web.Profile.ProfileManager.ProfileAutoSaving#11](~/add/codesnippet/visualbasic/e-system.web.profile.pro_2_1.asax)]"
  syntax:
    content: public event System.Web.Profile.ProfileAutoSaveEventHandler ProfileAutoSaving;
    return:
      type: System.Web.Profile.ProfileAutoSaveEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Profile.ProfileModule.#ctor
  parent: System.Web.Profile.ProfileModule
  isExternal: false
  name: ProfileModule()
  nameWithType: ProfileModule.ProfileModule()
  fullName: System.Web.Profile.ProfileModule.ProfileModule()
- uid: System.Web.Profile.ProfileModule.Dispose
  parent: System.Web.Profile.ProfileModule
  isExternal: false
  name: Dispose()
  nameWithType: ProfileModule.Dispose()
  fullName: System.Web.Profile.ProfileModule.Dispose()
- uid: System.Web.Profile.ProfileModule.Init(System.Web.HttpApplication)
  parent: System.Web.Profile.ProfileModule
  isExternal: false
  name: Init(HttpApplication)
  nameWithType: ProfileModule.Init(HttpApplication)
  fullName: System.Web.Profile.ProfileModule.Init(HttpApplication)
- uid: System.Web.HttpApplication
  parent: System.Web
  isExternal: false
  name: HttpApplication
  nameWithType: HttpApplication
  fullName: System.Web.HttpApplication
- uid: System.Web.Profile.ProfileModule.MigrateAnonymous
  parent: System.Web.Profile.ProfileModule
  isExternal: false
  name: MigrateAnonymous
  nameWithType: ProfileModule.MigrateAnonymous
  fullName: System.Web.Profile.ProfileModule.MigrateAnonymous
- uid: System.Web.Profile.ProfileMigrateEventHandler
  parent: System.Web.Profile
  isExternal: false
  name: ProfileMigrateEventHandler
  nameWithType: ProfileMigrateEventHandler
  fullName: System.Web.Profile.ProfileMigrateEventHandler
- uid: System.Web.Profile.ProfileModule.Personalize
  parent: System.Web.Profile.ProfileModule
  isExternal: false
  name: Personalize
  nameWithType: ProfileModule.Personalize
  fullName: System.Web.Profile.ProfileModule.Personalize
- uid: System.Web.Profile.ProfileEventHandler
  parent: System.Web.Profile
  isExternal: false
  name: ProfileEventHandler
  nameWithType: ProfileEventHandler
  fullName: System.Web.Profile.ProfileEventHandler
- uid: System.Web.Profile.ProfileModule.ProfileAutoSaving
  parent: System.Web.Profile.ProfileModule
  isExternal: false
  name: ProfileAutoSaving
  nameWithType: ProfileModule.ProfileAutoSaving
  fullName: System.Web.Profile.ProfileModule.ProfileAutoSaving
- uid: System.Web.Profile.ProfileAutoSaveEventHandler
  parent: System.Web.Profile
  isExternal: false
  name: ProfileAutoSaveEventHandler
  nameWithType: ProfileAutoSaveEventHandler
  fullName: System.Web.Profile.ProfileAutoSaveEventHandler
- uid: System.Web.Profile.ProfileModule.#ctor*
  parent: System.Web.Profile.ProfileModule
  isExternal: false
  name: ProfileModule
  nameWithType: ProfileModule.ProfileModule
- uid: System.Web.Profile.ProfileModule.Dispose*
  parent: System.Web.Profile.ProfileModule
  isExternal: false
  name: Dispose
  nameWithType: ProfileModule.Dispose
- uid: System.Web.Profile.ProfileModule.Init*
  parent: System.Web.Profile.ProfileModule
  isExternal: false
  name: Init
  nameWithType: ProfileModule.Init
