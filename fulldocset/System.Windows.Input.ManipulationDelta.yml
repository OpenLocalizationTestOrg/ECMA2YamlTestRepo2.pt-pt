### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.ManipulationDelta
  id: ManipulationDelta
  children:
  - System.Windows.Input.ManipulationDelta.#ctor(System.Windows.Vector,System.Double,System.Windows.Vector,System.Windows.Vector)
  - System.Windows.Input.ManipulationDelta.Expansion
  - System.Windows.Input.ManipulationDelta.Rotation
  - System.Windows.Input.ManipulationDelta.Scale
  - System.Windows.Input.ManipulationDelta.Translation
  langs:
  - csharp
  name: ManipulationDelta
  nameWithType: ManipulationDelta
  fullName: System.Windows.Input.ManipulationDelta
  type: Class
  summary: "Contains transformation data that is accumulated when manipulation events occur."
  remarks: "The ManipulationDelta class contains information about the changes in the position of a manipulation.  [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] interprets the changes as a <xref:System.Windows.Input.ManipulationDelta.Translation%2A>, <xref:System.Windows.Input.ManipulationDelta.Expansion%2A>, or <xref:System.Windows.Input.ManipulationDelta.Rotation%2A>. When the <xref:System.Windows.UIElement.ManipulationDelta> event occurs on a <xref:System.Windows.UIElement>, use the properties on a ManipulationDelta object to transform the object that should be manipulated.  The <xref:System.Windows.Input.ManipulationDeltaEventArgs> class provides two properties of type ManipulationDelta: <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> and <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A>.       For more information about manipulations, see the [Input Overview](~/add/includes/ajax-current-ext-md.md).  For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event.  The example applies the <xref:System.Windows.Input.ManipulationDelta.Translation%2A>, <xref:System.Windows.Input.ManipulationDelta.Scale%2A>, and <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> properties to move, resize, and rotate a <xref:System.Windows.Shapes.Rectangle>. This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](../Topic/Walkthrough:%20Creating%20Your%20First%20Touch%20Application.md).  \n  \n [!code-cs[BasicManipulation#ManipulationDelta](~/add/codesnippet/csharp/basicmanipulation/mainwindow.xaml.cs#manipulationdelta)]\n [!code-vb[BasicManipulation#ManipulationDelta](~/add/codesnippet/visualbasic/basicmanipulation/mainwindow.xaml.vb#manipulationdelta)]"
  syntax:
    content: public class ManipulationDelta
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Input.ManipulationDelta.#ctor(System.Windows.Vector,System.Double,System.Windows.Vector,System.Windows.Vector)
  id: '#ctor(System.Windows.Vector,System.Double,System.Windows.Vector,System.Windows.Vector)'
  parent: System.Windows.Input.ManipulationDelta
  langs:
  - csharp
  name: ManipulationDelta(Vector,Double,Vector,Vector)
  nameWithType: ManipulationDelta.ManipulationDelta(Vector,Double,Vector,Vector)
  fullName: System.Windows.Input.ManipulationDelta.ManipulationDelta(Vector,Double,Vector,Vector)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Input.ManipulationDelta&quot;></xref> class."
  syntax:
    content: public ManipulationDelta (System.Windows.Vector translation, double rotation, System.Windows.Vector scale, System.Windows.Vector expansion);
    parameters:
    - id: translation
      type: System.Windows.Vector
      description: "The linear motion of the manipulation in [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]."
    - id: rotation
      type: System.Double
      description: "The rotation of the manipulation in degrees."
    - id: scale
      type: System.Windows.Vector
      description: "The amount the manipulation has resized as a multiplier."
    - id: expansion
      type: System.Windows.Vector
      description: "The amount the manipulation has resized in [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]."
  overload: System.Windows.Input.ManipulationDelta.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ManipulationDelta.Expansion
  id: Expansion
  parent: System.Windows.Input.ManipulationDelta
  langs:
  - csharp
  name: Expansion
  nameWithType: ManipulationDelta.Expansion
  fullName: System.Windows.Input.ManipulationDelta.Expansion
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Gets or sets the amount the manipulation has resized in [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]."
  remarks: "The <xref:System.Windows.Input.ManipulationDelta.Scale%2A> and Expansion properties both report a resizing manipulation.  The difference between the two is the way in which the value is reported.  The Expansion property reports the resizing manipulation in [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]. The <xref:System.Windows.Input.ManipulationDelta.Scale%2A> property reports the value as a multiplier.  If <xref:System.Windows.Input.ManipulationDelta.Scale%2A> is 0.5, the manipulation is interpreted as decreasing the size by 50 percent.  If <xref:System.Windows.Input.ManipulationDelta.Scale%2A> is 2, the manipulation is interpreted as increasing the size by 100 percent."
  syntax:
    content: public System.Windows.Vector Expansion { get; }
    return:
      type: System.Windows.Vector
      description: "The amount the manipulation has resized in [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]."
  overload: System.Windows.Input.ManipulationDelta.Expansion*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ManipulationDelta.Rotation
  id: Rotation
  parent: System.Windows.Input.ManipulationDelta
  langs:
  - csharp
  name: Rotation
  nameWithType: ManipulationDelta.Rotation
  fullName: System.Windows.Input.ManipulationDelta.Rotation
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Gets or sets the rotation of the manipulation in degrees."
  remarks: "The Rotation property reports the way a manipulation is interpreted as rotating around an axis.  The axis is usually the point between the two points of contact that initiated the manipulation."
  example:
  - "The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event.  The example applies the <xref:System.Windows.Input.ManipulationDelta.Translation%2A>, <xref:System.Windows.Input.ManipulationDelta.Scale%2A>, and Rotation properties to move, resize, and rotate a <xref:System.Windows.Shapes.Rectangle>. This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[BasicManipulation#ManipulationDelta](~/add/codesnippet/csharp/basicmanipulation/mainwindow.xaml.cs#manipulationdelta)]\n [!code-vb[BasicManipulation#ManipulationDelta](~/add/codesnippet/visualbasic/basicmanipulation/mainwindow.xaml.vb#manipulationdelta)]"
  syntax:
    content: public double Rotation { get; }
    return:
      type: System.Double
      description: "The rotation of the manipulation in degrees."
  overload: System.Windows.Input.ManipulationDelta.Rotation*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ManipulationDelta.Scale
  id: Scale
  parent: System.Windows.Input.ManipulationDelta
  langs:
  - csharp
  name: Scale
  nameWithType: ManipulationDelta.Scale
  fullName: System.Windows.Input.ManipulationDelta.Scale
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Gets or sets the amount the manipulation has resized as a multiplier."
  remarks: "The Scale and <xref:System.Windows.Input.ManipulationDelta.Expansion%2A> properties both report a resizing manipulation.  The difference between the two is the way in which the value is reported.  The Scale property reports the value as a multiplier.  If Scale is 0.5, the manipulation is interpreted as decreasing the size by 50 percent.  If Scale is 2, the manipulation is interpreted as increasing the size by 100 percent. The <xref:System.Windows.Input.ManipulationDelta.Expansion%2A> property reports the resizing manipulation in [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]."
  example:
  - "The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event.  The example applies the <xref:System.Windows.Input.ManipulationDelta.Translation%2A>, Scale, and <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> properties to move, resize, and rotate a <xref:System.Windows.Shapes.Rectangle>. This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[BasicManipulation#ManipulationDelta](~/add/codesnippet/csharp/basicmanipulation/mainwindow.xaml.cs#manipulationdelta)]\n [!code-vb[BasicManipulation#ManipulationDelta](~/add/codesnippet/visualbasic/basicmanipulation/mainwindow.xaml.vb#manipulationdelta)]"
  syntax:
    content: public System.Windows.Vector Scale { get; }
    return:
      type: System.Windows.Vector
      description: "The amount the manipulation has resized."
  overload: System.Windows.Input.ManipulationDelta.Scale*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.ManipulationDelta.Translation
  id: Translation
  parent: System.Windows.Input.ManipulationDelta
  langs:
  - csharp
  name: Translation
  nameWithType: ManipulationDelta.Translation
  fullName: System.Windows.Input.ManipulationDelta.Translation
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Gets or sets the linear motion of the manipulation."
  remarks: "The Translation property reports the way a manipulation is interpreted as moving horizontally and vertically on the screen."
  example:
  - "The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event.  The example applies the Translation, <xref:System.Windows.Input.ManipulationDelta.Scale%2A>, and <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> properties to move, resize, and rotate a <xref:System.Windows.Shapes.Rectangle>. This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[BasicManipulation#ManipulationDelta](~/add/codesnippet/csharp/basicmanipulation/mainwindow.xaml.cs#manipulationdelta)]\n [!code-vb[BasicManipulation#ManipulationDelta](~/add/codesnippet/visualbasic/basicmanipulation/mainwindow.xaml.vb#manipulationdelta)]"
  syntax:
    content: public System.Windows.Vector Translation { get; }
    return:
      type: System.Windows.Vector
      description: "The linear motion of the manipulation in [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]."
  overload: System.Windows.Input.ManipulationDelta.Translation*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Input.ManipulationDelta.#ctor(System.Windows.Vector,System.Double,System.Windows.Vector,System.Windows.Vector)
  parent: System.Windows.Input.ManipulationDelta
  isExternal: false
  name: ManipulationDelta(Vector,Double,Vector,Vector)
  nameWithType: ManipulationDelta.ManipulationDelta(Vector,Double,Vector,Vector)
  fullName: System.Windows.Input.ManipulationDelta.ManipulationDelta(Vector,Double,Vector,Vector)
- uid: System.Windows.Vector
  parent: System.Windows
  isExternal: false
  name: Vector
  nameWithType: Vector
  fullName: System.Windows.Vector
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Input.ManipulationDelta.Expansion
  parent: System.Windows.Input.ManipulationDelta
  isExternal: false
  name: Expansion
  nameWithType: ManipulationDelta.Expansion
  fullName: System.Windows.Input.ManipulationDelta.Expansion
- uid: System.Windows.Input.ManipulationDelta.Rotation
  parent: System.Windows.Input.ManipulationDelta
  isExternal: false
  name: Rotation
  nameWithType: ManipulationDelta.Rotation
  fullName: System.Windows.Input.ManipulationDelta.Rotation
- uid: System.Windows.Input.ManipulationDelta.Scale
  parent: System.Windows.Input.ManipulationDelta
  isExternal: false
  name: Scale
  nameWithType: ManipulationDelta.Scale
  fullName: System.Windows.Input.ManipulationDelta.Scale
- uid: System.Windows.Input.ManipulationDelta.Translation
  parent: System.Windows.Input.ManipulationDelta
  isExternal: false
  name: Translation
  nameWithType: ManipulationDelta.Translation
  fullName: System.Windows.Input.ManipulationDelta.Translation
- uid: System.Windows.Input.ManipulationDelta.#ctor*
  parent: System.Windows.Input.ManipulationDelta
  isExternal: false
  name: ManipulationDelta
  nameWithType: ManipulationDelta.ManipulationDelta
- uid: System.Windows.Input.ManipulationDelta.Expansion*
  parent: System.Windows.Input.ManipulationDelta
  isExternal: false
  name: Expansion
  nameWithType: ManipulationDelta.Expansion
- uid: System.Windows.Input.ManipulationDelta.Rotation*
  parent: System.Windows.Input.ManipulationDelta
  isExternal: false
  name: Rotation
  nameWithType: ManipulationDelta.Rotation
- uid: System.Windows.Input.ManipulationDelta.Scale*
  parent: System.Windows.Input.ManipulationDelta
  isExternal: false
  name: Scale
  nameWithType: ManipulationDelta.Scale
- uid: System.Windows.Input.ManipulationDelta.Translation*
  parent: System.Windows.Input.ManipulationDelta
  isExternal: false
  name: Translation
  nameWithType: ManipulationDelta.Translation
