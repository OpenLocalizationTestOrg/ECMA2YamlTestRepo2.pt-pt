### YamlMime:ManagedReference
items:
- uid: System.Web.ModelBinding.ModelBinderDictionary
  id: ModelBinderDictionary
  children:
  - System.Web.ModelBinding.ModelBinderDictionary.#ctor
  - System.Web.ModelBinding.ModelBinderDictionary.Add(System.Collections.Generic.KeyValuePair{System.Type,System.Web.ModelBinding.IModelBinder})
  - System.Web.ModelBinding.ModelBinderDictionary.Add(System.Type,System.Web.ModelBinding.IModelBinder)
  - System.Web.ModelBinding.ModelBinderDictionary.Clear
  - System.Web.ModelBinding.ModelBinderDictionary.Contains(System.Collections.Generic.KeyValuePair{System.Type,System.Web.ModelBinding.IModelBinder})
  - System.Web.ModelBinding.ModelBinderDictionary.ContainsKey(System.Type)
  - System.Web.ModelBinding.ModelBinderDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.Type,System.Web.ModelBinding.IModelBinder}[],System.Int32)
  - System.Web.ModelBinding.ModelBinderDictionary.Count
  - System.Web.ModelBinding.ModelBinderDictionary.DefaultBinder
  - System.Web.ModelBinding.ModelBinderDictionary.GetEnumerator
  - System.Web.ModelBinding.ModelBinderDictionary.IsReadOnly
  - System.Web.ModelBinding.ModelBinderDictionary.Item(System.Type)
  - System.Web.ModelBinding.ModelBinderDictionary.Keys
  - System.Web.ModelBinding.ModelBinderDictionary.Remove(System.Collections.Generic.KeyValuePair{System.Type,System.Web.ModelBinding.IModelBinder})
  - System.Web.ModelBinding.ModelBinderDictionary.Remove(System.Type)
  - System.Web.ModelBinding.ModelBinderDictionary.System#Collections#IEnumerable#GetEnumerator
  - System.Web.ModelBinding.ModelBinderDictionary.TryGetValue(System.Type,System.Web.ModelBinding.IModelBinder@)
  - System.Web.ModelBinding.ModelBinderDictionary.Values
  langs:
  - csharp
  name: ModelBinderDictionary
  nameWithType: ModelBinderDictionary
  fullName: System.Web.ModelBinding.ModelBinderDictionary
  type: Class
  summary: "Fornece um contentor para todos os binders de modelo para a aplicação, listadas por tipo de Gestor de enlaces."
  syntax:
    content: 'public class ModelBinderDictionary : System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<Type,System.Web.ModelBinding.IModelBinder>>, System.Collections.Generic.IDictionary<Type,System.Web.ModelBinding.IModelBinder>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<Type,System.Web.ModelBinding.IModelBinder>>'
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Type,System.Web.ModelBinding.IModelBinder>>
  - System.Collections.Generic.IDictionary<System.Type,System.Web.ModelBinding.IModelBinder>
  - System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Type,System.Web.ModelBinding.IModelBinder>>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.ModelBinding.ModelBinderDictionary.#ctor
  id: '#ctor'
  parent: System.Web.ModelBinding.ModelBinderDictionary
  langs:
  - csharp
  name: ModelBinderDictionary()
  nameWithType: ModelBinderDictionary.ModelBinderDictionary()
  fullName: System.Web.ModelBinding.ModelBinderDictionary.ModelBinderDictionary()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.ModelBinding
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.ModelBinding.ModelBinderDictionary&quot;> </xref> classe."
  syntax:
    content: public ModelBinderDictionary ();
    parameters: []
  overload: System.Web.ModelBinding.ModelBinderDictionary.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ModelBinding.ModelBinderDictionary.Add(System.Collections.Generic.KeyValuePair{System.Type,System.Web.ModelBinding.IModelBinder})
  id: Add(System.Collections.Generic.KeyValuePair{System.Type,System.Web.ModelBinding.IModelBinder})
  parent: System.Web.ModelBinding.ModelBinderDictionary
  langs:
  - csharp
  name: Add(KeyValuePair<Type,IModelBinder>)
  nameWithType: ModelBinderDictionary.Add(KeyValuePair<Type,IModelBinder>)
  fullName: System.Web.ModelBinding.ModelBinderDictionary.Add(KeyValuePair<Type,IModelBinder>)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.ModelBinding
  summary: "Adiciona o item especificado para o dicionário."
  syntax:
    content: public void Add (System.Collections.Generic.KeyValuePair<Type,System.Web.ModelBinding.IModelBinder> item);
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{System.Type,System.Web.ModelBinding.IModelBinder}
      description: "O objeto a adicionar ao dicionário."
  overload: System.Web.ModelBinding.ModelBinderDictionary.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ModelBinding.ModelBinderDictionary.Add(System.Type,System.Web.ModelBinding.IModelBinder)
  id: Add(System.Type,System.Web.ModelBinding.IModelBinder)
  parent: System.Web.ModelBinding.ModelBinderDictionary
  langs:
  - csharp
  name: Add(Type,IModelBinder)
  nameWithType: ModelBinderDictionary.Add(Type,IModelBinder)
  fullName: System.Web.ModelBinding.ModelBinderDictionary.Add(Type,IModelBinder)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.ModelBinding
  summary: "Adiciona o item especificado para o dicionário."
  syntax:
    content: public void Add (Type key, System.Web.ModelBinding.IModelBinder value);
    parameters:
    - id: key
      type: System.Type
      description: "A chave do item para adicionar."
    - id: value
      type: System.Web.ModelBinding.IModelBinder
      description: "O valor do item para adicionar."
  overload: System.Web.ModelBinding.ModelBinderDictionary.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ModelBinding.ModelBinderDictionary.Clear
  id: Clear
  parent: System.Web.ModelBinding.ModelBinderDictionary
  langs:
  - csharp
  name: Clear()
  nameWithType: ModelBinderDictionary.Clear()
  fullName: System.Web.ModelBinding.ModelBinderDictionary.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.ModelBinding
  summary: "Remove todos os itens de dicionário."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.ModelBinding.ModelBinderDictionary.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ModelBinding.ModelBinderDictionary.Contains(System.Collections.Generic.KeyValuePair{System.Type,System.Web.ModelBinding.IModelBinder})
  id: Contains(System.Collections.Generic.KeyValuePair{System.Type,System.Web.ModelBinding.IModelBinder})
  parent: System.Web.ModelBinding.ModelBinderDictionary
  langs:
  - csharp
  name: Contains(KeyValuePair<Type,IModelBinder>)
  nameWithType: ModelBinderDictionary.Contains(KeyValuePair<Type,IModelBinder>)
  fullName: System.Web.ModelBinding.ModelBinderDictionary.Contains(KeyValuePair<Type,IModelBinder>)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.ModelBinding
  summary: "Determina se o dicionário de Gestor de enlaces de modelo contém um valor especificado."
  syntax:
    content: public bool Contains (System.Collections.Generic.KeyValuePair<Type,System.Web.ModelBinding.IModelBinder> item);
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{System.Type,System.Web.ModelBinding.IModelBinder}
      description: "O item para procurar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>item</code> is found; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.ModelBinding.ModelBinderDictionary.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ModelBinding.ModelBinderDictionary.ContainsKey(System.Type)
  id: ContainsKey(System.Type)
  parent: System.Web.ModelBinding.ModelBinderDictionary
  langs:
  - csharp
  name: ContainsKey(Type)
  nameWithType: ModelBinderDictionary.ContainsKey(Type)
  fullName: System.Web.ModelBinding.ModelBinderDictionary.ContainsKey(Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.ModelBinding
  summary: "Determina se o dicionário de Gestor de enlaces de modelo contém um elemento que tenha a chave especificada."
  syntax:
    content: public bool ContainsKey (Type key);
    parameters:
    - id: key
      type: System.Type
      description: "A chave para procurar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>key</code> is found; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.ModelBinding.ModelBinderDictionary.ContainsKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ModelBinding.ModelBinderDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.Type,System.Web.ModelBinding.IModelBinder}[],System.Int32)
  id: CopyTo(System.Collections.Generic.KeyValuePair{System.Type,System.Web.ModelBinding.IModelBinder}[],System.Int32)
  parent: System.Web.ModelBinding.ModelBinderDictionary
  langs:
  - csharp
  name: CopyTo(KeyValuePair<Type,IModelBinder>,Int32)
  nameWithType: ModelBinderDictionary.CopyTo(KeyValuePair<Type,IModelBinder>,Int32)
  fullName: System.Web.ModelBinding.ModelBinderDictionary.CopyTo(KeyValuePair<Type,IModelBinder>,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.ModelBinding
  summary: "Copia os elementos do dicionário de Gestor de enlaces de modelo para uma matriz, começando num índice especificado."
  syntax:
    content: public void CopyTo (System.Collections.Generic.KeyValuePair<Type,System.Web.ModelBinding.IModelBinder>[] array, int arrayIndex);
    parameters:
    - id: array
      type: System.Collections.Generic.KeyValuePair{System.Type,System.Web.ModelBinding.IModelBinder}[]
      description: "A matriz de destino. A matriz tem de ser unidimensional e ter a indexação com base em zero."
    - id: arrayIndex
      type: System.Int32
      description: "O índice baseado em zero `array` no qual a copiar é iniciado."
  overload: System.Web.ModelBinding.ModelBinderDictionary.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ModelBinding.ModelBinderDictionary.Count
  id: Count
  parent: System.Web.ModelBinding.ModelBinderDictionary
  langs:
  - csharp
  name: Count
  nameWithType: ModelBinderDictionary.Count
  fullName: System.Web.ModelBinding.ModelBinderDictionary.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.ModelBinding
  summary: "Obtém o número de itens num dicionário."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "O número de itens no dicionário."
  overload: System.Web.ModelBinding.ModelBinderDictionary.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ModelBinding.ModelBinderDictionary.DefaultBinder
  id: DefaultBinder
  parent: System.Web.ModelBinding.ModelBinderDictionary
  langs:
  - csharp
  name: DefaultBinder
  nameWithType: ModelBinderDictionary.DefaultBinder
  fullName: System.Web.ModelBinding.ModelBinderDictionary.DefaultBinder
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.ModelBinding
  summary: "Obtém ou define o Gestor de enlaces de modelo predefinido."
  syntax:
    content: public System.Web.ModelBinding.IModelBinder DefaultBinder { get; set; }
    return:
      type: System.Web.ModelBinding.IModelBinder
      description: "O Gestor de enlaces do modelo de predefinição."
  overload: System.Web.ModelBinding.ModelBinderDictionary.DefaultBinder*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ModelBinding.ModelBinderDictionary.GetEnumerator
  id: GetEnumerator
  parent: System.Web.ModelBinding.ModelBinderDictionary
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ModelBinderDictionary.GetEnumerator()
  fullName: System.Web.ModelBinding.ModelBinderDictionary.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.ModelBinding
  summary: "Devolve um enumerador que pode ser utilizado para iterar através da coleção."
  syntax:
    content: public System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<Type,System.Web.ModelBinding.IModelBinder>> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.Type,System.Web.ModelBinding.IModelBinder}}
      description: "Um enumerador que pode ser utilizado para iterar através da coleção."
  overload: System.Web.ModelBinding.ModelBinderDictionary.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ModelBinding.ModelBinderDictionary.IsReadOnly
  id: IsReadOnly
  parent: System.Web.ModelBinding.ModelBinderDictionary
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: ModelBinderDictionary.IsReadOnly
  fullName: System.Web.ModelBinding.ModelBinderDictionary.IsReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.ModelBinding
  summary: "Obtém um valor que indica se o dicionário é só de leitura."
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o dicionário é só de leitura; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.ModelBinding.ModelBinderDictionary.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ModelBinding.ModelBinderDictionary.Item(System.Type)
  id: Item(System.Type)
  parent: System.Web.ModelBinding.ModelBinderDictionary
  langs:
  - csharp
  name: Item(Type)
  nameWithType: ModelBinderDictionary.Item(Type)
  fullName: System.Web.ModelBinding.ModelBinderDictionary.Item(Type)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.ModelBinding
  summary: "Obtém ou define o nome da chave num objeto que implementa o <xref href=&quot;System.Web.ModelBinding.IModelBinder&quot;> </xref> interface."
  syntax:
    content: public System.Web.ModelBinding.IModelBinder this[Type key] { get; set; }
    parameters:
    - id: key
      type: System.Type
      description: "A chave do item."
    return:
      type: System.Web.ModelBinding.IModelBinder
      description: "O elemento que tenha a chave especificada."
  overload: System.Web.ModelBinding.ModelBinderDictionary.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ModelBinding.ModelBinderDictionary.Keys
  id: Keys
  parent: System.Web.ModelBinding.ModelBinderDictionary
  langs:
  - csharp
  name: Keys
  nameWithType: ModelBinderDictionary.Keys
  fullName: System.Web.ModelBinding.ModelBinderDictionary.Keys
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.ModelBinding
  summary: "Obtém uma coleção que contenha as chaves no dicionário."
  syntax:
    content: public System.Collections.Generic.ICollection<Type> Keys { get; }
    return:
      type: System.Collections.Generic.ICollection{System.Type}
      description: "Uma coleção que contém as chaves no dicionário."
  overload: System.Web.ModelBinding.ModelBinderDictionary.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ModelBinding.ModelBinderDictionary.Remove(System.Collections.Generic.KeyValuePair{System.Type,System.Web.ModelBinding.IModelBinder})
  id: Remove(System.Collections.Generic.KeyValuePair{System.Type,System.Web.ModelBinding.IModelBinder})
  parent: System.Web.ModelBinding.ModelBinderDictionary
  langs:
  - csharp
  name: Remove(KeyValuePair<Type,IModelBinder>)
  nameWithType: ModelBinderDictionary.Remove(KeyValuePair<Type,IModelBinder>)
  fullName: System.Web.ModelBinding.ModelBinderDictionary.Remove(KeyValuePair<Type,IModelBinder>)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.ModelBinding
  summary: "Remove a primeira ocorrência de elemento especificado do dicionário de Gestor de enlaces de modelo."
  syntax:
    content: public bool Remove (System.Collections.Generic.KeyValuePair<Type,System.Web.ModelBinding.IModelBinder> item);
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{System.Type,System.Web.ModelBinding.IModelBinder}
      description: "O item a remover."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <code> item </code> foi removido com êxito de dicionário; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se <code> item </code> não foi removida ou não foi encontrado no dicionário."
  overload: System.Web.ModelBinding.ModelBinderDictionary.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ModelBinding.ModelBinderDictionary.Remove(System.Type)
  id: Remove(System.Type)
  parent: System.Web.ModelBinding.ModelBinderDictionary
  langs:
  - csharp
  name: Remove(Type)
  nameWithType: ModelBinderDictionary.Remove(Type)
  fullName: System.Web.ModelBinding.ModelBinderDictionary.Remove(Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.ModelBinding
  summary: "Remove o elemento com o nome da chave do dicionário de Gestor de enlaces de modelo."
  syntax:
    content: public bool Remove (Type key);
    parameters:
    - id: key
      type: System.Type
      description: "A chave do item a remover."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o elemento foi removido com êxito; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se <code> key </code> foi nota removida ou não foi encontrada no dicionário."
  overload: System.Web.ModelBinding.ModelBinderDictionary.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ModelBinding.ModelBinderDictionary.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Web.ModelBinding.ModelBinderDictionary
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ModelBinderDictionary.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Web.ModelBinding.ModelBinderDictionary.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.ModelBinding
  summary: "Devolve um enumerador que pode ser utilizado para iterar através de uma coleção."
  remarks: "Este membro é uma implementação de membro de interface explícita. Pode ser utilizado apenas quando o <xref:System.Web.ModelBinding.ModelBinderDictionary>instância é convertida para um <xref:System.Collections.IEnumerable>interface.</xref:System.Collections.IEnumerable> </xref:System.Web.ModelBinding.ModelBinderDictionary>"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Um enumerador que pode ser utilizado para iterar através da coleção."
  overload: System.Web.ModelBinding.ModelBinderDictionary.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ModelBinding.ModelBinderDictionary.TryGetValue(System.Type,System.Web.ModelBinding.IModelBinder@)
  id: TryGetValue(System.Type,System.Web.ModelBinding.IModelBinder@)
  parent: System.Web.ModelBinding.ModelBinderDictionary
  langs:
  - csharp
  name: TryGetValue(Type,IModelBinder)
  nameWithType: ModelBinderDictionary.TryGetValue(Type,IModelBinder)
  fullName: System.Web.ModelBinding.ModelBinderDictionary.TryGetValue(Type,IModelBinder)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.ModelBinding
  summary: "Obtém o valor que estão associado com o nome da chave."
  syntax:
    content: public bool TryGetValue (Type key, out System.Web.ModelBinding.IModelBinder value);
    parameters:
    - id: key
      type: System.Type
      description: "A chave do valor a obter."
    - id: value
      type: System.Web.ModelBinding.IModelBinder
      description: "Quando este método devolve, o valor que está associado a chave especificada, se a chave for localizada; caso contrário, o valor predefinido para o tipo do `value` parâmetro. Este parâmetro é transmitido não inicializado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o dicionário contém um elemento que tenha a chave especificada; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.ModelBinding.ModelBinderDictionary.TryGetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ModelBinding.ModelBinderDictionary.Values
  id: Values
  parent: System.Web.ModelBinding.ModelBinderDictionary
  langs:
  - csharp
  name: Values
  nameWithType: ModelBinderDictionary.Values
  fullName: System.Web.ModelBinding.ModelBinderDictionary.Values
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.ModelBinding
  summary: "Obtém uma coleção que contém os valores no dicionário de Gestor de enlaces de modelo."
  syntax:
    content: public System.Collections.Generic.ICollection<System.Web.ModelBinding.IModelBinder> Values { get; }
    return:
      type: System.Collections.Generic.ICollection{System.Web.ModelBinding.IModelBinder}
      description: "Uma coleção que contém os valores no dicionário de Gestor de enlaces de modelo."
  overload: System.Web.ModelBinding.ModelBinderDictionary.Values*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.ModelBinding.ModelBinderDictionary.#ctor
  parent: System.Web.ModelBinding.ModelBinderDictionary
  isExternal: false
  name: ModelBinderDictionary()
  nameWithType: ModelBinderDictionary.ModelBinderDictionary()
  fullName: System.Web.ModelBinding.ModelBinderDictionary.ModelBinderDictionary()
- uid: System.Web.ModelBinding.ModelBinderDictionary.Add(System.Collections.Generic.KeyValuePair{System.Type,System.Web.ModelBinding.IModelBinder})
  parent: System.Web.ModelBinding.ModelBinderDictionary
  isExternal: false
  name: Add(KeyValuePair<Type,IModelBinder>)
  nameWithType: ModelBinderDictionary.Add(KeyValuePair<Type,IModelBinder>)
  fullName: System.Web.ModelBinding.ModelBinderDictionary.Add(KeyValuePair<Type,IModelBinder>)
- uid: System.Collections.Generic.KeyValuePair{System.Type,System.Web.ModelBinding.IModelBinder}
  parent: System.Collections.Generic
  isExternal: true
  name: KeyValuePair<Type,IModelBinder>
  nameWithType: KeyValuePair<Type,IModelBinder>
  fullName: System.Collections.Generic.KeyValuePair<System.Type,System.Web.ModelBinding.IModelBinder>
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.Type,System.Web.ModelBinding.IModelBinder>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Web.ModelBinding.IModelBinder
    name: IModelBinder
    nameWithType: IModelBinder
    fullName: IModelBinder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.ModelBinding.ModelBinderDictionary.Add(System.Type,System.Web.ModelBinding.IModelBinder)
  parent: System.Web.ModelBinding.ModelBinderDictionary
  isExternal: false
  name: Add(Type,IModelBinder)
  nameWithType: ModelBinderDictionary.Add(Type,IModelBinder)
  fullName: System.Web.ModelBinding.ModelBinderDictionary.Add(Type,IModelBinder)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.ModelBinding.IModelBinder
  parent: System.Web.ModelBinding
  isExternal: false
  name: IModelBinder
  nameWithType: IModelBinder
  fullName: System.Web.ModelBinding.IModelBinder
- uid: System.Web.ModelBinding.ModelBinderDictionary.Clear
  parent: System.Web.ModelBinding.ModelBinderDictionary
  isExternal: false
  name: Clear()
  nameWithType: ModelBinderDictionary.Clear()
  fullName: System.Web.ModelBinding.ModelBinderDictionary.Clear()
- uid: System.Web.ModelBinding.ModelBinderDictionary.Contains(System.Collections.Generic.KeyValuePair{System.Type,System.Web.ModelBinding.IModelBinder})
  parent: System.Web.ModelBinding.ModelBinderDictionary
  isExternal: false
  name: Contains(KeyValuePair<Type,IModelBinder>)
  nameWithType: ModelBinderDictionary.Contains(KeyValuePair<Type,IModelBinder>)
  fullName: System.Web.ModelBinding.ModelBinderDictionary.Contains(KeyValuePair<Type,IModelBinder>)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.ModelBinding.ModelBinderDictionary.ContainsKey(System.Type)
  parent: System.Web.ModelBinding.ModelBinderDictionary
  isExternal: false
  name: ContainsKey(Type)
  nameWithType: ModelBinderDictionary.ContainsKey(Type)
  fullName: System.Web.ModelBinding.ModelBinderDictionary.ContainsKey(Type)
- uid: System.Web.ModelBinding.ModelBinderDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.Type,System.Web.ModelBinding.IModelBinder}[],System.Int32)
  parent: System.Web.ModelBinding.ModelBinderDictionary
  isExternal: false
  name: CopyTo(KeyValuePair<Type,IModelBinder>,Int32)
  nameWithType: ModelBinderDictionary.CopyTo(KeyValuePair<Type,IModelBinder>,Int32)
  fullName: System.Web.ModelBinding.ModelBinderDictionary.CopyTo(KeyValuePair<Type,IModelBinder>,Int32)
- uid: System.Collections.Generic.KeyValuePair{System.Type,System.Web.ModelBinding.IModelBinder}[]
  parent: System.Collections.Generic
  isExternal: true
  name: KeyValuePair<Type,IModelBinder>
  nameWithType: KeyValuePair<Type,IModelBinder>
  fullName: System.Collections.Generic.KeyValuePair<System.Type,System.Web.ModelBinding.IModelBinder>[]
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.Type,System.Web.ModelBinding.IModelBinder>[]
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Web.ModelBinding.IModelBinder
    name: IModelBinder
    nameWithType: IModelBinder
    fullName: IModelBinder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.ModelBinding.ModelBinderDictionary.Count
  parent: System.Web.ModelBinding.ModelBinderDictionary
  isExternal: false
  name: Count
  nameWithType: ModelBinderDictionary.Count
  fullName: System.Web.ModelBinding.ModelBinderDictionary.Count
- uid: System.Web.ModelBinding.ModelBinderDictionary.DefaultBinder
  parent: System.Web.ModelBinding.ModelBinderDictionary
  isExternal: false
  name: DefaultBinder
  nameWithType: ModelBinderDictionary.DefaultBinder
  fullName: System.Web.ModelBinding.ModelBinderDictionary.DefaultBinder
- uid: System.Web.ModelBinding.ModelBinderDictionary.GetEnumerator
  parent: System.Web.ModelBinding.ModelBinderDictionary
  isExternal: false
  name: GetEnumerator()
  nameWithType: ModelBinderDictionary.GetEnumerator()
  fullName: System.Web.ModelBinding.ModelBinderDictionary.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.Type,System.Web.ModelBinding.IModelBinder}}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<KeyValuePair<Type,IModelBinder>>
  nameWithType: IEnumerator<KeyValuePair<Type,IModelBinder>>
  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.Type,System.Web.ModelBinding.IModelBinder>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.Collections.Generic.KeyValuePair<System.Type,System.Web.ModelBinding.IModelBinder>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.Type,System.Web.ModelBinding.IModelBinder>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Web.ModelBinding.IModelBinder
    name: IModelBinder
    nameWithType: IModelBinder
    fullName: IModelBinder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.ModelBinding.ModelBinderDictionary.IsReadOnly
  parent: System.Web.ModelBinding.ModelBinderDictionary
  isExternal: false
  name: IsReadOnly
  nameWithType: ModelBinderDictionary.IsReadOnly
  fullName: System.Web.ModelBinding.ModelBinderDictionary.IsReadOnly
- uid: System.Web.ModelBinding.ModelBinderDictionary.Item(System.Type)
  parent: System.Web.ModelBinding.ModelBinderDictionary
  isExternal: false
  name: Item(Type)
  nameWithType: ModelBinderDictionary.Item(Type)
  fullName: System.Web.ModelBinding.ModelBinderDictionary.Item(Type)
- uid: System.Web.ModelBinding.ModelBinderDictionary.Keys
  parent: System.Web.ModelBinding.ModelBinderDictionary
  isExternal: false
  name: Keys
  nameWithType: ModelBinderDictionary.Keys
  fullName: System.Web.ModelBinding.ModelBinderDictionary.Keys
- uid: System.Collections.Generic.ICollection{System.Type}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<Type>
  nameWithType: ICollection<Type>
  fullName: System.Collections.Generic.ICollection<System.Type>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.Type>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.ModelBinding.ModelBinderDictionary.Remove(System.Collections.Generic.KeyValuePair{System.Type,System.Web.ModelBinding.IModelBinder})
  parent: System.Web.ModelBinding.ModelBinderDictionary
  isExternal: false
  name: Remove(KeyValuePair<Type,IModelBinder>)
  nameWithType: ModelBinderDictionary.Remove(KeyValuePair<Type,IModelBinder>)
  fullName: System.Web.ModelBinding.ModelBinderDictionary.Remove(KeyValuePair<Type,IModelBinder>)
- uid: System.Web.ModelBinding.ModelBinderDictionary.Remove(System.Type)
  parent: System.Web.ModelBinding.ModelBinderDictionary
  isExternal: false
  name: Remove(Type)
  nameWithType: ModelBinderDictionary.Remove(Type)
  fullName: System.Web.ModelBinding.ModelBinderDictionary.Remove(Type)
- uid: System.Web.ModelBinding.ModelBinderDictionary.System#Collections#IEnumerable#GetEnumerator
  parent: System.Web.ModelBinding.ModelBinderDictionary
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ModelBinderDictionary.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Web.ModelBinding.ModelBinderDictionary.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.ModelBinding.ModelBinderDictionary.TryGetValue(System.Type,System.Web.ModelBinding.IModelBinder@)
  parent: System.Web.ModelBinding.ModelBinderDictionary
  isExternal: false
  name: TryGetValue(Type,IModelBinder)
  nameWithType: ModelBinderDictionary.TryGetValue(Type,IModelBinder)
  fullName: System.Web.ModelBinding.ModelBinderDictionary.TryGetValue(Type,IModelBinder)
- uid: System.Web.ModelBinding.ModelBinderDictionary.Values
  parent: System.Web.ModelBinding.ModelBinderDictionary
  isExternal: false
  name: Values
  nameWithType: ModelBinderDictionary.Values
  fullName: System.Web.ModelBinding.ModelBinderDictionary.Values
- uid: System.Collections.Generic.ICollection{System.Web.ModelBinding.IModelBinder}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<IModelBinder>
  nameWithType: ICollection<IModelBinder>
  fullName: System.Collections.Generic.ICollection<System.Web.ModelBinding.IModelBinder>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.Web.ModelBinding.IModelBinder>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.ModelBinding.IModelBinder
    name: IModelBinder
    nameWithType: IModelBinder
    fullName: IModelBinder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.ModelBinding.ModelBinderDictionary.#ctor*
  parent: System.Web.ModelBinding.ModelBinderDictionary
  isExternal: false
  name: ModelBinderDictionary
  nameWithType: ModelBinderDictionary.ModelBinderDictionary
- uid: System.Web.ModelBinding.ModelBinderDictionary.Add*
  parent: System.Web.ModelBinding.ModelBinderDictionary
  isExternal: false
  name: Add
  nameWithType: ModelBinderDictionary.Add
- uid: System.Web.ModelBinding.ModelBinderDictionary.Clear*
  parent: System.Web.ModelBinding.ModelBinderDictionary
  isExternal: false
  name: Clear
  nameWithType: ModelBinderDictionary.Clear
- uid: System.Web.ModelBinding.ModelBinderDictionary.Contains*
  parent: System.Web.ModelBinding.ModelBinderDictionary
  isExternal: false
  name: Contains
  nameWithType: ModelBinderDictionary.Contains
- uid: System.Web.ModelBinding.ModelBinderDictionary.ContainsKey*
  parent: System.Web.ModelBinding.ModelBinderDictionary
  isExternal: false
  name: ContainsKey
  nameWithType: ModelBinderDictionary.ContainsKey
- uid: System.Web.ModelBinding.ModelBinderDictionary.CopyTo*
  parent: System.Web.ModelBinding.ModelBinderDictionary
  isExternal: false
  name: CopyTo
  nameWithType: ModelBinderDictionary.CopyTo
- uid: System.Web.ModelBinding.ModelBinderDictionary.Count*
  parent: System.Web.ModelBinding.ModelBinderDictionary
  isExternal: false
  name: Count
  nameWithType: ModelBinderDictionary.Count
- uid: System.Web.ModelBinding.ModelBinderDictionary.DefaultBinder*
  parent: System.Web.ModelBinding.ModelBinderDictionary
  isExternal: false
  name: DefaultBinder
  nameWithType: ModelBinderDictionary.DefaultBinder
- uid: System.Web.ModelBinding.ModelBinderDictionary.GetEnumerator*
  parent: System.Web.ModelBinding.ModelBinderDictionary
  isExternal: false
  name: GetEnumerator
  nameWithType: ModelBinderDictionary.GetEnumerator
- uid: System.Web.ModelBinding.ModelBinderDictionary.IsReadOnly*
  parent: System.Web.ModelBinding.ModelBinderDictionary
  isExternal: false
  name: IsReadOnly
  nameWithType: ModelBinderDictionary.IsReadOnly
- uid: System.Web.ModelBinding.ModelBinderDictionary.Item*
  parent: System.Web.ModelBinding.ModelBinderDictionary
  isExternal: false
  name: Item
  nameWithType: ModelBinderDictionary.Item
- uid: System.Web.ModelBinding.ModelBinderDictionary.Keys*
  parent: System.Web.ModelBinding.ModelBinderDictionary
  isExternal: false
  name: Keys
  nameWithType: ModelBinderDictionary.Keys
- uid: System.Web.ModelBinding.ModelBinderDictionary.Remove*
  parent: System.Web.ModelBinding.ModelBinderDictionary
  isExternal: false
  name: Remove
  nameWithType: ModelBinderDictionary.Remove
- uid: System.Web.ModelBinding.ModelBinderDictionary.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Web.ModelBinding.ModelBinderDictionary
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ModelBinderDictionary.System.Collections.IEnumerable.GetEnumerator
- uid: System.Web.ModelBinding.ModelBinderDictionary.TryGetValue*
  parent: System.Web.ModelBinding.ModelBinderDictionary
  isExternal: false
  name: TryGetValue
  nameWithType: ModelBinderDictionary.TryGetValue
- uid: System.Web.ModelBinding.ModelBinderDictionary.Values*
  parent: System.Web.ModelBinding.ModelBinderDictionary
  isExternal: false
  name: Values
  nameWithType: ModelBinderDictionary.Values
