### YamlMime:ManagedReference
items:
- uid: Microsoft.Win32.SafeHandles.SafeRegistryHandle
  id: SafeRegistryHandle
  children:
  - Microsoft.Win32.SafeHandles.SafeRegistryHandle.#ctor(System.IntPtr,System.Boolean)
  - Microsoft.Win32.SafeHandles.SafeRegistryHandle.ReleaseHandle
  langs:
  - csharp
  name: SafeRegistryHandle
  nameWithType: SafeRegistryHandle
  fullName: Microsoft.Win32.SafeHandles.SafeRegistryHandle
  type: Class
  summary: "Representa um identificador de segurança do registo do Windows."
  remarks: "Pode utilizar plataforma invocar no nativo `RegCreateKeyEx` Windows funcionar para obter um objeto de SafeRegistryHandle e, em seguida, utilizá-la para criar chaves de registo com o <xref:Microsoft.Win32.RegistryKey.FromHandle%2A?displayProperty=fullName>método.</xref:Microsoft.Win32.RegistryKey.FromHandle%2A?displayProperty=fullName>      > [!IMPORTANT] > Este tipo implementa o <xref:System.IDisposable>interface.</xref:System.IDisposable> Quando tiver terminado com o tipo, deve eliminar-direta ou indiretamente. Para eliminar diretamente do tipo, chame o <xref:System.IDisposable.Dispose%2A>método um `try` / `catch` bloco.</xref:System.IDisposable.Dispose%2A> Para eliminar indiretamente dele, utilize uma construção de idioma, tais como `using` (em c#) ou `Using` (em Visual Basic). Para obter mais informações, consulte a secção &quot;Utilizar um objeto que implementa IDisposable&quot; o <xref:System.IDisposable>tópico de interface.</xref:System.IDisposable>"
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public sealed class SafeRegistryHandle : Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
  inheritance:
  - System.Runtime.InteropServices.SafeHandle
  - Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
  implements: []
  inheritedMembers:
  - Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid
  platform:
  - net462
- uid: Microsoft.Win32.SafeHandles.SafeRegistryHandle.#ctor(System.IntPtr,System.Boolean)
  id: '#ctor(System.IntPtr,System.Boolean)'
  parent: Microsoft.Win32.SafeHandles.SafeRegistryHandle
  langs:
  - csharp
  name: SafeRegistryHandle(IntPtr,Boolean)
  nameWithType: SafeRegistryHandle.SafeRegistryHandle(IntPtr,Boolean)
  fullName: Microsoft.Win32.SafeHandles.SafeRegistryHandle.SafeRegistryHandle(IntPtr,Boolean)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32.SafeHandles
  summary: "Inicializa uma nova instância do <xref href=&quot;Microsoft.Win32.SafeHandles.SafeRegistryHandle&quot;> </xref> classe."
  remarks: "Especificar `false` para `ownsHandle` não é recomendada."
  syntax:
    content: public SafeRegistryHandle (IntPtr preexistingHandle, bool ownsHandle);
    parameters:
    - id: preexistingHandle
      type: System.IntPtr
      description: "Um objeto que representa o identificador pré-existente para utilizar."
    - id: ownsHandle
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para o identificador da versão fiável durante a fase de finalização; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para impedir a versão fiável."
  overload: Microsoft.Win32.SafeHandles.SafeRegistryHandle.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.SafeHandles.SafeRegistryHandle.ReleaseHandle
  id: ReleaseHandle
  parent: Microsoft.Win32.SafeHandles.SafeRegistryHandle
  langs:
  - csharp
  name: ReleaseHandle()
  nameWithType: SafeRegistryHandle.ReleaseHandle()
  fullName: Microsoft.Win32.SafeHandles.SafeRegistryHandle.ReleaseHandle()
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32.SafeHandles
  syntax:
    content: protected override bool ReleaseHandle ();
    parameters: []
    return:
      type: System.Boolean
      description: "A adicionar."
  overload: Microsoft.Win32.SafeHandles.SafeRegistryHandle.ReleaseHandle*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
  isExternal: false
  name: Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
- uid: Microsoft.Win32.SafeHandles.SafeRegistryHandle.#ctor(System.IntPtr,System.Boolean)
  parent: Microsoft.Win32.SafeHandles.SafeRegistryHandle
  isExternal: false
  name: SafeRegistryHandle(IntPtr,Boolean)
  nameWithType: SafeRegistryHandle.SafeRegistryHandle(IntPtr,Boolean)
  fullName: Microsoft.Win32.SafeHandles.SafeRegistryHandle.SafeRegistryHandle(IntPtr,Boolean)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Win32.SafeHandles.SafeRegistryHandle.ReleaseHandle
  parent: Microsoft.Win32.SafeHandles.SafeRegistryHandle
  isExternal: false
  name: ReleaseHandle()
  nameWithType: SafeRegistryHandle.ReleaseHandle()
  fullName: Microsoft.Win32.SafeHandles.SafeRegistryHandle.ReleaseHandle()
- uid: Microsoft.Win32.SafeHandles.SafeRegistryHandle.#ctor*
  parent: Microsoft.Win32.SafeHandles.SafeRegistryHandle
  isExternal: false
  name: SafeRegistryHandle
  nameWithType: SafeRegistryHandle.SafeRegistryHandle
- uid: Microsoft.Win32.SafeHandles.SafeRegistryHandle.ReleaseHandle*
  parent: Microsoft.Win32.SafeHandles.SafeRegistryHandle
  isExternal: false
  name: ReleaseHandle
  nameWithType: SafeRegistryHandle.ReleaseHandle
