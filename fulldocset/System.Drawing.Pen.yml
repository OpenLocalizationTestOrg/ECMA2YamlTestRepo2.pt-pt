### YamlMime:ManagedReference
items:
- uid: System.Drawing.Pen
  id: Pen
  children:
  - System.Drawing.Pen.#ctor(System.Drawing.Brush)
  - System.Drawing.Pen.#ctor(System.Drawing.Color)
  - System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)
  - System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)
  - System.Drawing.Pen.Alignment
  - System.Drawing.Pen.Brush
  - System.Drawing.Pen.Clone
  - System.Drawing.Pen.Color
  - System.Drawing.Pen.CompoundArray
  - System.Drawing.Pen.CustomEndCap
  - System.Drawing.Pen.CustomStartCap
  - System.Drawing.Pen.DashCap
  - System.Drawing.Pen.DashOffset
  - System.Drawing.Pen.DashPattern
  - System.Drawing.Pen.DashStyle
  - System.Drawing.Pen.Dispose
  - System.Drawing.Pen.EndCap
  - System.Drawing.Pen.Finalize
  - System.Drawing.Pen.LineJoin
  - System.Drawing.Pen.MiterLimit
  - System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  - System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Pen.PenType
  - System.Drawing.Pen.ResetTransform
  - System.Drawing.Pen.RotateTransform(System.Single)
  - System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Pen.ScaleTransform(System.Single,System.Single)
  - System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)
  - System.Drawing.Pen.StartCap
  - System.Drawing.Pen.Transform
  - System.Drawing.Pen.TranslateTransform(System.Single,System.Single)
  - System.Drawing.Pen.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Pen.Width
  langs:
  - csharp
  name: Pen
  nameWithType: Pen
  fullName: System.Drawing.Pen
  type: Class
  summary: "Define um objecto utilizado para desenhar linhas e curvas. Esta classe não pode ser herdada."
  remarks: "Uma caneta desenha uma linha da largura especificada e estilo. Utilize o <xref:System.Drawing.Drawing2D.DashStyle>propriedade para desenhar varieties várias das linhas tracejadas.</xref:System.Drawing.Drawing2D.DashStyle> A linha desenhada por uma caneta pode ser preenchida uma variedade de estilos de preenchimento, incluindo cores sólidas e textures. O estilo de preenchimento depende de pincel ou texture que é utilizado como o objeto de preenchimento."
  example:
  - "The following code example demonstrates constructing a Pen with a <xref:System.Drawing.Pen.Brush%2A> and the effects of setting the <xref:System.Drawing.Pen.LineJoin%2A> property on a Pen.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowLineJoin` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.PensExample#1](~/add/codesnippet/csharp/t-system.drawing.pen_1.cs)]\n [!code-vb[System.Drawing.PensExample#1](~/add/codesnippet/visualbasic/t-system.drawing.pen_1.vb)]\n [!code-cpp[System.Drawing.PensExample#1](~/add/codesnippet/cpp/t-system.drawing.pen_1.cpp)]"
  syntax:
    content: 'public sealed class Pen : MarshalByRefObject, ICloneable, IDisposable'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.ICloneable
  - System.IDisposable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Drawing.Pen.#ctor(System.Drawing.Brush)
  id: '#ctor(System.Drawing.Brush)'
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Pen(Brush)
  nameWithType: Pen.Pen(Brush)
  fullName: System.Drawing.Pen.Pen(Brush)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Pen&quot;> </xref> classe com especificado <xref href=&quot;System.Drawing.Brush&quot;> </xref>."
  remarks: "O <xref:System.Drawing.Pen.Brush%2A>propriedade determina como o <xref:System.Drawing.Pen>desenha linhas.</xref:System.Drawing.Pen> </xref:System.Drawing.Pen.Brush%2A> As linhas são desenhadas como se retângulos manchas, com as características de <xref:System.Drawing.Brush>.</xref:System.Drawing.Brush> especificado       O <xref:System.Drawing.Pen.Width%2A>propriedade da nova <xref:System.Drawing.Pen>está definida como 1 (predefinição).</xref:System.Drawing.Pen> </xref:System.Drawing.Pen.Width%2A>"
  example:
  - "The following code example demonstrates constructing a <xref:System.Drawing.Pen> with a <xref:System.Drawing.Pen.Brush%2A> and the effects of setting the <xref:System.Drawing.Pen.LineJoin%2A> property on a <xref:System.Drawing.Pen>.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowLineJoin` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.PensExample#1](~/add/codesnippet/csharp/m-system.drawing.pen.sha_2_1.cs)]\n [!code-vb[System.Drawing.PensExample#1](~/add/codesnippet/visualbasic/m-system.drawing.pen.sha_2_1.vb)]\n [!code-cpp[System.Drawing.PensExample#1](~/add/codesnippet/cpp/m-system.drawing.pen.sha_2_1.cpp)]"
  syntax:
    content: public Pen (System.Drawing.Brush brush);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "A <xref href=&quot;System.Drawing.Brush&quot;> </xref> que determina as propriedades de preenchimento deste <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  overload: System.Drawing.Pen.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Pen.#ctor(System.Drawing.Color)
  id: '#ctor(System.Drawing.Color)'
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Pen(Color)
  nameWithType: Pen.Pen(Color)
  fullName: System.Drawing.Pen.Pen(Color)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Pen&quot;> </xref> classe com a cor especificada."
  remarks: "O <xref:System.Drawing.Color>propriedade está definida para a cor especificada pelo `color` parâmetro.</xref:System.Drawing.Color> O <xref:System.Drawing.Pen.Width%2A>propriedade está definida como 1 (predefinição).</xref:System.Drawing.Pen.Width%2A>"
  syntax:
    content: public Pen (System.Drawing.Color color);
    parameters:
    - id: color
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref> estrutura que indica a cor disto <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  overload: System.Drawing.Pen.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)
  id: '#ctor(System.Drawing.Brush,System.Single)'
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Pen(Brush,Single)
  nameWithType: Pen.Pen(Brush,Single)
  fullName: System.Drawing.Pen.Pen(Brush,Single)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Pen&quot;> </xref> classe com especificado <xref href=&quot;System.Drawing.Brush&quot;> </xref> e <xref:System.Drawing.Pen.Width*>.</xref:System.Drawing.Pen.Width*>"
  remarks: "O <xref:System.Drawing.Brush>está definido para a cor especificados no `brush` parâmetro, a <xref:System.Drawing.Pen.Width%2A>propriedade está definida como o valor especificado no `width` parâmetro e as unidades estão definidas como <xref:System.Drawing.GraphicsUnit>.</xref:System.Drawing.GraphicsUnit> </xref:System.Drawing.Pen.Width%2A> </xref:System.Drawing.Brush>       Tenha em atenção que o `brush` parâmetro especifica também a <xref:System.Drawing.Color>propriedade de <xref:System.Drawing.Pen>.</xref:System.Drawing.Pen> </xref:System.Drawing.Color>       A `width` 0 resultará no <xref:System.Drawing.Pen>desenho como se a largura foram 1.</xref:System.Drawing.Pen>"
  example:
  - "The following code example creates a <xref:System.Drawing.Pen> and demonstrates the effects of setting the <xref:System.Drawing.Pen.StartCap%2A> and <xref:System.Drawing.Pen.EndCap%2A> properties on a <xref:System.Drawing.Pen>.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowStartAndEndCaps` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.ImageExample#3](~/add/codesnippet/csharp/m-system.drawing.pen.sha_0_1.cs)]\n [!code-cpp[System.Drawing.ImageExample#3](~/add/codesnippet/cpp/m-system.drawing.pen.sha_0_1.cpp)]\n [!code-vb[System.Drawing.ImageExample#3](~/add/codesnippet/visualbasic/m-system.drawing.pen.sha_0_1.vb)]"
  syntax:
    content: public Pen (System.Drawing.Brush brush, float width);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "A <xref href=&quot;System.Drawing.Brush&quot;> </xref> que determina as características deste <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
    - id: width
      type: System.Single
      description: "A largura do novo <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  overload: System.Drawing.Pen.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)
  id: '#ctor(System.Drawing.Color,System.Single)'
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Pen(Color,Single)
  nameWithType: Pen.Pen(Color,Single)
  fullName: System.Drawing.Pen.Pen(Color,Single)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Pen&quot;> </xref> classe com especificado <xref href=&quot;System.Drawing.Color&quot;> </xref> e <xref:System.Drawing.Pen.Width*>Propriedades.</xref:System.Drawing.Pen.Width*>"
  remarks: "O <xref:System.Drawing.Color>propriedade está definida para a cor especificada pelo `color` parâmetro.</xref:System.Drawing.Color> O <xref:System.Drawing.Pen.Width%2A>propriedade está definida como o valor especificado no `width` parâmetro.</xref:System.Drawing.Pen.Width%2A> A `width` 0 resultará no <xref:System.Drawing.Pen>desenho como se a largura foram 1.</xref:System.Drawing.Pen>"
  example:
  - "The following code example demonstrates creating a <xref:System.Drawing.Pen> and the effects of setting the <xref:System.Drawing.Pen.DashCap%2A>, <xref:System.Drawing.Pen.DashPattern%2A>, and <xref:System.Drawing.Graphics.SmoothingMode%2A> properties.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowPensAndSmoothingMode` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing e as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.PensExample#3](~/add/codesnippet/csharp/m-system.drawing.pen.sha_1_1.cs)]\n [!code-vb[System.Drawing.PensExample#3](~/add/codesnippet/visualbasic/m-system.drawing.pen.sha_1_1.vb)]\n [!code-cpp[System.Drawing.PensExample#3](~/add/codesnippet/cpp/m-system.drawing.pen.sha_1_1.cpp)]"
  syntax:
    content: public Pen (System.Drawing.Color color, float width);
    parameters:
    - id: color
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref> estrutura que indica a cor disto <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
    - id: width
      type: System.Single
      description: "Um valor que indica a largura disto <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  overload: System.Drawing.Pen.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.Alignment
  id: Alignment
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Alignment
  nameWithType: Pen.Alignment
  fullName: System.Drawing.Pen.Alignment
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Obtém ou define o alinhamento para este <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  remarks: "Esta propriedade determina como o <xref:System.Drawing.Pen>desenha curvas fechadas e de polígonos.</xref:System.Drawing.Pen> O <xref:System.Drawing.Drawing2D.PenAlignment>enumeração Especifica cinco valores; no entanto, apenas dois valores —<xref:System.Drawing.Drawing2D.PenAlignment> e <xref:System.Drawing.Drawing2D.PenAlignment>— irá alterar o aspeto de uma linha desenhada.</xref:System.Drawing.Drawing2D.PenAlignment> </xref:System.Drawing.Drawing2D.PenAlignment> </xref:System.Drawing.Drawing2D.PenAlignment> <xref:System.Drawing.Drawing2D.PenAlignment>é o valor predefinido para esta propriedade e especifica que a largura da caneta centra-se no contorno da curva ou polígono.</xref:System.Drawing.Drawing2D.PenAlignment> Um valor de <xref:System.Drawing.Drawing2D.PenAlignment>para esta propriedade especifica que a largura da caneta dentro do contorno da curva ou polígono.</xref:System.Drawing.Drawing2D.PenAlignment> Outros três valores, <xref:System.Drawing.Drawing2D.PenAlignment>, <xref:System.Drawing.Drawing2D.PenAlignment>, e <xref:System.Drawing.Drawing2D.PenAlignment>, irá resultar numa caneta que centra-se.</xref:System.Drawing.Drawing2D.PenAlignment> </xref:System.Drawing.Drawing2D.PenAlignment> </xref:System.Drawing.Drawing2D.PenAlignment>       A <xref:System.Drawing.Pen>que tem o alinhamento definido como <xref:System.Drawing.Drawing2D.PenAlignment>irá produzir resultados pouco fiáveis, por vezes de desenho na posição inset e, por vezes, na posição centrada.</xref:System.Drawing.Drawing2D.PenAlignment> </xref:System.Drawing.Pen> Além disso, uma caneta inset não pode ser utilizada para desenhar linhas compostas e não pode desenhar tracejada com <xref:System.Drawing.Drawing2D.DashCap>caps. traço</xref:System.Drawing.Drawing2D.DashCap>"
  syntax:
    content: public System.Drawing.Drawing2D.PenAlignment Alignment { get; set; }
    return:
      type: System.Drawing.Drawing2D.PenAlignment
      description: "A <xref href=&quot;System.Drawing.Drawing2D.PenAlignment&quot;> </xref> que representa o alinhamento para este <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  overload: System.Drawing.Pen.Alignment*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "O valor especificado não é um membro de <xref href=&quot;System.Drawing.Drawing2D.PenAlignment&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Alinhamento definir a propriedade é um imutável <xref href=&quot;System.Drawing.Pen&quot;> </xref>, tais como devolvido pelo <xref href=&quot;System.Drawing.Pens&quot;> </xref> classe."
  platform:
  - net462
- uid: System.Drawing.Pen.Brush
  id: Brush
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Brush
  nameWithType: Pen.Brush
  fullName: System.Drawing.Pen.Brush
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Obtém ou define o <xref href=&quot;System.Drawing.Brush&quot;> </xref> que determina os atributos desta <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  remarks: "Atribuir esta propriedade faz com que a caneta desenhar linhas manchas e curvas. Substitui a <xref:System.Drawing.Color>propriedade de <xref:System.Drawing.Pen>.</xref:System.Drawing.Pen> </xref:System.Drawing.Color>"
  syntax:
    content: public System.Drawing.Brush Brush { get; set; }
    return:
      type: System.Drawing.Brush
      description: "A <xref href=&quot;System.Drawing.Brush&quot;> </xref> que determina os atributos desta <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  overload: System.Drawing.Pen.Brush*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A propriedade de pincel está definida num imutável <xref href=&quot;System.Drawing.Pen&quot;> </xref>, tais como devolvido pelo <xref href=&quot;System.Drawing.Pens&quot;> </xref> classe."
  platform:
  - net462
- uid: System.Drawing.Pen.Clone
  id: Clone
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Clone()
  nameWithType: Pen.Clone()
  fullName: System.Drawing.Pen.Clone()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Cria uma cópia exata <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Pen>.  \n  \n-   Creates a copy of that pen.  \n  \n-   Draws a line to the screen, using the copy of the pen.  \n  \n [!code-cpp[System.Drawing.ClassicPenExamples#1](~/add/codesnippet/cpp/m-system.drawing.pen.clone_1.cpp)]\n [!code-cs[System.Drawing.ClassicPenExamples#1](~/add/codesnippet/csharp/m-system.drawing.pen.clone_1.cs)]\n [!code-vb[System.Drawing.ClassicPenExamples#1](~/add/codesnippet/visualbasic/m-system.drawing.pen.clone_1.vb)]"
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Um <xref:System.Object>que pode ser convertido para um <xref href=&quot;System.Drawing.Pen&quot;> </xref>.</xref:System.Object>"
  overload: System.Drawing.Pen.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.Color
  id: Color
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Color
  nameWithType: Pen.Color
  fullName: System.Drawing.Pen.Color
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Obtém ou define a cor disto <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  syntax:
    content: public System.Drawing.Color Color { get; set; }
    return:
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref> estrutura que representa a cor deste <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  overload: System.Drawing.Pen.Color*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A propriedade de cor está definida num imutável <xref href=&quot;System.Drawing.Pen&quot;> </xref>, tais como devolvido pelo <xref href=&quot;System.Drawing.Pens&quot;> </xref> classe."
  platform:
  - net462
- uid: System.Drawing.Pen.CompoundArray
  id: CompoundArray
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: CompoundArray
  nameWithType: Pen.CompoundArray
  fullName: System.Drawing.Pen.CompoundArray
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Obtém ou define uma matriz de valores que especifica uma caneta composta. Uma caneta composta desenha uma linha composta constituída por linhas paralelas e espaços."
  remarks: "Uma linha composta é constituída por alternar linhas paralelas e espaços de larguras variadas. Os valores na matriz especificam os pontos de partida de cada componente da linha composta relativamente à largura de caneta. O primeiro valor na matriz especifica em que o primeiro componente (uma linha) começa como a fração da distância entre a largura de caneta. O segundo valor na matriz Especifica o início do componente seguinte (um espaço) como a fração da distância em toda a largura de caneta. O valor final na matriz Especifica onde termina o último componente.       Suponha que pretende uma caneta para desenhar dois paralelas onde a largura da primeira linha é 20 por cento da largura de caneta, a largura do espaço de que o separa duas linhas é 50 por cento da caneta &quot; s largura e a largura da segunda linha é 30 por cento da largura de caneta. Comece por criar um <xref:System.Drawing.Pen>e uma matriz de números de real.</xref:System.Drawing.Pen> Defina a matriz composta transferindo a matriz com os valores 0,0, 0,2, 0,7 e 1.0 para esta propriedade.       Não defina esta propriedade se <xref:System.Drawing.Pen>tem a respetiva <xref:System.Drawing.Pen.Alignment%2A>propriedade definida como <xref:System.Drawing.Drawing2D.PenAlignment>.</xref:System.Drawing.Drawing2D.PenAlignment> </xref:System.Drawing.Pen.Alignment%2A> </xref:System.Drawing.Pen>"
  syntax:
    content: public float[] CompoundArray { get; set; }
    return:
      type: System.Single[]
      description: "Uma matriz de números reais que especifica a matriz composta. Os elementos na matriz tem de ser aumentar a ordem, não inferior a 0 e não superior a 1."
  overload: System.Drawing.Pen.CompoundArray*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "CompoundArray definir a propriedade é um imutável <xref href=&quot;System.Drawing.Pen&quot;> </xref>, tais como devolvido pelo <xref href=&quot;System.Drawing.Pens&quot;> </xref> classe."
  platform:
  - net462
- uid: System.Drawing.Pen.CustomEndCap
  id: CustomEndCap
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: CustomEndCap
  nameWithType: Pen.CustomEndCap
  fullName: System.Drawing.Pen.CustomEndCap
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Obtém ou define um limite personalizado para utilizar no final de linhas desenhado com esta <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  syntax:
    content: public System.Drawing.Drawing2D.CustomLineCap CustomEndCap { get; set; }
    return:
      type: System.Drawing.Drawing2D.CustomLineCap
      description: "A <xref href=&quot;System.Drawing.Drawing2D.CustomLineCap&quot;> </xref> que representa a extremidade utilizada no final de linhas desenhado com esta <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  overload: System.Drawing.Pen.CustomEndCap*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "CustomEndCap definir a propriedade é um imutável <xref href=&quot;System.Drawing.Pen&quot;> </xref>, tais como devolvido pelo <xref href=&quot;System.Drawing.Pens&quot;> </xref> classe."
  platform:
  - net462
- uid: System.Drawing.Pen.CustomStartCap
  id: CustomStartCap
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: CustomStartCap
  nameWithType: Pen.CustomStartCap
  fullName: System.Drawing.Pen.CustomStartCap
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Obtém ou define um limite personalizado para utilizar o início do linhas desenhado com esta <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  syntax:
    content: public System.Drawing.Drawing2D.CustomLineCap CustomStartCap { get; set; }
    return:
      type: System.Drawing.Drawing2D.CustomLineCap
      description: "A <xref href=&quot;System.Drawing.Drawing2D.CustomLineCap&quot;> </xref> que representa a extremidade utilizada no início de linhas desenhado com esta <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  overload: System.Drawing.Pen.CustomStartCap*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "CustomStartCap definir a propriedade é um imutável <xref href=&quot;System.Drawing.Pen&quot;> </xref>, tais como devolvido pelo <xref href=&quot;System.Drawing.Pens&quot;> </xref> classe."
  platform:
  - net462
- uid: System.Drawing.Pen.DashCap
  id: DashCap
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: DashCap
  nameWithType: Pen.DashCap
  fullName: System.Drawing.Pen.DashCap
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Obtém ou define o estilo de extremidade utilizado no final dos traços que compõem linhas tracejadas desenhadas com esta <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  remarks: "Não definir esta propriedade como <xref:System.Drawing.Drawing2D.DashCap>se <xref:System.Drawing.Pen>tem a respetiva <xref:System.Drawing.Pen.Alignment%2A>propriedade definida como <xref:System.Drawing.Drawing2D.PenAlignment>.</xref:System.Drawing.Drawing2D.PenAlignment> </xref:System.Drawing.Pen.Alignment%2A> </xref:System.Drawing.Pen> </xref:System.Drawing.Drawing2D.DashCap>"
  example:
  - "The following code example demonstrates creating a <xref:System.Drawing.Pen> and the effects of setting the DashCap, <xref:System.Drawing.Pen.DashPattern%2A>, and <xref:System.Drawing.Graphics.SmoothingMode%2A> properties.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowPensAndSmoothingMode` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.PensExample#3](~/add/codesnippet/csharp/p-system.drawing.pen.das_0_1.cs)]\n [!code-vb[System.Drawing.PensExample#3](~/add/codesnippet/visualbasic/p-system.drawing.pen.das_0_1.vb)]\n [!code-cpp[System.Drawing.PensExample#3](~/add/codesnippet/cpp/p-system.drawing.pen.das_0_1.cpp)]"
  syntax:
    content: public System.Drawing.Drawing2D.DashCap DashCap { get; set; }
    return:
      type: System.Drawing.Drawing2D.DashCap
      description: "Um do <xref href=&quot;System.Drawing.Drawing2D.DashCap&quot;> </xref> valores que representa o estilo de extremidade utilizado no início e fim dos traços que compõem linhas tracejadas desenhadas com esta <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  overload: System.Drawing.Pen.DashCap*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "O valor especificado não é um membro de <xref href=&quot;System.Drawing.Drawing2D.DashCap&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "DashCap definir a propriedade é um imutável <xref href=&quot;System.Drawing.Pen&quot;> </xref>, tais como devolvido pelo <xref href=&quot;System.Drawing.Pens&quot;> </xref> classe."
  platform:
  - net462
- uid: System.Drawing.Pen.DashOffset
  id: DashOffset
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: DashOffset
  nameWithType: Pen.DashOffset
  fullName: System.Drawing.Pen.DashOffset
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Obtém ou define a distância desde o início de uma linha para o início de um padrão de travessão."
  syntax:
    content: public float DashOffset { get; set; }
    return:
      type: System.Single
      description: "A distância desde o início de uma linha para o início de um padrão de travessão."
  overload: System.Drawing.Pen.DashOffset*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "DashOffset definir a propriedade é um imutável <xref href=&quot;System.Drawing.Pen&quot;> </xref>, tais como devolvido pelo <xref href=&quot;System.Drawing.Pens&quot;> </xref> classe."
  platform:
  - net462
- uid: System.Drawing.Pen.DashPattern
  id: DashPattern
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: DashPattern
  nameWithType: Pen.DashPattern
  fullName: System.Drawing.Pen.DashPattern
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Obtém ou define uma matriz de traços personalizados e espaços."
  remarks: "Atribuir um valor diferente de `null` para esta propriedade definirá a <xref:System.Drawing.Drawing2D.DashStyle>propriedade para este <xref:System.Drawing.Pen>para <xref:System.Drawing.Drawing2D.DashStyle>.</xref:System.Drawing.Drawing2D.DashStyle> </xref:System.Drawing.Pen> </xref:System.Drawing.Drawing2D.DashStyle>       Os elementos de `dashArray` matriz definir o período de cada dash e espaço no padrão de travessão. O primeiro elemento define o comprimento de um traço, o segundo elemento define o comprimento de um espaço, o elemento terceiro define o comprimento de um traço e assim sucessivamente. Por conseguinte, cada elemento deve ser um número positivo diferente de zero.       O comprimento de cada travessão e espaço no padrão de dash é o produto do valor do elemento na matriz e a largura do <xref:System.Drawing.Pen>.</xref:System.Drawing.Pen>"
  example:
  - "The following code example demonstrates the effects of setting the <xref:System.Drawing.Pen.DashCap%2A>, DashPattern, and <xref:System.Drawing.Graphics.SmoothingMode%2A> properties.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowPensAndSmoothingMode` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.PensExample#3](~/add/codesnippet/csharp/p-system.drawing.pen.das_1_1.cs)]\n [!code-vb[System.Drawing.PensExample#3](~/add/codesnippet/visualbasic/p-system.drawing.pen.das_1_1.vb)]\n [!code-cpp[System.Drawing.PensExample#3](~/add/codesnippet/cpp/p-system.drawing.pen.das_1_1.cpp)]"
  syntax:
    content: public float[] DashPattern { get; set; }
    return:
      type: System.Single[]
      description: "Uma matriz de números de real que especifica os comprimentos das alternar espaços linhas tracejada e travessões."
  overload: System.Drawing.Pen.DashPattern*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "DashPattern definir a propriedade é um imutável <xref href=&quot;System.Drawing.Pen&quot;> </xref>, tais como devolvido pelo <xref href=&quot;System.Drawing.Pens&quot;> </xref> classe."
  platform:
  - net462
- uid: System.Drawing.Pen.DashStyle
  id: DashStyle
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: DashStyle
  nameWithType: Pen.DashStyle
  fullName: System.Drawing.Pen.DashStyle
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Obtém ou define o estilo utilizado para linhas tracejadas desenhadas com esta <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  remarks: "Um valor <xref:System.Drawing.Drawing2D.DashStyle>para esta propriedade especifica que um padrão personalizado de travessões e espaços, definido pela <xref:System.Drawing.Pen.DashPattern%2A>propriedade, compõe linhas desenhadas com este <xref:System.Drawing.Pen>.</xref:System.Drawing.Pen> </xref:System.Drawing.Pen.DashPattern%2A> </xref:System.Drawing.Drawing2D.DashStyle> Se o valor desta propriedade é <xref:System.Drawing.Drawing2D.DashStyle>e o valor do <xref:System.Drawing.Pen.DashPattern%2A>propriedade é `null`, a caneta desenha linhas sólidas.</xref:System.Drawing.Pen.DashPattern%2A> </xref:System.Drawing.Drawing2D.DashStyle>"
  syntax:
    content: public System.Drawing.Drawing2D.DashStyle DashStyle { get; set; }
    return:
      type: System.Drawing.Drawing2D.DashStyle
      description: "A <xref href=&quot;System.Drawing.Drawing2D.DashStyle&quot;> </xref> que representa o estilo utilizado para linhas tracejadas desenhadas com esta <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  overload: System.Drawing.Pen.DashStyle*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "DashStyle definir a propriedade é um imutável <xref href=&quot;System.Drawing.Pen&quot;> </xref>, tais como devolvido pelo <xref href=&quot;System.Drawing.Pens&quot;> </xref> classe."
  platform:
  - net462
- uid: System.Drawing.Pen.Dispose
  id: Dispose
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Dispose()
  nameWithType: Pen.Dispose()
  fullName: System.Drawing.Pen.Dispose()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Versões de todos os recursos utilizados por este <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  remarks: "Chamar Dispose permite que os recursos utilizados por este <xref:System.Drawing.Brush>para possível reatribuir porque para outros fins.</xref:System.Drawing.Brush>       É possível chamar Dispose quando tiver terminado de utilizando <xref:System.Drawing.Pen>.</xref:System.Drawing.Pen> O método de Dispose deixa o <xref:System.Drawing.Pen>num Estado não utilizável.</xref:System.Drawing.Pen> Depois de chamar Dispose, tem de libertar todas as referências para o <xref:System.Drawing.Pen>para que o recoletor de lixo pode reclame a memória que a <xref:System.Drawing.Pen>foi occupying.</xref:System.Drawing.Pen> </xref:System.Drawing.Pen> Para obter mais informações, consulte [recursos não geridos limpeza](~/add/includes/ajax-current-ext-md.md) e [implementar um método eliminar](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Sempre chamada eliminar antes de libertar a última referência <xref:System.Drawing.Pen>.</xref:System.Drawing.Pen> Caso contrário, os recursos que está a utilizar não irão ser libertados até que as chamadas de recoletor de lixo a <xref:System.Drawing.Pen>do objeto `Finalize` método.</xref:System.Drawing.Pen>"
  example:
  - "The following code example demonstrates the effects of setting the <xref:System.Drawing.Pen.Width%2A> and <xref:System.Drawing.Pen.LineJoin%2A> properties, and shows how to call the Dispose method for a <xref:System.Drawing.Pen>.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowLineJoin` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.PensExample#1](~/add/codesnippet/csharp/m-system.drawing.pen.dis_1.cs)]\n [!code-vb[System.Drawing.PensExample#1](~/add/codesnippet/visualbasic/m-system.drawing.pen.dis_1.vb)]\n [!code-cpp[System.Drawing.PensExample#1](~/add/codesnippet/cpp/m-system.drawing.pen.dis_1.cpp)]"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Drawing.Pen.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.EndCap
  id: EndCap
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: EndCap
  nameWithType: Pen.EndCap
  fullName: System.Drawing.Pen.EndCap
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Obtém ou define o estilo de extremidade utilizado no final de linhas desenhado com esta <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example demonstrates the effects of setting the <xref:System.Drawing.Pen.StartCap%2A> and EndCap properties on a <xref:System.Drawing.Pen>.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowStartAndEndCaps` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.PensExample#2](~/add/codesnippet/csharp/p-system.drawing.pen.end_1.cs)]\n [!code-vb[System.Drawing.PensExample#2](~/add/codesnippet/visualbasic/p-system.drawing.pen.end_1.vb)]\n [!code-cpp[System.Drawing.PensExample#2](~/add/codesnippet/cpp/p-system.drawing.pen.end_1.cpp)]"
  syntax:
    content: public System.Drawing.Drawing2D.LineCap EndCap { get; set; }
    return:
      type: System.Drawing.Drawing2D.LineCap
      description: "Um do <xref href=&quot;System.Drawing.Drawing2D.LineCap&quot;> </xref> valores que representa o estilo de extremidade utilizado no final de linhas desenhado com esta <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  overload: System.Drawing.Pen.EndCap*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "O valor especificado não é um membro de <xref href=&quot;System.Drawing.Drawing2D.LineCap&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "EndCap definir a propriedade é um imutável <xref href=&quot;System.Drawing.Pen&quot;> </xref>, tais como devolvido pelo <xref href=&quot;System.Drawing.Pens&quot;> </xref> classe."
  platform:
  - net462
- uid: System.Drawing.Pen.Finalize
  id: Finalize
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Finalize()
  nameWithType: Pen.Finalize()
  fullName: System.Drawing.Pen.Finalize()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Permite que um objeto para tentar libertar recursos e efetuar outras operações de limpeza antes de que reclamada a através da recolha de lixo."
  syntax:
    content: ~Pen ();
    parameters: []
  overload: System.Drawing.Pen.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.LineJoin
  id: LineJoin
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: LineJoin
  nameWithType: Pen.LineJoin
  fullName: System.Drawing.Pen.LineJoin
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Obtém ou define o estilo de associação for the ends of duas linhas consecutivos desenhado com esta <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  remarks: "Uma associação de linha é a área comuns que está formada por duas linhas cujas extremidades cumpriram ou se podem sobrepor. Existem três estilos de associação de linha: miter, bevel e arredondar.  Quando especificar um estilo de associação de linha para um objeto de <xref:System.Drawing.Pen>, que o estilo de associação será aplicado a todas as linhas ligadas em qualquer objeto <xref:System.Drawing.Drawing2D.GraphicsPath>desenhado utilizando esse caneta. A ilustração seguinte mostra os resultados de exemplo de associação a linha beveled.</xref:System.Drawing.Drawing2D.GraphicsPath> </xref:System.Drawing.Pen>       ![Pens](~/add/media/pens5.gif &quot;Pens&quot;)"
  example:
  - "The following code example demonstrates the effects of setting the <xref:System.Drawing.Pen.Width%2A> and LineJoin properties on a <xref:System.Drawing.Pen>.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowLineJoin` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs> .  \n  \n [!code-cs[System.Drawing.PensExample#1](~/add/codesnippet/csharp/p-system.drawing.pen.lin_1.cs)]\n [!code-vb[System.Drawing.PensExample#1](~/add/codesnippet/visualbasic/p-system.drawing.pen.lin_1.vb)]\n [!code-cpp[System.Drawing.PensExample#1](~/add/codesnippet/cpp/p-system.drawing.pen.lin_1.cpp)]"
  syntax:
    content: public System.Drawing.Drawing2D.LineJoin LineJoin { get; set; }
    return:
      type: System.Drawing.Drawing2D.LineJoin
      description: "A <xref href=&quot;System.Drawing.Drawing2D.LineJoin&quot;> </xref> que representa o estilo de associação for the ends of duas linhas consecutivos desenhado com esta <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  overload: System.Drawing.Pen.LineJoin*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "LineJoin definir a propriedade é um imutável <xref href=&quot;System.Drawing.Pen&quot;> </xref>, tais como devolvido pelo <xref href=&quot;System.Drawing.Pens&quot;> </xref> classe."
  platform:
  - net462
- uid: System.Drawing.Pen.MiterLimit
  id: MiterLimit
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: MiterLimit
  nameWithType: Pen.MiterLimit
  fullName: System.Drawing.Pen.MiterLimit
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Obtém ou define o limite da espessura da associação a um canto mitered."
  remarks: "O comprimento de miter é a distância da interseção dos paredes de linha no interior da associação a um para a interseção dos paredes de linha fora da associação. O comprimento de miter pode ser grande quando o ângulo entre duas linhas é pequeno. O limite de miter é o rácio máximo permitido de comprimento de miter para largura stroke. O valor predefinido é 10.0f.       Se o comprimento de miter de associação de intersecção excede o limite da associação a um, a associação será beveled para mantê-los dentro do limite de associação de intersecção."
  syntax:
    content: public float MiterLimit { get; set; }
    return:
      type: System.Single
      description: "O limite da espessura da associação a um no canto mitered."
  overload: System.Drawing.Pen.MiterLimit*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "MiterLimit definir a propriedade é um imutável <xref href=&quot;System.Drawing.Pen&quot;> </xref>, tais como devolvido pelo <xref href=&quot;System.Drawing.Pens&quot;> </xref> classe."
  platform:
  - net462
- uid: System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  id: MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: MultiplyTransform(Matrix)
  nameWithType: Pen.MultiplyTransform(Matrix)
  fullName: System.Drawing.Pen.MultiplyTransform(Matrix)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Multiplica a matriz de transformação para este <xref href=&quot;System.Drawing.Pen&quot;> </xref> especificado por <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
  remarks: "Este método prepends a matriz de multiplicação especificada no `matrix` parâmetro para a matriz de transformação para a operação de multiplicação."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Pen>.  \n  \n-   Draws a line to the screen.  \n  \n-   Multiplies the transformation matrix of the pen by the specified matrix.  \n  \n-   Draws a line with the transformed pen.  \n  \n [!code-cpp[System.Drawing.ClassicPenExamples#2](~/add/codesnippet/cpp/m-system.drawing.pen.mul_1.cpp)]\n [!code-cs[System.Drawing.ClassicPenExamples#2](~/add/codesnippet/csharp/m-system.drawing.pen.mul_1.cs)]\n [!code-vb[System.Drawing.ClassicPenExamples#2](~/add/codesnippet/visualbasic/m-system.drawing.pen.mul_1.vb)]"
  syntax:
    content: public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix);
    parameters:
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: "O <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> objeto pelo qual multiplicar a matriz de transformação."
  overload: System.Drawing.Pen.MultiplyTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  id: MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: MultiplyTransform(Matrix,MatrixOrder)
  nameWithType: Pen.MultiplyTransform(Matrix,MatrixOrder)
  fullName: System.Drawing.Pen.MultiplyTransform(Matrix,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Multiplica a matriz de transformação para este <xref href=&quot;System.Drawing.Pen&quot;> </xref> especificado por <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> ordem especificada."
  remarks: "Este método utiliza o <xref:System.Drawing.Drawing2D.MatrixOrder>elemento da enumeração (preceder ou acrescentar) especificado pelo `order` parâmetro para realizar a operação de multiplicação.</xref:System.Drawing.Drawing2D.MatrixOrder>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Pen>.  \n  \n-   Draws a line to the screen.  \n  \n-   Multiplies the transformation matrix of the pen by the specified matrix.  \n  \n-   Draws a line with the transformed pen.  \n  \n [!code-cpp[System.Drawing.ClassicPenExamples#3](~/add/codesnippet/cpp/b3caf9f4-4a37-409d-bccb-_1.cpp)]\n [!code-cs[System.Drawing.ClassicPenExamples#3](~/add/codesnippet/csharp/b3caf9f4-4a37-409d-bccb-_1.cs)]\n [!code-vb[System.Drawing.ClassicPenExamples#3](~/add/codesnippet/visualbasic/b3caf9f4-4a37-409d-bccb-_1.vb)]"
  syntax:
    content: public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: "O <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> pelo qual multiplicar a matriz de transformação."
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "A ordem pela qual efetuar a operação de multiplicação."
  overload: System.Drawing.Pen.MultiplyTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.PenType
  id: PenType
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: PenType
  nameWithType: Pen.PenType
  fullName: System.Drawing.Pen.PenType
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Obtém o estilo das linhas desenhado com esta <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  remarks: "A <xref:System.Drawing.Pen>pode desenhar linhas sólidas, linhas manchas ou linhas textured, consoante o estilo especificado por um membro a <xref:System.Drawing.Drawing2D.PenType>enumeração.</xref:System.Drawing.Drawing2D.PenType> </xref:System.Drawing.Pen>"
  syntax:
    content: public System.Drawing.Drawing2D.PenType PenType { get; }
    return:
      type: System.Drawing.Drawing2D.PenType
      description: "A <xref href=&quot;System.Drawing.Drawing2D.PenType&quot;> </xref> enumeração que especifica o estilo das linhas desenhado com esta <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  overload: System.Drawing.Pen.PenType*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.ResetTransform
  id: ResetTransform
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: ResetTransform()
  nameWithType: Pen.ResetTransform()
  fullName: System.Drawing.Pen.ResetTransform()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Repõe a matriz de geométrica transformação para este <xref href=&quot;System.Drawing.Pen&quot;> </xref> à identidade."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Pen>.  \n  \n-   Sets the transformation matrix of the pen to scale 2 times in the x-axis direction.  \n  \n-   Draws a line to the screen.  \n  \n-   Resets the transformation matrix to identity.  \n  \n-   Draws a second line to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicPenExamples#4](~/add/codesnippet/cpp/m-system.drawing.pen.res_1.cpp)]\n [!code-cs[System.Drawing.ClassicPenExamples#4](~/add/codesnippet/csharp/m-system.drawing.pen.res_1.cs)]\n [!code-vb[System.Drawing.ClassicPenExamples#4](~/add/codesnippet/visualbasic/m-system.drawing.pen.res_1.vb)]"
  syntax:
    content: public void ResetTransform ();
    parameters: []
  overload: System.Drawing.Pen.ResetTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.RotateTransform(System.Single)
  id: RotateTransform(System.Single)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: RotateTransform(Single)
  nameWithType: Pen.RotateTransform(Single)
  fullName: System.Drawing.Pen.RotateTransform(Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Roda a transformação geométrica local através do ângulo especificado. Este método prepends a rotação para a transformação."
  remarks: "Como a forma de uma caneta é circular, uma rotação não tem qualquer efeito visível, a menos que a caneta é escalada na direção axis x ou y."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Pen>.  \n  \n-   Draws a rectangle using the pen.  \n  \n-   Scales the pen by 2 times in the x-axis direction.  \n  \n-   Rotates the pen 90 degrees clockwise.  \n  \n-   Draws a second rectangle to demonstrate the difference.  \n  \n [!code-cpp[System.Drawing.ClassicPenExamples#5](~/add/codesnippet/cpp/m-system.drawing.pen.rot_1.cpp)]\n [!code-cs[System.Drawing.ClassicPenExamples#5](~/add/codesnippet/csharp/m-system.drawing.pen.rot_1.cs)]\n [!code-vb[System.Drawing.ClassicPenExamples#5](~/add/codesnippet/visualbasic/m-system.drawing.pen.rot_1.vb)]"
  syntax:
    content: public void RotateTransform (float angle);
    parameters:
    - id: angle
      type: System.Single
      description: "O ângulo de rotação."
  overload: System.Drawing.Pen.RotateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  id: RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: RotateTransform(Single,MatrixOrder)
  nameWithType: Pen.RotateTransform(Single,MatrixOrder)
  fullName: System.Drawing.Pen.RotateTransform(Single,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Roda a transformação geométrica local através do ângulo especificado pela ordem especificada."
  remarks: "Como a forma de uma caneta é circular, uma rotação não tem qualquer efeito visível, a menos que a caneta é escalada na direção axis x ou y."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Pen>.  \n  \n-   Scales the pen by 2 times in the x-axis direction.  \n  \n-   Draws a rectangle using the pen.  \n  \n-   Rotates the pen 90 degrees clockwise.  \n  \n-   Draws a second rectangle to demonstrate the difference.  \n  \n [!code-cpp[System.Drawing.ClassicPenExamples#6](~/add/codesnippet/cpp/35c127d1-4f45-4168-8641-_1.cpp)]\n [!code-cs[System.Drawing.ClassicPenExamples#6](~/add/codesnippet/csharp/35c127d1-4f45-4168-8641-_1.cs)]\n [!code-vb[System.Drawing.ClassicPenExamples#6](~/add/codesnippet/visualbasic/35c127d1-4f45-4168-8641-_1.vb)]"
  syntax:
    content: public void RotateTransform (float angle, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: angle
      type: System.Single
      description: "O ângulo de rotação."
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "A <xref href=&quot;System.Drawing.Drawing2D.MatrixOrder&quot;> </xref> que especifica se pretende acrescentar ou preceder a matriz de rotação."
  overload: System.Drawing.Pen.RotateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.ScaleTransform(System.Single,System.Single)
  id: ScaleTransform(System.Single,System.Single)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: ScaleTransform(Single,Single)
  nameWithType: Pen.ScaleTransform(Single,Single)
  fullName: System.Drawing.Pen.ScaleTransform(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Dimensiona a transformação geométrica local pelos fatores especificados. Este método prepends a matriz de dimensionamento para a transformação."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n Creates a <xref:System.Drawing.Pen>.  \n  \n Draws a rectangle using the pen.  \n  \n Scales the pen by 2 times in the x-axis direction.  \n  \n Draws a second rectangle to demonstrate the difference.  \n  \n [!code-cpp[System.Drawing.ClassicPenExamples#7](~/add/codesnippet/cpp/m-system.drawing.pen.sca_1.cpp)]\n [!code-cs[System.Drawing.ClassicPenExamples#7](~/add/codesnippet/csharp/m-system.drawing.pen.sca_1.cs)]\n [!code-vb[System.Drawing.ClassicPenExamples#7](~/add/codesnippet/visualbasic/m-system.drawing.pen.sca_1.vb)]"
  syntax:
    content: public void ScaleTransform (float sx, float sy);
    parameters:
    - id: sx
      type: System.Single
      description: "O fator pelo qual a transformação de escala na direção de eixo x."
    - id: sy
      type: System.Single
      description: "O fator pelo qual a transformação de escala na direção de eixo y."
  overload: System.Drawing.Pen.ScaleTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  id: ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: ScaleTransform(Single,Single,MatrixOrder)
  nameWithType: Pen.ScaleTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Pen.ScaleTransform(Single,Single,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Dimensiona a transformação geométrica local pelos fatores especificados pela ordem especificada."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Pen>.  \n  \n-   Draws a rectangle using the pen.  \n  \n-   Scales the pen by 2 times in the x-axis direction.  \n  \n-   Draws a second rectangle to demonstrate the difference.  \n  \n [!code-cpp[System.Drawing.ClassicPenExamples#8](~/add/codesnippet/cpp/f408f2ab-3827-481d-becb-_1.cpp)]\n [!code-cs[System.Drawing.ClassicPenExamples#8](~/add/codesnippet/csharp/f408f2ab-3827-481d-becb-_1.cs)]\n [!code-vb[System.Drawing.ClassicPenExamples#8](~/add/codesnippet/visualbasic/f408f2ab-3827-481d-becb-_1.vb)]"
  syntax:
    content: public void ScaleTransform (float sx, float sy, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: sx
      type: System.Single
      description: "O fator pelo qual a transformação de escala na direção de eixo x."
    - id: sy
      type: System.Single
      description: "O fator pelo qual a transformação de escala na direção de eixo y."
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "A <xref href=&quot;System.Drawing.Drawing2D.MatrixOrder&quot;> </xref> que especifica se pretende acrescentar ou preceder a matriz de dimensionamento."
  overload: System.Drawing.Pen.ScaleTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)
  id: SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: SetLineCap(LineCap,LineCap,DashCap)
  nameWithType: Pen.SetLineCap(LineCap,LineCap,DashCap)
  fullName: System.Drawing.Pen.SetLineCap(LineCap,LineCap,DashCap)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Define os valores que determinam o estilo da extremidade utilizado para linhas de fim desenhadas por este <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code creates a <xref:System.Drawing.Pen> and sets it to draw arrow anchor caps at the beginning of lines:  \n  \n [!code-cpp[System.Drawing.ClassicPenExamples#9](~/add/codesnippet/cpp/40b79849-2bf1-4135-844f-_1.cpp)]\n [!code-cs[System.Drawing.ClassicPenExamples#9](~/add/codesnippet/csharp/40b79849-2bf1-4135-844f-_1.cs)]\n [!code-vb[System.Drawing.ClassicPenExamples#9](~/add/codesnippet/visualbasic/40b79849-2bf1-4135-844f-_1.vb)]"
  syntax:
    content: public void SetLineCap (System.Drawing.Drawing2D.LineCap startCap, System.Drawing.Drawing2D.LineCap endCap, System.Drawing.Drawing2D.DashCap dashCap);
    parameters:
    - id: startCap
      type: System.Drawing.Drawing2D.LineCap
      description: "A <xref href=&quot;System.Drawing.Drawing2D.LineCap&quot;> </xref> que representa o estilo de extremidade a utilizar o início do linhas desenhado com esta <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
    - id: endCap
      type: System.Drawing.Drawing2D.LineCap
      description: "A <xref href=&quot;System.Drawing.Drawing2D.LineCap&quot;> </xref> que representa o estilo de extremidade a utilizar no final de linhas desenhado com esta <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
    - id: dashCap
      type: System.Drawing.Drawing2D.DashCap
      description: "A <xref href=&quot;System.Drawing.Drawing2D.LineCap&quot;> </xref> que representa o estilo de extremidade a utilizar no início ou fim das linhas tracejadas desenhado com esta <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  overload: System.Drawing.Pen.SetLineCap*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.StartCap
  id: StartCap
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: StartCap
  nameWithType: Pen.StartCap
  fullName: System.Drawing.Pen.StartCap
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Obtém ou define o estilo de extremidade utilizado no início de linhas desenhado com esta <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example demonstrates the effects of setting the StartCap and <xref:System.Drawing.Pen.EndCap%2A> properties on a <xref:System.Drawing.Pen>.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowStartAndEndCaps` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.PensExample#2](~/add/codesnippet/csharp/p-system.drawing.pen.sta_1.cs)]\n [!code-vb[System.Drawing.PensExample#2](~/add/codesnippet/visualbasic/p-system.drawing.pen.sta_1.vb)]\n [!code-cpp[System.Drawing.PensExample#2](~/add/codesnippet/cpp/p-system.drawing.pen.sta_1.cpp)]"
  syntax:
    content: public System.Drawing.Drawing2D.LineCap StartCap { get; set; }
    return:
      type: System.Drawing.Drawing2D.LineCap
      description: "Um do <xref href=&quot;System.Drawing.Drawing2D.LineCap&quot;> </xref> valores que representa o estilo de extremidade utilizado no início de linhas desenhado com esta <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  overload: System.Drawing.Pen.StartCap*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "O valor especificado não é um membro de <xref href=&quot;System.Drawing.Drawing2D.LineCap&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "StartCap definir a propriedade é um imutável <xref href=&quot;System.Drawing.Pen&quot;> </xref>, tais como devolvido pelo <xref href=&quot;System.Drawing.Pens&quot;> </xref> classe."
  platform:
  - net462
- uid: System.Drawing.Pen.Transform
  id: Transform
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Transform
  nameWithType: Pen.Transform
  fullName: System.Drawing.Pen.Transform
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Obtém ou define uma cópia da transformação para este geométrica <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  remarks: "Esta propriedade define uma forma elíptica para a sugestão de caneta. Este elipse é obtida a partir de forma circular predefinido aplicando a matriz de transformação. Tenha em atenção que a parte de tradução de matriz é ignorada. Porque a matriz devolvido e pela transformação propriedade é uma cópia da transformação geométrica a caneta, deve eliminar de matriz quando já não precisar dele."
  syntax:
    content: public System.Drawing.Drawing2D.Matrix Transform { get; set; }
    return:
      type: System.Drawing.Drawing2D.Matrix
      description: "Uma cópia do <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> que representa a transformação para este geométrica <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  overload: System.Drawing.Pen.Transform*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A transformação propriedade está definida uma imutável <xref href=&quot;System.Drawing.Pen&quot;> </xref>, tais como devolvido pelo <xref href=&quot;System.Drawing.Pens&quot;> </xref> classe."
  platform:
  - net462
- uid: System.Drawing.Pen.TranslateTransform(System.Single,System.Single)
  id: TranslateTransform(System.Single,System.Single)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: TranslateTransform(Single,Single)
  nameWithType: Pen.TranslateTransform(Single,Single)
  fullName: System.Drawing.Pen.TranslateTransform(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Converte a transformação geométrica local pelas dimensões especificadas. Este método prepends a tradução para a transformação."
  syntax:
    content: public void TranslateTransform (float dx, float dy);
    parameters:
    - id: dx
      type: System.Single
      description: "O valor da tradução no x."
    - id: dy
      type: System.Single
      description: "O valor da tradução na y."
  overload: System.Drawing.Pen.TranslateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  id: TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: TranslateTransform(Single,Single,MatrixOrder)
  nameWithType: Pen.TranslateTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Pen.TranslateTransform(Single,Single,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Converte a transformação geométrica local pelas dimensões especificadas pela ordem especificada."
  syntax:
    content: public void TranslateTransform (float dx, float dy, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: dx
      type: System.Single
      description: "O valor da tradução no x."
    - id: dy
      type: System.Single
      description: "O valor da tradução na y."
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "A ordem (preceder ou acrescentar) na qual pretende aplicar a tradução."
  overload: System.Drawing.Pen.TranslateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.Width
  id: Width
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Width
  nameWithType: Pen.Width
  fullName: System.Drawing.Pen.Width
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Obtém ou define a largura de isto <xref href=&quot;System.Drawing.Pen&quot;> </xref>, em unidades do <xref href=&quot;System.Drawing.Graphics&quot;> </xref> objecto utilizado para desenhar."
  remarks: "Pode aceder a unidade de medida do <xref:System.Drawing.Graphics>objeto utilizando o respetivo <xref:System.Drawing.Graphics.PageUnit%2A>propriedade.</xref:System.Drawing.Graphics.PageUnit%2A> </xref:System.Drawing.Graphics> A unidade de medida é normalmente pixéis. Uma largura de 0 resultará no <xref:System.Drawing.Pen>desenho como se a largura foram 1.</xref:System.Drawing.Pen>"
  example:
  - "The following code example demonstrates the effects of setting the Width and <xref:System.Drawing.Pen.LineJoin%2A> properties on a <xref:System.Drawing.Pen>.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowLineJoin` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.PensExample#1](~/add/codesnippet/csharp/p-system.drawing.pen.width_1.cs)]\n [!code-vb[System.Drawing.PensExample#1](~/add/codesnippet/visualbasic/p-system.drawing.pen.width_1.vb)]\n [!code-cpp[System.Drawing.PensExample#1](~/add/codesnippet/cpp/p-system.drawing.pen.width_1.cpp)]"
  syntax:
    content: public float Width { get; set; }
    return:
      type: System.Single
      description: "A largura disto <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  overload: System.Drawing.Pen.Width*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A propriedade Width está definida num imutável <xref href=&quot;System.Drawing.Pen&quot;> </xref>, tais como devolvido pelo <xref href=&quot;System.Drawing.Pens&quot;> </xref> classe."
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Drawing.Pen.#ctor(System.Drawing.Brush)
  parent: System.Drawing.Pen
  isExternal: false
  name: Pen(Brush)
  nameWithType: Pen.Pen(Brush)
  fullName: System.Drawing.Pen.Pen(Brush)
- uid: System.Drawing.Brush
  parent: System.Drawing
  isExternal: false
  name: Brush
  nameWithType: Brush
  fullName: System.Drawing.Brush
- uid: System.Drawing.Pen.#ctor(System.Drawing.Color)
  parent: System.Drawing.Pen
  isExternal: false
  name: Pen(Color)
  nameWithType: Pen.Pen(Color)
  fullName: System.Drawing.Pen.Pen(Color)
- uid: System.Drawing.Color
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)
  parent: System.Drawing.Pen
  isExternal: false
  name: Pen(Brush,Single)
  nameWithType: Pen.Pen(Brush,Single)
  fullName: System.Drawing.Pen.Pen(Brush,Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)
  parent: System.Drawing.Pen
  isExternal: false
  name: Pen(Color,Single)
  nameWithType: Pen.Pen(Color,Single)
  fullName: System.Drawing.Pen.Pen(Color,Single)
- uid: System.Drawing.Pen.Alignment
  parent: System.Drawing.Pen
  isExternal: false
  name: Alignment
  nameWithType: Pen.Alignment
  fullName: System.Drawing.Pen.Alignment
- uid: System.Drawing.Drawing2D.PenAlignment
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: PenAlignment
  nameWithType: PenAlignment
  fullName: System.Drawing.Drawing2D.PenAlignment
- uid: System.Drawing.Pen.Brush
  parent: System.Drawing.Pen
  isExternal: false
  name: Brush
  nameWithType: Pen.Brush
  fullName: System.Drawing.Pen.Brush
- uid: System.Drawing.Pen.Clone
  parent: System.Drawing.Pen
  isExternal: false
  name: Clone()
  nameWithType: Pen.Clone()
  fullName: System.Drawing.Pen.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.Pen.Color
  parent: System.Drawing.Pen
  isExternal: false
  name: Color
  nameWithType: Pen.Color
  fullName: System.Drawing.Pen.Color
- uid: System.Drawing.Pen.CompoundArray
  parent: System.Drawing.Pen
  isExternal: false
  name: CompoundArray
  nameWithType: Pen.CompoundArray
  fullName: System.Drawing.Pen.CompoundArray
- uid: System.Single[]
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single[]
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: Single[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Pen.CustomEndCap
  parent: System.Drawing.Pen
  isExternal: false
  name: CustomEndCap
  nameWithType: Pen.CustomEndCap
  fullName: System.Drawing.Pen.CustomEndCap
- uid: System.Drawing.Drawing2D.CustomLineCap
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: CustomLineCap
  nameWithType: CustomLineCap
  fullName: System.Drawing.Drawing2D.CustomLineCap
- uid: System.Drawing.Pen.CustomStartCap
  parent: System.Drawing.Pen
  isExternal: false
  name: CustomStartCap
  nameWithType: Pen.CustomStartCap
  fullName: System.Drawing.Pen.CustomStartCap
- uid: System.Drawing.Pen.DashCap
  parent: System.Drawing.Pen
  isExternal: false
  name: DashCap
  nameWithType: Pen.DashCap
  fullName: System.Drawing.Pen.DashCap
- uid: System.Drawing.Drawing2D.DashCap
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: DashCap
  nameWithType: DashCap
  fullName: System.Drawing.Drawing2D.DashCap
- uid: System.Drawing.Pen.DashOffset
  parent: System.Drawing.Pen
  isExternal: false
  name: DashOffset
  nameWithType: Pen.DashOffset
  fullName: System.Drawing.Pen.DashOffset
- uid: System.Drawing.Pen.DashPattern
  parent: System.Drawing.Pen
  isExternal: false
  name: DashPattern
  nameWithType: Pen.DashPattern
  fullName: System.Drawing.Pen.DashPattern
- uid: System.Drawing.Pen.DashStyle
  parent: System.Drawing.Pen
  isExternal: false
  name: DashStyle
  nameWithType: Pen.DashStyle
  fullName: System.Drawing.Pen.DashStyle
- uid: System.Drawing.Drawing2D.DashStyle
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: DashStyle
  nameWithType: DashStyle
  fullName: System.Drawing.Drawing2D.DashStyle
- uid: System.Drawing.Pen.Dispose
  parent: System.Drawing.Pen
  isExternal: false
  name: Dispose()
  nameWithType: Pen.Dispose()
  fullName: System.Drawing.Pen.Dispose()
- uid: System.Drawing.Pen.EndCap
  parent: System.Drawing.Pen
  isExternal: false
  name: EndCap
  nameWithType: Pen.EndCap
  fullName: System.Drawing.Pen.EndCap
- uid: System.Drawing.Drawing2D.LineCap
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: LineCap
  nameWithType: LineCap
  fullName: System.Drawing.Drawing2D.LineCap
- uid: System.Drawing.Pen.Finalize
  parent: System.Drawing.Pen
  isExternal: false
  name: Finalize()
  nameWithType: Pen.Finalize()
  fullName: System.Drawing.Pen.Finalize()
- uid: System.Drawing.Pen.LineJoin
  parent: System.Drawing.Pen
  isExternal: false
  name: LineJoin
  nameWithType: Pen.LineJoin
  fullName: System.Drawing.Pen.LineJoin
- uid: System.Drawing.Drawing2D.LineJoin
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: LineJoin
  nameWithType: LineJoin
  fullName: System.Drawing.Drawing2D.LineJoin
- uid: System.Drawing.Pen.MiterLimit
  parent: System.Drawing.Pen
  isExternal: false
  name: MiterLimit
  nameWithType: Pen.MiterLimit
  fullName: System.Drawing.Pen.MiterLimit
- uid: System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Pen
  isExternal: false
  name: MultiplyTransform(Matrix)
  nameWithType: Pen.MultiplyTransform(Matrix)
  fullName: System.Drawing.Pen.MultiplyTransform(Matrix)
- uid: System.Drawing.Drawing2D.Matrix
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: Matrix
  nameWithType: Matrix
  fullName: System.Drawing.Drawing2D.Matrix
- uid: System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Pen
  isExternal: false
  name: MultiplyTransform(Matrix,MatrixOrder)
  nameWithType: Pen.MultiplyTransform(Matrix,MatrixOrder)
  fullName: System.Drawing.Pen.MultiplyTransform(Matrix,MatrixOrder)
- uid: System.Drawing.Drawing2D.MatrixOrder
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: MatrixOrder
  nameWithType: MatrixOrder
  fullName: System.Drawing.Drawing2D.MatrixOrder
- uid: System.Drawing.Pen.PenType
  parent: System.Drawing.Pen
  isExternal: false
  name: PenType
  nameWithType: Pen.PenType
  fullName: System.Drawing.Pen.PenType
- uid: System.Drawing.Drawing2D.PenType
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: PenType
  nameWithType: PenType
  fullName: System.Drawing.Drawing2D.PenType
- uid: System.Drawing.Pen.ResetTransform
  parent: System.Drawing.Pen
  isExternal: false
  name: ResetTransform()
  nameWithType: Pen.ResetTransform()
  fullName: System.Drawing.Pen.ResetTransform()
- uid: System.Drawing.Pen.RotateTransform(System.Single)
  parent: System.Drawing.Pen
  isExternal: false
  name: RotateTransform(Single)
  nameWithType: Pen.RotateTransform(Single)
  fullName: System.Drawing.Pen.RotateTransform(Single)
- uid: System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Pen
  isExternal: false
  name: RotateTransform(Single,MatrixOrder)
  nameWithType: Pen.RotateTransform(Single,MatrixOrder)
  fullName: System.Drawing.Pen.RotateTransform(Single,MatrixOrder)
- uid: System.Drawing.Pen.ScaleTransform(System.Single,System.Single)
  parent: System.Drawing.Pen
  isExternal: false
  name: ScaleTransform(Single,Single)
  nameWithType: Pen.ScaleTransform(Single,Single)
  fullName: System.Drawing.Pen.ScaleTransform(Single,Single)
- uid: System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Pen
  isExternal: false
  name: ScaleTransform(Single,Single,MatrixOrder)
  nameWithType: Pen.ScaleTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Pen.ScaleTransform(Single,Single,MatrixOrder)
- uid: System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)
  parent: System.Drawing.Pen
  isExternal: false
  name: SetLineCap(LineCap,LineCap,DashCap)
  nameWithType: Pen.SetLineCap(LineCap,LineCap,DashCap)
  fullName: System.Drawing.Pen.SetLineCap(LineCap,LineCap,DashCap)
- uid: System.Drawing.Pen.StartCap
  parent: System.Drawing.Pen
  isExternal: false
  name: StartCap
  nameWithType: Pen.StartCap
  fullName: System.Drawing.Pen.StartCap
- uid: System.Drawing.Pen.Transform
  parent: System.Drawing.Pen
  isExternal: false
  name: Transform
  nameWithType: Pen.Transform
  fullName: System.Drawing.Pen.Transform
- uid: System.Drawing.Pen.TranslateTransform(System.Single,System.Single)
  parent: System.Drawing.Pen
  isExternal: false
  name: TranslateTransform(Single,Single)
  nameWithType: Pen.TranslateTransform(Single,Single)
  fullName: System.Drawing.Pen.TranslateTransform(Single,Single)
- uid: System.Drawing.Pen.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Pen
  isExternal: false
  name: TranslateTransform(Single,Single,MatrixOrder)
  nameWithType: Pen.TranslateTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Pen.TranslateTransform(Single,Single,MatrixOrder)
- uid: System.Drawing.Pen.Width
  parent: System.Drawing.Pen
  isExternal: false
  name: Width
  nameWithType: Pen.Width
  fullName: System.Drawing.Pen.Width
- uid: System.Drawing.Pen.#ctor*
  parent: System.Drawing.Pen
  isExternal: false
  name: Pen
  nameWithType: Pen.Pen
- uid: System.Drawing.Pen.Alignment*
  parent: System.Drawing.Pen
  isExternal: false
  name: Alignment
  nameWithType: Pen.Alignment
- uid: System.Drawing.Pen.Brush*
  parent: System.Drawing.Pen
  isExternal: false
  name: Brush
  nameWithType: Pen.Brush
- uid: System.Drawing.Pen.Clone*
  parent: System.Drawing.Pen
  isExternal: false
  name: Clone
  nameWithType: Pen.Clone
- uid: System.Drawing.Pen.Color*
  parent: System.Drawing.Pen
  isExternal: false
  name: Color
  nameWithType: Pen.Color
- uid: System.Drawing.Pen.CompoundArray*
  parent: System.Drawing.Pen
  isExternal: false
  name: CompoundArray
  nameWithType: Pen.CompoundArray
- uid: System.Drawing.Pen.CustomEndCap*
  parent: System.Drawing.Pen
  isExternal: false
  name: CustomEndCap
  nameWithType: Pen.CustomEndCap
- uid: System.Drawing.Pen.CustomStartCap*
  parent: System.Drawing.Pen
  isExternal: false
  name: CustomStartCap
  nameWithType: Pen.CustomStartCap
- uid: System.Drawing.Pen.DashCap*
  parent: System.Drawing.Pen
  isExternal: false
  name: DashCap
  nameWithType: Pen.DashCap
- uid: System.Drawing.Pen.DashOffset*
  parent: System.Drawing.Pen
  isExternal: false
  name: DashOffset
  nameWithType: Pen.DashOffset
- uid: System.Drawing.Pen.DashPattern*
  parent: System.Drawing.Pen
  isExternal: false
  name: DashPattern
  nameWithType: Pen.DashPattern
- uid: System.Drawing.Pen.DashStyle*
  parent: System.Drawing.Pen
  isExternal: false
  name: DashStyle
  nameWithType: Pen.DashStyle
- uid: System.Drawing.Pen.Dispose*
  parent: System.Drawing.Pen
  isExternal: false
  name: Dispose
  nameWithType: Pen.Dispose
- uid: System.Drawing.Pen.EndCap*
  parent: System.Drawing.Pen
  isExternal: false
  name: EndCap
  nameWithType: Pen.EndCap
- uid: System.Drawing.Pen.Finalize*
  parent: System.Drawing.Pen
  isExternal: false
  name: Finalize
  nameWithType: Pen.Finalize
- uid: System.Drawing.Pen.LineJoin*
  parent: System.Drawing.Pen
  isExternal: false
  name: LineJoin
  nameWithType: Pen.LineJoin
- uid: System.Drawing.Pen.MiterLimit*
  parent: System.Drawing.Pen
  isExternal: false
  name: MiterLimit
  nameWithType: Pen.MiterLimit
- uid: System.Drawing.Pen.MultiplyTransform*
  parent: System.Drawing.Pen
  isExternal: false
  name: MultiplyTransform
  nameWithType: Pen.MultiplyTransform
- uid: System.Drawing.Pen.PenType*
  parent: System.Drawing.Pen
  isExternal: false
  name: PenType
  nameWithType: Pen.PenType
- uid: System.Drawing.Pen.ResetTransform*
  parent: System.Drawing.Pen
  isExternal: false
  name: ResetTransform
  nameWithType: Pen.ResetTransform
- uid: System.Drawing.Pen.RotateTransform*
  parent: System.Drawing.Pen
  isExternal: false
  name: RotateTransform
  nameWithType: Pen.RotateTransform
- uid: System.Drawing.Pen.ScaleTransform*
  parent: System.Drawing.Pen
  isExternal: false
  name: ScaleTransform
  nameWithType: Pen.ScaleTransform
- uid: System.Drawing.Pen.SetLineCap*
  parent: System.Drawing.Pen
  isExternal: false
  name: SetLineCap
  nameWithType: Pen.SetLineCap
- uid: System.Drawing.Pen.StartCap*
  parent: System.Drawing.Pen
  isExternal: false
  name: StartCap
  nameWithType: Pen.StartCap
- uid: System.Drawing.Pen.Transform*
  parent: System.Drawing.Pen
  isExternal: false
  name: Transform
  nameWithType: Pen.Transform
- uid: System.Drawing.Pen.TranslateTransform*
  parent: System.Drawing.Pen
  isExternal: false
  name: TranslateTransform
  nameWithType: Pen.TranslateTransform
- uid: System.Drawing.Pen.Width*
  parent: System.Drawing.Pen
  isExternal: false
  name: Width
  nameWithType: Pen.Width
