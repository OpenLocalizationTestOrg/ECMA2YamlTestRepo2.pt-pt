### YamlMime:ManagedReference
items:
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  id: WorkflowInstance.WorkflowInstanceControl
  children:
  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort
  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort(System.Exception)
  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.EndFlushTrackingRecords(System.IAsyncResult)
  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Equals(System.Object)
  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.FlushTrackingRecords(System.TimeSpan)
  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetAbortReason
  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetBookmarks
  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetBookmarks(System.Activities.BookmarkScope)
  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetCompletionState
  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetCompletionState(System.Exception@)
  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetCompletionState(System.Collections.Generic.IDictionary{System.String,System.Object}@,System.Exception@)
  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetHashCode
  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetMappedVariables
  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.HasPendingTrackingRecords
  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.IsPersistable
  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.op_Equality(System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl,System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl)
  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.op_Inequality(System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl,System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl)
  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable
  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PrepareForSerialization
  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause
  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run
  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.ScheduleBookmarkResumption(System.Activities.Bookmark,System.Object)
  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.ScheduleBookmarkResumption(System.Activities.Bookmark,System.Object,System.Activities.BookmarkScope)
  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.ScheduleCancel
  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State
  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Terminate(System.Exception)
  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Track(System.Activities.Tracking.WorkflowInstanceRecord)
  - System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.TrackingEnabled
  langs:
  - csharp
  name: WorkflowInstance+WorkflowInstanceControl
  nameWithType: WorkflowInstance+WorkflowInstanceControl
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl
  type: Struct
  syntax:
    content: protected struct WorkflowInstance.WorkflowInstanceControl
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort
  id: Abort
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  langs:
  - csharp
  name: Abort()
  nameWithType: WorkflowInstance+WorkflowInstanceControl.Abort()
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.Abort()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  syntax:
    content: public void Abort ();
    parameters: []
  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort(System.Exception)
  id: Abort(System.Exception)
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  langs:
  - csharp
  name: Abort(Exception)
  nameWithType: WorkflowInstance+WorkflowInstanceControl.Abort(Exception)
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.Abort(Exception)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  syntax:
    content: public void Abort (Exception reason);
    parameters:
    - id: reason
      type: System.Exception
      description: "To be added."
  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  langs:
  - csharp
  name: BeginFlushTrackingRecords(TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowInstance+WorkflowInstanceControl.BeginFlushTrackingRecords(TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.BeginFlushTrackingRecords(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  syntax:
    content: public IAsyncResult BeginFlushTrackingRecords (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "To be added."
    - id: callback
      type: System.AsyncCallback
      description: "To be added."
    - id: state
      type: System.Object
      description: "To be added."
    return:
      type: System.IAsyncResult
      description: "To be added."
  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.BeginFlushTrackingRecords*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.EndFlushTrackingRecords(System.IAsyncResult)
  id: EndFlushTrackingRecords(System.IAsyncResult)
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  langs:
  - csharp
  name: EndFlushTrackingRecords(IAsyncResult)
  nameWithType: WorkflowInstance+WorkflowInstanceControl.EndFlushTrackingRecords(IAsyncResult)
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.EndFlushTrackingRecords(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  syntax:
    content: public void EndFlushTrackingRecords (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "To be added."
  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.EndFlushTrackingRecords*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: WorkflowInstance+WorkflowInstanceControl.Equals(Object)
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.Equals(Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "To be added."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.FlushTrackingRecords(System.TimeSpan)
  id: FlushTrackingRecords(System.TimeSpan)
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  langs:
  - csharp
  name: FlushTrackingRecords(TimeSpan)
  nameWithType: WorkflowInstance+WorkflowInstanceControl.FlushTrackingRecords(TimeSpan)
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.FlushTrackingRecords(TimeSpan)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  syntax:
    content: public void FlushTrackingRecords (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "To be added."
  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.FlushTrackingRecords*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetAbortReason
  id: GetAbortReason
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  langs:
  - csharp
  name: GetAbortReason()
  nameWithType: WorkflowInstance+WorkflowInstanceControl.GetAbortReason()
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.GetAbortReason()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  syntax:
    content: public Exception GetAbortReason ();
    parameters: []
    return:
      type: System.Exception
      description: "To be added."
  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetAbortReason*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetBookmarks
  id: GetBookmarks
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  langs:
  - csharp
  name: GetBookmarks()
  nameWithType: WorkflowInstance+WorkflowInstanceControl.GetBookmarks()
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.GetBookmarks()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Activities.Hosting.BookmarkInfo> GetBookmarks ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Activities.Hosting.BookmarkInfo}
      description: "To be added."
  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetBookmarks*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetBookmarks(System.Activities.BookmarkScope)
  id: GetBookmarks(System.Activities.BookmarkScope)
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  langs:
  - csharp
  name: GetBookmarks(BookmarkScope)
  nameWithType: WorkflowInstance+WorkflowInstanceControl.GetBookmarks(BookmarkScope)
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.GetBookmarks(BookmarkScope)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Activities.Hosting.BookmarkInfo> GetBookmarks (System.Activities.BookmarkScope scope);
    parameters:
    - id: scope
      type: System.Activities.BookmarkScope
      description: "To be added."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Activities.Hosting.BookmarkInfo}
      description: "To be added."
  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetBookmarks*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetCompletionState
  id: GetCompletionState
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  langs:
  - csharp
  name: GetCompletionState()
  nameWithType: WorkflowInstance+WorkflowInstanceControl.GetCompletionState()
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.GetCompletionState()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  syntax:
    content: public System.Activities.ActivityInstanceState GetCompletionState ();
    parameters: []
    return:
      type: System.Activities.ActivityInstanceState
      description: "To be added."
  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetCompletionState*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetCompletionState(System.Exception@)
  id: GetCompletionState(System.Exception@)
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  langs:
  - csharp
  name: GetCompletionState(Exception)
  nameWithType: WorkflowInstance+WorkflowInstanceControl.GetCompletionState(Exception)
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.GetCompletionState(Exception)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  syntax:
    content: public System.Activities.ActivityInstanceState GetCompletionState (out Exception terminationException);
    parameters:
    - id: terminationException
      type: System.Exception
      description: "To be added."
    return:
      type: System.Activities.ActivityInstanceState
      description: "To be added."
  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetCompletionState*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetCompletionState(System.Collections.Generic.IDictionary{System.String,System.Object}@,System.Exception@)
  id: GetCompletionState(System.Collections.Generic.IDictionary{System.String,System.Object}@,System.Exception@)
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  langs:
  - csharp
  name: GetCompletionState(IDictionary<String,Object>,Exception)
  nameWithType: WorkflowInstance+WorkflowInstanceControl.GetCompletionState(IDictionary<String,Object>,Exception)
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.GetCompletionState(IDictionary<String,Object>,Exception)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  syntax:
    content: public System.Activities.ActivityInstanceState GetCompletionState (out System.Collections.Generic.IDictionary<string,object> outputs, out Exception terminationException);
    parameters:
    - id: outputs
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "To be added."
    - id: terminationException
      type: System.Exception
      description: "To be added."
    return:
      type: System.Activities.ActivityInstanceState
      description: "To be added."
  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetCompletionState*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetHashCode
  id: GetHashCode
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: WorkflowInstance+WorkflowInstanceControl.GetHashCode()
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.GetHashCode()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "To be added."
  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetMappedVariables
  id: GetMappedVariables
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  langs:
  - csharp
  name: GetMappedVariables()
  nameWithType: WorkflowInstance+WorkflowInstanceControl.GetMappedVariables()
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.GetMappedVariables()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  syntax:
    content: public System.Collections.Generic.IDictionary<string,System.Activities.Hosting.LocationInfo> GetMappedVariables ();
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Activities.Hosting.LocationInfo}
      description: "To be added."
  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetMappedVariables*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.HasPendingTrackingRecords
  id: HasPendingTrackingRecords
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  langs:
  - csharp
  name: HasPendingTrackingRecords
  nameWithType: WorkflowInstance+WorkflowInstanceControl.HasPendingTrackingRecords
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.HasPendingTrackingRecords
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  syntax:
    content: public bool HasPendingTrackingRecords { get; }
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.HasPendingTrackingRecords*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.IsPersistable
  id: IsPersistable
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  langs:
  - csharp
  name: IsPersistable
  nameWithType: WorkflowInstance+WorkflowInstanceControl.IsPersistable
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.IsPersistable
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  syntax:
    content: public bool IsPersistable { get; }
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.IsPersistable*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.op_Equality(System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl,System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl)
  id: op_Equality(System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl,System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl)
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  langs:
  - csharp
  name: op_Equality(WorkflowInstance+WorkflowInstanceControl,WorkflowInstance+WorkflowInstanceControl)
  nameWithType: WorkflowInstance+WorkflowInstanceControl.op_Equality(WorkflowInstance+WorkflowInstanceControl,WorkflowInstance+WorkflowInstanceControl)
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.op_Equality(WorkflowInstance+WorkflowInstanceControl,WorkflowInstance+WorkflowInstanceControl)
  type: Operator
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  syntax:
    content: public static bool op_Equality (System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl left, System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl right);
    parameters:
    - id: left
      type: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
      description: "To be added."
    - id: right
      type: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
      description: "To be added."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.op_Inequality(System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl,System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl)
  id: op_Inequality(System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl,System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl)
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  langs:
  - csharp
  name: op_Inequality(WorkflowInstance+WorkflowInstanceControl,WorkflowInstance+WorkflowInstanceControl)
  nameWithType: WorkflowInstance+WorkflowInstanceControl.op_Inequality(WorkflowInstance+WorkflowInstanceControl,WorkflowInstance+WorkflowInstanceControl)
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.op_Inequality(WorkflowInstance+WorkflowInstanceControl,WorkflowInstance+WorkflowInstanceControl)
  type: Operator
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  syntax:
    content: public static bool op_Inequality (System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl left, System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl right);
    parameters:
    - id: left
      type: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
      description: "To be added."
    - id: right
      type: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
      description: "To be added."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable
  id: PauseWhenPersistable
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  langs:
  - csharp
  name: PauseWhenPersistable()
  nameWithType: WorkflowInstance+WorkflowInstanceControl.PauseWhenPersistable()
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.PauseWhenPersistable()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  syntax:
    content: public void PauseWhenPersistable ();
    parameters: []
  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PrepareForSerialization
  id: PrepareForSerialization
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  langs:
  - csharp
  name: PrepareForSerialization()
  nameWithType: WorkflowInstance+WorkflowInstanceControl.PrepareForSerialization()
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.PrepareForSerialization()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  syntax:
    content: public object PrepareForSerialization ();
    parameters: []
    return:
      type: System.Object
      description: "To be added."
  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PrepareForSerialization*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause
  id: RequestPause
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  langs:
  - csharp
  name: RequestPause()
  nameWithType: WorkflowInstance+WorkflowInstanceControl.RequestPause()
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.RequestPause()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  syntax:
    content: public void RequestPause ();
    parameters: []
  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run
  id: Run
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  langs:
  - csharp
  name: Run()
  nameWithType: WorkflowInstance+WorkflowInstanceControl.Run()
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.Run()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  syntax:
    content: public void Run ();
    parameters: []
  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.ScheduleBookmarkResumption(System.Activities.Bookmark,System.Object)
  id: ScheduleBookmarkResumption(System.Activities.Bookmark,System.Object)
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  langs:
  - csharp
  name: ScheduleBookmarkResumption(Bookmark,Object)
  nameWithType: WorkflowInstance+WorkflowInstanceControl.ScheduleBookmarkResumption(Bookmark,Object)
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.ScheduleBookmarkResumption(Bookmark,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  syntax:
    content: public System.Activities.BookmarkResumptionResult ScheduleBookmarkResumption (System.Activities.Bookmark bookmark, object value);
    parameters:
    - id: bookmark
      type: System.Activities.Bookmark
      description: "To be added."
    - id: value
      type: System.Object
      description: "To be added."
    return:
      type: System.Activities.BookmarkResumptionResult
      description: "To be added."
  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.ScheduleBookmarkResumption*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.ScheduleBookmarkResumption(System.Activities.Bookmark,System.Object,System.Activities.BookmarkScope)
  id: ScheduleBookmarkResumption(System.Activities.Bookmark,System.Object,System.Activities.BookmarkScope)
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  langs:
  - csharp
  name: ScheduleBookmarkResumption(Bookmark,Object,BookmarkScope)
  nameWithType: WorkflowInstance+WorkflowInstanceControl.ScheduleBookmarkResumption(Bookmark,Object,BookmarkScope)
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.ScheduleBookmarkResumption(Bookmark,Object,BookmarkScope)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  syntax:
    content: public System.Activities.BookmarkResumptionResult ScheduleBookmarkResumption (System.Activities.Bookmark bookmark, object value, System.Activities.BookmarkScope scope);
    parameters:
    - id: bookmark
      type: System.Activities.Bookmark
      description: "To be added."
    - id: value
      type: System.Object
      description: "To be added."
    - id: scope
      type: System.Activities.BookmarkScope
      description: "To be added."
    return:
      type: System.Activities.BookmarkResumptionResult
      description: "To be added."
  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.ScheduleBookmarkResumption*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.ScheduleCancel
  id: ScheduleCancel
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  langs:
  - csharp
  name: ScheduleCancel()
  nameWithType: WorkflowInstance+WorkflowInstanceControl.ScheduleCancel()
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.ScheduleCancel()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  syntax:
    content: public void ScheduleCancel ();
    parameters: []
  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.ScheduleCancel*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State
  id: State
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  langs:
  - csharp
  name: State
  nameWithType: WorkflowInstance+WorkflowInstanceControl.State
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.State
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  syntax:
    content: public System.Activities.Hosting.WorkflowInstanceState State { get; }
    return:
      type: System.Activities.Hosting.WorkflowInstanceState
      description: "To be added."
  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Terminate(System.Exception)
  id: Terminate(System.Exception)
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  langs:
  - csharp
  name: Terminate(Exception)
  nameWithType: WorkflowInstance+WorkflowInstanceControl.Terminate(Exception)
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.Terminate(Exception)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  syntax:
    content: public void Terminate (Exception reason);
    parameters:
    - id: reason
      type: System.Exception
      description: "To be added."
  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Terminate*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Track(System.Activities.Tracking.WorkflowInstanceRecord)
  id: Track(System.Activities.Tracking.WorkflowInstanceRecord)
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  langs:
  - csharp
  name: Track(WorkflowInstanceRecord)
  nameWithType: WorkflowInstance+WorkflowInstanceControl.Track(WorkflowInstanceRecord)
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.Track(WorkflowInstanceRecord)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  syntax:
    content: public void Track (System.Activities.Tracking.WorkflowInstanceRecord instanceRecord);
    parameters:
    - id: instanceRecord
      type: System.Activities.Tracking.WorkflowInstanceRecord
      description: "To be added."
  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Track*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.TrackingEnabled
  id: TrackingEnabled
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  langs:
  - csharp
  name: TrackingEnabled
  nameWithType: WorkflowInstance+WorkflowInstanceControl.TrackingEnabled
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.TrackingEnabled
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  syntax:
    content: public bool TrackingEnabled { get; }
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.TrackingEnabled*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: Abort()
  nameWithType: WorkflowInstance+WorkflowInstanceControl.Abort()
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.Abort()
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort(System.Exception)
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: Abort(Exception)
  nameWithType: WorkflowInstance+WorkflowInstanceControl.Abort(Exception)
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.Abort(Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: BeginFlushTrackingRecords(TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowInstance+WorkflowInstanceControl.BeginFlushTrackingRecords(TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.BeginFlushTrackingRecords(TimeSpan,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.EndFlushTrackingRecords(System.IAsyncResult)
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: EndFlushTrackingRecords(IAsyncResult)
  nameWithType: WorkflowInstance+WorkflowInstanceControl.EndFlushTrackingRecords(IAsyncResult)
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.EndFlushTrackingRecords(IAsyncResult)
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Equals(System.Object)
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: Equals(Object)
  nameWithType: WorkflowInstance+WorkflowInstanceControl.Equals(Object)
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.FlushTrackingRecords(System.TimeSpan)
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: FlushTrackingRecords(TimeSpan)
  nameWithType: WorkflowInstance+WorkflowInstanceControl.FlushTrackingRecords(TimeSpan)
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.FlushTrackingRecords(TimeSpan)
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetAbortReason
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: GetAbortReason()
  nameWithType: WorkflowInstance+WorkflowInstanceControl.GetAbortReason()
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.GetAbortReason()
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetBookmarks
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: GetBookmarks()
  nameWithType: WorkflowInstance+WorkflowInstanceControl.GetBookmarks()
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.GetBookmarks()
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Activities.Hosting.BookmarkInfo}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<BookmarkInfo>
  nameWithType: ReadOnlyCollection<BookmarkInfo>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Activities.Hosting.BookmarkInfo>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Activities.Hosting.BookmarkInfo>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Hosting.BookmarkInfo
    name: BookmarkInfo
    nameWithType: BookmarkInfo
    fullName: BookmarkInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetBookmarks(System.Activities.BookmarkScope)
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: GetBookmarks(BookmarkScope)
  nameWithType: WorkflowInstance+WorkflowInstanceControl.GetBookmarks(BookmarkScope)
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.GetBookmarks(BookmarkScope)
- uid: System.Activities.BookmarkScope
  parent: System.Activities
  isExternal: false
  name: BookmarkScope
  nameWithType: BookmarkScope
  fullName: System.Activities.BookmarkScope
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetCompletionState
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: GetCompletionState()
  nameWithType: WorkflowInstance+WorkflowInstanceControl.GetCompletionState()
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.GetCompletionState()
- uid: System.Activities.ActivityInstanceState
  parent: System.Activities
  isExternal: false
  name: ActivityInstanceState
  nameWithType: ActivityInstanceState
  fullName: System.Activities.ActivityInstanceState
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetCompletionState(System.Exception@)
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: GetCompletionState(Exception)
  nameWithType: WorkflowInstance+WorkflowInstanceControl.GetCompletionState(Exception)
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.GetCompletionState(Exception)
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetCompletionState(System.Collections.Generic.IDictionary{System.String,System.Object}@,System.Exception@)
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: GetCompletionState(IDictionary<String,Object>,Exception)
  nameWithType: WorkflowInstance+WorkflowInstanceControl.GetCompletionState(IDictionary<String,Object>,Exception)
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.GetCompletionState(IDictionary<String,Object>,Exception)
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,Object>
  nameWithType: IDictionary<String,Object>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetHashCode
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: GetHashCode()
  nameWithType: WorkflowInstance+WorkflowInstanceControl.GetHashCode()
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetMappedVariables
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: GetMappedVariables()
  nameWithType: WorkflowInstance+WorkflowInstanceControl.GetMappedVariables()
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.GetMappedVariables()
- uid: System.Collections.Generic.IDictionary{System.String,System.Activities.Hosting.LocationInfo}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,LocationInfo>
  nameWithType: IDictionary<String,LocationInfo>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Activities.Hosting.LocationInfo>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.Activities.Hosting.LocationInfo>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Activities.Hosting.LocationInfo
    name: LocationInfo
    nameWithType: LocationInfo
    fullName: LocationInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.HasPendingTrackingRecords
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: HasPendingTrackingRecords
  nameWithType: WorkflowInstance+WorkflowInstanceControl.HasPendingTrackingRecords
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.HasPendingTrackingRecords
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.IsPersistable
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: IsPersistable
  nameWithType: WorkflowInstance+WorkflowInstanceControl.IsPersistable
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.IsPersistable
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.op_Equality(System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl,System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl)
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: op_Equality(WorkflowInstance+WorkflowInstanceControl,WorkflowInstance+WorkflowInstanceControl)
  nameWithType: WorkflowInstance+WorkflowInstanceControl.op_Equality(WorkflowInstance+WorkflowInstanceControl,WorkflowInstance+WorkflowInstanceControl)
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.op_Equality(WorkflowInstance+WorkflowInstanceControl,WorkflowInstance+WorkflowInstanceControl)
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  parent: System.Activities.Hosting
  isExternal: false
  name: WorkflowInstance+WorkflowInstanceControl
  nameWithType: WorkflowInstance+WorkflowInstanceControl
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.op_Inequality(System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl,System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl)
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: op_Inequality(WorkflowInstance+WorkflowInstanceControl,WorkflowInstance+WorkflowInstanceControl)
  nameWithType: WorkflowInstance+WorkflowInstanceControl.op_Inequality(WorkflowInstance+WorkflowInstanceControl,WorkflowInstance+WorkflowInstanceControl)
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.op_Inequality(WorkflowInstance+WorkflowInstanceControl,WorkflowInstance+WorkflowInstanceControl)
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: PauseWhenPersistable()
  nameWithType: WorkflowInstance+WorkflowInstanceControl.PauseWhenPersistable()
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.PauseWhenPersistable()
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PrepareForSerialization
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: PrepareForSerialization()
  nameWithType: WorkflowInstance+WorkflowInstanceControl.PrepareForSerialization()
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.PrepareForSerialization()
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: RequestPause()
  nameWithType: WorkflowInstance+WorkflowInstanceControl.RequestPause()
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.RequestPause()
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: Run()
  nameWithType: WorkflowInstance+WorkflowInstanceControl.Run()
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.Run()
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.ScheduleBookmarkResumption(System.Activities.Bookmark,System.Object)
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: ScheduleBookmarkResumption(Bookmark,Object)
  nameWithType: WorkflowInstance+WorkflowInstanceControl.ScheduleBookmarkResumption(Bookmark,Object)
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.ScheduleBookmarkResumption(Bookmark,Object)
- uid: System.Activities.BookmarkResumptionResult
  parent: System.Activities
  isExternal: false
  name: BookmarkResumptionResult
  nameWithType: BookmarkResumptionResult
  fullName: System.Activities.BookmarkResumptionResult
- uid: System.Activities.Bookmark
  parent: System.Activities
  isExternal: false
  name: Bookmark
  nameWithType: Bookmark
  fullName: System.Activities.Bookmark
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.ScheduleBookmarkResumption(System.Activities.Bookmark,System.Object,System.Activities.BookmarkScope)
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: ScheduleBookmarkResumption(Bookmark,Object,BookmarkScope)
  nameWithType: WorkflowInstance+WorkflowInstanceControl.ScheduleBookmarkResumption(Bookmark,Object,BookmarkScope)
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.ScheduleBookmarkResumption(Bookmark,Object,BookmarkScope)
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.ScheduleCancel
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: ScheduleCancel()
  nameWithType: WorkflowInstance+WorkflowInstanceControl.ScheduleCancel()
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.ScheduleCancel()
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: State
  nameWithType: WorkflowInstance+WorkflowInstanceControl.State
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.State
- uid: System.Activities.Hosting.WorkflowInstanceState
  parent: System.Activities.Hosting
  isExternal: false
  name: WorkflowInstanceState
  nameWithType: WorkflowInstanceState
  fullName: System.Activities.Hosting.WorkflowInstanceState
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Terminate(System.Exception)
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: Terminate(Exception)
  nameWithType: WorkflowInstance+WorkflowInstanceControl.Terminate(Exception)
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.Terminate(Exception)
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Track(System.Activities.Tracking.WorkflowInstanceRecord)
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: Track(WorkflowInstanceRecord)
  nameWithType: WorkflowInstance+WorkflowInstanceControl.Track(WorkflowInstanceRecord)
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.Track(WorkflowInstanceRecord)
- uid: System.Activities.Tracking.WorkflowInstanceRecord
  parent: System.Activities.Tracking
  isExternal: false
  name: WorkflowInstanceRecord
  nameWithType: WorkflowInstanceRecord
  fullName: System.Activities.Tracking.WorkflowInstanceRecord
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.TrackingEnabled
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: TrackingEnabled
  nameWithType: WorkflowInstance+WorkflowInstanceControl.TrackingEnabled
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl.TrackingEnabled
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort*
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: Abort
  nameWithType: WorkflowInstance+WorkflowInstanceControl.Abort
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.BeginFlushTrackingRecords*
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: BeginFlushTrackingRecords
  nameWithType: WorkflowInstance+WorkflowInstanceControl.BeginFlushTrackingRecords
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.EndFlushTrackingRecords*
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: EndFlushTrackingRecords
  nameWithType: WorkflowInstance+WorkflowInstanceControl.EndFlushTrackingRecords
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Equals*
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: Equals
  nameWithType: WorkflowInstance+WorkflowInstanceControl.Equals
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.FlushTrackingRecords*
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: FlushTrackingRecords
  nameWithType: WorkflowInstance+WorkflowInstanceControl.FlushTrackingRecords
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetAbortReason*
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: GetAbortReason
  nameWithType: WorkflowInstance+WorkflowInstanceControl.GetAbortReason
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetBookmarks*
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: GetBookmarks
  nameWithType: WorkflowInstance+WorkflowInstanceControl.GetBookmarks
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetCompletionState*
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: GetCompletionState
  nameWithType: WorkflowInstance+WorkflowInstanceControl.GetCompletionState
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetHashCode*
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: GetHashCode
  nameWithType: WorkflowInstance+WorkflowInstanceControl.GetHashCode
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.GetMappedVariables*
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: GetMappedVariables
  nameWithType: WorkflowInstance+WorkflowInstanceControl.GetMappedVariables
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.HasPendingTrackingRecords*
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: HasPendingTrackingRecords
  nameWithType: WorkflowInstance+WorkflowInstanceControl.HasPendingTrackingRecords
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.IsPersistable*
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: IsPersistable
  nameWithType: WorkflowInstance+WorkflowInstanceControl.IsPersistable
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.op_Equality*
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: op_Equality
  nameWithType: WorkflowInstance+WorkflowInstanceControl.op_Equality
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.op_Inequality*
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: op_Inequality
  nameWithType: WorkflowInstance+WorkflowInstanceControl.op_Inequality
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable*
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: PauseWhenPersistable
  nameWithType: WorkflowInstance+WorkflowInstanceControl.PauseWhenPersistable
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PrepareForSerialization*
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: PrepareForSerialization
  nameWithType: WorkflowInstance+WorkflowInstanceControl.PrepareForSerialization
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause*
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: RequestPause
  nameWithType: WorkflowInstance+WorkflowInstanceControl.RequestPause
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run*
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: Run
  nameWithType: WorkflowInstance+WorkflowInstanceControl.Run
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.ScheduleBookmarkResumption*
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: ScheduleBookmarkResumption
  nameWithType: WorkflowInstance+WorkflowInstanceControl.ScheduleBookmarkResumption
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.ScheduleCancel*
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: ScheduleCancel
  nameWithType: WorkflowInstance+WorkflowInstanceControl.ScheduleCancel
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State*
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: State
  nameWithType: WorkflowInstance+WorkflowInstanceControl.State
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Terminate*
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: Terminate
  nameWithType: WorkflowInstance+WorkflowInstanceControl.Terminate
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Track*
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: Track
  nameWithType: WorkflowInstance+WorkflowInstanceControl.Track
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.TrackingEnabled*
  parent: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  isExternal: false
  name: TrackingEnabled
  nameWithType: WorkflowInstance+WorkflowInstanceControl.TrackingEnabled
