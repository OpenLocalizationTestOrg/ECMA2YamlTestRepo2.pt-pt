### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription
  id: WebPartDescription
  children:
  - System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor(System.String,System.String,System.String,System.String)
  - System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl
  - System.Web.UI.WebControls.WebParts.WebPartDescription.Description
  - System.Web.UI.WebControls.WebParts.WebPartDescription.ID
  - System.Web.UI.WebControls.WebParts.WebPartDescription.Title
  langs:
  - csharp
  name: WebPartDescription
  nameWithType: WebPartDescription
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription
  type: Class
  summary: "Fornece informações sobre um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlo que pode apresentar no catálogo de peças Web controlos sem ter de criar uma instância do controlo."
  remarks: "Quando <xref:System.Web.UI.WebControls.WebParts.WebPart>controlos são apresentados no catálogo de controlos que podem adicionar utilizadores a uma página, são necessárias algumas informações básicas sobre cada controlo.</xref:System.Web.UI.WebControls.WebParts.WebPart> Por exemplo, é útil ter um título para o controlo e uma descrição, para que como os utilizadores ver um catálogo têm informações suficientes para decidir se pretende adicionar um controlo à página. No entanto, um catálogo de <xref:System.Web.UI.WebControls.WebParts.WebPart>controlos potencialmente podem conter controlos muitos e pode afetar o desempenho de uma aplicação, se uma instância de cada <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo deve ser criado para extrair as informações a apresentar no catálogo.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart>       A classe de WebPartDescription existe, de modo a que não é necessário criar uma instância de um <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo para obter as informações sobre o controlo que é apresentado no catálogo de controlos.</xref:System.Web.UI.WebControls.WebParts.WebPart> No conjunto de controlo de peças Web, um objeto de WebPartDescription também é utilizado em conjunto com várias <xref:System.Web.UI.WebControls.WebParts.CatalogPart>controlos quando uma página no catálogo apresentam modo.</xref:System.Web.UI.WebControls.WebParts.CatalogPart>       A classe de WebPartDescription tem dois sobrecargas do respetivo construtor que assume um <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo como um parâmetro quando estiver disponível uma instância (o <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.%23ctor%2A>construtor), e um que demora vários cadeias com informações sobre o controlo como parâmetros (o <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.%23ctor%2A>construtor).</xref:System.Web.UI.WebControls.WebParts.WebPartDescription.%23ctor%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartDescription.%23ctor%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart>       A classe de WebPartDescription tem também várias propriedades concebidas para conter as informações de descrição para <xref:System.Web.UI.WebControls.WebParts.WebPart>controlos.</xref:System.Web.UI.WebControls.WebParts.WebPart> A tabela seguinte resume as propriedades de WebPartDescription e que propriedade um corresponde a num <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo.</xref:System.Web.UI.WebControls.WebParts.WebPart>      | Propriedade Description | Relacionadas com a propriedade de controlo de parte |   |--------------------------|-----------------------------------|   | <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.ID%2A>| <xref:System.Web.UI.Control.ID%2A>|   | <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Title%2A>| <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A>|   | <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Description%2A>| <xref:System.Web.UI.WebControls.WebParts.Part.Description%2A>|   | <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl%2A>| <xref:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl%2A>|</xref:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl%2A></xref:System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl%2A></xref:System.Web.UI.WebControls.WebParts.Part.Description%2A></xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Description%2A></xref:System.Web.UI.WebControls.WebParts.Part.Title%2A></xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Title%2A></xref:System.Web.UI.Control.ID%2A></xref:System.Web.UI.WebControls.WebParts.WebPartDescription.ID%2A>"
  example:
  - "The following code example demonstrates programmatic use of the WebPartDescription class. Ordinarily, this type is used primarily by the Web Parts control set, but this code example is simply showing basic programmatic usage of the main description properties.  \n  \n The code example has four parts:  \n  \n-   A user control that enables users to change display modes on a Web page.  \n  \n-   A custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  \n  \n-   A Web page to host the other controls.  \n  \n-   An explanation of how the code example works.  \n  \n The first part of the code example is the user control. The source code for the user control comes from another topic. For more details about the user control, see the topic [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartDescription_Overview#7](~/add/codesnippet/csharp/t-system.web.ui.webcontr_125_1.ascx)]\n [!code-vb[WebParts_WebPartDescription_Overview#7](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_125_1.ascx)]  \n  \n The second part of the code example is a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses the approach of dynamic compilation. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartDescription_Overview#3](~/add/codesnippet/csharp/t-system.web.ui.webcontr_125_2.cs)]\n [!code-vb[WebParts_WebPartDescription_Overview#3](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_125_2.vb)]  \n  \n The third part of the code example is the Web page. Near the top are two `Register` directives: one that registers the user control, and the other to register the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control whose source file is located in the App_Code folder of your site. The page contains an `<asp:catalogzone>` element, which in turn contains declarative references to two controls: the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control named `TextDisplayWebPart`, and a <xref:System.Web.UI.WebControls.BulletedList> Web server control that will be treated as a <xref:System.Web.UI.WebControls.WebParts.WebPart> control at run time because the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control will wrap it with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object. Note that in the code for the `Button1_Click` method, the available WebPartDescription objects for the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls in the catalog are retrieved using the <xref:System.Web.UI.WebControls.WebParts.CatalogPart.GetAvailableWebPartDescriptions%2A> method, and then the description details are all written out to the page.  \n  \n [!code-cs[WebParts_WebPartDescription_Overview#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_125_3.aspx)]\n [!code-vb[WebParts_WebPartDescription_Overview#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_125_3.aspx)]  \n  \n After you load the page in a browser, use the **Display Mode** drop-down list control and select **Catalog** to change the page to catalog display mode. In the catalog, you should see the two controls that are available to be added to the page. Click the **List WebPartDescription Information** button, and the code writes out the values of all available WebPartDescription objects to the page. This demonstrates that you can retrieve description details for <xref:System.Web.UI.WebControls.WebParts.WebPart> controls in a catalog without having to create instances of the controls themselves."
  syntax:
    content: public class WebPartDescription
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor(System.Web.UI.WebControls.WebParts.WebPart)
  id: '#ctor(System.Web.UI.WebControls.WebParts.WebPart)'
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  langs:
  - csharp
  name: WebPartDescription(WebPart)
  nameWithType: WebPartDescription.WebPartDescription(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription.WebPartDescription(WebPart)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Inicializa uma nova instância da classe quando um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> instância do controlo está disponível."
  remarks: "O construtor de WebPartDescription é utilizado para criar um novo <xref:System.Web.UI.WebControls.WebParts.WebPartDescription>objeto com base no existente <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartDescription> Este construtor chama simplesmente a sobrecarga, as <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.%23ctor%28System.String%2CSystem.String%2CSystem.String%2CSystem.String%29>construtor, obter os valores de parâmetro necessário a partir das propriedades no `part` parâmetro.</xref:System.Web.UI.WebControls.WebParts.WebPartDescription.%23ctor%28System.String%2CSystem.String%2CSystem.String%2CSystem.String%29>"
  syntax:
    content: public WebPartDescription (System.Web.UI.WebControls.WebParts.WebPart part);
    parameters:
    - id: part
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlo cuja informação está contida num <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDescription&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <xref:System.Web.UI.Control.ID*>propriedade <code> part </code> é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou uma cadeia vazia (&quot;&quot;).</xref:System.Web.UI.Control.ID*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor(System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String)'
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  langs:
  - csharp
  name: WebPartDescription(String,String,String,String)
  nameWithType: WebPartDescription.WebPartDescription(String,String,String,String)
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription.WebPartDescription(String,String,String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Inicializa uma nova instância da classe utilizando vários cadeias que contêm informações de descrição para um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlo."
  remarks: "O construtor de WebPartDescription é utilizado para criar uma nova instância do <xref:System.Web.UI.WebControls.WebParts.WebPartDescription>classe quando um <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo não está disponível.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartDescription> Por exemplo, isto ocorre em case de um <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>controlar quando se importa um ficheiro de descrição para um <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Obtém as informações que necessita para criar um <xref:System.Web.UI.WebControls.WebParts.WebPartDescription>objeto diretamente a partir do ficheiro de descrição e um <xref:System.Web.UI.WebControls.WebParts.WebPart>instância não está presente.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartDescription>"
  syntax:
    content: public WebPartDescription (string id, string title, string description, string imageUrl);
    parameters:
    - id: id
      type: System.String
      description: "O valor para atribuir a <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.ID*>.</xref:System.Web.UI.WebControls.WebParts.WebPartDescription.ID*>"
    - id: title
      type: System.String
      description: "O valor para atribuir a <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Title*>.</xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Title*>"
    - id: description
      type: System.String
      description: "O valor para atribuir a <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Description*>.</xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Description*>"
    - id: imageUrl
      type: System.String
      description: "O valor para atribuir a <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl*>.</xref:System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl*>"
  overload: System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>id</code>ou <code>title</code> é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou uma cadeia vazia (&quot;&quot;)."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl
  id: CatalogIconImageUrl
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  langs:
  - csharp
  name: CatalogIconImageUrl
  nameWithType: WebPartDescription.CatalogIconImageUrl
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém um URL que contém o caminho para uma imagem utilizado como um ícone para um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlo."
  remarks: "A propriedade CatalogIconImageUrl corresponde diretamente para o <xref:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl%2A?displayProperty=fullName>propriedade.</xref:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl%2A?displayProperty=fullName> Se essa propriedade está definida num <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo, em seguida, a propriedade no correspondente <xref:System.Web.UI.WebControls.WebParts.WebPartDescription>objeto também irá ter um valor.</xref:System.Web.UI.WebControls.WebParts.WebPartDescription> </xref:System.Web.UI.WebControls.WebParts.WebPart>       A propriedade CatalogIconImageUrl aplica-se apenas quando uma página está no modo de apresentação do catálogo e um <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo está a ser apresentado no catálogo de controlos.</xref:System.Web.UI.WebControls.WebParts.WebPart> Se o controlo tem um ícone atribuído no valor de propriedade, o ícone é apresentado no catálogo junto ao controlo."
  example:
  - "The following code example demonstrates programmatic use of the CatalogIconImageUrl property. For the full code required to run this code example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> class overview topic.  \n  \n The following code in the `Button1_Click` method of a Web page demonstrates how to get the collection of <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> objects in a catalog using the <xref:System.Web.UI.WebControls.WebParts.CatalogPart.GetAvailableWebPartDescriptions%2A> method, and then to display the details of each <xref:System.Web.UI.WebControls.WebParts.WebPart> control in the catalog by looping through the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> objects. Note that the CatalogIconImageUrl property value is retrieved in the following code.  \n  \n [!code-cs[WebParts_WebPartDescription_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1296_1.aspx)]\n [!code-vb[WebParts_WebPartDescription_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1296_1.aspx)]"
  syntax:
    content: public string CatalogIconImageUrl { get; }
    return:
      type: System.String
      description: "Uma cadeia que contém um URL; o valor predefinido é uma cadeia vazia (&quot;&quot;)."
  overload: System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.Description
  id: Description
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  langs:
  - csharp
  name: Description
  nameWithType: WebPartDescription.Description
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription.Description
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém o texto de uma descrição para um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlo."
  remarks: "A propriedade Description corresponde diretamente para o <xref:System.Web.UI.WebControls.WebParts.Part.Description%2A?displayProperty=fullName>propriedade.</xref:System.Web.UI.WebControls.WebParts.Part.Description%2A?displayProperty=fullName> Se essa propriedade está definida num <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo, em seguida, a propriedade no correspondente <xref:System.Web.UI.WebControls.WebParts.WebPartDescription>objeto também irá ter um valor.</xref:System.Web.UI.WebControls.WebParts.WebPartDescription> </xref:System.Web.UI.WebControls.WebParts.WebPart>       A propriedade Description aplica-se apenas quando uma página está no modo de apresentação do catálogo e um <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo está a ser apresentado no catálogo de controlos.</xref:System.Web.UI.WebControls.WebParts.WebPart> Se o controlo tem uma descrição atribuída, a descrição é apresentado no catálogo como descrição no controlo."
  example:
  - "The following code example demonstrates programmatic use of the Description property. For the full code required to run this code example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> class overview topic.  \n  \n The following code in the `Button1_Click` method of a Web page demonstrates how to get the collection of <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> objects in a catalog using the <xref:System.Web.UI.WebControls.WebParts.CatalogPart.GetAvailableWebPartDescriptions%2A> method, and then to display the details of each <xref:System.Web.UI.WebControls.WebParts.WebPart> control in the catalog by looping through the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> objects. Note that the Description property value is retrieved in the following code.  \n  \n [!code-cs[WebParts_WebPartDescription_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_697_1.aspx)]\n [!code-vb[WebParts_WebPartDescription_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_697_1.aspx)]"
  syntax:
    content: public string Description { get; }
    return:
      type: System.String
      description: "Uma cadeia que contém a descrição para um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlo; a predefinição é de valor de uma cadeia vazia (&quot;&quot;)."
  overload: System.Web.UI.WebControls.WebParts.WebPartDescription.Description*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.ID
  id: ID
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  langs:
  - csharp
  name: ID
  nameWithType: WebPartDescription.ID
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription.ID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém o ID de um correspondente <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlo."
  remarks: "O valor da propriedade de ID não pode ser `null`; sempre tem de ter um valor. A propriedade ID corresponda diretamente para o <xref:System.Web.UI.Control.ID%2A?displayProperty=fullName>propriedade.</xref:System.Web.UI.Control.ID%2A?displayProperty=fullName>       A propriedade de ID aplica-se apenas quando uma página está no modo de apresentação do catálogo e um <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo está a ser apresentado no catálogo de controlos.</xref:System.Web.UI.WebControls.WebParts.WebPart>"
  example:
  - "The following code example demonstrates programmatic use of the ID property. For the full code required to run this code example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> class overview topic.  \n  \n The following code in the `Button1_Click` method of a Web page demonstrates how to get the collection of <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> objects in a catalog using the <xref:System.Web.UI.WebControls.WebParts.CatalogPart.GetAvailableWebPartDescriptions%2A> method, and then to display the details of each <xref:System.Web.UI.WebControls.WebParts.WebPart> control in the catalog by looping through the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> objects. Note that the ID property value is retrieved in the following code.  \n  \n [!code-cs[WebParts_WebPartDescription_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_441_1.aspx)]\n [!code-vb[WebParts_WebPartDescription_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_441_1.aspx)]"
  syntax:
    content: public string ID { get; }
    return:
      type: System.String
      description: "Uma cadeia que contém o ID do controlo."
  overload: System.Web.UI.WebControls.WebParts.WebPartDescription.ID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.Title
  id: Title
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  langs:
  - csharp
  name: Title
  nameWithType: WebPartDescription.Title
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription.Title
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém o texto do título de um correspondente <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controlo."
  remarks: "O valor da propriedade de título corresponde diretamente para o <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A?displayProperty=fullName>propriedade.</xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A?displayProperty=fullName> Qualquer correspondente <xref:System.Web.UI.WebControls.WebParts.WebPart>tem controlo para o respetivo <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A>propriedade, o que torna-se o valor da propriedade de título; caso contrário, o título é um valor calculado.</xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart>       A propriedade de título aplica-se apenas quando uma página está no modo de apresentação do catálogo e um <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo está a ser apresentado no catálogo de controlos.</xref:System.Web.UI.WebControls.WebParts.WebPart> Qualquer título é atribuído a um <xref:System.Web.UI.WebControls.WebParts.WebPart>controlo é apresentado junto ao controlo no catálogo.</xref:System.Web.UI.WebControls.WebParts.WebPart>"
  example:
  - "The following code example demonstrates programmatic use of the Title property. For the full code required to run this code example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> class overview topic.  \n  \n The following code in the `Button1_Click` method of a Web page demonstrates how to get the collection of <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> objects in a catalog using the <xref:System.Web.UI.WebControls.WebParts.CatalogPart.GetAvailableWebPartDescriptions%2A> method, and then to display the details of each <xref:System.Web.UI.WebControls.WebParts.WebPart> control in the catalog by looping through the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> objects. Note that the Title property value is retrieved in the following code.  \n  \n [!code-cs[WebParts_WebPartDescription_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_732_1.aspx)]\n [!code-vb[WebParts_WebPartDescription_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_732_1.aspx)]"
  syntax:
    content: public string Title { get; }
    return:
      type: System.String
      description: "Uma cadeia que contém o título do controlo correspondente. O valor predefinido é uma cadeia calculada fornecida pelo .NET Framework."
  overload: System.Web.UI.WebControls.WebParts.WebPartDescription.Title*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: WebPartDescription(WebPart)
  nameWithType: WebPartDescription.WebPartDescription(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription.WebPartDescription(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPart
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPart
  nameWithType: WebPart
  fullName: System.Web.UI.WebControls.WebParts.WebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor(System.String,System.String,System.String,System.String)
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: WebPartDescription(String,String,String,String)
  nameWithType: WebPartDescription.WebPartDescription(String,String,String,String)
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription.WebPartDescription(String,String,String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: CatalogIconImageUrl
  nameWithType: WebPartDescription.CatalogIconImageUrl
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.Description
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: Description
  nameWithType: WebPartDescription.Description
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription.Description
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.ID
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: ID
  nameWithType: WebPartDescription.ID
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription.ID
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.Title
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: Title
  nameWithType: WebPartDescription.Title
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription.Title
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor*
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: WebPartDescription
  nameWithType: WebPartDescription.WebPartDescription
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl*
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: CatalogIconImageUrl
  nameWithType: WebPartDescription.CatalogIconImageUrl
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.Description*
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: Description
  nameWithType: WebPartDescription.Description
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.ID*
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: ID
  nameWithType: WebPartDescription.ID
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.Title*
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: Title
  nameWithType: WebPartDescription.Title
