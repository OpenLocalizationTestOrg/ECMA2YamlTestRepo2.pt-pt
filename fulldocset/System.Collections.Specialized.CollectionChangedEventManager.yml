### YamlMime:ManagedReference
items:
- uid: System.Collections.Specialized.CollectionChangedEventManager
  id: CollectionChangedEventManager
  children:
  - System.Collections.Specialized.CollectionChangedEventManager.AddHandler(System.Collections.Specialized.INotifyCollectionChanged,System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs})
  - System.Collections.Specialized.CollectionChangedEventManager.AddListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)
  - System.Collections.Specialized.CollectionChangedEventManager.NewListenerList
  - System.Collections.Specialized.CollectionChangedEventManager.RemoveHandler(System.Collections.Specialized.INotifyCollectionChanged,System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs})
  - System.Collections.Specialized.CollectionChangedEventManager.RemoveListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)
  - System.Collections.Specialized.CollectionChangedEventManager.StartListening(System.Object)
  - System.Collections.Specialized.CollectionChangedEventManager.StopListening(System.Object)
  langs:
  - csharp
  name: CollectionChangedEventManager
  nameWithType: CollectionChangedEventManager
  fullName: System.Collections.Specialized.CollectionChangedEventManager
  type: Class
  summary: "Provides a <xref href=&quot;System.Windows.WeakEventManager&quot;></xref> implementation so that you can use the &quot;weak event listener&quot; pattern to attach listeners for the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event."
  remarks: "In order to be listeners in this pattern, your listener objects must implement <xref:System.Windows.IWeakEventListener>. You do not need to implement <xref:System.Windows.IWeakEventListener> on the class that is the source of the events."
  syntax:
    content: 'public class CollectionChangedEventManager : System.Windows.WeakEventManager'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.WeakEventManager
  implements: []
  inheritedMembers:
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  - System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)
  - System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)
  - System.Windows.WeakEventManager.GetCurrentManager(System.Type)
  - System.Windows.WeakEventManager.Item(System.Object)
  - System.Windows.WeakEventManager.ProtectedAddHandler(System.Object,System.Delegate)
  - System.Windows.WeakEventManager.ProtectedAddListener(System.Object,System.Windows.IWeakEventListener)
  - System.Windows.WeakEventManager.ProtectedRemoveHandler(System.Object,System.Delegate)
  - System.Windows.WeakEventManager.ProtectedRemoveListener(System.Object,System.Windows.IWeakEventListener)
  - System.Windows.WeakEventManager.Purge(System.Object,System.Object,System.Boolean)
  - System.Windows.WeakEventManager.ReadLock
  - System.Windows.WeakEventManager.Remove(System.Object)
  - System.Windows.WeakEventManager.ScheduleCleanup
  - System.Windows.WeakEventManager.SetCurrentManager(System.Type,System.Windows.WeakEventManager)
  - System.Windows.WeakEventManager.WriteLock
  platform:
  - net462
- uid: System.Collections.Specialized.CollectionChangedEventManager.AddHandler(System.Collections.Specialized.INotifyCollectionChanged,System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs})
  id: AddHandler(System.Collections.Specialized.INotifyCollectionChanged,System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs})
  parent: System.Collections.Specialized.CollectionChangedEventManager
  langs:
  - csharp
  name: AddHandler(INotifyCollectionChanged,EventHandler<NotifyCollectionChangedEventArgs>)
  nameWithType: CollectionChangedEventManager.AddHandler(INotifyCollectionChanged,EventHandler<NotifyCollectionChangedEventArgs>)
  fullName: System.Collections.Specialized.CollectionChangedEventManager.AddHandler(INotifyCollectionChanged,EventHandler<NotifyCollectionChangedEventArgs>)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Collections.Specialized
  summary: "Adds the specified event handler, which is called when specified source raises the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event."
  syntax:
    content: public static void AddHandler (System.Collections.Specialized.INotifyCollectionChanged source, EventHandler<System.Collections.Specialized.NotifyCollectionChangedEventArgs> handler);
    parameters:
    - id: source
      type: System.Collections.Specialized.INotifyCollectionChanged
      description: "The source object that the raises the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event."
    - id: handler
      type: System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs}
      description: "The delegate that handles the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event."
  overload: System.Collections.Specialized.CollectionChangedEventManager.AddHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.CollectionChangedEventManager.AddListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)
  id: AddListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)
  parent: System.Collections.Specialized.CollectionChangedEventManager
  langs:
  - csharp
  name: AddListener(INotifyCollectionChanged,IWeakEventListener)
  nameWithType: CollectionChangedEventManager.AddListener(INotifyCollectionChanged,IWeakEventListener)
  fullName: System.Collections.Specialized.CollectionChangedEventManager.AddListener(INotifyCollectionChanged,IWeakEventListener)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Collections.Specialized
  summary: "Adds the specified listener to the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event of the specified source."
  syntax:
    content: public static void AddListener (System.Collections.Specialized.INotifyCollectionChanged source, System.Windows.IWeakEventListener listener);
    parameters:
    - id: source
      type: System.Collections.Specialized.INotifyCollectionChanged
      description: "The object with the event."
    - id: listener
      type: System.Windows.IWeakEventListener
      description: "The object to add as a listener."
  overload: System.Collections.Specialized.CollectionChangedEventManager.AddListener*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.CollectionChangedEventManager.NewListenerList
  id: NewListenerList
  parent: System.Collections.Specialized.CollectionChangedEventManager
  langs:
  - csharp
  name: NewListenerList()
  nameWithType: CollectionChangedEventManager.NewListenerList()
  fullName: System.Collections.Specialized.CollectionChangedEventManager.NewListenerList()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Collections.Specialized
  summary: "Returns a new object to contain listeners to the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event."
  syntax:
    content: protected override System.Windows.WeakEventManager.ListenerList NewListenerList ();
    parameters: []
    return:
      type: System.Windows.WeakEventManager.ListenerList
      description: "A new object to contain listeners to the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event."
  overload: System.Collections.Specialized.CollectionChangedEventManager.NewListenerList*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.CollectionChangedEventManager.RemoveHandler(System.Collections.Specialized.INotifyCollectionChanged,System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs})
  id: RemoveHandler(System.Collections.Specialized.INotifyCollectionChanged,System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs})
  parent: System.Collections.Specialized.CollectionChangedEventManager
  langs:
  - csharp
  name: RemoveHandler(INotifyCollectionChanged,EventHandler<NotifyCollectionChangedEventArgs>)
  nameWithType: CollectionChangedEventManager.RemoveHandler(INotifyCollectionChanged,EventHandler<NotifyCollectionChangedEventArgs>)
  fullName: System.Collections.Specialized.CollectionChangedEventManager.RemoveHandler(INotifyCollectionChanged,EventHandler<NotifyCollectionChangedEventArgs>)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Collections.Specialized
  summary: "Removes the specified event handler from the specified source."
  syntax:
    content: public static void RemoveHandler (System.Collections.Specialized.INotifyCollectionChanged source, EventHandler<System.Collections.Specialized.NotifyCollectionChangedEventArgs> handler);
    parameters:
    - id: source
      type: System.Collections.Specialized.INotifyCollectionChanged
      description: "The source object that the raises the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event."
    - id: handler
      type: System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs}
      description: "The delegate that handles the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event."
  overload: System.Collections.Specialized.CollectionChangedEventManager.RemoveHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.CollectionChangedEventManager.RemoveListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)
  id: RemoveListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)
  parent: System.Collections.Specialized.CollectionChangedEventManager
  langs:
  - csharp
  name: RemoveListener(INotifyCollectionChanged,IWeakEventListener)
  nameWithType: CollectionChangedEventManager.RemoveListener(INotifyCollectionChanged,IWeakEventListener)
  fullName: System.Collections.Specialized.CollectionChangedEventManager.RemoveListener(INotifyCollectionChanged,IWeakEventListener)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Collections.Specialized
  summary: "Removes the specified listener from the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event of the specified source."
  syntax:
    content: public static void RemoveListener (System.Collections.Specialized.INotifyCollectionChanged source, System.Windows.IWeakEventListener listener);
    parameters:
    - id: source
      type: System.Collections.Specialized.INotifyCollectionChanged
      description: "The object with the event."
    - id: listener
      type: System.Windows.IWeakEventListener
      description: "The listener to remove."
  overload: System.Collections.Specialized.CollectionChangedEventManager.RemoveListener*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.CollectionChangedEventManager.StartListening(System.Object)
  id: StartListening(System.Object)
  parent: System.Collections.Specialized.CollectionChangedEventManager
  langs:
  - csharp
  name: StartListening(Object)
  nameWithType: CollectionChangedEventManager.StartListening(Object)
  fullName: System.Collections.Specialized.CollectionChangedEventManager.StartListening(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Collections.Specialized
  summary: "Begins listening for the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event on the specified source."
  syntax:
    content: protected override void StartListening (object source);
    parameters:
    - id: source
      type: System.Object
      description: "The object with the event."
  overload: System.Collections.Specialized.CollectionChangedEventManager.StartListening*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.CollectionChangedEventManager.StopListening(System.Object)
  id: StopListening(System.Object)
  parent: System.Collections.Specialized.CollectionChangedEventManager
  langs:
  - csharp
  name: StopListening(Object)
  nameWithType: CollectionChangedEventManager.StopListening(Object)
  fullName: System.Collections.Specialized.CollectionChangedEventManager.StopListening(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Collections.Specialized
  summary: "Stops listening for the <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> event on the specified source."
  syntax:
    content: protected override void StopListening (object source);
    parameters:
    - id: source
      type: System.Object
      description: "The object with the event."
  overload: System.Collections.Specialized.CollectionChangedEventManager.StopListening*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.WeakEventManager
  isExternal: false
  name: System.Windows.WeakEventManager
- uid: System.Collections.Specialized.CollectionChangedEventManager.AddHandler(System.Collections.Specialized.INotifyCollectionChanged,System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs})
  parent: System.Collections.Specialized.CollectionChangedEventManager
  isExternal: false
  name: AddHandler(INotifyCollectionChanged,EventHandler<NotifyCollectionChangedEventArgs>)
  nameWithType: CollectionChangedEventManager.AddHandler(INotifyCollectionChanged,EventHandler<NotifyCollectionChangedEventArgs>)
  fullName: System.Collections.Specialized.CollectionChangedEventManager.AddHandler(INotifyCollectionChanged,EventHandler<NotifyCollectionChangedEventArgs>)
- uid: System.Collections.Specialized.INotifyCollectionChanged
  parent: System.Collections.Specialized
  isExternal: true
  name: INotifyCollectionChanged
  nameWithType: INotifyCollectionChanged
  fullName: System.Collections.Specialized.INotifyCollectionChanged
- uid: System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<NotifyCollectionChangedEventArgs>
  nameWithType: EventHandler<NotifyCollectionChangedEventArgs>
  fullName: System.EventHandler<System.Collections.Specialized.NotifyCollectionChangedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Collections.Specialized.NotifyCollectionChangedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    name: NotifyCollectionChangedEventArgs
    nameWithType: NotifyCollectionChangedEventArgs
    fullName: NotifyCollectionChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Specialized.CollectionChangedEventManager.AddListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)
  parent: System.Collections.Specialized.CollectionChangedEventManager
  isExternal: false
  name: AddListener(INotifyCollectionChanged,IWeakEventListener)
  nameWithType: CollectionChangedEventManager.AddListener(INotifyCollectionChanged,IWeakEventListener)
  fullName: System.Collections.Specialized.CollectionChangedEventManager.AddListener(INotifyCollectionChanged,IWeakEventListener)
- uid: System.Windows.IWeakEventListener
  parent: System.Windows
  isExternal: false
  name: IWeakEventListener
  nameWithType: IWeakEventListener
  fullName: System.Windows.IWeakEventListener
- uid: System.Collections.Specialized.CollectionChangedEventManager.NewListenerList
  parent: System.Collections.Specialized.CollectionChangedEventManager
  isExternal: false
  name: NewListenerList()
  nameWithType: CollectionChangedEventManager.NewListenerList()
  fullName: System.Collections.Specialized.CollectionChangedEventManager.NewListenerList()
- uid: System.Windows.WeakEventManager.ListenerList
  parent: System.Windows
  isExternal: false
  name: WeakEventManager+ListenerList
  nameWithType: WeakEventManager+ListenerList
  fullName: System.Windows.WeakEventManager+ListenerList
- uid: System.Collections.Specialized.CollectionChangedEventManager.RemoveHandler(System.Collections.Specialized.INotifyCollectionChanged,System.EventHandler{System.Collections.Specialized.NotifyCollectionChangedEventArgs})
  parent: System.Collections.Specialized.CollectionChangedEventManager
  isExternal: false
  name: RemoveHandler(INotifyCollectionChanged,EventHandler<NotifyCollectionChangedEventArgs>)
  nameWithType: CollectionChangedEventManager.RemoveHandler(INotifyCollectionChanged,EventHandler<NotifyCollectionChangedEventArgs>)
  fullName: System.Collections.Specialized.CollectionChangedEventManager.RemoveHandler(INotifyCollectionChanged,EventHandler<NotifyCollectionChangedEventArgs>)
- uid: System.Collections.Specialized.CollectionChangedEventManager.RemoveListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)
  parent: System.Collections.Specialized.CollectionChangedEventManager
  isExternal: false
  name: RemoveListener(INotifyCollectionChanged,IWeakEventListener)
  nameWithType: CollectionChangedEventManager.RemoveListener(INotifyCollectionChanged,IWeakEventListener)
  fullName: System.Collections.Specialized.CollectionChangedEventManager.RemoveListener(INotifyCollectionChanged,IWeakEventListener)
- uid: System.Collections.Specialized.CollectionChangedEventManager.StartListening(System.Object)
  parent: System.Collections.Specialized.CollectionChangedEventManager
  isExternal: false
  name: StartListening(Object)
  nameWithType: CollectionChangedEventManager.StartListening(Object)
  fullName: System.Collections.Specialized.CollectionChangedEventManager.StartListening(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Specialized.CollectionChangedEventManager.StopListening(System.Object)
  parent: System.Collections.Specialized.CollectionChangedEventManager
  isExternal: false
  name: StopListening(Object)
  nameWithType: CollectionChangedEventManager.StopListening(Object)
  fullName: System.Collections.Specialized.CollectionChangedEventManager.StopListening(Object)
- uid: System.Collections.Specialized.CollectionChangedEventManager.AddHandler*
  parent: System.Collections.Specialized.CollectionChangedEventManager
  isExternal: false
  name: AddHandler
  nameWithType: CollectionChangedEventManager.AddHandler
- uid: System.Collections.Specialized.CollectionChangedEventManager.AddListener*
  parent: System.Collections.Specialized.CollectionChangedEventManager
  isExternal: false
  name: AddListener
  nameWithType: CollectionChangedEventManager.AddListener
- uid: System.Collections.Specialized.CollectionChangedEventManager.NewListenerList*
  parent: System.Collections.Specialized.CollectionChangedEventManager
  isExternal: false
  name: NewListenerList
  nameWithType: CollectionChangedEventManager.NewListenerList
- uid: System.Collections.Specialized.CollectionChangedEventManager.RemoveHandler*
  parent: System.Collections.Specialized.CollectionChangedEventManager
  isExternal: false
  name: RemoveHandler
  nameWithType: CollectionChangedEventManager.RemoveHandler
- uid: System.Collections.Specialized.CollectionChangedEventManager.RemoveListener*
  parent: System.Collections.Specialized.CollectionChangedEventManager
  isExternal: false
  name: RemoveListener
  nameWithType: CollectionChangedEventManager.RemoveListener
- uid: System.Collections.Specialized.CollectionChangedEventManager.StartListening*
  parent: System.Collections.Specialized.CollectionChangedEventManager
  isExternal: false
  name: StartListening
  nameWithType: CollectionChangedEventManager.StartListening
- uid: System.Collections.Specialized.CollectionChangedEventManager.StopListening*
  parent: System.Collections.Specialized.CollectionChangedEventManager
  isExternal: false
  name: StopListening
  nameWithType: CollectionChangedEventManager.StopListening
