### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1
  id: ClientBase`1.ChannelBase`1
  children:
  - System.ServiceModel.ClientBase`1.ChannelBase`1.#ctor(System.ServiceModel.ClientBase{`1})
  - System.ServiceModel.ClientBase`1.ChannelBase`1.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)
  - System.ServiceModel.ClientBase`1.ChannelBase`1.EndInvoke(System.String,System.Object[],System.IAsyncResult)
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#IDisposable#Dispose
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IChannel#GetProperty``1
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.`1imeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#EndSend(System.IAsyncResult)
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#RemoteAddress
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message)
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message,System.`1imeSpan)
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Via
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.`1imeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#EndRequest(System.IAsyncResult)
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#RemoteAddress
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message)
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message,System.`1imeSpan)
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Via
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#AllowInitializationUI
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#BeginDisplayInitializationUI(System.AsyncCallback,System.Object)
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DidInteractiveInitialization
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DisplayInitializationUI
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#EndDisplayInitializationUI(System.IAsyncResult)
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#Via
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Abort
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.`1imeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.`1imeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close(System.`1imeSpan)
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open(System.`1imeSpan)
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#State
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#AllowOutputBatching
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#InputSession
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#LocalAddress
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OperationTimeout
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OutputSession
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#RemoteAddress
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#SessionId
  - System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IExtensibleObject{System#ServiceModel#IContextChannel}#Extensions
  langs:
  - csharp
  name: ClientBase<TChannel>+ChannelBase<T>
  nameWithType: ClientBase<TChannel>+ChannelBase<T>
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>
  type: Class
  syntax:
    content: 'protected class ClientBase<TChannel>.ChannelBase<T> : IDisposable, System.ServiceModel.Channels.IOutputChannel, System.ServiceModel.Channels.IRequestChannel, System.ServiceModel.IClientChannel, System.ServiceModel.IExtensibleObject<System.ServiceModel.IContextChannel> where TChannel : class where T : class'
    typeParameters:
    - id: TChannel
      description: "To be added."
    - id: T
      description: "To be added."
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.ServiceModel.Channels.IOutputChannel
  - System.ServiceModel.Channels.IRequestChannel
  - System.ServiceModel.IClientChannel
  - System.ServiceModel.IExtensibleObject<System.ServiceModel.IContextChannel>
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.#ctor(System.ServiceModel.ClientBase{`1})
  id: '#ctor(System.ServiceModel.ClientBase{`1})'
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  name: ClientBase(ClientBase<T>)
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.ClientBase(ClientBase<T>)
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.ClientBase(ClientBase<T>)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: protected ChannelBase (System.ServiceModel.ClientBase<T> client);
    parameters:
    - id: client
      type: System.ServiceModel.ClientBase{T}
      description: "To be added."
  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)
  id: BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  name: BeginInvoke(String,Object[],AsyncCallback,Object)
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.BeginInvoke(String,Object[],AsyncCallback,Object)
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.BeginInvoke(String,Object[],AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: protected IAsyncResult BeginInvoke (string methodName, object[] args, AsyncCallback callback, object state);
    parameters:
    - id: methodName
      type: System.String
      description: "To be added."
    - id: args
      type: System.Object[]
      description: "To be added."
    - id: callback
      type: System.AsyncCallback
      description: "To be added."
    - id: state
      type: System.Object
      description: "To be added."
    return:
      type: System.IAsyncResult
      description: "To be added."
  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.BeginInvoke*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.EndInvoke(System.String,System.Object[],System.IAsyncResult)
  id: EndInvoke(System.String,System.Object[],System.IAsyncResult)
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  name: EndInvoke(String,Object[],IAsyncResult)
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.EndInvoke(String,Object[],IAsyncResult)
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.EndInvoke(String,Object[],IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: protected object EndInvoke (string methodName, object[] args, IAsyncResult result);
    parameters:
    - id: methodName
      type: System.String
      description: "To be added."
    - id: args
      type: System.Object[]
      description: "To be added."
    - id: result
      type: System.IAsyncResult
      description: "To be added."
    return:
      type: System.Object
      description: "To be added."
  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.EndInvoke*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  name: System.IDisposable.Dispose()
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.IDisposable.Dispose()
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.IDisposable.Dispose()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#IDisposable#Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IChannel#GetProperty``1
  id: System#ServiceModel#Channels#IChannel#GetProperty``1
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  name: System.ServiceModel.Channels.IChannel.GetProperty()
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IChannel.GetProperty()
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IChannel.GetProperty()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: 'TProperty IChannel.GetProperty<TProperty> () where TProperty : class;'
    parameters: []
    return:
      type: TProperty
      description: "To be added."
  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IChannel#GetProperty<TProperty>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  id: System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  name: System.ServiceModel.Channels.IOutputChannel.BeginSend(Message,AsyncCallback,Object)
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.BeginSend(Message,AsyncCallback,Object)
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.BeginSend(Message,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: IAsyncResult IOutputChannel.BeginSend (System.ServiceModel.Channels.Message message, AsyncCallback callback, object state);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "To be added."
    - id: callback
      type: System.AsyncCallback
      description: "To be added."
    - id: state
      type: System.Object
      description: "To be added."
    return:
      type: System.IAsyncResult
      description: "To be added."
  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.`1imeSpan,System.AsyncCallback,System.Object)
  id: System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.`1imeSpan,System.AsyncCallback,System.Object)
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  name: System.ServiceModel.Channels.IOutputChannel.BeginSend(Message,TimeSpan,AsyncCallback,Object)
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.BeginSend(Message,TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.BeginSend(Message,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: IAsyncResult IOutputChannel.BeginSend (System.ServiceModel.Channels.Message message, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "To be added."
    - id: timeout
      type: System.TimeSpan
      description: "To be added."
    - id: callback
      type: System.AsyncCallback
      description: "To be added."
    - id: state
      type: System.Object
      description: "To be added."
    return:
      type: System.IAsyncResult
      description: "To be added."
  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#EndSend(System.IAsyncResult)
  id: System#ServiceModel#Channels#IOutputChannel#EndSend(System.IAsyncResult)
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  name: System.ServiceModel.Channels.IOutputChannel.EndSend(IAsyncResult)
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.EndSend(IAsyncResult)
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.EndSend(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: void IOutputChannel.EndSend (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "To be added."
  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#EndSend*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#RemoteAddress
  id: System#ServiceModel#Channels#IOutputChannel#RemoteAddress
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  name: System.ServiceModel.Channels.IOutputChannel.RemoteAddress
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.RemoteAddress
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.RemoteAddress
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: System.ServiceModel.EndpointAddress System.ServiceModel.Channels.IOutputChannel.RemoteAddress { get; }
    return:
      type: System.ServiceModel.EndpointAddress
      description: "To be added."
  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#RemoteAddress*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message)
  id: System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message)
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  name: System.ServiceModel.Channels.IOutputChannel.Send(Message)
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.Send(Message)
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.Send(Message)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: void IOutputChannel.Send (System.ServiceModel.Channels.Message message);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "To be added."
  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message,System.`1imeSpan)
  id: System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message,System.`1imeSpan)
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  name: System.ServiceModel.Channels.IOutputChannel.Send(Message,TimeSpan)
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.Send(Message,TimeSpan)
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.Send(Message,TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: void IOutputChannel.Send (System.ServiceModel.Channels.Message message, TimeSpan timeout);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "To be added."
    - id: timeout
      type: System.TimeSpan
      description: "To be added."
  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Via
  id: System#ServiceModel#Channels#IOutputChannel#Via
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  name: System.ServiceModel.Channels.IOutputChannel.Via
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.Via
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.Via
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: Uri System.ServiceModel.Channels.IOutputChannel.Via { get; }
    return:
      type: System.Uri
      description: "To be added."
  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Via*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  id: System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  name: System.ServiceModel.Channels.IRequestChannel.BeginRequest(Message,AsyncCallback,Object)
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.BeginRequest(Message,AsyncCallback,Object)
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.BeginRequest(Message,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: IAsyncResult IRequestChannel.BeginRequest (System.ServiceModel.Channels.Message message, AsyncCallback callback, object state);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "To be added."
    - id: callback
      type: System.AsyncCallback
      description: "To be added."
    - id: state
      type: System.Object
      description: "To be added."
    return:
      type: System.IAsyncResult
      description: "To be added."
  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.`1imeSpan,System.AsyncCallback,System.Object)
  id: System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.`1imeSpan,System.AsyncCallback,System.Object)
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  name: System.ServiceModel.Channels.IRequestChannel.BeginRequest(Message,TimeSpan,AsyncCallback,Object)
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.BeginRequest(Message,TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.BeginRequest(Message,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: IAsyncResult IRequestChannel.BeginRequest (System.ServiceModel.Channels.Message message, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "To be added."
    - id: timeout
      type: System.TimeSpan
      description: "To be added."
    - id: callback
      type: System.AsyncCallback
      description: "To be added."
    - id: state
      type: System.Object
      description: "To be added."
    return:
      type: System.IAsyncResult
      description: "To be added."
  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#EndRequest(System.IAsyncResult)
  id: System#ServiceModel#Channels#IRequestChannel#EndRequest(System.IAsyncResult)
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  name: System.ServiceModel.Channels.IRequestChannel.EndRequest(IAsyncResult)
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.EndRequest(IAsyncResult)
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.EndRequest(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: System.ServiceModel.Channels.Message IRequestChannel.EndRequest (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "To be added."
    return:
      type: System.ServiceModel.Channels.Message
      description: "To be added."
  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#EndRequest*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#RemoteAddress
  id: System#ServiceModel#Channels#IRequestChannel#RemoteAddress
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  name: System.ServiceModel.Channels.IRequestChannel.RemoteAddress
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.RemoteAddress
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.RemoteAddress
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: System.ServiceModel.EndpointAddress System.ServiceModel.Channels.IRequestChannel.RemoteAddress { get; }
    return:
      type: System.ServiceModel.EndpointAddress
      description: "To be added."
  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#RemoteAddress*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message)
  id: System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message)
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  name: System.ServiceModel.Channels.IRequestChannel.Request(Message)
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.Request(Message)
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.Request(Message)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: System.ServiceModel.Channels.Message IRequestChannel.Request (System.ServiceModel.Channels.Message message);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "To be added."
    return:
      type: System.ServiceModel.Channels.Message
      description: "To be added."
  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message,System.`1imeSpan)
  id: System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message,System.`1imeSpan)
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  name: System.ServiceModel.Channels.IRequestChannel.Request(Message,TimeSpan)
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.Request(Message,TimeSpan)
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.Request(Message,TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: System.ServiceModel.Channels.Message IRequestChannel.Request (System.ServiceModel.Channels.Message message, TimeSpan timeout);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "To be added."
    - id: timeout
      type: System.TimeSpan
      description: "To be added."
    return:
      type: System.ServiceModel.Channels.Message
      description: "To be added."
  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Via
  id: System#ServiceModel#Channels#IRequestChannel#Via
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  name: System.ServiceModel.Channels.IRequestChannel.Via
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.Via
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.Via
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: Uri System.ServiceModel.Channels.IRequestChannel.Via { get; }
    return:
      type: System.Uri
      description: "To be added."
  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Via*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#AllowInitializationUI
  id: System#ServiceModel#IClientChannel#AllowInitializationUI
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  name: System.ServiceModel.IClientChannel.AllowInitializationUI
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.AllowInitializationUI
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.AllowInitializationUI
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: bool System.ServiceModel.IClientChannel.AllowInitializationUI { get; set; }
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#AllowInitializationUI*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#BeginDisplayInitializationUI(System.AsyncCallback,System.Object)
  id: System#ServiceModel#IClientChannel#BeginDisplayInitializationUI(System.AsyncCallback,System.Object)
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  name: System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(AsyncCallback,Object)
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(AsyncCallback,Object)
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: IAsyncResult IClientChannel.BeginDisplayInitializationUI (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "To be added."
    - id: state
      type: System.Object
      description: "To be added."
    return:
      type: System.IAsyncResult
      description: "To be added."
  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#BeginDisplayInitializationUI*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DidInteractiveInitialization
  id: System#ServiceModel#IClientChannel#DidInteractiveInitialization
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  name: System.ServiceModel.IClientChannel.DidInteractiveInitialization
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.DidInteractiveInitialization
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.DidInteractiveInitialization
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: bool System.ServiceModel.IClientChannel.DidInteractiveInitialization { get; }
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DidInteractiveInitialization*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DisplayInitializationUI
  id: System#ServiceModel#IClientChannel#DisplayInitializationUI
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  name: System.ServiceModel.IClientChannel.DisplayInitializationUI()
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.DisplayInitializationUI()
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.DisplayInitializationUI()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: void IClientChannel.DisplayInitializationUI ();
    parameters: []
  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DisplayInitializationUI*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#EndDisplayInitializationUI(System.IAsyncResult)
  id: System#ServiceModel#IClientChannel#EndDisplayInitializationUI(System.IAsyncResult)
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  name: System.ServiceModel.IClientChannel.EndDisplayInitializationUI(IAsyncResult)
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.EndDisplayInitializationUI(IAsyncResult)
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.EndDisplayInitializationUI(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: void IClientChannel.EndDisplayInitializationUI (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "To be added."
  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#EndDisplayInitializationUI*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#Via
  id: System#ServiceModel#IClientChannel#Via
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  name: System.ServiceModel.IClientChannel.Via
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.Via
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.Via
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: Uri System.ServiceModel.IClientChannel.Via { get; }
    return:
      type: System.Uri
      description: "To be added."
  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#Via*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Abort
  id: System#ServiceModel#ICommunicationObject#Abort
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  name: System.ServiceModel.ICommunicationObject.Abort()
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.Abort()
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.Abort()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: void ICommunicationObject.Abort ();
    parameters: []
  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Abort*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)
  id: System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  name: System.ServiceModel.ICommunicationObject.BeginClose(AsyncCallback,Object)
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.BeginClose(AsyncCallback,Object)
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.BeginClose(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: IAsyncResult ICommunicationObject.BeginClose (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "To be added."
    - id: state
      type: System.Object
      description: "To be added."
    return:
      type: System.IAsyncResult
      description: "To be added."
  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.`1imeSpan,System.AsyncCallback,System.Object)
  id: System#ServiceModel#ICommunicationObject#BeginClose(System.`1imeSpan,System.AsyncCallback,System.Object)
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  name: System.ServiceModel.ICommunicationObject.BeginClose(TimeSpan,AsyncCallback,Object)
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.BeginClose(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.BeginClose(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: IAsyncResult ICommunicationObject.BeginClose (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "To be added."
    - id: callback
      type: System.AsyncCallback
      description: "To be added."
    - id: state
      type: System.Object
      description: "To be added."
    return:
      type: System.IAsyncResult
      description: "To be added."
  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)
  id: System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  name: System.ServiceModel.ICommunicationObject.BeginOpen(AsyncCallback,Object)
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.BeginOpen(AsyncCallback,Object)
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.BeginOpen(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: IAsyncResult ICommunicationObject.BeginOpen (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "To be added."
    - id: state
      type: System.Object
      description: "To be added."
    return:
      type: System.IAsyncResult
      description: "To be added."
  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.`1imeSpan,System.AsyncCallback,System.Object)
  id: System#ServiceModel#ICommunicationObject#BeginOpen(System.`1imeSpan,System.AsyncCallback,System.Object)
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  name: System.ServiceModel.ICommunicationObject.BeginOpen(TimeSpan,AsyncCallback,Object)
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.BeginOpen(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.BeginOpen(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: IAsyncResult ICommunicationObject.BeginOpen (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "To be added."
    - id: callback
      type: System.AsyncCallback
      description: "To be added."
    - id: state
      type: System.Object
      description: "To be added."
    return:
      type: System.IAsyncResult
      description: "To be added."
  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close
  id: System#ServiceModel#ICommunicationObject#Close
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  name: System.ServiceModel.ICommunicationObject.Close()
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.Close()
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.Close()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: void ICommunicationObject.Close ();
    parameters: []
  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close(System.`1imeSpan)
  id: System#ServiceModel#ICommunicationObject#Close(System.`1imeSpan)
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  name: System.ServiceModel.ICommunicationObject.Close(TimeSpan)
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.Close(TimeSpan)
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.Close(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: void ICommunicationObject.Close (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "To be added."
  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)
  id: System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  name: System.ServiceModel.ICommunicationObject.EndClose(IAsyncResult)
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.EndClose(IAsyncResult)
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.EndClose(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: void ICommunicationObject.EndClose (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "To be added."
  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)
  id: System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  name: System.ServiceModel.ICommunicationObject.EndOpen(IAsyncResult)
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.EndOpen(IAsyncResult)
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.EndOpen(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: void ICommunicationObject.EndOpen (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "To be added."
  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndOpen*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open
  id: System#ServiceModel#ICommunicationObject#Open
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  name: System.ServiceModel.ICommunicationObject.Open()
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.Open()
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.Open()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: void ICommunicationObject.Open ();
    parameters: []
  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open(System.`1imeSpan)
  id: System#ServiceModel#ICommunicationObject#Open(System.`1imeSpan)
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  name: System.ServiceModel.ICommunicationObject.Open(TimeSpan)
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.Open(TimeSpan)
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.Open(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: void ICommunicationObject.Open (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "To be added."
  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#State
  id: System#ServiceModel#ICommunicationObject#State
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  name: System.ServiceModel.ICommunicationObject.State
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.State
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.State
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: System.ServiceModel.CommunicationState System.ServiceModel.ICommunicationObject.State { get; }
    return:
      type: System.ServiceModel.CommunicationState
      description: "To be added."
  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#State*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#AllowOutputBatching
  id: System#ServiceModel#IContextChannel#AllowOutputBatching
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  name: System.ServiceModel.IContextChannel.AllowOutputBatching
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.AllowOutputBatching
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.AllowOutputBatching
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: bool System.ServiceModel.IContextChannel.AllowOutputBatching { get; set; }
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#AllowOutputBatching*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#InputSession
  id: System#ServiceModel#IContextChannel#InputSession
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  name: System.ServiceModel.IContextChannel.InputSession
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.InputSession
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.InputSession
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: System.ServiceModel.Channels.IInputSession System.ServiceModel.IContextChannel.InputSession { get; }
    return:
      type: System.ServiceModel.Channels.IInputSession
      description: "To be added."
  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#InputSession*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#LocalAddress
  id: System#ServiceModel#IContextChannel#LocalAddress
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  name: System.ServiceModel.IContextChannel.LocalAddress
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.LocalAddress
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.LocalAddress
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: System.ServiceModel.EndpointAddress System.ServiceModel.IContextChannel.LocalAddress { get; }
    return:
      type: System.ServiceModel.EndpointAddress
      description: "To be added."
  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#LocalAddress*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OperationTimeout
  id: System#ServiceModel#IContextChannel#OperationTimeout
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  name: System.ServiceModel.IContextChannel.OperationTimeout
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.OperationTimeout
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.OperationTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: TimeSpan System.ServiceModel.IContextChannel.OperationTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "To be added."
  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OperationTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OutputSession
  id: System#ServiceModel#IContextChannel#OutputSession
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  name: System.ServiceModel.IContextChannel.OutputSession
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.OutputSession
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.OutputSession
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: System.ServiceModel.Channels.IOutputSession System.ServiceModel.IContextChannel.OutputSession { get; }
    return:
      type: System.ServiceModel.Channels.IOutputSession
      description: "To be added."
  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OutputSession*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#RemoteAddress
  id: System#ServiceModel#IContextChannel#RemoteAddress
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  name: System.ServiceModel.IContextChannel.RemoteAddress
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.RemoteAddress
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.RemoteAddress
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: System.ServiceModel.EndpointAddress System.ServiceModel.IContextChannel.RemoteAddress { get; }
    return:
      type: System.ServiceModel.EndpointAddress
      description: "To be added."
  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#RemoteAddress*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#SessionId
  id: System#ServiceModel#IContextChannel#SessionId
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  name: System.ServiceModel.IContextChannel.SessionId
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.SessionId
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.SessionId
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: string System.ServiceModel.IContextChannel.SessionId { get; }
    return:
      type: System.String
      description: "To be added."
  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#SessionId*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IExtensibleObject{System#ServiceModel#IContextChannel}#Extensions
  id: System#ServiceModel#IExtensibleObject{System#ServiceModel#IContextChannel}#Extensions
  isEii: true
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  langs:
  - csharp
  name: System.ServiceModel.IExtensibleObject
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IExtensibleObject
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IExtensibleObject
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  syntax:
    content: System.ServiceModel.IExtensionCollection<System.ServiceModel.IContextChannel> System.ServiceModel.IExtensibleObject<System.ServiceModel.IContextChannel>.Extensions { get; }
    return:
      type: System.ServiceModel.IExtensionCollection{System.ServiceModel.IContextChannel}
      description: "To be added."
  overload: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IExtensibleObject<System#ServiceModel#IContextChannel>#Extensions*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.#ctor(System.ServiceModel.ClientBase{`1})
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: ClientBase(ClientBase<T>)
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.ClientBase(ClientBase<T>)
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.ClientBase(ClientBase<T>)
- uid: System.ServiceModel.ClientBase{T}
  parent: System.ServiceModel
  isExternal: true
  name: ClientBase<T>
  nameWithType: ClientBase<T>
  fullName: System.ServiceModel.ClientBase<T>
  spec.csharp:
  - uid: System.ServiceModel.ClientBase`1
    name: ClientBase
    nameWithType: ClientBase
    fullName: ClientBase<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: BeginInvoke(String,Object[],AsyncCallback,Object)
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.BeginInvoke(String,Object[],AsyncCallback,Object)
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.BeginInvoke(String,Object[],AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.EndInvoke(System.String,System.Object[],System.IAsyncResult)
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: EndInvoke(String,Object[],IAsyncResult)
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.EndInvoke(String,Object[],IAsyncResult)
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.EndInvoke(String,Object[],IAsyncResult)
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#IDisposable#Dispose
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.IDisposable.Dispose()
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.IDisposable.Dispose()
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.IDisposable.Dispose()
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IChannel#GetProperty``1
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.Channels.IChannel.GetProperty()
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IChannel.GetProperty()
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IChannel.GetProperty()
- uid: TProperty
  isExternal: true
  name: TProperty
  nameWithType: TProperty
  fullName: TProperty
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.Channels.IOutputChannel.BeginSend(Message,AsyncCallback,Object)
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.BeginSend(Message,AsyncCallback,Object)
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.BeginSend(Message,AsyncCallback,Object)
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend(System.ServiceModel.Channels.Message,System.`1imeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.Channels.IOutputChannel.BeginSend(Message,TimeSpan,AsyncCallback,Object)
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.BeginSend(Message,TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.BeginSend(Message,TimeSpan,AsyncCallback,Object)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#EndSend(System.IAsyncResult)
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.Channels.IOutputChannel.EndSend(IAsyncResult)
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.EndSend(IAsyncResult)
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.EndSend(IAsyncResult)
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#RemoteAddress
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.Channels.IOutputChannel.RemoteAddress
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.RemoteAddress
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.RemoteAddress
- uid: System.ServiceModel.EndpointAddress
  parent: System.ServiceModel
  isExternal: true
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.Channels.IOutputChannel.Send(Message)
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.Send(Message)
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.Send(Message)
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send(System.ServiceModel.Channels.Message,System.`1imeSpan)
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.Channels.IOutputChannel.Send(Message,TimeSpan)
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.Send(Message,TimeSpan)
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.Send(Message,TimeSpan)
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Via
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.Channels.IOutputChannel.Via
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.Via
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.Via
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.Channels.IRequestChannel.BeginRequest(Message,AsyncCallback,Object)
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.BeginRequest(Message,AsyncCallback,Object)
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.BeginRequest(Message,AsyncCallback,Object)
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest(System.ServiceModel.Channels.Message,System.`1imeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.Channels.IRequestChannel.BeginRequest(Message,TimeSpan,AsyncCallback,Object)
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.BeginRequest(Message,TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.BeginRequest(Message,TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#EndRequest(System.IAsyncResult)
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.Channels.IRequestChannel.EndRequest(IAsyncResult)
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.EndRequest(IAsyncResult)
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.EndRequest(IAsyncResult)
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#RemoteAddress
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.Channels.IRequestChannel.RemoteAddress
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.RemoteAddress
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.RemoteAddress
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.Channels.IRequestChannel.Request(Message)
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.Request(Message)
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.Request(Message)
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request(System.ServiceModel.Channels.Message,System.`1imeSpan)
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.Channels.IRequestChannel.Request(Message,TimeSpan)
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.Request(Message,TimeSpan)
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.Request(Message,TimeSpan)
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Via
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.Channels.IRequestChannel.Via
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.Via
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.Via
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#AllowInitializationUI
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.IClientChannel.AllowInitializationUI
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.AllowInitializationUI
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.AllowInitializationUI
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#BeginDisplayInitializationUI(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(AsyncCallback,Object)
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(AsyncCallback,Object)
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(AsyncCallback,Object)
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DidInteractiveInitialization
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.IClientChannel.DidInteractiveInitialization
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.DidInteractiveInitialization
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.DidInteractiveInitialization
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DisplayInitializationUI
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.IClientChannel.DisplayInitializationUI()
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.DisplayInitializationUI()
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.DisplayInitializationUI()
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#EndDisplayInitializationUI(System.IAsyncResult)
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.IClientChannel.EndDisplayInitializationUI(IAsyncResult)
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.EndDisplayInitializationUI(IAsyncResult)
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.EndDisplayInitializationUI(IAsyncResult)
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#Via
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.IClientChannel.Via
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.Via
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.Via
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Abort
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.ICommunicationObject.Abort()
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.Abort()
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.Abort()
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.ICommunicationObject.BeginClose(AsyncCallback,Object)
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.BeginClose(AsyncCallback,Object)
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.BeginClose(AsyncCallback,Object)
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.`1imeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.ICommunicationObject.BeginClose(TimeSpan,AsyncCallback,Object)
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.BeginClose(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.BeginClose(TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.ICommunicationObject.BeginOpen(AsyncCallback,Object)
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.BeginOpen(AsyncCallback,Object)
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.BeginOpen(AsyncCallback,Object)
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.`1imeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.ICommunicationObject.BeginOpen(TimeSpan,AsyncCallback,Object)
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.BeginOpen(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.BeginOpen(TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.ICommunicationObject.Close()
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.Close()
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.Close()
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close(System.`1imeSpan)
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.ICommunicationObject.Close(TimeSpan)
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.Close(TimeSpan)
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.Close(TimeSpan)
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.ICommunicationObject.EndClose(IAsyncResult)
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.EndClose(IAsyncResult)
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.EndClose(IAsyncResult)
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.ICommunicationObject.EndOpen(IAsyncResult)
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.EndOpen(IAsyncResult)
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.EndOpen(IAsyncResult)
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.ICommunicationObject.Open()
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.Open()
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.Open()
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open(System.`1imeSpan)
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.ICommunicationObject.Open(TimeSpan)
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.Open(TimeSpan)
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.Open(TimeSpan)
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#State
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.ICommunicationObject.State
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.State
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.State
- uid: System.ServiceModel.CommunicationState
  parent: System.ServiceModel
  isExternal: true
  name: CommunicationState
  nameWithType: CommunicationState
  fullName: System.ServiceModel.CommunicationState
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#AllowOutputBatching
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.IContextChannel.AllowOutputBatching
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.AllowOutputBatching
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.AllowOutputBatching
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#InputSession
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.IContextChannel.InputSession
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.InputSession
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.InputSession
- uid: System.ServiceModel.Channels.IInputSession
  parent: System.ServiceModel.Channels
  isExternal: true
  name: IInputSession
  nameWithType: IInputSession
  fullName: System.ServiceModel.Channels.IInputSession
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#LocalAddress
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.IContextChannel.LocalAddress
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.LocalAddress
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.LocalAddress
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OperationTimeout
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.IContextChannel.OperationTimeout
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.OperationTimeout
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.OperationTimeout
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OutputSession
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.IContextChannel.OutputSession
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.OutputSession
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.OutputSession
- uid: System.ServiceModel.Channels.IOutputSession
  parent: System.ServiceModel.Channels
  isExternal: true
  name: IOutputSession
  nameWithType: IOutputSession
  fullName: System.ServiceModel.Channels.IOutputSession
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#RemoteAddress
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.IContextChannel.RemoteAddress
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.RemoteAddress
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.RemoteAddress
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#SessionId
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.IContextChannel.SessionId
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.SessionId
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.SessionId
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IExtensibleObject{System#ServiceModel#IContextChannel}#Extensions
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.IExtensibleObject
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IExtensibleObject
  fullName: System.ServiceModel.ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IExtensibleObject
- uid: System.ServiceModel.IExtensionCollection{System.ServiceModel.IContextChannel}
  parent: System.ServiceModel
  isExternal: true
  name: IExtensionCollection<IContextChannel>
  nameWithType: IExtensionCollection<IContextChannel>
  fullName: System.ServiceModel.IExtensionCollection<System.ServiceModel.IContextChannel>
  spec.csharp:
  - uid: System.ServiceModel.IExtensionCollection`1
    name: IExtensionCollection
    nameWithType: IExtensionCollection
    fullName: IExtensionCollection<System.ServiceModel.IContextChannel>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.IContextChannel
    name: IContextChannel
    nameWithType: IContextChannel
    fullName: IContextChannel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.#ctor*
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: ClientBase<TChannel>+ChannelBase<T>
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.ClientBase<TChannel>+ChannelBase<T>
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.BeginInvoke*
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: BeginInvoke
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.BeginInvoke
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.EndInvoke*
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: EndInvoke
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.EndInvoke
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#IDisposable#Dispose*
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.IDisposable.Dispose
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IChannel#GetProperty<TProperty>*
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.Channels.IChannel.GetProperty<TProperty>
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IChannel.GetProperty<TProperty>
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#BeginSend*
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.Channels.IOutputChannel.BeginSend
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.BeginSend
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#EndSend*
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.Channels.IOutputChannel.EndSend
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.EndSend
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#RemoteAddress*
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.Channels.IOutputChannel.RemoteAddress
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.RemoteAddress
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Send*
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.Channels.IOutputChannel.Send
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.Send
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IOutputChannel#Via*
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.Channels.IOutputChannel.Via
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IOutputChannel.Via
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#BeginRequest*
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.Channels.IRequestChannel.BeginRequest
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.BeginRequest
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#EndRequest*
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.Channels.IRequestChannel.EndRequest
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.EndRequest
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#RemoteAddress*
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.Channels.IRequestChannel.RemoteAddress
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.RemoteAddress
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Request*
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.Channels.IRequestChannel.Request
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.Request
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#Channels#IRequestChannel#Via*
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.Channels.IRequestChannel.Via
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.Channels.IRequestChannel.Via
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#AllowInitializationUI*
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.IClientChannel.AllowInitializationUI
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.AllowInitializationUI
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#BeginDisplayInitializationUI*
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.IClientChannel.BeginDisplayInitializationUI
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.BeginDisplayInitializationUI
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DidInteractiveInitialization*
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.IClientChannel.DidInteractiveInitialization
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.DidInteractiveInitialization
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#DisplayInitializationUI*
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.IClientChannel.DisplayInitializationUI
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.DisplayInitializationUI
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#EndDisplayInitializationUI*
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.IClientChannel.EndDisplayInitializationUI
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.EndDisplayInitializationUI
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IClientChannel#Via*
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.IClientChannel.Via
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IClientChannel.Via
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Abort*
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.ICommunicationObject.Abort
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.Abort
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginClose*
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.ICommunicationObject.BeginClose
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.BeginClose
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#BeginOpen*
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.ICommunicationObject.BeginOpen
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.BeginOpen
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Close*
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.ICommunicationObject.Close
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.Close
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndClose*
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.ICommunicationObject.EndClose
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.EndClose
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#EndOpen*
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.ICommunicationObject.EndOpen
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.EndOpen
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#Open*
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.ICommunicationObject.Open
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.Open
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#ICommunicationObject#State*
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.ICommunicationObject.State
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.ICommunicationObject.State
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#AllowOutputBatching*
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.IContextChannel.AllowOutputBatching
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.AllowOutputBatching
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#InputSession*
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.IContextChannel.InputSession
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.InputSession
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#LocalAddress*
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.IContextChannel.LocalAddress
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.LocalAddress
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OperationTimeout*
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.IContextChannel.OperationTimeout
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.OperationTimeout
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#OutputSession*
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.IContextChannel.OutputSession
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.OutputSession
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#RemoteAddress*
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.IContextChannel.RemoteAddress
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.RemoteAddress
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IContextChannel#SessionId*
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.IContextChannel.SessionId
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IContextChannel.SessionId
- uid: System.ServiceModel.ClientBase`1.ChannelBase`1.System#ServiceModel#IExtensibleObject<System#ServiceModel#IContextChannel>#Extensions*
  parent: System.ServiceModel.ClientBase`1.ChannelBase`1
  isExternal: false
  name: System.ServiceModel.IExtensibleObject<System.ServiceModel.IContextChannel>.Extensions
  nameWithType: ClientBase<TChannel>+ChannelBase<T>.System.ServiceModel.IExtensibleObject<System.ServiceModel.IContextChannel>.Extensions
