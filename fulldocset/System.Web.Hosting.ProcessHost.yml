### YamlMime:ManagedReference
items:
- uid: System.Web.Hosting.ProcessHost
  id: ProcessHost
  children:
  - System.Web.Hosting.ProcessHost.EnumerateAppDomains(System.Web.Hosting.IAppDomainInfoEnum@)
  - System.Web.Hosting.ProcessHost.InitializeLifetimeService
  - System.Web.Hosting.ProcessHost.IsIdle
  - System.Web.Hosting.ProcessHost.Ping(System.Web.Hosting.IProcessPingCallback)
  - System.Web.Hosting.ProcessHost.SetApplicationPreloadState(System.String,System.String,System.Boolean)
  - System.Web.Hosting.ProcessHost.SetApplicationPreloadUtil(System.Web.Hosting.IApplicationPreloadUtil)
  - System.Web.Hosting.ProcessHost.Shutdown
  - System.Web.Hosting.ProcessHost.ShutdownApplication(System.String)
  - System.Web.Hosting.ProcessHost.StartAppDomainProtocolListenerChannel(System.String,System.String,System.Web.Hosting.IListenerChannelCallback)
  - System.Web.Hosting.ProcessHost.StartApplication(System.String,System.String,System.Object@)
  - System.Web.Hosting.ProcessHost.StartProcessProtocolListenerChannel(System.String,System.Web.Hosting.IListenerChannelCallback)
  - System.Web.Hosting.ProcessHost.StopAppDomainProtocol(System.String,System.String,System.Boolean)
  - System.Web.Hosting.ProcessHost.StopAppDomainProtocolListenerChannel(System.String,System.String,System.Int32,System.Boolean)
  - System.Web.Hosting.ProcessHost.StopProcessProtocol(System.String,System.Boolean)
  - System.Web.Hosting.ProcessHost.StopProcessProtocolListenerChannel(System.String,System.Int32,System.Boolean)
  langs:
  - csharp
  name: ProcessHost
  nameWithType: ProcessHost
  fullName: System.Web.Hosting.ProcessHost
  type: Class
  summary: "Representa um anfitrião do processo."
  remarks: "ProcessHost é introduzida no [!INCLUDE[net_v35_long](~/add/includes/ajax-current-ext-md.md)]. Para obter mais informações, consulte [versões e dependências](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: 'public sealed class ProcessHost : MarshalByRefObject, System.Web.Hosting.IAdphManager, System.Web.Hosting.IApplicationPreloadManager, System.Web.Hosting.IPphManager, System.Web.Hosting.IProcessHost, System.Web.Hosting.IProcessHostIdleAndHealthCheck'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.Web.Hosting.IAdphManager
  - System.Web.Hosting.IApplicationPreloadManager
  - System.Web.Hosting.IPphManager
  - System.Web.Hosting.IProcessHost
  - System.Web.Hosting.IProcessHostIdleAndHealthCheck
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Web.Hosting.ProcessHost.EnumerateAppDomains(System.Web.Hosting.IAppDomainInfoEnum@)
  id: EnumerateAppDomains(System.Web.Hosting.IAppDomainInfoEnum@)
  parent: System.Web.Hosting.ProcessHost
  langs:
  - csharp
  name: EnumerateAppDomains(IAppDomainInfoEnum)
  nameWithType: ProcessHost.EnumerateAppDomains(IAppDomainInfoEnum)
  fullName: System.Web.Hosting.ProcessHost.EnumerateAppDomains(IAppDomainInfoEnum)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Fornece acesso a um conjunto enumeráveis de domínios de aplicação."
  syntax:
    content: public void EnumerateAppDomains (out System.Web.Hosting.IAppDomainInfoEnum appDomainInfoEnum);
    parameters:
    - id: appDomainInfoEnum
      type: System.Web.Hosting.IAppDomainInfoEnum
      description: "Informações sobre os domínios de aplicação."
  overload: System.Web.Hosting.ProcessHost.EnumerateAppDomains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.ProcessHost.InitializeLifetimeService
  id: InitializeLifetimeService
  parent: System.Web.Hosting.ProcessHost
  langs:
  - csharp
  name: InitializeLifetimeService()
  nameWithType: ProcessHost.InitializeLifetimeService()
  fullName: System.Web.Hosting.ProcessHost.InitializeLifetimeService()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Fornece o anfitrião do processo uma duração infinita por a impedir que uma concessão a ser criada."
  remarks: "InitializeLifetimeService é introduzida no [!INCLUDE[net_v35_long](~/add/includes/ajax-current-ext-md.md)]. Para obter mais informações, consulte [versões e dependências](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override object InitializeLifetimeService ();
    parameters: []
    return:
      type: System.Object
      description: "Devolve um <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> valor a indicar que nunca expira a concessão."
  overload: System.Web.Hosting.ProcessHost.InitializeLifetimeService*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.ProcessHost.IsIdle
  id: IsIdle
  parent: System.Web.Hosting.ProcessHost
  langs:
  - csharp
  name: IsIdle()
  nameWithType: ProcessHost.IsIdle()
  fullName: System.Web.Hosting.ProcessHost.IsIdle()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Obtém o estado de um processo."
  remarks: "IsIdle é introduzida no [!INCLUDE[net_v35_long](~/add/includes/ajax-current-ext-md.md)]. Para obter mais informações, consulte [versões e dependências](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool IsIdle ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o anfitrião do processo está inativo; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Hosting.ProcessHost.IsIdle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.ProcessHost.Ping(System.Web.Hosting.IProcessPingCallback)
  id: Ping(System.Web.Hosting.IProcessPingCallback)
  parent: System.Web.Hosting.ProcessHost
  langs:
  - csharp
  name: Ping(IProcessPingCallback)
  nameWithType: ProcessHost.Ping(IProcessPingCallback)
  fullName: System.Web.Hosting.ProcessHost.Ping(IProcessPingCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Um processo efetua o ping."
  remarks: "Ping é introduzido no [!INCLUDE[net_v35_long](~/add/includes/ajax-current-ext-md.md)]. Para obter mais informações, consulte [versões e dependências](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void Ping (System.Web.Hosting.IProcessPingCallback callback);
    parameters:
    - id: callback
      type: System.Web.Hosting.IProcessPingCallback
      description: "A chamada de retorno para processar a resposta do ping."
  overload: System.Web.Hosting.ProcessHost.Ping*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.ProcessHost.SetApplicationPreloadState(System.String,System.String,System.Boolean)
  id: SetApplicationPreloadState(System.String,System.String,System.Boolean)
  parent: System.Web.Hosting.ProcessHost
  langs:
  - csharp
  name: SetApplicationPreloadState(String,String,Boolean)
  nameWithType: ProcessHost.SetApplicationPreloadState(String,String,Boolean)
  fullName: System.Web.Hosting.ProcessHost.SetApplicationPreloadState(String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Notifica ASP.NET que uma aplicação específica que está em execução no [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] está configurado para ser pré-carregada."
  remarks: "Este método implementa o <xref:System.Web.Hosting.IApplicationPreloadManager.SetApplicationPreloadState%2A>método o <xref:System.Web.Hosting.IApplicationPreloadManager>interface.</xref:System.Web.Hosting.IApplicationPreloadManager> </xref:System.Web.Hosting.IApplicationPreloadManager.SetApplicationPreloadState%2A> [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)]as chamadas a <xref:System.Web.Hosting.IApplicationPreloadManager.SetApplicationPreloadState%2A>método notificar ASP.NET se a aplicação que está a ser carregada suporta o pré-carregamento da.</xref:System.Web.Hosting.IApplicationPreloadManager.SetApplicationPreloadState%2A>      > [!NOTE] > Este método só se aplica a aplicações que são executadas no [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)]."
  syntax:
    content: public void SetApplicationPreloadState (string context, string appId, bool enabled);
    parameters:
    - id: context
      type: System.String
      description: "O contexto de aplicação."
    - id: appId
      type: System.String
      description: "O ID exclusivo da aplicação."
    - id: enabled
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para indicar a aplicação deve ser pré-carregado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Hosting.ProcessHost.SetApplicationPreloadState*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>enabled</code>está definido como <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> e o anfitrião do processo não foi anteriormente transmitido um <xref href=&quot;System.Web.Hosting.IApplicationPreloadUtil&quot;> </xref> interface para o <xref:System.Web.Hosting.IApplicationPreloadManager.SetApplicationPreloadUtil*> método"
  platform:
  - net462
- uid: System.Web.Hosting.ProcessHost.SetApplicationPreloadUtil(System.Web.Hosting.IApplicationPreloadUtil)
  id: SetApplicationPreloadUtil(System.Web.Hosting.IApplicationPreloadUtil)
  parent: System.Web.Hosting.ProcessHost
  langs:
  - csharp
  name: SetApplicationPreloadUtil(IApplicationPreloadUtil)
  nameWithType: ProcessHost.SetApplicationPreloadUtil(IApplicationPreloadUtil)
  fullName: System.Web.Hosting.ProcessHost.SetApplicationPreloadUtil(IApplicationPreloadUtil)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Cria um tipo que chama [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] para obter informações que são necessárias para pré-carregar uma aplicação."
  remarks: "Este método implementa o <xref:System.Web.Hosting.IApplicationPreloadManager.SetApplicationPreloadUtil%2A>método o <xref:System.Web.Hosting.IApplicationPreloadManager>interface.</xref:System.Web.Hosting.IApplicationPreloadManager> </xref:System.Web.Hosting.IApplicationPreloadManager.SetApplicationPreloadUtil%2A> O método cria uma instância do <xref:System.Web.Hosting.IApplicationPreloadUtil>tipo, que chama para [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] para obter o pré-carregamento de informações.</xref:System.Web.Hosting.IApplicationPreloadUtil>      > [!NOTE] > Este método só se aplica a aplicações que são executadas no [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)]."
  syntax:
    content: public void SetApplicationPreloadUtil (System.Web.Hosting.IApplicationPreloadUtil applicationPreloadUtil);
    parameters:
    - id: applicationPreloadUtil
      type: System.Web.Hosting.IApplicationPreloadUtil
      description: "O identificador de uma interface não gerido em [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] que ASP.NET chama-se para obter informações."
  overload: System.Web.Hosting.ProcessHost.SetApplicationPreloadUtil*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <xref href=&quot;System.Web.Hosting.IApplicationPreloadUtil&quot;> </xref> instância que contém informações para o pré-carregamento da aplicação não é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.Hosting.ProcessHost.Shutdown
  id: Shutdown
  parent: System.Web.Hosting.ProcessHost
  langs:
  - csharp
  name: Shutdown()
  nameWithType: ProcessHost.Shutdown()
  fullName: System.Web.Hosting.ProcessHost.Shutdown()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Efetua a descarga de anfitrião do processo."
  syntax:
    content: public void Shutdown ();
    parameters: []
  overload: System.Web.Hosting.ProcessHost.Shutdown*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.ProcessHost.ShutdownApplication(System.String)
  id: ShutdownApplication(System.String)
  parent: System.Web.Hosting.ProcessHost
  langs:
  - csharp
  name: ShutdownApplication(String)
  nameWithType: ProcessHost.ShutdownApplication(String)
  fullName: System.Web.Hosting.ProcessHost.ShutdownApplication(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Será encerrado a aplicação especificada."
  remarks: "ShutdownApplication é introduzida no [!INCLUDE[net_v35_long](~/add/includes/ajax-current-ext-md.md)]. Para obter mais informações, consulte [versões e dependências](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void ShutdownApplication (string appId);
    parameters:
    - id: appId
      type: System.String
      description: "O identificador exclusivo da aplicação a encerrar."
  overload: System.Web.Hosting.ProcessHost.ShutdownApplication*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.ProcessHost.StartAppDomainProtocolListenerChannel(System.String,System.String,System.Web.Hosting.IListenerChannelCallback)
  id: StartAppDomainProtocolListenerChannel(System.String,System.String,System.Web.Hosting.IListenerChannelCallback)
  parent: System.Web.Hosting.ProcessHost
  langs:
  - csharp
  name: StartAppDomainProtocolListenerChannel(String,String,IListenerChannelCallback)
  nameWithType: ProcessHost.StartAppDomainProtocolListenerChannel(String,String,IListenerChannelCallback)
  fullName: System.Web.Hosting.ProcessHost.StartAppDomainProtocolListenerChannel(String,String,IListenerChannelCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Inicia um canal de escuta de protocolos de domínio de aplicação."
  syntax:
    content: public void StartAppDomainProtocolListenerChannel (string appId, string protocolId, System.Web.Hosting.IListenerChannelCallback listenerChannelCallback);
    parameters:
    - id: appId
      type: System.String
      description: "O ID da aplicação."
    - id: protocolId
      type: System.String
      description: "O ID de protocolo."
    - id: listenerChannelCallback
      type: System.Web.Hosting.IListenerChannelCallback
      description: "A protocolo serviço de escuta canal chamada de retorno."
  overload: System.Web.Hosting.ProcessHost.StartAppDomainProtocolListenerChannel*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.ProcessHost.StartApplication(System.String,System.String,System.Object@)
  id: StartApplication(System.String,System.String,System.Object@)
  parent: System.Web.Hosting.ProcessHost
  langs:
  - csharp
  name: StartApplication(String,String,Object)
  nameWithType: ProcessHost.StartApplication(String,String,Object)
  fullName: System.Web.Hosting.ProcessHost.StartApplication(String,String,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Inicia a aplicação especificada."
  syntax:
    content: public void StartApplication (string appId, string appPath, out object runtimeInterface);
    parameters:
    - id: appId
      type: System.String
      description: "O ID da aplicação."
    - id: appPath
      type: System.String
      description: "O caminho virtual da aplicação."
    - id: runtimeInterface
      type: System.Object
      description: "Interface do Gestor de um tempo de execução."
  overload: System.Web.Hosting.ProcessHost.StartApplication*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.ProcessHost.StartProcessProtocolListenerChannel(System.String,System.Web.Hosting.IListenerChannelCallback)
  id: StartProcessProtocolListenerChannel(System.String,System.Web.Hosting.IListenerChannelCallback)
  parent: System.Web.Hosting.ProcessHost
  langs:
  - csharp
  name: StartProcessProtocolListenerChannel(String,IListenerChannelCallback)
  nameWithType: ProcessHost.StartProcessProtocolListenerChannel(String,IListenerChannelCallback)
  fullName: System.Web.Hosting.ProcessHost.StartProcessProtocolListenerChannel(String,IListenerChannelCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Inicia um canal de escuta de protocolos de processo."
  syntax:
    content: public void StartProcessProtocolListenerChannel (string protocolId, System.Web.Hosting.IListenerChannelCallback listenerChannelCallback);
    parameters:
    - id: protocolId
      type: System.String
      description: "O ID de protocolo."
    - id: listenerChannelCallback
      type: System.Web.Hosting.IListenerChannelCallback
      description: "A protocolo serviço de escuta canal chamada de retorno."
  overload: System.Web.Hosting.ProcessHost.StartProcessProtocolListenerChannel*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.ProcessHost.StopAppDomainProtocol(System.String,System.String,System.Boolean)
  id: StopAppDomainProtocol(System.String,System.String,System.Boolean)
  parent: System.Web.Hosting.ProcessHost
  langs:
  - csharp
  name: StopAppDomainProtocol(String,String,Boolean)
  nameWithType: ProcessHost.StopAppDomainProtocol(String,String,Boolean)
  fullName: System.Web.Hosting.ProcessHost.StopAppDomainProtocol(String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Parar um canal de escuta de protocolos de domínio de aplicação."
  remarks: "StopAppDomainProtocol é introduzida no [!INCLUDE[net_v35_long](~/add/includes/ajax-current-ext-md.md)]. Para obter mais informações, consulte [versões e dependências](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void StopAppDomainProtocol (string appId, string protocolId, bool immediate);
    parameters:
    - id: appId
      type: System.String
      description: "O ID da aplicação."
    - id: protocolId
      type: System.String
      description: "O ID de protocolo."
    - id: immediate
      type: System.Boolean
      description: "Até que ponto parar o protocolo imediatamente."
  overload: System.Web.Hosting.ProcessHost.StopAppDomainProtocol*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.ProcessHost.StopAppDomainProtocolListenerChannel(System.String,System.String,System.Int32,System.Boolean)
  id: StopAppDomainProtocolListenerChannel(System.String,System.String,System.Int32,System.Boolean)
  parent: System.Web.Hosting.ProcessHost
  langs:
  - csharp
  name: StopAppDomainProtocolListenerChannel(String,String,Int32,Boolean)
  nameWithType: ProcessHost.StopAppDomainProtocolListenerChannel(String,String,Int32,Boolean)
  fullName: System.Web.Hosting.ProcessHost.StopAppDomainProtocolListenerChannel(String,String,Int32,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Parar um canal de escuta de protocolos de domínio de aplicação."
  syntax:
    content: public void StopAppDomainProtocolListenerChannel (string appId, string protocolId, int listenerChannelId, bool immediate);
    parameters:
    - id: appId
      type: System.String
      description: "O ID da aplicação"
    - id: protocolId
      type: System.String
      description: "O ID de protocolo."
    - id: listenerChannelId
      type: System.Int32
      description: "O serviço de escuta do protocolo de canal ID."
    - id: immediate
      type: System.Boolean
      description: "Até que ponto parar o canal de escuta do protocolo imediatamente."
  overload: System.Web.Hosting.ProcessHost.StopAppDomainProtocolListenerChannel*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.ProcessHost.StopProcessProtocol(System.String,System.Boolean)
  id: StopProcessProtocol(System.String,System.Boolean)
  parent: System.Web.Hosting.ProcessHost
  langs:
  - csharp
  name: StopProcessProtocol(String,Boolean)
  nameWithType: ProcessHost.StopProcessProtocol(String,Boolean)
  fullName: System.Web.Hosting.ProcessHost.StopProcessProtocol(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Deixa um protocolo de processo."
  remarks: "StopProcessProtocol é introduzida no [!INCLUDE[net_v35_long](~/add/includes/ajax-current-ext-md.md)]. Para obter mais informações, consulte [versões e dependências](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void StopProcessProtocol (string protocolId, bool immediate);
    parameters:
    - id: protocolId
      type: System.String
      description: "O ID de protocolo."
    - id: immediate
      type: System.Boolean
      description: "Até que ponto parar o protocolo imediatamente."
  overload: System.Web.Hosting.ProcessHost.StopProcessProtocol*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.ProcessHost.StopProcessProtocolListenerChannel(System.String,System.Int32,System.Boolean)
  id: StopProcessProtocolListenerChannel(System.String,System.Int32,System.Boolean)
  parent: System.Web.Hosting.ProcessHost
  langs:
  - csharp
  name: StopProcessProtocolListenerChannel(String,Int32,Boolean)
  nameWithType: ProcessHost.StopProcessProtocolListenerChannel(String,Int32,Boolean)
  fullName: System.Web.Hosting.ProcessHost.StopProcessProtocolListenerChannel(String,Int32,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Parar um canal de escuta do protocolo."
  syntax:
    content: public void StopProcessProtocolListenerChannel (string protocolId, int listenerChannelId, bool immediate);
    parameters:
    - id: protocolId
      type: System.String
      description: "O ID de protocolo."
    - id: listenerChannelId
      type: System.Int32
      description: "A protocolo serviço de escuta canal chamada de retorno."
    - id: immediate
      type: System.Boolean
      description: "Até que ponto parar o canal de escuta do protocolo imediatamente."
  overload: System.Web.Hosting.ProcessHost.StopProcessProtocolListenerChannel*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.Hosting.ProcessHost.EnumerateAppDomains(System.Web.Hosting.IAppDomainInfoEnum@)
  parent: System.Web.Hosting.ProcessHost
  isExternal: false
  name: EnumerateAppDomains(IAppDomainInfoEnum)
  nameWithType: ProcessHost.EnumerateAppDomains(IAppDomainInfoEnum)
  fullName: System.Web.Hosting.ProcessHost.EnumerateAppDomains(IAppDomainInfoEnum)
- uid: System.Web.Hosting.IAppDomainInfoEnum
  parent: System.Web.Hosting
  isExternal: false
  name: IAppDomainInfoEnum
  nameWithType: IAppDomainInfoEnum
  fullName: System.Web.Hosting.IAppDomainInfoEnum
- uid: System.Web.Hosting.ProcessHost.InitializeLifetimeService
  parent: System.Web.Hosting.ProcessHost
  isExternal: false
  name: InitializeLifetimeService()
  nameWithType: ProcessHost.InitializeLifetimeService()
  fullName: System.Web.Hosting.ProcessHost.InitializeLifetimeService()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Hosting.ProcessHost.IsIdle
  parent: System.Web.Hosting.ProcessHost
  isExternal: false
  name: IsIdle()
  nameWithType: ProcessHost.IsIdle()
  fullName: System.Web.Hosting.ProcessHost.IsIdle()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Hosting.ProcessHost.Ping(System.Web.Hosting.IProcessPingCallback)
  parent: System.Web.Hosting.ProcessHost
  isExternal: false
  name: Ping(IProcessPingCallback)
  nameWithType: ProcessHost.Ping(IProcessPingCallback)
  fullName: System.Web.Hosting.ProcessHost.Ping(IProcessPingCallback)
- uid: System.Web.Hosting.IProcessPingCallback
  parent: System.Web.Hosting
  isExternal: false
  name: IProcessPingCallback
  nameWithType: IProcessPingCallback
  fullName: System.Web.Hosting.IProcessPingCallback
- uid: System.Web.Hosting.ProcessHost.SetApplicationPreloadState(System.String,System.String,System.Boolean)
  parent: System.Web.Hosting.ProcessHost
  isExternal: false
  name: SetApplicationPreloadState(String,String,Boolean)
  nameWithType: ProcessHost.SetApplicationPreloadState(String,String,Boolean)
  fullName: System.Web.Hosting.ProcessHost.SetApplicationPreloadState(String,String,Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Hosting.ProcessHost.SetApplicationPreloadUtil(System.Web.Hosting.IApplicationPreloadUtil)
  parent: System.Web.Hosting.ProcessHost
  isExternal: false
  name: SetApplicationPreloadUtil(IApplicationPreloadUtil)
  nameWithType: ProcessHost.SetApplicationPreloadUtil(IApplicationPreloadUtil)
  fullName: System.Web.Hosting.ProcessHost.SetApplicationPreloadUtil(IApplicationPreloadUtil)
- uid: System.Web.Hosting.IApplicationPreloadUtil
  parent: System.Web.Hosting
  isExternal: false
  name: IApplicationPreloadUtil
  nameWithType: IApplicationPreloadUtil
  fullName: System.Web.Hosting.IApplicationPreloadUtil
- uid: System.Web.Hosting.ProcessHost.Shutdown
  parent: System.Web.Hosting.ProcessHost
  isExternal: false
  name: Shutdown()
  nameWithType: ProcessHost.Shutdown()
  fullName: System.Web.Hosting.ProcessHost.Shutdown()
- uid: System.Web.Hosting.ProcessHost.ShutdownApplication(System.String)
  parent: System.Web.Hosting.ProcessHost
  isExternal: false
  name: ShutdownApplication(String)
  nameWithType: ProcessHost.ShutdownApplication(String)
  fullName: System.Web.Hosting.ProcessHost.ShutdownApplication(String)
- uid: System.Web.Hosting.ProcessHost.StartAppDomainProtocolListenerChannel(System.String,System.String,System.Web.Hosting.IListenerChannelCallback)
  parent: System.Web.Hosting.ProcessHost
  isExternal: false
  name: StartAppDomainProtocolListenerChannel(String,String,IListenerChannelCallback)
  nameWithType: ProcessHost.StartAppDomainProtocolListenerChannel(String,String,IListenerChannelCallback)
  fullName: System.Web.Hosting.ProcessHost.StartAppDomainProtocolListenerChannel(String,String,IListenerChannelCallback)
- uid: System.Web.Hosting.IListenerChannelCallback
  parent: System.Web.Hosting
  isExternal: false
  name: IListenerChannelCallback
  nameWithType: IListenerChannelCallback
  fullName: System.Web.Hosting.IListenerChannelCallback
- uid: System.Web.Hosting.ProcessHost.StartApplication(System.String,System.String,System.Object@)
  parent: System.Web.Hosting.ProcessHost
  isExternal: false
  name: StartApplication(String,String,Object)
  nameWithType: ProcessHost.StartApplication(String,String,Object)
  fullName: System.Web.Hosting.ProcessHost.StartApplication(String,String,Object)
- uid: System.Web.Hosting.ProcessHost.StartProcessProtocolListenerChannel(System.String,System.Web.Hosting.IListenerChannelCallback)
  parent: System.Web.Hosting.ProcessHost
  isExternal: false
  name: StartProcessProtocolListenerChannel(String,IListenerChannelCallback)
  nameWithType: ProcessHost.StartProcessProtocolListenerChannel(String,IListenerChannelCallback)
  fullName: System.Web.Hosting.ProcessHost.StartProcessProtocolListenerChannel(String,IListenerChannelCallback)
- uid: System.Web.Hosting.ProcessHost.StopAppDomainProtocol(System.String,System.String,System.Boolean)
  parent: System.Web.Hosting.ProcessHost
  isExternal: false
  name: StopAppDomainProtocol(String,String,Boolean)
  nameWithType: ProcessHost.StopAppDomainProtocol(String,String,Boolean)
  fullName: System.Web.Hosting.ProcessHost.StopAppDomainProtocol(String,String,Boolean)
- uid: System.Web.Hosting.ProcessHost.StopAppDomainProtocolListenerChannel(System.String,System.String,System.Int32,System.Boolean)
  parent: System.Web.Hosting.ProcessHost
  isExternal: false
  name: StopAppDomainProtocolListenerChannel(String,String,Int32,Boolean)
  nameWithType: ProcessHost.StopAppDomainProtocolListenerChannel(String,String,Int32,Boolean)
  fullName: System.Web.Hosting.ProcessHost.StopAppDomainProtocolListenerChannel(String,String,Int32,Boolean)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Hosting.ProcessHost.StopProcessProtocol(System.String,System.Boolean)
  parent: System.Web.Hosting.ProcessHost
  isExternal: false
  name: StopProcessProtocol(String,Boolean)
  nameWithType: ProcessHost.StopProcessProtocol(String,Boolean)
  fullName: System.Web.Hosting.ProcessHost.StopProcessProtocol(String,Boolean)
- uid: System.Web.Hosting.ProcessHost.StopProcessProtocolListenerChannel(System.String,System.Int32,System.Boolean)
  parent: System.Web.Hosting.ProcessHost
  isExternal: false
  name: StopProcessProtocolListenerChannel(String,Int32,Boolean)
  nameWithType: ProcessHost.StopProcessProtocolListenerChannel(String,Int32,Boolean)
  fullName: System.Web.Hosting.ProcessHost.StopProcessProtocolListenerChannel(String,Int32,Boolean)
- uid: System.Web.Hosting.ProcessHost.EnumerateAppDomains*
  parent: System.Web.Hosting.ProcessHost
  isExternal: false
  name: EnumerateAppDomains
  nameWithType: ProcessHost.EnumerateAppDomains
- uid: System.Web.Hosting.ProcessHost.InitializeLifetimeService*
  parent: System.Web.Hosting.ProcessHost
  isExternal: false
  name: InitializeLifetimeService
  nameWithType: ProcessHost.InitializeLifetimeService
- uid: System.Web.Hosting.ProcessHost.IsIdle*
  parent: System.Web.Hosting.ProcessHost
  isExternal: false
  name: IsIdle
  nameWithType: ProcessHost.IsIdle
- uid: System.Web.Hosting.ProcessHost.Ping*
  parent: System.Web.Hosting.ProcessHost
  isExternal: false
  name: Ping
  nameWithType: ProcessHost.Ping
- uid: System.Web.Hosting.ProcessHost.SetApplicationPreloadState*
  parent: System.Web.Hosting.ProcessHost
  isExternal: false
  name: SetApplicationPreloadState
  nameWithType: ProcessHost.SetApplicationPreloadState
- uid: System.Web.Hosting.ProcessHost.SetApplicationPreloadUtil*
  parent: System.Web.Hosting.ProcessHost
  isExternal: false
  name: SetApplicationPreloadUtil
  nameWithType: ProcessHost.SetApplicationPreloadUtil
- uid: System.Web.Hosting.ProcessHost.Shutdown*
  parent: System.Web.Hosting.ProcessHost
  isExternal: false
  name: Shutdown
  nameWithType: ProcessHost.Shutdown
- uid: System.Web.Hosting.ProcessHost.ShutdownApplication*
  parent: System.Web.Hosting.ProcessHost
  isExternal: false
  name: ShutdownApplication
  nameWithType: ProcessHost.ShutdownApplication
- uid: System.Web.Hosting.ProcessHost.StartAppDomainProtocolListenerChannel*
  parent: System.Web.Hosting.ProcessHost
  isExternal: false
  name: StartAppDomainProtocolListenerChannel
  nameWithType: ProcessHost.StartAppDomainProtocolListenerChannel
- uid: System.Web.Hosting.ProcessHost.StartApplication*
  parent: System.Web.Hosting.ProcessHost
  isExternal: false
  name: StartApplication
  nameWithType: ProcessHost.StartApplication
- uid: System.Web.Hosting.ProcessHost.StartProcessProtocolListenerChannel*
  parent: System.Web.Hosting.ProcessHost
  isExternal: false
  name: StartProcessProtocolListenerChannel
  nameWithType: ProcessHost.StartProcessProtocolListenerChannel
- uid: System.Web.Hosting.ProcessHost.StopAppDomainProtocol*
  parent: System.Web.Hosting.ProcessHost
  isExternal: false
  name: StopAppDomainProtocol
  nameWithType: ProcessHost.StopAppDomainProtocol
- uid: System.Web.Hosting.ProcessHost.StopAppDomainProtocolListenerChannel*
  parent: System.Web.Hosting.ProcessHost
  isExternal: false
  name: StopAppDomainProtocolListenerChannel
  nameWithType: ProcessHost.StopAppDomainProtocolListenerChannel
- uid: System.Web.Hosting.ProcessHost.StopProcessProtocol*
  parent: System.Web.Hosting.ProcessHost
  isExternal: false
  name: StopProcessProtocol
  nameWithType: ProcessHost.StopProcessProtocol
- uid: System.Web.Hosting.ProcessHost.StopProcessProtocolListenerChannel*
  parent: System.Web.Hosting.ProcessHost
  isExternal: false
  name: StopProcessProtocolListenerChannel
  nameWithType: ProcessHost.StopProcessProtocolListenerChannel
