### YamlMime:ManagedReference
items:
- uid: System.Workflow.Activities.WorkflowRole
  id: WorkflowRole
  children:
  - System.Workflow.Activities.WorkflowRole.#ctor
  - System.Workflow.Activities.WorkflowRole.GetIdentities
  - System.Workflow.Activities.WorkflowRole.IncludesIdentity(System.String)
  - System.Workflow.Activities.WorkflowRole.Name
  langs:
  - csharp
  name: WorkflowRole
  nameWithType: WorkflowRole
  fullName: System.Workflow.Activities.WorkflowRole
  type: Class
  summary: "The abstract base class from which workflow roles are derived."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]       You can derive classes from the WorkflowRole class in order to implement role-based access to your workflows and their activities. The <xref:System.Workflow.Activities.WebWorkflowRole> class and the <xref:System.Workflow.Activities.ActiveDirectoryRole> class derive from the WorkflowRole class."
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public abstract class WorkflowRole
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Workflow.Activities.WorkflowRole.#ctor
  id: '#ctor'
  parent: System.Workflow.Activities.WorkflowRole
  langs:
  - csharp
  name: WorkflowRole()
  nameWithType: WorkflowRole.WorkflowRole()
  fullName: System.Workflow.Activities.WorkflowRole.WorkflowRole()
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "When implemented in a derived class, initializes a new instance of the <xref href=&quot;System.Workflow.Activities.WorkflowRole&quot;></xref> class."
  syntax:
    content: protected WorkflowRole ();
    parameters: []
  overload: System.Workflow.Activities.WorkflowRole.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.WorkflowRole.GetIdentities
  id: GetIdentities
  parent: System.Workflow.Activities.WorkflowRole
  langs:
  - csharp
  name: GetIdentities()
  nameWithType: WorkflowRole.GetIdentities()
  fullName: System.Workflow.Activities.WorkflowRole.GetIdentities()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "When implemented in a derived class gets the identities contained by this <xref href=&quot;System.Workflow.Activities.WorkflowRole&quot;></xref>."
  syntax:
    content: public abstract System.Collections.Generic.IList<string> GetIdentities ();
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
      description: "A list of the names of the identities contained by this <xref href=&quot;System.Workflow.Activities.WorkflowRole&quot;></xref>."
  overload: System.Workflow.Activities.WorkflowRole.GetIdentities*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.WorkflowRole.IncludesIdentity(System.String)
  id: IncludesIdentity(System.String)
  parent: System.Workflow.Activities.WorkflowRole
  langs:
  - csharp
  name: IncludesIdentity(String)
  nameWithType: WorkflowRole.IncludesIdentity(String)
  fullName: System.Workflow.Activities.WorkflowRole.IncludesIdentity(String)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "When implemented in a derived class, returns a value that indicates whether this role contains the specified identity."
  syntax:
    content: public abstract bool IncludesIdentity (string identity);
    parameters:
    - id: identity
      type: System.String
      description: "The name of the identity for which to test."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <code>identity</code> is included in this <xref href=&quot;System.Workflow.Activities.WorkflowRole&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Workflow.Activities.WorkflowRole.IncludesIdentity*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.WorkflowRole.Name
  id: Name
  parent: System.Workflow.Activities.WorkflowRole
  langs:
  - csharp
  name: Name
  nameWithType: WorkflowRole.Name
  fullName: System.Workflow.Activities.WorkflowRole.Name
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "When implemented in a derived class, gets or sets the name of this <xref href=&quot;System.Workflow.Activities.WorkflowRole&quot;></xref>."
  syntax:
    content: public abstract string Name { get; set; }
    return:
      type: System.String
      description: "The name of the <xref href=&quot;System.Workflow.Activities.WorkflowRole&quot;></xref>."
  overload: System.Workflow.Activities.WorkflowRole.Name*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Workflow.Activities.WorkflowRole.#ctor
  parent: System.Workflow.Activities.WorkflowRole
  isExternal: false
  name: WorkflowRole()
  nameWithType: WorkflowRole.WorkflowRole()
  fullName: System.Workflow.Activities.WorkflowRole.WorkflowRole()
- uid: System.Workflow.Activities.WorkflowRole.GetIdentities
  parent: System.Workflow.Activities.WorkflowRole
  isExternal: false
  name: GetIdentities()
  nameWithType: WorkflowRole.GetIdentities()
  fullName: System.Workflow.Activities.WorkflowRole.GetIdentities()
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Activities.WorkflowRole.IncludesIdentity(System.String)
  parent: System.Workflow.Activities.WorkflowRole
  isExternal: false
  name: IncludesIdentity(String)
  nameWithType: WorkflowRole.IncludesIdentity(String)
  fullName: System.Workflow.Activities.WorkflowRole.IncludesIdentity(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Activities.WorkflowRole.Name
  parent: System.Workflow.Activities.WorkflowRole
  isExternal: false
  name: Name
  nameWithType: WorkflowRole.Name
  fullName: System.Workflow.Activities.WorkflowRole.Name
- uid: System.Workflow.Activities.WorkflowRole.#ctor*
  parent: System.Workflow.Activities.WorkflowRole
  isExternal: false
  name: WorkflowRole
  nameWithType: WorkflowRole.WorkflowRole
- uid: System.Workflow.Activities.WorkflowRole.GetIdentities*
  parent: System.Workflow.Activities.WorkflowRole
  isExternal: false
  name: GetIdentities
  nameWithType: WorkflowRole.GetIdentities
- uid: System.Workflow.Activities.WorkflowRole.IncludesIdentity*
  parent: System.Workflow.Activities.WorkflowRole
  isExternal: false
  name: IncludesIdentity
  nameWithType: WorkflowRole.IncludesIdentity
- uid: System.Workflow.Activities.WorkflowRole.Name*
  parent: System.Workflow.Activities.WorkflowRole
  isExternal: false
  name: Name
  nameWithType: WorkflowRole.Name
