### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Xml.DataObject
  id: DataObject
  children:
  - System.Security.Cryptography.Xml.DataObject.#ctor
  - System.Security.Cryptography.Xml.DataObject.#ctor(System.String,System.String,System.String,System.Xml.XmlElement)
  - System.Security.Cryptography.Xml.DataObject.Data
  - System.Security.Cryptography.Xml.DataObject.Encoding
  - System.Security.Cryptography.Xml.DataObject.GetXml
  - System.Security.Cryptography.Xml.DataObject.Id
  - System.Security.Cryptography.Xml.DataObject.LoadXml(System.Xml.XmlElement)
  - System.Security.Cryptography.Xml.DataObject.MimeType
  langs:
  - csharp
  name: DataObject
  nameWithType: DataObject
  fullName: System.Security.Cryptography.Xml.DataObject
  type: Class
  summary: "Representa o elemento de objecto de uma assinatura XML que contém dados sejam assinados."
  remarks: "Utilize a classe de DataObject para armazenar informações ou metadados diretamente numa assinatura XML.  Por exemplo, pode armazenar a assinatura data de geração ou a identidade do signatário.  A classe de DataObject pode ou não pode ser abrangida a assinatura XML.       A classe corresponde do `<Object>` elemento na especificação XML assinaturas Consortium World Wide Web (W3C). Para obter mais informações sobre a especificação de W3C, consulte [http://www.w3.org/TR/xmldsig-core/](http://www.w3.org/TR/xmldsig-core/)."
  example:
  - "The following code example demonstrates how to generate an enveloping XML signature.  \n  \n [!code-cs[XMLDSIG Signing#1](~/add/codesnippet/csharp/t-system.security.crypto_69_1.cs)]\n [!code-vb[XMLDSIG Signing#1](~/add/codesnippet/visualbasic/t-system.security.crypto_69_1.vb)]\n [!code-cpp[XMLDSIG Signing#1](~/add/codesnippet/cpp/t-system.security.crypto_69_1.cpp)]  \n  \n The following code example demonstrates how to check an XML signature.  \n  \n [!code-cs[XMLDSIG Verification#1](~/add/codesnippet/csharp/t-system.security.crypto_69_2.cs)]\n [!code-vb[XMLDSIG Verification#1](~/add/codesnippet/visualbasic/t-system.security.crypto_69_2.vb)]\n [!code-cpp[XMLDSIG Verification#1](~/add/codesnippet/cpp/t-system.security.crypto_69_2.cpp)]"
  syntax:
    content: public class DataObject
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.DataObject.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Xml.DataObject
  langs:
  - csharp
  name: DataObject()
  nameWithType: DataObject.DataObject()
  fullName: System.Security.Cryptography.Xml.DataObject.DataObject()
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref> classe."
  remarks: "O <xref:System.Security.Cryptography.Xml.DataObject>classe é utilizada com assinaturas XML.</xref:System.Security.Cryptography.Xml.DataObject> Depois de ter iniciado o <xref:System.Security.Cryptography.Xml.DataObject>, pode atribuir a <xref:System.Security.Cryptography.Xml.DataObject.Data%2A>e <xref:System.Security.Cryptography.Xml.DataObject.Id%2A>Propriedades.</xref:System.Security.Cryptography.Xml.DataObject.Id%2A> </xref:System.Security.Cryptography.Xml.DataObject.Data%2A> </xref:System.Security.Cryptography.Xml.DataObject>"
  example:
  - "The following code example demonstrates how to generate an enveloping XML signature.  \n  \n [!code-cs[XMLDSIG Signing#1](~/add/codesnippet/csharp/m-system.security.crypto_95_1.cs)]\n [!code-vb[XMLDSIG Signing#1](~/add/codesnippet/visualbasic/m-system.security.crypto_95_1.vb)]\n [!code-cpp[XMLDSIG Signing#1](~/add/codesnippet/cpp/m-system.security.crypto_95_1.cpp)]  \n  \n The following code example demonstrates how to check an XML signature.  \n  \n [!code-cs[XMLDSIG Verification#1](~/add/codesnippet/csharp/m-system.security.crypto_95_2.cs)]\n [!code-vb[XMLDSIG Verification#1](~/add/codesnippet/visualbasic/m-system.security.crypto_95_2.vb)]\n [!code-cpp[XMLDSIG Verification#1](~/add/codesnippet/cpp/m-system.security.crypto_95_2.cpp)]"
  syntax:
    content: public DataObject ();
    parameters: []
  overload: System.Security.Cryptography.Xml.DataObject.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.DataObject.#ctor(System.String,System.String,System.String,System.Xml.XmlElement)
  id: '#ctor(System.String,System.String,System.String,System.Xml.XmlElement)'
  parent: System.Security.Cryptography.Xml.DataObject
  langs:
  - csharp
  name: DataObject(String,String,String,XmlElement)
  nameWithType: DataObject.DataObject(String,String,String,XmlElement)
  fullName: System.Security.Cryptography.Xml.DataObject.DataObject(String,String,String,XmlElement)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref> classe com a identificação especificada, MIME Tipo, codificação e dados."
  remarks: "O <xref:System.Security.Cryptography.Xml.DataObject>classe é utilizada com assinaturas XML.</xref:System.Security.Cryptography.Xml.DataObject> O `id` parâmetro refere-se com o nome do elemento que contém os dados para ser utilizado. O `data` parâmetro refere-se à lista de nó XML que contém o `id` elemento de parâmetro."
  syntax:
    content: public DataObject (string id, string mimeType, string encoding, System.Xml.XmlElement data);
    parameters:
    - id: id
      type: System.String
      description: "A identificação ao inicializar a nova instância do <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref> com."
    - id: mimeType
      type: System.String
      description: "O tipo de MIME de dados utilizados para inicializar a nova instância do <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref>."
    - id: encoding
      type: System.String
      description: "A codificação de dados utilizados para inicializar a nova instância do <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref>."
    - id: data
      type: System.Xml.XmlElement
      description: "Os dados ao inicializar a nova instância do <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref> com."
  overload: System.Security.Cryptography.Xml.DataObject.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>data</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.DataObject.Data
  id: Data
  parent: System.Security.Cryptography.Xml.DataObject
  langs:
  - csharp
  name: Data
  nameWithType: DataObject.Data
  fullName: System.Security.Cryptography.Xml.DataObject.Data
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Obtém ou define o valor de dados do atual <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref> objeto."
  remarks: "Esta propriedade é a lista de nó XML que contém o elemento descrito a <xref:System.Security.Cryptography.Xml.DataObject.Id%2A>propriedade.</xref:System.Security.Cryptography.Xml.DataObject.Id%2A>"
  example:
  - "The following code example demonstrates how to generate an enveloping XML signature.  \n  \n [!code-cs[XMLDSIG Signing#1](~/add/codesnippet/csharp/p-system.security.crypto_100_1.cs)]\n [!code-vb[XMLDSIG Signing#1](~/add/codesnippet/visualbasic/p-system.security.crypto_100_1.vb)]\n [!code-cpp[XMLDSIG Signing#1](~/add/codesnippet/cpp/p-system.security.crypto_100_1.cpp)]  \n  \n The following code example demonstrates how to check an XML signature.  \n  \n [!code-cs[XMLDSIG Verification#1](~/add/codesnippet/csharp/p-system.security.crypto_100_2.cs)]\n [!code-vb[XMLDSIG Verification#1](~/add/codesnippet/visualbasic/p-system.security.crypto_100_2.vb)]\n [!code-cpp[XMLDSIG Verification#1](~/add/codesnippet/cpp/p-system.security.crypto_100_2.cpp)]"
  syntax:
    content: public System.Xml.XmlNodeList Data { get; set; }
    return:
      type: System.Xml.XmlNodeList
      description: "Os dados de atual <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref>."
  overload: System.Security.Cryptography.Xml.DataObject.Data*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O valor utilizado para definir a propriedade é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.DataObject.Encoding
  id: Encoding
  parent: System.Security.Cryptography.Xml.DataObject
  langs:
  - csharp
  name: Encoding
  nameWithType: DataObject.Encoding
  fullName: System.Security.Cryptography.Xml.DataObject.Encoding
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Obtém ou define a codificação de atual <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref> objeto."
  remarks: "O valor predefinido desta propriedade é `null`, que indica que sem codificação está presente."
  syntax:
    content: public string Encoding { get; set; }
    return:
      type: System.String
      description: "O tipo de codificação de atual <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref> objeto."
  overload: System.Security.Cryptography.Xml.DataObject.Encoding*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.DataObject.GetXml
  id: GetXml
  parent: System.Security.Cryptography.Xml.DataObject
  langs:
  - csharp
  name: GetXml()
  nameWithType: DataObject.GetXml()
  fullName: System.Security.Cryptography.Xml.DataObject.GetXml()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Devolve a representação XML do <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref> objeto."
  remarks: "Utilize este método à saída de XML para <xref:System.Security.Cryptography.Xml.DataObject>.</xref:System.Security.Cryptography.Xml.DataObject>"
  syntax:
    content: public System.Xml.XmlElement GetXml ();
    parameters: []
    return:
      type: System.Xml.XmlElement
      description: "A representação XML do <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref> objeto."
  overload: System.Security.Cryptography.Xml.DataObject.GetXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.DataObject.Id
  id: Id
  parent: System.Security.Cryptography.Xml.DataObject
  langs:
  - csharp
  name: Id
  nameWithType: DataObject.Id
  fullName: System.Security.Cryptography.Xml.DataObject.Id
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Obtém ou define a identificação das atual <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref> objeto."
  remarks: "A identificação é utilizada para a referência a <xref:System.Security.Cryptography.Xml.DataObject>de outra localização.</xref:System.Security.Cryptography.Xml.DataObject> O valor predefinido desta propriedade é `null`, que significa que nenhum identificação está presente. Esta propriedade normalmente é referenciada pelo <xref:System.Security.Cryptography.Xml.Signature.SignedInfo%2A>propriedade.</xref:System.Security.Cryptography.Xml.Signature.SignedInfo%2A>"
  example:
  - "The following code example demonstrates how to generate an enveloping XML signature.  \n  \n [!code-cs[XMLDSIG Signing#1](~/add/codesnippet/csharp/p-system.security.crypto_82_1.cs)]\n [!code-vb[XMLDSIG Signing#1](~/add/codesnippet/visualbasic/p-system.security.crypto_82_1.vb)]\n [!code-cpp[XMLDSIG Signing#1](~/add/codesnippet/cpp/p-system.security.crypto_82_1.cpp)]  \n  \n The following code example demonstrates how to check an XML signature.  \n  \n [!code-cs[XMLDSIG Verification#1](~/add/codesnippet/csharp/p-system.security.crypto_82_2.cs)]\n [!code-vb[XMLDSIG Verification#1](~/add/codesnippet/visualbasic/p-system.security.crypto_82_2.vb)]\n [!code-cpp[XMLDSIG Verification#1](~/add/codesnippet/cpp/p-system.security.crypto_82_2.cpp)]"
  syntax:
    content: public string Id { get; set; }
    return:
      type: System.String
      description: "O nome do elemento que contém dados para ser utilizado."
  overload: System.Security.Cryptography.Xml.DataObject.Id*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.DataObject.LoadXml(System.Xml.XmlElement)
  id: LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.DataObject
  langs:
  - csharp
  name: LoadXml(XmlElement)
  nameWithType: DataObject.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.DataObject.LoadXml(XmlElement)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Carrega um <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref> estado a partir de um elemento XML."
  remarks: "Este método pode ser utilizado para adicionar elementos XML adicionais para um <xref:System.Security.Cryptography.Xml.DataObject>objeto.</xref:System.Security.Cryptography.Xml.DataObject>"
  syntax:
    content: public void LoadXml (System.Xml.XmlElement value);
    parameters:
    - id: value
      type: System.Xml.XmlElement
      description: "O elemento XML para carregar o <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref> estado do."
  overload: System.Security.Cryptography.Xml.DataObject.LoadXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O valor do elemento XML de é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.DataObject.MimeType
  id: MimeType
  parent: System.Security.Cryptography.Xml.DataObject
  langs:
  - csharp
  name: MimeType
  nameWithType: DataObject.MimeType
  fullName: System.Security.Cryptography.Xml.DataObject.MimeType
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "Obtém ou define o tipo MIME de atual <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref> objeto."
  remarks: "O tipo de MIME descreve os dados dentro do <xref:System.Security.Cryptography.Xml.DataObject>.</xref:System.Security.Cryptography.Xml.DataObject>"
  syntax:
    content: public string MimeType { get; set; }
    return:
      type: System.String
      description: "O tipo MIME de atual <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref> objeto. A predefinição é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.Xml.DataObject.MimeType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.Xml.DataObject.#ctor
  parent: System.Security.Cryptography.Xml.DataObject
  isExternal: false
  name: DataObject()
  nameWithType: DataObject.DataObject()
  fullName: System.Security.Cryptography.Xml.DataObject.DataObject()
- uid: System.Security.Cryptography.Xml.DataObject.#ctor(System.String,System.String,System.String,System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.DataObject
  isExternal: false
  name: DataObject(String,String,String,XmlElement)
  nameWithType: DataObject.DataObject(String,String,String,XmlElement)
  fullName: System.Security.Cryptography.Xml.DataObject.DataObject(String,String,String,XmlElement)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Security.Cryptography.Xml.DataObject.Data
  parent: System.Security.Cryptography.Xml.DataObject
  isExternal: false
  name: Data
  nameWithType: DataObject.Data
  fullName: System.Security.Cryptography.Xml.DataObject.Data
- uid: System.Xml.XmlNodeList
  parent: System.Xml
  isExternal: false
  name: XmlNodeList
  nameWithType: XmlNodeList
  fullName: System.Xml.XmlNodeList
- uid: System.Security.Cryptography.Xml.DataObject.Encoding
  parent: System.Security.Cryptography.Xml.DataObject
  isExternal: false
  name: Encoding
  nameWithType: DataObject.Encoding
  fullName: System.Security.Cryptography.Xml.DataObject.Encoding
- uid: System.Security.Cryptography.Xml.DataObject.GetXml
  parent: System.Security.Cryptography.Xml.DataObject
  isExternal: false
  name: GetXml()
  nameWithType: DataObject.GetXml()
  fullName: System.Security.Cryptography.Xml.DataObject.GetXml()
- uid: System.Security.Cryptography.Xml.DataObject.Id
  parent: System.Security.Cryptography.Xml.DataObject
  isExternal: false
  name: Id
  nameWithType: DataObject.Id
  fullName: System.Security.Cryptography.Xml.DataObject.Id
- uid: System.Security.Cryptography.Xml.DataObject.LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.DataObject
  isExternal: false
  name: LoadXml(XmlElement)
  nameWithType: DataObject.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.DataObject.LoadXml(XmlElement)
- uid: System.Security.Cryptography.Xml.DataObject.MimeType
  parent: System.Security.Cryptography.Xml.DataObject
  isExternal: false
  name: MimeType
  nameWithType: DataObject.MimeType
  fullName: System.Security.Cryptography.Xml.DataObject.MimeType
- uid: System.Security.Cryptography.Xml.DataObject.#ctor*
  parent: System.Security.Cryptography.Xml.DataObject
  isExternal: false
  name: DataObject
  nameWithType: DataObject.DataObject
- uid: System.Security.Cryptography.Xml.DataObject.Data*
  parent: System.Security.Cryptography.Xml.DataObject
  isExternal: false
  name: Data
  nameWithType: DataObject.Data
- uid: System.Security.Cryptography.Xml.DataObject.Encoding*
  parent: System.Security.Cryptography.Xml.DataObject
  isExternal: false
  name: Encoding
  nameWithType: DataObject.Encoding
- uid: System.Security.Cryptography.Xml.DataObject.GetXml*
  parent: System.Security.Cryptography.Xml.DataObject
  isExternal: false
  name: GetXml
  nameWithType: DataObject.GetXml
- uid: System.Security.Cryptography.Xml.DataObject.Id*
  parent: System.Security.Cryptography.Xml.DataObject
  isExternal: false
  name: Id
  nameWithType: DataObject.Id
- uid: System.Security.Cryptography.Xml.DataObject.LoadXml*
  parent: System.Security.Cryptography.Xml.DataObject
  isExternal: false
  name: LoadXml
  nameWithType: DataObject.LoadXml
- uid: System.Security.Cryptography.Xml.DataObject.MimeType*
  parent: System.Security.Cryptography.Xml.DataObject
  isExternal: false
  name: MimeType
  nameWithType: DataObject.MimeType
