### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.ApplicationSecurityInfo
  id: ApplicationSecurityInfo
  children:
  - System.Security.Policy.ApplicationSecurityInfo.#ctor(System.ActivationContext)
  - System.Security.Policy.ApplicationSecurityInfo.ApplicationEvidence
  - System.Security.Policy.ApplicationSecurityInfo.ApplicationId
  - System.Security.Policy.ApplicationSecurityInfo.DefaultRequestSet
  - System.Security.Policy.ApplicationSecurityInfo.DeploymentId
  langs:
  - csharp
  name: ApplicationSecurityInfo
  nameWithType: ApplicationSecurityInfo
  fullName: System.Security.Policy.ApplicationSecurityInfo
  type: Class
  summary: "Holds the security evidence for an application. This class cannot be inherited."
  remarks: "ApplicationSecurityInfo provides security information about a manifest-activated application using information obtained from the application&quot;s manifests and its <xref:System.ActivationContext>."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Security.SecurityCritical]

      public sealed class ApplicationSecurityInfo
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Policy.ApplicationSecurityInfo.#ctor(System.ActivationContext)
  id: '#ctor(System.ActivationContext)'
  parent: System.Security.Policy.ApplicationSecurityInfo
  langs:
  - csharp
  name: ApplicationSecurityInfo(ActivationContext)
  nameWithType: ApplicationSecurityInfo.ApplicationSecurityInfo(ActivationContext)
  fullName: System.Security.Policy.ApplicationSecurityInfo.ApplicationSecurityInfo(ActivationContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Initializes a new instance of the <see cref=&quot;T:System.Security.Policy.ApplicationSecurityInfo&quot;></see> class using the provided activation context."
  remarks: "The <xref:System.ActivationContext> object contains an <xref:System.ApplicationIdentity> object that uniquely identifies an application by its full name and location."
  syntax:
    content: public ApplicationSecurityInfo (ActivationContext activationContext);
    parameters:
    - id: activationContext
      type: System.ActivationContext
      description: "An  object that uniquely identifies the target application."
  overload: System.Security.Policy.ApplicationSecurityInfo.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n    activationContext is ."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Policy.ApplicationSecurityInfo.ApplicationEvidence
  id: ApplicationEvidence
  parent: System.Security.Policy.ApplicationSecurityInfo
  langs:
  - csharp
  name: ApplicationEvidence
  nameWithType: ApplicationSecurityInfo.ApplicationEvidence
  fullName: System.Security.Policy.ApplicationSecurityInfo.ApplicationEvidence
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Gets or sets the evidence for the application."
  remarks: "Evidence is the set of information that constitutes input for security policy decisions, such as deciding which permissions can be granted to code."
  syntax:
    content: public System.Security.Policy.Evidence ApplicationEvidence { get; set; }
    return:
      type: System.Security.Policy.Evidence
      description: "An <see cref=&quot;T:System.Security.Policy.Evidence&quot;></see> object for the application."
  overload: System.Security.Policy.ApplicationSecurityInfo.ApplicationEvidence*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "ApplicationEvidence is set to ."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Policy.ApplicationSecurityInfo.ApplicationId
  id: ApplicationId
  parent: System.Security.Policy.ApplicationSecurityInfo
  langs:
  - csharp
  name: ApplicationId
  nameWithType: ApplicationSecurityInfo.ApplicationId
  fullName: System.Security.Policy.ApplicationSecurityInfo.ApplicationId
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Gets or sets the application identity information."
  remarks: "An application identity consists of the publisher&quot;s public key, the application name, the target processor architecture, the application culture, and the application version."
  syntax:
    content: public ApplicationId ApplicationId { get; set; }
    return:
      type: System.ApplicationId
      description: "An <see cref=&quot;T:System.ApplicationId&quot;></see> object."
  overload: System.Security.Policy.ApplicationSecurityInfo.ApplicationId*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "ApplicationId is set to ."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Policy.ApplicationSecurityInfo.DefaultRequestSet
  id: DefaultRequestSet
  parent: System.Security.Policy.ApplicationSecurityInfo
  langs:
  - csharp
  name: DefaultRequestSet
  nameWithType: ApplicationSecurityInfo.DefaultRequestSet
  fullName: System.Security.Policy.ApplicationSecurityInfo.DefaultRequestSet
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Gets or sets the default permission set."
  remarks: "If the property has not been set, the get accessor returns a <xref:System.Security.PermissionSet> with a permission state of <xref:System.Security.Permissions.PermissionState>."
  syntax:
    content: public System.Security.PermissionSet DefaultRequestSet { get; set; }
    return:
      type: System.Security.PermissionSet
      description: "A <see cref=&quot;T:System.Security.PermissionSet&quot;></see> object representing the default permissions for the application. The default is a <see cref=&quot;T:System.Security.PermissionSet&quot;></see> with a permission state of <see cref=&quot;T:System.Security.Permissions.PermissionState&quot;></see>"
  overload: System.Security.Policy.ApplicationSecurityInfo.DefaultRequestSet*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "DefaultRequestSet is set to ."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.Policy.ApplicationSecurityInfo.DeploymentId
  id: DeploymentId
  parent: System.Security.Policy.ApplicationSecurityInfo
  langs:
  - csharp
  name: DeploymentId
  nameWithType: ApplicationSecurityInfo.DeploymentId
  fullName: System.Security.Policy.ApplicationSecurityInfo.DeploymentId
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Gets or sets the top element in the application, which is described in the deployment identity."
  remarks: "A deployment identity consists of the publisher&quot;s public key, the application name, the target processor architecture, the application culture, and the application version."
  syntax:
    content: public ApplicationId DeploymentId { get; set; }
    return:
      type: System.ApplicationId
      description: "An <see cref=&quot;T:System.ApplicationId&quot;></see> object describing the top element of the application."
  overload: System.Security.Policy.ApplicationSecurityInfo.DeploymentId*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "DeploymentId is set to ."
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Policy.ApplicationSecurityInfo.#ctor(System.ActivationContext)
  parent: System.Security.Policy.ApplicationSecurityInfo
  isExternal: false
  name: ApplicationSecurityInfo(ActivationContext)
  nameWithType: ApplicationSecurityInfo.ApplicationSecurityInfo(ActivationContext)
  fullName: System.Security.Policy.ApplicationSecurityInfo.ApplicationSecurityInfo(ActivationContext)
- uid: System.ActivationContext
  parent: System
  isExternal: false
  name: ActivationContext
  nameWithType: ActivationContext
  fullName: System.ActivationContext
- uid: System.Security.Policy.ApplicationSecurityInfo.ApplicationEvidence
  parent: System.Security.Policy.ApplicationSecurityInfo
  isExternal: false
  name: ApplicationEvidence
  nameWithType: ApplicationSecurityInfo.ApplicationEvidence
  fullName: System.Security.Policy.ApplicationSecurityInfo.ApplicationEvidence
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Security.Policy.ApplicationSecurityInfo.ApplicationId
  parent: System.Security.Policy.ApplicationSecurityInfo
  isExternal: false
  name: ApplicationId
  nameWithType: ApplicationSecurityInfo.ApplicationId
  fullName: System.Security.Policy.ApplicationSecurityInfo.ApplicationId
- uid: System.ApplicationId
  parent: System
  isExternal: false
  name: ApplicationId
  nameWithType: ApplicationId
  fullName: System.ApplicationId
- uid: System.Security.Policy.ApplicationSecurityInfo.DefaultRequestSet
  parent: System.Security.Policy.ApplicationSecurityInfo
  isExternal: false
  name: DefaultRequestSet
  nameWithType: ApplicationSecurityInfo.DefaultRequestSet
  fullName: System.Security.Policy.ApplicationSecurityInfo.DefaultRequestSet
- uid: System.Security.PermissionSet
  parent: System.Security
  isExternal: false
  name: PermissionSet
  nameWithType: PermissionSet
  fullName: System.Security.PermissionSet
- uid: System.Security.Policy.ApplicationSecurityInfo.DeploymentId
  parent: System.Security.Policy.ApplicationSecurityInfo
  isExternal: false
  name: DeploymentId
  nameWithType: ApplicationSecurityInfo.DeploymentId
  fullName: System.Security.Policy.ApplicationSecurityInfo.DeploymentId
- uid: System.Security.Policy.ApplicationSecurityInfo.#ctor*
  parent: System.Security.Policy.ApplicationSecurityInfo
  isExternal: false
  name: ApplicationSecurityInfo
  nameWithType: ApplicationSecurityInfo.ApplicationSecurityInfo
- uid: System.Security.Policy.ApplicationSecurityInfo.ApplicationEvidence*
  parent: System.Security.Policy.ApplicationSecurityInfo
  isExternal: false
  name: ApplicationEvidence
  nameWithType: ApplicationSecurityInfo.ApplicationEvidence
- uid: System.Security.Policy.ApplicationSecurityInfo.ApplicationId*
  parent: System.Security.Policy.ApplicationSecurityInfo
  isExternal: false
  name: ApplicationId
  nameWithType: ApplicationSecurityInfo.ApplicationId
- uid: System.Security.Policy.ApplicationSecurityInfo.DefaultRequestSet*
  parent: System.Security.Policy.ApplicationSecurityInfo
  isExternal: false
  name: DefaultRequestSet
  nameWithType: ApplicationSecurityInfo.DefaultRequestSet
- uid: System.Security.Policy.ApplicationSecurityInfo.DeploymentId*
  parent: System.Security.Policy.ApplicationSecurityInfo
  isExternal: false
  name: DeploymentId
  nameWithType: ApplicationSecurityInfo.DeploymentId
