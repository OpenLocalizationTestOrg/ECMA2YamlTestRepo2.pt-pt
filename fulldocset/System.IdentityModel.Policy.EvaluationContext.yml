### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Policy.EvaluationContext
  id: EvaluationContext
  children:
  - System.IdentityModel.Policy.EvaluationContext.#ctor
  - System.IdentityModel.Policy.EvaluationContext.AddClaimSet(System.IdentityModel.Policy.IAuthorizationPolicy,System.IdentityModel.Claims.ClaimSet)
  - System.IdentityModel.Policy.EvaluationContext.ClaimSets
  - System.IdentityModel.Policy.EvaluationContext.Generation
  - System.IdentityModel.Policy.EvaluationContext.Properties
  - System.IdentityModel.Policy.EvaluationContext.RecordExpirationTime(System.DateTime)
  langs:
  - csharp
  name: EvaluationContext
  nameWithType: EvaluationContext
  fullName: System.IdentityModel.Policy.EvaluationContext
  type: Class
  summary: "When overridden in a derived class, represents the results of the authorization policies that have been evaluated."
  remarks: "Claims are added to an EvaluationContext by authorization policies. An authorization policy takes a set of claims, such as those found in a security token, and adds additional claims based on the current set. For instance, an authorization policy might evaluate a claim that contains the date of birth and add a claim that states the user is over 21 years old and add an Over21 claim to the EvaluationContext.       Classes that implement the <xref:System.IdentityModel.Policy.IAuthorizationPolicy> interface do not authorize users, but they enable the <xref:System.ServiceModel.ServiceAuthorizationManager> class to do so. The <xref:System.ServiceModel.ServiceAuthorizationManager> calls the <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method for each authorization policy in effect. The <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method determines whether additional claims should be added for the user based on the current claims. An authorization policy&quot;s <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method may be called multiple times, as claims are added to the EvaluationContext by other authorization policies. When all authorization policies in effect are done, the <xref:System.ServiceModel.ServiceAuthorizationManager> class makes authorization decisions based upon the final set of claims. The <xref:System.ServiceModel.ServiceAuthorizationManager> class then creates an <xref:System.IdentityModel.Policy.AuthorizationContext> that contains an immutable set of claims that reflects these authorization decisions.       An evaluation context contains a set of <xref:System.IdentityModel.Claims.ClaimSet> objects: an expiration time, which specifies the span of time during which the evaluation context is valid, and a unique identifier."
  syntax:
    content: public abstract class EvaluationContext
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Policy.EvaluationContext.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Policy.EvaluationContext
  langs:
  - csharp
  name: EvaluationContext()
  nameWithType: EvaluationContext.EvaluationContext()
  fullName: System.IdentityModel.Policy.EvaluationContext.EvaluationContext()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Policy
  summary: "Initializes a new instance of the <xref href=&quot;System.IdentityModel.Policy.EvaluationContext&quot;></xref> class."
  syntax:
    content: protected EvaluationContext ();
    parameters: []
  overload: System.IdentityModel.Policy.EvaluationContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Policy.EvaluationContext.AddClaimSet(System.IdentityModel.Policy.IAuthorizationPolicy,System.IdentityModel.Claims.ClaimSet)
  id: AddClaimSet(System.IdentityModel.Policy.IAuthorizationPolicy,System.IdentityModel.Claims.ClaimSet)
  parent: System.IdentityModel.Policy.EvaluationContext
  langs:
  - csharp
  name: AddClaimSet(IAuthorizationPolicy,ClaimSet)
  nameWithType: EvaluationContext.AddClaimSet(IAuthorizationPolicy,ClaimSet)
  fullName: System.IdentityModel.Policy.EvaluationContext.AddClaimSet(IAuthorizationPolicy,ClaimSet)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Policy
  summary: "Adds a set of claims to the evaluation context."
  remarks: "The claims are added to the set of claims contained within the <xref:System.IdentityModel.Policy.EvaluationContext.ClaimSets%2A> property.       Each time the AddClaimSet method is called to add claims to the evaluation context, the <xref:System.IdentityModel.Policy.EvaluationContext.Generation%2A> property should be incremented."
  syntax:
    content: public abstract void AddClaimSet (System.IdentityModel.Policy.IAuthorizationPolicy policy, System.IdentityModel.Claims.ClaimSet claimSet);
    parameters:
    - id: policy
      type: System.IdentityModel.Policy.IAuthorizationPolicy
      description: "An <xref href=&quot;System.IdentityModel.Policy.IAuthorizationPolicy&quot;></xref> that represents the authorization policy that is adding claims to the evaluation context."
    - id: claimSet
      type: System.IdentityModel.Claims.ClaimSet
      description: "A <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;></xref> that contains a set of claims."
  overload: System.IdentityModel.Policy.EvaluationContext.AddClaimSet*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Policy.EvaluationContext.ClaimSets
  id: ClaimSets
  parent: System.IdentityModel.Policy.EvaluationContext
  langs:
  - csharp
  name: ClaimSets
  nameWithType: EvaluationContext.ClaimSets
  fullName: System.IdentityModel.Policy.EvaluationContext.ClaimSets
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Policy
  summary: "Gets a read-only collection of <xref href=&quot;System.IdentityModel.Claims.ClaimSet&quot;></xref> objects that contains the claims added by authorization policies that have been evaluated."
  remarks: "To add claims to this collection, for example from an authorization policy, use the <xref:System.IdentityModel.Policy.EvaluationContext.AddClaimSet%2A> method."
  syntax:
    content: public abstract System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Claims.ClaimSet> ClaimSets { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Claims.ClaimSet}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; objects that contains the claims added by authorization policies that have been evaluated."
  overload: System.IdentityModel.Policy.EvaluationContext.ClaimSets*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Policy.EvaluationContext.Generation
  id: Generation
  parent: System.IdentityModel.Policy.EvaluationContext
  langs:
  - csharp
  name: Generation
  nameWithType: EvaluationContext.Generation
  fullName: System.IdentityModel.Policy.EvaluationContext.Generation
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Policy
  summary: "Gets the number of times that claims have been added to the evaluation context."
  remarks: "The <xref:System.ServiceModel.ServiceAuthorizationManager> class uses the Generation property to determine if another evaluation round is required. Each time an authorization policy calls the `AddToTarget` method to add claims to the evaluation context, the Generation property is incremented.       The <xref:System.ServiceModel.ServiceAuthorizationManager> class examines the Generation property after calling the <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method on all authorization policies again. If the Generation property has been incremented during evaluation, the <xref:System.ServiceModel.ServiceAuthorizationManager> class calls the <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method on any authorization policies that returned `false` the last time the <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method was called on that authorization policy."
  syntax:
    content: public abstract int Generation { get; }
    return:
      type: System.Int32
      description: "The number of times that claims have been added to the evaluation context."
  overload: System.IdentityModel.Policy.EvaluationContext.Generation*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Policy.EvaluationContext.Properties
  id: Properties
  parent: System.IdentityModel.Policy.EvaluationContext
  langs:
  - csharp
  name: Properties
  nameWithType: EvaluationContext.Properties
  fullName: System.IdentityModel.Policy.EvaluationContext.Properties
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Policy
  summary: "Gets a collection of non-claim properties associated with this <xref href=&quot;System.IdentityModel.Policy.EvaluationContext&quot;></xref>."
  remarks: "The classes in the <xref:System.IdentityModel.Selectors> namespace that implement the <xref:System.IdentityModel.Policy.IAuthorizationPolicy> interface (authorization policies) add a property named `Identities` to the.<xref:System.IdentityModel.Policy.AuthorizationContext.Properties%2A> collection. The `Identities` property contains an object of type <xref:System.Collections.Generic.IList%601> that contains one or more <xref:System.Security.Principal.IIdentity> instances that represent identity information that is provided by the authorization policies."
  syntax:
    content: public abstract System.Collections.Generic.IDictionary<string,object> Properties { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "A &lt;xref:System.Collections.Generic.Dictionary%602&gt; that specifies a collection of non-claim properties."
  overload: System.IdentityModel.Policy.EvaluationContext.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Policy.EvaluationContext.RecordExpirationTime(System.DateTime)
  id: RecordExpirationTime(System.DateTime)
  parent: System.IdentityModel.Policy.EvaluationContext
  langs:
  - csharp
  name: RecordExpirationTime(DateTime)
  nameWithType: EvaluationContext.RecordExpirationTime(DateTime)
  fullName: System.IdentityModel.Policy.EvaluationContext.RecordExpirationTime(DateTime)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Policy
  summary: "Sets the date and time at which this <xref href=&quot;System.IdentityModel.Policy.EvaluationContext&quot;></xref> is no longer valid."
  remarks: "Calling the RecordExpirationTime method multiple times only has an effect if the `expirationTime` parameter has a value that is earlier than the previously specified value."
  syntax:
    content: public abstract void RecordExpirationTime (DateTime expirationTime);
    parameters:
    - id: expirationTime
      type: System.DateTime
      description: "A <xref:System.DateTime> value that indicates the date and time when this <xref href=&quot;System.IdentityModel.Policy.AuthorizationContext&quot;></xref> object is no longer valid."
  overload: System.IdentityModel.Policy.EvaluationContext.RecordExpirationTime*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.Policy.EvaluationContext.#ctor
  parent: System.IdentityModel.Policy.EvaluationContext
  isExternal: false
  name: EvaluationContext()
  nameWithType: EvaluationContext.EvaluationContext()
  fullName: System.IdentityModel.Policy.EvaluationContext.EvaluationContext()
- uid: System.IdentityModel.Policy.EvaluationContext.AddClaimSet(System.IdentityModel.Policy.IAuthorizationPolicy,System.IdentityModel.Claims.ClaimSet)
  parent: System.IdentityModel.Policy.EvaluationContext
  isExternal: false
  name: AddClaimSet(IAuthorizationPolicy,ClaimSet)
  nameWithType: EvaluationContext.AddClaimSet(IAuthorizationPolicy,ClaimSet)
  fullName: System.IdentityModel.Policy.EvaluationContext.AddClaimSet(IAuthorizationPolicy,ClaimSet)
- uid: System.IdentityModel.Policy.IAuthorizationPolicy
  parent: System.IdentityModel.Policy
  isExternal: false
  name: IAuthorizationPolicy
  nameWithType: IAuthorizationPolicy
  fullName: System.IdentityModel.Policy.IAuthorizationPolicy
- uid: System.IdentityModel.Claims.ClaimSet
  parent: System.IdentityModel.Claims
  isExternal: false
  name: ClaimSet
  nameWithType: ClaimSet
  fullName: System.IdentityModel.Claims.ClaimSet
- uid: System.IdentityModel.Policy.EvaluationContext.ClaimSets
  parent: System.IdentityModel.Policy.EvaluationContext
  isExternal: false
  name: ClaimSets
  nameWithType: EvaluationContext.ClaimSets
  fullName: System.IdentityModel.Policy.EvaluationContext.ClaimSets
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Claims.ClaimSet}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<ClaimSet>
  nameWithType: ReadOnlyCollection<ClaimSet>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Claims.ClaimSet>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Claims.ClaimSet>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Claims.ClaimSet
    name: ClaimSet
    nameWithType: ClaimSet
    fullName: ClaimSet
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Policy.EvaluationContext.Generation
  parent: System.IdentityModel.Policy.EvaluationContext
  isExternal: false
  name: Generation
  nameWithType: EvaluationContext.Generation
  fullName: System.IdentityModel.Policy.EvaluationContext.Generation
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IdentityModel.Policy.EvaluationContext.Properties
  parent: System.IdentityModel.Policy.EvaluationContext
  isExternal: false
  name: Properties
  nameWithType: EvaluationContext.Properties
  fullName: System.IdentityModel.Policy.EvaluationContext.Properties
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,Object>
  nameWithType: IDictionary<String,Object>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Policy.EvaluationContext.RecordExpirationTime(System.DateTime)
  parent: System.IdentityModel.Policy.EvaluationContext
  isExternal: false
  name: RecordExpirationTime(DateTime)
  nameWithType: EvaluationContext.RecordExpirationTime(DateTime)
  fullName: System.IdentityModel.Policy.EvaluationContext.RecordExpirationTime(DateTime)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.IdentityModel.Policy.EvaluationContext.#ctor*
  parent: System.IdentityModel.Policy.EvaluationContext
  isExternal: false
  name: EvaluationContext
  nameWithType: EvaluationContext.EvaluationContext
- uid: System.IdentityModel.Policy.EvaluationContext.AddClaimSet*
  parent: System.IdentityModel.Policy.EvaluationContext
  isExternal: false
  name: AddClaimSet
  nameWithType: EvaluationContext.AddClaimSet
- uid: System.IdentityModel.Policy.EvaluationContext.ClaimSets*
  parent: System.IdentityModel.Policy.EvaluationContext
  isExternal: false
  name: ClaimSets
  nameWithType: EvaluationContext.ClaimSets
- uid: System.IdentityModel.Policy.EvaluationContext.Generation*
  parent: System.IdentityModel.Policy.EvaluationContext
  isExternal: false
  name: Generation
  nameWithType: EvaluationContext.Generation
- uid: System.IdentityModel.Policy.EvaluationContext.Properties*
  parent: System.IdentityModel.Policy.EvaluationContext
  isExternal: false
  name: Properties
  nameWithType: EvaluationContext.Properties
- uid: System.IdentityModel.Policy.EvaluationContext.RecordExpirationTime*
  parent: System.IdentityModel.Policy.EvaluationContext
  isExternal: false
  name: RecordExpirationTime
  nameWithType: EvaluationContext.RecordExpirationTime
