### YamlMime:ManagedReference
items:
- uid: System.Data.OracleClient.OracleCommand
  id: OracleCommand
  children:
  - System.Data.OracleClient.OracleCommand.#ctor
  - System.Data.OracleClient.OracleCommand.#ctor(System.String)
  - System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection)
  - System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection,System.Data.OracleClient.OracleTransaction)
  - System.Data.OracleClient.OracleCommand.Cancel
  - System.Data.OracleClient.OracleCommand.Clone
  - System.Data.OracleClient.OracleCommand.CommandText
  - System.Data.OracleClient.OracleCommand.CommandTimeout
  - System.Data.OracleClient.OracleCommand.CommandType
  - System.Data.OracleClient.OracleCommand.Connection
  - System.Data.OracleClient.OracleCommand.CreateDbParameter
  - System.Data.OracleClient.OracleCommand.CreateParameter
  - System.Data.OracleClient.OracleCommand.DbConnection
  - System.Data.OracleClient.OracleCommand.DbParameterCollection
  - System.Data.OracleClient.OracleCommand.DbTransaction
  - System.Data.OracleClient.OracleCommand.DesignTimeVisible
  - System.Data.OracleClient.OracleCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  - System.Data.OracleClient.OracleCommand.ExecuteNonQuery
  - System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery(System.Data.OracleClient.OracleString@)
  - System.Data.OracleClient.OracleCommand.ExecuteOracleScalar
  - System.Data.OracleClient.OracleCommand.ExecuteReader
  - System.Data.OracleClient.OracleCommand.ExecuteReader(System.Data.CommandBehavior)
  - System.Data.OracleClient.OracleCommand.ExecuteScalar
  - System.Data.OracleClient.OracleCommand.Parameters
  - System.Data.OracleClient.OracleCommand.Prepare
  - System.Data.OracleClient.OracleCommand.ResetCommandTimeout
  - System.Data.OracleClient.OracleCommand.Transaction
  - System.Data.OracleClient.OracleCommand.UpdatedRowSource
  langs:
  - csharp
  name: OracleCommand
  nameWithType: OracleCommand
  fullName: System.Data.OracleClient.OracleCommand
  type: Class
  summary: "Represents an SQL statement or stored procedure to execute against a database. This class cannot be inherited."
  remarks: "This type is deprecated and will be removed in a future version of the .NET Framework. For more information, see [Oracle and ADO.NET](~/add/includes/ajax-current-ext-md.md).       The OracleCommand class provides the following methods for executing commands against a data source:      |Item|Description|   |----------|-----------------|   |<xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>|Executes commands that return rows.|   |<xref:System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery%2A>|Executes an SQL statement against the <xref:System.Data.OracleClient.OracleCommand.Connection%2A> and returns the number of rows affected.|   |<xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>|Executes commands such as SQL INSERT, DELETE, UPDATE, and SET statements.|   |<xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A>|Retrieves a single value (for example, an aggregate value) from a database as a .NET Framework data type.|   |<xref:System.Data.OracleClient.OracleCommand.ExecuteOracleScalar%2A>|Retrieves a single value (for example, an aggregate value) from a database as an Oracle-specific data type.|       You can reset the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property and reuse the OracleCommand object.       If execution of the command results in a fatal <xref:System.Data.OracleClient.OracleException>, the <xref:System.Data.OracleClient.OracleConnection> may close. However, the user can reopen the connection and continue.      > [!NOTE] >  Unlike the **Command** object in the other .NET Framework data providers (SQL Server, OLE DB, and ODBC), the OracleCommand object does not support a <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> property. Setting a command timeout has no effect and the value returned is always zero."
  example:
  - "The following example uses the <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> method of OracleCommand, along with <xref:System.Data.OracleClient.OracleDataReader> and <xref:System.Data.OracleClient.OracleConnection>, to select rows from a table.  \n  \n [!code-cs[Classic WebData OracleCommand#1](~/add/codesnippet/csharp/t-system.data.oracleclie_7_1.cs)]\n [!code-vb[Classic WebData OracleCommand#1](~/add/codesnippet/visualbasic/t-system.data.oracleclie_7_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("RecordsAffected")]

      [System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OracleCommandDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.ToolboxItem(true)]

      [System.Obsolete("OracleCommand has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260", false)]

      public sealed class OracleCommand : System.Data.Common.DbCommand, ICloneable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbCommand
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteNonQueryAsync
  - System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteReaderAsync
  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior)
  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteScalarAsync
  - System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Connection
  - System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter
  - System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader
  - System.Data.Common.DbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.#ctor
  id: '#ctor'
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: OracleCommand()
  nameWithType: OracleCommand.OracleCommand()
  fullName: System.Data.OracleClient.OracleCommand.OracleCommand()
  type: Constructor
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Initializes a new instance of the <xref href=&quot;System.Data.OracleClient.OracleCommand&quot;></xref>."
  remarks: "The base constructor initializes all fields to their default values. The following table shows initial property values for an instance of <xref:System.Data.OracleClient.OracleCommand>.      |Properties|Initial Value|   |----------------|-------------------|   |<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>|empty string (&quot;&quot;)|   |<xref:System.Data.OracleClient.OracleCommand.CommandType%2A>|`Text`|   |<xref:System.Data.OracleClient.OracleCommand.Connection%2A>|null|"
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.  \n  \n [!code-cs[Classic WebData OracleCommand.OracleCommand#1](~/add/codesnippet/csharp/m-system.data.oracleclie_12_1.cs)]\n [!code-vb[Classic WebData OracleCommand.OracleCommand#1](~/add/codesnippet/visualbasic/m-system.data.oracleclie_12_1.vb)]"
  syntax:
    content: public OracleCommand ();
    parameters: []
  overload: System.Data.OracleClient.OracleCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: OracleCommand(String)
  nameWithType: OracleCommand.OracleCommand(String)
  fullName: System.Data.OracleClient.OracleCommand.OracleCommand(String)
  type: Constructor
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Initializes a new instance of the <xref href=&quot;System.Data.OracleClient.OracleCommand&quot;></xref> class with the text of the query."
  syntax:
    content: public OracleCommand (string commandText);
    parameters:
    - id: commandText
      type: System.String
      description: "The text of the query."
  overload: System.Data.OracleClient.OracleCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection)
  id: '#ctor(System.String,System.Data.OracleClient.OracleConnection)'
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: OracleCommand(String,OracleConnection)
  nameWithType: OracleCommand.OracleCommand(String,OracleConnection)
  fullName: System.Data.OracleClient.OracleCommand.OracleCommand(String,OracleConnection)
  type: Constructor
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Initializes a new instance of the <xref href=&quot;System.Data.OracleClient.OracleCommand&quot;></xref> class with the text of the query and an <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;></xref> object."
  remarks: ''
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleCommand>.  \n  \n [!code-vb[Classic WebData OracleCommand.OracleCommand2#1](~/add/codesnippet/visualbasic/24f167a1-f345-47a8-a620-_1.vb)]\n [!code-cs[Classic WebData OracleCommand.OracleCommand2#1](~/add/codesnippet/csharp/24f167a1-f345-47a8-a620-_1.cs)]"
  syntax:
    content: public OracleCommand (string commandText, System.Data.OracleClient.OracleConnection connection);
    parameters:
    - id: commandText
      type: System.String
      description: "The text of the query."
    - id: connection
      type: System.Data.OracleClient.OracleConnection
      description: "An <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;></xref> object that represents the connection to a database."
  overload: System.Data.OracleClient.OracleCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection,System.Data.OracleClient.OracleTransaction)
  id: '#ctor(System.String,System.Data.OracleClient.OracleConnection,System.Data.OracleClient.OracleTransaction)'
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: OracleCommand(String,OracleConnection,OracleTransaction)
  nameWithType: OracleCommand.OracleCommand(String,OracleConnection,OracleTransaction)
  fullName: System.Data.OracleClient.OracleCommand.OracleCommand(String,OracleConnection,OracleTransaction)
  type: Constructor
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Initializes a new instance of the <xref href=&quot;System.Data.OracleClient.OracleCommand&quot;></xref> class with the text of the query, an <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;></xref> object, and an <xref href=&quot;System.Data.OracleClient.OracleTransaction&quot;></xref>."
  remarks: "The following table shows initial property values for an instance of this implementation of the <xref:System.Data.OracleClient.OracleCommand>.      |Properties|Initial Value|   |----------------|-------------------|   |<xref:System.Data.OracleClient.OracleCommand.CommandText%2A>|`cmdText`|   |<xref:System.Data.OracleClient.OracleCommand.CommandType%2A>|`Text`|   |<xref:System.Data.OracleClient.OracleCommand.Connection%2A>|A new <xref:System.Data.OracleClient.OracleConnection> that is the value for the `connection` parameter.|       You can change the value for any of these parameters by setting the related property."
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OracleCommand.OracleCommand3#1](~/add/codesnippet/visualbasic/c02f7271-efcb-41b3-bc5c-_1.vb)]\n [!code-cs[Classic WebData OracleCommand.OracleCommand3#1](~/add/codesnippet/csharp/c02f7271-efcb-41b3-bc5c-_1.cs)]"
  syntax:
    content: public OracleCommand (string commandText, System.Data.OracleClient.OracleConnection connection, System.Data.OracleClient.OracleTransaction tx);
    parameters:
    - id: commandText
      type: System.String
      description: "The text of the query."
    - id: connection
      type: System.Data.OracleClient.OracleConnection
      description: "An <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;></xref> object that represents the connection to a database."
    - id: tx
      type: System.Data.OracleClient.OracleTransaction
      description: "The <xref href=&quot;System.Data.OracleClient.OracleTransaction&quot;></xref> in which the <xref href=&quot;System.Data.OracleClient.OracleCommand&quot;></xref> executes."
  overload: System.Data.OracleClient.OracleCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.Cancel
  id: Cancel
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: Cancel()
  nameWithType: OracleCommand.Cancel()
  fullName: System.Data.OracleClient.OracleCommand.Cancel()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Attempts to cancel the execution of an <xref href=&quot;System.Data.OracleClient.OracleCommand&quot;></xref>."
  remarks: "If there is nothing to cancel, nothing happens. However, if there is a command in process, and the attempt to cancel fails, no exception is generated."
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleCommand>, executes it, then cancels the execution. To accomplish this, the method is passed a string that is an SQL SELECT statement and a string to use to connect to the database.  \n  \n [!code-vb[Classic WebData OracleCommand.Cancel#1](~/add/codesnippet/visualbasic/m-system.data.oracleclie_6_1.vb)]\n [!code-cs[Classic WebData OracleCommand.Cancel#1](~/add/codesnippet/csharp/m-system.data.oracleclie_6_1.cs)]"
  syntax:
    content: public override void Cancel ();
    parameters: []
  overload: System.Data.OracleClient.OracleCommand.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.Clone
  id: Clone
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: Clone()
  nameWithType: OracleCommand.Clone()
  fullName: System.Data.OracleClient.OracleCommand.Clone()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Creates a copy of this <xref href=&quot;System.Data.OracleClient.OracleCommand&quot;></xref> object."
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "A new <xref href=&quot;System.Data.OracleClient.OracleCommand&quot;></xref> object in which all property values are the same as the original."
  overload: System.Data.OracleClient.OracleCommand.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.CommandText
  id: CommandText
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: CommandText
  nameWithType: OracleCommand.CommandText
  fullName: System.Data.OracleClient.OracleCommand.CommandText
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets or sets the SQL statement or stored procedure to execute against the database."
  remarks: "When the <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> property is set to `StoredProcedure`, the CommandText property should be set to the name of the stored procedure. The user may be required to use escape character syntax if the stored procedure name contains any special characters. The command executes this stored procedure when you call one of the Execute methods.       The .NET Framework Data Provider for Oracle does not support the question mark (?) placeholder for passing parameters to an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`. In this case, named parameters must be used. For example:      ```   SELECT * FROM Customers WHERE CustomerID = :pCustomerID   ```       When using named parameters in an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`, you must precede the parameter name with a colon (:). However, in a stored procedure, or when referring to a named parameter elsewhere in your code (for example, when adding <xref:System.Data.OracleClient.OracleParameter> objects to the <xref:System.Data.OracleClient.OracleCommand.Parameters%2A> property), do not precede the named parameter with a colon (:). The .NET Framework Data Provider for Oracle supplies the colon automatically."
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.  \n  \n [!code-cs[Classic WebData OracleCommand.CommandText#1](~/add/codesnippet/csharp/p-system.data.oracleclie_14_1.cs)]\n [!code-vb[Classic WebData OracleCommand.CommandText#1](~/add/codesnippet/visualbasic/p-system.data.oracleclie_14_1.vb)]"
  syntax:
    content: public override string CommandText { get; set; }
    return:
      type: System.String
      description: "The SQL statement or stored procedure to execute. The default value is an empty string (&quot;&quot;)."
  overload: System.Data.OracleClient.OracleCommand.CommandText*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.CommandTimeout
  id: CommandTimeout
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: CommandTimeout
  nameWithType: OracleCommand.CommandTimeout
  fullName: System.Data.OracleClient.OracleCommand.CommandTimeout
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets or sets the wait time before terminating the attempt to execute a command and generating an error."
  remarks: "An <xref:System.ArgumentException> is generated if the assigned CommandTimeout property value is less than 0."
  syntax:
    content: public override int CommandTimeout { get; set; }
    return:
      type: System.Int32
      description: "The time (in seconds) to wait for the command to execute. The default value is 30 seconds."
  overload: System.Data.OracleClient.OracleCommand.CommandTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.CommandType
  id: CommandType
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: CommandType
  nameWithType: OracleCommand.CommandType
  fullName: System.Data.OracleClient.OracleCommand.CommandType
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets or sets a value indicating how the <xref:System.Data.OracleClient.OracleCommand.CommandText*> property is interpreted."
  remarks: "When the CommandType property is set to `StoredProcedure`, you should set the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property to the full Oracle call syntax. The command then executes this stored procedure when you call one of the Execute methods (for example, <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> or <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>).       The <xref:System.Data.OracleClient.OracleCommand.Connection%2A>, CommandType and <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> properties cannot be set if the current connection is performing an execute or fetch operation.       The .NET Framework Data Provider for Oracle does not support the question mark (?) placeholder for passing parameters to an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`. In this case, named parameters must be used. For example:      ```   SELECT * FROM Customers WHERE CustomerID = :pCustomerID   ```       When using named parameters in an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`, you must precede the parameter name with a colon (:). However, in a stored procedure, or when referring to a named parameter elsewhere in your code (for example, when adding <xref:System.Data.OracleClient.OracleParameter> objects to the <xref:System.Data.OracleClient.OracleCommand.Parameters%2A> property), do not precede the named parameter with a colon (:). The .NET Framework Data Provider for Oracle supplies the colon automatically."
  example:
  - "The following example creates an instance of a derived class <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OracleCommand.CommandType#1](~/add/codesnippet/visualbasic/p-system.data.oracleclie_2_1.vb)]\n [!code-cs[Classic WebData OracleCommand.CommandType#1](~/add/codesnippet/csharp/p-system.data.oracleclie_2_1.cs)]"
  syntax:
    content: public override System.Data.CommandType CommandType { get; set; }
    return:
      type: System.Data.CommandType
      description: "One of the <xref href=&quot;System.Data.CommandType&quot;></xref> values. The default is <xref uid=&quot;langword_csharp_Text&quot; name=&quot;Text&quot; href=&quot;&quot;></xref>."
  overload: System.Data.OracleClient.OracleCommand.CommandType*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The value was not a valid <xref href=&quot;System.Data.CommandType&quot;></xref>."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.Connection
  id: Connection
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: Connection
  nameWithType: OracleCommand.Connection
  fullName: System.Data.OracleClient.OracleCommand.Connection
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets or sets the <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;></xref> used by this instance of the <xref href=&quot;System.Data.OracleClient.OracleCommand&quot;></xref>."
  remarks: "You cannot set the Connection, <xref:System.Data.OracleClient.OracleCommand.CommandType%2A>, and <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> properties if the current connection is performing an execute or fetch operation.       If you set Connection while a transaction is in progress and the <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> property is not null, an <xref:System.InvalidOperationException> is generated. If you set Connection after the transaction has been committed or rolled back, and the <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> property is not null, the <xref:System.Data.OracleClient.OracleCommand.Transaction%2A> property is then set to a null value."
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleCommand> and sets some of its properties.  \n  \n [!code-cs[Classic WebData OracleCommand.Connection#1](~/add/codesnippet/csharp/p-system.data.oracleclie_11_1.cs)]\n [!code-vb[Classic WebData OracleCommand.Connection#1](~/add/codesnippet/visualbasic/p-system.data.oracleclie_11_1.vb)]"
  syntax:
    content: public System.Data.OracleClient.OracleConnection Connection { get; set; }
    return:
      type: System.Data.OracleClient.OracleConnection
      description: "The connection to a data source. The default is a null value."
  overload: System.Data.OracleClient.OracleCommand.Connection*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The Connection property was changed while a transaction was in progress."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.CreateDbParameter
  id: CreateDbParameter
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: CreateDbParameter()
  nameWithType: OracleCommand.CreateDbParameter()
  fullName: System.Data.OracleClient.OracleCommand.CreateDbParameter()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override System.Data.Common.DbParameter CreateDbParameter ();
    parameters: []
    return:
      type: System.Data.Common.DbParameter
      description: "To be added."
  overload: System.Data.OracleClient.OracleCommand.CreateDbParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.CreateParameter
  id: CreateParameter
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: CreateParameter()
  nameWithType: OracleCommand.CreateParameter()
  fullName: System.Data.OracleClient.OracleCommand.CreateParameter()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Creates a new instance of an <xref href=&quot;System.Data.OracleClient.OracleParameter&quot;></xref> object."
  remarks: "The CreateParameter method is a strongly-typed version of <xref:System.Data.IDbCommand.CreateParameter%2A>."
  syntax:
    content: public System.Data.OracleClient.OracleParameter CreateParameter ();
    parameters: []
    return:
      type: System.Data.OracleClient.OracleParameter
      description: "An <xref href=&quot;System.Data.OracleClient.OracleParameter&quot;></xref> object."
  overload: System.Data.OracleClient.OracleCommand.CreateParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.DbConnection
  id: DbConnection
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: DbConnection
  nameWithType: OracleCommand.DbConnection
  fullName: System.Data.OracleClient.OracleCommand.DbConnection
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override System.Data.Common.DbConnection DbConnection { get; set; }
    return:
      type: System.Data.Common.DbConnection
      description: "To be added."
  overload: System.Data.OracleClient.OracleCommand.DbConnection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.DbParameterCollection
  id: DbParameterCollection
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: DbParameterCollection
  nameWithType: OracleCommand.DbParameterCollection
  fullName: System.Data.OracleClient.OracleCommand.DbParameterCollection
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override System.Data.Common.DbParameterCollection DbParameterCollection { get; }
    return:
      type: System.Data.Common.DbParameterCollection
      description: "To be added."
  overload: System.Data.OracleClient.OracleCommand.DbParameterCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.DbTransaction
  id: DbTransaction
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: DbTransaction
  nameWithType: OracleCommand.DbTransaction
  fullName: System.Data.OracleClient.OracleCommand.DbTransaction
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override System.Data.Common.DbTransaction DbTransaction { get; set; }
    return:
      type: System.Data.Common.DbTransaction
      description: "To be added."
  overload: System.Data.OracleClient.OracleCommand.DbTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.DesignTimeVisible
  id: DesignTimeVisible
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: DesignTimeVisible
  nameWithType: OracleCommand.DesignTimeVisible
  fullName: System.Data.OracleClient.OracleCommand.DesignTimeVisible
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets or sets a value indicating whether the command object should be visible in a customized interface control."
  syntax:
    content: public override bool DesignTimeVisible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, if the command object should be visible in a control; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Data.OracleClient.OracleCommand.DesignTimeVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  id: ExecuteDbDataReader(System.Data.CommandBehavior)
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: ExecuteDbDataReader(CommandBehavior)
  nameWithType: OracleCommand.ExecuteDbDataReader(CommandBehavior)
  fullName: System.Data.OracleClient.OracleCommand.ExecuteDbDataReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override System.Data.Common.DbDataReader ExecuteDbDataReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "To be added."
    return:
      type: System.Data.Common.DbDataReader
      description: "To be added."
  overload: System.Data.OracleClient.OracleCommand.ExecuteDbDataReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.ExecuteNonQuery
  id: ExecuteNonQuery
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: ExecuteNonQuery()
  nameWithType: OracleCommand.ExecuteNonQuery()
  fullName: System.Data.OracleClient.OracleCommand.ExecuteNonQuery()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Executes an SQL statement against the <xref:System.Data.OracleClient.OracleCommand.Connection*> and returns the number of rows affected."
  remarks: "You can use ExecuteNonQuery to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables); or to change the data in a database, without using a <xref:System.Data.DataSet>, by executing UPDATE, INSERT, or DELETE statements.       Although ExecuteNonQuery does not return any rows, any output parameters or return values mapped to parameters are populated with data.       For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command. For CREATE TABLE and DROP TABLE statements, the return value is 0. For all other types of statements, the return value is -1. If a rollback occurs, the return value is also -1."
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleCommand> and then executes it by using ExecuteNonQuery. The example is passed a string that is an SQL statement (such as UPDATE, INSERT, or DELETE) and a string to use to connect to the database.  \n  \n [!code-cs[Classic WebData OracleCommand.ExecuteNonQuery#1](~/add/codesnippet/csharp/m-system.data.oracleclie_8_1.cs)]\n [!code-vb[Classic WebData OracleCommand.ExecuteNonQuery#1](~/add/codesnippet/visualbasic/m-system.data.oracleclie_8_1.vb)]"
  syntax:
    content: public override int ExecuteNonQuery ();
    parameters: []
    return:
      type: System.Int32
      description: "For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command. For CREATE TABLE and DROP TABLE statements, the return value is 0. For all other types of statements, the return value is -1."
  overload: System.Data.OracleClient.OracleCommand.ExecuteNonQuery*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The connection does not exist.       -or-       The connection is not open."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery(System.Data.OracleClient.OracleString@)
  id: ExecuteOracleNonQuery(System.Data.OracleClient.OracleString@)
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: ExecuteOracleNonQuery(OracleString)
  nameWithType: OracleCommand.ExecuteOracleNonQuery(OracleString)
  fullName: System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery(OracleString)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Executes an SQL statement against the <xref:System.Data.OracleClient.OracleCommand.Connection*> and returns the number of rows affected."
  remarks: "You can use ExecuteOracleNonQuery to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables); or to change the data in a database, without using a <xref:System.Data.DataSet>, by executing UPDATE, INSERT, or DELETE statements.       ExecuteOracleNonQuery differs from <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> in that it returns `rowid` as an output parameter if you are executing an INSERT, DELETE, or UPDATE statement that affects exactly one row. This allows you to uniquely identify a row in the Oracle database, which can allow you to increase performance in subsequent, related queries.       Although ExecuteOracleNonQuery does not return any rows, any output parameters or return values mapped to parameters are populated with data."
  syntax:
    content: public int ExecuteOracleNonQuery (out System.Data.OracleClient.OracleString rowid);
    parameters:
    - id: rowid
      type: System.Data.OracleClient.OracleString
      description: "A base64 string representation of the actual row ID in the server."
    return:
      type: System.Int32
      description: "For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command. For CREATE TABLE and DROP TABLE statements, the return value is 0. For all other types of statements, the return value is -1."
  overload: System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The connection does not exist.       -or-       The connection is not open."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.ExecuteOracleScalar
  id: ExecuteOracleScalar
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: ExecuteOracleScalar()
  nameWithType: OracleCommand.ExecuteOracleScalar()
  fullName: System.Data.OracleClient.OracleCommand.ExecuteOracleScalar()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Executes the query, and returns the first column of the first row in the result set returned by the query as an Oracle-specific data type. Extra columns or rows are ignored."
  remarks: "Use the ExecuteOracleScalar method to retrieve a single value (for example, an aggregate value) from a database. This requires less code than using the <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> method, and then performing the operations necessary to generate the single value from the data returned by an <xref:System.Data.OracleClient.OracleDataReader>.       A typical ExecuteOracleScalar query can be formatted as in the following C# example:      ```   command.CommandText = &quot;SELECT COUNT(*) AS NumberOfRegions FROM Region&quot;;   count = command.ExecuteOracleScalar();   ```"
  syntax:
    content: public object ExecuteOracleScalar ();
    parameters: []
    return:
      type: System.Object
      description: "The first column of the first row in the result set as an Oracle-specific data type, or a null reference if the result is a <xref uid=&quot;langword_csharp_REF CURSOR&quot; name=&quot;REF CURSOR&quot; href=&quot;&quot;></xref>."
  overload: System.Data.OracleClient.OracleCommand.ExecuteOracleScalar*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.ExecuteReader
  id: ExecuteReader
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: ExecuteReader()
  nameWithType: OracleCommand.ExecuteReader()
  fullName: System.Data.OracleClient.OracleCommand.ExecuteReader()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Sends the <xref:System.Data.OracleClient.OracleCommand.CommandText*> to the <xref:System.Data.OracleClient.OracleCommand.Connection*> and builds an <xref href=&quot;System.Data.OracleClient.OracleDataReader&quot;></xref>."
  remarks: "When the <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property should be set to the name of the stored procedure. The command then executes this stored procedure when you call ExecuteReader.       More than one <xref:System.Data.OracleClient.OracleDataReader> can be open at any given time."
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleCommand>, and then executes it by passing a string that is an SQL SELECT statement, and a string to use to connect to the data source.  \n  \n [!code-vb[Classic WebData OracleCommand.ExecuteReader1#1](~/add/codesnippet/visualbasic/m-system.data.oracleclie_10_1.vb)]\n [!code-cs[Classic WebData OracleCommand.ExecuteReader1#1](~/add/codesnippet/csharp/m-system.data.oracleclie_10_1.cs)]"
  syntax:
    content: public System.Data.OracleClient.OracleDataReader ExecuteReader ();
    parameters: []
    return:
      type: System.Data.OracleClient.OracleDataReader
      description: "An <xref href=&quot;System.Data.OracleClient.OracleDataReader&quot;></xref> object."
  overload: System.Data.OracleClient.OracleCommand.ExecuteReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.ExecuteReader(System.Data.CommandBehavior)
  id: ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: ExecuteReader(CommandBehavior)
  nameWithType: OracleCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.OracleClient.OracleCommand.ExecuteReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Sends the <xref:System.Data.OracleClient.OracleCommand.CommandText*> to the <xref:System.Data.OracleClient.OracleCommand.Connection*>, and builds an <xref href=&quot;System.Data.OracleClient.OracleDataReader&quot;></xref> using one of the <xref href=&quot;System.Data.CommandBehavior&quot;></xref> values."
  remarks: "If you expect your SQL statement to return only a single row, specifying `SingleRow` as the <xref:System.Data.CommandBehavior> value may improve application performance.       When the <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property should be set to the name of the stored procedure. The command then executes this stored procedure when you call <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>.       The <xref:System.Data.OracleClient.OracleDataReader> supports a special mode that enables large binary values to be read efficiently. For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>.       More than one <xref:System.Data.OracleClient.OracleDataReader> can be open at any given time."
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleCommand>, and then executes it by passing a string that is an SQL SELECT statement, and a string to use to connect to the database. <xref:System.Data.CommandBehavior> is then set to <xref:System.Data.CommandBehavior>.  \n  \n [!code-cs[Classic WebData OracleCommand.ExecuteReader2#1](~/add/codesnippet/csharp/db42fed5-256c-4ac8-928b-_1.cs)]\n [!code-vb[Classic WebData OracleCommand.ExecuteReader2#1](~/add/codesnippet/visualbasic/db42fed5-256c-4ac8-928b-_1.vb)]"
  syntax:
    content: public System.Data.OracleClient.OracleDataReader ExecuteReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "One of the <xref href=&quot;System.Data.CommandBehavior&quot;></xref> values."
    return:
      type: System.Data.OracleClient.OracleDataReader
      description: "An <xref href=&quot;System.Data.OracleClient.OracleDataReader&quot;></xref> object."
  overload: System.Data.OracleClient.OracleCommand.ExecuteReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.ExecuteScalar
  id: ExecuteScalar
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: ExecuteScalar()
  nameWithType: OracleCommand.ExecuteScalar()
  fullName: System.Data.OracleClient.OracleCommand.ExecuteScalar()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Executes the query, and returns the first column of the first row in the result set returned by the query as a .NET Framework data type. Extra columns or rows are ignored."
  remarks: "Use the ExecuteScalar method to retrieve a single value (for example, an aggregate value) from a database. This requires less code than using the <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A> method, and then performing the operations necessary to generate the single value from the data returned by an <xref:System.Data.OracleClient.OracleDataReader>.       A typical ExecuteScalar query can be formatted as in the following C# example:      ```   CommandText = &quot;SELECT COUNT(*) FROM Region&quot;;   Int32 count = (int32) ExecuteScalar();   ```"
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleCommand> and then executes it using ExecuteScalar. The example is passed a string that is an SQL statement that returns an aggregate result, and a string to use to connect to the database.  \n  \n [!code-cs[Classic WebData OracleCommand.ExecuteScalar#1](~/add/codesnippet/csharp/m-system.data.oracleclie_1_1.cs)]\n [!code-vb[Classic WebData OracleCommand.ExecuteScalar#1](~/add/codesnippet/visualbasic/m-system.data.oracleclie_1_1.vb)]"
  syntax:
    content: public override object ExecuteScalar ();
    parameters: []
    return:
      type: System.Object
      description: "The first column of the first row in the result set as a .NET Framework data type, or a null reference if the result set is empty or the result is a <xref uid=&quot;langword_csharp_REF CURSOR&quot; name=&quot;REF CURSOR&quot; href=&quot;&quot;></xref>."
  overload: System.Data.OracleClient.OracleCommand.ExecuteScalar*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.Parameters
  id: Parameters
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: Parameters
  nameWithType: OracleCommand.Parameters
  fullName: System.Data.OracleClient.OracleCommand.Parameters
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets the <xref href=&quot;System.Data.OracleClient.OracleParameterCollection&quot;></xref>."
  remarks: "When the <xref:System.Data.OracleClient.OracleCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.OracleClient.OracleCommand.CommandText%2A> property should be set to the name of the stored procedure. The user may be required to use escape character syntax if the stored procedure name contains any special characters. The command executes this stored procedure when you call one of the Execute methods.       The .NET Framework Data Provider for Oracle does not support the question mark (?) placeholder for passing parameters to an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`. In this case, named parameters must be used. For example:      ```   SELECT * FROM Customers WHERE CustomerID = :pCustomerID   ```       When using named parameters in an SQL statement called by an <xref:System.Data.OracleClient.OracleCommand> of `CommandType.Text`, you must precede the parameter name with a colon (:). However, in a stored procedure, or when referring to a named parameter elsewhere in your code (for example, when adding <xref:System.Data.OracleClient.OracleParameter> objects to the Parameters property), do not precede the named parameter with a colon (:). The .NET Framework Data Provider for Oracle supplies the colon automatically."
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleCommand> and displays its parameters. To accomplish this, the method is passed an <xref:System.Data.OracleClient.OracleConnection>, a query string that is an SQL SELECT statement, and an array of <xref:System.Data.OracleClient.OracleParameter> objects.  \n  \n [!code-cs[Classic WebData OracleCommand.Parameters#1](~/add/codesnippet/csharp/p-system.data.oracleclie_6_1.cs)]\n [!code-vb[Classic WebData OracleCommand.Parameters#1](~/add/codesnippet/visualbasic/p-system.data.oracleclie_6_1.vb)]"
  syntax:
    content: public System.Data.OracleClient.OracleParameterCollection Parameters { get; }
    return:
      type: System.Data.OracleClient.OracleParameterCollection
      description: "The parameters of the SQL statement or stored procedure. The default is an empty collection."
  overload: System.Data.OracleClient.OracleCommand.Parameters*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.Prepare
  id: Prepare
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: Prepare()
  nameWithType: OracleCommand.Prepare()
  fullName: System.Data.OracleClient.OracleCommand.Prepare()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Creates a prepared (or compiled) version of the command at the data source."
  remarks: "Before you call Prepare, specify the data type of each parameter in the statement to be prepared."
  syntax:
    content: public override void Prepare ();
    parameters: []
  overload: System.Data.OracleClient.OracleCommand.Prepare*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.Data.OracleClient.OracleCommand.Connection*> is not set.       -or-       The <xref:System.Data.OracleClient.OracleCommand.Connection*> is not <xref:System.Data.OracleClient.OracleConnection.Open*>."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.ResetCommandTimeout
  id: ResetCommandTimeout
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: ResetCommandTimeout()
  nameWithType: OracleCommand.ResetCommandTimeout()
  fullName: System.Data.OracleClient.OracleCommand.ResetCommandTimeout()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Resets the <xref:System.Data.OracleClient.OracleCommand.CommandTimeout*> property to the default value."
  remarks: "The default value of the <xref:System.Data.OracleClient.OracleCommand.CommandTimeout%2A> is 30 seconds."
  syntax:
    content: public void ResetCommandTimeout ();
    parameters: []
  overload: System.Data.OracleClient.OracleCommand.ResetCommandTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.Transaction
  id: Transaction
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: Transaction
  nameWithType: OracleCommand.Transaction
  fullName: System.Data.OracleClient.OracleCommand.Transaction
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets or sets the <xref href=&quot;System.Data.OracleClient.OracleTransaction&quot;></xref> within which the <xref href=&quot;System.Data.OracleClient.OracleCommand&quot;></xref> executes."
  remarks: "You cannot set the Transaction property if it is already set to a specific value, and the command is in the process of executing. If you set the transaction property to an <xref:System.Data.OracleClient.OracleTransaction> object that is not connected to the same <xref:System.Data.OracleClient.OracleConnection> as the <xref:System.Data.OracleClient.OracleCommand> object, an exception will be thrown the next time you attempt to execute a statement."
  syntax:
    content: public System.Data.OracleClient.OracleTransaction Transaction { get; set; }
    return:
      type: System.Data.OracleClient.OracleTransaction
      description: "An <xref href=&quot;System.Data.OracleClient.OracleTransaction&quot;></xref>. The default is a null value."
  overload: System.Data.OracleClient.OracleCommand.Transaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleCommand.UpdatedRowSource
  id: UpdatedRowSource
  parent: System.Data.OracleClient.OracleCommand
  langs:
  - csharp
  name: UpdatedRowSource
  nameWithType: OracleCommand.UpdatedRowSource
  fullName: System.Data.OracleClient.OracleCommand.UpdatedRowSource
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Gets or sets a value that specifies how the <xref uid=&quot;langword_csharp_Update&quot; name=&quot;Update&quot; href=&quot;&quot;></xref> method should apply command results to the <xref href=&quot;System.Data.DataRow&quot;></xref>."
  remarks: "The default <xref:System.Data.UpdateRowSource> value is `Both` unless the command is automatically generated (as in the case of the <xref:System.Data.OracleClient.OracleCommandBuilder>), in which case the default is `None`.       For more information about using the <xref:System.Data.UpdateRowSource> property, see [DataAdapter Parameters](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override System.Data.UpdateRowSource UpdatedRowSource { get; set; }
    return:
      type: System.Data.UpdateRowSource
      description: "One of the <xref href=&quot;System.Data.UpdateRowSource&quot;></xref> values."
  overload: System.Data.OracleClient.OracleCommand.UpdatedRowSource*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The value entered was not one of the <xref href=&quot;System.Data.UpdateRowSource&quot;></xref> values."
  platform:
  - net462
references:
- uid: System.Data.Common.DbCommand
  isExternal: false
  name: System.Data.Common.DbCommand
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.OracleClient.OracleCommand.#ctor
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: OracleCommand()
  nameWithType: OracleCommand.OracleCommand()
  fullName: System.Data.OracleClient.OracleCommand.OracleCommand()
- uid: System.Data.OracleClient.OracleCommand.#ctor(System.String)
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: OracleCommand(String)
  nameWithType: OracleCommand.OracleCommand(String)
  fullName: System.Data.OracleClient.OracleCommand.OracleCommand(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection)
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: OracleCommand(String,OracleConnection)
  nameWithType: OracleCommand.OracleCommand(String,OracleConnection)
  fullName: System.Data.OracleClient.OracleCommand.OracleCommand(String,OracleConnection)
- uid: System.Data.OracleClient.OracleConnection
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleConnection
  nameWithType: OracleConnection
  fullName: System.Data.OracleClient.OracleConnection
- uid: System.Data.OracleClient.OracleCommand.#ctor(System.String,System.Data.OracleClient.OracleConnection,System.Data.OracleClient.OracleTransaction)
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: OracleCommand(String,OracleConnection,OracleTransaction)
  nameWithType: OracleCommand.OracleCommand(String,OracleConnection,OracleTransaction)
  fullName: System.Data.OracleClient.OracleCommand.OracleCommand(String,OracleConnection,OracleTransaction)
- uid: System.Data.OracleClient.OracleTransaction
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleTransaction
  nameWithType: OracleTransaction
  fullName: System.Data.OracleClient.OracleTransaction
- uid: System.Data.OracleClient.OracleCommand.Cancel
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: Cancel()
  nameWithType: OracleCommand.Cancel()
  fullName: System.Data.OracleClient.OracleCommand.Cancel()
- uid: System.Data.OracleClient.OracleCommand.Clone
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: Clone()
  nameWithType: OracleCommand.Clone()
  fullName: System.Data.OracleClient.OracleCommand.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.OracleClient.OracleCommand.CommandText
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: CommandText
  nameWithType: OracleCommand.CommandText
  fullName: System.Data.OracleClient.OracleCommand.CommandText
- uid: System.Data.OracleClient.OracleCommand.CommandTimeout
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: CommandTimeout
  nameWithType: OracleCommand.CommandTimeout
  fullName: System.Data.OracleClient.OracleCommand.CommandTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.OracleClient.OracleCommand.CommandType
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: CommandType
  nameWithType: OracleCommand.CommandType
  fullName: System.Data.OracleClient.OracleCommand.CommandType
- uid: System.Data.CommandType
  parent: System.Data
  isExternal: false
  name: CommandType
  nameWithType: CommandType
  fullName: System.Data.CommandType
- uid: System.Data.OracleClient.OracleCommand.Connection
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: Connection
  nameWithType: OracleCommand.Connection
  fullName: System.Data.OracleClient.OracleCommand.Connection
- uid: System.Data.OracleClient.OracleCommand.CreateDbParameter
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: CreateDbParameter()
  nameWithType: OracleCommand.CreateDbParameter()
  fullName: System.Data.OracleClient.OracleCommand.CreateDbParameter()
- uid: System.Data.Common.DbParameter
  parent: System.Data.Common
  isExternal: false
  name: DbParameter
  nameWithType: DbParameter
  fullName: System.Data.Common.DbParameter
- uid: System.Data.OracleClient.OracleCommand.CreateParameter
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: CreateParameter()
  nameWithType: OracleCommand.CreateParameter()
  fullName: System.Data.OracleClient.OracleCommand.CreateParameter()
- uid: System.Data.OracleClient.OracleParameter
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleParameter
  nameWithType: OracleParameter
  fullName: System.Data.OracleClient.OracleParameter
- uid: System.Data.OracleClient.OracleCommand.DbConnection
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: DbConnection
  nameWithType: OracleCommand.DbConnection
  fullName: System.Data.OracleClient.OracleCommand.DbConnection
- uid: System.Data.Common.DbConnection
  parent: System.Data.Common
  isExternal: false
  name: DbConnection
  nameWithType: DbConnection
  fullName: System.Data.Common.DbConnection
- uid: System.Data.OracleClient.OracleCommand.DbParameterCollection
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: DbParameterCollection
  nameWithType: OracleCommand.DbParameterCollection
  fullName: System.Data.OracleClient.OracleCommand.DbParameterCollection
- uid: System.Data.Common.DbParameterCollection
  parent: System.Data.Common
  isExternal: false
  name: DbParameterCollection
  nameWithType: DbParameterCollection
  fullName: System.Data.Common.DbParameterCollection
- uid: System.Data.OracleClient.OracleCommand.DbTransaction
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: DbTransaction
  nameWithType: OracleCommand.DbTransaction
  fullName: System.Data.OracleClient.OracleCommand.DbTransaction
- uid: System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: false
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: System.Data.OracleClient.OracleCommand.DesignTimeVisible
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: DesignTimeVisible
  nameWithType: OracleCommand.DesignTimeVisible
  fullName: System.Data.OracleClient.OracleCommand.DesignTimeVisible
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.OracleClient.OracleCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteDbDataReader(CommandBehavior)
  nameWithType: OracleCommand.ExecuteDbDataReader(CommandBehavior)
  fullName: System.Data.OracleClient.OracleCommand.ExecuteDbDataReader(CommandBehavior)
- uid: System.Data.Common.DbDataReader
  parent: System.Data.Common
  isExternal: false
  name: DbDataReader
  nameWithType: DbDataReader
  fullName: System.Data.Common.DbDataReader
- uid: System.Data.CommandBehavior
  parent: System.Data
  isExternal: false
  name: CommandBehavior
  nameWithType: CommandBehavior
  fullName: System.Data.CommandBehavior
- uid: System.Data.OracleClient.OracleCommand.ExecuteNonQuery
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteNonQuery()
  nameWithType: OracleCommand.ExecuteNonQuery()
  fullName: System.Data.OracleClient.OracleCommand.ExecuteNonQuery()
- uid: System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery(System.Data.OracleClient.OracleString@)
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteOracleNonQuery(OracleString)
  nameWithType: OracleCommand.ExecuteOracleNonQuery(OracleString)
  fullName: System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery(OracleString)
- uid: System.Data.OracleClient.OracleString
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleString
  nameWithType: OracleString
  fullName: System.Data.OracleClient.OracleString
- uid: System.Data.OracleClient.OracleCommand.ExecuteOracleScalar
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteOracleScalar()
  nameWithType: OracleCommand.ExecuteOracleScalar()
  fullName: System.Data.OracleClient.OracleCommand.ExecuteOracleScalar()
- uid: System.Data.OracleClient.OracleCommand.ExecuteReader
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteReader()
  nameWithType: OracleCommand.ExecuteReader()
  fullName: System.Data.OracleClient.OracleCommand.ExecuteReader()
- uid: System.Data.OracleClient.OracleDataReader
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleDataReader
  nameWithType: OracleDataReader
  fullName: System.Data.OracleClient.OracleDataReader
- uid: System.Data.OracleClient.OracleCommand.ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteReader(CommandBehavior)
  nameWithType: OracleCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.OracleClient.OracleCommand.ExecuteReader(CommandBehavior)
- uid: System.Data.OracleClient.OracleCommand.ExecuteScalar
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteScalar()
  nameWithType: OracleCommand.ExecuteScalar()
  fullName: System.Data.OracleClient.OracleCommand.ExecuteScalar()
- uid: System.Data.OracleClient.OracleCommand.Parameters
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: Parameters
  nameWithType: OracleCommand.Parameters
  fullName: System.Data.OracleClient.OracleCommand.Parameters
- uid: System.Data.OracleClient.OracleParameterCollection
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleParameterCollection
  nameWithType: OracleParameterCollection
  fullName: System.Data.OracleClient.OracleParameterCollection
- uid: System.Data.OracleClient.OracleCommand.Prepare
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: Prepare()
  nameWithType: OracleCommand.Prepare()
  fullName: System.Data.OracleClient.OracleCommand.Prepare()
- uid: System.Data.OracleClient.OracleCommand.ResetCommandTimeout
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ResetCommandTimeout()
  nameWithType: OracleCommand.ResetCommandTimeout()
  fullName: System.Data.OracleClient.OracleCommand.ResetCommandTimeout()
- uid: System.Data.OracleClient.OracleCommand.Transaction
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: Transaction
  nameWithType: OracleCommand.Transaction
  fullName: System.Data.OracleClient.OracleCommand.Transaction
- uid: System.Data.OracleClient.OracleCommand.UpdatedRowSource
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: UpdatedRowSource
  nameWithType: OracleCommand.UpdatedRowSource
  fullName: System.Data.OracleClient.OracleCommand.UpdatedRowSource
- uid: System.Data.UpdateRowSource
  parent: System.Data
  isExternal: false
  name: UpdateRowSource
  nameWithType: UpdateRowSource
  fullName: System.Data.UpdateRowSource
- uid: System.Data.OracleClient.OracleCommand.#ctor*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: OracleCommand
  nameWithType: OracleCommand.OracleCommand
- uid: System.Data.OracleClient.OracleCommand.Cancel*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: Cancel
  nameWithType: OracleCommand.Cancel
- uid: System.Data.OracleClient.OracleCommand.Clone*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: Clone
  nameWithType: OracleCommand.Clone
- uid: System.Data.OracleClient.OracleCommand.CommandText*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: CommandText
  nameWithType: OracleCommand.CommandText
- uid: System.Data.OracleClient.OracleCommand.CommandTimeout*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: CommandTimeout
  nameWithType: OracleCommand.CommandTimeout
- uid: System.Data.OracleClient.OracleCommand.CommandType*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: CommandType
  nameWithType: OracleCommand.CommandType
- uid: System.Data.OracleClient.OracleCommand.Connection*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: Connection
  nameWithType: OracleCommand.Connection
- uid: System.Data.OracleClient.OracleCommand.CreateDbParameter*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: CreateDbParameter
  nameWithType: OracleCommand.CreateDbParameter
- uid: System.Data.OracleClient.OracleCommand.CreateParameter*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: CreateParameter
  nameWithType: OracleCommand.CreateParameter
- uid: System.Data.OracleClient.OracleCommand.DbConnection*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: DbConnection
  nameWithType: OracleCommand.DbConnection
- uid: System.Data.OracleClient.OracleCommand.DbParameterCollection*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: DbParameterCollection
  nameWithType: OracleCommand.DbParameterCollection
- uid: System.Data.OracleClient.OracleCommand.DbTransaction*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: DbTransaction
  nameWithType: OracleCommand.DbTransaction
- uid: System.Data.OracleClient.OracleCommand.DesignTimeVisible*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: DesignTimeVisible
  nameWithType: OracleCommand.DesignTimeVisible
- uid: System.Data.OracleClient.OracleCommand.ExecuteDbDataReader*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteDbDataReader
  nameWithType: OracleCommand.ExecuteDbDataReader
- uid: System.Data.OracleClient.OracleCommand.ExecuteNonQuery*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteNonQuery
  nameWithType: OracleCommand.ExecuteNonQuery
- uid: System.Data.OracleClient.OracleCommand.ExecuteOracleNonQuery*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteOracleNonQuery
  nameWithType: OracleCommand.ExecuteOracleNonQuery
- uid: System.Data.OracleClient.OracleCommand.ExecuteOracleScalar*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteOracleScalar
  nameWithType: OracleCommand.ExecuteOracleScalar
- uid: System.Data.OracleClient.OracleCommand.ExecuteReader*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteReader
  nameWithType: OracleCommand.ExecuteReader
- uid: System.Data.OracleClient.OracleCommand.ExecuteScalar*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ExecuteScalar
  nameWithType: OracleCommand.ExecuteScalar
- uid: System.Data.OracleClient.OracleCommand.Parameters*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: Parameters
  nameWithType: OracleCommand.Parameters
- uid: System.Data.OracleClient.OracleCommand.Prepare*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: Prepare
  nameWithType: OracleCommand.Prepare
- uid: System.Data.OracleClient.OracleCommand.ResetCommandTimeout*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: ResetCommandTimeout
  nameWithType: OracleCommand.ResetCommandTimeout
- uid: System.Data.OracleClient.OracleCommand.Transaction*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: Transaction
  nameWithType: OracleCommand.Transaction
- uid: System.Data.OracleClient.OracleCommand.UpdatedRowSource*
  parent: System.Data.OracleClient.OracleCommand
  isExternal: false
  name: UpdatedRowSource
  nameWithType: OracleCommand.UpdatedRowSource
