### YamlMime:ManagedReference
items:
- uid: System.Drawing.PointConverter
  id: PointConverter
  children:
  - System.Drawing.PointConverter.#ctor
  - System.Drawing.PointConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Drawing.PointConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Drawing.PointConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.Drawing.PointConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  - System.Drawing.PointConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.Drawing.PointConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.Drawing.PointConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.Drawing.PointConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  langs:
  - csharp
  name: PointConverter
  nameWithType: PointConverter
  fullName: System.Drawing.PointConverter
  type: Class
  summary: "Converts a <xref href=&quot;System.Drawing.Point&quot;></xref> object from one data type to another."
  remarks: "The PointConverter class is typically used for creating a design-time experience for controls that have properties that are of type <xref:System.Drawing.GraphicsUnit>, and is used to convert points to strings for display in a designer and to convert strings entered in a designer to a <xref:System.Drawing.GraphicsUnit> object. Access this class through the <xref:System.ComponentModel.TypeDescriptor> object."
  example:
  - "The following code example demonstrates how to use the PointConverter and the <xref:System.Drawing.Point.op_Subtraction%2A> operator. This example is designed to be used with Windows Forms. Paste this code into a form and call the `ShowPointConverter` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs> .  \n  \n [!code-cpp[System.Drawing.Converters#1](~/add/codesnippet/cpp/t-system.drawing.pointco_1.cpp)]\n [!code-cs[System.Drawing.Converters#1](~/add/codesnippet/csharp/t-system.drawing.pointco_1.cs)]\n [!code-vb[System.Drawing.Converters#1](~/add/codesnippet/visualbasic/t-system.drawing.pointco_1.vb)]"
  syntax:
    content: 'public class PointConverter : System.ComponentModel.TypeConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.Drawing.PointConverter.#ctor
  id: '#ctor'
  parent: System.Drawing.PointConverter
  langs:
  - csharp
  name: PointConverter()
  nameWithType: PointConverter.PointConverter()
  fullName: System.Drawing.PointConverter.PointConverter()
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Initializes a new instance of the <xref href=&quot;System.Drawing.PointConverter&quot;></xref> class."
  syntax:
    content: public PointConverter ();
    parameters: []
  overload: System.Drawing.PointConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.PointConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Drawing.PointConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: PointConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Drawing.PointConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Determines if this converter can convert an object in the given source type to the native type of the converter."
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "A formatter context. This object can be used to get additional information about the environment this converter is being called from. This may be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, so you should always check. Also, properties on the context object may also return <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: sourceType
      type: System.Type
      description: "The type you want to convert from."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if this object can perform the conversion; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Drawing.PointConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.PointConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Drawing.PointConverter
  langs:
  - csharp
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: PointConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Drawing.PointConverter.CanConvertTo(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Gets a value indicating whether this converter can convert an object to the given destination type using the context."
  remarks: "The `context` parameter can be used to get additional information about the environment this converter is being called from. This can be `null`, so you should always check. Also, properties on the context object can also return `null`."
  syntax:
    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "An <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;></xref> object that provides a format context."
    - id: destinationType
      type: System.Type
      description: "A <xref:System.Type> object that represents the type you want to convert to."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if this converter can perform the conversion; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Drawing.PointConverter.CanConvertTo*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.PointConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Drawing.PointConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: PointConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Drawing.PointConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Converts the specified object to a <xref href=&quot;System.Drawing.Point&quot;></xref> object."
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "A formatter context. This object can be used to get additional information about the environment this converter is being called from. This may be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, so you should always check. Also, properties on the context object may also return <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "An object that contains culture specific information, such as the language, calendar, and cultural conventions associated with a specific culture. It is based on the RFC 1766 standard."
    - id: value
      type: System.Object
      description: "The object to convert."
    return:
      type: System.Object
      description: "The converted object."
  overload: System.Drawing.PointConverter.ConvertFrom*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The conversion cannot be completed."
  platform:
  - net462
- uid: System.Drawing.PointConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Drawing.PointConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: PointConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Drawing.PointConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Converts the specified object to the specified type."
  remarks: "The most common types to convert are to and from a string object. The default implementation calls the object&quot;s <xref:System.Object.ToString%2A> method if the object is valid and if the destination type is string. If this method cannot convert to the destination type, this will throw a <xref:System.NotSupportedException> exception."
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "A formatter context. This object can be used to get additional information about the environment this converter is being called from. This may be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, so you should always check. Also, properties on the context object may also return <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "An object that contains culture specific information, such as the language, calendar, and cultural conventions associated with a specific culture. It is based on the RFC 1766 standard."
    - id: value
      type: System.Object
      description: "The object to convert."
    - id: destinationType
      type: System.Type
      description: "The type to convert the object to."
    return:
      type: System.Object
      description: "The converted object."
  overload: System.Drawing.PointConverter.ConvertTo*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The conversion cannot be completed."
  platform:
  - net462
- uid: System.Drawing.PointConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  id: CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  parent: System.Drawing.PointConverter
  langs:
  - csharp
  name: CreateInstance(ITypeDescriptorContext,IDictionary)
  nameWithType: PointConverter.CreateInstance(ITypeDescriptorContext,IDictionary)
  fullName: System.Drawing.PointConverter.CreateInstance(ITypeDescriptorContext,IDictionary)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Creates an instance of this type given a set of property values for the object."
  remarks: "CreateInstance is useful for objects that are immutable but still want to provide changeable properties."
  syntax:
    content: public override object CreateInstance (System.ComponentModel.ITypeDescriptorContext context, System.Collections.IDictionary propertyValues);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "A type descriptor through which additional context can be provided."
    - id: propertyValues
      type: System.Collections.IDictionary
      description: "A dictionary of new property values. The dictionary contains a series of name-value pairs, one for each property returned from <xref:System.Drawing.PointConverter.GetProperties*>."
    return:
      type: System.Object
      description: "The newly created object, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the object could not be created. The default implementation returns <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Drawing.PointConverter.CreateInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.PointConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Drawing.PointConverter
  langs:
  - csharp
  name: GetCreateInstanceSupported(ITypeDescriptorContext)
  nameWithType: PointConverter.GetCreateInstanceSupported(ITypeDescriptorContext)
  fullName: System.Drawing.PointConverter.GetCreateInstanceSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Determines if changing a value on this object should require a call to <xref:System.Drawing.PointConverter.CreateInstance*> to create a new value."
  syntax:
    content: public override bool GetCreateInstanceSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "A <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;></xref> through which additional context can be provided."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref:System.Drawing.PointConverter.CreateInstance*> method should be called when a change is made to one or more properties of this object; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Drawing.PointConverter.GetCreateInstanceSupported*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.PointConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  id: GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  parent: System.Drawing.PointConverter
  langs:
  - csharp
  name: GetProperties(ITypeDescriptorContext,Object,Attribute[])
  nameWithType: PointConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
  fullName: System.Drawing.PointConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Retrieves the set of properties for this type. By default, a type does not return any properties."
  remarks: "A simple implementation of this method can just call <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> for the correct data type."
  syntax:
    content: public override System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "A type descriptor through which additional context can be provided."
    - id: value
      type: System.Object
      description: "The value of the object to get the properties for."
    - id: attributes
      type: System.Attribute[]
      description: "An array of <xref:System.Attribute> objects that describe the properties."
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "The set of properties that are exposed for this data type. If no properties are exposed, this method might return <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>. The default implementation always returns <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Drawing.PointConverter.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.PointConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Drawing.PointConverter
  langs:
  - csharp
  name: GetPropertiesSupported(ITypeDescriptorContext)
  nameWithType: PointConverter.GetPropertiesSupported(ITypeDescriptorContext)
  fullName: System.Drawing.PointConverter.GetPropertiesSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Determines if this object supports properties. By default, this is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  syntax:
    content: public override bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "A <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;></xref> through which additional context can be provided."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <xref:System.Drawing.PointConverter.GetProperties*> should be called to find the properties of this object; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Drawing.PointConverter.GetPropertiesSupported*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Drawing.PointConverter.#ctor
  parent: System.Drawing.PointConverter
  isExternal: false
  name: PointConverter()
  nameWithType: PointConverter.PointConverter()
  fullName: System.Drawing.PointConverter.PointConverter()
- uid: System.Drawing.PointConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Drawing.PointConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: PointConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Drawing.PointConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Drawing.PointConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Drawing.PointConverter
  isExternal: false
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: PointConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Drawing.PointConverter.CanConvertTo(ITypeDescriptorContext,Type)
- uid: System.Drawing.PointConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Drawing.PointConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: PointConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Drawing.PointConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Drawing.PointConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Drawing.PointConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: PointConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Drawing.PointConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.Drawing.PointConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  parent: System.Drawing.PointConverter
  isExternal: false
  name: CreateInstance(ITypeDescriptorContext,IDictionary)
  nameWithType: PointConverter.CreateInstance(ITypeDescriptorContext,IDictionary)
  fullName: System.Drawing.PointConverter.CreateInstance(ITypeDescriptorContext,IDictionary)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Drawing.PointConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Drawing.PointConverter
  isExternal: false
  name: GetCreateInstanceSupported(ITypeDescriptorContext)
  nameWithType: PointConverter.GetCreateInstanceSupported(ITypeDescriptorContext)
  fullName: System.Drawing.PointConverter.GetCreateInstanceSupported(ITypeDescriptorContext)
- uid: System.Drawing.PointConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  parent: System.Drawing.PointConverter
  isExternal: false
  name: GetProperties(ITypeDescriptorContext,Object,Attribute[])
  nameWithType: PointConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
  fullName: System.Drawing.PointConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.Attribute[]
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute[]
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.PointConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Drawing.PointConverter
  isExternal: false
  name: GetPropertiesSupported(ITypeDescriptorContext)
  nameWithType: PointConverter.GetPropertiesSupported(ITypeDescriptorContext)
  fullName: System.Drawing.PointConverter.GetPropertiesSupported(ITypeDescriptorContext)
- uid: System.Drawing.PointConverter.#ctor*
  parent: System.Drawing.PointConverter
  isExternal: false
  name: PointConverter
  nameWithType: PointConverter.PointConverter
- uid: System.Drawing.PointConverter.CanConvertFrom*
  parent: System.Drawing.PointConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: PointConverter.CanConvertFrom
- uid: System.Drawing.PointConverter.CanConvertTo*
  parent: System.Drawing.PointConverter
  isExternal: false
  name: CanConvertTo
  nameWithType: PointConverter.CanConvertTo
- uid: System.Drawing.PointConverter.ConvertFrom*
  parent: System.Drawing.PointConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: PointConverter.ConvertFrom
- uid: System.Drawing.PointConverter.ConvertTo*
  parent: System.Drawing.PointConverter
  isExternal: false
  name: ConvertTo
  nameWithType: PointConverter.ConvertTo
- uid: System.Drawing.PointConverter.CreateInstance*
  parent: System.Drawing.PointConverter
  isExternal: false
  name: CreateInstance
  nameWithType: PointConverter.CreateInstance
- uid: System.Drawing.PointConverter.GetCreateInstanceSupported*
  parent: System.Drawing.PointConverter
  isExternal: false
  name: GetCreateInstanceSupported
  nameWithType: PointConverter.GetCreateInstanceSupported
- uid: System.Drawing.PointConverter.GetProperties*
  parent: System.Drawing.PointConverter
  isExternal: false
  name: GetProperties
  nameWithType: PointConverter.GetProperties
- uid: System.Drawing.PointConverter.GetPropertiesSupported*
  parent: System.Drawing.PointConverter
  isExternal: false
  name: GetPropertiesSupported
  nameWithType: PointConverter.GetPropertiesSupported
