### YamlMime:ManagedReference
items:
- uid: System.Net.Configuration.ServicePointManagerElement
  id: ServicePointManagerElement
  children:
  - System.Net.Configuration.ServicePointManagerElement.#ctor
  - System.Net.Configuration.ServicePointManagerElement.CheckCertificateName
  - System.Net.Configuration.ServicePointManagerElement.CheckCertificateRevocationList
  - System.Net.Configuration.ServicePointManagerElement.DnsRefreshTimeout
  - System.Net.Configuration.ServicePointManagerElement.EnableDnsRoundRobin
  - System.Net.Configuration.ServicePointManagerElement.EncryptionPolicy
  - System.Net.Configuration.ServicePointManagerElement.Expect100Continue
  - System.Net.Configuration.ServicePointManagerElement.PostDeserialize
  - System.Net.Configuration.ServicePointManagerElement.Properties
  - System.Net.Configuration.ServicePointManagerElement.UseNagleAlgorithm
  langs:
  - csharp
  name: ServicePointManagerElement
  nameWithType: ServicePointManagerElement
  fullName: System.Net.Configuration.ServicePointManagerElement
  type: Class
  summary: "Representa as predefinições utilizadas para criar ligações para um computador remoto. Esta classe não pode ser herdada."
  remarks: "This class corresponds to the `servicePointManager` attribute of the `settings`[\\&lt;servicePointManager\\&gt; Element (Network Settings)](../Topic/%3CservicePointManager%3E%20Element%20\\(Network%20Settings\\).md) configuration element.  \n  \n This class is used to specify the values that are used to initialize new <xref:System.Net.ServicePoint> objects.  \n  \n This class provides programmatic access to information that can be stored in configuration files."
  syntax:
    content: 'public sealed class ServicePointManagerElement : System.Configuration.ConfigurationElement'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsModified
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElement.ResetModified
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  platform:
  - net462
- uid: System.Net.Configuration.ServicePointManagerElement.#ctor
  id: '#ctor'
  parent: System.Net.Configuration.ServicePointManagerElement
  langs:
  - csharp
  name: ServicePointManagerElement()
  nameWithType: ServicePointManagerElement.ServicePointManagerElement()
  fullName: System.Net.Configuration.ServicePointManagerElement.ServicePointManagerElement()
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Configuration
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Net.Configuration.ServicePointManagerElement&quot;> </xref> classe."
  syntax:
    content: public ServicePointManagerElement ();
    parameters: []
  overload: System.Net.Configuration.ServicePointManagerElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Configuration.ServicePointManagerElement.CheckCertificateName
  id: CheckCertificateName
  parent: System.Net.Configuration.ServicePointManagerElement
  langs:
  - csharp
  name: CheckCertificateName
  nameWithType: ServicePointManagerElement.CheckCertificateName
  fullName: System.Net.Configuration.ServicePointManagerElement.CheckCertificateName
  type: Property
  assemblies:
  - System
  namespace: System.Net.Configuration
  summary: "Obtém ou define um valor booleano que controla a verificar se a informações de nome de anfitrião num X509 certificado."
  syntax:
    content: public bool CheckCertificateName { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para especificar a verificação do nome de anfitrião; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Configuration.ServicePointManagerElement.CheckCertificateName*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Configuration.ServicePointManagerElement.CheckCertificateRevocationList
  id: CheckCertificateRevocationList
  parent: System.Net.Configuration.ServicePointManagerElement
  langs:
  - csharp
  name: CheckCertificateRevocationList
  nameWithType: ServicePointManagerElement.CheckCertificateRevocationList
  fullName: System.Net.Configuration.ServicePointManagerElement.CheckCertificateRevocationList
  type: Property
  assemblies:
  - System
  namespace: System.Net.Configuration
  summary: "Obtém ou define um valor booleano que indica se o certificado é verificado contra a lista de revogação de autoridade do certificado."
  remarks: "Quando esta propriedade está definida como `true`, o certificado é validado em relação a lista de revogação de autoridade do certificado como parte do processo de validação de certificado."
  syntax:
    content: public bool CheckCertificateRevocationList { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a lista de revogação de certificados é verificada; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O valor predefinido é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Configuration.ServicePointManagerElement.CheckCertificateRevocationList*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Configuration.ServicePointManagerElement.DnsRefreshTimeout
  id: DnsRefreshTimeout
  parent: System.Net.Configuration.ServicePointManagerElement
  langs:
  - csharp
  name: DnsRefreshTimeout
  nameWithType: ServicePointManagerElement.DnsRefreshTimeout
  fullName: System.Net.Configuration.ServicePointManagerElement.DnsRefreshTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Net.Configuration
  summary: "Obtém ou define a quantidade de tempo após o qual as informações de endereço estão atualizadas."
  remarks: "O valor desta propriedade define o <xref:System.Net.ServicePointManager.DnsRefreshTimeout%2A>propriedade.</xref:System.Net.ServicePointManager.DnsRefreshTimeout%2A>"
  syntax:
    content: public int DnsRefreshTimeout { get; set; }
    return:
      type: System.Int32
      description: "A <xref:System.TimeSpan>que especifica quando endereços são resolvidos utilizando o DNS.</xref:System.TimeSpan>"
  overload: System.Net.Configuration.ServicePointManagerElement.DnsRefreshTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Configuration.ServicePointManagerElement.EnableDnsRoundRobin
  id: EnableDnsRoundRobin
  parent: System.Net.Configuration.ServicePointManagerElement
  langs:
  - csharp
  name: EnableDnsRoundRobin
  nameWithType: ServicePointManagerElement.EnableDnsRoundRobin
  fullName: System.Net.Configuration.ServicePointManagerElement.EnableDnsRoundRobin
  type: Property
  assemblies:
  - System
  namespace: System.Net.Configuration
  summary: "Obtém ou define um valor booleano que controla a utilizar endereços IP diferentes em ligações para o mesmo servidor."
  syntax:
    content: public bool EnableDnsRoundRobin { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para ativar o comportamento de round robin DNS; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Configuration.ServicePointManagerElement.EnableDnsRoundRobin*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Configuration.ServicePointManagerElement.EncryptionPolicy
  id: EncryptionPolicy
  parent: System.Net.Configuration.ServicePointManagerElement
  langs:
  - csharp
  name: EncryptionPolicy
  nameWithType: ServicePointManagerElement.EncryptionPolicy
  fullName: System.Net.Configuration.ServicePointManagerElement.EncryptionPolicy
  type: Property
  assemblies:
  - System
  namespace: System.Net.Configuration
  summary: "Obtém ou define o <xref href=&quot;System.Net.Security.EncryptionPolicy&quot;> </xref> a utilizar."
  remarks: "O <xref:System.Net.Security.EncryptionPolicy>propriedade pode exigir, permitir ou impedir a encriptação.</xref:System.Net.Security.EncryptionPolicy> O <xref:System.Net.Security.EncryptionPolicy>serão aplicadas a uma sessão SSL/TLS.</xref:System.Net.Security.EncryptionPolicy> A utilização de cifras Null é necessária quando a política de encriptação está definida como <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>"
  syntax:
    content: public System.Net.Security.EncryptionPolicy EncryptionPolicy { get; set; }
    return:
      type: System.Net.Security.EncryptionPolicy
      description: "A política de encriptação a utilizar para um <xref href=&quot;System.Net.ServicePointManager&quot;> </xref> instância."
  overload: System.Net.Configuration.ServicePointManagerElement.EncryptionPolicy*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Configuration.ServicePointManagerElement.Expect100Continue
  id: Expect100Continue
  parent: System.Net.Configuration.ServicePointManagerElement
  langs:
  - csharp
  name: Expect100Continue
  nameWithType: ServicePointManagerElement.Expect100Continue
  fullName: System.Net.Configuration.ServicePointManagerElement.Expect100Continue
  type: Property
  assemblies:
  - System
  namespace: System.Net.Configuration
  summary: "Obtém ou define um valor booleano que determina se 100-Continue o comportamento é utilizado."
  remarks: "Quando esta propriedade está definida como `true`, pedidos de cliente que utilizam o `POST` método esperava receber 100-Continue a resposta do servidor para indicar que o cliente deve enviar os dados a ser publicado. Este mecanismo permite aos clientes evitar o envio de grandes quantidades de dados através da rede quando o servidor, com base nos cabeçalhos de pedido, pretende rejeitar o pedido.       Para obter mais informações, consulte <xref:System.Net.ServicePointManager.Expect100Continue%2A?displayProperty=fullName>.</xref:System.Net.ServicePointManager.Expect100Continue%2A?displayProperty=fullName>"
  syntax:
    content: public bool Expect100Continue { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>esperar 100-Continue respostas para <xref uid=&quot;langword_csharp_POST&quot; name=&quot;POST&quot; href=&quot;&quot;> </xref> pedidos; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O valor predefinido é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Configuration.ServicePointManagerElement.Expect100Continue*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Configuration.ServicePointManagerElement.PostDeserialize
  id: PostDeserialize
  parent: System.Net.Configuration.ServicePointManagerElement
  langs:
  - csharp
  name: PostDeserialize()
  nameWithType: ServicePointManagerElement.PostDeserialize()
  fullName: System.Net.Configuration.ServicePointManagerElement.PostDeserialize()
  type: Method
  assemblies:
  - System
  namespace: System.Net.Configuration
  syntax:
    content: protected override void PostDeserialize ();
    parameters: []
  overload: System.Net.Configuration.ServicePointManagerElement.PostDeserialize*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Configuration.ServicePointManagerElement.Properties
  id: Properties
  parent: System.Net.Configuration.ServicePointManagerElement
  langs:
  - csharp
  name: Properties
  nameWithType: ServicePointManagerElement.Properties
  fullName: System.Net.Configuration.ServicePointManagerElement.Properties
  type: Property
  assemblies:
  - System
  namespace: System.Net.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "A adicionar."
  overload: System.Net.Configuration.ServicePointManagerElement.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Configuration.ServicePointManagerElement.UseNagleAlgorithm
  id: UseNagleAlgorithm
  parent: System.Net.Configuration.ServicePointManagerElement
  langs:
  - csharp
  name: UseNagleAlgorithm
  nameWithType: ServicePointManagerElement.UseNagleAlgorithm
  fullName: System.Net.Configuration.ServicePointManagerElement.UseNagleAlgorithm
  type: Property
  assemblies:
  - System
  namespace: System.Net.Configuration
  summary: "Obtém ou define um valor booleano que determina se o algoritmo de Nagle é utilizado."
  remarks: "O algoritmo de Nagle é utilizado para reduzir o tráfego de rede através da colocação em memória intermédia pequenos pacotes de dados e transmiti-los como um pacote único. Este processo também é referido como &quot;nagling&quot;; Este é amplamente utilizado dado que reduz o número de pacotes transmitidos e reduz a sobrecarga por pacote."
  syntax:
    content: public bool UseNagleAlgorithm { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para utilizar o algoritmo de Nagle; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O valor predefinido é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Configuration.ServicePointManagerElement.UseNagleAlgorithm*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationElement
  isExternal: false
  name: System.Configuration.ConfigurationElement
- uid: System.Net.Configuration.ServicePointManagerElement.#ctor
  parent: System.Net.Configuration.ServicePointManagerElement
  isExternal: false
  name: ServicePointManagerElement()
  nameWithType: ServicePointManagerElement.ServicePointManagerElement()
  fullName: System.Net.Configuration.ServicePointManagerElement.ServicePointManagerElement()
- uid: System.Net.Configuration.ServicePointManagerElement.CheckCertificateName
  parent: System.Net.Configuration.ServicePointManagerElement
  isExternal: false
  name: CheckCertificateName
  nameWithType: ServicePointManagerElement.CheckCertificateName
  fullName: System.Net.Configuration.ServicePointManagerElement.CheckCertificateName
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Configuration.ServicePointManagerElement.CheckCertificateRevocationList
  parent: System.Net.Configuration.ServicePointManagerElement
  isExternal: false
  name: CheckCertificateRevocationList
  nameWithType: ServicePointManagerElement.CheckCertificateRevocationList
  fullName: System.Net.Configuration.ServicePointManagerElement.CheckCertificateRevocationList
- uid: System.Net.Configuration.ServicePointManagerElement.DnsRefreshTimeout
  parent: System.Net.Configuration.ServicePointManagerElement
  isExternal: false
  name: DnsRefreshTimeout
  nameWithType: ServicePointManagerElement.DnsRefreshTimeout
  fullName: System.Net.Configuration.ServicePointManagerElement.DnsRefreshTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Configuration.ServicePointManagerElement.EnableDnsRoundRobin
  parent: System.Net.Configuration.ServicePointManagerElement
  isExternal: false
  name: EnableDnsRoundRobin
  nameWithType: ServicePointManagerElement.EnableDnsRoundRobin
  fullName: System.Net.Configuration.ServicePointManagerElement.EnableDnsRoundRobin
- uid: System.Net.Configuration.ServicePointManagerElement.EncryptionPolicy
  parent: System.Net.Configuration.ServicePointManagerElement
  isExternal: false
  name: EncryptionPolicy
  nameWithType: ServicePointManagerElement.EncryptionPolicy
  fullName: System.Net.Configuration.ServicePointManagerElement.EncryptionPolicy
- uid: System.Net.Security.EncryptionPolicy
  parent: System.Net.Security
  isExternal: false
  name: EncryptionPolicy
  nameWithType: EncryptionPolicy
  fullName: System.Net.Security.EncryptionPolicy
- uid: System.Net.Configuration.ServicePointManagerElement.Expect100Continue
  parent: System.Net.Configuration.ServicePointManagerElement
  isExternal: false
  name: Expect100Continue
  nameWithType: ServicePointManagerElement.Expect100Continue
  fullName: System.Net.Configuration.ServicePointManagerElement.Expect100Continue
- uid: System.Net.Configuration.ServicePointManagerElement.PostDeserialize
  parent: System.Net.Configuration.ServicePointManagerElement
  isExternal: false
  name: PostDeserialize()
  nameWithType: ServicePointManagerElement.PostDeserialize()
  fullName: System.Net.Configuration.ServicePointManagerElement.PostDeserialize()
- uid: System.Net.Configuration.ServicePointManagerElement.Properties
  parent: System.Net.Configuration.ServicePointManagerElement
  isExternal: false
  name: Properties
  nameWithType: ServicePointManagerElement.Properties
  fullName: System.Net.Configuration.ServicePointManagerElement.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.Net.Configuration.ServicePointManagerElement.UseNagleAlgorithm
  parent: System.Net.Configuration.ServicePointManagerElement
  isExternal: false
  name: UseNagleAlgorithm
  nameWithType: ServicePointManagerElement.UseNagleAlgorithm
  fullName: System.Net.Configuration.ServicePointManagerElement.UseNagleAlgorithm
- uid: System.Net.Configuration.ServicePointManagerElement.#ctor*
  parent: System.Net.Configuration.ServicePointManagerElement
  isExternal: false
  name: ServicePointManagerElement
  nameWithType: ServicePointManagerElement.ServicePointManagerElement
- uid: System.Net.Configuration.ServicePointManagerElement.CheckCertificateName*
  parent: System.Net.Configuration.ServicePointManagerElement
  isExternal: false
  name: CheckCertificateName
  nameWithType: ServicePointManagerElement.CheckCertificateName
- uid: System.Net.Configuration.ServicePointManagerElement.CheckCertificateRevocationList*
  parent: System.Net.Configuration.ServicePointManagerElement
  isExternal: false
  name: CheckCertificateRevocationList
  nameWithType: ServicePointManagerElement.CheckCertificateRevocationList
- uid: System.Net.Configuration.ServicePointManagerElement.DnsRefreshTimeout*
  parent: System.Net.Configuration.ServicePointManagerElement
  isExternal: false
  name: DnsRefreshTimeout
  nameWithType: ServicePointManagerElement.DnsRefreshTimeout
- uid: System.Net.Configuration.ServicePointManagerElement.EnableDnsRoundRobin*
  parent: System.Net.Configuration.ServicePointManagerElement
  isExternal: false
  name: EnableDnsRoundRobin
  nameWithType: ServicePointManagerElement.EnableDnsRoundRobin
- uid: System.Net.Configuration.ServicePointManagerElement.EncryptionPolicy*
  parent: System.Net.Configuration.ServicePointManagerElement
  isExternal: false
  name: EncryptionPolicy
  nameWithType: ServicePointManagerElement.EncryptionPolicy
- uid: System.Net.Configuration.ServicePointManagerElement.Expect100Continue*
  parent: System.Net.Configuration.ServicePointManagerElement
  isExternal: false
  name: Expect100Continue
  nameWithType: ServicePointManagerElement.Expect100Continue
- uid: System.Net.Configuration.ServicePointManagerElement.PostDeserialize*
  parent: System.Net.Configuration.ServicePointManagerElement
  isExternal: false
  name: PostDeserialize
  nameWithType: ServicePointManagerElement.PostDeserialize
- uid: System.Net.Configuration.ServicePointManagerElement.Properties*
  parent: System.Net.Configuration.ServicePointManagerElement
  isExternal: false
  name: Properties
  nameWithType: ServicePointManagerElement.Properties
- uid: System.Net.Configuration.ServicePointManagerElement.UseNagleAlgorithm*
  parent: System.Net.Configuration.ServicePointManagerElement
  isExternal: false
  name: UseNagleAlgorithm
  nameWithType: ServicePointManagerElement.UseNagleAlgorithm
