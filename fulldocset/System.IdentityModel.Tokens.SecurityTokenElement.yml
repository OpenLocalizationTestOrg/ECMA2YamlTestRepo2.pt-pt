### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.SecurityTokenElement
  id: SecurityTokenElement
  children:
  - System.IdentityModel.Tokens.SecurityTokenElement.#ctor(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.SecurityTokenElement.#ctor(System.Xml.XmlElement,System.IdentityModel.Tokens.SecurityTokenHandlerCollection)
  - System.IdentityModel.Tokens.SecurityTokenElement.GetIdentities
  - System.IdentityModel.Tokens.SecurityTokenElement.GetSecurityToken
  - System.IdentityModel.Tokens.SecurityTokenElement.ReadSecurityToken(System.Xml.XmlElement,System.IdentityModel.Tokens.SecurityTokenHandlerCollection)
  - System.IdentityModel.Tokens.SecurityTokenElement.SecurityTokenXml
  - System.IdentityModel.Tokens.SecurityTokenElement.ValidateToken(System.Xml.XmlElement,System.IdentityModel.Tokens.SecurityTokenHandlerCollection)
  langs:
  - csharp
  name: SecurityTokenElement
  nameWithType: SecurityTokenElement
  fullName: System.IdentityModel.Tokens.SecurityTokenElement
  type: Class
  summary: "Represents a number elements found in a <xref href=&quot;System.IdentityModel.Protocols.WSTrust.RequestSecurityToken&quot;></xref> which represent security tokens."
  remarks: "This class is not thread-safe."
  syntax:
    content: public class SecurityTokenElement
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenElement.#ctor(System.IdentityModel.Tokens.SecurityToken)
  id: '#ctor(System.IdentityModel.Tokens.SecurityToken)'
  parent: System.IdentityModel.Tokens.SecurityTokenElement
  langs:
  - csharp
  name: SecurityTokenElement(SecurityToken)
  nameWithType: SecurityTokenElement.SecurityTokenElement(SecurityToken)
  fullName: System.IdentityModel.Tokens.SecurityTokenElement.SecurityTokenElement(SecurityToken)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Initializes a new instance of the <xref href=&quot;System.IdentityModel.Tokens.SecurityTokenElement&quot;></xref> class by using a <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;></xref> object."
  remarks: "When this constructor is used, the <xref:System.IdentityModel.Tokens.SecurityTokenElement.GetIdentities%2A> method is not supported by the new instance unless the <xref:System.IdentityModel.Tokens.SecurityTokenElement.CreateSubject%2A> method is overridden.       If the `securityToken` parameter is an instance of <xref:System.IdentityModel.Tokens.GenericXmlSecurityToken> then the <xref:System.IdentityModel.Tokens.SecurityTokenElement.SecurityTokenXml%2A> property is set to the value of the <xref:System.IdentityModel.Tokens.GenericXmlSecurityToken.TokenXml%2A?displayProperty=fullName> property."
  syntax:
    content: public SecurityTokenElement (System.IdentityModel.Tokens.SecurityToken securityToken);
    parameters:
    - id: securityToken
      type: System.IdentityModel.Tokens.SecurityToken
      description: "The security token that the new instance represents."
  overload: System.IdentityModel.Tokens.SecurityTokenElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenElement.#ctor(System.Xml.XmlElement,System.IdentityModel.Tokens.SecurityTokenHandlerCollection)
  id: '#ctor(System.Xml.XmlElement,System.IdentityModel.Tokens.SecurityTokenHandlerCollection)'
  parent: System.IdentityModel.Tokens.SecurityTokenElement
  langs:
  - csharp
  name: SecurityTokenElement(XmlElement,SecurityTokenHandlerCollection)
  nameWithType: SecurityTokenElement.SecurityTokenElement(XmlElement,SecurityTokenHandlerCollection)
  fullName: System.IdentityModel.Tokens.SecurityTokenElement.SecurityTokenElement(XmlElement,SecurityTokenHandlerCollection)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Initializes a new instance of the <xref href=&quot;System.IdentityModel.Tokens.SecurityTokenElement&quot;></xref> class by using the specified XML representation of a security token."
  syntax:
    content: public SecurityTokenElement (System.Xml.XmlElement securityTokenXml, System.IdentityModel.Tokens.SecurityTokenHandlerCollection securityTokenHandlers);
    parameters:
    - id: securityTokenXml
      type: System.Xml.XmlElement
      description: "The XML representation of the security token."
    - id: securityTokenHandlers
      type: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
      description: "The default token handler collection that is used to read and validate the security token wrapped by the new instance."
  overload: System.IdentityModel.Tokens.SecurityTokenElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenElement.GetIdentities
  id: GetIdentities
  parent: System.IdentityModel.Tokens.SecurityTokenElement
  langs:
  - csharp
  name: GetIdentities()
  nameWithType: SecurityTokenElement.GetIdentities()
  fullName: System.IdentityModel.Tokens.SecurityTokenElement.GetIdentities()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets the identities that are contained in the wrapped token."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity> GetIdentities ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}
      description: "The identities that are contained in the token."
  overload: System.IdentityModel.Tokens.SecurityTokenElement.GetIdentities*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenElement.GetSecurityToken
  id: GetSecurityToken
  parent: System.IdentityModel.Tokens.SecurityTokenElement
  langs:
  - csharp
  name: GetSecurityToken()
  nameWithType: SecurityTokenElement.GetSecurityToken()
  fullName: System.IdentityModel.Tokens.SecurityTokenElement.GetSecurityToken()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets the security token that is represented by the current instance."
  remarks: "If the current instance was not constructed explicitly from a <xref:System.IdentityModel.Tokens.SecurityToken> object by using the <xref:System.IdentityModel.Tokens.SecurityTokenElement.%23ctor%28System.IdentityModel.Tokens.SecurityToken%29?displayProperty=fullName> constructor, then the <xref:System.IdentityModel.Tokens.SecurityTokenElement.ReadSecurityToken%2A> method is called to return the security token."
  syntax:
    content: public System.IdentityModel.Tokens.SecurityToken GetSecurityToken ();
    parameters: []
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "The security token that the current instance represents."
  overload: System.IdentityModel.Tokens.SecurityTokenElement.GetSecurityToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenElement.ReadSecurityToken(System.Xml.XmlElement,System.IdentityModel.Tokens.SecurityTokenHandlerCollection)
  id: ReadSecurityToken(System.Xml.XmlElement,System.IdentityModel.Tokens.SecurityTokenHandlerCollection)
  parent: System.IdentityModel.Tokens.SecurityTokenElement
  langs:
  - csharp
  name: ReadSecurityToken(XmlElement,SecurityTokenHandlerCollection)
  nameWithType: SecurityTokenElement.ReadSecurityToken(XmlElement,SecurityTokenHandlerCollection)
  fullName: System.IdentityModel.Tokens.SecurityTokenElement.ReadSecurityToken(XmlElement,SecurityTokenHandlerCollection)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Deserializes a <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;></xref> from the specified XML representation."
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SecurityToken ReadSecurityToken (System.Xml.XmlElement securityTokenXml, System.IdentityModel.Tokens.SecurityTokenHandlerCollection securityTokenHandlers);
    parameters:
    - id: securityTokenXml
      type: System.Xml.XmlElement
      description: "The XML representation of the security token."
    - id: securityTokenHandlers
      type: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
      description: "The token handler collection to use to read the token."
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "The security token that was deserialized from the XML."
  overload: System.IdentityModel.Tokens.SecurityTokenElement.ReadSecurityToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenElement.SecurityTokenXml
  id: SecurityTokenXml
  parent: System.IdentityModel.Tokens.SecurityTokenElement
  langs:
  - csharp
  name: SecurityTokenXml
  nameWithType: SecurityTokenElement.SecurityTokenXml
  fullName: System.IdentityModel.Tokens.SecurityTokenElement.SecurityTokenXml
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets the XML representation of the wrapped token."
  remarks: "This property is `null` unless the current instance was initialized by using the <xref:System.IdentityModel.Tokens.SecurityTokenElement.%23ctor%28System.Xml.XmlElement%2CSystem.IdentityModel.Tokens.SecurityTokenHandlerCollection%29?displayProperty=fullName> constructor."
  syntax:
    content: public System.Xml.XmlElement SecurityTokenXml { get; }
    return:
      type: System.Xml.XmlElement
      description: "The XML representation of the token."
  overload: System.IdentityModel.Tokens.SecurityTokenElement.SecurityTokenXml*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityTokenElement.ValidateToken(System.Xml.XmlElement,System.IdentityModel.Tokens.SecurityTokenHandlerCollection)
  id: ValidateToken(System.Xml.XmlElement,System.IdentityModel.Tokens.SecurityTokenHandlerCollection)
  parent: System.IdentityModel.Tokens.SecurityTokenElement
  langs:
  - csharp
  name: ValidateToken(XmlElement,SecurityTokenHandlerCollection)
  nameWithType: SecurityTokenElement.ValidateToken(XmlElement,SecurityTokenHandlerCollection)
  fullName: System.IdentityModel.Tokens.SecurityTokenElement.ValidateToken(XmlElement,SecurityTokenHandlerCollection)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Creates the identities that are contained in the specified XML representation of a security token."
  syntax:
    content: protected virtual System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity> ValidateToken (System.Xml.XmlElement securityTokenXml, System.IdentityModel.Tokens.SecurityTokenHandlerCollection securityTokenHandlers);
    parameters:
    - id: securityTokenXml
      type: System.Xml.XmlElement
      description: "The XML representation of the security token."
    - id: securityTokenHandlers
      type: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
      description: "The token handler collection to use to read the token."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}
      description: "The identities that are contained in the token."
  overload: System.IdentityModel.Tokens.SecurityTokenElement.ValidateToken*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>securityTokenXml</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>securityTokenHandlers</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IdentityModel.Tokens.SecurityTokenElement.#ctor(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.SecurityTokenElement
  isExternal: false
  name: SecurityTokenElement(SecurityToken)
  nameWithType: SecurityTokenElement.SecurityTokenElement(SecurityToken)
  fullName: System.IdentityModel.Tokens.SecurityTokenElement.SecurityTokenElement(SecurityToken)
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Tokens.SecurityTokenElement.#ctor(System.Xml.XmlElement,System.IdentityModel.Tokens.SecurityTokenHandlerCollection)
  parent: System.IdentityModel.Tokens.SecurityTokenElement
  isExternal: false
  name: SecurityTokenElement(XmlElement,SecurityTokenHandlerCollection)
  nameWithType: SecurityTokenElement.SecurityTokenElement(XmlElement,SecurityTokenHandlerCollection)
  fullName: System.IdentityModel.Tokens.SecurityTokenElement.SecurityTokenElement(XmlElement,SecurityTokenHandlerCollection)
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenHandlerCollection
  nameWithType: SecurityTokenHandlerCollection
  fullName: System.IdentityModel.Tokens.SecurityTokenHandlerCollection
- uid: System.IdentityModel.Tokens.SecurityTokenElement.GetIdentities
  parent: System.IdentityModel.Tokens.SecurityTokenElement
  isExternal: false
  name: GetIdentities()
  nameWithType: SecurityTokenElement.GetIdentities()
  fullName: System.IdentityModel.Tokens.SecurityTokenElement.GetIdentities()
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<ClaimsIdentity>
  nameWithType: ReadOnlyCollection<ClaimsIdentity>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Security.Claims.ClaimsIdentity>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.ClaimsIdentity
    name: ClaimsIdentity
    nameWithType: ClaimsIdentity
    fullName: ClaimsIdentity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SecurityTokenElement.GetSecurityToken
  parent: System.IdentityModel.Tokens.SecurityTokenElement
  isExternal: false
  name: GetSecurityToken()
  nameWithType: SecurityTokenElement.GetSecurityToken()
  fullName: System.IdentityModel.Tokens.SecurityTokenElement.GetSecurityToken()
- uid: System.IdentityModel.Tokens.SecurityTokenElement.ReadSecurityToken(System.Xml.XmlElement,System.IdentityModel.Tokens.SecurityTokenHandlerCollection)
  parent: System.IdentityModel.Tokens.SecurityTokenElement
  isExternal: false
  name: ReadSecurityToken(XmlElement,SecurityTokenHandlerCollection)
  nameWithType: SecurityTokenElement.ReadSecurityToken(XmlElement,SecurityTokenHandlerCollection)
  fullName: System.IdentityModel.Tokens.SecurityTokenElement.ReadSecurityToken(XmlElement,SecurityTokenHandlerCollection)
- uid: System.IdentityModel.Tokens.SecurityTokenElement.SecurityTokenXml
  parent: System.IdentityModel.Tokens.SecurityTokenElement
  isExternal: false
  name: SecurityTokenXml
  nameWithType: SecurityTokenElement.SecurityTokenXml
  fullName: System.IdentityModel.Tokens.SecurityTokenElement.SecurityTokenXml
- uid: System.IdentityModel.Tokens.SecurityTokenElement.ValidateToken(System.Xml.XmlElement,System.IdentityModel.Tokens.SecurityTokenHandlerCollection)
  parent: System.IdentityModel.Tokens.SecurityTokenElement
  isExternal: false
  name: ValidateToken(XmlElement,SecurityTokenHandlerCollection)
  nameWithType: SecurityTokenElement.ValidateToken(XmlElement,SecurityTokenHandlerCollection)
  fullName: System.IdentityModel.Tokens.SecurityTokenElement.ValidateToken(XmlElement,SecurityTokenHandlerCollection)
- uid: System.IdentityModel.Tokens.SecurityTokenElement.#ctor*
  parent: System.IdentityModel.Tokens.SecurityTokenElement
  isExternal: false
  name: SecurityTokenElement
  nameWithType: SecurityTokenElement.SecurityTokenElement
- uid: System.IdentityModel.Tokens.SecurityTokenElement.GetIdentities*
  parent: System.IdentityModel.Tokens.SecurityTokenElement
  isExternal: false
  name: GetIdentities
  nameWithType: SecurityTokenElement.GetIdentities
- uid: System.IdentityModel.Tokens.SecurityTokenElement.GetSecurityToken*
  parent: System.IdentityModel.Tokens.SecurityTokenElement
  isExternal: false
  name: GetSecurityToken
  nameWithType: SecurityTokenElement.GetSecurityToken
- uid: System.IdentityModel.Tokens.SecurityTokenElement.ReadSecurityToken*
  parent: System.IdentityModel.Tokens.SecurityTokenElement
  isExternal: false
  name: ReadSecurityToken
  nameWithType: SecurityTokenElement.ReadSecurityToken
- uid: System.IdentityModel.Tokens.SecurityTokenElement.SecurityTokenXml*
  parent: System.IdentityModel.Tokens.SecurityTokenElement
  isExternal: false
  name: SecurityTokenXml
  nameWithType: SecurityTokenElement.SecurityTokenXml
- uid: System.IdentityModel.Tokens.SecurityTokenElement.ValidateToken*
  parent: System.IdentityModel.Tokens.SecurityTokenElement
  isExternal: false
  name: ValidateToken
  nameWithType: SecurityTokenElement.ValidateToken
