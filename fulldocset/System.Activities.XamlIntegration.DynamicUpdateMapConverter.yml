### YamlMime:ManagedReference
items:
- uid: System.Activities.XamlIntegration.DynamicUpdateMapConverter
  id: DynamicUpdateMapConverter
  children:
  - System.Activities.XamlIntegration.DynamicUpdateMapConverter.#ctor
  - System.Activities.XamlIntegration.DynamicUpdateMapConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Activities.XamlIntegration.DynamicUpdateMapConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  langs:
  - csharp
  name: DynamicUpdateMapConverter
  nameWithType: DynamicUpdateMapConverter
  fullName: System.Activities.XamlIntegration.DynamicUpdateMapConverter
  type: Class
  summary: "Represents a dynamic update map converter."
  syntax:
    content: 'public class DynamicUpdateMapConverter : System.ComponentModel.TypeConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.Activities.XamlIntegration.DynamicUpdateMapConverter.#ctor
  id: '#ctor'
  parent: System.Activities.XamlIntegration.DynamicUpdateMapConverter
  langs:
  - csharp
  name: DynamicUpdateMapConverter()
  nameWithType: DynamicUpdateMapConverter.DynamicUpdateMapConverter()
  fullName: System.Activities.XamlIntegration.DynamicUpdateMapConverter.DynamicUpdateMapConverter()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities.XamlIntegration
  summary: "Initializes a new instance of the <xref href=&quot;System.Activities.XamlIntegration.DynamicUpdateMapConverter&quot;></xref> class."
  syntax:
    content: public DynamicUpdateMapConverter ();
    parameters: []
  overload: System.Activities.XamlIntegration.DynamicUpdateMapConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.XamlIntegration.DynamicUpdateMapConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Activities.XamlIntegration.DynamicUpdateMapConverter
  langs:
  - csharp
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: DynamicUpdateMapConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Activities.XamlIntegration.DynamicUpdateMapConverter.CanConvertTo(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.XamlIntegration
  summary: "Determines whether the specified type can be converted to."
  syntax:
    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Context information that is used for conversion."
    - id: destinationType
      type: System.Type
      description: "The type to convert to."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref> if the specified type can be converted to; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Activities.XamlIntegration.DynamicUpdateMapConverter.CanConvertTo*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.XamlIntegration.DynamicUpdateMapConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Activities.XamlIntegration.DynamicUpdateMapConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: DynamicUpdateMapConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Activities.XamlIntegration.DynamicUpdateMapConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.XamlIntegration
  summary: "Converts the specified value to the specified representation."
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Context information that is used for conversion."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "An optional culture information."
    - id: value
      type: System.Object
      description: "The object to convert."
    - id: destinationType
      type: System.Type
      description: "The type to convert to."
    return:
      type: System.Object
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref> if the specified value to the specified representation is converted; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Activities.XamlIntegration.DynamicUpdateMapConverter.ConvertTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.Activities.XamlIntegration.DynamicUpdateMapConverter.#ctor
  parent: System.Activities.XamlIntegration.DynamicUpdateMapConverter
  isExternal: false
  name: DynamicUpdateMapConverter()
  nameWithType: DynamicUpdateMapConverter.DynamicUpdateMapConverter()
  fullName: System.Activities.XamlIntegration.DynamicUpdateMapConverter.DynamicUpdateMapConverter()
- uid: System.Activities.XamlIntegration.DynamicUpdateMapConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Activities.XamlIntegration.DynamicUpdateMapConverter
  isExternal: false
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: DynamicUpdateMapConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Activities.XamlIntegration.DynamicUpdateMapConverter.CanConvertTo(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Activities.XamlIntegration.DynamicUpdateMapConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Activities.XamlIntegration.DynamicUpdateMapConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: DynamicUpdateMapConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Activities.XamlIntegration.DynamicUpdateMapConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Activities.XamlIntegration.DynamicUpdateMapConverter.#ctor*
  parent: System.Activities.XamlIntegration.DynamicUpdateMapConverter
  isExternal: false
  name: DynamicUpdateMapConverter
  nameWithType: DynamicUpdateMapConverter.DynamicUpdateMapConverter
- uid: System.Activities.XamlIntegration.DynamicUpdateMapConverter.CanConvertTo*
  parent: System.Activities.XamlIntegration.DynamicUpdateMapConverter
  isExternal: false
  name: CanConvertTo
  nameWithType: DynamicUpdateMapConverter.CanConvertTo
- uid: System.Activities.XamlIntegration.DynamicUpdateMapConverter.ConvertTo*
  parent: System.Activities.XamlIntegration.DynamicUpdateMapConverter
  isExternal: false
  name: ConvertTo
  nameWithType: DynamicUpdateMapConverter.ConvertTo
