### YamlMime:ManagedReference
items:
- uid: System.MarshalByRefObject
  id: MarshalByRefObject
  children:
  - System.MarshalByRefObject.#ctor
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  langs:
  - csharp
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
  type: Class
  summary: "Permite acesso a objetos através de limites de domínio de aplicação nas aplicações nesse sistema de interação remota de suporte."
  remarks: "Um domínio de aplicação é uma partição num processo de sistema operativo onde residem uma ou mais aplicações. Objetos no mesmo domínio de aplicação comunicam diretamente. Objetos de domínios de aplicação diferente comunicam através de cópias de objetos de transporte através de limites de domínio de aplicação ou ao utilizar um proxy para trocar mensagens.       MarshalByRefObject é a classe base para objetos que comunicam através de limites de domínio de aplicação ao trocar mensagens através de um proxy. Objetos que herda a partir de MarshalByRefObject são implicitamente empacotamento de referências por valor. Quando uma aplicação remota referencia um empacotamento de referências por objecto de valor, uma cópia do objeto é transmitida através de limites de domínio de aplicação.       Objetos de MarshalByRefObject são acedidos diretamente dentro dos limites do domínio de aplicação local. Na primeira vez que um MarshalByRefObject acede a uma aplicação num domínio de aplicação remota um proxy é transmitido para a aplicação remota. As chamadas subsequentes no proxy do são empacotar as referências de volta para o objeto que reside no domínio local da aplicação.       Tipos tem de herdar MarshalByRefObject quando o tipo é utilizado nos limites de domínio de aplicação e o estado do objeto não deverão ser copiado porque os membros do objeto não são utilizáveis fora do domínio de aplicação onde foram criados.       Quando derivar um objeto de MarshalByRefObject para utilização ao longo dos limites de domínio de aplicação, não devem substituir qualquer um dos respetivos membros, nem deve chamar os métodos diretamente. O tempo de execução reconhece que classes derivadas de MarshalByRefObject devem ser empacotadas nos limites de domínio de aplicação."
  example:
  - "This section contains two code examples. The first code example shows how to create an instance of a class in another application domain. The second code example shows a simple class that can be used for remoting.  \n  \n **Example 1**  \n  \n The following code example shows the simplest way to execute code in another application domain. The example defines a class named `Worker` that inherits MarshalByRefObject, with a method that displays the name of the application domain in which it is executing. The example creates instances of `Worker` in the default application domain and in a new application domain.  \n  \n> [!NOTE]\n>  The assembly that contains `Worker` must be loaded into both application domains, but it could load other assemblies that would exist only in the new application domain.  \n  \n [!code-cpp[CreateInstanceAndUnwrap2#1](~/add/codesnippet/cpp/t-system.marshalbyrefobj_1.cpp)]\n [!code-cs[CreateInstanceAndUnwrap2#1](~/add/codesnippet/csharp/t-system.marshalbyrefobj_1.cs)]\n [!code-vb[CreateInstanceAndUnwrap2#1](~/add/codesnippet/visualbasic/t-system.marshalbyrefobj_1.vb)]  \n  \n **Example 2**  \n  \n The following example demonstrates a class derived from MarshalByRefObject that is used later in remoting.  \n  \n [!code-cpp[RemotingServices.SetObjectUriForMarshal#1](~/add/codesnippet/cpp/t-system.marshalbyrefobj_2.cpp)]\n [!code-cs[RemotingServices.SetObjectUriForMarshal#1](~/add/codesnippet/csharp/t-system.marshalbyrefobj_2.cs)]\n [!code-vb[RemotingServices.SetObjectUriForMarshal#1](~/add/codesnippet/visualbasic/t-system.marshalbyrefobj_2.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class MarshalByRefObject
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.MarshalByRefObject.#ctor
  id: '#ctor'
  parent: System.MarshalByRefObject
  langs:
  - csharp
  name: MarshalByRefObject()
  nameWithType: MarshalByRefObject.MarshalByRefObject()
  fullName: System.MarshalByRefObject.MarshalByRefObject()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Inicializa uma nova instância do <xref href=&quot;System.MarshalByRefObject&quot;> </xref> classe."
  syntax:
    content: protected MarshalByRefObject ();
    parameters: []
  overload: System.MarshalByRefObject.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.MarshalByRefObject.CreateObjRef(System.Type)
  id: CreateObjRef(System.Type)
  parent: System.MarshalByRefObject
  langs:
  - csharp
  name: CreateObjRef(Type)
  nameWithType: MarshalByRefObject.CreateObjRef(Type)
  fullName: System.MarshalByRefObject.CreateObjRef(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Cria um objeto que contém todas as informações relevantes necessárias para gerar um proxy utilizado para comunicar com um objecto remoto."
  remarks: "Método de TheCreateObjRef é chamado por métodos de criação do objeto remoto como <xref:System.AppDomain.CreateInstance%2A?displayProperty=fullName>e <xref:System.AppDomain.CreateInstanceAndUnwrap%2A?displayProperty=fullName>.</xref:System.AppDomain.CreateInstanceAndUnwrap%2A?displayProperty=fullName> </xref:System.AppDomain.CreateInstance%2A?displayProperty=fullName> Na maioria dos casos, não é necessário substituir este método."
  syntax:
    content: public virtual System.Runtime.Remoting.ObjRef CreateObjRef (Type requestedType);
    parameters:
    - id: requestedType
      type: System.Type
      description: "O <xref:System.Type>do objeto que a nova <xref href=&quot;System.Runtime.Remoting.ObjRef&quot;> </xref> fará referência.</xref:System.Type>"
    return:
      type: System.Runtime.Remoting.ObjRef
      description: "Informações necessárias para gerar um proxy."
  overload: System.MarshalByRefObject.CreateObjRef*
  exceptions:
  - type: System.Runtime.Remoting.RemotingException
    commentId: T:System.Runtime.Remoting.RemotingException
    description: "Esta instância não é um objeto de comunicação remota válido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador imediato não tem permissão de infraestrutura."
  platform:
  - net462
- uid: System.MarshalByRefObject.GetLifetimeService
  id: GetLifetimeService
  parent: System.MarshalByRefObject
  langs:
  - csharp
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: System.MarshalByRefObject.GetLifetimeService()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Obtém o objeto de serviço atual duração que controla a política de duração para esta instância."
  remarks: "Para obter mais informações sobre os serviços de duração, consulte a <xref:System.Runtime.Remoting.Lifetime.LifetimeServices>classe.</xref:System.Runtime.Remoting.Lifetime.LifetimeServices>"
  syntax:
    content: public object GetLifetimeService ();
    parameters: []
    return:
      type: System.Object
      description: "Um objeto do tipo <xref href=&quot;System.Runtime.Remoting.Lifetime.ILease&quot;> </xref> utilizadas para controlar a política de duração para esta instância."
  overload: System.MarshalByRefObject.GetLifetimeService*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador imediato não tem permissão de infraestrutura."
  platform:
  - net462
- uid: System.MarshalByRefObject.InitializeLifetimeService
  id: InitializeLifetimeService
  parent: System.MarshalByRefObject
  langs:
  - csharp
  name: InitializeLifetimeService()
  nameWithType: MarshalByRefObject.InitializeLifetimeService()
  fullName: System.MarshalByRefObject.InitializeLifetimeService()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Obtém um objeto de serviço de duração para controlar a política de duração para esta instância."
  remarks: "Para obter mais informações sobre os serviços de duração, consulte a <xref:System.Runtime.Remoting.Lifetime.LifetimeServices>classe.</xref:System.Runtime.Remoting.Lifetime.LifetimeServices>"
  example:
  - "The following code example demonstrates creating a lease.  \n  \n [!code-cpp[Classic MarshalByRefObject.InitializeLifetimeService Example#1](~/add/codesnippet/cpp/m-system.marshalbyrefobj_1.cpp)]\n [!code-vb[Classic MarshalByRefObject.InitializeLifetimeService Example#1](~/add/codesnippet/visualbasic/m-system.marshalbyrefobj_1.vb)]\n [!code-cs[Classic MarshalByRefObject.InitializeLifetimeService Example#1](~/add/codesnippet/csharp/m-system.marshalbyrefobj_1.cs)]"
  syntax:
    content: public virtual object InitializeLifetimeService ();
    parameters: []
    return:
      type: System.Object
      description: "Um objeto do tipo <xref href=&quot;System.Runtime.Remoting.Lifetime.ILease&quot;> </xref> utilizadas para controlar a política de duração para esta instância. Esta é a duração atual do objeto de serviço para esta instância se um existe; caso contrário, um objeto de serviço novo duração inicializada para o valor da &lt;xref:System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime%2A?displayProperty=fullName&gt; propriedade."
  overload: System.MarshalByRefObject.InitializeLifetimeService*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador imediato não tem permissão de infraestrutura."
  platform:
  - net462
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  id: MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  langs:
  - csharp
  name: MemberwiseClone(Boolean)
  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)
  fullName: System.MarshalByRefObject.MemberwiseClone(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Cria uma cópia shallow atual <xref href=&quot;System.MarshalByRefObject&quot;> </xref> objeto."
  remarks: "O método MemberwiseClone cria uma cópia shallow criando uma nova <xref:System.MarshalByRefObject>de objeto e, em seguida, copiar os campos nonstatic de atual <xref:System.MarshalByRefObject>objeto para o novo objeto.</xref:System.MarshalByRefObject> </xref:System.MarshalByRefObject> Se um campo é um tipo de valor, é efetuada uma cópia de bit-por-bit do campo. Se um campo é um tipo de referência, a referência é copiada mas o objeto referenciado. Por conseguinte, o objeto original e o clone de fazer referência ao mesmo objeto.       Por exemplo, considere um objeto de <xref:System.MarshalByRefObject>chamado X que faça referência a objetos A e B. o objeto B, por sua vez, o objeto de referências C. Uma cópia shallow X cria o novo objeto X2 que também faz referência a objetos A e B. Em contrapartida, uma cópia profunda de X cria um novo objeto X2 que faça referência a novos objetos A2 e B2, que são cópias de A e B. B2, por sua vez, referencia o novo objeto C2, que é uma cópia C. Utilize uma classe que implementa o <xref:System.ICloneable>interface para efetuar uma cópia profunda ou shallow de um objeto.</xref:System.ICloneable> </xref:System.MarshalByRefObject>       A identidade de um <xref:System.MarshalByRefObject>objeto está definido como o objeto de servidor remoto que é o destino de uma chamada de cliente remota.</xref:System.MarshalByRefObject> Por predefinição, o clone memberwise de um <xref:System.MarshalByRefObject>objeto tem a mesma identidade que o objeto original que normalmente não é o comportamento correto para clones de objetos do lado do servidor que são empacotar as referências de através de um limite de comunicação remota para o lado do cliente.</xref:System.MarshalByRefObject> Especifique `false`, que é normalmente adequado, para eliminar a identidade do clone e fazer com que uma nova identidade de ser atribuído quando o clone empacotar as referências através de um limite de comunicação remota, ou `true` para fazer com que o clone reter a identidade do original <xref:System.MarshalByRefObject>objeto.</xref:System.MarshalByRefObject> O método MemberwiseClone se destina a ser utilizado pelos programadores implementar objetos de servidor remoto."
  syntax:
    content: protected MarshalByRefObject MemberwiseClone (bool cloneIdentity);
    parameters:
    - id: cloneIdentity
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Para eliminar atual <xref href=&quot;System.MarshalByRefObject&quot;> </xref> identidade do objeto, o que fará com que o objeto a ser atribuída uma nova identidade quando é empacotar as referências através de um limite de comunicação remota. Um valor de <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> é normalmente adequado. <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para copiar atual <xref href=&quot;System.MarshalByRefObject&quot;> </xref> identidade do objeto para o clone, que fará com que chamadas de cliente de gestão remota para ser encaminhados para o objeto de servidor remoto."
    return:
      type: System.MarshalByRefObject
      description: "Uma cópia shallow atual <xref href=&quot;System.MarshalByRefObject&quot;> </xref> objeto."
  overload: System.MarshalByRefObject.MemberwiseClone*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.Remoting.RemotingException
  parent: System.Runtime.Remoting
  isExternal: false
  name: RemotingException
  nameWithType: RemotingException
  fullName: System.Runtime.Remoting.RemotingException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.MarshalByRefObject.#ctor
  parent: System.MarshalByRefObject
  isExternal: false
  name: MarshalByRefObject()
  nameWithType: MarshalByRefObject.MarshalByRefObject()
  fullName: System.MarshalByRefObject.MarshalByRefObject()
- uid: System.MarshalByRefObject.CreateObjRef(System.Type)
  parent: System.MarshalByRefObject
  isExternal: false
  name: CreateObjRef(Type)
  nameWithType: MarshalByRefObject.CreateObjRef(Type)
  fullName: System.MarshalByRefObject.CreateObjRef(Type)
- uid: System.Runtime.Remoting.ObjRef
  parent: System.Runtime.Remoting
  isExternal: false
  name: ObjRef
  nameWithType: ObjRef
  fullName: System.Runtime.Remoting.ObjRef
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.MarshalByRefObject.GetLifetimeService
  parent: System.MarshalByRefObject
  isExternal: false
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: System.MarshalByRefObject.GetLifetimeService()
- uid: System.MarshalByRefObject.InitializeLifetimeService
  parent: System.MarshalByRefObject
  isExternal: false
  name: InitializeLifetimeService()
  nameWithType: MarshalByRefObject.InitializeLifetimeService()
  fullName: System.MarshalByRefObject.InitializeLifetimeService()
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  isExternal: false
  name: MemberwiseClone(Boolean)
  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)
  fullName: System.MarshalByRefObject.MemberwiseClone(Boolean)
- uid: System.MarshalByRefObject
  parent: System
  isExternal: false
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.MarshalByRefObject.#ctor*
  parent: System.MarshalByRefObject
  isExternal: false
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject.MarshalByRefObject
- uid: System.MarshalByRefObject.CreateObjRef*
  parent: System.MarshalByRefObject
  isExternal: false
  name: CreateObjRef
  nameWithType: MarshalByRefObject.CreateObjRef
- uid: System.MarshalByRefObject.GetLifetimeService*
  parent: System.MarshalByRefObject
  isExternal: false
  name: GetLifetimeService
  nameWithType: MarshalByRefObject.GetLifetimeService
- uid: System.MarshalByRefObject.InitializeLifetimeService*
  parent: System.MarshalByRefObject
  isExternal: false
  name: InitializeLifetimeService
  nameWithType: MarshalByRefObject.InitializeLifetimeService
- uid: System.MarshalByRefObject.MemberwiseClone*
  parent: System.MarshalByRefObject
  isExternal: false
  name: MemberwiseClone
  nameWithType: MarshalByRefObject.MemberwiseClone
