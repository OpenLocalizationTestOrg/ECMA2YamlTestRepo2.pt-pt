### YamlMime:ManagedReference
items:
- uid: System.Xml.XPath.Extensions
  id: Extensions
  children:
  - System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode@)
  - System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode@,System.Xml.XmlNameTable)
  - System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode@,System.String)
  - System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode@,System.String,System.Xml.IXmlNamespaceResolver)
  - System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode@,System.String)
  - System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode@,System.String,System.Xml.IXmlNamespaceResolver)
  - System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode@,System.String)
  - System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode@,System.String,System.Xml.IXmlNamespaceResolver)
  langs:
  - csharp
  name: Extensions
  nameWithType: Extensions
  fullName: System.Xml.XPath.Extensions
  type: Class
  summary: "Esta classe contém o [!INCLUDE[sqltecxlinq](~/add/includes/sqltecxlinq-md.md)] métodos de extensão que permitem avaliar expressões XPath."
  remarks: "Há alguns penalidade de desempenho para utilizar estes métodos. Utilizar [!INCLUDE[sqltecxlinq](~/add/includes/sqltecxlinq-md.md)] consultas fornece melhor desempenho.       Apesar da ordenação de coleções devolvidas não for especificada o XML XPath idioma 1.0 recomendação, este método de extensão devolve nós por ordem de documento.       Tenha em atenção que os nós são devolvidos por ordem de documento, mesmo quando utiliza um eixo inverso, tal como `preceding-sibling` ou `ancestor-or-self`."
  syntax:
    content: public static class Extensions
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode@)
  id: CreateNavigator(System.Xml.Linq.XNode@)
  parent: System.Xml.XPath.Extensions
  langs:
  - csharp
  name: CreateNavigator(XNode)
  nameWithType: Extensions.CreateNavigator(XNode)
  fullName: System.Xml.XPath.Extensions.CreateNavigator(XNode)
  type: Method
  assemblies:
  - System.Xml.Linq
  namespace: System.Xml.XPath
  summary: "Cria um <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> para <xref:System.Xml.Linq.XNode>.</xref:System.Xml.Linq.XNode>"
  remarks: "Não é possível editar a árvore XML utilizando o <xref:System.Xml.XPath.XPathNavigator>que é devolvido por este método.</xref:System.Xml.XPath.XPathNavigator> O <xref:System.Xml.XPath.XPathNavigator.CanEdit%2A>propriedade devolve `false`.</xref:System.Xml.XPath.XPathNavigator.CanEdit%2A>       Não é possível criar um <xref:System.Xml.XPath.XPathNavigator>para um <xref:System.Xml.Linq.XDocumentType>nós.</xref:System.Xml.Linq.XDocumentType> </xref:System.Xml.XPath.XPathNavigator> Tipos de documentos não participar no modelo de dados XPath.       Declarações de espaço de nomes são reportadas da esquerda para a direita. Em contrapartida, para <xref:System.Xml.XmlDocument>espaços de nomes forem comunicados a partir da direita para a esquerda.</xref:System.Xml.XmlDocument> Este é o comportamento de compatível porque o modelo de dados XPath não são ordenadas declarações de espaço de nomes.       O método <xref:System.Xml.XPath.XPathNavigator.MoveToId%2A>não é suportada para navegadores que são devolvidos por este método.</xref:System.Xml.XPath.XPathNavigator.MoveToId%2A>       Pode utilizar este método para efetuar uma transformação XSLT. Pode criar uma árvore XML, crie um <xref:System.Xml.XPath.XPathNavigator>da árvore de XML, crie um novo documento e, crie um <xref:System.Xml.XmlWriter>que escreverão no novo documento.</xref:System.Xml.XmlWriter> </xref:System.Xml.XPath.XPathNavigator> Em seguida, pode invocar transformação XSLT, transmitir o <xref:System.Xml.XPath.XPathNavigator>e <xref:System.Xml.XmlWriter>para a transformação.</xref:System.Xml.XmlWriter> </xref:System.Xml.XPath.XPathNavigator> Depois da transformação concluir com êxito, a nova árvore XML é preenchido com os resultados da transformação.       Para efetuar uma transformação XSLT, pode utilizar qualquer um <xref:System.Xml.XmlReader>ou um <xref:System.Xml.XPath.XPathNavigator>.</xref:System.Xml.XPath.XPathNavigator> </xref:System.Xml.XmlReader> Duas abordagens tem características de desempenho diferentes. Alguns transformações executará mais rápida ao utilizar um <xref:System.Xml.XmlReader>, e outros irão ser executados mais rapidamente quando utilizar um <xref:System.Xml.XPath.XPathNavigator>.</xref:System.Xml.XPath.XPathNavigator> </xref:System.Xml.XmlReader> Se o desempenho for uma preocupação, recomendamos que experimente com cada abordagem para determinar que executará melhor na sua circunstâncias."
  example:
  - "```c#  \n  \n                string xslMarkup = @\"<?xml version='1.0'?>  \n<xsl:stylesheet xmlns:xsl='http://www.w3.org/1999/XSL/Transform' version='1.0'>  \n    <xsl:template match='/Parent'>  \n        <Root>  \n            <C1><xsl:value-of select='Child1'/></C1>  \n            <C2><xsl:value-of select='Child2'/></C2>  \n        </Root>  \n    </xsl:template>  \n</xsl:stylesheet>\";  \n  \nXDocument xmlTree = new XDocument(  \n    new XElement(\"Parent\",  \n        new XElement(\"Child1\", \"Child1 data\"),  \n        new XElement(\"Child2\", \"Child2 data\")  \n    )  \n);  \n  \nXDocument newTree = new XDocument();  \nusing (XmlWriter writer = newTree.CreateWriter()) {  \n    // Load the style sheet.  \n    XslCompiledTransform xslt = new XslCompiledTransform();  \n    xslt.Load(XmlReader.Create(new StringReader(xslMarkup)));  \n  \n    // Execute the transform and output the results to a writer.  \n    xslt.Transform(xmlTree.CreateNavigator(), writer);  \n}  \n  \nConsole.WriteLine(newTree);  \n```  \n  \n```vb  \n  \n                Dim xslMarkup As XDocument = _  \n    <?xml version='1.0'?>  \n    <xsl:stylesheet xmlns:xsl='http://www.w3.org/1999/XSL/Transform' version='1.0'>  \n        <xsl:template match='/Parent'>  \n            <Root>  \n                <C1><xsl:value-of select='Child1'/></C1>  \n                <C2><xsl:value-of select='Child2'/></C2>  \n            </Root>  \n        </xsl:template>  \n    </xsl:stylesheet>  \n  \nDim xmlTree As XDocument = _  \n    <?xml version='1.0'?>  \n    <Parent>  \n        <Child1>Child1 data</Child1>  \n        <Child2>Child2 data</Child2>  \n    </Parent>  \n  \nDim newTree As XDocument = New XDocument()  \n  \nUsing writer As XmlWriter = newTree.CreateWriter()  \n    ' Load the style sheet.  \n    Dim xslt As XslCompiledTransform = _  \n        New XslCompiledTransform()  \n    xslt.Load(xslMarkup.CreateReader())  \n  \n    ' Execute the transform and output the results to a writer.  \n    xslt.Transform(xmlTree.CreateNavigator(), writer)  \nEnd Using  \n  \nConsole.WriteLine(newTree)  \n```  \n  \n This example produces the following output:  \n  \n```xml  \n  \n                <Root>  \n  <C1>Child1 data</C1>  \n  <C2>Child2 data</C2>  \n</Root>  \n```"
  syntax:
    content: public static System.Xml.XPath.XPathNavigator CreateNavigator (this System.Xml.Linq.XNode node);
    parameters:
    - id: node
      type: System.Xml.Linq.XNode
      description: "Um <xref:System.Xml.Linq.XNode>que pode processar as consultas XPath.</xref:System.Xml.Linq.XNode>"
    return:
      type: System.Xml.XPath.XPathNavigator
      description: "Um <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> que pode processar as consultas XPath."
  overload: System.Xml.XPath.Extensions.CreateNavigator*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode@,System.Xml.XmlNameTable)
  id: CreateNavigator(System.Xml.Linq.XNode@,System.Xml.XmlNameTable)
  parent: System.Xml.XPath.Extensions
  langs:
  - csharp
  name: CreateNavigator(XNode,XmlNameTable)
  nameWithType: Extensions.CreateNavigator(XNode,XmlNameTable)
  fullName: System.Xml.XPath.Extensions.CreateNavigator(XNode,XmlNameTable)
  type: Method
  assemblies:
  - System.Xml.Linq
  namespace: System.Xml.XPath
  summary: "Cria um <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> para <xref:System.Xml.Linq.XNode>.</xref:System.Xml.Linq.XNode> O <xref:System.Xml.XmlNameTable>permite o processamento de expressão de XPath mais eficiente.</xref:System.Xml.XmlNameTable>"
  remarks: "Não é possível editar a árvore XML utilizando o <xref:System.Xml.XPath.XPathNavigator>que é devolvido por este método.</xref:System.Xml.XPath.XPathNavigator> O <xref:System.Xml.XPath.XPathNavigator.CanEdit%2A>propriedade devolve `false`.</xref:System.Xml.XPath.XPathNavigator.CanEdit%2A>       Não é possível criar um <xref:System.Xml.XPath.XPathNavigator>para um <xref:System.Xml.Linq.XDocumentType>nós.</xref:System.Xml.Linq.XDocumentType> </xref:System.Xml.XPath.XPathNavigator> Tipos de documentos não participar no modelo de dados XPath.       Declarações de espaço de nomes são reportadas da esquerda para a direita. Em contrapartida, para <xref:System.Xml.XmlDocument>espaços de nomes forem comunicados a partir da direita para a esquerda.</xref:System.Xml.XmlDocument> Este é o comportamento de compatível porque o modelo de dados XPath não são ordenadas declarações de espaço de nomes.       O método <xref:System.Xml.XPath.XPathNavigator.MoveToId%2A>não é suportada para navegadores que são devolvidos por este método.</xref:System.Xml.XPath.XPathNavigator.MoveToId%2A>       Se utilizar um <xref:System.Xml.XmlNameTable>com este método para criar o <xref:System.Xml.XPath.XPathNavigator>, irá obter um melhor desempenho ao avaliar a expressão XPath.</xref:System.Xml.XPath.XPathNavigator> </xref:System.Xml.XmlNameTable>"
  syntax:
    content: public static System.Xml.XPath.XPathNavigator CreateNavigator (this System.Xml.Linq.XNode node, System.Xml.XmlNameTable nameTable);
    parameters:
    - id: node
      type: System.Xml.Linq.XNode
      description: "Um <xref:System.Xml.Linq.XNode>que pode processar uma consulta XPath.</xref:System.Xml.Linq.XNode>"
    - id: nameTable
      type: System.Xml.XmlNameTable
      description: "A <xref:System.Xml.XmlNameTable> to be used by <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;></xref>.</xref:System.Xml.XmlNameTable>"
    return:
      type: System.Xml.XPath.XPathNavigator
      description: "Um <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> que pode processar as consultas XPath."
  overload: System.Xml.XPath.Extensions.CreateNavigator*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode@,System.String)
  id: XPathEvaluate(System.Xml.Linq.XNode@,System.String)
  parent: System.Xml.XPath.Extensions
  langs:
  - csharp
  name: XPathEvaluate(XNode,String)
  nameWithType: Extensions.XPathEvaluate(XNode,String)
  fullName: System.Xml.XPath.Extensions.XPathEvaluate(XNode,String)
  type: Method
  assemblies:
  - System.Xml.Linq
  namespace: System.Xml.XPath
  summary: "Avalia uma expressão de XPath."
  remarks: "Se a coleção é uma enumeração de elementos ou atributos, pode utilizar o `Cast` operador para obter uma coleção de <xref:System.Xml.Linq.XElement>ou <xref:System.Xml.Linq.XAttribute>.</xref:System.Xml.Linq.XAttribute> </xref:System.Xml.Linq.XElement>       Apesar da ordenação de coleções devolvidas não for especificada o XML XPath idioma 1.0 recomendação, este método de extensão devolve nós por ordem de documento.       Tenha em atenção que os nós são devolvidos por ordem de documento, mesmo quando utiliza um eixo inverso, tal como `preceding-sibling` ou `ancestor-or-self`."
  example:
  - "The following example creates a small XML tree with an attribute, then uses the <xref:System.Xml.XPath.Extensions.XPathEvaluate%2A> method to retrieve the attribute.  \n  \n```c#  \n  \n                String xml = \"<root a='value'/>\";  \nXDocument d = XDocument.Parse(xml);  \nIEnumerable att = (IEnumerable)d.XPathEvaluate(\"/root/@a\");  \nConsole.WriteLine(att.Cast<XAttribute>().FirstOrDefault());  \n```  \n  \n```vb  \n  \n                Dim d As XDocument = _  \n    <?xml version='1.0'?>  \n    <root a='value'/>  \nDim att As IEnumerable = CType(d.XPathEvaluate(\"/root/@a\"), IEnumerable)  \nConsole.WriteLine(att.Cast(Of XAttribute)().FirstOrDefault())  \n```  \n  \n This example produces the following output:  \n  \n```  \na=\"value\"  \n```"
  syntax:
    content: public static object XPathEvaluate (this System.Xml.Linq.XNode node, string expression);
    parameters:
    - id: node
      type: System.Xml.Linq.XNode
      description: "O <xref:System.Xml.Linq.XNode>no qual se avalia a expressão XPath.</xref:System.Xml.Linq.XNode>"
    - id: expression
      type: System.String
      description: "A <xref:System.String>que contém uma expressão de XPath.</xref:System.String>"
    return:
      type: System.Object
      description: "Um objeto que pode conter um <xref uid=&quot;langword_csharp_bool&quot; name=&quot;bool&quot; href=&quot;&quot;> </xref>, um <xref uid=&quot;langword_csharp_double&quot; name=&quot;double&quot; href=&quot;&quot;> </xref>, um <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref>, ou um &lt;xref:System.Collections.Generic.IEnumerable%601&gt;."
  overload: System.Xml.XPath.Extensions.XPathEvaluate*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode@,System.String,System.Xml.IXmlNamespaceResolver)
  id: XPathEvaluate(System.Xml.Linq.XNode@,System.String,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.XPath.Extensions
  langs:
  - csharp
  name: XPathEvaluate(XNode,String,IXmlNamespaceResolver)
  nameWithType: Extensions.XPathEvaluate(XNode,String,IXmlNamespaceResolver)
  fullName: System.Xml.XPath.Extensions.XPathEvaluate(XNode,String,IXmlNamespaceResolver)
  type: Method
  assemblies:
  - System.Xml.Linq
  namespace: System.Xml.XPath
  summary: "Avalia uma expressão de XPath, resolução de prefixos de espaço de nomes utilizando o <xref:System.Xml.IXmlNamespaceResolver>.</xref:System.Xml.IXmlNamespaceResolver> especificado"
  remarks: "Pode utilizar este método para avaliar a expressão XPath que contêm prefixos de espaço de nomes.       Apesar da ordenação de coleções devolvidas não for especificada o XML XPath idioma 1.0 recomendação, este método de extensão devolve nós por ordem de documento.       Tenha em atenção que os nós são devolvidos por ordem de documento, mesmo quando utiliza um eixo inverso, tal como `preceding-sibling` ou `ancestor-or-self`."
  example:
  - "The following example creates an XML tree that contains a namespace. It uses an <xref:System.Xml.XmlReader> to read the XML document. It then gets an <xref:System.Xml.XmlNameTable> from the <xref:System.Xml.XmlReader>, and an <xref:System.Xml.XmlNamespaceManager> from the <xref:System.Xml.XmlNameTable>. It uses the <xref:System.Xml.XmlNamespaceManager> when selecting an element.  \n  \n```c#  \n  \n                string markup =  \n@\"<aw:Root xmlns:aw='http://www.adventure-works.com'>  \n    <aw:Child1 aw:Att='attdata'>child one data 1</aw:Child1>  \n</aw:Root>\";  \nXmlReader reader = XmlReader.Create(new StringReader(markup));  \nXElement root = XElement.Load(reader);  \nXmlNameTable nameTable = reader.NameTable;  \nXmlNamespaceManager namespaceManager = new XmlNamespaceManager(nameTable);  \nnamespaceManager.AddNamespace(\"aw\", \"http://www.adventure-works.com\");  \nIEnumerable atts = (IEnumerable)root.XPathEvaluate(\"./aw:Child1/@aw:Att\", namespaceManager);  \nIEnumerable<XAttribute> attList = atts.Cast<XAttribute>();  \nXAttribute att = attList.First();  \nConsole.WriteLine(att);  \n```  \n  \n```vb  \n  \n                Dim markup As XElement = _  \n    <aw:Root xmlns:aw='http://www.adventure-works.com'>  \n        <aw:Child1 aw:Att='attdata'>child one data 1</aw:Child1>  \n    </aw:Root>  \nDim reader As XmlReader = markup.CreateReader  \nDim nameTable As XmlNameTable = reader.NameTable  \nDim namespaceManager As XmlNamespaceManager = New XmlNamespaceManager(nameTable)  \nnamespaceManager.AddNamespace(\"aw\", \"http://www.adventure-works.com\")  \nDim atts As IEnumerable = CType(markup.XPathEvaluate(\"./aw:Child1/@aw:Att\", namespaceManager), IEnumerable)  \nDim attList As IEnumerable(Of XAttribute) = atts.Cast(Of XAttribute)()  \nDim att As XAttribute = attList.First()  \nConsole.WriteLine(att)  \n```  \n  \n This example produces the following output:  \n  \n```  \naw:Att=\"attdata\"  \n```"
  syntax:
    content: public static object XPathEvaluate (this System.Xml.Linq.XNode node, string expression, System.Xml.IXmlNamespaceResolver resolver);
    parameters:
    - id: node
      type: System.Xml.Linq.XNode
      description: "O <xref:System.Xml.Linq.XNode>no qual se avalia a expressão XPath.</xref:System.Xml.Linq.XNode>"
    - id: expression
      type: System.String
      description: "A <xref:System.String>que contém uma expressão de XPath.</xref:System.String>"
    - id: resolver
      type: System.Xml.IXmlNamespaceResolver
      description: "A <xref:System.Xml.IXmlNamespaceResolver>para os prefixos de espaço de nomes na expressão XPath.</xref:System.Xml.IXmlNamespaceResolver>"
    return:
      type: System.Object
      description: "Um objeto que contém o resultado da avaliação da expressão. O objeto pode ser um <xref uid=&quot;langword_csharp_bool&quot; name=&quot;bool&quot; href=&quot;&quot;> </xref>, um <xref uid=&quot;langword_csharp_double&quot; name=&quot;double&quot; href=&quot;&quot;> </xref>, um <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref>, ou um &lt;xref:System.Collections.Generic.IEnumerable%601&gt;."
  overload: System.Xml.XPath.Extensions.XPathEvaluate*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode@,System.String)
  id: XPathSelectElement(System.Xml.Linq.XNode@,System.String)
  parent: System.Xml.XPath.Extensions
  langs:
  - csharp
  name: XPathSelectElement(XNode,String)
  nameWithType: Extensions.XPathSelectElement(XNode,String)
  fullName: System.Xml.XPath.Extensions.XPathSelectElement(XNode,String)
  type: Method
  assemblies:
  - System.Xml.Linq
  namespace: System.Xml.XPath
  summary: "Seleciona um <xref:System.Xml.Linq.XElement>utilizando uma expressão de XPath.</xref:System.Xml.Linq.XElement>"
  remarks: ''
  example:
  - "The following example creates a small XML tree and uses <xref:System.Xml.XPath.Extensions.XPathSelectElement%2A> to select a single element.  \n  \n```c#  \n  \n                XElement root = new XElement(\"Root\",  \n    new XElement(\"Child1\", 1),  \n    new XElement(\"Child2\", 2),  \n    new XElement(\"Child3\", 3),  \n    new XElement(\"Child4\", 4),  \n    new XElement(\"Child5\", 5),  \n    new XElement(\"Child6\", 6)  \n);  \nXElement el = root.XPathSelectElement(\"./Child4\");  \nConsole.WriteLine(el);  \n```  \n  \n```vb  \n  \n                Dim root As XElement = _  \n    <Root>  \n        <Child1>1</Child1>  \n        <Child2>2</Child2>  \n        <Child3>3</Child3>  \n        <Child4>4</Child4>  \n        <Child5>5</Child5>  \n        <Child6>6</Child6>  \n    </Root>  \nDim el As XElement = root.XPathSelectElement(\"./Child4\")  \nConsole.WriteLine(el)  \n```  \n  \n This example produces the following output:  \n  \n```  \n<Child4>4</Child4>  \n```"
  syntax:
    content: public static System.Xml.Linq.XElement XPathSelectElement (this System.Xml.Linq.XNode node, string expression);
    parameters:
    - id: node
      type: System.Xml.Linq.XNode
      description: "O <xref:System.Xml.Linq.XNode>no qual se avalia a expressão XPath.</xref:System.Xml.Linq.XNode>"
    - id: expression
      type: System.String
      description: "A <xref:System.String>que contém uma expressão de XPath.</xref:System.String>"
    return:
      type: System.Xml.Linq.XElement
      description: "Um <xref:System.Xml.Linq.XElement>, ou nula.</xref:System.Xml.Linq.XElement>"
  overload: System.Xml.XPath.Extensions.XPathSelectElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode@,System.String,System.Xml.IXmlNamespaceResolver)
  id: XPathSelectElement(System.Xml.Linq.XNode@,System.String,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.XPath.Extensions
  langs:
  - csharp
  name: XPathSelectElement(XNode,String,IXmlNamespaceResolver)
  nameWithType: Extensions.XPathSelectElement(XNode,String,IXmlNamespaceResolver)
  fullName: System.Xml.XPath.Extensions.XPathSelectElement(XNode,String,IXmlNamespaceResolver)
  type: Method
  assemblies:
  - System.Xml.Linq
  namespace: System.Xml.XPath
  summary: "Seleciona um <xref:System.Xml.Linq.XElement>utilizando uma expressão de XPath, resolução de prefixos de espaço de nomes utilizando o <xref:System.Xml.IXmlNamespaceResolver>.</xref:System.Xml.IXmlNamespaceResolver> especificado</xref:System.Xml.Linq.XElement>"
  remarks: "Pode utilizar este método para avaliar a expressão XPath que contêm prefixos de espaço de nomes."
  example:
  - "The following example creates an XML tree that contains a namespace. It uses an <xref:System.Xml.XmlReader> to read the XML document. It then gets an <xref:System.Xml.XmlNameTable> from the <xref:System.Xml.XmlReader>, and an <xref:System.Xml.XmlNamespaceManager> from the <xref:System.Xml.XmlNameTable>. It uses the <xref:System.Xml.XmlNamespaceManager> when selecting an element.  \n  \n```c#  \n  \n                string markup = @\"  \n<aw:Root xmlns:aw='http://www.adventure-works.com'>  \n    <aw:Child1>child one data</aw:Child1>  \n    <aw:Child2>child two data</aw:Child2>  \n</aw:Root>\";  \nXmlReader reader = XmlReader.Create(new StringReader(markup));  \nXElement root = XElement.Load(reader);  \nXmlNameTable nameTable = reader.NameTable;  \nXmlNamespaceManager namespaceManager = new XmlNamespaceManager(nameTable);  \nnamespaceManager.AddNamespace(\"aw\", \"http://www.adventure-works.com\");  \nXElement child1 = root.XPathSelectElement(\"./aw:Child1\", namespaceManager);  \nConsole.WriteLine(child1);  \n```  \n  \n```vb  \n  \n                Dim markup As XElement = _  \n    <aw:Root xmlns:aw='http://www.adventure-works.com'>  \n        <aw:Child1>child one data</aw:Child1>  \n        <aw:Child2>child two data</aw:Child2>  \n    </aw:Root>  \nDim reader As XmlReader = markup.CreateReader  \nDim nameTable As XmlNameTable = reader.NameTable  \nDim namespaceManager As XmlNamespaceManager = New XmlNamespaceManager(nameTable)  \nnamespaceManager.AddNamespace(\"aw\", \"http://www.adventure-works.com\")  \nDim child1 As XElement = markup.XPathSelectElement(\"./aw:Child1\", namespaceManager)  \nConsole.WriteLine(child1)  \n```  \n  \n This example produces the following output:  \n  \n```  \n<aw:Child1 xmlns:aw=\"http://www.adventure-works.com\">child one data</aw:Child1>  \n```"
  syntax:
    content: public static System.Xml.Linq.XElement XPathSelectElement (this System.Xml.Linq.XNode node, string expression, System.Xml.IXmlNamespaceResolver resolver);
    parameters:
    - id: node
      type: System.Xml.Linq.XNode
      description: "O <xref:System.Xml.Linq.XNode>no qual se avalia a expressão XPath.</xref:System.Xml.Linq.XNode>"
    - id: expression
      type: System.String
      description: "A <xref:System.String>que contém uma expressão de XPath.</xref:System.String>"
    - id: resolver
      type: System.Xml.IXmlNamespaceResolver
      description: "Um <xref:System.Xml.IXmlNamespaceResolver>para os prefixos de espaço de nomes na expressão XPath.</xref:System.Xml.IXmlNamespaceResolver>"
    return:
      type: System.Xml.Linq.XElement
      description: "Um <xref:System.Xml.Linq.XElement>, ou nula.</xref:System.Xml.Linq.XElement>"
  overload: System.Xml.XPath.Extensions.XPathSelectElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode@,System.String)
  id: XPathSelectElements(System.Xml.Linq.XNode@,System.String)
  parent: System.Xml.XPath.Extensions
  langs:
  - csharp
  name: XPathSelectElements(XNode,String)
  nameWithType: Extensions.XPathSelectElements(XNode,String)
  fullName: System.Xml.XPath.Extensions.XPathSelectElements(XNode,String)
  type: Method
  assemblies:
  - System.Xml.Linq
  namespace: System.Xml.XPath
  summary: "Seleciona uma coleção de elementos utilizando uma expressão de XPath."
  remarks: "Apesar da ordenação de coleções devolvidas não for especificada o XML XPath idioma 1.0 recomendação, este método de extensão devolve nós por ordem de documento.       Tenha em atenção que os nós são devolvidos por ordem de documento, mesmo quando utiliza um eixo inverso, tal como `preceding-sibling` ou `ancestor-or-self`."
  example:
  - "The following example creates a small XML tree and uses <xref:System.Xml.XPath.Extensions.XPathSelectElements%2A> to select a set of elements.  \n  \n```c#  \n  \n                XElement root = new XElement(\"Root\",  \n    new XElement(\"Child1\", 1),  \n    new XElement(\"Child1\", 2),  \n    new XElement(\"Child1\", 3),  \n    new XElement(\"Child2\", 4),  \n    new XElement(\"Child2\", 5),  \n    new XElement(\"Child2\", 6)  \n);  \nIEnumerable<XElement> list = root.XPathSelectElements(\"./Child2\");  \nforeach (XElement el in list)  \n    Console.WriteLine(el);  \n```  \n  \n```vb  \n  \n                Dim root As XElement = _  \n    <Root>  \n        <Child1>1</Child1>  \n        <Child1>2</Child1>  \n        <Child1>3</Child1>  \n        <Child2>4</Child2>  \n        <Child2>5</Child2>  \n        <Child2>6</Child2>  \n    </Root>  \nDim list As IEnumerable(Of XElement) = root.XPathSelectElements(\"./Child2\")  \nFor Each el As XElement In list  \n    Console.WriteLine(el)  \nNext  \n```  \n  \n This example produces the following output:  \n  \n```  \n<Child2>4</Child2>  \n<Child2>5</Child2>  \n<Child2>6</Child2>  \n```"
  syntax:
    content: public static System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement> XPathSelectElements (this System.Xml.Linq.XNode node, string expression);
    parameters:
    - id: node
      type: System.Xml.Linq.XNode
      description: "O <xref:System.Xml.Linq.XNode>no qual se avalia a expressão XPath.</xref:System.Xml.Linq.XNode>"
    - id: expression
      type: System.String
      description: "A <xref:System.String>que contém uma expressão de XPath.</xref:System.String>"
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: "Um &lt;xref:System.Collections.Generic.IEnumerable%601&gt; de <xref:System.Xml.Linq.XElement>que contém os elementos selecionados.</xref:System.Xml.Linq.XElement>"
  overload: System.Xml.XPath.Extensions.XPathSelectElements*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode@,System.String,System.Xml.IXmlNamespaceResolver)
  id: XPathSelectElements(System.Xml.Linq.XNode@,System.String,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.XPath.Extensions
  langs:
  - csharp
  name: XPathSelectElements(XNode,String,IXmlNamespaceResolver)
  nameWithType: Extensions.XPathSelectElements(XNode,String,IXmlNamespaceResolver)
  fullName: System.Xml.XPath.Extensions.XPathSelectElements(XNode,String,IXmlNamespaceResolver)
  type: Method
  assemblies:
  - System.Xml.Linq
  namespace: System.Xml.XPath
  summary: "Seleciona uma coleção de elementos a utilizar uma expressão de XPath, resolução de prefixos de espaço de nomes utilizando o <xref:System.Xml.IXmlNamespaceResolver>.</xref:System.Xml.IXmlNamespaceResolver> especificado"
  remarks: "Pode utilizar este método para avaliar a expressão XPath que contêm prefixos de espaço de nomes.       Apesar da ordenação de coleções devolvidas não for especificada o XML XPath idioma 1.0 recomendação, este método de extensão devolve nós por ordem de documento.       Tenha em atenção que os nós são devolvidos por ordem de documento, mesmo quando utiliza um eixo inverso, tal como `preceding-sibling` ou `ancestor-or-self`."
  example:
  - "This example creates an XML tree that contains a namespace. It uses an <xref:System.Xml.XmlReader> to read the XML document. It then gets an <xref:System.Xml.XmlNameTable> from the <xref:System.Xml.XmlReader>, and an <xref:System.Xml.XmlNamespaceManager> from the <xref:System.Xml.XmlNameTable>. It uses the <xref:System.Xml.XmlNamespaceManager> when selecting the list of elements.  \n  \n```c#  \n  \n                string markup = @\"  \n<aw:Root xmlns:aw='http://www.adventure-works.com'>  \n    <aw:Child1>child one data 1</aw:Child1>  \n    <aw:Child1>child one data 2</aw:Child1>  \n    <aw:Child1>child one data 3</aw:Child1>  \n    <aw:Child2>child two data 4</aw:Child2>  \n    <aw:Child2>child two data 5</aw:Child2>  \n    <aw:Child2>child two data 6</aw:Child2>  \n</aw:Root>\";  \nXmlReader reader = XmlReader.Create(new StringReader(markup));  \nXElement root = XElement.Load(reader);  \nXmlNameTable nameTable = reader.NameTable;  \nXmlNamespaceManager namespaceManager = new XmlNamespaceManager(nameTable);  \nnamespaceManager.AddNamespace(\"aw\", \"http://www.adventure-works.com\");  \nIEnumerable<XElement> elements = root.XPathSelectElements(\"./aw:Child1\", namespaceManager);  \nforeach (XElement el in elements)  \n    Console.WriteLine(el);  \n```  \n  \n```vb  \n  \n                Dim markup As XElement = _  \n<aw:Root xmlns:aw=\"http://www.adventure-works.com\">  \n    <aw:Child1>child one data 1</aw:Child1>  \n    <aw:Child1>child one data 2</aw:Child1>  \n    <aw:Child1>child one data 3</aw:Child1>  \n    <aw:Child2>child two data 4</aw:Child2>  \n    <aw:Child2>child two data 5</aw:Child2>  \n    <aw:Child2>child two data 6</aw:Child2>  \n</aw:Root>  \nDim reader As XmlReader = markup.CreateReader  \nDim nameTable As XmlNameTable = reader.NameTable  \nDim namespaceManager As XmlNamespaceManager = New XmlNamespaceManager(nameTable)  \nnamespaceManager.AddNamespace(\"aw\", \"http://www.adventure-works.com\")  \nDim elements As IEnumerable(Of XElement) = markup.XPathSelectElements(\"./aw:Child1\", namespaceManager)  \nFor Each el As XElement In elements  \n    Console.WriteLine(el)  \nNext  \n```  \n  \n This example produces the following output:  \n  \n```  \n<aw:Child1 xmlns:aw=\"http://www.adventure-works.com\">child one data 1</aw:Child1>  \n<aw:Child1 xmlns:aw=\"http://www.adventure-works.com\">child one data 2</aw:Child1>  \n<aw:Child1 xmlns:aw=\"http://www.adventure-works.com\">child one data 3</aw:Child1>  \n```"
  syntax:
    content: public static System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement> XPathSelectElements (this System.Xml.Linq.XNode node, string expression, System.Xml.IXmlNamespaceResolver resolver);
    parameters:
    - id: node
      type: System.Xml.Linq.XNode
      description: "O <xref:System.Xml.Linq.XNode>no qual se avalia a expressão XPath.</xref:System.Xml.Linq.XNode>"
    - id: expression
      type: System.String
      description: "A <xref:System.String>que contém uma expressão de XPath.</xref:System.String>"
    - id: resolver
      type: System.Xml.IXmlNamespaceResolver
      description: "A <xref:System.Xml.IXmlNamespaceResolver>para os prefixos de espaço de nomes na expressão XPath.</xref:System.Xml.IXmlNamespaceResolver>"
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: "Um &lt;xref:System.Collections.Generic.IEnumerable%601&gt; de <xref:System.Xml.Linq.XElement>que contém os elementos selecionados.</xref:System.Xml.Linq.XElement>"
  overload: System.Xml.XPath.Extensions.XPathSelectElements*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode@)
  parent: System.Xml.XPath.Extensions
  isExternal: false
  name: CreateNavigator(XNode)
  nameWithType: Extensions.CreateNavigator(XNode)
  fullName: System.Xml.XPath.Extensions.CreateNavigator(XNode)
- uid: System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: false
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: System.Xml.Linq.XNode
  parent: System.Xml.Linq
  isExternal: true
  name: XNode
  nameWithType: XNode
  fullName: System.Xml.Linq.XNode
- uid: System.Xml.XPath.Extensions.CreateNavigator(System.Xml.Linq.XNode@,System.Xml.XmlNameTable)
  parent: System.Xml.XPath.Extensions
  isExternal: false
  name: CreateNavigator(XNode,XmlNameTable)
  nameWithType: Extensions.CreateNavigator(XNode,XmlNameTable)
  fullName: System.Xml.XPath.Extensions.CreateNavigator(XNode,XmlNameTable)
- uid: System.Xml.XmlNameTable
  parent: System.Xml
  isExternal: true
  name: XmlNameTable
  nameWithType: XmlNameTable
  fullName: System.Xml.XmlNameTable
- uid: System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode@,System.String)
  parent: System.Xml.XPath.Extensions
  isExternal: false
  name: XPathEvaluate(XNode,String)
  nameWithType: Extensions.XPathEvaluate(XNode,String)
  fullName: System.Xml.XPath.Extensions.XPathEvaluate(XNode,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XPath.Extensions.XPathEvaluate(System.Xml.Linq.XNode@,System.String,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.XPath.Extensions
  isExternal: false
  name: XPathEvaluate(XNode,String,IXmlNamespaceResolver)
  nameWithType: Extensions.XPathEvaluate(XNode,String,IXmlNamespaceResolver)
  fullName: System.Xml.XPath.Extensions.XPathEvaluate(XNode,String,IXmlNamespaceResolver)
- uid: System.Xml.IXmlNamespaceResolver
  parent: System.Xml
  isExternal: true
  name: IXmlNamespaceResolver
  nameWithType: IXmlNamespaceResolver
  fullName: System.Xml.IXmlNamespaceResolver
- uid: System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode@,System.String)
  parent: System.Xml.XPath.Extensions
  isExternal: false
  name: XPathSelectElement(XNode,String)
  nameWithType: Extensions.XPathSelectElement(XNode,String)
  fullName: System.Xml.XPath.Extensions.XPathSelectElement(XNode,String)
- uid: System.Xml.Linq.XElement
  parent: System.Xml.Linq
  isExternal: true
  name: XElement
  nameWithType: XElement
  fullName: System.Xml.Linq.XElement
- uid: System.Xml.XPath.Extensions.XPathSelectElement(System.Xml.Linq.XNode@,System.String,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.XPath.Extensions
  isExternal: false
  name: XPathSelectElement(XNode,String,IXmlNamespaceResolver)
  nameWithType: Extensions.XPathSelectElement(XNode,String,IXmlNamespaceResolver)
  fullName: System.Xml.XPath.Extensions.XPathSelectElement(XNode,String,IXmlNamespaceResolver)
- uid: System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode@,System.String)
  parent: System.Xml.XPath.Extensions
  isExternal: false
  name: XPathSelectElements(XNode,String)
  nameWithType: Extensions.XPathSelectElements(XNode,String)
  fullName: System.Xml.XPath.Extensions.XPathSelectElements(XNode,String)
- uid: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<XElement>
  nameWithType: IEnumerable<XElement>
  fullName: System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Xml.Linq.XElement>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.Linq.XElement
    name: XElement
    nameWithType: XElement
    fullName: XElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xml.XPath.Extensions.XPathSelectElements(System.Xml.Linq.XNode@,System.String,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.XPath.Extensions
  isExternal: false
  name: XPathSelectElements(XNode,String,IXmlNamespaceResolver)
  nameWithType: Extensions.XPathSelectElements(XNode,String,IXmlNamespaceResolver)
  fullName: System.Xml.XPath.Extensions.XPathSelectElements(XNode,String,IXmlNamespaceResolver)
- uid: System.Xml.XPath.Extensions.CreateNavigator*
  parent: System.Xml.XPath.Extensions
  isExternal: false
  name: CreateNavigator
  nameWithType: Extensions.CreateNavigator
- uid: System.Xml.XPath.Extensions.XPathEvaluate*
  parent: System.Xml.XPath.Extensions
  isExternal: false
  name: XPathEvaluate
  nameWithType: Extensions.XPathEvaluate
- uid: System.Xml.XPath.Extensions.XPathSelectElement*
  parent: System.Xml.XPath.Extensions
  isExternal: false
  name: XPathSelectElement
  nameWithType: Extensions.XPathSelectElement
- uid: System.Xml.XPath.Extensions.XPathSelectElements*
  parent: System.Xml.XPath.Extensions
  isExternal: false
  name: XPathSelectElements
  nameWithType: Extensions.XPathSelectElements
