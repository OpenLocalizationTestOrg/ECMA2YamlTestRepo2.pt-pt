### YamlMime:ManagedReference
items:
- uid: System.Speech.Synthesis.PromptBreak
  id: PromptBreak
  children:
  - System.Speech.Synthesis.PromptBreak.ExtraLarge
  - System.Speech.Synthesis.PromptBreak.ExtraSmall
  - System.Speech.Synthesis.PromptBreak.Large
  - System.Speech.Synthesis.PromptBreak.Medium
  - System.Speech.Synthesis.PromptBreak.None
  - System.Speech.Synthesis.PromptBreak.Small
  langs:
  - csharp
  name: PromptBreak
  nameWithType: PromptBreak
  fullName: System.Speech.Synthesis.PromptBreak
  type: Enum
  summary: "Enumerates values for intervals of prosodic separation (breaks) between word boundaries."
  remarks: "The values in the PromptBreak enumeration represent a range of separation intervals (pauses) between word boundaries. The speech synthesis engine determines the exact duration of the interval. When a break is requested, one of these values is passed to the text-to-speech (TTS) engine, which contains a mapping between these values and the corresponding millisecond break values.       The value `None` represents the absence of a pause between word boundaries and can be used to remove a break where one would normally occur. The remaining values are listed in order of increasing durations for breaks."
  example:
  - "The following example builds a prompt containing two sentences separated by a break and speaks the prompt to the default audio device on the computer.  \n  \n```c#  \nusing System;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      {  \n  \n        // Configure the audio output.   \n        synth.SetOutputToDefaultAudioDevice();  \n  \n        // Build a prompt with two sentences separated by a break.  \n        PromptBuilder builder = new PromptBuilder(  \n          new System.Globalization.CultureInfo(\"en-US\"));  \n        builder.AppendText(  \n          \"Tonight's movie showings in theater A are at 5:45, 7:15, and 8:45.\");  \n        builder.AppendBreak(PromptBreak.Medium);  \n        builder.AppendText(  \n          \"Tonight's movie showings in theater B are at 5:15, 7:30, and 9:15.\");  \n  \n        // Speak the prompt.  \n        synth.Speak(builder);  \n      }  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: public enum PromptBreak
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Speech.Synthesis.PromptBreak.ExtraLarge
  id: ExtraLarge
  parent: System.Speech.Synthesis.PromptBreak
  langs:
  - csharp
  name: ExtraLarge
  nameWithType: PromptBreak.ExtraLarge
  fullName: System.Speech.Synthesis.PromptBreak.ExtraLarge
  type: Field
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Indicates an extra-large break."
  syntax:
    content: ExtraLarge
    return:
      type: System.Speech.Synthesis.PromptBreak
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.PromptBreak.ExtraSmall
  id: ExtraSmall
  parent: System.Speech.Synthesis.PromptBreak
  langs:
  - csharp
  name: ExtraSmall
  nameWithType: PromptBreak.ExtraSmall
  fullName: System.Speech.Synthesis.PromptBreak.ExtraSmall
  type: Field
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Indicates an extra-small break."
  syntax:
    content: ExtraSmall
    return:
      type: System.Speech.Synthesis.PromptBreak
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.PromptBreak.Large
  id: Large
  parent: System.Speech.Synthesis.PromptBreak
  langs:
  - csharp
  name: Large
  nameWithType: PromptBreak.Large
  fullName: System.Speech.Synthesis.PromptBreak.Large
  type: Field
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Indicates a large break."
  syntax:
    content: Large
    return:
      type: System.Speech.Synthesis.PromptBreak
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.PromptBreak.Medium
  id: Medium
  parent: System.Speech.Synthesis.PromptBreak
  langs:
  - csharp
  name: Medium
  nameWithType: PromptBreak.Medium
  fullName: System.Speech.Synthesis.PromptBreak.Medium
  type: Field
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Indicates a medium break."
  syntax:
    content: Medium
    return:
      type: System.Speech.Synthesis.PromptBreak
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.PromptBreak.None
  id: None
  parent: System.Speech.Synthesis.PromptBreak
  langs:
  - csharp
  name: None
  nameWithType: PromptBreak.None
  fullName: System.Speech.Synthesis.PromptBreak.None
  type: Field
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Indicates no break."
  syntax:
    content: None
    return:
      type: System.Speech.Synthesis.PromptBreak
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.PromptBreak.Small
  id: Small
  parent: System.Speech.Synthesis.PromptBreak
  langs:
  - csharp
  name: Small
  nameWithType: PromptBreak.Small
  fullName: System.Speech.Synthesis.PromptBreak.Small
  type: Field
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "Indicates a small break."
  syntax:
    content: Small
    return:
      type: System.Speech.Synthesis.PromptBreak
      description: "To be added."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Speech.Synthesis.PromptBreak.ExtraLarge
  parent: System.Speech.Synthesis.PromptBreak
  isExternal: false
  name: ExtraLarge
  nameWithType: PromptBreak.ExtraLarge
  fullName: System.Speech.Synthesis.PromptBreak.ExtraLarge
- uid: System.Speech.Synthesis.PromptBreak
  parent: System.Speech.Synthesis
  isExternal: false
  name: PromptBreak
  nameWithType: PromptBreak
  fullName: System.Speech.Synthesis.PromptBreak
- uid: System.Speech.Synthesis.PromptBreak.ExtraSmall
  parent: System.Speech.Synthesis.PromptBreak
  isExternal: false
  name: ExtraSmall
  nameWithType: PromptBreak.ExtraSmall
  fullName: System.Speech.Synthesis.PromptBreak.ExtraSmall
- uid: System.Speech.Synthesis.PromptBreak.Large
  parent: System.Speech.Synthesis.PromptBreak
  isExternal: false
  name: Large
  nameWithType: PromptBreak.Large
  fullName: System.Speech.Synthesis.PromptBreak.Large
- uid: System.Speech.Synthesis.PromptBreak.Medium
  parent: System.Speech.Synthesis.PromptBreak
  isExternal: false
  name: Medium
  nameWithType: PromptBreak.Medium
  fullName: System.Speech.Synthesis.PromptBreak.Medium
- uid: System.Speech.Synthesis.PromptBreak.None
  parent: System.Speech.Synthesis.PromptBreak
  isExternal: false
  name: None
  nameWithType: PromptBreak.None
  fullName: System.Speech.Synthesis.PromptBreak.None
- uid: System.Speech.Synthesis.PromptBreak.Small
  parent: System.Speech.Synthesis.PromptBreak
  isExternal: false
  name: Small
  nameWithType: PromptBreak.Small
  fullName: System.Speech.Synthesis.PromptBreak.Small
