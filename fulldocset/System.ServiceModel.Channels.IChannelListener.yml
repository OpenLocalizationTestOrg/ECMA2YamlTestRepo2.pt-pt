### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.IChannelListener
  id: IChannelListener
  children:
  - System.ServiceModel.Channels.IChannelListener.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(System.IAsyncResult)
  - System.ServiceModel.Channels.IChannelListener.GetProperty``1
  - System.ServiceModel.Channels.IChannelListener.Uri
  - System.ServiceModel.Channels.IChannelListener.WaitForChannel(System.TimeSpan)
  langs:
  - csharp
  name: IChannelListener
  nameWithType: IChannelListener
  fullName: System.ServiceModel.Channels.IChannelListener
  type: Interface
  summary: "Defines the interface that must be implemented by a channel listener to accept channels."
  remarks: "The IChannelListener interface represents the base interface for channel listeners.       Channel listeners and their associated channels are generally used by services that receive communications initiated by clients. Channel factories that implement the <xref:System.ServiceModel.Channels.IChannelFactory> interface, by contrast, provide the mechanisms used to create the channels through which communication with a service is initiated."
  syntax:
    content: 'public interface IChannelListener : System.ServiceModel.ICommunicationObject'
  implements:
  - System.ServiceModel.ICommunicationObject
  platform:
  - net462
- uid: System.ServiceModel.Channels.IChannelListener.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IChannelListener
  langs:
  - csharp
  name: BeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  nameWithType: IChannelListener.BeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.IChannelListener.BeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Begins an asynchronous operation to wait for a channel to arrive that must be completed within a specified interval of time."
  syntax:
    content: public IAsyncResult BeginWaitForChannel (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "The <xref:System.TimeSpan> that specifies how long the wait for a channel operation has to complete before timing out."
    - id: callback
      type: System.AsyncCallback
      description: "The <xref:System.AsyncCallback> delegate that receives the notification of the asynchronous completion of the wait for a channel operation."
    - id: state
      type: System.Object
      description: "An object, specified by the application, that contains state information associated with the asynchronous wait for a channel operation."
    return:
      type: System.IAsyncResult
      description: "The <xref:System.IAsyncResult> that references the asynchronous wait for a channel operation."
  overload: System.ServiceModel.Channels.IChannelListener.BeginWaitForChannel*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(System.IAsyncResult)
  id: EndWaitForChannel(System.IAsyncResult)
  parent: System.ServiceModel.Channels.IChannelListener
  langs:
  - csharp
  name: EndWaitForChannel(IAsyncResult)
  nameWithType: IChannelListener.EndWaitForChannel(IAsyncResult)
  fullName: System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Completes an asynchronous operation to wait for channels to arrive."
  syntax:
    content: public bool EndWaitForChannel (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "The <xref:System.IAsyncResult> returned by a call to the EndWaitForChannel method."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if a message arrived; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.Channels.IChannelListener.EndWaitForChannel*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.IChannelListener.GetProperty``1
  id: GetProperty``1
  parent: System.ServiceModel.Channels.IChannelListener
  langs:
  - csharp
  name: GetProperty()
  nameWithType: IChannelListener.GetProperty()
  fullName: System.ServiceModel.Channels.IChannelListener.GetProperty()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: 'public T GetProperty<T> () where T : class;'
    parameters: []
    return:
      type: T
      description: "To be added."
  overload: System.ServiceModel.Channels.IChannelListener.GetProperty<T>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.IChannelListener.Uri
  id: Uri
  parent: System.ServiceModel.Channels.IChannelListener
  langs:
  - csharp
  name: Uri
  nameWithType: IChannelListener.Uri
  fullName: System.ServiceModel.Channels.IChannelListener.Uri
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Gets the URI on which the listeners that are generated by the factory listen."
  remarks: "This URI represents the transport address on which the <xref:System.ServiceModel.Channels.IChannelListener> is listening for messages."
  syntax:
    content: public Uri Uri { get; }
    return:
      type: System.Uri
      description: "The <xref:System.Uri> on which the listeners that are generated by the factory listen."
  overload: System.ServiceModel.Channels.IChannelListener.Uri*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.IChannelListener.WaitForChannel(System.TimeSpan)
  id: WaitForChannel(System.TimeSpan)
  parent: System.ServiceModel.Channels.IChannelListener
  langs:
  - csharp
  name: WaitForChannel(TimeSpan)
  nameWithType: IChannelListener.WaitForChannel(TimeSpan)
  fullName: System.ServiceModel.Channels.IChannelListener.WaitForChannel(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Waits for a channel to arrive."
  syntax:
    content: public bool WaitForChannel (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "The <xref:System.TimeSpan> that specifies how long the wait for a channel operation has to complete before timing out."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if a channel arrived before the interval of time specified by the <code>timeout</code>; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.Channels.IChannelListener.WaitForChannel*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Channels.IChannelListener.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IChannelListener
  isExternal: false
  name: BeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  nameWithType: IChannelListener.BeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.IChannelListener.BeginWaitForChannel(TimeSpan,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(System.IAsyncResult)
  parent: System.ServiceModel.Channels.IChannelListener
  isExternal: false
  name: EndWaitForChannel(IAsyncResult)
  nameWithType: IChannelListener.EndWaitForChannel(IAsyncResult)
  fullName: System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(IAsyncResult)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Channels.IChannelListener.GetProperty``1
  parent: System.ServiceModel.Channels.IChannelListener
  isExternal: false
  name: GetProperty()
  nameWithType: IChannelListener.GetProperty()
  fullName: System.ServiceModel.Channels.IChannelListener.GetProperty()
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.ServiceModel.Channels.IChannelListener.Uri
  parent: System.ServiceModel.Channels.IChannelListener
  isExternal: false
  name: Uri
  nameWithType: IChannelListener.Uri
  fullName: System.ServiceModel.Channels.IChannelListener.Uri
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.Channels.IChannelListener.WaitForChannel(System.TimeSpan)
  parent: System.ServiceModel.Channels.IChannelListener
  isExternal: false
  name: WaitForChannel(TimeSpan)
  nameWithType: IChannelListener.WaitForChannel(TimeSpan)
  fullName: System.ServiceModel.Channels.IChannelListener.WaitForChannel(TimeSpan)
- uid: System.ServiceModel.Channels.IChannelListener.BeginWaitForChannel*
  parent: System.ServiceModel.Channels.IChannelListener
  isExternal: false
  name: BeginWaitForChannel
  nameWithType: IChannelListener.BeginWaitForChannel
- uid: System.ServiceModel.Channels.IChannelListener.EndWaitForChannel*
  parent: System.ServiceModel.Channels.IChannelListener
  isExternal: false
  name: EndWaitForChannel
  nameWithType: IChannelListener.EndWaitForChannel
- uid: System.ServiceModel.Channels.IChannelListener.GetProperty<T>*
  parent: System.ServiceModel.Channels.IChannelListener
  isExternal: false
  name: GetProperty<T>
  nameWithType: IChannelListener.GetProperty<T>
- uid: System.ServiceModel.Channels.IChannelListener.Uri*
  parent: System.ServiceModel.Channels.IChannelListener
  isExternal: false
  name: Uri
  nameWithType: IChannelListener.Uri
- uid: System.ServiceModel.Channels.IChannelListener.WaitForChannel*
  parent: System.ServiceModel.Channels.IChannelListener
  isExternal: false
  name: WaitForChannel
  nameWithType: IChannelListener.WaitForChannel
