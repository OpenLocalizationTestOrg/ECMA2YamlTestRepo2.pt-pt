### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.TargetConverter
  id: TargetConverter
  children:
  - System.Web.UI.WebControls.TargetConverter.#ctor
  - System.Web.UI.WebControls.TargetConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.Web.UI.WebControls.TargetConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.Web.UI.WebControls.TargetConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  langs:
  - csharp
  name: TargetConverter
  nameWithType: TargetConverter
  fullName: System.Web.UI.WebControls.TargetConverter
  type: Class
  summary: "Converts a value that represents the location (target) in which to display the content resulting from a Web navigation to a string. This class also converts a string to a target value."
  remarks: "The TargetConverter class creates a collection of values that can be used to specify the location in which to display content resulting from a Web navigation, such as the page navigated to when a <xref:System.Web.UI.WebControls.HyperLink> control is clicked. This collection is commonly used in a designer to display a list of values that can be used for the `Target` property of a navigation control, such as the <xref:System.Web.UI.WebControls.HyperLink> control."
  syntax:
    content: 'public class TargetConverter : System.ComponentModel.StringConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  - System.ComponentModel.StringConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.StringConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.StringConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.TargetConverter.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.TargetConverter
  langs:
  - csharp
  name: TargetConverter()
  nameWithType: TargetConverter.TargetConverter()
  fullName: System.Web.UI.WebControls.TargetConverter.TargetConverter()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initializes a new instance of the <see cref=&quot;T:System.Web.UI.WebControls.TargetConverter&quot;></see> class."
  syntax:
    content: public TargetConverter ();
    parameters: []
  overload: System.Web.UI.WebControls.TargetConverter.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.TargetConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.WebControls.TargetConverter
  langs:
  - csharp
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: TargetConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.Web.UI.WebControls.TargetConverter.GetStandardValues(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Returns a collection of standard values from the default context for the data type this type converter is designed for."
  remarks: "This is an internal-only class."
  syntax:
    content: public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "An  that provides a format context."
    return:
      type: System.ComponentModel.TypeConverter.StandardValuesCollection
      description: "To be added."
  overload: System.Web.UI.WebControls.TargetConverter.GetStandardValues*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.TargetConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.WebControls.TargetConverter
  langs:
  - csharp
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: TargetConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.Web.UI.WebControls.TargetConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Returns a value that indicates whether the collection of standard values returned from the &lt;xref:System.Web.UI.WebControls.TargetConverter.GetStandardValues%2A&gt; method is an exclusive list."
  remarks: "This is an internal-only class."
  syntax:
    content: public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "An  that provides a format context."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Web.UI.WebControls.TargetConverter.GetStandardValuesExclusive*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Web.UI.WebControls.TargetConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.WebControls.TargetConverter
  langs:
  - csharp
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: TargetConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.Web.UI.WebControls.TargetConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Returns a value that indicates whether this object supports a standard set of values that can be picked from a list, using the specified context."
  remarks: "This is an internal-only class."
  syntax:
    content: public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "An  that provides a format context."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Web.UI.WebControls.TargetConverter.GetStandardValuesSupported*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.ComponentModel.StringConverter
  isExternal: false
  name: System.ComponentModel.StringConverter
- uid: System.Web.UI.WebControls.TargetConverter.#ctor
  parent: System.Web.UI.WebControls.TargetConverter
  isExternal: false
  name: TargetConverter()
  nameWithType: TargetConverter.TargetConverter()
  fullName: System.Web.UI.WebControls.TargetConverter.TargetConverter()
- uid: System.Web.UI.WebControls.TargetConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.WebControls.TargetConverter
  isExternal: false
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: TargetConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.Web.UI.WebControls.TargetConverter.GetStandardValues(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter.StandardValuesCollection
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter+StandardValuesCollection
  nameWithType: TypeConverter+StandardValuesCollection
  fullName: System.ComponentModel.TypeConverter+StandardValuesCollection
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Web.UI.WebControls.TargetConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.WebControls.TargetConverter
  isExternal: false
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: TargetConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.Web.UI.WebControls.TargetConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.TargetConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.WebControls.TargetConverter
  isExternal: false
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: TargetConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.Web.UI.WebControls.TargetConverter.GetStandardValuesSupported(ITypeDescriptorContext)
- uid: System.Web.UI.WebControls.TargetConverter.#ctor*
  parent: System.Web.UI.WebControls.TargetConverter
  isExternal: false
  name: TargetConverter
  nameWithType: TargetConverter.TargetConverter
- uid: System.Web.UI.WebControls.TargetConverter.GetStandardValues*
  parent: System.Web.UI.WebControls.TargetConverter
  isExternal: false
  name: GetStandardValues
  nameWithType: TargetConverter.GetStandardValues
- uid: System.Web.UI.WebControls.TargetConverter.GetStandardValuesExclusive*
  parent: System.Web.UI.WebControls.TargetConverter
  isExternal: false
  name: GetStandardValuesExclusive
  nameWithType: TargetConverter.GetStandardValuesExclusive
- uid: System.Web.UI.WebControls.TargetConverter.GetStandardValuesSupported*
  parent: System.Web.UI.WebControls.TargetConverter
  isExternal: false
  name: GetStandardValuesSupported
  nameWithType: TargetConverter.GetStandardValuesSupported
