### YamlMime:ManagedReference
items:
- uid: System.Net.Http.Headers.ViaHeaderValue
  id: ViaHeaderValue
  children:
  - System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String)
  - System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String)
  - System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String,System.String)
  - System.Net.Http.Headers.ViaHeaderValue.Comment
  - System.Net.Http.Headers.ViaHeaderValue.Equals(System.Object)
  - System.Net.Http.Headers.ViaHeaderValue.GetHashCode
  - System.Net.Http.Headers.ViaHeaderValue.Parse(System.String)
  - System.Net.Http.Headers.ViaHeaderValue.ProtocolName
  - System.Net.Http.Headers.ViaHeaderValue.ProtocolVersion
  - System.Net.Http.Headers.ViaHeaderValue.ReceivedBy
  - System.Net.Http.Headers.ViaHeaderValue.System#ICloneable#Clone
  - System.Net.Http.Headers.ViaHeaderValue.ToString
  - System.Net.Http.Headers.ViaHeaderValue.TryParse(System.String,System.Net.Http.Headers.ViaHeaderValue@)
  langs:
  - csharp
  name: ViaHeaderValue
  nameWithType: ViaHeaderValue
  fullName: System.Net.Http.Headers.ViaHeaderValue
  type: Class
  summary: "Representa o valor de um cabeçalho de Via."
  syntax:
    content: 'public class ViaHeaderValue : ICloneable'
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Net.Http.Headers.ViaHeaderValue
  langs:
  - csharp
  name: ViaHeaderValue(String,String)
  nameWithType: ViaHeaderValue.ViaHeaderValue(String,String)
  fullName: System.Net.Http.Headers.ViaHeaderValue.ViaHeaderValue(String,String)
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Net.Http.Headers.ViaHeaderValue&quot;> </xref> classe."
  syntax:
    content: public ViaHeaderValue (string protocolVersion, string receivedBy);
    parameters:
    - id: protocolVersion
      type: System.String
      description: "A versão de protocolo do protocolo recebida."
    - id: receivedBy
      type: System.String
      description: "O anfitrião e a porta que o pedido ou resposta recebeu."
  overload: System.Net.Http.Headers.ViaHeaderValue.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Net.Http.Headers.ViaHeaderValue
  langs:
  - csharp
  name: ViaHeaderValue(String,String,String)
  nameWithType: ViaHeaderValue.ViaHeaderValue(String,String,String)
  fullName: System.Net.Http.Headers.ViaHeaderValue.ViaHeaderValue(String,String,String)
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Net.Http.Headers.ViaHeaderValue&quot;> </xref> classe."
  syntax:
    content: public ViaHeaderValue (string protocolVersion, string receivedBy, string protocolName);
    parameters:
    - id: protocolVersion
      type: System.String
      description: "A versão de protocolo do protocolo recebida."
    - id: receivedBy
      type: System.String
      description: "O anfitrião e a porta que o pedido ou resposta recebeu."
    - id: protocolName
      type: System.String
      description: "O nome do protocolo do protocolo recebido."
  overload: System.Net.Http.Headers.ViaHeaderValue.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String)'
  parent: System.Net.Http.Headers.ViaHeaderValue
  langs:
  - csharp
  name: ViaHeaderValue(String,String,String,String)
  nameWithType: ViaHeaderValue.ViaHeaderValue(String,String,String,String)
  fullName: System.Net.Http.Headers.ViaHeaderValue.ViaHeaderValue(String,String,String,String)
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Net.Http.Headers.ViaHeaderValue&quot;> </xref> classe."
  syntax:
    content: public ViaHeaderValue (string protocolVersion, string receivedBy, string protocolName, string comment);
    parameters:
    - id: protocolVersion
      type: System.String
      description: "A versão de protocolo do protocolo recebida."
    - id: receivedBy
      type: System.String
      description: "O anfitrião e a porta que o pedido ou resposta recebeu."
    - id: protocolName
      type: System.String
      description: "O nome do protocolo do protocolo recebido."
    - id: comment
      type: System.String
      description: "O campo de comentário utilizado para identificar o software do destinatário proxy ou gateway."
  overload: System.Net.Http.Headers.ViaHeaderValue.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.ViaHeaderValue.Comment
  id: Comment
  parent: System.Net.Http.Headers.ViaHeaderValue
  langs:
  - csharp
  name: Comment
  nameWithType: ViaHeaderValue.Comment
  fullName: System.Net.Http.Headers.ViaHeaderValue.Comment
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Obtém o campo de comentário utilizado para identificar o software do destinatário proxy ou gateway."
  syntax:
    content: public string Comment { get; }
    return:
      type: System.String
      description: "O campo de comentário utilizado para identificar o software do destinatário proxy ou gateway."
  overload: System.Net.Http.Headers.ViaHeaderValue.Comment*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.ViaHeaderValue.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Net.Http.Headers.ViaHeaderValue
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ViaHeaderValue.Equals(Object)
  fullName: System.Net.Http.Headers.ViaHeaderValue.Equals(Object)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Determina se especificado <xref:System.Object>é igual a atual <xref href=&quot;System.Net.Http.Headers.ViaHeaderValue&quot;> </xref>objeto.</xref:System.Object>"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "O objeto para a comparação com o objeto atual."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se especificado <xref:System.Object>é igual para o objeto atual; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Object>"
  overload: System.Net.Http.Headers.ViaHeaderValue.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.ViaHeaderValue.GetHashCode
  id: GetHashCode
  parent: System.Net.Http.Headers.ViaHeaderValue
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ViaHeaderValue.GetHashCode()
  fullName: System.Net.Http.Headers.ViaHeaderValue.GetHashCode()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Funciona como uma função de hash para uma <xref href=&quot;System.Net.Http.Headers.ViaHeaderValue&quot;> </xref> objeto."
  remarks: "Um código hash é um valor numérico é utilizado para identificar um objeto durante o teste de igualdade. Também podem servir como um índice para um objeto numa coleção.       O método GetHashCode é adequado para utilização em estruturas de dados, tais como uma tabela hash e algoritmos de hash."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Devolve um código hash para o objeto atual."
  overload: System.Net.Http.Headers.ViaHeaderValue.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.ViaHeaderValue.Parse(System.String)
  id: Parse(System.String)
  parent: System.Net.Http.Headers.ViaHeaderValue
  langs:
  - csharp
  name: Parse(String)
  nameWithType: ViaHeaderValue.Parse(String)
  fullName: System.Net.Http.Headers.ViaHeaderValue.Parse(String)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Converte uma cadeia para um <xref href=&quot;System.Net.Http.Headers.ViaHeaderValue&quot;> </xref> instância."
  syntax:
    content: public static System.Net.Http.Headers.ViaHeaderValue Parse (string input);
    parameters:
    - id: input
      type: System.String
      description: "Uma cadeia que representa através de informações de valor de cabeçalho."
    return:
      type: System.Net.Http.Headers.ViaHeaderValue
      description: "A <xref href=&quot;System.Net.Http.Headers.ViaHeaderValue&quot;> </xref> instância."
  overload: System.Net.Http.Headers.ViaHeaderValue.Parse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>é um <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> referência."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>input</code>Não é válido através de informações de valor de cabeçalho."
  platform:
  - net462
- uid: System.Net.Http.Headers.ViaHeaderValue.ProtocolName
  id: ProtocolName
  parent: System.Net.Http.Headers.ViaHeaderValue
  langs:
  - csharp
  name: ProtocolName
  nameWithType: ViaHeaderValue.ProtocolName
  fullName: System.Net.Http.Headers.ViaHeaderValue.ProtocolName
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Obtém o nome do protocolo do protocolo recebido."
  syntax:
    content: public string ProtocolName { get; }
    return:
      type: System.String
      description: "O nome do protocolo."
  overload: System.Net.Http.Headers.ViaHeaderValue.ProtocolName*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.ViaHeaderValue.ProtocolVersion
  id: ProtocolVersion
  parent: System.Net.Http.Headers.ViaHeaderValue
  langs:
  - csharp
  name: ProtocolVersion
  nameWithType: ViaHeaderValue.ProtocolVersion
  fullName: System.Net.Http.Headers.ViaHeaderValue.ProtocolVersion
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Obtém a versão de protocolo do protocolo recebida."
  syntax:
    content: public string ProtocolVersion { get; }
    return:
      type: System.String
      description: "A versão de protocolo."
  overload: System.Net.Http.Headers.ViaHeaderValue.ProtocolVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.ViaHeaderValue.ReceivedBy
  id: ReceivedBy
  parent: System.Net.Http.Headers.ViaHeaderValue
  langs:
  - csharp
  name: ReceivedBy
  nameWithType: ViaHeaderValue.ReceivedBy
  fullName: System.Net.Http.Headers.ViaHeaderValue.ReceivedBy
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Obtém o anfitrião e a porta que o pedido ou resposta recebeu."
  remarks: "O campo de cabeçalho geral Via deve ser utilizado por proxies e gateways para indicar os protocolos intermédios e os destinatários entre o agente de utilizador e o servidor nos pedidos e entre o servidor de origem e o cliente em respostas."
  syntax:
    content: public string ReceivedBy { get; }
    return:
      type: System.String
      description: "O anfitrião e a porta que o pedido ou resposta recebeu."
  overload: System.Net.Http.Headers.ViaHeaderValue.ReceivedBy*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.ViaHeaderValue.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Net.Http.Headers.ViaHeaderValue
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: ViaHeaderValue.System.ICloneable.Clone()
  fullName: System.Net.Http.Headers.ViaHeaderValue.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Cria um novo objeto é uma cópia de atual <xref href=&quot;System.Net.Http.Headers.ViaHeaderValue&quot;> </xref> instância."
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Uma cópia da instância atual."
  overload: System.Net.Http.Headers.ViaHeaderValue.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.ViaHeaderValue.ToString
  id: ToString
  parent: System.Net.Http.Headers.ViaHeaderValue
  langs:
  - csharp
  name: ToString()
  nameWithType: ViaHeaderValue.ToString()
  fullName: System.Net.Http.Headers.ViaHeaderValue.ToString()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Devolve uma cadeia que representa o atual <xref href=&quot;System.Net.Http.Headers.ViaHeaderValue&quot;> </xref> objeto."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Uma cadeia que representa o objeto atual."
  overload: System.Net.Http.Headers.ViaHeaderValue.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.ViaHeaderValue.TryParse(System.String,System.Net.Http.Headers.ViaHeaderValue@)
  id: TryParse(System.String,System.Net.Http.Headers.ViaHeaderValue@)
  parent: System.Net.Http.Headers.ViaHeaderValue
  langs:
  - csharp
  name: TryParse(String,ViaHeaderValue)
  nameWithType: ViaHeaderValue.TryParse(String,ViaHeaderValue)
  fullName: System.Net.Http.Headers.ViaHeaderValue.TryParse(String,ViaHeaderValue)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Determina se uma cadeia válida <xref href=&quot;System.Net.Http.Headers.ViaHeaderValue&quot;> </xref> informações."
  syntax:
    content: public static bool TryParse (string input, out System.Net.Http.Headers.ViaHeaderValue parsedValue);
    parameters:
    - id: input
      type: System.String
      description: "A cadeia a validar."
    - id: parsedValue
      type: System.Net.Http.Headers.ViaHeaderValue
      description: "O <xref href=&quot;System.Net.Http.Headers.ViaHeaderValue&quot;> </xref> versão da cadeia."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>input</code> is valid <xref href=&quot;System.Net.Http.Headers.ViaHeaderValue&quot;></xref> information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Net.Http.Headers.ViaHeaderValue.TryParse*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String)
  parent: System.Net.Http.Headers.ViaHeaderValue
  isExternal: false
  name: ViaHeaderValue(String,String)
  nameWithType: ViaHeaderValue.ViaHeaderValue(String,String)
  fullName: System.Net.Http.Headers.ViaHeaderValue.ViaHeaderValue(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String)
  parent: System.Net.Http.Headers.ViaHeaderValue
  isExternal: false
  name: ViaHeaderValue(String,String,String)
  nameWithType: ViaHeaderValue.ViaHeaderValue(String,String,String)
  fullName: System.Net.Http.Headers.ViaHeaderValue.ViaHeaderValue(String,String,String)
- uid: System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String,System.String)
  parent: System.Net.Http.Headers.ViaHeaderValue
  isExternal: false
  name: ViaHeaderValue(String,String,String,String)
  nameWithType: ViaHeaderValue.ViaHeaderValue(String,String,String,String)
  fullName: System.Net.Http.Headers.ViaHeaderValue.ViaHeaderValue(String,String,String,String)
- uid: System.Net.Http.Headers.ViaHeaderValue.Comment
  parent: System.Net.Http.Headers.ViaHeaderValue
  isExternal: false
  name: Comment
  nameWithType: ViaHeaderValue.Comment
  fullName: System.Net.Http.Headers.ViaHeaderValue.Comment
- uid: System.Net.Http.Headers.ViaHeaderValue.Equals(System.Object)
  parent: System.Net.Http.Headers.ViaHeaderValue
  isExternal: false
  name: Equals(Object)
  nameWithType: ViaHeaderValue.Equals(Object)
  fullName: System.Net.Http.Headers.ViaHeaderValue.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Http.Headers.ViaHeaderValue.GetHashCode
  parent: System.Net.Http.Headers.ViaHeaderValue
  isExternal: false
  name: GetHashCode()
  nameWithType: ViaHeaderValue.GetHashCode()
  fullName: System.Net.Http.Headers.ViaHeaderValue.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Http.Headers.ViaHeaderValue.Parse(System.String)
  parent: System.Net.Http.Headers.ViaHeaderValue
  isExternal: false
  name: Parse(String)
  nameWithType: ViaHeaderValue.Parse(String)
  fullName: System.Net.Http.Headers.ViaHeaderValue.Parse(String)
- uid: System.Net.Http.Headers.ViaHeaderValue
  parent: System.Net.Http.Headers
  isExternal: false
  name: ViaHeaderValue
  nameWithType: ViaHeaderValue
  fullName: System.Net.Http.Headers.ViaHeaderValue
- uid: System.Net.Http.Headers.ViaHeaderValue.ProtocolName
  parent: System.Net.Http.Headers.ViaHeaderValue
  isExternal: false
  name: ProtocolName
  nameWithType: ViaHeaderValue.ProtocolName
  fullName: System.Net.Http.Headers.ViaHeaderValue.ProtocolName
- uid: System.Net.Http.Headers.ViaHeaderValue.ProtocolVersion
  parent: System.Net.Http.Headers.ViaHeaderValue
  isExternal: false
  name: ProtocolVersion
  nameWithType: ViaHeaderValue.ProtocolVersion
  fullName: System.Net.Http.Headers.ViaHeaderValue.ProtocolVersion
- uid: System.Net.Http.Headers.ViaHeaderValue.ReceivedBy
  parent: System.Net.Http.Headers.ViaHeaderValue
  isExternal: false
  name: ReceivedBy
  nameWithType: ViaHeaderValue.ReceivedBy
  fullName: System.Net.Http.Headers.ViaHeaderValue.ReceivedBy
- uid: System.Net.Http.Headers.ViaHeaderValue.System#ICloneable#Clone
  parent: System.Net.Http.Headers.ViaHeaderValue
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: ViaHeaderValue.System.ICloneable.Clone()
  fullName: System.Net.Http.Headers.ViaHeaderValue.System.ICloneable.Clone()
- uid: System.Net.Http.Headers.ViaHeaderValue.ToString
  parent: System.Net.Http.Headers.ViaHeaderValue
  isExternal: false
  name: ToString()
  nameWithType: ViaHeaderValue.ToString()
  fullName: System.Net.Http.Headers.ViaHeaderValue.ToString()
- uid: System.Net.Http.Headers.ViaHeaderValue.TryParse(System.String,System.Net.Http.Headers.ViaHeaderValue@)
  parent: System.Net.Http.Headers.ViaHeaderValue
  isExternal: false
  name: TryParse(String,ViaHeaderValue)
  nameWithType: ViaHeaderValue.TryParse(String,ViaHeaderValue)
  fullName: System.Net.Http.Headers.ViaHeaderValue.TryParse(String,ViaHeaderValue)
- uid: System.Net.Http.Headers.ViaHeaderValue.#ctor*
  parent: System.Net.Http.Headers.ViaHeaderValue
  isExternal: false
  name: ViaHeaderValue
  nameWithType: ViaHeaderValue.ViaHeaderValue
- uid: System.Net.Http.Headers.ViaHeaderValue.Comment*
  parent: System.Net.Http.Headers.ViaHeaderValue
  isExternal: false
  name: Comment
  nameWithType: ViaHeaderValue.Comment
- uid: System.Net.Http.Headers.ViaHeaderValue.Equals*
  parent: System.Net.Http.Headers.ViaHeaderValue
  isExternal: false
  name: Equals
  nameWithType: ViaHeaderValue.Equals
- uid: System.Net.Http.Headers.ViaHeaderValue.GetHashCode*
  parent: System.Net.Http.Headers.ViaHeaderValue
  isExternal: false
  name: GetHashCode
  nameWithType: ViaHeaderValue.GetHashCode
- uid: System.Net.Http.Headers.ViaHeaderValue.Parse*
  parent: System.Net.Http.Headers.ViaHeaderValue
  isExternal: false
  name: Parse
  nameWithType: ViaHeaderValue.Parse
- uid: System.Net.Http.Headers.ViaHeaderValue.ProtocolName*
  parent: System.Net.Http.Headers.ViaHeaderValue
  isExternal: false
  name: ProtocolName
  nameWithType: ViaHeaderValue.ProtocolName
- uid: System.Net.Http.Headers.ViaHeaderValue.ProtocolVersion*
  parent: System.Net.Http.Headers.ViaHeaderValue
  isExternal: false
  name: ProtocolVersion
  nameWithType: ViaHeaderValue.ProtocolVersion
- uid: System.Net.Http.Headers.ViaHeaderValue.ReceivedBy*
  parent: System.Net.Http.Headers.ViaHeaderValue
  isExternal: false
  name: ReceivedBy
  nameWithType: ViaHeaderValue.ReceivedBy
- uid: System.Net.Http.Headers.ViaHeaderValue.System#ICloneable#Clone*
  parent: System.Net.Http.Headers.ViaHeaderValue
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: ViaHeaderValue.System.ICloneable.Clone
- uid: System.Net.Http.Headers.ViaHeaderValue.ToString*
  parent: System.Net.Http.Headers.ViaHeaderValue
  isExternal: false
  name: ToString
  nameWithType: ViaHeaderValue.ToString
- uid: System.Net.Http.Headers.ViaHeaderValue.TryParse*
  parent: System.Net.Http.Headers.ViaHeaderValue
  isExternal: false
  name: TryParse
  nameWithType: ViaHeaderValue.TryParse
