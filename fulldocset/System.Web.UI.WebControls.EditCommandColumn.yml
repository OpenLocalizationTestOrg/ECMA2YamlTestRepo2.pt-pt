### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.EditCommandColumn
  id: EditCommandColumn
  children:
  - System.Web.UI.WebControls.EditCommandColumn.#ctor
  - System.Web.UI.WebControls.EditCommandColumn.ButtonType
  - System.Web.UI.WebControls.EditCommandColumn.CancelText
  - System.Web.UI.WebControls.EditCommandColumn.CausesValidation
  - System.Web.UI.WebControls.EditCommandColumn.EditText
  - System.Web.UI.WebControls.EditCommandColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)
  - System.Web.UI.WebControls.EditCommandColumn.UpdateText
  - System.Web.UI.WebControls.EditCommandColumn.ValidationGroup
  langs:
  - csharp
  name: EditCommandColumn
  nameWithType: EditCommandColumn
  fullName: System.Web.UI.WebControls.EditCommandColumn
  type: Class
  summary: "A special column type for the <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;></xref> control that contains the <xref uid=&quot;langword_csharp_Edit&quot; name=&quot;Edit&quot; href=&quot;&quot;></xref> buttons for editing data items in each row."
  remarks: "Use the EditCommandColumn class to create a special column for the <xref:System.Web.UI.WebControls.DataGrid> control that contains the `Edit`, `Update`, and `Cancel` buttons for each data row in the grid. These buttons allow you to edit the values of a row in the <xref:System.Web.UI.WebControls.DataGrid> control.       If no row is selected, an `Edit` button displays in the EditCommandColumn object for each data row in the <xref:System.Web.UI.WebControls.DataGrid> control. When the `Edit` button for an item is clicked, the <xref:System.Web.UI.WebControls.DataGrid.EditCommand> event is raised and the `Edit` button is replaced with the `Update` and `Cancel` buttons. You need to provide code to handle the <xref:System.Web.UI.WebControls.DataGrid.EditCommand> event. A typical event handler sets the <xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A> property to the selected row, and then rebinds the data to the <xref:System.Web.UI.WebControls.DataGrid> control.      > [!NOTE] >  You must provide values for the <xref:System.Web.UI.WebControls.EditCommandColumn.CancelText%2A>, <xref:System.Web.UI.WebControls.EditCommandColumn.EditText%2A>, and <xref:System.Web.UI.WebControls.EditCommandColumn.UpdateText%2A> properties. Otherwise, the associated buttons will not appear in the EditCommandColumn.       The buttons in the EditCommandColumn can be set to display as hyperlinks or push buttons by setting the <xref:System.Web.UI.WebControls.EditCommandColumn.ButtonType%2A> property.       Clicking the `Update` or `Cancel` button raises the <xref:System.Web.UI.WebControls.DataGrid.UpdateCommand> or <xref:System.Web.UI.WebControls.DataGrid.CancelCommand> event, respectively. You need to provide code to handle these events.       A typical handler for the <xref:System.Web.UI.WebControls.DataGrid.UpdateCommand> event updates the data, sets the <xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A> property to `-1` (to deselect the item), and then rebinds the data to the <xref:System.Web.UI.WebControls.DataGrid> control.       A typical handler for the <xref:System.Web.UI.WebControls.DataGrid.CancelCommand> event sets the <xref:System.Web.UI.WebControls.DataGrid.EditItemIndex%2A> property to `-1` (to deselect the item), and then rebinds the data to the <xref:System.Web.UI.WebControls.DataGrid> control.      > [!CAUTION] >  The EditCommandColumn object can be used to display user input, which might include malicious client script. Check any information that is sent from a client for executable script, SQL statements, or other code before displaying it in your application. You can use validation controls to verify user input before displaying the input text in a <xref:System.Web.UI.WebControls.DataGrid> control.  ASP.NET provides an input request validation feature to block script and HTML in user input. For more information, see [Securing Standard Controls](~/add/includes/ajax-current-ext-md.md), [How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings](~/add/includes/ajax-current-ext-md.md), and [Validating User Input in ASP.NET Web Pages](~/add/includes/ajax-current-ext-md.md).       By default, page validation is performed when an `Update` button in the  EditCommandColumn control is clicked. Page validation determines whether the input controls that are associated with a validation control on the page all pass the validation rules that are specified by the validation control. To prevent page validation from occurring, set the <xref:System.Web.UI.WebControls.EditCommandColumn.CausesValidation%2A> property to `false`."
  example:
  - "The following code example demonstrates how to add an EditCommandColumn object to a <xref:System.Web.UI.WebControls.DataGrid> control.  \n  \n [!code-cs[DataGridEdit#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_2_1.aspx)]\n [!code-vb[DataGridEdit#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_2_1.aspx)]"
  syntax:
    content: 'public class EditCommandColumn : System.Web.UI.WebControls.DataGridColumn'
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.DataGridColumn
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.DataGridColumn.DesignMode
  - System.Web.UI.WebControls.DataGridColumn.FooterStyle
  - System.Web.UI.WebControls.DataGridColumn.FooterText
  - System.Web.UI.WebControls.DataGridColumn.HeaderImageUrl
  - System.Web.UI.WebControls.DataGridColumn.HeaderStyle
  - System.Web.UI.WebControls.DataGridColumn.HeaderText
  - System.Web.UI.WebControls.DataGridColumn.Initialize
  - System.Web.UI.WebControls.DataGridColumn.IsTrackingViewState
  - System.Web.UI.WebControls.DataGridColumn.ItemStyle
  - System.Web.UI.WebControls.DataGridColumn.LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataGridColumn.OnColumnChanged
  - System.Web.UI.WebControls.DataGridColumn.Owner
  - System.Web.UI.WebControls.DataGridColumn.SaveViewState
  - System.Web.UI.WebControls.DataGridColumn.SortExpression
  - System.Web.UI.WebControls.DataGridColumn.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.DataGridColumn.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataGridColumn.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.DataGridColumn.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.DataGridColumn.ToString
  - System.Web.UI.WebControls.DataGridColumn.TrackViewState
  - System.Web.UI.WebControls.DataGridColumn.ViewState
  - System.Web.UI.WebControls.DataGridColumn.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.EditCommandColumn.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.EditCommandColumn
  langs:
  - csharp
  name: EditCommandColumn()
  nameWithType: EditCommandColumn.EditCommandColumn()
  fullName: System.Web.UI.WebControls.EditCommandColumn.EditCommandColumn()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.UI.WebControls.EditCommandColumn&quot;></xref> class."
  remarks: "Use this constructor to create and initialize a new instance of the <xref:System.Web.UI.WebControls.EditCommandColumn> class."
  example:
  - "The following example demonstrates how to create and initialize a new instance of the <xref:System.Web.UI.WebControls.EditCommandColumn> class.  \n  \n [!code-vb[Classic EditCommandColumn.EditCommandColumn Example#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_171_1.vb)]\n [!code-cs[Classic EditCommandColumn.EditCommandColumn Example#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_171_1.cs)]"
  syntax:
    content: public EditCommandColumn ();
    parameters: []
  overload: System.Web.UI.WebControls.EditCommandColumn.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EditCommandColumn.ButtonType
  id: ButtonType
  parent: System.Web.UI.WebControls.EditCommandColumn
  langs:
  - csharp
  name: ButtonType
  nameWithType: EditCommandColumn.ButtonType
  fullName: System.Web.UI.WebControls.EditCommandColumn.ButtonType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the button type for the column."
  remarks: "Use the ButtonType property to specify whether the buttons in the column display as push buttons or hyperlinks.       The value of this property is stored in view state."
  example:
  - "The following example demonstrates how to use the ButtonType property to display the `Edit` command buttons as push buttons.  \n  \n [!code-cs[DataGridEdit#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_593_1.aspx)]\n [!code-vb[DataGridEdit#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_593_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.ButtonColumnType ButtonType { get; set; }
    return:
      type: System.Web.UI.WebControls.ButtonColumnType
      description: "One of the <xref href=&quot;System.Web.UI.WebControls.ButtonColumnType&quot;></xref> values. The default value is <xref uid=&quot;langword_csharp_LinkButton&quot; name=&quot;LinkButton&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.EditCommandColumn.ButtonType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The specified button type is not one of the <xref href=&quot;System.Web.UI.WebControls.ButtonColumnType&quot;></xref> values."
  platform:
  - net462
- uid: System.Web.UI.WebControls.EditCommandColumn.CancelText
  id: CancelText
  parent: System.Web.UI.WebControls.EditCommandColumn
  langs:
  - csharp
  name: CancelText
  nameWithType: EditCommandColumn.CancelText
  fullName: System.Web.UI.WebControls.EditCommandColumn.CancelText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the text to display for the <xref uid=&quot;langword_csharp_Cancel&quot; name=&quot;Cancel&quot; href=&quot;&quot;></xref> command button in the <xref href=&quot;System.Web.UI.WebControls.EditCommandColumn&quot;></xref>."
  remarks: "Use the CancelText property to specify the text to display for the `Cancel` command button in the <xref:System.Web.UI.WebControls.EditCommandColumn>.      > [!NOTE] >  You must provide a value for the CancelText property. Otherwise, the `Cancel` command button will not appear in the <xref:System.Web.UI.WebControls.EditCommandColumn>.       The value of this property is stored in view state.       The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates how to use the CancelText property to provide custom text for the `Cancel` command button.  \n  \n [!code-cs[DataGridEdit#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_925_1.aspx)]\n [!code-vb[DataGridEdit#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_925_1.aspx)]"
  syntax:
    content: public virtual string CancelText { get; set; }
    return:
      type: System.String
      description: "The caption to display for the <xref uid=&quot;langword_csharp_Cancel&quot; name=&quot;Cancel&quot; href=&quot;&quot;></xref> command button in the <xref href=&quot;System.Web.UI.WebControls.EditCommandColumn&quot;></xref>."
  overload: System.Web.UI.WebControls.EditCommandColumn.CancelText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EditCommandColumn.CausesValidation
  id: CausesValidation
  parent: System.Web.UI.WebControls.EditCommandColumn
  langs:
  - csharp
  name: CausesValidation
  nameWithType: EditCommandColumn.CausesValidation
  fullName: System.Web.UI.WebControls.EditCommandColumn.CausesValidation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets a value indicating whether validation is performed when an <xref uid=&quot;langword_csharp_Update&quot; name=&quot;Update&quot; href=&quot;&quot;></xref> button in the <xref href=&quot;System.Web.UI.WebControls.EditCommandColumn&quot;></xref> object is clicked."
  remarks: "By default, page validation is performed when an `Update` button in a <xref:System.Web.UI.WebControls.EditCommandColumn> control is clicked. Page validation determines whether the input controls that are associated with a validation control on the page all pass the validation rules that are specified by the validation control.       You can specify or determine whether validation is performed on both the client and the server when an `Update` button in an <xref:System.Web.UI.WebControls.EditCommandColumn> control is clicked by using the CausesValidation property. To prevent validation from being performed, set the CausesValidation property to `false`.       When the value of the CausesValidation property is set to `true`, you can also use the <xref:System.Web.UI.WebControls.EditCommandColumn.ValidationGroup%2A> property to specify the name of the validation group for which an `Update` button in the <xref:System.Web.UI.WebControls.EditCommandColumn> object causes validation.       The value of this property is stored in view state."
  syntax:
    content: public virtual bool CausesValidation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if validation is performed when an <xref uid=&quot;langword_csharp_Update&quot; name=&quot;Update&quot; href=&quot;&quot;></xref> button in the <xref href=&quot;System.Web.UI.WebControls.EditCommandColumn&quot;></xref> is clicked; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.EditCommandColumn.CausesValidation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EditCommandColumn.EditText
  id: EditText
  parent: System.Web.UI.WebControls.EditCommandColumn
  langs:
  - csharp
  name: EditText
  nameWithType: EditCommandColumn.EditText
  fullName: System.Web.UI.WebControls.EditCommandColumn.EditText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the text to display for the <xref uid=&quot;langword_csharp_Edit&quot; name=&quot;Edit&quot; href=&quot;&quot;></xref> button in the <xref href=&quot;System.Web.UI.WebControls.EditCommandColumn&quot;></xref>."
  remarks: "Use the EditText property to specify the text to display for the `Edit` button in the <xref:System.Web.UI.WebControls.EditCommandColumn> control.      > [!NOTE] >  You must provide a value for the EditText property. Otherwise, the `Edit` button will not appear in the <xref:System.Web.UI.WebControls.EditCommandColumn>.       The value of this property is stored in view state.       The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to use the EditText property to provide custom text for the `Edit` button.  \n  \n [!code-cs[DataGridEdit#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1331_1.aspx)]\n [!code-vb[DataGridEdit#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1331_1.aspx)]"
  syntax:
    content: public virtual string EditText { get; set; }
    return:
      type: System.String
      description: "The caption to display for the <xref uid=&quot;langword_csharp_Edit&quot; name=&quot;Edit&quot; href=&quot;&quot;></xref> button in the <xref href=&quot;System.Web.UI.WebControls.EditCommandColumn&quot;></xref>."
  overload: System.Web.UI.WebControls.EditCommandColumn.EditText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EditCommandColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)
  id: InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)
  parent: System.Web.UI.WebControls.EditCommandColumn
  langs:
  - csharp
  name: InitializeCell(TableCell,Int32,ListItemType)
  nameWithType: EditCommandColumn.InitializeCell(TableCell,Int32,ListItemType)
  fullName: System.Web.UI.WebControls.EditCommandColumn.InitializeCell(TableCell,Int32,ListItemType)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initializes a cell within the column."
  syntax:
    content: public override void InitializeCell (System.Web.UI.WebControls.TableCell cell, int columnIndex, System.Web.UI.WebControls.ListItemType itemType);
    parameters:
    - id: cell
      type: System.Web.UI.WebControls.TableCell
      description: "A <xref href=&quot;System.Web.UI.WebControls.TableCell&quot;></xref> that contains information about the cell to initialize."
    - id: columnIndex
      type: System.Int32
      description: "The column number where the cell is located."
    - id: itemType
      type: System.Web.UI.WebControls.ListItemType
      description: "One of the <xref href=&quot;System.Web.UI.WebControls.ListItemType&quot;></xref> values."
  overload: System.Web.UI.WebControls.EditCommandColumn.InitializeCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EditCommandColumn.UpdateText
  id: UpdateText
  parent: System.Web.UI.WebControls.EditCommandColumn
  langs:
  - csharp
  name: UpdateText
  nameWithType: EditCommandColumn.UpdateText
  fullName: System.Web.UI.WebControls.EditCommandColumn.UpdateText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the text to display for the <xref uid=&quot;langword_csharp_Update&quot; name=&quot;Update&quot; href=&quot;&quot;></xref> command button in the <xref href=&quot;System.Web.UI.WebControls.EditCommandColumn&quot;></xref>."
  remarks: "Use the UpdateText property to specify the text to display for the `Update` command button in the <xref:System.Web.UI.WebControls.EditCommandColumn>.      > [!NOTE] >  You must provide a value for the UpdateText property. Otherwise, the `Update` command button will not appear in the <xref:System.Web.UI.WebControls.EditCommandColumn>.       The value of this property is stored in view state.       The value of this property, when set, can be saved automatically to a resource file by using a designer tool. For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates how to use the UpdateText property to provide custom text for the `Update` command button.  \n  \n [!code-cs[DataGridEdit#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_790_1.aspx)]\n [!code-vb[DataGridEdit#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_790_1.aspx)]"
  syntax:
    content: public virtual string UpdateText { get; set; }
    return:
      type: System.String
      description: "The caption to display for the <xref uid=&quot;langword_csharp_Update&quot; name=&quot;Update&quot; href=&quot;&quot;></xref> command button in the <xref href=&quot;System.Web.UI.WebControls.EditCommandColumn&quot;></xref>."
  overload: System.Web.UI.WebControls.EditCommandColumn.UpdateText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EditCommandColumn.ValidationGroup
  id: ValidationGroup
  parent: System.Web.UI.WebControls.EditCommandColumn
  langs:
  - csharp
  name: ValidationGroup
  nameWithType: EditCommandColumn.ValidationGroup
  fullName: System.Web.UI.WebControls.EditCommandColumn.ValidationGroup
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets the group of validation controls for which the <xref href=&quot;System.Web.UI.WebControls.EditCommandColumn&quot;></xref> object causes validation when it posts back to the server."
  remarks: "Validation groups allow you to assign validation controls on a page to a specific category. Each validation group can be validated independently of other validation groups on the page. Use the ValidationGroup property to specify the name of the validation group for which the Update button in an <xref:System.Web.UI.WebControls.EditCommandColumn> object causes validation when it posts back to the server.       The ValidationGroup property has an effect only when the value of the <xref:System.Web.UI.WebControls.EditCommandColumn.CausesValidation%2A> property is set to `true`. When you specify a value for the ValidationGroup property, only the validation controls that are part of the specified group are validated when the Update button in an <xref:System.Web.UI.WebControls.EditCommandColumn> object posts back to the server. If you do not specify a value for the ValidationGroup property and the <xref:System.Web.UI.WebControls.EditCommandColumn.CausesValidation%2A> property is set to `true`, all validation controls on the page that are not assigned to a validation group are validated when the Update button in an <xref:System.Web.UI.WebControls.EditCommandColumn> object posts back to the server.       The value of this property is stored in view state."
  syntax:
    content: public virtual string ValidationGroup { get; set; }
    return:
      type: System.String
      description: "The group of validation controls for which the Update button in an <xref href=&quot;System.Web.UI.WebControls.EditCommandColumn&quot;></xref> causes validation when it posts back to the server. The default is an empty string (&quot;&quot;)."
  overload: System.Web.UI.WebControls.EditCommandColumn.ValidationGroup*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.DataGridColumn
  isExternal: false
  name: System.Web.UI.WebControls.DataGridColumn
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.UI.WebControls.EditCommandColumn.#ctor
  parent: System.Web.UI.WebControls.EditCommandColumn
  isExternal: false
  name: EditCommandColumn()
  nameWithType: EditCommandColumn.EditCommandColumn()
  fullName: System.Web.UI.WebControls.EditCommandColumn.EditCommandColumn()
- uid: System.Web.UI.WebControls.EditCommandColumn.ButtonType
  parent: System.Web.UI.WebControls.EditCommandColumn
  isExternal: false
  name: ButtonType
  nameWithType: EditCommandColumn.ButtonType
  fullName: System.Web.UI.WebControls.EditCommandColumn.ButtonType
- uid: System.Web.UI.WebControls.ButtonColumnType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ButtonColumnType
  nameWithType: ButtonColumnType
  fullName: System.Web.UI.WebControls.ButtonColumnType
- uid: System.Web.UI.WebControls.EditCommandColumn.CancelText
  parent: System.Web.UI.WebControls.EditCommandColumn
  isExternal: false
  name: CancelText
  nameWithType: EditCommandColumn.CancelText
  fullName: System.Web.UI.WebControls.EditCommandColumn.CancelText
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.EditCommandColumn.CausesValidation
  parent: System.Web.UI.WebControls.EditCommandColumn
  isExternal: false
  name: CausesValidation
  nameWithType: EditCommandColumn.CausesValidation
  fullName: System.Web.UI.WebControls.EditCommandColumn.CausesValidation
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.EditCommandColumn.EditText
  parent: System.Web.UI.WebControls.EditCommandColumn
  isExternal: false
  name: EditText
  nameWithType: EditCommandColumn.EditText
  fullName: System.Web.UI.WebControls.EditCommandColumn.EditText
- uid: System.Web.UI.WebControls.EditCommandColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)
  parent: System.Web.UI.WebControls.EditCommandColumn
  isExternal: false
  name: InitializeCell(TableCell,Int32,ListItemType)
  nameWithType: EditCommandColumn.InitializeCell(TableCell,Int32,ListItemType)
  fullName: System.Web.UI.WebControls.EditCommandColumn.InitializeCell(TableCell,Int32,ListItemType)
- uid: System.Web.UI.WebControls.TableCell
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TableCell
  nameWithType: TableCell
  fullName: System.Web.UI.WebControls.TableCell
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.ListItemType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ListItemType
  nameWithType: ListItemType
  fullName: System.Web.UI.WebControls.ListItemType
- uid: System.Web.UI.WebControls.EditCommandColumn.UpdateText
  parent: System.Web.UI.WebControls.EditCommandColumn
  isExternal: false
  name: UpdateText
  nameWithType: EditCommandColumn.UpdateText
  fullName: System.Web.UI.WebControls.EditCommandColumn.UpdateText
- uid: System.Web.UI.WebControls.EditCommandColumn.ValidationGroup
  parent: System.Web.UI.WebControls.EditCommandColumn
  isExternal: false
  name: ValidationGroup
  nameWithType: EditCommandColumn.ValidationGroup
  fullName: System.Web.UI.WebControls.EditCommandColumn.ValidationGroup
- uid: System.Web.UI.WebControls.EditCommandColumn.#ctor*
  parent: System.Web.UI.WebControls.EditCommandColumn
  isExternal: false
  name: EditCommandColumn
  nameWithType: EditCommandColumn.EditCommandColumn
- uid: System.Web.UI.WebControls.EditCommandColumn.ButtonType*
  parent: System.Web.UI.WebControls.EditCommandColumn
  isExternal: false
  name: ButtonType
  nameWithType: EditCommandColumn.ButtonType
- uid: System.Web.UI.WebControls.EditCommandColumn.CancelText*
  parent: System.Web.UI.WebControls.EditCommandColumn
  isExternal: false
  name: CancelText
  nameWithType: EditCommandColumn.CancelText
- uid: System.Web.UI.WebControls.EditCommandColumn.CausesValidation*
  parent: System.Web.UI.WebControls.EditCommandColumn
  isExternal: false
  name: CausesValidation
  nameWithType: EditCommandColumn.CausesValidation
- uid: System.Web.UI.WebControls.EditCommandColumn.EditText*
  parent: System.Web.UI.WebControls.EditCommandColumn
  isExternal: false
  name: EditText
  nameWithType: EditCommandColumn.EditText
- uid: System.Web.UI.WebControls.EditCommandColumn.InitializeCell*
  parent: System.Web.UI.WebControls.EditCommandColumn
  isExternal: false
  name: InitializeCell
  nameWithType: EditCommandColumn.InitializeCell
- uid: System.Web.UI.WebControls.EditCommandColumn.UpdateText*
  parent: System.Web.UI.WebControls.EditCommandColumn
  isExternal: false
  name: UpdateText
  nameWithType: EditCommandColumn.UpdateText
- uid: System.Web.UI.WebControls.EditCommandColumn.ValidationGroup*
  parent: System.Web.UI.WebControls.EditCommandColumn
  isExternal: false
  name: ValidationGroup
  nameWithType: EditCommandColumn.ValidationGroup
