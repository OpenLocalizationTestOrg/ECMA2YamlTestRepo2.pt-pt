### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  id: SecurityKeyIdentifierClause
  children:
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String)
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Int32)
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  langs:
  - csharp
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  type: Class
  summary: "Represents an abstract base class for a key identifier clause."
  remarks: "Typically, the SecurityKeyIdentifierClause does not need to be used, other than when a custom security token service is created. When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens. Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references reference security tokens that are not included within the security header of a SOAP message. These references typically affirm the authenticity of the issued security token."
  syntax:
    content: public abstract class SecurityKeyIdentifierClause
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  langs:
  - csharp
  name: SecurityKeyIdentifierClause(String)
  nameWithType: SecurityKeyIdentifierClause.SecurityKeyIdentifierClause(String)
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.SecurityKeyIdentifierClause(String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Initializes a new instance of the <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;></xref> class using the specified key identifier clause type."
  remarks: "When this security key identifier is serialized into XML, the `clauseType` parameter is serialized as the `ValueType` attribute of the `<SecurityTokenReference>` element."
  syntax:
    content: protected SecurityKeyIdentifierClause (string clauseType);
    parameters:
    - id: clauseType
      type: System.String
      description: "The key identifier clause type. Sets the value of the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*> property."
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Int32)
  id: '#ctor(System.String,System.Byte[],System.Int32)'
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  langs:
  - csharp
  name: SecurityKeyIdentifierClause(String,Byte[],Int32)
  nameWithType: SecurityKeyIdentifierClause.SecurityKeyIdentifierClause(String,Byte[],Int32)
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.SecurityKeyIdentifierClause(String,Byte[],Int32)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Initializes a new instance of the <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;></xref> class using the specified key identifier clause type, nonce, and the derived key length."
  remarks: '[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)] does not support the creation of implied derived key identifiers. However, [!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)] processes incoming SOAP messages that contain implied key identifier.'
  syntax:
    content: protected SecurityKeyIdentifierClause (string clauseType, byte[] nonce, int length);
    parameters:
    - id: clauseType
      type: System.String
      description: "The key identifier clause type. Sets the value of the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*> property."
    - id: nonce
      type: System.Byte[]
      description: "An array of <xref:System.Byte> that contains the nonce that was used to create a derived key. Sets the value that is returned by the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce*> method."
    - id: length
      type: System.Int32
      description: "The size of the derived key. Sets the value of the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength*> property."
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey
  id: CanCreateKey
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  langs:
  - csharp
  name: CanCreateKey
  nameWithType: SecurityKeyIdentifierClause.CanCreateKey
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets a value that indicates whether a key can be created."
  remarks: "When a key can be created using the parameters passed into a constructor, override the CanCreateKey method to return `true` and implement the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey%2A> method."
  syntax:
    content: public virtual bool CanCreateKey { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if a key can be created; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType
  id: ClauseType
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  langs:
  - csharp
  name: ClauseType
  nameWithType: SecurityKeyIdentifierClause.ClauseType
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets the key identifier clause type."
  syntax:
    content: public string ClauseType { get; }
    return:
      type: System.String
      description: "The key identifier clause type."
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey
  id: CreateKey
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  langs:
  - csharp
  name: CreateKey()
  nameWithType: SecurityKeyIdentifierClause.CreateKey()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Creates a key based on the parameters passed into the constructor."
  remarks: "When a key can be created using the parameters passed into a constructor, override the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey%2A> method to return `true` and implement the CreateKey method."
  syntax:
    content: public virtual System.IdentityModel.Tokens.SecurityKey CreateKey ();
    parameters: []
    return:
      type: System.IdentityModel.Tokens.SecurityKey
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;></xref> that contains the created key."
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength
  id: DerivationLength
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  langs:
  - csharp
  name: DerivationLength
  nameWithType: SecurityKeyIdentifierClause.DerivationLength
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets the size of the derived key."
  remarks: '[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)] does not support the creation of implied derived key identifiers. However, [!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)] processes incoming SOAP messages that contain implied key identifier.'
  syntax:
    content: public int DerivationLength { get; }
    return:
      type: System.Int32
      description: "The size of the derived key."
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce
  id: GetDerivationNonce
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  langs:
  - csharp
  name: GetDerivationNonce()
  nameWithType: SecurityKeyIdentifierClause.GetDerivationNonce()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets the nonce that was used to generate the derived key."
  remarks: '[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)] does not support the creation of implied derived key identifiers. However, [!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)] processes incoming SOAP messages that contain implied key identifier.'
  syntax:
    content: public byte[] GetDerivationNonce ();
    parameters: []
    return:
      type: System.Byte[]
      description: "An array of <xref:System.Byte> that contains the nonce that was used to generate the derived key."
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id
  id: Id
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  langs:
  - csharp
  name: Id
  nameWithType: SecurityKeyIdentifierClause.Id
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets or sets the key identifier clause ID."
  remarks: "When this security key identifier is serialized into XML, the Id property is serialized as the `Id` attribute of the `<SecurityTokenReference>` element. If the property is `null`, an `Id` attribute is not included in the `<SecurityTokenReference>` element."
  syntax:
    content: public string Id { get; set; }
    return:
      type: System.String
      description: "The key identifier clause ID. The default is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  langs:
  - csharp
  name: Matches(SecurityKeyIdentifierClause)
  nameWithType: SecurityKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Returns a value that indicates whether the key identifier for this instance is equivalent to the specified key identifier clause."
  syntax:
    content: public virtual bool Matches (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;></xref> to compare to."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <code>keyIdentifierClause</code> is the same instance as the current instance; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyIdentifierClause</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String)
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  isExternal: false
  name: SecurityKeyIdentifierClause(String)
  nameWithType: SecurityKeyIdentifierClause.SecurityKeyIdentifierClause(String)
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.SecurityKeyIdentifierClause(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Int32)
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  isExternal: false
  name: SecurityKeyIdentifierClause(String,Byte[],Int32)
  nameWithType: SecurityKeyIdentifierClause.SecurityKeyIdentifierClause(String,Byte[],Int32)
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.SecurityKeyIdentifierClause(String,Byte[],Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  isExternal: false
  name: CanCreateKey
  nameWithType: SecurityKeyIdentifierClause.CanCreateKey
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  isExternal: false
  name: ClauseType
  nameWithType: SecurityKeyIdentifierClause.ClauseType
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  isExternal: false
  name: CreateKey()
  nameWithType: SecurityKeyIdentifierClause.CreateKey()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey()
- uid: System.IdentityModel.Tokens.SecurityKey
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKey
  nameWithType: SecurityKey
  fullName: System.IdentityModel.Tokens.SecurityKey
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  isExternal: false
  name: DerivationLength
  nameWithType: SecurityKeyIdentifierClause.DerivationLength
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  isExternal: false
  name: GetDerivationNonce()
  nameWithType: SecurityKeyIdentifierClause.GetDerivationNonce()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce()
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  isExternal: false
  name: Id
  nameWithType: SecurityKeyIdentifierClause.Id
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  isExternal: false
  name: Matches(SecurityKeyIdentifierClause)
  nameWithType: SecurityKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause.SecurityKeyIdentifierClause
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  isExternal: false
  name: CanCreateKey
  nameWithType: SecurityKeyIdentifierClause.CanCreateKey
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  isExternal: false
  name: ClauseType
  nameWithType: SecurityKeyIdentifierClause.ClauseType
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  isExternal: false
  name: CreateKey
  nameWithType: SecurityKeyIdentifierClause.CreateKey
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  isExternal: false
  name: DerivationLength
  nameWithType: SecurityKeyIdentifierClause.DerivationLength
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  isExternal: false
  name: GetDerivationNonce
  nameWithType: SecurityKeyIdentifierClause.GetDerivationNonce
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  isExternal: false
  name: Id
  nameWithType: SecurityKeyIdentifierClause.Id
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  isExternal: false
  name: Matches
  nameWithType: SecurityKeyIdentifierClause.Matches
