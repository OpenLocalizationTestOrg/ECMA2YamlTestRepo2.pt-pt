### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  id: HttpServerChannel
  children:
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor(System.Int32)
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor(System.String,System.Int32)
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor(System.String,System.Int32,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.AddHookChannelUri(System.String)
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelData
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelName
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelPriority
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelScheme
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelSinkChain
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.GetChannelUri
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.GetUrlsForUri(System.String)
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.Item(System.Object)
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.Keys
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.Parse(System.String,System.String@)
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.StartListening(System.Object)
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.StopListening(System.Object)
  - System.Runtime.Remoting.Channels.Http.HttpServerChannel.WantsToListen
  langs:
  - csharp
  name: HttpServerChannel
  nameWithType: HttpServerChannel
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  type: Class
  summary: "Implements a server channel for remote calls that uses the HTTP protocol to transmit messages."
  remarks: "Channels transport messages across remoting boundaries (for example, between computers on application domains). The HttpServerChannel class transports messages using the HTTP protocol.       Channels are used by the .NET Framework remoting infrastructure to transport remote calls. When a client makes a call to a remote object, the call is serialized into a message that is sent by a client channel and received by a server channel. It is then deserialized and processed. Any returned values are transmitted by the server channel and received by the client channel.       To perform additional processing of messages on the server-side, you can specify an implementation of the <xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider> through which all messages processed by the HttpServerChannel are passed.       The HttpServerChannel accepts messages serialized in either binary or SOAP format.       A HttpServerChannel object has associated configuration properties that can be set at run time either in a configuration file (by invoking the static <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=fullName> method) or programmatically (by passing a <xref:System.Collections.IDictionary> collection to the <xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel.%23ctor%2A> constructor). For a list of these configuration properties, see the documentation for <xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel.%23ctor%2A>."
  example:
  - "The following code example shows how to use a HttpServerChannel object to set up a remoting server and its client. The example contains three parts:  \n  \n-   A server  \n  \n-   A client  \n  \n-   A remote object used by the server and the client  \n  \n The following code example shows a server.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Http.HttpServerChannel#20](~/add/codesnippet/cpp/t-system.runtime.remotin_4_1.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Http.HttpServerChannel#20](~/add/codesnippet/csharp/t-system.runtime.remotin_4_1.cs)]  \n  \n The following code example shows a client for this server.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Http.HttpServerChannel#30](~/add/codesnippet/cpp/t-system.runtime.remotin_4_2.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Http.HttpServerChannel#30](~/add/codesnippet/csharp/t-system.runtime.remotin_4_2.cs)]  \n  \n The following code example shows the remote object used by the server and the client.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Http.HttpServerChannel#40](~/add/codesnippet/cpp/t-system.runtime.remotin_4_3.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Http.HttpServerChannel#40](~/add/codesnippet/csharp/t-system.runtime.remotin_4_3.cs)]"
  syntax:
    content: 'public class HttpServerChannel : System.Runtime.Remoting.Channels.BaseChannelWithProperties, System.Runtime.Remoting.Channels.IChannelReceiver, System.Runtime.Remoting.Channels.IChannelReceiverHook'
  inheritance:
  - System.Object
  - System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties
  - System.Runtime.Remoting.Channels.BaseChannelWithProperties
  implements:
  - System.Runtime.Remoting.Channels.IChannelReceiver
  - System.Runtime.Remoting.Channels.IChannelReceiverHook
  inheritedMembers:
  - System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties.Add(System.Object,System.Object)
  - System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties.Clear
  - System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties.Contains(System.Object)
  - System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties.CopyTo(System.Array,System.Int32)
  - System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties.Count
  - System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties.GetEnumerator
  - System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties.IsFixedSize
  - System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties.IsReadOnly
  - System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties.IsSynchronized
  - System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties.Remove(System.Object)
  - System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties.SyncRoot
  - System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties.System#Collections#IEnumerable#GetEnumerator
  - System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties.Values
  - System.Runtime.Remoting.Channels.BaseChannelWithProperties.Properties
  - System.Runtime.Remoting.Channels.BaseChannelWithProperties.SinksWithProperties
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor
  id: '#ctor'
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: HttpServerChannel()
  nameWithType: HttpServerChannel.HttpServerChannel()
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.HttpServerChannel()
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "Initializes a new instance of the <xref href=&quot;System.Runtime.Remoting.Channels.Http.HttpServerChannel&quot;></xref> class."
  syntax:
    content: public HttpServerChannel ();
    parameters: []
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: HttpServerChannel(Int32)
  nameWithType: HttpServerChannel.HttpServerChannel(Int32)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.HttpServerChannel(Int32)
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "Initializes a new instance of the <xref href=&quot;System.Runtime.Remoting.Channels.Http.HttpServerChannel&quot;></xref> class that listens on the specified port."
  remarks: "To request that an available port be dynamically assigned, set the `port` parameter to 0 (zero)."
  syntax:
    content: public HttpServerChannel (int port);
    parameters:
    - id: port
      type: System.Int32
      description: "The port on which the channel listens."
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)
  id: '#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)'
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: HttpServerChannel(IDictionary,IServerChannelSinkProvider)
  nameWithType: HttpServerChannel.HttpServerChannel(IDictionary,IServerChannelSinkProvider)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.HttpServerChannel(IDictionary,IServerChannelSinkProvider)
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "Initializes a new instance of the <xref href=&quot;System.Runtime.Remoting.Channels.Http.HttpServerChannel&quot;></xref> class with the specified channel properties and sink."
  remarks: "For more information about channel configuration properties, see [Channel and Formatter Configuration Properties](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe).       If you do not require sink functionality, set the `sinkProvider` parameter to `null`."
  example:
  - "The following code example shows how to use this constructor.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Http.HttpServerChannel#12](~/add/codesnippet/cpp/0921112d-a8ba-47f6-af0d-_1.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Http.HttpServerChannel#12](~/add/codesnippet/csharp/0921112d-a8ba-47f6-af0d-_1.cs)]"
  syntax:
    content: public HttpServerChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider);
    parameters:
    - id: properties
      type: System.Collections.IDictionary
      description: "A <xref:System.Collections.IDictionary> of the channel properties that hold the configuration information for the current channel."
    - id: sinkProvider
      type: System.Runtime.Remoting.Channels.IServerChannelSinkProvider
      description: "The <xref href=&quot;System.Runtime.Remoting.Channels.IServerChannelSinkProvider&quot;></xref> to use with the new instance of the <xref href=&quot;System.Runtime.Remoting.Channels.Http.HttpServerChannel&quot;></xref>."
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A configuration property was incorrectly formatted."
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: HttpServerChannel(String,Int32)
  nameWithType: HttpServerChannel.HttpServerChannel(String,Int32)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.HttpServerChannel(String,Int32)
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "Initializes a new instance of the <xref href=&quot;System.Runtime.Remoting.Channels.Http.HttpServerChannel&quot;></xref> class with the given name and that listens on the specified port."
  remarks: "This constructor sets the <xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelName%2A> property by using the `name` parameter. If you want to register more than one channel, each channel must have a unique name.       To request that an available port be dynamically assigned, set the `port` parameter to 0 (zero)."
  example:
  - "The following code example shows how to use this constructor.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Http.HttpServerChannel#13](~/add/codesnippet/cpp/57b12cf5-84d7-4c00-b238-_1.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Http.HttpServerChannel#13](~/add/codesnippet/csharp/57b12cf5-84d7-4c00-b238-_1.cs)]"
  syntax:
    content: public HttpServerChannel (string name, int port);
    parameters:
    - id: name
      type: System.String
      description: "The name of the channel."
    - id: port
      type: System.Int32
      description: "The port on which the channel listens."
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor(System.String,System.Int32,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)
  id: '#ctor(System.String,System.Int32,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)'
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: HttpServerChannel(String,Int32,IServerChannelSinkProvider)
  nameWithType: HttpServerChannel.HttpServerChannel(String,Int32,IServerChannelSinkProvider)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.HttpServerChannel(String,Int32,IServerChannelSinkProvider)
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "Initializes a new instance of the <xref href=&quot;System.Runtime.Remoting.Channels.Http.HttpServerChannel&quot;></xref> class at the specified port with the given name, which listens on the specified port, and uses the specified sink."
  remarks: "This constructor sets the <xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelName%2A> property using the `name` parameter.       To request that an available port be dynamically assigned, set the `port` parameter to 0 (zero).       If you do not require sink functionality, set the `sinkProvider` parameter to `null`."
  example:
  - "The following code example shows how to use this constructor.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Http.HttpServerChannel#14](~/add/codesnippet/cpp/460e07a0-c4b2-49f8-b602-_1.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Http.HttpServerChannel#14](~/add/codesnippet/csharp/460e07a0-c4b2-49f8-b602-_1.cs)]"
  syntax:
    content: public HttpServerChannel (string name, int port, System.Runtime.Remoting.Channels.IServerChannelSinkProvider sinkProvider);
    parameters:
    - id: name
      type: System.String
      description: "The name of the channel."
    - id: port
      type: System.Int32
      description: "The port on which the channel listens."
    - id: sinkProvider
      type: System.Runtime.Remoting.Channels.IServerChannelSinkProvider
      description: "The <xref href=&quot;System.Runtime.Remoting.Channels.IServerChannelSinkProvider&quot;></xref> to be used by the channel."
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.AddHookChannelUri(System.String)
  id: AddHookChannelUri(System.String)
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: AddHookChannelUri(String)
  nameWithType: HttpServerChannel.AddHookChannelUri(String)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.AddHookChannelUri(String)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "Adds a URI on which the channel hook must listen."
  syntax:
    content: public void AddHookChannelUri (string channelUri);
    parameters:
    - id: channelUri
      type: System.String
      description: "A URI on which the channel hook must listen."
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.AddHookChannelUri*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelData
  id: ChannelData
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: ChannelData
  nameWithType: HttpServerChannel.ChannelData
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelData
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "Gets channel-specific data."
  remarks: "Although returned as an instance of <xref:System.Object?displayProperty=fullName>, the value of this property can be cast to an instance of <xref:System.Runtime.Remoting.Channels.ChannelDataStore> describing the channel to which the <xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel> object listens."
  syntax:
    content: public object ChannelData { get; }
    return:
      type: System.Object
      description: "A <xref href=&quot;System.Runtime.Remoting.Channels.ChannelDataStore&quot;></xref> instance that contains channel-specific data."
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelData*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelName
  id: ChannelName
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: ChannelName
  nameWithType: HttpServerChannel.ChannelName
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelName
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "Gets the name of the current channel."
  remarks: "Every registered channel has a unique name. This name is used to retrieve a specific channel when calling <xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A>."
  syntax:
    content: public string ChannelName { get; }
    return:
      type: System.String
      description: "A <xref:System.String> object that contains the name of the channel."
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelName*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelPriority
  id: ChannelPriority
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: ChannelPriority
  nameWithType: HttpServerChannel.ChannelPriority
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelPriority
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "Gets the priority of the current channel."
  remarks: "The priority controls the order in which channel data appears in a <xref:System.Runtime.Remoting.ObjRef> instance; higher priority channels appear before lower priority channels. Clients try to connect to the server channels in the order that they are listed in the <xref:System.Runtime.Remoting.ObjRef> instance. The default priority is 1; negative priorities are allowed."
  syntax:
    content: public int ChannelPriority { get; }
    return:
      type: System.Int32
      description: "An integer that represents the priority assigned to the channel."
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelPriority*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelScheme
  id: ChannelScheme
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: ChannelScheme
  nameWithType: HttpServerChannel.ChannelScheme
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelScheme
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "Gets the type of listener to hook into (for example, &quot;http&quot;)."
  remarks: "This value is not case-sensitive."
  example:
  - "The following code example shows how to use the ChannelScheme property. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel> class.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Http.HttpServerChannel#21](~/add/codesnippet/cpp/p-system.runtime.remotin_52_1.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Http.HttpServerChannel#21](~/add/codesnippet/csharp/p-system.runtime.remotin_52_1.cs)]"
  syntax:
    content: public string ChannelScheme { get; }
    return:
      type: System.String
      description: "The type of listener to hook into."
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelScheme*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelSinkChain
  id: ChannelSinkChain
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: ChannelSinkChain
  nameWithType: HttpServerChannel.ChannelSinkChain
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelSinkChain
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "Gets the channel sink chain that the current channel is using."
  remarks: ''
  example:
  - "The following code example shows how to use the ChannelSinkChain property. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel> class.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Http.HttpServerChannel#23](~/add/codesnippet/cpp/p-system.runtime.remotin_84_1.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Http.HttpServerChannel#23](~/add/codesnippet/csharp/p-system.runtime.remotin_84_1.cs)]"
  syntax:
    content: public System.Runtime.Remoting.Channels.IServerChannelSink ChannelSinkChain { get; }
    return:
      type: System.Runtime.Remoting.Channels.IServerChannelSink
      description: "The channel sink chain that the current channel is using."
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelSinkChain*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.GetChannelUri
  id: GetChannelUri
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: GetChannelUri()
  nameWithType: HttpServerChannel.GetChannelUri()
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.GetChannelUri()
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "Returns the URI of the current channel."
  remarks: ''
  example:
  - "The following code example shows how to use the GetChannelUri method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel> class.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Http.HttpServerChannel#22](~/add/codesnippet/cpp/m-system.runtime.remotin_75_1.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Http.HttpServerChannel#22](~/add/codesnippet/csharp/m-system.runtime.remotin_75_1.cs)]"
  syntax:
    content: public string GetChannelUri ();
    parameters: []
    return:
      type: System.String
      description: "The URI of the current channel."
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.GetChannelUri*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.GetUrlsForUri(System.String)
  id: GetUrlsForUri(System.String)
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: GetUrlsForUri(String)
  nameWithType: HttpServerChannel.GetUrlsForUri(String)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.GetUrlsForUri(String)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "Returns an array of all the URLs for an object with the specified URI, hosted on the current <xref href=&quot;System.Runtime.Remoting.Channels.Http.HttpChannel&quot;></xref>."
  remarks: "The current method is used by <xref:System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject%2A?displayProperty=fullName>."
  example:
  - "The following code example shows how to use the GetUrlsForUri method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel> class.  \n  \n [!code-cs[HttpChannel.GetUrlsFromUri#1](~/add/codesnippet/csharp/b1e85e82-1fe9-423d-8938-_1.cs)]\n [!code-vb[HttpChannel.GetUrlsFromUri#1](~/add/codesnippet/visualbasic/b1e85e82-1fe9-423d-8938-_1.vb)]\n [!code-cpp[HttpChannel.GetUrlsFromUri#1](~/add/codesnippet/cpp/b1e85e82-1fe9-423d-8938-_1.cpp)]"
  syntax:
    content: public virtual string[] GetUrlsForUri (string objectUri);
    parameters:
    - id: objectUri
      type: System.String
      description: "The URI of the object for which URLs are required."
    return:
      type: System.String[]
      description: "An array of the URLs for an object with the specified URI, hosted on the current <xref href=&quot;System.Runtime.Remoting.Channels.Http.HttpChannel&quot;></xref>."
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.GetUrlsForUri*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Item(System.Object)
  id: Item(System.Object)
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: Item(Object)
  nameWithType: HttpServerChannel.Item(Object)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Item(Object)
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "Returns the specified channel property."
  syntax:
    content: public override object this[object key] { get; set; }
    parameters:
    - id: key
      type: System.Object
      description: "The key of the channel property to retrieve."
    return:
      type: System.Object
      description: "A <xref:System.Object> that represents the channel property specified by <code>key</code>."
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Keys
  id: Keys
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: Keys
  nameWithType: HttpServerChannel.Keys
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Keys
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "Gets a <xref:System.Collections.ICollection> of keys the channel properties are associated with."
  remarks: "Channel properties are used to configure the channel at run time. For a list of possible channel properties and an example, see [&#91;\\<topic://cpconchannelformatterconfigurationproperties>&#93;](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe)."
  syntax:
    content: public override System.Collections.ICollection Keys { get; }
    return:
      type: System.Collections.ICollection
      description: "A <xref:System.Collections.ICollection> of keys the channel properties are associated with."
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Parse(System.String,System.String@)
  id: Parse(System.String,System.String@)
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: Parse(String,String)
  nameWithType: HttpServerChannel.Parse(String,String)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Parse(String,String)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "Extracts the channel URI and the remote well-known object URI from the specified URL."
  remarks: ''
  example:
  - "The following code example shows how to use the Parse method. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel> class.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Http.HttpServerChannel#25](~/add/codesnippet/cpp/01d5e48c-ec6f-487a-b7a0-_1.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Http.HttpServerChannel#25](~/add/codesnippet/csharp/01d5e48c-ec6f-487a-b7a0-_1.cs)]"
  syntax:
    content: public string Parse (string url, out string objectURI);
    parameters:
    - id: url
      type: System.String
      description: "The URL from which to extract the URIs."
    - id: objectURI
      type: System.String
      description: "When this method returns, contains a <xref:System.String> that holds the URI of the remote well-known object. This parameter is passed uninitialized."
    return:
      type: System.String
      description: "The channel URI."
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Parse*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.StartListening(System.Object)
  id: StartListening(System.Object)
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: StartListening(Object)
  nameWithType: HttpServerChannel.StartListening(Object)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.StartListening(Object)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "Instructs the current channel to start listening for requests."
  remarks: "It is not necessary to call this method to begin listening on a newly initialized channel.       Use this method to restart listening on a channel after the <xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel.StopListening%2A> method has been called to stop listening on the channel.       If your channel uses a dynamically assigned port number, your port number might change when you restart listening."
  syntax:
    content: public void StartListening (object data);
    parameters:
    - id: data
      type: System.Object
      description: "Should always be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> for <xref href=&quot;System.Runtime.Remoting.Channels.Http.HttpChannel&quot;></xref>."
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.StartListening*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.StopListening(System.Object)
  id: StopListening(System.Object)
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: StopListening(Object)
  nameWithType: HttpServerChannel.StopListening(Object)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.StopListening(Object)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "Instructs the current channel to stop listening for requests."
  remarks: "Use this method to stop listening on a channel. To restart listening, use the <xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel.StartListening%2A> method.       If your channel uses a dynamically assigned port number, your port number might change when you restart listening."
  syntax:
    content: public void StopListening (object data);
    parameters:
    - id: data
      type: System.Object
      description: "Should always be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> for <xref href=&quot;System.Runtime.Remoting.Channels.Http.HttpChannel&quot;></xref>."
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.StopListening*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.WantsToListen
  id: WantsToListen
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  langs:
  - csharp
  name: WantsToListen
  nameWithType: HttpServerChannel.WantsToListen
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.WantsToListen
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "Gets a Boolean value that indicates whether <xref href=&quot;System.Runtime.Remoting.Channels.IChannelReceiverHook&quot;></xref> wants to be hooked into the outside listener service."
  remarks: ''
  example:
  - "The following code example shows how to use the WantsToListen property. This code example is part of a larger example provided for the <xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel> class.  \n  \n [!code-cpp[System.Runtime.Remoting.Channels.Http.HttpServerChannel#24](~/add/codesnippet/cpp/p-system.runtime.remotin_104_1.cpp)]\n [!code-cs[System.Runtime.Remoting.Channels.Http.HttpServerChannel#24](~/add/codesnippet/csharp/p-system.runtime.remotin_104_1.cs)]"
  syntax:
    content: public bool WantsToListen { get; set; }
    return:
      type: System.Boolean
      description: "A Boolean value that indicates whether <xref href=&quot;System.Runtime.Remoting.Channels.IChannelReceiverHook&quot;></xref> wants to be hooked into the outside listener service."
  overload: System.Runtime.Remoting.Channels.Http.HttpServerChannel.WantsToListen*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.Remoting.Channels.BaseChannelWithProperties
  isExternal: false
  name: System.Runtime.Remoting.Channels.BaseChannelWithProperties
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: HttpServerChannel()
  nameWithType: HttpServerChannel.HttpServerChannel()
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.HttpServerChannel()
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor(System.Int32)
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: HttpServerChannel(Int32)
  nameWithType: HttpServerChannel.HttpServerChannel(Int32)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.HttpServerChannel(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: HttpServerChannel(IDictionary,IServerChannelSinkProvider)
  nameWithType: HttpServerChannel.HttpServerChannel(IDictionary,IServerChannelSinkProvider)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.HttpServerChannel(IDictionary,IServerChannelSinkProvider)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Runtime.Remoting.Channels.IServerChannelSinkProvider
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: IServerChannelSinkProvider
  nameWithType: IServerChannelSinkProvider
  fullName: System.Runtime.Remoting.Channels.IServerChannelSinkProvider
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor(System.String,System.Int32)
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: HttpServerChannel(String,Int32)
  nameWithType: HttpServerChannel.HttpServerChannel(String,Int32)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.HttpServerChannel(String,Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor(System.String,System.Int32,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: HttpServerChannel(String,Int32,IServerChannelSinkProvider)
  nameWithType: HttpServerChannel.HttpServerChannel(String,Int32,IServerChannelSinkProvider)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.HttpServerChannel(String,Int32,IServerChannelSinkProvider)
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.AddHookChannelUri(System.String)
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: AddHookChannelUri(String)
  nameWithType: HttpServerChannel.AddHookChannelUri(String)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.AddHookChannelUri(String)
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelData
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: ChannelData
  nameWithType: HttpServerChannel.ChannelData
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelData
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelName
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: ChannelName
  nameWithType: HttpServerChannel.ChannelName
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelName
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelPriority
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: ChannelPriority
  nameWithType: HttpServerChannel.ChannelPriority
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelPriority
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelScheme
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: ChannelScheme
  nameWithType: HttpServerChannel.ChannelScheme
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelScheme
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelSinkChain
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: ChannelSinkChain
  nameWithType: HttpServerChannel.ChannelSinkChain
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelSinkChain
- uid: System.Runtime.Remoting.Channels.IServerChannelSink
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: IServerChannelSink
  nameWithType: IServerChannelSink
  fullName: System.Runtime.Remoting.Channels.IServerChannelSink
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.GetChannelUri
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: GetChannelUri()
  nameWithType: HttpServerChannel.GetChannelUri()
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.GetChannelUri()
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.GetUrlsForUri(System.String)
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: GetUrlsForUri(String)
  nameWithType: HttpServerChannel.GetUrlsForUri(String)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.GetUrlsForUri(String)
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Item(System.Object)
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: Item(Object)
  nameWithType: HttpServerChannel.Item(Object)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Item(Object)
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Keys
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: Keys
  nameWithType: HttpServerChannel.Keys
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Keys
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Parse(System.String,System.String@)
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: Parse(String,String)
  nameWithType: HttpServerChannel.Parse(String,String)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Parse(String,String)
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.StartListening(System.Object)
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: StartListening(Object)
  nameWithType: HttpServerChannel.StartListening(Object)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.StartListening(Object)
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.StopListening(System.Object)
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: StopListening(Object)
  nameWithType: HttpServerChannel.StopListening(Object)
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.StopListening(Object)
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.WantsToListen
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: WantsToListen
  nameWithType: HttpServerChannel.WantsToListen
  fullName: System.Runtime.Remoting.Channels.Http.HttpServerChannel.WantsToListen
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.#ctor*
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: HttpServerChannel
  nameWithType: HttpServerChannel.HttpServerChannel
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.AddHookChannelUri*
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: AddHookChannelUri
  nameWithType: HttpServerChannel.AddHookChannelUri
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelData*
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: ChannelData
  nameWithType: HttpServerChannel.ChannelData
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelName*
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: ChannelName
  nameWithType: HttpServerChannel.ChannelName
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelPriority*
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: ChannelPriority
  nameWithType: HttpServerChannel.ChannelPriority
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelScheme*
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: ChannelScheme
  nameWithType: HttpServerChannel.ChannelScheme
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.ChannelSinkChain*
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: ChannelSinkChain
  nameWithType: HttpServerChannel.ChannelSinkChain
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.GetChannelUri*
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: GetChannelUri
  nameWithType: HttpServerChannel.GetChannelUri
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.GetUrlsForUri*
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: GetUrlsForUri
  nameWithType: HttpServerChannel.GetUrlsForUri
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Item*
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: Item
  nameWithType: HttpServerChannel.Item
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Keys*
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: Keys
  nameWithType: HttpServerChannel.Keys
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.Parse*
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: Parse
  nameWithType: HttpServerChannel.Parse
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.StartListening*
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: StartListening
  nameWithType: HttpServerChannel.StartListening
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.StopListening*
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: StopListening
  nameWithType: HttpServerChannel.StopListening
- uid: System.Runtime.Remoting.Channels.Http.HttpServerChannel.WantsToListen*
  parent: System.Runtime.Remoting.Channels.Http.HttpServerChannel
  isExternal: false
  name: WantsToListen
  nameWithType: HttpServerChannel.WantsToListen
