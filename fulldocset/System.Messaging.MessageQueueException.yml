### YamlMime:ManagedReference
items:
- uid: System.Messaging.MessageQueueException
  id: MessageQueueException
  children:
  - System.Messaging.MessageQueueException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Messaging.MessageQueueException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Messaging.MessageQueueException.Message
  - System.Messaging.MessageQueueException.MessageQueueErrorCode
  langs:
  - csharp
  name: MessageQueueException
  nameWithType: MessageQueueException
  fullName: System.Messaging.MessageQueueException
  type: Class
  summary: "The exception that is thrown if a Microsoft Message Queuing internal error occurs."
  remarks: "Exceptions associated with the MessageQueueException class are generated by internal errors within Message Queuing that should be dealt with through your code.       Every exception consists of an error code and a text string that describes the source of the error. See the <xref:System.Messaging.MessageQueueErrorCode> class for a list of these error codes and their descriptions.       If a <xref:System.Messaging.MessageQueue> opens a queue with the `sharedModeDenyReceive` parameter set to true, any <xref:System.Messaging.MessageQueue> that subsequently tries to read from the queue generates a MessageQueueException exception because of a sharing violation. The same exception is thrown if a <xref:System.Messaging.MessageQueue> tries to access the queue in exclusive mode while another <xref:System.Messaging.MessageQueue> already has nonexclusive access to the queue.      > **alert tag is not supported!!!!**   > <xref:System.Messaging.MessageQueueTransaction> is threading-apartmentâ€“aware. Visual Basic sets the state of the main thread to `STA`, so you must apply the <xref:System.MTAThreadAttribute> in the `Main` subroutine. Otherwise, sending a transactional message using another thread throws a MessageQueueException exception."
  example:
  - >-
    [!code-vb[MessageQueue.ExistsDelete#1](~/add/codesnippet/VisualBasic/t-system.messaging.messa_3_1.vb)]
     [!code-cs[MessageQueue.ExistsDelete#1](~/add/codesnippet/CSharp/t-system.messaging.messa_3_1.cs)]
     [!code-cpp[MessageQueue.ExistsDelete#1](~/add/codesnippet/CPP/t-system.messaging.messa_3_1.cpp)]
  syntax:
    content: 'public class MessageQueueException : System.Runtime.InteropServices.ExternalException'
  inheritance:
  - System.Exception
  - System.SystemException
  - System.Runtime.InteropServices.ExternalException
  implements: []
  inheritedMembers:
  - System.Runtime.InteropServices.ExternalException.ErrorCode
  - System.Runtime.InteropServices.ExternalException.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Messaging.MessageQueueException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Messaging.MessageQueueException
  langs:
  - csharp
  name: MessageQueueException(SerializationInfo,StreamingContext)
  nameWithType: MessageQueueException.MessageQueueException(SerializationInfo,StreamingContext)
  fullName: System.Messaging.MessageQueueException.MessageQueueException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Initializes a new instance of the <see cref=&quot;T:System.Messaging.MessageQueueException&quot;></see> class with serialized data."
  syntax:
    content: protected MessageQueueException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "A  that holds the serialized data associated with the ."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "A <xref:System.Runtime.Serialization.StreamingContext> that contains the source and destination of the serialized stream associated with the ."
  overload: System.Messaging.MessageQueueException.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Messaging.MessageQueueException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Messaging.MessageQueueException
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: MessageQueueException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Messaging.MessageQueueException.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Populates a serialization information object with the data needed to serialize the <see cref=&quot;T:System.Messaging.MessageQueueException&quot;></see>."
  syntax:
    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "A  that holds the serialized data associated with the ."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "A <xref:System.Runtime.Serialization.StreamingContext> that contains the source and destination of the serialized stream associated with the ."
  overload: System.Messaging.MessageQueueException.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The info parameter is ."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Messaging.MessageQueueException.Message
  id: Message
  parent: System.Messaging.MessageQueueException
  langs:
  - csharp
  name: Message
  nameWithType: MessageQueueException.Message
  fullName: System.Messaging.MessageQueueException.Message
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets a value that describes the Message Queuing error."
  remarks: "When you get this property, the method attempts to retrieve the text string associated with the <xref:System.Messaging.MessageQueueException.MessageQueueErrorCode%2A> property. If the method is unable to interpret the error code that Message Queuing generated, the Message property gets the value `UnknownError`."
  syntax:
    content: public override string Message { get; }
    return:
      type: System.String
      description: "The description of the Message Queuing internal error that generated this <see cref=&quot;T:System.Messaging.MessageQueueException&quot;></see>."
  overload: System.Messaging.MessageQueueException.Message*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Messaging.MessageQueueException.MessageQueueErrorCode
  id: MessageQueueErrorCode
  parent: System.Messaging.MessageQueueException
  langs:
  - csharp
  name: MessageQueueErrorCode
  nameWithType: MessageQueueException.MessageQueueErrorCode
  fullName: System.Messaging.MessageQueueException.MessageQueueErrorCode
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets a value that indicates the error code associated with this exception."
  remarks: "The <xref:System.Messaging.MessageQueueException.Message%2A> property contains a string associated with this MessageQueueErrorCode that more fully describes the source of the error."
  syntax:
    content: public System.Messaging.MessageQueueErrorCode MessageQueueErrorCode { get; }
    return:
      type: System.Messaging.MessageQueueErrorCode
      description: "A <see cref=&quot;T:System.Messaging.MessageQueueErrorCode&quot;></see> that identifies the type of error Message Queuing generated."
  overload: System.Messaging.MessageQueueException.MessageQueueErrorCode*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Runtime.InteropServices.ExternalException
  isExternal: false
  name: System.Runtime.InteropServices.ExternalException
- uid: System.Messaging.MessageQueueException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Messaging.MessageQueueException
  isExternal: false
  name: MessageQueueException(SerializationInfo,StreamingContext)
  nameWithType: MessageQueueException.MessageQueueException(SerializationInfo,StreamingContext)
  fullName: System.Messaging.MessageQueueException.MessageQueueException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Messaging.MessageQueueException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Messaging.MessageQueueException
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: MessageQueueException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Messaging.MessageQueueException.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Messaging.MessageQueueException.Message
  parent: System.Messaging.MessageQueueException
  isExternal: false
  name: Message
  nameWithType: MessageQueueException.Message
  fullName: System.Messaging.MessageQueueException.Message
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Messaging.MessageQueueException.MessageQueueErrorCode
  parent: System.Messaging.MessageQueueException
  isExternal: false
  name: MessageQueueErrorCode
  nameWithType: MessageQueueException.MessageQueueErrorCode
  fullName: System.Messaging.MessageQueueException.MessageQueueErrorCode
- uid: System.Messaging.MessageQueueErrorCode
  parent: System.Messaging
  isExternal: false
  name: MessageQueueErrorCode
  nameWithType: MessageQueueErrorCode
  fullName: System.Messaging.MessageQueueErrorCode
- uid: System.Messaging.MessageQueueException.#ctor*
  parent: System.Messaging.MessageQueueException
  isExternal: false
  name: MessageQueueException
  nameWithType: MessageQueueException.MessageQueueException
- uid: System.Messaging.MessageQueueException.GetObjectData*
  parent: System.Messaging.MessageQueueException
  isExternal: false
  name: GetObjectData
  nameWithType: MessageQueueException.GetObjectData
- uid: System.Messaging.MessageQueueException.Message*
  parent: System.Messaging.MessageQueueException
  isExternal: false
  name: Message
  nameWithType: MessageQueueException.Message
- uid: System.Messaging.MessageQueueException.MessageQueueErrorCode*
  parent: System.Messaging.MessageQueueException
  isExternal: false
  name: MessageQueueErrorCode
  nameWithType: MessageQueueException.MessageQueueErrorCode
