### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.Contexts.IContributeServerContextSink
  id: IContributeServerContextSink
  children:
  - System.Runtime.Remoting.Contexts.IContributeServerContextSink.GetServerContextSink(System.Runtime.Remoting.Messaging.IMessageSink)
  langs:
  - csharp
  name: IContributeServerContextSink
  nameWithType: IContributeServerContextSink
  fullName: System.Runtime.Remoting.Contexts.IContributeServerContextSink
  type: Interface
  summary: "Contribui um receptor de interception no limite de contexto no final de uma chamada remota de servidor."
  remarks: "A interface IContributeServerContextSink é implementada por propriedades de contexto num <xref:System.Runtime.Remoting.Contexts.Context>classe que pretende para contribuir com um receptor de interception no limite de contexto no final de uma chamada remota de servidor.</xref:System.Runtime.Remoting.Contexts.Context>       A cadeia de contexto de servidor é composta por essas propriedades no contexto de servidor que implementem IContributeServerContextSink e que contribuir um receptor de utilizando o <xref:System.Runtime.Remoting.Contexts.IContributeServerContextSink.GetServerContextSink%2A>chamada de método.</xref:System.Runtime.Remoting.Contexts.IContributeServerContextSink.GetServerContextSink%2A>       A serialização é um exemplo de uma propriedade de contexto. Neste caso, o sink de mensagem iria envolver colocar um bloqueio de primitivos de sincronização antes de processar uma chamada qualquer adicional."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IContributeServerContextSink
  implements: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.IContributeServerContextSink.GetServerContextSink(System.Runtime.Remoting.Messaging.IMessageSink)
  id: GetServerContextSink(System.Runtime.Remoting.Messaging.IMessageSink)
  parent: System.Runtime.Remoting.Contexts.IContributeServerContextSink
  langs:
  - csharp
  name: GetServerContextSink(IMessageSink)
  nameWithType: IContributeServerContextSink.GetServerContextSink(IMessageSink)
  fullName: System.Runtime.Remoting.Contexts.IContributeServerContextSink.GetServerContextSink(IMessageSink)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Aceita o primeiro receptor na cadeia de sinks compostas até ao momento e depois encadeia o sink de mensagem à frente da cadeia já formada."
  syntax:
    content: public System.Runtime.Remoting.Messaging.IMessageSink GetServerContextSink (System.Runtime.Remoting.Messaging.IMessageSink nextSink);
    parameters:
    - id: nextSink
      type: System.Runtime.Remoting.Messaging.IMessageSink
      description: "A cadeia de sinks compostas até ao momento."
    return:
      type: System.Runtime.Remoting.Messaging.IMessageSink
      description: "A cadeia de receptores composto."
  overload: System.Runtime.Remoting.Contexts.IContributeServerContextSink.GetServerContextSink*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.Remoting.Contexts.IContributeServerContextSink.GetServerContextSink(System.Runtime.Remoting.Messaging.IMessageSink)
  parent: System.Runtime.Remoting.Contexts.IContributeServerContextSink
  isExternal: false
  name: GetServerContextSink(IMessageSink)
  nameWithType: IContributeServerContextSink.GetServerContextSink(IMessageSink)
  fullName: System.Runtime.Remoting.Contexts.IContributeServerContextSink.GetServerContextSink(IMessageSink)
- uid: System.Runtime.Remoting.Messaging.IMessageSink
  parent: System.Runtime.Remoting.Messaging
  isExternal: false
  name: IMessageSink
  nameWithType: IMessageSink
  fullName: System.Runtime.Remoting.Messaging.IMessageSink
- uid: System.Runtime.Remoting.Contexts.IContributeServerContextSink.GetServerContextSink*
  parent: System.Runtime.Remoting.Contexts.IContributeServerContextSink
  isExternal: false
  name: GetServerContextSink
  nameWithType: IContributeServerContextSink.GetServerContextSink
