### YamlMime:ManagedReference
items:
- uid: System.Drawing.SizeF
  id: SizeF
  children:
  - System.Drawing.SizeF.#ctor(System.Drawing.PointF)
  - System.Drawing.SizeF.#ctor(System.Drawing.SizeF)
  - System.Drawing.SizeF.#ctor(System.Single,System.Single)
  - System.Drawing.SizeF.Add(System.Drawing.SizeF,System.Drawing.SizeF)
  - System.Drawing.SizeF.Empty
  - System.Drawing.SizeF.Equals(System.Object)
  - System.Drawing.SizeF.GetHashCode
  - System.Drawing.SizeF.Height
  - System.Drawing.SizeF.IsEmpty
  - System.Drawing.SizeF.op_Addition(System.Drawing.SizeF,System.Drawing.SizeF)
  - System.Drawing.SizeF.op_Equality(System.Drawing.SizeF,System.Drawing.SizeF)
  - System.Drawing.SizeF.op_Explicit(System.Drawing.SizeF to System.Drawing.PointF)
  - System.Drawing.SizeF.op_Inequality(System.Drawing.SizeF,System.Drawing.SizeF)
  - System.Drawing.SizeF.op_Subtraction(System.Drawing.SizeF,System.Drawing.SizeF)
  - System.Drawing.SizeF.Subtract(System.Drawing.SizeF,System.Drawing.SizeF)
  - System.Drawing.SizeF.ToPointF
  - System.Drawing.SizeF.ToSize
  - System.Drawing.SizeF.ToString
  - System.Drawing.SizeF.Width
  langs:
  - csharp
  name: SizeF
  nameWithType: SizeF
  fullName: System.Drawing.SizeF
  type: Struct
  summary: "Stores an ordered pair of floating-point numbers, typically the width and height of a rectangle."
  remarks: "The unit for a SizeF structure depends on the <xref:System.Drawing.Graphics.PageUnit%2A> and <xref:System.Drawing.Graphics.PageScale%2A> settings for the <xref:System.Drawing.Graphics> object that is used to draw."
  example:
  - "The following code example adds a shadow to a <xref:System.Windows.Forms.ListBox> by using the following members:  \n  \n-   <xref:System.Drawing.SizeF.op_Addition%2A>  \n  \n-   <xref:System.Drawing.PointF.op_Addition%2A?displayProperty=fullName>  \n  \n-   <xref:System.Drawing.SolidBrush>  \n  \n This example is designed to be used with a Windows Form. To run this example, paste this code into a form and call the `AddShadow` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event. Verify that the form contains a <xref:System.Windows.Forms.ListBox> named `listBox1`.  \n  \n [!code-cs[System.Drawing.MiscExamples#3](~/add/codesnippet/csharp/t-system.drawing.sizef_1.cs)]\n [!code-cpp[System.Drawing.MiscExamples#3](~/add/codesnippet/cpp/t-system.drawing.sizef_1.cpp)]\n [!code-vb[System.Drawing.MiscExamples#3](~/add/codesnippet/visualbasic/t-system.drawing.sizef_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Drawing.SizeFConverter))]

      [System.Runtime.InteropServices.ComVisible(true)]

      public struct SizeF
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Drawing.SizeF.#ctor(System.Drawing.PointF)
  id: '#ctor(System.Drawing.PointF)'
  parent: System.Drawing.SizeF
  langs:
  - csharp
  name: SizeF(PointF)
  nameWithType: SizeF.SizeF(PointF)
  fullName: System.Drawing.SizeF.SizeF(PointF)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Initializes a new instance of the <xref href=&quot;System.Drawing.SizeF&quot;></xref> structure from the specified <xref href=&quot;System.Drawing.PointF&quot;></xref> structure."
  syntax:
    content: public SizeF (System.Drawing.PointF pt);
    parameters:
    - id: pt
      type: System.Drawing.PointF
      description: "The <xref href=&quot;System.Drawing.PointF&quot;></xref> structure from which to initialize this <xref href=&quot;System.Drawing.SizeF&quot;></xref> structure."
  overload: System.Drawing.SizeF.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.SizeF.#ctor(System.Drawing.SizeF)
  id: '#ctor(System.Drawing.SizeF)'
  parent: System.Drawing.SizeF
  langs:
  - csharp
  name: SizeF(SizeF)
  nameWithType: SizeF.SizeF(SizeF)
  fullName: System.Drawing.SizeF.SizeF(SizeF)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Initializes a new instance of the <xref href=&quot;System.Drawing.SizeF&quot;></xref> structure from the specified existing <xref href=&quot;System.Drawing.SizeF&quot;></xref> structure."
  syntax:
    content: public SizeF (System.Drawing.SizeF size);
    parameters:
    - id: size
      type: System.Drawing.SizeF
      description: "The <xref href=&quot;System.Drawing.SizeF&quot;></xref> structure from which to create the new <xref href=&quot;System.Drawing.SizeF&quot;></xref> structure."
  overload: System.Drawing.SizeF.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.SizeF.#ctor(System.Single,System.Single)
  id: '#ctor(System.Single,System.Single)'
  parent: System.Drawing.SizeF
  langs:
  - csharp
  name: SizeF(Single,Single)
  nameWithType: SizeF.SizeF(Single,Single)
  fullName: System.Drawing.SizeF.SizeF(Single,Single)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Initializes a new instance of the <xref href=&quot;System.Drawing.SizeF&quot;></xref> structure from the specified dimensions."
  remarks: ''
  example:
  - "The following code example adds a shadow to a <xref:System.Windows.Forms.ListBox> by using the following members:  \n  \n-   <xref:System.Drawing.SizeF.op_Addition%2A>  \n  \n-   <xref:System.Drawing.PointF.op_Addition%2A?displayProperty=fullName>  \n  \n-   <xref:System.Drawing.SolidBrush>  \n  \n This example is designed to be used with a Windows Form. To run this example, paste this code into a form and call the `AddShadow` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event. Verify that the form contains a <xref:System.Windows.Forms.ListBox> named `listBox1`.  \n  \n [!code-cs[System.Drawing.MiscExamples#3](~/add/codesnippet/csharp/m-system.drawing.sizef.s_1.cs)]\n [!code-cpp[System.Drawing.MiscExamples#3](~/add/codesnippet/cpp/m-system.drawing.sizef.s_1.cpp)]\n [!code-vb[System.Drawing.MiscExamples#3](~/add/codesnippet/visualbasic/m-system.drawing.sizef.s_1.vb)]"
  syntax:
    content: public SizeF (float width, float height);
    parameters:
    - id: width
      type: System.Single
      description: "The width component of the new <xref href=&quot;System.Drawing.SizeF&quot;></xref> structure."
    - id: height
      type: System.Single
      description: "The height component of the new <xref href=&quot;System.Drawing.SizeF&quot;></xref> structure."
  overload: System.Drawing.SizeF.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.SizeF.Add(System.Drawing.SizeF,System.Drawing.SizeF)
  id: Add(System.Drawing.SizeF,System.Drawing.SizeF)
  parent: System.Drawing.SizeF
  langs:
  - csharp
  name: Add(SizeF,SizeF)
  nameWithType: SizeF.Add(SizeF,SizeF)
  fullName: System.Drawing.SizeF.Add(SizeF,SizeF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Adds the width and height of one <xref href=&quot;System.Drawing.SizeF&quot;></xref> structure to the width and height of another <xref href=&quot;System.Drawing.SizeF&quot;></xref> structure."
  syntax:
    content: public static System.Drawing.SizeF Add (System.Drawing.SizeF sz1, System.Drawing.SizeF sz2);
    parameters:
    - id: sz1
      type: System.Drawing.SizeF
      description: "The first <xref href=&quot;System.Drawing.SizeF&quot;></xref> structure to add."
    - id: sz2
      type: System.Drawing.SizeF
      description: "The second <xref href=&quot;System.Drawing.SizeF&quot;></xref> structure to add."
    return:
      type: System.Drawing.SizeF
      description: "A <xref href=&quot;System.Drawing.SizeF&quot;></xref> structure that is the result of the addition operation."
  overload: System.Drawing.SizeF.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.SizeF.Empty
  id: Empty
  parent: System.Drawing.SizeF
  langs:
  - csharp
  name: Empty
  nameWithType: SizeF.Empty
  fullName: System.Drawing.SizeF.Empty
  type: Field
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Gets a <xref href=&quot;System.Drawing.SizeF&quot;></xref> structure that has a <xref:System.Drawing.SizeF.Height*> and <xref:System.Drawing.SizeF.Width*> value of 0."
  syntax:
    content: public static readonly System.Drawing.SizeF Empty;
    return:
      type: System.Drawing.SizeF
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.SizeF.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Drawing.SizeF
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: SizeF.Equals(Object)
  fullName: System.Drawing.SizeF.Equals(Object)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Tests to see whether the specified object is a <xref href=&quot;System.Drawing.SizeF&quot;></xref> structure with the same dimensions as this <xref href=&quot;System.Drawing.SizeF&quot;></xref> structure."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "The <xref:System.Object> to test."
    return:
      type: System.Boolean
      description: "This method returns <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <code>obj</code> is a <xref href=&quot;System.Drawing.SizeF&quot;></xref> and has the same width and height as this <xref href=&quot;System.Drawing.SizeF&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Drawing.SizeF.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.SizeF.GetHashCode
  id: GetHashCode
  parent: System.Drawing.SizeF
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: SizeF.GetHashCode()
  fullName: System.Drawing.SizeF.GetHashCode()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Returns a hash code for this <xref href=&quot;System.Drawing.Size&quot;></xref> structure."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "An integer value that specifies a hash value for this <xref href=&quot;System.Drawing.Size&quot;></xref> structure."
  overload: System.Drawing.SizeF.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.SizeF.Height
  id: Height
  parent: System.Drawing.SizeF
  langs:
  - csharp
  name: Height
  nameWithType: SizeF.Height
  fullName: System.Drawing.SizeF.Height
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Gets or sets the vertical component of this <xref href=&quot;System.Drawing.SizeF&quot;></xref> structure."
  remarks: "The unit for the Height and <xref:System.Drawing.SizeF.Width%2A> of the <xref:System.Drawing.SizeF> structure depend on the <xref:System.Drawing.Graphics.PageUnit%2A> and <xref:System.Drawing.Graphics.PageScale%2A> settings for the <xref:System.Drawing.Graphics> object used to draw."
  syntax:
    content: public float Height { get; set; }
    return:
      type: System.Single
      description: "The vertical component of this <xref href=&quot;System.Drawing.SizeF&quot;></xref> structure, typically measured in pixels."
  overload: System.Drawing.SizeF.Height*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.SizeF.IsEmpty
  id: IsEmpty
  parent: System.Drawing.SizeF
  langs:
  - csharp
  name: IsEmpty
  nameWithType: SizeF.IsEmpty
  fullName: System.Drawing.SizeF.IsEmpty
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Gets a value that indicates whether this <xref href=&quot;System.Drawing.SizeF&quot;></xref> structure has zero width and height."
  syntax:
    content: public bool IsEmpty { get; }
    return:
      type: System.Boolean
      description: "This property returns <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> when this <xref href=&quot;System.Drawing.SizeF&quot;></xref> structure has both a width and height of zero; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Drawing.SizeF.IsEmpty*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.SizeF.op_Addition(System.Drawing.SizeF,System.Drawing.SizeF)
  id: op_Addition(System.Drawing.SizeF,System.Drawing.SizeF)
  parent: System.Drawing.SizeF
  langs:
  - csharp
  name: op_Addition(SizeF,SizeF)
  nameWithType: SizeF.op_Addition(SizeF,SizeF)
  fullName: System.Drawing.SizeF.op_Addition(SizeF,SizeF)
  type: Operator
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Adds the width and height of one <xref href=&quot;System.Drawing.SizeF&quot;></xref> structure to the width and height of another <xref href=&quot;System.Drawing.SizeF&quot;></xref> structure."
  remarks: ''
  example:
  - "The following code example adds a shadow to a <xref:System.Windows.Forms.ListBox> by using the following members:  \n  \n-   Addition  \n  \n-   <xref:System.Drawing.PointF.op_Addition%2A?displayProperty=fullName>  \n  \n-   <xref:System.Drawing.SolidBrush>  \n  \n This example is designed to be used with a Windows Form. To run this example, paste this code into a form and call the `AddShadow` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event. Verify that the form contains a <xref:System.Windows.Forms.ListBox> named `listBox1`.  \n  \n [!code-cs[System.Drawing.MiscExamples#3](~/add/codesnippet/csharp/m-system.drawing.sizef.o_1.cs)]\n [!code-cpp[System.Drawing.MiscExamples#3](~/add/codesnippet/cpp/m-system.drawing.sizef.o_1.cpp)]\n [!code-vb[System.Drawing.MiscExamples#3](~/add/codesnippet/visualbasic/m-system.drawing.sizef.o_1.vb)]"
  syntax:
    content: public static System.Drawing.SizeF op_Addition (System.Drawing.SizeF sz1, System.Drawing.SizeF sz2);
    parameters:
    - id: sz1
      type: System.Drawing.SizeF
      description: "The first <xref href=&quot;System.Drawing.SizeF&quot;></xref> structure to add."
    - id: sz2
      type: System.Drawing.SizeF
      description: "The second <xref href=&quot;System.Drawing.SizeF&quot;></xref> structure to add."
    return:
      type: System.Drawing.SizeF
      description: "A <xref href=&quot;System.Drawing.Size&quot;></xref> structure that is the result of the addition operation."
  overload: System.Drawing.SizeF.op_Addition*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.SizeF.op_Equality(System.Drawing.SizeF,System.Drawing.SizeF)
  id: op_Equality(System.Drawing.SizeF,System.Drawing.SizeF)
  parent: System.Drawing.SizeF
  langs:
  - csharp
  name: op_Equality(SizeF,SizeF)
  nameWithType: SizeF.op_Equality(SizeF,SizeF)
  fullName: System.Drawing.SizeF.op_Equality(SizeF,SizeF)
  type: Operator
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Tests whether two <xref href=&quot;System.Drawing.SizeF&quot;></xref> structures are equal."
  syntax:
    content: public static bool op_Equality (System.Drawing.SizeF sz1, System.Drawing.SizeF sz2);
    parameters:
    - id: sz1
      type: System.Drawing.SizeF
      description: "The <xref href=&quot;System.Drawing.SizeF&quot;></xref> structure on the left side of the equality operator."
    - id: sz2
      type: System.Drawing.SizeF
      description: "The <xref href=&quot;System.Drawing.SizeF&quot;></xref> structure on the right of the equality operator."
    return:
      type: System.Boolean
      description: "This operator returns <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <code>sz1</code> and <code>sz2</code> have equal width and height; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Drawing.SizeF.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.SizeF.op_Explicit(System.Drawing.SizeF to System.Drawing.PointF)
  id: op_Explicit(System.Drawing.SizeF to System.Drawing.PointF)
  parent: System.Drawing.SizeF
  langs:
  - csharp
  name: op_Explicit(SizeF)
  nameWithType: SizeF.op_Explicit(SizeF)
  fullName: System.Drawing.SizeF.op_Explicit(SizeF)
  type: Operator
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public static System.Drawing.PointF op_Explicit (System.Drawing.SizeF size);
    parameters:
    - id: size
      type: System.Drawing.SizeF
      description: "To be added."
    return:
      type: System.Drawing.PointF
      description: "To be added."
  overload: System.Drawing.SizeF.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.SizeF.op_Inequality(System.Drawing.SizeF,System.Drawing.SizeF)
  id: op_Inequality(System.Drawing.SizeF,System.Drawing.SizeF)
  parent: System.Drawing.SizeF
  langs:
  - csharp
  name: op_Inequality(SizeF,SizeF)
  nameWithType: SizeF.op_Inequality(SizeF,SizeF)
  fullName: System.Drawing.SizeF.op_Inequality(SizeF,SizeF)
  type: Operator
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Tests whether two <xref href=&quot;System.Drawing.SizeF&quot;></xref> structures are different."
  syntax:
    content: public static bool op_Inequality (System.Drawing.SizeF sz1, System.Drawing.SizeF sz2);
    parameters:
    - id: sz1
      type: System.Drawing.SizeF
      description: "The <xref href=&quot;System.Drawing.SizeF&quot;></xref> structure on the left of the inequality operator."
    - id: sz2
      type: System.Drawing.SizeF
      description: "The <xref href=&quot;System.Drawing.SizeF&quot;></xref> structure on the right of the inequality operator."
    return:
      type: System.Boolean
      description: "This operator returns <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <code>sz1</code> and <code>sz2</code> differ either in width or height; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if <code>sz1</code> and <code>sz2</code> are equal."
  overload: System.Drawing.SizeF.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.SizeF.op_Subtraction(System.Drawing.SizeF,System.Drawing.SizeF)
  id: op_Subtraction(System.Drawing.SizeF,System.Drawing.SizeF)
  parent: System.Drawing.SizeF
  langs:
  - csharp
  name: op_Subtraction(SizeF,SizeF)
  nameWithType: SizeF.op_Subtraction(SizeF,SizeF)
  fullName: System.Drawing.SizeF.op_Subtraction(SizeF,SizeF)
  type: Operator
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Subtracts the width and height of one <xref href=&quot;System.Drawing.SizeF&quot;></xref> structure from the width and height of another <xref href=&quot;System.Drawing.SizeF&quot;></xref> structure."
  syntax:
    content: public static System.Drawing.SizeF op_Subtraction (System.Drawing.SizeF sz1, System.Drawing.SizeF sz2);
    parameters:
    - id: sz1
      type: System.Drawing.SizeF
      description: "The <xref href=&quot;System.Drawing.SizeF&quot;></xref> structure on the left side of the subtraction operator."
    - id: sz2
      type: System.Drawing.SizeF
      description: "The <xref href=&quot;System.Drawing.SizeF&quot;></xref> structure on the right side of the subtraction operator."
    return:
      type: System.Drawing.SizeF
      description: "A <xref href=&quot;System.Drawing.SizeF&quot;></xref> that is the result of the subtraction operation."
  overload: System.Drawing.SizeF.op_Subtraction*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.SizeF.Subtract(System.Drawing.SizeF,System.Drawing.SizeF)
  id: Subtract(System.Drawing.SizeF,System.Drawing.SizeF)
  parent: System.Drawing.SizeF
  langs:
  - csharp
  name: Subtract(SizeF,SizeF)
  nameWithType: SizeF.Subtract(SizeF,SizeF)
  fullName: System.Drawing.SizeF.Subtract(SizeF,SizeF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Subtracts the width and height of one <xref href=&quot;System.Drawing.SizeF&quot;></xref> structure from the width and height of another <xref href=&quot;System.Drawing.SizeF&quot;></xref> structure."
  syntax:
    content: public static System.Drawing.SizeF Subtract (System.Drawing.SizeF sz1, System.Drawing.SizeF sz2);
    parameters:
    - id: sz1
      type: System.Drawing.SizeF
      description: "The <xref href=&quot;System.Drawing.SizeF&quot;></xref> structure on the left side of the subtraction operator."
    - id: sz2
      type: System.Drawing.SizeF
      description: "The <xref href=&quot;System.Drawing.SizeF&quot;></xref> structure on the right side of the subtraction operator."
    return:
      type: System.Drawing.SizeF
      description: "A <xref href=&quot;System.Drawing.SizeF&quot;></xref> structure that is a result of the subtraction operation."
  overload: System.Drawing.SizeF.Subtract*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.SizeF.ToPointF
  id: ToPointF
  parent: System.Drawing.SizeF
  langs:
  - csharp
  name: ToPointF()
  nameWithType: SizeF.ToPointF()
  fullName: System.Drawing.SizeF.ToPointF()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Converts a <xref href=&quot;System.Drawing.SizeF&quot;></xref> structure to a <xref href=&quot;System.Drawing.PointF&quot;></xref> structure."
  syntax:
    content: public System.Drawing.PointF ToPointF ();
    parameters: []
    return:
      type: System.Drawing.PointF
      description: "Returns a <xref href=&quot;System.Drawing.PointF&quot;></xref> structure."
  overload: System.Drawing.SizeF.ToPointF*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.SizeF.ToSize
  id: ToSize
  parent: System.Drawing.SizeF
  langs:
  - csharp
  name: ToSize()
  nameWithType: SizeF.ToSize()
  fullName: System.Drawing.SizeF.ToSize()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Converts a <xref href=&quot;System.Drawing.SizeF&quot;></xref> structure to a <xref href=&quot;System.Drawing.Size&quot;></xref> structure."
  remarks: "The <xref:System.Drawing.SizeF> structure is converted to a <xref:System.Drawing.Size> structure by truncating the values of the <xref:System.Drawing.SizeF> to the next lower integer values."
  syntax:
    content: public System.Drawing.Size ToSize ();
    parameters: []
    return:
      type: System.Drawing.Size
      description: "Returns a <xref href=&quot;System.Drawing.Size&quot;></xref> structure."
  overload: System.Drawing.SizeF.ToSize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.SizeF.ToString
  id: ToString
  parent: System.Drawing.SizeF
  langs:
  - csharp
  name: ToString()
  nameWithType: SizeF.ToString()
  fullName: System.Drawing.SizeF.ToString()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Creates a human-readable string that represents this <xref href=&quot;System.Drawing.SizeF&quot;></xref> structure."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A string that represents this <xref href=&quot;System.Drawing.SizeF&quot;></xref> structure."
  overload: System.Drawing.SizeF.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.SizeF.Width
  id: Width
  parent: System.Drawing.SizeF
  langs:
  - csharp
  name: Width
  nameWithType: SizeF.Width
  fullName: System.Drawing.SizeF.Width
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Gets or sets the horizontal component of this <xref href=&quot;System.Drawing.SizeF&quot;></xref> structure."
  remarks: "The unit for the <xref:System.Drawing.SizeF.Height%2A> and Width of the <xref:System.Drawing.SizeF> structure depend on the <xref:System.Drawing.Graphics.PageUnit%2A> and <xref:System.Drawing.Graphics.PageScale%2A> settings for the <xref:System.Drawing.Graphics> object that is used to draw."
  syntax:
    content: public float Width { get; set; }
    return:
      type: System.Single
      description: "The horizontal component of this <xref href=&quot;System.Drawing.SizeF&quot;></xref> structure, typically measured in pixels."
  overload: System.Drawing.SizeF.Width*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Drawing.SizeF.#ctor(System.Drawing.PointF)
  parent: System.Drawing.SizeF
  isExternal: false
  name: SizeF(PointF)
  nameWithType: SizeF.SizeF(PointF)
  fullName: System.Drawing.SizeF.SizeF(PointF)
- uid: System.Drawing.PointF
  parent: System.Drawing
  isExternal: false
  name: PointF
  nameWithType: PointF
  fullName: System.Drawing.PointF
- uid: System.Drawing.SizeF.#ctor(System.Drawing.SizeF)
  parent: System.Drawing.SizeF
  isExternal: false
  name: SizeF(SizeF)
  nameWithType: SizeF.SizeF(SizeF)
  fullName: System.Drawing.SizeF.SizeF(SizeF)
- uid: System.Drawing.SizeF
  parent: System.Drawing
  isExternal: false
  name: SizeF
  nameWithType: SizeF
  fullName: System.Drawing.SizeF
- uid: System.Drawing.SizeF.#ctor(System.Single,System.Single)
  parent: System.Drawing.SizeF
  isExternal: false
  name: SizeF(Single,Single)
  nameWithType: SizeF.SizeF(Single,Single)
  fullName: System.Drawing.SizeF.SizeF(Single,Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Drawing.SizeF.Add(System.Drawing.SizeF,System.Drawing.SizeF)
  parent: System.Drawing.SizeF
  isExternal: false
  name: Add(SizeF,SizeF)
  nameWithType: SizeF.Add(SizeF,SizeF)
  fullName: System.Drawing.SizeF.Add(SizeF,SizeF)
- uid: System.Drawing.SizeF.Empty
  parent: System.Drawing.SizeF
  isExternal: false
  name: Empty
  nameWithType: SizeF.Empty
  fullName: System.Drawing.SizeF.Empty
- uid: System.Drawing.SizeF.Equals(System.Object)
  parent: System.Drawing.SizeF
  isExternal: false
  name: Equals(Object)
  nameWithType: SizeF.Equals(Object)
  fullName: System.Drawing.SizeF.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.SizeF.GetHashCode
  parent: System.Drawing.SizeF
  isExternal: false
  name: GetHashCode()
  nameWithType: SizeF.GetHashCode()
  fullName: System.Drawing.SizeF.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.SizeF.Height
  parent: System.Drawing.SizeF
  isExternal: false
  name: Height
  nameWithType: SizeF.Height
  fullName: System.Drawing.SizeF.Height
- uid: System.Drawing.SizeF.IsEmpty
  parent: System.Drawing.SizeF
  isExternal: false
  name: IsEmpty
  nameWithType: SizeF.IsEmpty
  fullName: System.Drawing.SizeF.IsEmpty
- uid: System.Drawing.SizeF.op_Addition(System.Drawing.SizeF,System.Drawing.SizeF)
  parent: System.Drawing.SizeF
  isExternal: false
  name: op_Addition(SizeF,SizeF)
  nameWithType: SizeF.op_Addition(SizeF,SizeF)
  fullName: System.Drawing.SizeF.op_Addition(SizeF,SizeF)
- uid: System.Drawing.SizeF.op_Equality(System.Drawing.SizeF,System.Drawing.SizeF)
  parent: System.Drawing.SizeF
  isExternal: false
  name: op_Equality(SizeF,SizeF)
  nameWithType: SizeF.op_Equality(SizeF,SizeF)
  fullName: System.Drawing.SizeF.op_Equality(SizeF,SizeF)
- uid: System.Drawing.SizeF.op_Explicit(System.Drawing.SizeF to System.Drawing.PointF)
  parent: System.Drawing.SizeF
  isExternal: false
  name: op_Explicit(SizeF)
  nameWithType: SizeF.op_Explicit(SizeF)
  fullName: System.Drawing.SizeF.op_Explicit(SizeF)
- uid: System.Drawing.SizeF.op_Inequality(System.Drawing.SizeF,System.Drawing.SizeF)
  parent: System.Drawing.SizeF
  isExternal: false
  name: op_Inequality(SizeF,SizeF)
  nameWithType: SizeF.op_Inequality(SizeF,SizeF)
  fullName: System.Drawing.SizeF.op_Inequality(SizeF,SizeF)
- uid: System.Drawing.SizeF.op_Subtraction(System.Drawing.SizeF,System.Drawing.SizeF)
  parent: System.Drawing.SizeF
  isExternal: false
  name: op_Subtraction(SizeF,SizeF)
  nameWithType: SizeF.op_Subtraction(SizeF,SizeF)
  fullName: System.Drawing.SizeF.op_Subtraction(SizeF,SizeF)
- uid: System.Drawing.SizeF.Subtract(System.Drawing.SizeF,System.Drawing.SizeF)
  parent: System.Drawing.SizeF
  isExternal: false
  name: Subtract(SizeF,SizeF)
  nameWithType: SizeF.Subtract(SizeF,SizeF)
  fullName: System.Drawing.SizeF.Subtract(SizeF,SizeF)
- uid: System.Drawing.SizeF.ToPointF
  parent: System.Drawing.SizeF
  isExternal: false
  name: ToPointF()
  nameWithType: SizeF.ToPointF()
  fullName: System.Drawing.SizeF.ToPointF()
- uid: System.Drawing.SizeF.ToSize
  parent: System.Drawing.SizeF
  isExternal: false
  name: ToSize()
  nameWithType: SizeF.ToSize()
  fullName: System.Drawing.SizeF.ToSize()
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing.SizeF.ToString
  parent: System.Drawing.SizeF
  isExternal: false
  name: ToString()
  nameWithType: SizeF.ToString()
  fullName: System.Drawing.SizeF.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.SizeF.Width
  parent: System.Drawing.SizeF
  isExternal: false
  name: Width
  nameWithType: SizeF.Width
  fullName: System.Drawing.SizeF.Width
- uid: System.Drawing.SizeF.#ctor*
  parent: System.Drawing.SizeF
  isExternal: false
  name: SizeF
  nameWithType: SizeF.SizeF
- uid: System.Drawing.SizeF.Add*
  parent: System.Drawing.SizeF
  isExternal: false
  name: Add
  nameWithType: SizeF.Add
- uid: System.Drawing.SizeF.Equals*
  parent: System.Drawing.SizeF
  isExternal: false
  name: Equals
  nameWithType: SizeF.Equals
- uid: System.Drawing.SizeF.GetHashCode*
  parent: System.Drawing.SizeF
  isExternal: false
  name: GetHashCode
  nameWithType: SizeF.GetHashCode
- uid: System.Drawing.SizeF.Height*
  parent: System.Drawing.SizeF
  isExternal: false
  name: Height
  nameWithType: SizeF.Height
- uid: System.Drawing.SizeF.IsEmpty*
  parent: System.Drawing.SizeF
  isExternal: false
  name: IsEmpty
  nameWithType: SizeF.IsEmpty
- uid: System.Drawing.SizeF.op_Addition*
  parent: System.Drawing.SizeF
  isExternal: false
  name: op_Addition
  nameWithType: SizeF.op_Addition
- uid: System.Drawing.SizeF.op_Equality*
  parent: System.Drawing.SizeF
  isExternal: false
  name: op_Equality
  nameWithType: SizeF.op_Equality
- uid: System.Drawing.SizeF.op_Explicit*
  parent: System.Drawing.SizeF
  isExternal: false
  name: op_Explicit
  nameWithType: SizeF.op_Explicit
- uid: System.Drawing.SizeF.op_Inequality*
  parent: System.Drawing.SizeF
  isExternal: false
  name: op_Inequality
  nameWithType: SizeF.op_Inequality
- uid: System.Drawing.SizeF.op_Subtraction*
  parent: System.Drawing.SizeF
  isExternal: false
  name: op_Subtraction
  nameWithType: SizeF.op_Subtraction
- uid: System.Drawing.SizeF.Subtract*
  parent: System.Drawing.SizeF
  isExternal: false
  name: Subtract
  nameWithType: SizeF.Subtract
- uid: System.Drawing.SizeF.ToPointF*
  parent: System.Drawing.SizeF
  isExternal: false
  name: ToPointF
  nameWithType: SizeF.ToPointF
- uid: System.Drawing.SizeF.ToSize*
  parent: System.Drawing.SizeF
  isExternal: false
  name: ToSize
  nameWithType: SizeF.ToSize
- uid: System.Drawing.SizeF.ToString*
  parent: System.Drawing.SizeF
  isExternal: false
  name: ToString
  nameWithType: SizeF.ToString
- uid: System.Drawing.SizeF.Width*
  parent: System.Drawing.SizeF
  isExternal: false
  name: Width
  nameWithType: SizeF.Width
