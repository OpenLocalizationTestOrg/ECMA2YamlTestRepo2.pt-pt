### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.SoapHeaderAttribute
  id: SoapHeaderAttribute
  children:
  - System.Web.Services.Protocols.SoapHeaderAttribute.#ctor(System.String)
  - System.Web.Services.Protocols.SoapHeaderAttribute.Direction
  - System.Web.Services.Protocols.SoapHeaderAttribute.MemberName
  - System.Web.Services.Protocols.SoapHeaderAttribute.Required
  langs:
  - csharp
  name: SoapHeaderAttribute
  nameWithType: SoapHeaderAttribute
  fullName: System.Web.Services.Protocols.SoapHeaderAttribute
  type: Class
  summary: "Este atributo é aplicado a um método do serviço XML Web ou um cliente do serviço Web de XML para especificar um cabeçalho SOAP que pode processar o método do serviço XML Web ou o cliente do serviço Web de XML. Esta classe não pode ser herdada."
  remarks: "O basic os passos para receção e processamento de um cabeçalho SOAP são: 1.  Crie uma classe efectuar a derivação de <xref:System.Web.Services.Protocols.SoapHeader>o cabeçalho SOAP que representa os dados transmitidos.</xref:System.Web.Services.Protocols.SoapHeader>      2.  Adicione um membro à classe de serviço Web de XML ou classe de proxy do XML Web service cliente do tipo criado no passo 1.      3.  Aplicar um SoapHeaderAttribute para o método do serviço XML Web ou no método correspondente da classe de proxy, especificando o membro que criou no passo 2 no <xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A>propriedade.</xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A>      4.  Dentro do método do serviço Web de XML ou código de cliente do serviço Web de XML, aceder a <xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A>propriedade para processar os dados enviados no cabeçalho SOAP.</xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A>       Para obter mais detalhes, consulte o <xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A>propriedade.</xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A>"
  example:
  - "The following `MyWebService` XML Web service defines one <xref:System.Web.Services.Protocols.SoapHeader> of type `MyHeader`. The `Hello` XML Web service method requires the client to invoke the XML Web service method with this <xref:System.Web.Services.Protocols.SoapHeader>. The `Hello` XML Web service also catches any SOAP headers other than `MyHeader`.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=true)]

      public sealed class SoapHeaderAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHeaderAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.Services.Protocols.SoapHeaderAttribute
  langs:
  - csharp
  name: SoapHeaderAttribute(String)
  nameWithType: SoapHeaderAttribute.SoapHeaderAttribute(String)
  fullName: System.Web.Services.Protocols.SoapHeaderAttribute.SoapHeaderAttribute(String)
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.Services.Protocols.SoapHeaderAttribute&quot;> </xref> classe, definir o membro da classe de serviço XML Web que representa o conteúdo de cabeçalho SOAP."
  remarks: "Um cliente do serviço XML Web ou serviço XML Web service, pode especificar os cabeçalhos SOAP que pretende processar para os métodos do serviço XML Web específicos, aplicando um <xref:System.Web.Services.Protocols.SoapHeaderAttribute>para o método do serviço XML Web na classe de serviço XML Web ou no método correspondente na classe de proxy.</xref:System.Web.Services.Protocols.SoapHeaderAttribute> Por ordem para o método do serviço XML Web receber o conteúdo do cabeçalho SOAP, é adicionado um membro para a classe de serviço XML Web de uma <xref:System.Type>derivado <xref:System.Web.Services.Protocols.SoapHeader>.</xref:System.Web.Services.Protocols.SoapHeader> </xref:System.Type> Da mesma forma, um cliente do serviço XML Web adiciona um membro para a classe de proxy efectuar a derivação de <xref:System.Web.Services.Protocols.SoapHeader>.</xref:System.Web.Services.Protocols.SoapHeader> Que <xref:System.Type>derivadas de <xref:System.Web.Services.Protocols.SoapHeader>representa o conteúdo do cabeçalho SOAP e é criado pelo programador do serviço XML Web service ou o cliente do serviço XML Web que pretende receber o cabeçalho SOAP.</xref:System.Web.Services.Protocols.SoapHeader> </xref:System.Type> Quando a classe for criada, um <xref:System.Web.Services.Protocols.SoapHeaderAttribute>podem ser aplicadas ao método do serviço Web de XML ou método correspondente no especificou de classe de proxy de cliente de serviço de XML Web conteúdo de membro para receber o cabeçalho SOAP com o `memberName` parâmetro para este construtor ou <xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A>propriedade.</xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A> </xref:System.Web.Services.Protocols.SoapHeaderAttribute>       Um método do serviço XML Web pode receber vários cabeçalhos SOAP por adicionar vários membros para a classe de serviço XML Web ou a classe de proxy do serviço XML Web e por sua vez aplicar vários <xref:System.Web.Services.Protocols.SoapHeaderAttribute>atributos para o método do serviço Web de XML.</xref:System.Web.Services.Protocols.SoapHeaderAttribute>       Para receber e a processar desconhecidos cabeçalhos SOAP no momento que do serviço XML Web service é escrito, especifique <xref:System.Type>de membro para ser um <xref:System.Web.Services.Protocols.SoapUnknownHeader> <xref:System.Web.Services.Protocols.SoapHeader>ou uma matriz de uma classe.</xref:System.Web.Services.Protocols.SoapHeader> </xref:System.Web.Services.Protocols.SoapUnknownHeader> </xref:System.Type>"
  example:
  - "The following `MyWebService` XML Web service defines one <xref:System.Web.Services.Protocols.SoapHeader> of type `MyHeader`. The `Hello` XML Web service method specifies the `myHeader` member as the <xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A> property to receive the contents of `MyHeader` SOAP headers passed into the XML Web service method.  \n  \n [!code-cpp[Classic SoapHeaderAttribute.MemberName Example#1](~/add/codesnippet/cpp/m-system.web.services.pr_3_1.cpp)]\n [!code-cs[Classic SoapHeaderAttribute.MemberName Example#1](~/add/codesnippet/csharp/m-system.web.services.pr_3_1.cs)]\n [!code-vb[Classic SoapHeaderAttribute.MemberName Example#1](~/add/codesnippet/visualbasic/m-system.web.services.pr_3_1.vb)]"
  syntax:
    content: public SoapHeaderAttribute (string memberName);
    parameters:
    - id: memberName
      type: System.String
      description: "O membro da classe de serviço XML Web que representa o conteúdo de cabeçalho SOAP. O <xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName*>propriedade será definida para o valor deste parâmetro.</xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName*>"
  overload: System.Web.Services.Protocols.SoapHeaderAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHeaderAttribute.Direction
  id: Direction
  parent: System.Web.Services.Protocols.SoapHeaderAttribute
  langs:
  - csharp
  name: Direction
  nameWithType: SoapHeaderAttribute.Direction
  fullName: System.Web.Services.Protocols.SoapHeaderAttribute.Direction
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Obtém ou define se o cabeçalho SOAP destina-se do serviço XML Web ou o cliente do serviço XML Web ou ambos."
  remarks: ''
  example:
  - "The following `MyWebService` XML Web service defines one <xref:System.Web.Services.Protocols.SoapHeader> of type `MyHeader`. The `Hello` XML Web service method specifies that `MyHeader` must be sent to the XML Web service method and the client to invocate the XML Web service method.  \n  \n [!code-cpp[Classic SoapHeaderAttribute.MemberName Example#1](~/add/codesnippet/cpp/p-system.web.services.pr_71_1.cpp)]\n [!code-cs[Classic SoapHeaderAttribute.MemberName Example#1](~/add/codesnippet/csharp/p-system.web.services.pr_71_1.cs)]\n [!code-vb[Classic SoapHeaderAttribute.MemberName Example#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_71_1.vb)]"
  syntax:
    content: public System.Web.Services.Protocols.SoapHeaderDirection Direction { get; set; }
    return:
      type: System.Web.Services.Protocols.SoapHeaderDirection
      description: "O destinatário do cabeçalho SOAP. A predefinição é <xref href=&quot;System.Web.Services.Protocols.SoapHeaderDirection&quot;> </xref>, que significa que o destinatário pretendido é apenas o serviço XML Web service."
  overload: System.Web.Services.Protocols.SoapHeaderAttribute.Direction*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHeaderAttribute.MemberName
  id: MemberName
  parent: System.Web.Services.Protocols.SoapHeaderAttribute
  langs:
  - csharp
  name: MemberName
  nameWithType: SoapHeaderAttribute.MemberName
  fullName: System.Web.Services.Protocols.SoapHeaderAttribute.MemberName
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Obtém ou define o membro da classe de serviço XML Web que representa o conteúdo de cabeçalho SOAP."
  remarks: "Um serviço XML Web service ou o cliente do serviço XML Web pode especificar os cabeçalhos SOAP que pretende processar aplicando um <xref:System.Web.Services.Protocols.SoapHeaderAttribute>para o método do serviço XML Web na classe de serviço XML Web ou no método correspondente na classe de proxy.</xref:System.Web.Services.Protocols.SoapHeaderAttribute> Por ordem para o método do serviço XML Web receber o conteúdo do cabeçalho SOAP, é adicionado um membro para a classe de serviço Web de XML de um tipo derivado <xref:System.Web.Services.Protocols.SoapHeader>.</xref:System.Web.Services.Protocols.SoapHeader> Da mesma forma, um cliente do serviço XML Web adiciona um membro para a classe de proxy efectuar a derivação de <xref:System.Web.Services.Protocols.SoapHeader>.</xref:System.Web.Services.Protocols.SoapHeader> O <xref:System.Type>derivadas de <xref:System.Web.Services.Protocols.SoapHeader>representa o conteúdo do cabeçalho SOAP e é criado pelo programador do serviço XML Web service ou o cliente do serviço XML Web que pretende receber o cabeçalho SOAP.</xref:System.Web.Services.Protocols.SoapHeader> </xref:System.Type> Quando a classe for criada, um <xref:System.Web.Services.Protocols.SoapHeaderAttribute>podem ser aplicadas ao método do serviço Web de XML ou método correspondente na classe de proxy do cliente do XML Web service especificando o membro para receber o conteúdo de cabeçalho SOAP com a propriedade MemberName.</xref:System.Web.Services.Protocols.SoapHeaderAttribute>       Um método do serviço XML Web pode receber vários cabeçalhos SOAP por adicionar vários membros para a classe de serviço XML Web ou a classe de proxy do serviço XML Web e por sua vez aplicar vários <xref:System.Web.Services.Protocols.SoapHeaderAttribute>atributos para o método do serviço Web de XML.</xref:System.Web.Services.Protocols.SoapHeaderAttribute>       Para receber e a processar desconhecidos cabeçalhos SOAP no momento que do serviço XML Web service é escrito, especifique o tipo de membro para ser um <xref:System.Web.Services.Protocols.SoapUnknownHeader> <xref:System.Web.Services.Protocols.SoapHeader>ou uma matriz de uma classe.</xref:System.Web.Services.Protocols.SoapHeader> </xref:System.Web.Services.Protocols.SoapUnknownHeader>"
  example:
  - "The following `MyWebService` XML Web service defines one <xref:System.Web.Services.Protocols.SoapHeader> of type `MyHeader`. The `Hello` XML Web service method specifies the `myHeader` member as the MemberName property to receive the contents of `MyHeader` SOAP headers passed into the XML Web service method.  \n  \n [!code-cpp[Classic SoapHeaderAttribute.MemberName Example#1](~/add/codesnippet/cpp/p-system.web.services.pr_28_1.cpp)]\n [!code-cs[Classic SoapHeaderAttribute.MemberName Example#1](~/add/codesnippet/csharp/p-system.web.services.pr_28_1.cs)]\n [!code-vb[Classic SoapHeaderAttribute.MemberName Example#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_28_1.vb)]"
  syntax:
    content: public string MemberName { get; set; }
    return:
      type: System.String
      description: "O membro da classe de serviço XML Web que representa o conteúdo de cabeçalho SOAP. Não há nenhum predefinido."
  overload: System.Web.Services.Protocols.SoapHeaderAttribute.MemberName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHeaderAttribute.Required
  id: Required
  parent: System.Web.Services.Protocols.SoapHeaderAttribute
  langs:
  - csharp
  name: Required
  nameWithType: SoapHeaderAttribute.Required
  fullName: System.Web.Services.Protocols.SoapHeaderAttribute.Required
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Este membro está obsoleto e não tenha nenhuma funcionalidade."
  remarks: "Para verificar que um cabeçalho SOAP é enviado para um serviço Web de XML, confirme se o membro especificado no <xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A>propriedade é `null`.</xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A> Se for `null`, o cabeçalho SOAP não foi enviado.       Na versão 1.0 do .NET Framework SDK, a propriedade necessária indica se um cabeçalho SOAP tem de estar compreendido e processado pelo cliente do serviço XML Web ou destinatário serviço XML Web service. Se um destinatário não processou o cabeçalho SOAP foi emitida uma exceção."
  syntax:
    content: public bool Required { get; set; }
    return:
      type: System.Boolean
      description: "A <xref:System.Boolean>valor.</xref:System.Boolean>"
  overload: System.Web.Services.Protocols.SoapHeaderAttribute.Required*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Web.Services.Protocols.SoapHeaderAttribute.#ctor(System.String)
  parent: System.Web.Services.Protocols.SoapHeaderAttribute
  isExternal: false
  name: SoapHeaderAttribute(String)
  nameWithType: SoapHeaderAttribute.SoapHeaderAttribute(String)
  fullName: System.Web.Services.Protocols.SoapHeaderAttribute.SoapHeaderAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Services.Protocols.SoapHeaderAttribute.Direction
  parent: System.Web.Services.Protocols.SoapHeaderAttribute
  isExternal: false
  name: Direction
  nameWithType: SoapHeaderAttribute.Direction
  fullName: System.Web.Services.Protocols.SoapHeaderAttribute.Direction
- uid: System.Web.Services.Protocols.SoapHeaderDirection
  parent: System.Web.Services.Protocols
  isExternal: false
  name: SoapHeaderDirection
  nameWithType: SoapHeaderDirection
  fullName: System.Web.Services.Protocols.SoapHeaderDirection
- uid: System.Web.Services.Protocols.SoapHeaderAttribute.MemberName
  parent: System.Web.Services.Protocols.SoapHeaderAttribute
  isExternal: false
  name: MemberName
  nameWithType: SoapHeaderAttribute.MemberName
  fullName: System.Web.Services.Protocols.SoapHeaderAttribute.MemberName
- uid: System.Web.Services.Protocols.SoapHeaderAttribute.Required
  parent: System.Web.Services.Protocols.SoapHeaderAttribute
  isExternal: false
  name: Required
  nameWithType: SoapHeaderAttribute.Required
  fullName: System.Web.Services.Protocols.SoapHeaderAttribute.Required
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Services.Protocols.SoapHeaderAttribute.#ctor*
  parent: System.Web.Services.Protocols.SoapHeaderAttribute
  isExternal: false
  name: SoapHeaderAttribute
  nameWithType: SoapHeaderAttribute.SoapHeaderAttribute
- uid: System.Web.Services.Protocols.SoapHeaderAttribute.Direction*
  parent: System.Web.Services.Protocols.SoapHeaderAttribute
  isExternal: false
  name: Direction
  nameWithType: SoapHeaderAttribute.Direction
- uid: System.Web.Services.Protocols.SoapHeaderAttribute.MemberName*
  parent: System.Web.Services.Protocols.SoapHeaderAttribute
  isExternal: false
  name: MemberName
  nameWithType: SoapHeaderAttribute.MemberName
- uid: System.Web.Services.Protocols.SoapHeaderAttribute.Required*
  parent: System.Web.Services.Protocols.SoapHeaderAttribute
  isExternal: false
  name: Required
  nameWithType: SoapHeaderAttribute.Required
