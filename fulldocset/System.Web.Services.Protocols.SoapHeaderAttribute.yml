### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.SoapHeaderAttribute
  id: SoapHeaderAttribute
  children:
  - System.Web.Services.Protocols.SoapHeaderAttribute.#ctor(System.String)
  - System.Web.Services.Protocols.SoapHeaderAttribute.Direction
  - System.Web.Services.Protocols.SoapHeaderAttribute.MemberName
  - System.Web.Services.Protocols.SoapHeaderAttribute.Required
  langs:
  - csharp
  name: SoapHeaderAttribute
  nameWithType: SoapHeaderAttribute
  fullName: System.Web.Services.Protocols.SoapHeaderAttribute
  type: Class
  summary: "This attribute is applied to an XML Web service method or an XML Web service client to specify a SOAP header that the XML Web service method or XML Web service client can process. This class cannot be inherited."
  remarks: "The basic steps to receiving and processing a SOAP header are:      1.  Create a class deriving from <xref:System.Web.Services.Protocols.SoapHeader> representing the data passed in the SOAP header.      2.  Add a member to the XML Web service class or XML Web service client proxy class of the type created in step 1.      3.  Apply a SoapHeaderAttribute to the XML Web service method or the corresponding method in the proxy class, specifying the member created in step 2 in the <xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A> property.      4.  Within the XML Web service method or XML Web service client code, access the <xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A> property to process the data sent in the SOAP header.       For more details, see the <xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A> property."
  example:
  - "The following `MyWebService` XML Web service defines one <xref:System.Web.Services.Protocols.SoapHeader> of type `MyHeader`. The `Hello` XML Web service method requires the client to invoke the XML Web service method with this <xref:System.Web.Services.Protocols.SoapHeader>. The `Hello` XML Web service also catches any SOAP headers other than `MyHeader`.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=true)]

      public sealed class SoapHeaderAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHeaderAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.Services.Protocols.SoapHeaderAttribute
  langs:
  - csharp
  name: SoapHeaderAttribute(String)
  nameWithType: SoapHeaderAttribute.SoapHeaderAttribute(String)
  fullName: System.Web.Services.Protocols.SoapHeaderAttribute.SoapHeaderAttribute(String)
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.Services.Protocols.SoapHeaderAttribute&quot;></xref> class, setting the member of the XML Web service class representing the SOAP header contents."
  remarks: "An XML Web service client or XML Web service can specify the SOAP headers it wants to process for specific XML Web service methods by applying a <xref:System.Web.Services.Protocols.SoapHeaderAttribute> to the XML Web service method in the XML Web service class or the corresponding method in the proxy class. In order for the XML Web service method to receive the contents of the SOAP header, a member is added to the XML Web service class of a <xref:System.Type> derived from <xref:System.Web.Services.Protocols.SoapHeader>. Likewise, an XML Web service client adds a member to the proxy class deriving from <xref:System.Web.Services.Protocols.SoapHeader>. That <xref:System.Type> deriving from <xref:System.Web.Services.Protocols.SoapHeader> represents the contents of the SOAP header and is created by the developer of the XML Web service or XML Web service client that wants to receive the SOAP header. Once the class is created, a <xref:System.Web.Services.Protocols.SoapHeaderAttribute> can be applied to the XML Web service method or corresponding method in the XML Web service client proxy class specifing the member to receive the SOAP header contents with the `memberName` parameter to this constructor or the <xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A> property.       An XML Web service method can receive multiple SOAP headers by adding multiple members to the XML Web service class or the XML Web service proxy class and in turn applying multiple <xref:System.Web.Services.Protocols.SoapHeaderAttribute> attributes to the XML Web service method.       To receive and process unknown SOAP headers at the time the XML Web service is written, specify the <xref:System.Type> of the member to be either <xref:System.Web.Services.Protocols.SoapUnknownHeader>, <xref:System.Web.Services.Protocols.SoapHeader> or an array of either class."
  example:
  - "The following `MyWebService` XML Web service defines one <xref:System.Web.Services.Protocols.SoapHeader> of type `MyHeader`. The `Hello` XML Web service method specifies the `myHeader` member as the <xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A> property to receive the contents of `MyHeader` SOAP headers passed into the XML Web service method.  \n  \n [!code-cpp[Classic SoapHeaderAttribute.MemberName Example#1](~/add/codesnippet/cpp/m-system.web.services.pr_3_1.cpp)]\n [!code-cs[Classic SoapHeaderAttribute.MemberName Example#1](~/add/codesnippet/csharp/m-system.web.services.pr_3_1.cs)]\n [!code-vb[Classic SoapHeaderAttribute.MemberName Example#1](~/add/codesnippet/visualbasic/m-system.web.services.pr_3_1.vb)]"
  syntax:
    content: public SoapHeaderAttribute (string memberName);
    parameters:
    - id: memberName
      type: System.String
      description: "The member of the XML Web service class representing the SOAP header contents. The <xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName*> property will be set to the value of this parameter."
  overload: System.Web.Services.Protocols.SoapHeaderAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHeaderAttribute.Direction
  id: Direction
  parent: System.Web.Services.Protocols.SoapHeaderAttribute
  langs:
  - csharp
  name: Direction
  nameWithType: SoapHeaderAttribute.Direction
  fullName: System.Web.Services.Protocols.SoapHeaderAttribute.Direction
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Gets or sets whether the SOAP header is intended for the XML Web service or the XML Web service client or both."
  remarks: ''
  example:
  - "The following `MyWebService` XML Web service defines one <xref:System.Web.Services.Protocols.SoapHeader> of type `MyHeader`. The `Hello` XML Web service method specifies that `MyHeader` must be sent to the XML Web service method and the client to invocate the XML Web service method.  \n  \n [!code-cpp[Classic SoapHeaderAttribute.MemberName Example#1](~/add/codesnippet/cpp/p-system.web.services.pr_71_1.cpp)]\n [!code-cs[Classic SoapHeaderAttribute.MemberName Example#1](~/add/codesnippet/csharp/p-system.web.services.pr_71_1.cs)]\n [!code-vb[Classic SoapHeaderAttribute.MemberName Example#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_71_1.vb)]"
  syntax:
    content: public System.Web.Services.Protocols.SoapHeaderDirection Direction { get; set; }
    return:
      type: System.Web.Services.Protocols.SoapHeaderDirection
      description: "The intended recipient of the SOAP header. The default is <xref href=&quot;System.Web.Services.Protocols.SoapHeaderDirection&quot;></xref>, which means the intended recipient is just the XML Web service."
  overload: System.Web.Services.Protocols.SoapHeaderAttribute.Direction*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHeaderAttribute.MemberName
  id: MemberName
  parent: System.Web.Services.Protocols.SoapHeaderAttribute
  langs:
  - csharp
  name: MemberName
  nameWithType: SoapHeaderAttribute.MemberName
  fullName: System.Web.Services.Protocols.SoapHeaderAttribute.MemberName
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Gets or sets the member of the XML Web service class representing the SOAP header contents."
  remarks: "An XML Web service or XML Web service client can specify the SOAP headers it wants to process by applying a <xref:System.Web.Services.Protocols.SoapHeaderAttribute> to the XML Web service method in the XML Web service class or the corresponding method in the proxy class. In order for the XML Web service method to receive the contents of the SOAP header, a member is added to the XML Web service class of a type derived from <xref:System.Web.Services.Protocols.SoapHeader>. Likewise, an XML Web service client adds a member to the proxy class deriving from <xref:System.Web.Services.Protocols.SoapHeader>. The <xref:System.Type> deriving from <xref:System.Web.Services.Protocols.SoapHeader> represents the contents of the SOAP header and is created by the developer of the XML Web service or XML Web service client that wants to receive the SOAP header. Once the class is created, a <xref:System.Web.Services.Protocols.SoapHeaderAttribute> can be applied to the XML Web service method or corresponding method in the XML Web service client proxy class specifying the member to receive the SOAP header contents with the MemberName property.       An XML Web service method can receive multiple SOAP headers by adding multiple members to the XML Web service class or the XML Web service proxy class and in turn applying multiple <xref:System.Web.Services.Protocols.SoapHeaderAttribute> attributes to the XML Web service method.       To receive and process unknown SOAP headers at the time the XML Web service is written, specify the type of the member to be either <xref:System.Web.Services.Protocols.SoapUnknownHeader>, <xref:System.Web.Services.Protocols.SoapHeader> or an array of either class."
  example:
  - "The following `MyWebService` XML Web service defines one <xref:System.Web.Services.Protocols.SoapHeader> of type `MyHeader`. The `Hello` XML Web service method specifies the `myHeader` member as the MemberName property to receive the contents of `MyHeader` SOAP headers passed into the XML Web service method.  \n  \n [!code-cpp[Classic SoapHeaderAttribute.MemberName Example#1](~/add/codesnippet/cpp/p-system.web.services.pr_28_1.cpp)]\n [!code-cs[Classic SoapHeaderAttribute.MemberName Example#1](~/add/codesnippet/csharp/p-system.web.services.pr_28_1.cs)]\n [!code-vb[Classic SoapHeaderAttribute.MemberName Example#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_28_1.vb)]"
  syntax:
    content: public string MemberName { get; set; }
    return:
      type: System.String
      description: "The member of the XML Web service class representing the SOAP header contents. There is no default."
  overload: System.Web.Services.Protocols.SoapHeaderAttribute.MemberName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHeaderAttribute.Required
  id: Required
  parent: System.Web.Services.Protocols.SoapHeaderAttribute
  langs:
  - csharp
  name: Required
  nameWithType: SoapHeaderAttribute.Required
  fullName: System.Web.Services.Protocols.SoapHeaderAttribute.Required
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "This member is obsolete and has no functionality."
  remarks: "To verify that a SOAP header is sent to an XML Web service, confirm that the member specified in the <xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A> property is `null`. If it is `null`, the SOAP header was not sent.       In version 1.0 of the .NET Framework SDK, the Required property indicates whether a SOAP header must be understood and processed by the recipient XML Web service or XML Web service client. If a recipient did not process the SOAP header an exception was thrown."
  syntax:
    content: public bool Required { get; set; }
    return:
      type: System.Boolean
      description: "A <xref:System.Boolean> value."
  overload: System.Web.Services.Protocols.SoapHeaderAttribute.Required*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Web.Services.Protocols.SoapHeaderAttribute.#ctor(System.String)
  parent: System.Web.Services.Protocols.SoapHeaderAttribute
  isExternal: false
  name: SoapHeaderAttribute(String)
  nameWithType: SoapHeaderAttribute.SoapHeaderAttribute(String)
  fullName: System.Web.Services.Protocols.SoapHeaderAttribute.SoapHeaderAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Services.Protocols.SoapHeaderAttribute.Direction
  parent: System.Web.Services.Protocols.SoapHeaderAttribute
  isExternal: false
  name: Direction
  nameWithType: SoapHeaderAttribute.Direction
  fullName: System.Web.Services.Protocols.SoapHeaderAttribute.Direction
- uid: System.Web.Services.Protocols.SoapHeaderDirection
  parent: System.Web.Services.Protocols
  isExternal: false
  name: SoapHeaderDirection
  nameWithType: SoapHeaderDirection
  fullName: System.Web.Services.Protocols.SoapHeaderDirection
- uid: System.Web.Services.Protocols.SoapHeaderAttribute.MemberName
  parent: System.Web.Services.Protocols.SoapHeaderAttribute
  isExternal: false
  name: MemberName
  nameWithType: SoapHeaderAttribute.MemberName
  fullName: System.Web.Services.Protocols.SoapHeaderAttribute.MemberName
- uid: System.Web.Services.Protocols.SoapHeaderAttribute.Required
  parent: System.Web.Services.Protocols.SoapHeaderAttribute
  isExternal: false
  name: Required
  nameWithType: SoapHeaderAttribute.Required
  fullName: System.Web.Services.Protocols.SoapHeaderAttribute.Required
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Services.Protocols.SoapHeaderAttribute.#ctor*
  parent: System.Web.Services.Protocols.SoapHeaderAttribute
  isExternal: false
  name: SoapHeaderAttribute
  nameWithType: SoapHeaderAttribute.SoapHeaderAttribute
- uid: System.Web.Services.Protocols.SoapHeaderAttribute.Direction*
  parent: System.Web.Services.Protocols.SoapHeaderAttribute
  isExternal: false
  name: Direction
  nameWithType: SoapHeaderAttribute.Direction
- uid: System.Web.Services.Protocols.SoapHeaderAttribute.MemberName*
  parent: System.Web.Services.Protocols.SoapHeaderAttribute
  isExternal: false
  name: MemberName
  nameWithType: SoapHeaderAttribute.MemberName
- uid: System.Web.Services.Protocols.SoapHeaderAttribute.Required*
  parent: System.Web.Services.Protocols.SoapHeaderAttribute
  isExternal: false
  name: Required
  nameWithType: SoapHeaderAttribute.Required
