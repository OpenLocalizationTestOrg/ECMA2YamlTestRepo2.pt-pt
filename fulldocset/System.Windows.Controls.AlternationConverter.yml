### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.AlternationConverter
  id: AlternationConverter
  children:
  - System.Windows.Controls.AlternationConverter.#ctor
  - System.Windows.Controls.AlternationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  - System.Windows.Controls.AlternationConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  - System.Windows.Controls.AlternationConverter.Values
  langs:
  - csharp
  name: AlternationConverter
  nameWithType: AlternationConverter
  fullName: System.Windows.Controls.AlternationConverter
  type: Class
  summary: "Converts an integer to and from an object by applying the integer as an index to a list of objects."
  remarks: "You can use the AlternationConverter to bind a property to alternating values. For example, if you want items in a <xref:System.Windows.Controls.ListBox> to have alternating blue and light blue backgrounds, you do the following:      -   Create an AlternationConverter and add a blue <xref:System.Windows.Media.SolidColorBrush> and a light blue <xref:System.Windows.Media.SolidColorBrush> to its <xref:System.Windows.Controls.AlternationConverter.Values%2A> property.      -   In a <xref:System.Windows.Style> for <xref:System.Windows.Controls.ListBoxItem>, bind the <xref:System.Windows.Controls.Control.Background%2A> property to <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=fullName> and assign the converter you created to the <xref:System.Windows.Data.Binding.Converter%2A?displayProperty=fullName> property."
  example:
  - "The following example creates a <xref:System.Windows.Controls.ListBox> and uses two AlternationConverter objects to alternate the <xref:System.Windows.Controls.Control.Background%2A> and <xref:System.Windows.Controls.Control.FontStyle%2A> of the items.  \n  \n [!code-xml[AlternationIndexSnippets#4](~/add/codesnippet/xaml/AltnerationIndexSnippets/Window1.xaml#4)]"
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("Values")]

      public class AlternationConverter : System.Windows.Data.IValueConverter
  inheritance:
  - System.Object
  implements:
  - System.Windows.Data.IValueConverter
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Controls.AlternationConverter.#ctor
  id: '#ctor'
  parent: System.Windows.Controls.AlternationConverter
  langs:
  - csharp
  name: AlternationConverter()
  nameWithType: AlternationConverter.AlternationConverter()
  fullName: System.Windows.Controls.AlternationConverter.AlternationConverter()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Controls.AlternationConverter&quot;></xref> class."
  syntax:
    content: public AlternationConverter ();
    parameters: []
  overload: System.Windows.Controls.AlternationConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AlternationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  id: Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Controls.AlternationConverter
  langs:
  - csharp
  name: Convert(Object,Type,Object,CultureInfo)
  nameWithType: AlternationConverter.Convert(Object,Type,Object,CultureInfo)
  fullName: System.Windows.Controls.AlternationConverter.Convert(Object,Type,Object,CultureInfo)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Converts an integer to an object in the <xref:System.Windows.Controls.AlternationConverter.Values*> list."
  syntax:
    content: public object Convert (object o, Type targetType, object parameter, System.Globalization.CultureInfo culture);
    parameters:
    - id: o
      type: System.Object
      description: "The integer to use to find an object in the <xref:System.Windows.Controls.AlternationConverter.Values*> property."
    - id: targetType
      type: System.Type
      description: "The type of the binding target property."
    - id: parameter
      type: System.Object
      description: "The converter parameter to use."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "The culture to use in the converter."
    return:
      type: System.Object
      description: "The object that is in the position of <code>o</code> modulo the number of items in <xref:System.Windows.Controls.AlternationConverter.Values*>."
  overload: System.Windows.Controls.AlternationConverter.Convert*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AlternationConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  id: ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Controls.AlternationConverter
  langs:
  - csharp
  name: ConvertBack(Object,Type,Object,CultureInfo)
  nameWithType: AlternationConverter.ConvertBack(Object,Type,Object,CultureInfo)
  fullName: System.Windows.Controls.AlternationConverter.ConvertBack(Object,Type,Object,CultureInfo)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Converts an object in the <xref:System.Windows.Controls.AlternationConverter.Values*> list to an integer."
  syntax:
    content: public object ConvertBack (object o, Type targetType, object parameter, System.Globalization.CultureInfo culture);
    parameters:
    - id: o
      type: System.Object
      description: "The object to find in the <xref:System.Windows.Controls.AlternationConverter.Values*> property."
    - id: targetType
      type: System.Type
      description: "The type of the binding target property."
    - id: parameter
      type: System.Object
      description: "The converter parameter to use."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "The culture to use in the converter."
    return:
      type: System.Object
      description: "The index of <code>o</code> if it is in <xref:System.Windows.Controls.AlternationConverter.Values*>, or â€“1 if o does not exist in <xref:System.Windows.Controls.AlternationConverter.Values*>."
  overload: System.Windows.Controls.AlternationConverter.ConvertBack*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.AlternationConverter.Values
  id: Values
  parent: System.Windows.Controls.AlternationConverter
  langs:
  - csharp
  name: Values
  nameWithType: AlternationConverter.Values
  fullName: System.Windows.Controls.AlternationConverter.Values
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Gets a list of objects that the <xref href=&quot;System.Windows.Controls.AlternationConverter&quot;></xref> returns when an integer is passed to the <xref:System.Windows.Controls.AlternationConverter.Convert*> method."
  remarks: "When you use the <xref:System.Windows.Controls.AlternationConverter> to bind a property to alternating values, the Values property contains the objects that are assigned to the property.  For example, if you want items in a <xref:System.Windows.Controls.ListBox> to have alternating blue and light blue backgrounds, you add a blue <xref:System.Windows.Media.SolidColorBrush> and a light blue <xref:System.Windows.Media.SolidColorBrush> to Values."
  example:
  - "The following example creates a <xref:System.Windows.Controls.ListBox> and uses two <xref:System.Windows.Controls.AlternationConverter> objects to alternate the <xref:System.Windows.Controls.Control.Background%2A> and <xref:System.Windows.Controls.Control.FontStyle%2A> of the items.  \n  \n [!code-xml[AlternationIndexSnippets#4](~/add/codesnippet/xaml/AltnerationIndexSnippets/Window1.xaml#4)]"
  syntax:
    content: public System.Collections.IList Values { get; }
    return:
      type: System.Collections.IList
      description: "A list of objects that the <xref href=&quot;System.Windows.Controls.AlternationConverter&quot;></xref> returns when an integer is passed to the <xref:System.Windows.Controls.AlternationConverter.Convert*> method."
  overload: System.Windows.Controls.AlternationConverter.Values*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Controls.AlternationConverter.#ctor
  parent: System.Windows.Controls.AlternationConverter
  isExternal: false
  name: AlternationConverter()
  nameWithType: AlternationConverter.AlternationConverter()
  fullName: System.Windows.Controls.AlternationConverter.AlternationConverter()
- uid: System.Windows.Controls.AlternationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Controls.AlternationConverter
  isExternal: false
  name: Convert(Object,Type,Object,CultureInfo)
  nameWithType: AlternationConverter.Convert(Object,Type,Object,CultureInfo)
  fullName: System.Windows.Controls.AlternationConverter.Convert(Object,Type,Object,CultureInfo)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Windows.Controls.AlternationConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)
  parent: System.Windows.Controls.AlternationConverter
  isExternal: false
  name: ConvertBack(Object,Type,Object,CultureInfo)
  nameWithType: AlternationConverter.ConvertBack(Object,Type,Object,CultureInfo)
  fullName: System.Windows.Controls.AlternationConverter.ConvertBack(Object,Type,Object,CultureInfo)
- uid: System.Windows.Controls.AlternationConverter.Values
  parent: System.Windows.Controls.AlternationConverter
  isExternal: false
  name: Values
  nameWithType: AlternationConverter.Values
  fullName: System.Windows.Controls.AlternationConverter.Values
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Windows.Controls.AlternationConverter.#ctor*
  parent: System.Windows.Controls.AlternationConverter
  isExternal: false
  name: AlternationConverter
  nameWithType: AlternationConverter.AlternationConverter
- uid: System.Windows.Controls.AlternationConverter.Convert*
  parent: System.Windows.Controls.AlternationConverter
  isExternal: false
  name: Convert
  nameWithType: AlternationConverter.Convert
- uid: System.Windows.Controls.AlternationConverter.ConvertBack*
  parent: System.Windows.Controls.AlternationConverter
  isExternal: false
  name: ConvertBack
  nameWithType: AlternationConverter.ConvertBack
- uid: System.Windows.Controls.AlternationConverter.Values*
  parent: System.Windows.Controls.AlternationConverter
  isExternal: false
  name: Values
  nameWithType: AlternationConverter.Values
