### YamlMime:ManagedReference
items:
- uid: System.Windows.DependencyPropertyChangedEventArgs
  id: DependencyPropertyChangedEventArgs
  children:
  - System.Windows.DependencyPropertyChangedEventArgs.#ctor(System.Windows.DependencyProperty,System.Object,System.Object)
  - System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Object)
  - System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyPropertyChangedEventArgs.GetHashCode
  - System.Windows.DependencyPropertyChangedEventArgs.NewValue
  - System.Windows.DependencyPropertyChangedEventArgs.OldValue
  - System.Windows.DependencyPropertyChangedEventArgs.op_Equality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyPropertyChangedEventArgs.op_Inequality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyPropertyChangedEventArgs.Property
  langs:
  - csharp
  name: DependencyPropertyChangedEventArgs
  nameWithType: DependencyPropertyChangedEventArgs
  fullName: System.Windows.DependencyPropertyChangedEventArgs
  type: Struct
  summary: "Provides data for various property changed events. Typically these events report effective value changes in the value of a read-only dependency property. Another usage is as part of a <xref href=&quot;System.Windows.PropertyChangedCallback&quot;></xref> implementation."
  remarks: "The events that use the DependencyPropertyChangedEventArgs class for event data, and the <xref:System.Windows.DependencyPropertyChangedEventHandler> method implementations for handlers, generally follow the naming pattern `Is*Changed`, and are generally implemented as [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] events without <xref:System.Windows.RoutedEvent> backing (they are not routed events). Some class handling methods that &quot;handle&quot; otherwise unexposed events that report a state change through a property change, such as <xref:System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged%2A?displayProperty=fullName>, also use the DependencyPropertyChangedEventArgs class for event data.       The scenario for <xref:System.Windows.PropertyChangedCallback> is to use the arguments to report old and new values that come from the property system evaluation of the property. A callback that processes old and new values might choose special handling depending on these values, such as choosing to not respond to value changes that are deemed insignificant."
  example:
  - "The following example uses the DependencyPropertyChangedEventArgs class in the context of a <xref:System.Windows.PropertyChangedCallback> for a particular property of a custom class that also defines events. The callback takes the results of old and new values from the property system as communicated by DependencyPropertyChangedEventArgs, and repackages these into a different events arguments class <xref:System.Windows.RoutedPropertyChangedEventArgs%601>. The new arguments are then used as the data for a \"ValueChanged\" event defined by and raised by the custom class.  \n  \n [!code-cs[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/add/codesnippet/csharp/NumericUpDownOneProject/NumericUpDown.cs#dependencypropertychangedeventargs)]\n [!code-vb[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/add/codesnippet/visualbasic/numericupdownoneproject/numericupdown.vb#dependencypropertychangedeventargs)]"
  syntax:
    content: public struct DependencyPropertyChangedEventArgs
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Windows.DependencyPropertyChangedEventArgs.#ctor(System.Windows.DependencyProperty,System.Object,System.Object)
  id: '#ctor(System.Windows.DependencyProperty,System.Object,System.Object)'
  parent: System.Windows.DependencyPropertyChangedEventArgs
  langs:
  - csharp
  name: DependencyPropertyChangedEventArgs(DependencyProperty,Object,Object)
  nameWithType: DependencyPropertyChangedEventArgs.DependencyPropertyChangedEventArgs(DependencyProperty,Object,Object)
  fullName: System.Windows.DependencyPropertyChangedEventArgs.DependencyPropertyChangedEventArgs(DependencyProperty,Object,Object)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;></xref> class."
  remarks: "Implementers of custom events that report dependency property changes should use this constructor for populating the event data with the specifics of the change when the event is raised."
  syntax:
    content: public DependencyPropertyChangedEventArgs (System.Windows.DependencyProperty property, object oldValue, object newValue);
    parameters:
    - id: property
      type: System.Windows.DependencyProperty
      description: "The identifier for the dependency property that changed."
    - id: oldValue
      type: System.Object
      description: "The value of the property before the change reported by the relevant event or state change."
    - id: newValue
      type: System.Object
      description: "The value of the property after the change reported by the relevant event or state change."
  overload: System.Windows.DependencyPropertyChangedEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.DependencyPropertyChangedEventArgs
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: DependencyPropertyChangedEventArgs.Equals(Object)
  fullName: System.Windows.DependencyPropertyChangedEventArgs.Equals(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Determines whether the provided object is equivalent to the current <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;></xref>."
  remarks: "This implementation relies on value equivalence of all properties, including internal properties."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "The object to compare to the current <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the provided object is equivalent to the current <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.DependencyPropertyChangedEventArgs.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Windows.DependencyPropertyChangedEventArgs)
  id: Equals(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.DependencyPropertyChangedEventArgs
  langs:
  - csharp
  name: Equals(DependencyPropertyChangedEventArgs)
  nameWithType: DependencyPropertyChangedEventArgs.Equals(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.DependencyPropertyChangedEventArgs.Equals(DependencyPropertyChangedEventArgs)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Determines whether the provided <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;></xref> is equivalent to the current <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;></xref>."
  remarks: "This implementation relies on value equivalence of all properties, including internal properties."
  syntax:
    content: public bool Equals (System.Windows.DependencyPropertyChangedEventArgs args);
    parameters:
    - id: args
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "The <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;></xref> to compare to the current <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;></xref>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the provided <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;></xref> is equivalent to the current <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.DependencyPropertyChangedEventArgs.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyPropertyChangedEventArgs.GetHashCode
  id: GetHashCode
  parent: System.Windows.DependencyPropertyChangedEventArgs
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: DependencyPropertyChangedEventArgs.GetHashCode()
  fullName: System.Windows.DependencyPropertyChangedEventArgs.GetHashCode()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Gets a hash code  for this <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;></xref>."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "A signed 32-bit integer hash code."
  overload: System.Windows.DependencyPropertyChangedEventArgs.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyPropertyChangedEventArgs.NewValue
  id: NewValue
  parent: System.Windows.DependencyPropertyChangedEventArgs
  langs:
  - csharp
  name: NewValue
  nameWithType: DependencyPropertyChangedEventArgs.NewValue
  fullName: System.Windows.DependencyPropertyChangedEventArgs.NewValue
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Gets the value of the property after the change."
  remarks: "The type of the value provided should always be castable to the type of the dependency property being reported."
  example:
  - "The following example uses the <xref:System.Windows.DependencyPropertyChangedEventArgs> class in the context of a <xref:System.Windows.PropertyChangedCallback> for a particular property of a custom class that also defines events. The callback takes the results of old and new values from the property system as communicated by <xref:System.Windows.DependencyPropertyChangedEventArgs>, and repackages these into a different events arguments class <xref:System.Windows.RoutedPropertyChangedEventArgs%601>. The new arguments are then used as the data for a \"ValueChanged\" event defined by and raised by the custom class.  \n  \n [!code-cs[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/add/codesnippet/csharp/NumericUpDownOneProject/NumericUpDown.cs#dependencypropertychangedeventargs)]\n [!code-vb[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/add/codesnippet/visualbasic/numericupdownoneproject/numericupdown.vb#dependencypropertychangedeventargs)]"
  syntax:
    content: public object NewValue { get; }
    return:
      type: System.Object
      description: "The property value after the change."
  overload: System.Windows.DependencyPropertyChangedEventArgs.NewValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyPropertyChangedEventArgs.OldValue
  id: OldValue
  parent: System.Windows.DependencyPropertyChangedEventArgs
  langs:
  - csharp
  name: OldValue
  nameWithType: DependencyPropertyChangedEventArgs.OldValue
  fullName: System.Windows.DependencyPropertyChangedEventArgs.OldValue
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Gets the value of the property before the change."
  remarks: "The type of the value provided should always be castable to the type of the dependency property being reported."
  example:
  - "The following example uses the <xref:System.Windows.DependencyPropertyChangedEventArgs> class in the context of a <xref:System.Windows.PropertyChangedCallback> for a particular property of a custom class that also defines events. The callback takes the results of old and new values from the property system as communicated by <xref:System.Windows.DependencyPropertyChangedEventArgs>, and repackages these into a different events arguments class <xref:System.Windows.RoutedPropertyChangedEventArgs%601>. The new arguments are then used as the data for a \"ValueChanged\" event defined by and raised by the custom class.  \n  \n [!code-cs[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/add/codesnippet/csharp/NumericUpDownOneProject/NumericUpDown.cs#dependencypropertychangedeventargs)]\n [!code-vb[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/add/codesnippet/visualbasic/numericupdownoneproject/numericupdown.vb#dependencypropertychangedeventargs)]"
  syntax:
    content: public object OldValue { get; }
    return:
      type: System.Object
      description: "The property value before the change."
  overload: System.Windows.DependencyPropertyChangedEventArgs.OldValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyPropertyChangedEventArgs.op_Equality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)
  id: op_Equality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.DependencyPropertyChangedEventArgs
  langs:
  - csharp
  name: op_Equality(DependencyPropertyChangedEventArgs,DependencyPropertyChangedEventArgs)
  nameWithType: DependencyPropertyChangedEventArgs.op_Equality(DependencyPropertyChangedEventArgs,DependencyPropertyChangedEventArgs)
  fullName: System.Windows.DependencyPropertyChangedEventArgs.op_Equality(DependencyPropertyChangedEventArgs,DependencyPropertyChangedEventArgs)
  type: Operator
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Determines whether two specified <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;></xref> objects have the same value."
  remarks: "The implementation uses the same logic as <xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A>."
  syntax:
    content: public static bool op_Equality (System.Windows.DependencyPropertyChangedEventArgs left, System.Windows.DependencyPropertyChangedEventArgs right);
    parameters:
    - id: left
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "The first <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;></xref> to compare."
    - id: right
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "The second <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;></xref> to compare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the two <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;></xref> instances are equivalent; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.DependencyPropertyChangedEventArgs.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyPropertyChangedEventArgs.op_Inequality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)
  id: op_Inequality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.DependencyPropertyChangedEventArgs
  langs:
  - csharp
  name: op_Inequality(DependencyPropertyChangedEventArgs,DependencyPropertyChangedEventArgs)
  nameWithType: DependencyPropertyChangedEventArgs.op_Inequality(DependencyPropertyChangedEventArgs,DependencyPropertyChangedEventArgs)
  fullName: System.Windows.DependencyPropertyChangedEventArgs.op_Inequality(DependencyPropertyChangedEventArgs,DependencyPropertyChangedEventArgs)
  type: Operator
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Determines whether two specified <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;></xref> objects are different."
  remarks: "The implementation returns the negation of the same logic as <xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A>."
  syntax:
    content: public static bool op_Inequality (System.Windows.DependencyPropertyChangedEventArgs left, System.Windows.DependencyPropertyChangedEventArgs right);
    parameters:
    - id: left
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "The first <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;></xref> to compare."
    - id: right
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "The second <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;></xref> to compare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the two <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;></xref> instances are different; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.DependencyPropertyChangedEventArgs.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyPropertyChangedEventArgs.Property
  id: Property
  parent: System.Windows.DependencyPropertyChangedEventArgs
  langs:
  - csharp
  name: Property
  nameWithType: DependencyPropertyChangedEventArgs.Property
  fullName: System.Windows.DependencyPropertyChangedEventArgs.Property
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Gets the identifier for the dependency property where the value change occurred."
  remarks: "This property is relevant if used within a common <xref:System.Windows.PropertyChangedCallback> that is registered for several properties, and it is necessary to disambiguate which property change invoked the callback. Property is not typically relevant for raising events, because there is usually a 1:1 correspondence between properties and events that report the property change. The event that was raised is itself the indication of which property changed."
  syntax:
    content: public System.Windows.DependencyProperty Property { get; }
    return:
      type: System.Windows.DependencyProperty
      description: "The identifier field of the dependency property where the value change occurred."
  overload: System.Windows.DependencyPropertyChangedEventArgs.Property*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Windows.DependencyPropertyChangedEventArgs.#ctor(System.Windows.DependencyProperty,System.Object,System.Object)
  parent: System.Windows.DependencyPropertyChangedEventArgs
  isExternal: false
  name: DependencyPropertyChangedEventArgs(DependencyProperty,Object,Object)
  nameWithType: DependencyPropertyChangedEventArgs.DependencyPropertyChangedEventArgs(DependencyProperty,Object,Object)
  fullName: System.Windows.DependencyPropertyChangedEventArgs.DependencyPropertyChangedEventArgs(DependencyProperty,Object,Object)
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Object)
  parent: System.Windows.DependencyPropertyChangedEventArgs
  isExternal: false
  name: Equals(Object)
  nameWithType: DependencyPropertyChangedEventArgs.Equals(Object)
  fullName: System.Windows.DependencyPropertyChangedEventArgs.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.DependencyPropertyChangedEventArgs
  isExternal: false
  name: Equals(DependencyPropertyChangedEventArgs)
  nameWithType: DependencyPropertyChangedEventArgs.Equals(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.DependencyPropertyChangedEventArgs.Equals(DependencyPropertyChangedEventArgs)
- uid: System.Windows.DependencyPropertyChangedEventArgs
  parent: System.Windows
  isExternal: false
  name: DependencyPropertyChangedEventArgs
  nameWithType: DependencyPropertyChangedEventArgs
  fullName: System.Windows.DependencyPropertyChangedEventArgs
- uid: System.Windows.DependencyPropertyChangedEventArgs.GetHashCode
  parent: System.Windows.DependencyPropertyChangedEventArgs
  isExternal: false
  name: GetHashCode()
  nameWithType: DependencyPropertyChangedEventArgs.GetHashCode()
  fullName: System.Windows.DependencyPropertyChangedEventArgs.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.DependencyPropertyChangedEventArgs.NewValue
  parent: System.Windows.DependencyPropertyChangedEventArgs
  isExternal: false
  name: NewValue
  nameWithType: DependencyPropertyChangedEventArgs.NewValue
  fullName: System.Windows.DependencyPropertyChangedEventArgs.NewValue
- uid: System.Windows.DependencyPropertyChangedEventArgs.OldValue
  parent: System.Windows.DependencyPropertyChangedEventArgs
  isExternal: false
  name: OldValue
  nameWithType: DependencyPropertyChangedEventArgs.OldValue
  fullName: System.Windows.DependencyPropertyChangedEventArgs.OldValue
- uid: System.Windows.DependencyPropertyChangedEventArgs.op_Equality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.DependencyPropertyChangedEventArgs
  isExternal: false
  name: op_Equality(DependencyPropertyChangedEventArgs,DependencyPropertyChangedEventArgs)
  nameWithType: DependencyPropertyChangedEventArgs.op_Equality(DependencyPropertyChangedEventArgs,DependencyPropertyChangedEventArgs)
  fullName: System.Windows.DependencyPropertyChangedEventArgs.op_Equality(DependencyPropertyChangedEventArgs,DependencyPropertyChangedEventArgs)
- uid: System.Windows.DependencyPropertyChangedEventArgs.op_Inequality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.DependencyPropertyChangedEventArgs
  isExternal: false
  name: op_Inequality(DependencyPropertyChangedEventArgs,DependencyPropertyChangedEventArgs)
  nameWithType: DependencyPropertyChangedEventArgs.op_Inequality(DependencyPropertyChangedEventArgs,DependencyPropertyChangedEventArgs)
  fullName: System.Windows.DependencyPropertyChangedEventArgs.op_Inequality(DependencyPropertyChangedEventArgs,DependencyPropertyChangedEventArgs)
- uid: System.Windows.DependencyPropertyChangedEventArgs.Property
  parent: System.Windows.DependencyPropertyChangedEventArgs
  isExternal: false
  name: Property
  nameWithType: DependencyPropertyChangedEventArgs.Property
  fullName: System.Windows.DependencyPropertyChangedEventArgs.Property
- uid: System.Windows.DependencyPropertyChangedEventArgs.#ctor*
  parent: System.Windows.DependencyPropertyChangedEventArgs
  isExternal: false
  name: DependencyPropertyChangedEventArgs
  nameWithType: DependencyPropertyChangedEventArgs.DependencyPropertyChangedEventArgs
- uid: System.Windows.DependencyPropertyChangedEventArgs.Equals*
  parent: System.Windows.DependencyPropertyChangedEventArgs
  isExternal: false
  name: Equals
  nameWithType: DependencyPropertyChangedEventArgs.Equals
- uid: System.Windows.DependencyPropertyChangedEventArgs.GetHashCode*
  parent: System.Windows.DependencyPropertyChangedEventArgs
  isExternal: false
  name: GetHashCode
  nameWithType: DependencyPropertyChangedEventArgs.GetHashCode
- uid: System.Windows.DependencyPropertyChangedEventArgs.NewValue*
  parent: System.Windows.DependencyPropertyChangedEventArgs
  isExternal: false
  name: NewValue
  nameWithType: DependencyPropertyChangedEventArgs.NewValue
- uid: System.Windows.DependencyPropertyChangedEventArgs.OldValue*
  parent: System.Windows.DependencyPropertyChangedEventArgs
  isExternal: false
  name: OldValue
  nameWithType: DependencyPropertyChangedEventArgs.OldValue
- uid: System.Windows.DependencyPropertyChangedEventArgs.op_Equality*
  parent: System.Windows.DependencyPropertyChangedEventArgs
  isExternal: false
  name: op_Equality
  nameWithType: DependencyPropertyChangedEventArgs.op_Equality
- uid: System.Windows.DependencyPropertyChangedEventArgs.op_Inequality*
  parent: System.Windows.DependencyPropertyChangedEventArgs
  isExternal: false
  name: op_Inequality
  nameWithType: DependencyPropertyChangedEventArgs.op_Inequality
- uid: System.Windows.DependencyPropertyChangedEventArgs.Property*
  parent: System.Windows.DependencyPropertyChangedEventArgs
  isExternal: false
  name: Property
  nameWithType: DependencyPropertyChangedEventArgs.Property
