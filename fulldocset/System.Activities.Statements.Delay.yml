### YamlMime:ManagedReference
items:
- uid: System.Activities.Statements.Delay
  id: Delay
  children:
  - System.Activities.Statements.Delay.#ctor
  - System.Activities.Statements.Delay.Abort(System.Activities.NativeActivityAbortContext)
  - System.Activities.Statements.Delay.CacheMetadata(System.Activities.NativeActivityMetadata)
  - System.Activities.Statements.Delay.Cancel(System.Activities.NativeActivityContext)
  - System.Activities.Statements.Delay.CanInduceIdle
  - System.Activities.Statements.Delay.Duration
  - System.Activities.Statements.Delay.Execute(System.Activities.NativeActivityContext)
  langs:
  - csharp
  name: Delay
  nameWithType: Delay
  fullName: System.Activities.Statements.Delay
  type: Class
  summary: "Creates a timer for a specified duration, using a <xref href=&quot;System.Activities.Statements.TimerExtension&quot;></xref>."
  remarks: "When the activityâ€™s timer expires, the Delay activity completes its execution. If a workflow instance persists while a Delay activity has an outstanding timer, then an <xref:System.ServiceModel.Activities.Description.ITimerExpiredNotification> standard endpoint must be configured to receive notification that the timer has expired."
  example:
  - "The following code sample demonstrates creating a Delay activity. This example is from the [Using the Pick Activity](~/add/includes/ajax-current-ext-md.md) sample.  \n  \n [!code-cs[wfs_Pick#1](~/add/codesnippet/csharp/pick/program.cs#1)]"
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("Duration")]

      public sealed class Delay : System.Activities.NativeActivity
  inheritance:
  - System.Object
  - System.Activities.Activity
  - System.Activities.NativeActivity
  implements: []
  inheritedMembers:
  - System.Activities.Activity.CacheId
  - System.Activities.Activity.Constraints
  - System.Activities.Activity.DisplayName
  - System.Activities.Activity.Id
  - System.Activities.Activity.ShouldSerializeDisplayName
  - System.Activities.Activity.ToString
  - System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)
  - System.Activities.NativeActivity.Implementation
  - System.Activities.NativeActivity.ImplementationVersion
  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)
  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)
  - System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)
  platform:
  - net462
- uid: System.Activities.Statements.Delay.#ctor
  id: '#ctor'
  parent: System.Activities.Statements.Delay
  langs:
  - csharp
  name: Delay()
  nameWithType: Delay.Delay()
  fullName: System.Activities.Statements.Delay.Delay()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: "Creates a new instance of the <xref href=&quot;System.Activities.Statements.Delay&quot;></xref> activity."
  remarks: ''
  example:
  - "The following code sample demonstrates creating a <xref:System.Activities.Statements.Delay> activity. This example is from the [Using the Pick Activity](~/add/includes/ajax-current-ext-md.md)sample.  \n  \n [!code-cs[wfs_Pick#1](~/add/codesnippet/csharp/pick/program.cs#1)]"
  syntax:
    content: public Delay ();
    parameters: []
  overload: System.Activities.Statements.Delay.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.Delay.Abort(System.Activities.NativeActivityAbortContext)
  id: Abort(System.Activities.NativeActivityAbortContext)
  parent: System.Activities.Statements.Delay
  langs:
  - csharp
  name: Abort(NativeActivityAbortContext)
  nameWithType: Delay.Abort(NativeActivityAbortContext)
  fullName: System.Activities.Statements.Delay.Abort(NativeActivityAbortContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: protected override void Abort (System.Activities.NativeActivityAbortContext context);
    parameters:
    - id: context
      type: System.Activities.NativeActivityAbortContext
      description: "To be added."
  overload: System.Activities.Statements.Delay.Abort*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.Delay.CacheMetadata(System.Activities.NativeActivityMetadata)
  id: CacheMetadata(System.Activities.NativeActivityMetadata)
  parent: System.Activities.Statements.Delay
  langs:
  - csharp
  name: CacheMetadata(NativeActivityMetadata)
  nameWithType: Delay.CacheMetadata(NativeActivityMetadata)
  fullName: System.Activities.Statements.Delay.CacheMetadata(NativeActivityMetadata)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);
    parameters:
    - id: metadata
      type: System.Activities.NativeActivityMetadata
      description: "To be added."
  overload: System.Activities.Statements.Delay.CacheMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.Delay.Cancel(System.Activities.NativeActivityContext)
  id: Cancel(System.Activities.NativeActivityContext)
  parent: System.Activities.Statements.Delay
  langs:
  - csharp
  name: Cancel(NativeActivityContext)
  nameWithType: Delay.Cancel(NativeActivityContext)
  fullName: System.Activities.Statements.Delay.Cancel(NativeActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: protected override void Cancel (System.Activities.NativeActivityContext context);
    parameters:
    - id: context
      type: System.Activities.NativeActivityContext
      description: "To be added."
  overload: System.Activities.Statements.Delay.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.Delay.CanInduceIdle
  id: CanInduceIdle
  parent: System.Activities.Statements.Delay
  langs:
  - csharp
  name: CanInduceIdle
  nameWithType: Delay.CanInduceIdle
  fullName: System.Activities.Statements.Delay.CanInduceIdle
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: protected override bool CanInduceIdle { get; }
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Activities.Statements.Delay.CanInduceIdle*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.Delay.Duration
  id: Duration
  parent: System.Activities.Statements.Delay
  langs:
  - csharp
  name: Duration
  nameWithType: Delay.Duration
  fullName: System.Activities.Statements.Delay.Duration
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: "The duration of the timer that the <xref href=&quot;System.Activities.Statements.Delay&quot;></xref> activity creates. If the duration is set to <xref:System.TimeSpan.MaxValue*>, the delay is infinite."
  remarks: ''
  example:
  - "The following code sample demonstrates using Duration in a <xref:System.Activities.Statements.Delay> activity. This example is from the [Using the Pick Activity](~/add/includes/ajax-current-ext-md.md) sample.  \n  \n [!code-cs[wfs_Pick#1](~/add/codesnippet/csharp/pick/program.cs#1)]"
  syntax:
    content: public System.Activities.InArgument<TimeSpan> Duration { get; set; }
    return:
      type: System.Activities.InArgument{System.TimeSpan}
      description: "The timer duration."
  overload: System.Activities.Statements.Delay.Duration*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Statements.Delay.Execute(System.Activities.NativeActivityContext)
  id: Execute(System.Activities.NativeActivityContext)
  parent: System.Activities.Statements.Delay
  langs:
  - csharp
  name: Execute(NativeActivityContext)
  nameWithType: Delay.Execute(NativeActivityContext)
  fullName: System.Activities.Statements.Delay.Execute(NativeActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: protected override void Execute (System.Activities.NativeActivityContext context);
    parameters:
    - id: context
      type: System.Activities.NativeActivityContext
      description: "To be added."
  overload: System.Activities.Statements.Delay.Execute*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Activities.NativeActivity
  isExternal: false
  name: System.Activities.NativeActivity
- uid: System.Activities.Statements.Delay.#ctor
  parent: System.Activities.Statements.Delay
  isExternal: false
  name: Delay()
  nameWithType: Delay.Delay()
  fullName: System.Activities.Statements.Delay.Delay()
- uid: System.Activities.Statements.Delay.Abort(System.Activities.NativeActivityAbortContext)
  parent: System.Activities.Statements.Delay
  isExternal: false
  name: Abort(NativeActivityAbortContext)
  nameWithType: Delay.Abort(NativeActivityAbortContext)
  fullName: System.Activities.Statements.Delay.Abort(NativeActivityAbortContext)
- uid: System.Activities.NativeActivityAbortContext
  parent: System.Activities
  isExternal: false
  name: NativeActivityAbortContext
  nameWithType: NativeActivityAbortContext
  fullName: System.Activities.NativeActivityAbortContext
- uid: System.Activities.Statements.Delay.CacheMetadata(System.Activities.NativeActivityMetadata)
  parent: System.Activities.Statements.Delay
  isExternal: false
  name: CacheMetadata(NativeActivityMetadata)
  nameWithType: Delay.CacheMetadata(NativeActivityMetadata)
  fullName: System.Activities.Statements.Delay.CacheMetadata(NativeActivityMetadata)
- uid: System.Activities.NativeActivityMetadata
  parent: System.Activities
  isExternal: false
  name: NativeActivityMetadata
  nameWithType: NativeActivityMetadata
  fullName: System.Activities.NativeActivityMetadata
- uid: System.Activities.Statements.Delay.Cancel(System.Activities.NativeActivityContext)
  parent: System.Activities.Statements.Delay
  isExternal: false
  name: Cancel(NativeActivityContext)
  nameWithType: Delay.Cancel(NativeActivityContext)
  fullName: System.Activities.Statements.Delay.Cancel(NativeActivityContext)
- uid: System.Activities.NativeActivityContext
  parent: System.Activities
  isExternal: false
  name: NativeActivityContext
  nameWithType: NativeActivityContext
  fullName: System.Activities.NativeActivityContext
- uid: System.Activities.Statements.Delay.CanInduceIdle
  parent: System.Activities.Statements.Delay
  isExternal: false
  name: CanInduceIdle
  nameWithType: Delay.CanInduceIdle
  fullName: System.Activities.Statements.Delay.CanInduceIdle
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.Statements.Delay.Duration
  parent: System.Activities.Statements.Delay
  isExternal: false
  name: Duration
  nameWithType: Delay.Duration
  fullName: System.Activities.Statements.Delay.Duration
- uid: System.Activities.InArgument{System.TimeSpan}
  parent: System.Activities
  isExternal: false
  name: InArgument<TimeSpan>
  nameWithType: InArgument<TimeSpan>
  fullName: System.Activities.InArgument<System.TimeSpan>
  spec.csharp:
  - uid: System.Activities.InArgument`1
    name: InArgument
    nameWithType: InArgument
    fullName: InArgument<System.TimeSpan>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Statements.Delay.Execute(System.Activities.NativeActivityContext)
  parent: System.Activities.Statements.Delay
  isExternal: false
  name: Execute(NativeActivityContext)
  nameWithType: Delay.Execute(NativeActivityContext)
  fullName: System.Activities.Statements.Delay.Execute(NativeActivityContext)
- uid: System.Activities.Statements.Delay.#ctor*
  parent: System.Activities.Statements.Delay
  isExternal: false
  name: Delay
  nameWithType: Delay.Delay
- uid: System.Activities.Statements.Delay.Abort*
  parent: System.Activities.Statements.Delay
  isExternal: false
  name: Abort
  nameWithType: Delay.Abort
- uid: System.Activities.Statements.Delay.CacheMetadata*
  parent: System.Activities.Statements.Delay
  isExternal: false
  name: CacheMetadata
  nameWithType: Delay.CacheMetadata
- uid: System.Activities.Statements.Delay.Cancel*
  parent: System.Activities.Statements.Delay
  isExternal: false
  name: Cancel
  nameWithType: Delay.Cancel
- uid: System.Activities.Statements.Delay.CanInduceIdle*
  parent: System.Activities.Statements.Delay
  isExternal: false
  name: CanInduceIdle
  nameWithType: Delay.CanInduceIdle
- uid: System.Activities.Statements.Delay.Duration*
  parent: System.Activities.Statements.Delay
  isExternal: false
  name: Duration
  nameWithType: Delay.Duration
- uid: System.Activities.Statements.Delay.Execute*
  parent: System.Activities.Statements.Delay
  isExternal: false
  name: Execute
  nameWithType: Delay.Execute
