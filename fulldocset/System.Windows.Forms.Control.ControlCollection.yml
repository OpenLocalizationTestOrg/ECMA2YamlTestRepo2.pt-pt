### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.Control.ControlCollection
  id: Control.ControlCollection
  children:
  - System.Windows.Forms.Control.ControlCollection.#ctor(System.Windows.Forms.Control)
  - System.Windows.Forms.Control.ControlCollection.Add(System.Windows.Forms.Control)
  - System.Windows.Forms.Control.ControlCollection.AddRange(System.Windows.Forms.Control[])
  - System.Windows.Forms.Control.ControlCollection.Clear
  - System.Windows.Forms.Control.ControlCollection.Contains(System.Windows.Forms.Control)
  - System.Windows.Forms.Control.ControlCollection.ContainsKey(System.String)
  - System.Windows.Forms.Control.ControlCollection.Find(System.String,System.Boolean)
  - System.Windows.Forms.Control.ControlCollection.GetChildIndex(System.Windows.Forms.Control)
  - System.Windows.Forms.Control.ControlCollection.GetChildIndex(System.Windows.Forms.Control,System.Boolean)
  - System.Windows.Forms.Control.ControlCollection.GetEnumerator
  - System.Windows.Forms.Control.ControlCollection.IndexOf(System.Windows.Forms.Control)
  - System.Windows.Forms.Control.ControlCollection.IndexOfKey(System.String)
  - System.Windows.Forms.Control.ControlCollection.Item(System.Int32)
  - System.Windows.Forms.Control.ControlCollection.Item(System.String)
  - System.Windows.Forms.Control.ControlCollection.Owner
  - System.Windows.Forms.Control.ControlCollection.Remove(System.Windows.Forms.Control)
  - System.Windows.Forms.Control.ControlCollection.RemoveAt(System.Int32)
  - System.Windows.Forms.Control.ControlCollection.RemoveByKey(System.String)
  - System.Windows.Forms.Control.ControlCollection.SetChildIndex(System.Windows.Forms.Control,System.Int32)
  - System.Windows.Forms.Control.ControlCollection.System#Collections#IList#Add(System.Object)
  - System.Windows.Forms.Control.ControlCollection.System#Collections#IList#Remove(System.Object)
  - System.Windows.Forms.Control.ControlCollection.System#ICloneable#Clone
  langs:
  - csharp
  name: Control+ControlCollection
  nameWithType: Control+ControlCollection
  fullName: System.Windows.Forms.Control+ControlCollection
  type: Class
  syntax:
    content: >-
      [System.ComponentModel.ListBindable(false)]

      [System.Runtime.InteropServices.ComVisible(false)]

      public class Control.ControlCollection : System.Windows.Forms.Layout.ArrangedElementCollection, ICloneable, System.Collections.IList
  inheritance:
  - System.Object
  - System.Windows.Forms.Layout.ArrangedElementCollection
  implements:
  - System.Collections.IList
  - System.ICloneable
  inheritedMembers:
  - System.Windows.Forms.Layout.ArrangedElementCollection.CopyTo(System.Array,System.Int32)
  - System.Windows.Forms.Layout.ArrangedElementCollection.Count
  - System.Windows.Forms.Layout.ArrangedElementCollection.Equals(System.Object)
  - System.Windows.Forms.Layout.ArrangedElementCollection.GetHashCode
  - System.Windows.Forms.Layout.ArrangedElementCollection.IsReadOnly
  - System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#ICollection#IsSynchronized
  - System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#ICollection#SyncRoot
  - System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Clear
  - System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Contains(System.Object)
  - System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#IsFixedSize
  - System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Item(System.Int32)
  - System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#RemoveAt(System.Int32)
  platform:
  - net462
- uid: System.Windows.Forms.Control.ControlCollection.#ctor(System.Windows.Forms.Control)
  id: '#ctor(System.Windows.Forms.Control)'
  parent: System.Windows.Forms.Control.ControlCollection
  langs:
  - csharp
  name: Control+ControlCollection(Control)
  nameWithType: Control+ControlCollection.Control+ControlCollection(Control)
  fullName: System.Windows.Forms.Control+ControlCollection.Control+ControlCollection(Control)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: public ControlCollection (System.Windows.Forms.Control owner);
    parameters:
    - id: owner
      type: System.Windows.Forms.Control
      description: "To be added."
  overload: System.Windows.Forms.Control.ControlCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ControlCollection.Add(System.Windows.Forms.Control)
  id: Add(System.Windows.Forms.Control)
  parent: System.Windows.Forms.Control.ControlCollection
  langs:
  - csharp
  name: Add(Control)
  nameWithType: Control+ControlCollection.Add(Control)
  fullName: System.Windows.Forms.Control+ControlCollection.Add(Control)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: public virtual void Add (System.Windows.Forms.Control value);
    parameters:
    - id: value
      type: System.Windows.Forms.Control
      description: "To be added."
  overload: System.Windows.Forms.Control.ControlCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ControlCollection.AddRange(System.Windows.Forms.Control[])
  id: AddRange(System.Windows.Forms.Control[])
  parent: System.Windows.Forms.Control.ControlCollection
  langs:
  - csharp
  name: AddRange(Control[])
  nameWithType: Control+ControlCollection.AddRange(Control[])
  fullName: System.Windows.Forms.Control+ControlCollection.AddRange(Control[])
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: public virtual void AddRange (System.Windows.Forms.Control[] controls);
    parameters:
    - id: controls
      type: System.Windows.Forms.Control[]
      description: "To be added."
  overload: System.Windows.Forms.Control.ControlCollection.AddRange*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ControlCollection.Clear
  id: Clear
  parent: System.Windows.Forms.Control.ControlCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: Control+ControlCollection.Clear()
  fullName: System.Windows.Forms.Control+ControlCollection.Clear()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: public virtual void Clear ();
    parameters: []
  overload: System.Windows.Forms.Control.ControlCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ControlCollection.Contains(System.Windows.Forms.Control)
  id: Contains(System.Windows.Forms.Control)
  parent: System.Windows.Forms.Control.ControlCollection
  langs:
  - csharp
  name: Contains(Control)
  nameWithType: Control+ControlCollection.Contains(Control)
  fullName: System.Windows.Forms.Control+ControlCollection.Contains(Control)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: public bool Contains (System.Windows.Forms.Control control);
    parameters:
    - id: control
      type: System.Windows.Forms.Control
      description: "To be added."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Windows.Forms.Control.ControlCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ControlCollection.ContainsKey(System.String)
  id: ContainsKey(System.String)
  parent: System.Windows.Forms.Control.ControlCollection
  langs:
  - csharp
  name: ContainsKey(String)
  nameWithType: Control+ControlCollection.ContainsKey(String)
  fullName: System.Windows.Forms.Control+ControlCollection.ContainsKey(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: public virtual bool ContainsKey (string key);
    parameters:
    - id: key
      type: System.String
      description: "To be added."
    return:
      type: System.Boolean
      description: "To be added."
  overload: System.Windows.Forms.Control.ControlCollection.ContainsKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ControlCollection.Find(System.String,System.Boolean)
  id: Find(System.String,System.Boolean)
  parent: System.Windows.Forms.Control.ControlCollection
  langs:
  - csharp
  name: Find(String,Boolean)
  nameWithType: Control+ControlCollection.Find(String,Boolean)
  fullName: System.Windows.Forms.Control+ControlCollection.Find(String,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: public System.Windows.Forms.Control[] Find (string key, bool searchAllChildren);
    parameters:
    - id: key
      type: System.String
      description: "To be added."
    - id: searchAllChildren
      type: System.Boolean
      description: "To be added."
    return:
      type: System.Windows.Forms.Control[]
      description: "To be added."
  overload: System.Windows.Forms.Control.ControlCollection.Find*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ControlCollection.GetChildIndex(System.Windows.Forms.Control)
  id: GetChildIndex(System.Windows.Forms.Control)
  parent: System.Windows.Forms.Control.ControlCollection
  langs:
  - csharp
  name: GetChildIndex(Control)
  nameWithType: Control+ControlCollection.GetChildIndex(Control)
  fullName: System.Windows.Forms.Control+ControlCollection.GetChildIndex(Control)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: public int GetChildIndex (System.Windows.Forms.Control child);
    parameters:
    - id: child
      type: System.Windows.Forms.Control
      description: "To be added."
    return:
      type: System.Int32
      description: "To be added."
  overload: System.Windows.Forms.Control.ControlCollection.GetChildIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ControlCollection.GetChildIndex(System.Windows.Forms.Control,System.Boolean)
  id: GetChildIndex(System.Windows.Forms.Control,System.Boolean)
  parent: System.Windows.Forms.Control.ControlCollection
  langs:
  - csharp
  name: GetChildIndex(Control,Boolean)
  nameWithType: Control+ControlCollection.GetChildIndex(Control,Boolean)
  fullName: System.Windows.Forms.Control+ControlCollection.GetChildIndex(Control,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: public virtual int GetChildIndex (System.Windows.Forms.Control child, bool throwException);
    parameters:
    - id: child
      type: System.Windows.Forms.Control
      description: "To be added."
    - id: throwException
      type: System.Boolean
      description: "To be added."
    return:
      type: System.Int32
      description: "To be added."
  overload: System.Windows.Forms.Control.ControlCollection.GetChildIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ControlCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Windows.Forms.Control.ControlCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: Control+ControlCollection.GetEnumerator()
  fullName: System.Windows.Forms.Control+ControlCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: public override System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "To be added."
  overload: System.Windows.Forms.Control.ControlCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ControlCollection.IndexOf(System.Windows.Forms.Control)
  id: IndexOf(System.Windows.Forms.Control)
  parent: System.Windows.Forms.Control.ControlCollection
  langs:
  - csharp
  name: IndexOf(Control)
  nameWithType: Control+ControlCollection.IndexOf(Control)
  fullName: System.Windows.Forms.Control+ControlCollection.IndexOf(Control)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: public int IndexOf (System.Windows.Forms.Control control);
    parameters:
    - id: control
      type: System.Windows.Forms.Control
      description: "To be added."
    return:
      type: System.Int32
      description: "To be added."
  overload: System.Windows.Forms.Control.ControlCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ControlCollection.IndexOfKey(System.String)
  id: IndexOfKey(System.String)
  parent: System.Windows.Forms.Control.ControlCollection
  langs:
  - csharp
  name: IndexOfKey(String)
  nameWithType: Control+ControlCollection.IndexOfKey(String)
  fullName: System.Windows.Forms.Control+ControlCollection.IndexOfKey(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: public virtual int IndexOfKey (string key);
    parameters:
    - id: key
      type: System.String
      description: "To be added."
    return:
      type: System.Int32
      description: "To be added."
  overload: System.Windows.Forms.Control.ControlCollection.IndexOfKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ControlCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Windows.Forms.Control.ControlCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: Control+ControlCollection.Item(Int32)
  fullName: System.Windows.Forms.Control+ControlCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: public virtual System.Windows.Forms.Control this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "To be added."
    return:
      type: System.Windows.Forms.Control
      description: "To be added."
  overload: System.Windows.Forms.Control.ControlCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ControlCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Windows.Forms.Control.ControlCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: Control+ControlCollection.Item(String)
  fullName: System.Windows.Forms.Control+ControlCollection.Item(String)
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: public virtual System.Windows.Forms.Control this[string key] { get; }
    parameters:
    - id: key
      type: System.String
      description: "To be added."
    return:
      type: System.Windows.Forms.Control
      description: "To be added."
  overload: System.Windows.Forms.Control.ControlCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ControlCollection.Owner
  id: Owner
  parent: System.Windows.Forms.Control.ControlCollection
  langs:
  - csharp
  name: Owner
  nameWithType: Control+ControlCollection.Owner
  fullName: System.Windows.Forms.Control+ControlCollection.Owner
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: public System.Windows.Forms.Control Owner { get; }
    return:
      type: System.Windows.Forms.Control
      description: "To be added."
  overload: System.Windows.Forms.Control.ControlCollection.Owner*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ControlCollection.Remove(System.Windows.Forms.Control)
  id: Remove(System.Windows.Forms.Control)
  parent: System.Windows.Forms.Control.ControlCollection
  langs:
  - csharp
  name: Remove(Control)
  nameWithType: Control+ControlCollection.Remove(Control)
  fullName: System.Windows.Forms.Control+ControlCollection.Remove(Control)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: public virtual void Remove (System.Windows.Forms.Control value);
    parameters:
    - id: value
      type: System.Windows.Forms.Control
      description: "To be added."
  overload: System.Windows.Forms.Control.ControlCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ControlCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Windows.Forms.Control.ControlCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: Control+ControlCollection.RemoveAt(Int32)
  fullName: System.Windows.Forms.Control+ControlCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "To be added."
  overload: System.Windows.Forms.Control.ControlCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ControlCollection.RemoveByKey(System.String)
  id: RemoveByKey(System.String)
  parent: System.Windows.Forms.Control.ControlCollection
  langs:
  - csharp
  name: RemoveByKey(String)
  nameWithType: Control+ControlCollection.RemoveByKey(String)
  fullName: System.Windows.Forms.Control+ControlCollection.RemoveByKey(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: public virtual void RemoveByKey (string key);
    parameters:
    - id: key
      type: System.String
      description: "To be added."
  overload: System.Windows.Forms.Control.ControlCollection.RemoveByKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ControlCollection.SetChildIndex(System.Windows.Forms.Control,System.Int32)
  id: SetChildIndex(System.Windows.Forms.Control,System.Int32)
  parent: System.Windows.Forms.Control.ControlCollection
  langs:
  - csharp
  name: SetChildIndex(Control,Int32)
  nameWithType: Control+ControlCollection.SetChildIndex(Control,Int32)
  fullName: System.Windows.Forms.Control+ControlCollection.SetChildIndex(Control,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: public virtual void SetChildIndex (System.Windows.Forms.Control child, int newIndex);
    parameters:
    - id: child
      type: System.Windows.Forms.Control
      description: "To be added."
    - id: newIndex
      type: System.Int32
      description: "To be added."
  overload: System.Windows.Forms.Control.ControlCollection.SetChildIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ControlCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Windows.Forms.Control.ControlCollection
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: Control+ControlCollection.System.Collections.IList.Add(Object)
  fullName: System.Windows.Forms.Control+ControlCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: int IList.Add (object control);
    parameters:
    - id: control
      type: System.Object
      description: "To be added."
    return:
      type: System.Int32
      description: "To be added."
  overload: System.Windows.Forms.Control.ControlCollection.System#Collections#IList#Add*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ControlCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Windows.Forms.Control.ControlCollection
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: Control+ControlCollection.System.Collections.IList.Remove(Object)
  fullName: System.Windows.Forms.Control+ControlCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: void IList.Remove (object control);
    parameters:
    - id: control
      type: System.Object
      description: "To be added."
  overload: System.Windows.Forms.Control.ControlCollection.System#Collections#IList#Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ControlCollection.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Windows.Forms.Control.ControlCollection
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: Control+ControlCollection.System.ICloneable.Clone()
  fullName: System.Windows.Forms.Control+ControlCollection.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "To be added."
  overload: System.Windows.Forms.Control.ControlCollection.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: System.Windows.Forms.Layout.ArrangedElementCollection
- uid: System.Windows.Forms.Control.ControlCollection.#ctor(System.Windows.Forms.Control)
  parent: System.Windows.Forms.Control.ControlCollection
  isExternal: false
  name: Control+ControlCollection(Control)
  nameWithType: Control+ControlCollection.Control+ControlCollection(Control)
  fullName: System.Windows.Forms.Control+ControlCollection.Control+ControlCollection(Control)
- uid: System.Windows.Forms.Control
  parent: System.Windows.Forms
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Windows.Forms.Control
- uid: System.Windows.Forms.Control.ControlCollection.Add(System.Windows.Forms.Control)
  parent: System.Windows.Forms.Control.ControlCollection
  isExternal: false
  name: Add(Control)
  nameWithType: Control+ControlCollection.Add(Control)
  fullName: System.Windows.Forms.Control+ControlCollection.Add(Control)
- uid: System.Windows.Forms.Control.ControlCollection.AddRange(System.Windows.Forms.Control[])
  parent: System.Windows.Forms.Control.ControlCollection
  isExternal: false
  name: AddRange(Control[])
  nameWithType: Control+ControlCollection.AddRange(Control[])
  fullName: System.Windows.Forms.Control+ControlCollection.AddRange(Control[])
- uid: System.Windows.Forms.Control[]
  parent: System.Windows.Forms
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Windows.Forms.Control[]
  spec.csharp:
  - uid: System.Windows.Forms.Control
    name: Control
    nameWithType: Control
    fullName: Control[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.Control.ControlCollection.Clear
  parent: System.Windows.Forms.Control.ControlCollection
  isExternal: false
  name: Clear()
  nameWithType: Control+ControlCollection.Clear()
  fullName: System.Windows.Forms.Control+ControlCollection.Clear()
- uid: System.Windows.Forms.Control.ControlCollection.Contains(System.Windows.Forms.Control)
  parent: System.Windows.Forms.Control.ControlCollection
  isExternal: false
  name: Contains(Control)
  nameWithType: Control+ControlCollection.Contains(Control)
  fullName: System.Windows.Forms.Control+ControlCollection.Contains(Control)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.Control.ControlCollection.ContainsKey(System.String)
  parent: System.Windows.Forms.Control.ControlCollection
  isExternal: false
  name: ContainsKey(String)
  nameWithType: Control+ControlCollection.ContainsKey(String)
  fullName: System.Windows.Forms.Control+ControlCollection.ContainsKey(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.Control.ControlCollection.Find(System.String,System.Boolean)
  parent: System.Windows.Forms.Control.ControlCollection
  isExternal: false
  name: Find(String,Boolean)
  nameWithType: Control+ControlCollection.Find(String,Boolean)
  fullName: System.Windows.Forms.Control+ControlCollection.Find(String,Boolean)
- uid: System.Windows.Forms.Control.ControlCollection.GetChildIndex(System.Windows.Forms.Control)
  parent: System.Windows.Forms.Control.ControlCollection
  isExternal: false
  name: GetChildIndex(Control)
  nameWithType: Control+ControlCollection.GetChildIndex(Control)
  fullName: System.Windows.Forms.Control+ControlCollection.GetChildIndex(Control)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.Control.ControlCollection.GetChildIndex(System.Windows.Forms.Control,System.Boolean)
  parent: System.Windows.Forms.Control.ControlCollection
  isExternal: false
  name: GetChildIndex(Control,Boolean)
  nameWithType: Control+ControlCollection.GetChildIndex(Control,Boolean)
  fullName: System.Windows.Forms.Control+ControlCollection.GetChildIndex(Control,Boolean)
- uid: System.Windows.Forms.Control.ControlCollection.GetEnumerator
  parent: System.Windows.Forms.Control.ControlCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: Control+ControlCollection.GetEnumerator()
  fullName: System.Windows.Forms.Control+ControlCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Windows.Forms.Control.ControlCollection.IndexOf(System.Windows.Forms.Control)
  parent: System.Windows.Forms.Control.ControlCollection
  isExternal: false
  name: IndexOf(Control)
  nameWithType: Control+ControlCollection.IndexOf(Control)
  fullName: System.Windows.Forms.Control+ControlCollection.IndexOf(Control)
- uid: System.Windows.Forms.Control.ControlCollection.IndexOfKey(System.String)
  parent: System.Windows.Forms.Control.ControlCollection
  isExternal: false
  name: IndexOfKey(String)
  nameWithType: Control+ControlCollection.IndexOfKey(String)
  fullName: System.Windows.Forms.Control+ControlCollection.IndexOfKey(String)
- uid: System.Windows.Forms.Control.ControlCollection.Item(System.Int32)
  parent: System.Windows.Forms.Control.ControlCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: Control+ControlCollection.Item(Int32)
  fullName: System.Windows.Forms.Control+ControlCollection.Item(Int32)
- uid: System.Windows.Forms.Control.ControlCollection.Item(System.String)
  parent: System.Windows.Forms.Control.ControlCollection
  isExternal: false
  name: Item(String)
  nameWithType: Control+ControlCollection.Item(String)
  fullName: System.Windows.Forms.Control+ControlCollection.Item(String)
- uid: System.Windows.Forms.Control.ControlCollection.Owner
  parent: System.Windows.Forms.Control.ControlCollection
  isExternal: false
  name: Owner
  nameWithType: Control+ControlCollection.Owner
  fullName: System.Windows.Forms.Control+ControlCollection.Owner
- uid: System.Windows.Forms.Control.ControlCollection.Remove(System.Windows.Forms.Control)
  parent: System.Windows.Forms.Control.ControlCollection
  isExternal: false
  name: Remove(Control)
  nameWithType: Control+ControlCollection.Remove(Control)
  fullName: System.Windows.Forms.Control+ControlCollection.Remove(Control)
- uid: System.Windows.Forms.Control.ControlCollection.RemoveAt(System.Int32)
  parent: System.Windows.Forms.Control.ControlCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: Control+ControlCollection.RemoveAt(Int32)
  fullName: System.Windows.Forms.Control+ControlCollection.RemoveAt(Int32)
- uid: System.Windows.Forms.Control.ControlCollection.RemoveByKey(System.String)
  parent: System.Windows.Forms.Control.ControlCollection
  isExternal: false
  name: RemoveByKey(String)
  nameWithType: Control+ControlCollection.RemoveByKey(String)
  fullName: System.Windows.Forms.Control+ControlCollection.RemoveByKey(String)
- uid: System.Windows.Forms.Control.ControlCollection.SetChildIndex(System.Windows.Forms.Control,System.Int32)
  parent: System.Windows.Forms.Control.ControlCollection
  isExternal: false
  name: SetChildIndex(Control,Int32)
  nameWithType: Control+ControlCollection.SetChildIndex(Control,Int32)
  fullName: System.Windows.Forms.Control+ControlCollection.SetChildIndex(Control,Int32)
- uid: System.Windows.Forms.Control.ControlCollection.System#Collections#IList#Add(System.Object)
  parent: System.Windows.Forms.Control.ControlCollection
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: Control+ControlCollection.System.Collections.IList.Add(Object)
  fullName: System.Windows.Forms.Control+ControlCollection.System.Collections.IList.Add(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Forms.Control.ControlCollection.System#Collections#IList#Remove(System.Object)
  parent: System.Windows.Forms.Control.ControlCollection
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: Control+ControlCollection.System.Collections.IList.Remove(Object)
  fullName: System.Windows.Forms.Control+ControlCollection.System.Collections.IList.Remove(Object)
- uid: System.Windows.Forms.Control.ControlCollection.System#ICloneable#Clone
  parent: System.Windows.Forms.Control.ControlCollection
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: Control+ControlCollection.System.ICloneable.Clone()
  fullName: System.Windows.Forms.Control+ControlCollection.System.ICloneable.Clone()
- uid: System.Windows.Forms.Control.ControlCollection.#ctor*
  parent: System.Windows.Forms.Control.ControlCollection
  isExternal: false
  name: Control+ControlCollection
  nameWithType: Control+ControlCollection.Control+ControlCollection
- uid: System.Windows.Forms.Control.ControlCollection.Add*
  parent: System.Windows.Forms.Control.ControlCollection
  isExternal: false
  name: Add
  nameWithType: Control+ControlCollection.Add
- uid: System.Windows.Forms.Control.ControlCollection.AddRange*
  parent: System.Windows.Forms.Control.ControlCollection
  isExternal: false
  name: AddRange
  nameWithType: Control+ControlCollection.AddRange
- uid: System.Windows.Forms.Control.ControlCollection.Clear*
  parent: System.Windows.Forms.Control.ControlCollection
  isExternal: false
  name: Clear
  nameWithType: Control+ControlCollection.Clear
- uid: System.Windows.Forms.Control.ControlCollection.Contains*
  parent: System.Windows.Forms.Control.ControlCollection
  isExternal: false
  name: Contains
  nameWithType: Control+ControlCollection.Contains
- uid: System.Windows.Forms.Control.ControlCollection.ContainsKey*
  parent: System.Windows.Forms.Control.ControlCollection
  isExternal: false
  name: ContainsKey
  nameWithType: Control+ControlCollection.ContainsKey
- uid: System.Windows.Forms.Control.ControlCollection.Find*
  parent: System.Windows.Forms.Control.ControlCollection
  isExternal: false
  name: Find
  nameWithType: Control+ControlCollection.Find
- uid: System.Windows.Forms.Control.ControlCollection.GetChildIndex*
  parent: System.Windows.Forms.Control.ControlCollection
  isExternal: false
  name: GetChildIndex
  nameWithType: Control+ControlCollection.GetChildIndex
- uid: System.Windows.Forms.Control.ControlCollection.GetEnumerator*
  parent: System.Windows.Forms.Control.ControlCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: Control+ControlCollection.GetEnumerator
- uid: System.Windows.Forms.Control.ControlCollection.IndexOf*
  parent: System.Windows.Forms.Control.ControlCollection
  isExternal: false
  name: IndexOf
  nameWithType: Control+ControlCollection.IndexOf
- uid: System.Windows.Forms.Control.ControlCollection.IndexOfKey*
  parent: System.Windows.Forms.Control.ControlCollection
  isExternal: false
  name: IndexOfKey
  nameWithType: Control+ControlCollection.IndexOfKey
- uid: System.Windows.Forms.Control.ControlCollection.Item*
  parent: System.Windows.Forms.Control.ControlCollection
  isExternal: false
  name: Item
  nameWithType: Control+ControlCollection.Item
- uid: System.Windows.Forms.Control.ControlCollection.Owner*
  parent: System.Windows.Forms.Control.ControlCollection
  isExternal: false
  name: Owner
  nameWithType: Control+ControlCollection.Owner
- uid: System.Windows.Forms.Control.ControlCollection.Remove*
  parent: System.Windows.Forms.Control.ControlCollection
  isExternal: false
  name: Remove
  nameWithType: Control+ControlCollection.Remove
- uid: System.Windows.Forms.Control.ControlCollection.RemoveAt*
  parent: System.Windows.Forms.Control.ControlCollection
  isExternal: false
  name: RemoveAt
  nameWithType: Control+ControlCollection.RemoveAt
- uid: System.Windows.Forms.Control.ControlCollection.RemoveByKey*
  parent: System.Windows.Forms.Control.ControlCollection
  isExternal: false
  name: RemoveByKey
  nameWithType: Control+ControlCollection.RemoveByKey
- uid: System.Windows.Forms.Control.ControlCollection.SetChildIndex*
  parent: System.Windows.Forms.Control.ControlCollection
  isExternal: false
  name: SetChildIndex
  nameWithType: Control+ControlCollection.SetChildIndex
- uid: System.Windows.Forms.Control.ControlCollection.System#Collections#IList#Add*
  parent: System.Windows.Forms.Control.ControlCollection
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: Control+ControlCollection.System.Collections.IList.Add
- uid: System.Windows.Forms.Control.ControlCollection.System#Collections#IList#Remove*
  parent: System.Windows.Forms.Control.ControlCollection
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: Control+ControlCollection.System.Collections.IList.Remove
- uid: System.Windows.Forms.Control.ControlCollection.System#ICloneable#Clone*
  parent: System.Windows.Forms.Control.ControlCollection
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: Control+ControlCollection.System.ICloneable.Clone
