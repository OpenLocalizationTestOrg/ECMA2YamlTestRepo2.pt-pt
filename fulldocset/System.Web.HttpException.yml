### YamlMime:ManagedReference
items:
- uid: System.Web.HttpException
  id: HttpException
  children:
  - System.Web.HttpException.#ctor
  - System.Web.HttpException.#ctor(System.String)
  - System.Web.HttpException.#ctor(System.Int32,System.String)
  - System.Web.HttpException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Web.HttpException.#ctor(System.String,System.Exception)
  - System.Web.HttpException.#ctor(System.String,System.Int32)
  - System.Web.HttpException.#ctor(System.Int32,System.String,System.Exception)
  - System.Web.HttpException.#ctor(System.Int32,System.String,System.Int32)
  - System.Web.HttpException.CreateFromLastError(System.String)
  - System.Web.HttpException.GetHtmlErrorMessage
  - System.Web.HttpException.GetHttpCode
  - System.Web.HttpException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Web.HttpException.WebEventCode
  langs:
  - csharp
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
  type: Class
  summary: "Descreve uma exceção que ocorreram durante o processamento de pedidos HTTP."
  remarks: "A classe de HttpException é uma classe de exceção de HTTP específicos que ativa o ASP.NET para gerar informações de exceção. Para obter mais informações sobre a gerar e processamento de exceções, consulte [exceções](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to use the HttpException class to raise customized exceptions. The `Button_Click` method determines which button was clicked, and then calls either the `CheckNumber` or `CheckBoolean` method. If the user-entered value in the text box does not correspond to the expected type, an HttpException exception is created and thrown with a customized message based on the error type.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[HttpException#1](~/add/codesnippet/visualbasic/t-system.web.httpexception_1.aspx)]\n [!code-cs[HttpException#1](~/add/codesnippet/csharp/t-system.web.httpexception_1.aspx)]"
  syntax:
    content: 'public class HttpException : System.Runtime.InteropServices.ExternalException'
  inheritance:
  - System.Exception
  - System.SystemException
  - System.Runtime.InteropServices.ExternalException
  implements: []
  inheritedMembers:
  - System.Runtime.InteropServices.ExternalException.ErrorCode
  - System.Runtime.InteropServices.ExternalException.ToString
  platform:
  - net462
- uid: System.Web.HttpException.#ctor
  id: '#ctor'
  parent: System.Web.HttpException
  langs:
  - csharp
  name: HttpException()
  nameWithType: HttpException.HttpException()
  fullName: System.Web.HttpException.HttpException()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.HttpException&quot;> </xref> classe e cria vazio <xref href=&quot;System.Web.HttpException&quot;> </xref> objeto."
  remarks: "Quando o processamento de exceções, podem ser úteis para capturar uma série de exceções relacionadas com a exceção externa que está a ser emitida em resposta a uma exceção interna.       Uma referência a exceção interna que causou a exceção externa está disponível no <xref:System.Exception.InnerException%2A>propriedade da exceção externa.</xref:System.Exception.InnerException%2A> Este mecanismo preserva as informações de erro que são efetuadas pelo exceções anteriores, incluindo as exceções originais, permitindo-lhe criar exceções externas mais significativas. Para obter mais informações, consulte <xref:System.Exception.InnerException%2A>.</xref:System.Exception.InnerException%2A>"
  example:
  - "The following code example demonstrates the HttpException constructor of the <xref:System.Web.HttpException> class. The `CheckNumber` method accepts a user-entered value through a text box and checks whether it is an integer. If the value is not an integer, an exception is thrown, and then a new <xref:System.Web.HttpException> object is created and thrown. That exception is caught in the `Button_Click` event handler and the error message is displayed on the browser.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[HttpException_Constructor1#1](~/add/codesnippet/csharp/m-system.web.httpexcepti_2_1.aspx)]\n [!code-vb[HttpException_Constructor1#1](~/add/codesnippet/visualbasic/m-system.web.httpexcepti_2_1.aspx)]"
  syntax:
    content: public HttpException ();
    parameters: []
  overload: System.Web.HttpException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.HttpException
  langs:
  - csharp
  name: HttpException(String)
  nameWithType: HttpException.HttpException(String)
  fullName: System.Web.HttpException.HttpException(String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.HttpException&quot;> </xref> classe utilizando uma mensagem de erro fornecido."
  remarks: ''
  example:
  - "The following code example demonstrates the HttpException constructor of the <xref:System.Web.HttpException> class. An <xref:System.Web.HttpException> is thrown if a user-entered value is 0.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Classic HttpException.HttpException1 Example#1](~/add/codesnippet/csharp/m-system.web.httpexcepti_0_1.cs)]\n [!code-vb[Classic HttpException.HttpException1 Example#1](~/add/codesnippet/visualbasic/m-system.web.httpexcepti_0_1.vb)]"
  syntax:
    content: public HttpException (string message);
    parameters:
    - id: message
      type: System.String
      description: "A mensagem de erro apresentada ao cliente quando a exceção é acionada."
  overload: System.Web.HttpException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpException.#ctor(System.Int32,System.String)
  id: '#ctor(System.Int32,System.String)'
  parent: System.Web.HttpException
  langs:
  - csharp
  name: HttpException(Int32,String)
  nameWithType: HttpException.HttpException(Int32,String)
  fullName: System.Web.HttpException.HttpException(Int32,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.HttpException&quot;> </xref> classe utilizando um código de estado de resposta HTTP e uma mensagem de erro."
  syntax:
    content: public HttpException (int httpCode, string message);
    parameters:
    - id: httpCode
      type: System.Int32
      description: "O código de estado de resposta HTTP enviado para o cliente correspondente a este erro."
    - id: message
      type: System.String
      description: "A mensagem de erro apresentada ao cliente quando a exceção é acionada."
  overload: System.Web.HttpException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Web.HttpException
  langs:
  - csharp
  name: HttpException(SerializationInfo,StreamingContext)
  nameWithType: HttpException.HttpException(SerializationInfo,StreamingContext)
  fullName: System.Web.HttpException.HttpException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.HttpException&quot;> </xref> classe com dados serializados."
  remarks: "O construtor de HttpException denomina-se durante a desserialização para reconstitute o objeto de exceção que é transmitido através de uma transmissão em fluxo. Para obter mais informações, consulte [XML e serialização SOAP](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected HttpException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "O <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> que contém os dados de objecto serializado sobre a exceção que está a ser emitida."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "O <xref:System.Runtime.Serialization.StreamingContext>que detém as nível contextual das informações sobre a origem ou de destino.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Web.HttpException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Web.HttpException
  langs:
  - csharp
  name: HttpException(String,Exception)
  nameWithType: HttpException.HttpException(String,Exception)
  fullName: System.Web.HttpException.HttpException(String,Exception)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.HttpException&quot;> </xref> através de uma mensagem de erro de classe e o <xref:System.Exception.InnerException*>propriedade.</xref:System.Exception.InnerException*>"
  remarks: "Quando o processamento de exceções, podem ser úteis para capturar uma série de exceções relacionadas com a exceção externa que está a ser emitida em resposta a uma exceção interna.       Uma referência a exceção interna que causou a exceção externa está disponível no <xref:System.Exception.InnerException%2A>propriedade da exceção externa.</xref:System.Exception.InnerException%2A> Este mecanismo preserva as informações de erro que são efetuadas pelo exceções anteriores, incluindo as exceções originais, permitindo-lhe criar exceções externas mais significativas. Para obter mais informações, consulte <xref:System.Exception.InnerException%2A>.</xref:System.Exception.InnerException%2A>"
  example:
  - "The following code example demonstrates the HttpException constructor of the <xref:System.Web.HttpException> class. The `CheckNumber` method accepts a user-entered value through a text box and checks whether it is an integer. If the value is not an integer, an exception is thrown, and then in the catch block, a new <xref:System.Web.HttpException> object is created and thrown. That exception is caught in the `Button_Click` event handler and the error message is displayed on the browser.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[HttpException_Constructor2#1](~/add/codesnippet/visualbasic/m-system.web.httpexcepti_1_1.aspx)]\n [!code-cs[HttpException_Constructor2#1](~/add/codesnippet/csharp/m-system.web.httpexcepti_1_1.aspx)]"
  syntax:
    content: public HttpException (string message, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: "A mensagem de erro apresentada ao cliente quando a exceção é acionada."
    - id: innerException
      type: System.Exception
      description: "O <xref:System.Exception.InnerException*>, se existir, o que acionou a exceção atual.</xref:System.Exception.InnerException*>"
  overload: System.Web.HttpException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpException.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: System.Web.HttpException
  langs:
  - csharp
  name: HttpException(String,Int32)
  nameWithType: HttpException.HttpException(String,Int32)
  fullName: System.Web.HttpException.HttpException(String,Int32)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.HttpException&quot;> </xref> através de uma mensagem de erro e um código de exceção de classe."
  remarks: ''
  example:
  - "The following code example demonstrates the HttpException constructor of the <xref:System.Web.HttpException> class. An <xref:System.Web.HttpException> exception is thrown if a user-entered value is 0.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[Classic HttpException.HttpException2 Example#1](~/add/codesnippet/visualbasic/m-system.web.httpexcepti_4_1.vb)]\n [!code-cs[Classic HttpException.HttpException2 Example#1](~/add/codesnippet/csharp/m-system.web.httpexcepti_4_1.cs)]"
  syntax:
    content: public HttpException (string message, int hr);
    parameters:
    - id: message
      type: System.String
      description: "A mensagem de erro apresentada ao cliente quando a exceção é acionada."
    - id: hr
      type: System.Int32
      description: "O código de exceção que define o erro."
  overload: System.Web.HttpException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpException.#ctor(System.Int32,System.String,System.Exception)
  id: '#ctor(System.Int32,System.String,System.Exception)'
  parent: System.Web.HttpException
  langs:
  - csharp
  name: HttpException(Int32,String,Exception)
  nameWithType: HttpException.HttpException(Int32,String,Exception)
  fullName: System.Web.HttpException.HttpException(Int32,String,Exception)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.HttpException&quot;> </xref> classe utilizando um código de estado de resposta HTTP, uma mensagem de erro e o <xref:System.Exception.InnerException*>propriedade.</xref:System.Exception.InnerException*>"
  remarks: "Quando o processamento de exceções, podem ser úteis para capturar uma série de exceções relacionadas com a exceção externa que está a ser emitida em resposta a uma exceção interna.       Uma referência a exceção interna que causou a exceção externa está disponível no <xref:System.Exception.InnerException%2A>propriedade da exceção externa.</xref:System.Exception.InnerException%2A> Este mecanismo preserva as informações de erro que são efetuadas pelo exceções anteriores, incluindo as exceções originais, permitindo-lhe criar exceções externas mais significativas. Para obter mais informações, consulte <xref:System.Exception.InnerException%2A>.</xref:System.Exception.InnerException%2A>"
  example:
  - "The following code example demonstrates the HttpException constructor of the <xref:System.Web.HttpException> class. The `CheckNumber` method accepts a user-entered value and checks whether it is an integer. If the value is not an integer, an exception is thrown, and then a new <xref:System.Web.HttpException> object containing the HTTP response status code, the exception's message, and any inner exception is created. That exception is caught in the `Button_Click` event handler and the error message, error code, and inner exception are displayed.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[HttpException_Constructor3#1](~/add/codesnippet/csharp/6bc30991-e249-4e7f-addb-_1.aspx)]\n [!code-vb[HttpException_Constructor3#1](~/add/codesnippet/visualbasic/6bc30991-e249-4e7f-addb-_1.aspx)]"
  syntax:
    content: public HttpException (int httpCode, string message, Exception innerException);
    parameters:
    - id: httpCode
      type: System.Int32
      description: "O código de estado de resposta HTTP apresentado no cliente."
    - id: message
      type: System.String
      description: "A mensagem de erro apresentada ao cliente quando a exceção é acionada."
    - id: innerException
      type: System.Exception
      description: "O <xref:System.Exception.InnerException*>, se existir, o que acionou a exceção atual.</xref:System.Exception.InnerException*>"
  overload: System.Web.HttpException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpException.#ctor(System.Int32,System.String,System.Int32)
  id: '#ctor(System.Int32,System.String,System.Int32)'
  parent: System.Web.HttpException
  langs:
  - csharp
  name: HttpException(Int32,String,Int32)
  nameWithType: HttpException.HttpException(Int32,String,Int32)
  fullName: System.Web.HttpException.HttpException(Int32,String,Int32)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.HttpException&quot;> </xref> utilizando um código de estado de resposta HTTP, uma mensagem de erro e um código de exceção de classe."
  remarks: ''
  example:
  - "The following code example demonstrates the HttpException constructor of the <xref:System.Web.HttpException> class. The user name and e-mail information are entered by the user in the provided text boxes. If any of the text boxes are left blank, an <xref:System.Web.HttpException> object is created and thrown. The error code of the <xref:System.Web.HttpException> is obtained by the <xref:System.Web.HttpException.GetHttpCode%2A> method and displayed on the Web page.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[HttpException_Constructor#1](~/add/codesnippet/csharp/m-system.web.httpexcepti_3_1.aspx)]\n [!code-vb[HttpException_Constructor#1](~/add/codesnippet/visualbasic/m-system.web.httpexcepti_3_1.aspx)]"
  syntax:
    content: public HttpException (int httpCode, string message, int hr);
    parameters:
    - id: httpCode
      type: System.Int32
      description: "O código de estado de resposta HTTP apresentado no cliente."
    - id: message
      type: System.String
      description: "A mensagem de erro apresentada ao cliente quando a exceção é acionada."
    - id: hr
      type: System.Int32
      description: "O código de exceção que define o erro."
  overload: System.Web.HttpException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpException.CreateFromLastError(System.String)
  id: CreateFromLastError(System.String)
  parent: System.Web.HttpException
  langs:
  - csharp
  name: CreateFromLastError(String)
  nameWithType: HttpException.CreateFromLastError(String)
  fullName: System.Web.HttpException.CreateFromLastError(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Cria uma nova <xref href=&quot;System.Web.HttpException&quot;> </xref> exceção com base no código de erro é devolvido a partir da API de Win32 <xref uid=&quot;langword_csharp_GetLastError()&quot; name=&quot;GetLastError()&quot; href=&quot;&quot;> </xref> método."
  syntax:
    content: public static System.Web.HttpException CreateFromLastError (string message);
    parameters:
    - id: message
      type: System.String
      description: "A mensagem de erro apresentada ao cliente quando a exceção é acionada."
    return:
      type: System.Web.HttpException
      description: "Um <xref href=&quot;System.Web.HttpException&quot;> </xref> com base no código de erro é devolvido a partir de uma chamada à Win32 API <xref uid=&quot;langword_csharp_GetLastError()&quot; name=&quot;GetLastError()&quot; href=&quot;&quot;> </xref> método."
  overload: System.Web.HttpException.CreateFromLastError*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpException.GetHtmlErrorMessage
  id: GetHtmlErrorMessage
  parent: System.Web.HttpException
  langs:
  - csharp
  name: GetHtmlErrorMessage()
  nameWithType: HttpException.GetHtmlErrorMessage()
  fullName: System.Web.HttpException.GetHtmlErrorMessage()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém a mensagem de erro HTML para devolver ao cliente."
  syntax:
    content: public string GetHtmlErrorMessage ();
    parameters: []
    return:
      type: System.String
      description: "A mensagem de erro HTML."
  overload: System.Web.HttpException.GetHtmlErrorMessage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpException.GetHttpCode
  id: GetHttpCode
  parent: System.Web.HttpException
  langs:
  - csharp
  name: GetHttpCode()
  nameWithType: HttpException.GetHttpCode()
  fullName: System.Web.HttpException.GetHttpCode()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém o código de estado de resposta HTTP a devolver ao cliente."
  remarks: "Se existir um código HTTP diferente de zero, é devolvido. Caso contrário, o <xref:System.Exception.InnerException%2A>código é devolvido.</xref:System.Exception.InnerException%2A> Se um <xref:System.Exception.InnerException%2A>código nem um código HTTP diferente de zero estiver disponível, é devolvido o código de estado de resposta HTTP 500.</xref:System.Exception.InnerException%2A> Para obter mais informações sobre códigos de estado de resposta HTTP, consulte as definições de código de estado do protocolo de transferência do Hypertext - HTTP/1.1 no mundo [Wide Web Consortium (W3C) Web site](http://go.microsoft.com/fwlink/?linkid=37125)."
  syntax:
    content: public int GetHttpCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Um código HTTP diferente de zero, que representa a exceção ou <xref:System.Exception.InnerException*>código; caso contrário, o estado de resposta HTTP code 500.</xref:System.Exception.InnerException*>"
  overload: System.Web.HttpException.GetHttpCode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Web.HttpException
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: HttpException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Web.HttpException.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém informações sobre a exceção e adiciona-o para o <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> objeto."
  remarks: "O método de invocar GetObjectData adiciona informações sobre a exceção a <xref:System.Runtime.Serialization.SerializationInfo>objeto que está direcionado para a serialização.</xref:System.Runtime.Serialization.SerializationInfo> Durante a desserialização, a exceção é reconstituted do <xref:System.Runtime.Serialization.SerializationInfo>que é transmitido através do fluxo.</xref:System.Runtime.Serialization.SerializationInfo>"
  syntax:
    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "O <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> que contém os dados de objecto serializado sobre a exceção que está a ser emitida."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "O <xref:System.Runtime.Serialization.StreamingContext>que detém as nível contextual das informações sobre a origem ou de destino.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Web.HttpException.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpException.WebEventCode
  id: WebEventCode
  parent: System.Web.HttpException
  langs:
  - csharp
  name: WebEventCode
  nameWithType: HttpException.WebEventCode
  fullName: System.Web.HttpException.WebEventCode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém os códigos de eventos que estão associados a exceção de HTTP."
  syntax:
    content: public int WebEventCode { get; }
    return:
      type: System.Int32
      description: "Um número inteiro que representa um código de evento de Web."
  overload: System.Web.HttpException.WebEventCode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.InteropServices.ExternalException
  isExternal: false
  name: System.Runtime.InteropServices.ExternalException
- uid: System.Web.HttpException.#ctor
  parent: System.Web.HttpException
  isExternal: false
  name: HttpException()
  nameWithType: HttpException.HttpException()
  fullName: System.Web.HttpException.HttpException()
- uid: System.Web.HttpException.#ctor(System.String)
  parent: System.Web.HttpException
  isExternal: false
  name: HttpException(String)
  nameWithType: HttpException.HttpException(String)
  fullName: System.Web.HttpException.HttpException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpException.#ctor(System.Int32,System.String)
  parent: System.Web.HttpException
  isExternal: false
  name: HttpException(Int32,String)
  nameWithType: HttpException.HttpException(Int32,String)
  fullName: System.Web.HttpException.HttpException(Int32,String)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.HttpException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Web.HttpException
  isExternal: false
  name: HttpException(SerializationInfo,StreamingContext)
  nameWithType: HttpException.HttpException(SerializationInfo,StreamingContext)
  fullName: System.Web.HttpException.HttpException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Web.HttpException.#ctor(System.String,System.Exception)
  parent: System.Web.HttpException
  isExternal: false
  name: HttpException(String,Exception)
  nameWithType: HttpException.HttpException(String,Exception)
  fullName: System.Web.HttpException.HttpException(String,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.HttpException.#ctor(System.String,System.Int32)
  parent: System.Web.HttpException
  isExternal: false
  name: HttpException(String,Int32)
  nameWithType: HttpException.HttpException(String,Int32)
  fullName: System.Web.HttpException.HttpException(String,Int32)
- uid: System.Web.HttpException.#ctor(System.Int32,System.String,System.Exception)
  parent: System.Web.HttpException
  isExternal: false
  name: HttpException(Int32,String,Exception)
  nameWithType: HttpException.HttpException(Int32,String,Exception)
  fullName: System.Web.HttpException.HttpException(Int32,String,Exception)
- uid: System.Web.HttpException.#ctor(System.Int32,System.String,System.Int32)
  parent: System.Web.HttpException
  isExternal: false
  name: HttpException(Int32,String,Int32)
  nameWithType: HttpException.HttpException(Int32,String,Int32)
  fullName: System.Web.HttpException.HttpException(Int32,String,Int32)
- uid: System.Web.HttpException.CreateFromLastError(System.String)
  parent: System.Web.HttpException
  isExternal: false
  name: CreateFromLastError(String)
  nameWithType: HttpException.CreateFromLastError(String)
  fullName: System.Web.HttpException.CreateFromLastError(String)
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.HttpException.GetHtmlErrorMessage
  parent: System.Web.HttpException
  isExternal: false
  name: GetHtmlErrorMessage()
  nameWithType: HttpException.GetHtmlErrorMessage()
  fullName: System.Web.HttpException.GetHtmlErrorMessage()
- uid: System.Web.HttpException.GetHttpCode
  parent: System.Web.HttpException
  isExternal: false
  name: GetHttpCode()
  nameWithType: HttpException.GetHttpCode()
  fullName: System.Web.HttpException.GetHttpCode()
- uid: System.Web.HttpException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Web.HttpException
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: HttpException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Web.HttpException.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Web.HttpException.WebEventCode
  parent: System.Web.HttpException
  isExternal: false
  name: WebEventCode
  nameWithType: HttpException.WebEventCode
  fullName: System.Web.HttpException.WebEventCode
- uid: System.Web.HttpException.#ctor*
  parent: System.Web.HttpException
  isExternal: false
  name: HttpException
  nameWithType: HttpException.HttpException
- uid: System.Web.HttpException.CreateFromLastError*
  parent: System.Web.HttpException
  isExternal: false
  name: CreateFromLastError
  nameWithType: HttpException.CreateFromLastError
- uid: System.Web.HttpException.GetHtmlErrorMessage*
  parent: System.Web.HttpException
  isExternal: false
  name: GetHtmlErrorMessage
  nameWithType: HttpException.GetHtmlErrorMessage
- uid: System.Web.HttpException.GetHttpCode*
  parent: System.Web.HttpException
  isExternal: false
  name: GetHttpCode
  nameWithType: HttpException.GetHttpCode
- uid: System.Web.HttpException.GetObjectData*
  parent: System.Web.HttpException
  isExternal: false
  name: GetObjectData
  nameWithType: HttpException.GetObjectData
- uid: System.Web.HttpException.WebEventCode*
  parent: System.Web.HttpException
  isExternal: false
  name: WebEventCode
  nameWithType: HttpException.WebEventCode
