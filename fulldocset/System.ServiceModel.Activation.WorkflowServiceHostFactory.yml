### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Activation.WorkflowServiceHostFactory
  id: WorkflowServiceHostFactory
  children:
  - System.ServiceModel.Activation.WorkflowServiceHostFactory.#ctor
  - System.ServiceModel.Activation.WorkflowServiceHostFactory.CreateServiceHost(System.String,System.Uri[])
  langs:
  - csharp
  name: WorkflowServiceHostFactory
  nameWithType: WorkflowServiceHostFactory
  fullName: System.ServiceModel.Activation.WorkflowServiceHostFactory
  type: Class
  summary: "Fábrica de que fornece as instâncias do <xref href=&quot;System.ServiceModel.WorkflowServiceHost&quot;> </xref> geridos onde a instância de anfitrião é criada de forma dinâmica em resposta a mensagens a receber de ambientes de alojamento."
  remarks: "Os ambientes de alojamento geridos que suportam a ativação dinâmica são serviços de informação Internet (IIS) e serviço de ativação de processos do Windows (WAS).       Se tiver implementado um derivativo personalizado, <xref:System.ServiceModel.WorkflowServiceHost>pondere também implementar uma fábrica que derive da classe de WorkflowServiceHostFactory.</xref:System.ServiceModel.WorkflowServiceHost>       Se tiver implementado um derivativo personalizado de <xref:System.ServiceModel.ServiceHostBase>em vez disso, em seguida, considere implementar também uma fábrica que deriva a fábrica do <xref:System.ServiceModel.Activation.ServiceHostFactoryBase>diretamente.</xref:System.ServiceModel.Activation.ServiceHostFactoryBase> </xref:System.ServiceModel.ServiceHostBase>"
  syntax:
    content: >-
      [System.Obsolete("The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*")]

      public class WorkflowServiceHostFactory : System.ServiceModel.Activation.ServiceHostFactoryBase
  inheritance:
  - System.Object
  - System.ServiceModel.Activation.ServiceHostFactoryBase
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Activation.WorkflowServiceHostFactory.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Activation.WorkflowServiceHostFactory
  langs:
  - csharp
  name: WorkflowServiceHostFactory()
  nameWithType: WorkflowServiceHostFactory.WorkflowServiceHostFactory()
  fullName: System.ServiceModel.Activation.WorkflowServiceHostFactory.WorkflowServiceHostFactory()
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Activation
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ServiceModel.Activation.WorkflowServiceHostFactory&quot;> </xref> classe."
  syntax:
    content: public WorkflowServiceHostFactory ();
    parameters: []
  overload: System.ServiceModel.Activation.WorkflowServiceHostFactory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activation.WorkflowServiceHostFactory.CreateServiceHost(System.String,System.Uri[])
  id: CreateServiceHost(System.String,System.Uri[])
  parent: System.ServiceModel.Activation.WorkflowServiceHostFactory
  langs:
  - csharp
  name: CreateServiceHost(String,Uri[])
  nameWithType: WorkflowServiceHostFactory.CreateServiceHost(String,Uri[])
  fullName: System.ServiceModel.Activation.WorkflowServiceHostFactory.CreateServiceHost(String,Uri[])
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel.Activation
  summary: "Cria um <xref href=&quot;System.ServiceModel.WorkflowServiceHost&quot;> </xref> de uma cadeia que contém o nome de ficheiro do ficheiro de marcação de fluxo de trabalho ou o nome do tipo de fluxo de trabalho do tipo de serviço e o endereço base do serviço especificado."
  remarks: "O `constructorString` argumento pode ser qualquer um dos completamente qualificado fluxo de trabalho escreva o nome ou este pode ser o caminho de ficheiro relativo do ficheiro de definição de fluxo de trabalho declarado no ficheiro. svc no qual <xref:System.ServiceModel.Activation.ServiceHostFactory>diretivas são colocadas.</xref:System.ServiceModel.Activation.ServiceHostFactory>      > [!NOTE] > Para associar a definição de uma regra com uma definição de fluxo de trabalho, um nome ao ficheiro de definição da regra o mesmo nome que o ficheiro de definição de fluxo de trabalho com uma extensão de .rules e colocá-lo no mesmo diretório que o ficheiro de definição de fluxo de trabalho. Por exemplo, o ficheiro de definição de regras CalculatorServiceWorkflow.rules tem de ser no mesmo diretório que CalculatorServiceWorkflow.xoml."
  example:
  - "The following is an example of a type-based reference to the workflow service CalculatorServiceWorkflow.  \n  \n```  \n<%@ServiceHost language=c# Debug=\"true\" Factory=\"System.ServiceModel.Activation.WorkflowServiceHostFactory\" Service=\"CalculatorServiceWorkflow\" %>  \n```  \n  \n The following is an example of a workflow definition file reference to the workflow service CalculatorServiceWorkflow.  \n  \n```  \n<%@ServiceHost language=c# Debug=\"true\" Factory=\"System.ServiceModel.Activation.WorkflowServiceHostFactory\" Service=\"CalculatorServiceWorkflow.xoml\" %>  \n```"
  syntax:
    content: public override System.ServiceModel.ServiceHostBase CreateServiceHost (string constructorString, Uri[] baseAddresses);
    parameters:
    - id: constructorString
      type: System.String
      description: "O nome de ficheiro do ficheiro de marcação de fluxo de trabalho que define o serviço de fluxo de trabalho ou o nome do tipo de fluxo de trabalho do tipo de serviço."
    - id: baseAddresses
      type: System.Uri[]
      description: "Uma matriz do tipo <xref:System.Uri>que contenha os endereços base para o serviço alojado.</xref:System.Uri>"
    return:
      type: System.ServiceModel.ServiceHostBase
      description: "A <xref href=&quot;System.ServiceModel.ServiceHostBase&quot;> </xref> objeto associado com o serviço de fluxo de trabalho. A implementação predefinida devolve um <xref href=&quot;System.ServiceModel.WorkflowServiceHost&quot;> </xref> objeto com os endereços base especificados."
  overload: System.ServiceModel.Activation.WorkflowServiceHostFactory.CreateServiceHost*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Activation.ServiceHostFactoryBase
  isExternal: false
  name: System.ServiceModel.Activation.ServiceHostFactoryBase
- uid: System.ServiceModel.Activation.WorkflowServiceHostFactory.#ctor
  parent: System.ServiceModel.Activation.WorkflowServiceHostFactory
  isExternal: false
  name: WorkflowServiceHostFactory()
  nameWithType: WorkflowServiceHostFactory.WorkflowServiceHostFactory()
  fullName: System.ServiceModel.Activation.WorkflowServiceHostFactory.WorkflowServiceHostFactory()
- uid: System.ServiceModel.Activation.WorkflowServiceHostFactory.CreateServiceHost(System.String,System.Uri[])
  parent: System.ServiceModel.Activation.WorkflowServiceHostFactory
  isExternal: false
  name: CreateServiceHost(String,Uri[])
  nameWithType: WorkflowServiceHostFactory.CreateServiceHost(String,Uri[])
  fullName: System.ServiceModel.Activation.WorkflowServiceHostFactory.CreateServiceHost(String,Uri[])
- uid: System.ServiceModel.ServiceHostBase
  parent: System.ServiceModel
  isExternal: false
  name: ServiceHostBase
  nameWithType: ServiceHostBase
  fullName: System.ServiceModel.ServiceHostBase
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Uri[]
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri[]
  spec.csharp:
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ServiceModel.Activation.WorkflowServiceHostFactory.#ctor*
  parent: System.ServiceModel.Activation.WorkflowServiceHostFactory
  isExternal: false
  name: WorkflowServiceHostFactory
  nameWithType: WorkflowServiceHostFactory.WorkflowServiceHostFactory
- uid: System.ServiceModel.Activation.WorkflowServiceHostFactory.CreateServiceHost*
  parent: System.ServiceModel.Activation.WorkflowServiceHostFactory
  isExternal: false
  name: CreateServiceHost
  nameWithType: WorkflowServiceHostFactory.CreateServiceHost
