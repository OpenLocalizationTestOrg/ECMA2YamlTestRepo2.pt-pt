### YamlMime:ManagedReference
items:
- uid: System.Windows.Documents.DocumentPaginator
  id: DocumentPaginator
  children:
  - System.Windows.Documents.DocumentPaginator.#ctor
  - System.Windows.Documents.DocumentPaginator.CancelAsync(System.Object)
  - System.Windows.Documents.DocumentPaginator.ComputePageCount
  - System.Windows.Documents.DocumentPaginator.ComputePageCountAsync
  - System.Windows.Documents.DocumentPaginator.ComputePageCountAsync(System.Object)
  - System.Windows.Documents.DocumentPaginator.ComputePageCountCompleted
  - System.Windows.Documents.DocumentPaginator.GetPage(System.Int32)
  - System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32)
  - System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32,System.Object)
  - System.Windows.Documents.DocumentPaginator.GetPageCompleted
  - System.Windows.Documents.DocumentPaginator.IsPageCountValid
  - System.Windows.Documents.DocumentPaginator.OnComputePageCountCompleted(System.ComponentModel.AsyncCompletedEventArgs)
  - System.Windows.Documents.DocumentPaginator.OnGetPageCompleted(System.Windows.Documents.GetPageCompletedEventArgs)
  - System.Windows.Documents.DocumentPaginator.OnPagesChanged(System.Windows.Documents.PagesChangedEventArgs)
  - System.Windows.Documents.DocumentPaginator.PageCount
  - System.Windows.Documents.DocumentPaginator.PagesChanged
  - System.Windows.Documents.DocumentPaginator.PageSize
  - System.Windows.Documents.DocumentPaginator.Source
  langs:
  - csharp
  name: DocumentPaginator
  nameWithType: DocumentPaginator
  fullName: System.Windows.Documents.DocumentPaginator
  type: Class
  summary: "Provides an abstract base class that supports creation of multiple-page elements from a single document."
  remarks: "If you need automatic background repagination in response to events such as changing the page size of a <xref:System.Windows.Documents.FlowDocument>, then use <xref:System.Windows.Documents.DynamicDocumentPaginator> as your base class."
  syntax:
    content: public abstract class DocumentPaginator
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Documents.DocumentPaginator.#ctor
  id: '#ctor'
  parent: System.Windows.Documents.DocumentPaginator
  langs:
  - csharp
  name: DocumentPaginator()
  nameWithType: DocumentPaginator.DocumentPaginator()
  fullName: System.Windows.Documents.DocumentPaginator.DocumentPaginator()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Documents
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Documents.DocumentPaginator&quot;></xref> class."
  syntax:
    content: protected DocumentPaginator ();
    parameters: []
  overload: System.Windows.Documents.DocumentPaginator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.DocumentPaginator.CancelAsync(System.Object)
  id: CancelAsync(System.Object)
  parent: System.Windows.Documents.DocumentPaginator
  langs:
  - csharp
  name: CancelAsync(Object)
  nameWithType: DocumentPaginator.CancelAsync(Object)
  fullName: System.Windows.Documents.DocumentPaginator.CancelAsync(Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Documents
  summary: "Cancels a previous <xref:System.Windows.Documents.DocumentPaginator.GetPageAsync*> or &lt;xref:System.Windows.Documents.DynamicDocumentPaginator.GetPageNumberAsync%2A?displayProperty=fullName&gt; operation."
  remarks: "If `userState` is `null`, then all asynchronous tasks are cancelled."
  syntax:
    content: public virtual void CancelAsync (object userState);
    parameters:
    - id: userState
      type: System.Object
      description: "The original `userState` passed to <xref:System.Windows.Documents.DocumentPaginator.GetPageAsync*>, &lt;xref:System.Windows.Documents.DynamicDocumentPaginator.GetPageNumberAsync%2A?displayProperty=fullName&gt;, or <xref:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync*> that identifies the asynchronous task to cancel."
  overload: System.Windows.Documents.DocumentPaginator.CancelAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.DocumentPaginator.ComputePageCount
  id: ComputePageCount
  parent: System.Windows.Documents.DocumentPaginator
  langs:
  - csharp
  name: ComputePageCount()
  nameWithType: DocumentPaginator.ComputePageCount()
  fullName: System.Windows.Documents.DocumentPaginator.ComputePageCount()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Documents
  summary: "Forces a pagination of the content, updates <xref:System.Windows.Documents.DocumentPaginator.PageCount*> with the new total, and sets <xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid*> to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  remarks: "<xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A> will be `true` immediately after this is called. If content is modified or <xref:System.Windows.Documents.DocumentPaginator.PageSize%2A> is changed after this method is called, <xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A> will likely revert to `false`."
  syntax:
    content: public virtual void ComputePageCount ();
    parameters: []
  overload: System.Windows.Documents.DocumentPaginator.ComputePageCount*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.DocumentPaginator.ComputePageCountAsync
  id: ComputePageCountAsync
  parent: System.Windows.Documents.DocumentPaginator
  langs:
  - csharp
  name: ComputePageCountAsync()
  nameWithType: DocumentPaginator.ComputePageCountAsync()
  fullName: System.Windows.Documents.DocumentPaginator.ComputePageCountAsync()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Documents
  summary: "Asynchronously, forces a pagination of the content, updates <xref:System.Windows.Documents.DocumentPaginator.PageCount*> with the new total, and sets <xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid*> to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  remarks: 'The only way to cancel the asynchronous operation of this method is to cancel all asynchronous operations. Contrast this with the other overload of this method: <xref:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync%28System.Object%29>.'
  syntax:
    content: public virtual void ComputePageCountAsync ();
    parameters: []
  overload: System.Windows.Documents.DocumentPaginator.ComputePageCountAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.DocumentPaginator.ComputePageCountAsync(System.Object)
  id: ComputePageCountAsync(System.Object)
  parent: System.Windows.Documents.DocumentPaginator
  langs:
  - csharp
  name: ComputePageCountAsync(Object)
  nameWithType: DocumentPaginator.ComputePageCountAsync(Object)
  fullName: System.Windows.Documents.DocumentPaginator.ComputePageCountAsync(Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Documents
  summary: "Asynchronously, forces a pagination of the content, updates <xref:System.Windows.Documents.DocumentPaginator.PageCount*> with the new total, sets <xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid*> to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  remarks: "The specified ID is assigned to the asynchronous task.       This overload of the method makes it possible to cancel this asynchronous operation without cancelling all asynchronous operations."
  syntax:
    content: public virtual void ComputePageCountAsync (object userState);
    parameters:
    - id: userState
      type: System.Object
      description: "A unique identifier for the asynchronous task."
  overload: System.Windows.Documents.DocumentPaginator.ComputePageCountAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.DocumentPaginator.ComputePageCountCompleted
  id: ComputePageCountCompleted
  parent: System.Windows.Documents.DocumentPaginator
  langs:
  - csharp
  name: ComputePageCountCompleted
  nameWithType: DocumentPaginator.ComputePageCountCompleted
  fullName: System.Windows.Documents.DocumentPaginator.ComputePageCountCompleted
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Documents
  summary: "Occurs when a <xref:System.Windows.Documents.DocumentPaginator.ComputePageCountAsync*> operation has finished."
  syntax:
    content: public event System.ComponentModel.AsyncCompletedEventHandler ComputePageCountCompleted;
    return:
      type: System.ComponentModel.AsyncCompletedEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.DocumentPaginator.GetPage(System.Int32)
  id: GetPage(System.Int32)
  parent: System.Windows.Documents.DocumentPaginator
  langs:
  - csharp
  name: GetPage(Int32)
  nameWithType: DocumentPaginator.GetPage(Int32)
  fullName: System.Windows.Documents.DocumentPaginator.GetPage(Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Documents
  summary: "When overridden in a derived class, gets the <xref href=&quot;System.Windows.Documents.DocumentPage&quot;></xref> for the specified page number."
  remarks: "If pages prior to `pageNumber` have not been formatted, they will be paginated synchronously prior to returning the requested page.       <xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%2A> provides similar functionality as GetPage, but for asynchronous operation."
  syntax:
    content: public abstract System.Windows.Documents.DocumentPage GetPage (int pageNumber);
    parameters:
    - id: pageNumber
      type: System.Int32
      description: "The zero-based page number of the document page that is needed."
    return:
      type: System.Windows.Documents.DocumentPage
      description: "The <xref href=&quot;System.Windows.Documents.DocumentPage&quot;></xref> for the specified <code>pageNumber</code>, or <xref href=&quot;System.Windows.Documents.DocumentPage&quot;></xref> if the page does not exist."
  overload: System.Windows.Documents.DocumentPaginator.GetPage*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>pageNumber</code> is negative."
  platform:
  - net462
- uid: System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32)
  id: GetPageAsync(System.Int32)
  parent: System.Windows.Documents.DocumentPaginator
  langs:
  - csharp
  name: GetPageAsync(Int32)
  nameWithType: DocumentPaginator.GetPageAsync(Int32)
  fullName: System.Windows.Documents.DocumentPaginator.GetPageAsync(Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Documents
  summary: "Asynchronously returns (through the <xref href=&quot;System.Windows.Documents.DocumentPaginator.GetPageCompleted&quot;></xref> event) the <xref href=&quot;System.Windows.Documents.DocumentPage&quot;></xref> for the specified page number."
  remarks: "The only way to cancel the asynchronous operation of this method is to cancel all asynchronous operations. Contrast this with the other overload of this method: <xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29>.       This method raises the <xref:System.Windows.Documents.DocumentPaginator.GetPageCompleted> event. The <xref:System.Windows.Documents.DocumentPage> is passed to the event as one of the event arguments. See <xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%28System.Int32%2CSystem.Object%29> for how to use this method to get the page."
  syntax:
    content: public virtual void GetPageAsync (int pageNumber);
    parameters:
    - id: pageNumber
      type: System.Int32
      description: "The zero-based page number of the document page that is needed."
  overload: System.Windows.Documents.DocumentPaginator.GetPageAsync*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>pageNumber</code> is negative."
  platform:
  - net462
- uid: System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32,System.Object)
  id: GetPageAsync(System.Int32,System.Object)
  parent: System.Windows.Documents.DocumentPaginator
  langs:
  - csharp
  name: GetPageAsync(Int32,Object)
  nameWithType: DocumentPaginator.GetPageAsync(Int32,Object)
  fullName: System.Windows.Documents.DocumentPaginator.GetPageAsync(Int32,Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Documents
  summary: "Asynchronously returns (through the <xref href=&quot;System.Windows.Documents.DocumentPaginator.GetPageCompleted&quot;></xref> event) the <xref href=&quot;System.Windows.Documents.DocumentPage&quot;></xref> for the specified page number and assigns the specified ID to the asynchronous task."
  remarks: "This overload of the method makes it possible to cancel this asynchronous operation without cancelling all asynchronous operations.       This method raises the <xref:System.Windows.Documents.DocumentPaginator.GetPageCompleted> event. The <xref:System.Windows.Documents.DocumentPage> is passed to the event as one of the event arguments.       The following steps illustrate how to retrieve a <xref:System.Windows.Documents.DocumentPage> asynchronously:      1.  Create a <xref:System.Windows.Documents.GetPageCompletedEventHandler> delegate and add it to be notified of <xref:System.Windows.Documents.DocumentPaginator.GetPageCompleted> events.      2.  Call GetPageAsync specifying the `pageNumber` desired and a unique `userState`, which will be used to identify the completion of the asynchronous event.      3.  When the event occurs and the delegate is called, compare the event&quot;s <xref:System.Windows.Documents.GetPageCompletedEventArgs>.<xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> property with the original GetPageAsync `userState` parameter.  (The <xref:System.Windows.Documents.GetPageCompletedEventArgs>.<xref:System.Windows.Documents.GetPageCompletedEventArgs.PageNumber%2A> property will also match the `pageNumber` specified in the GetPageAsync call.)      4.  When the <xref:System.Windows.Documents.GetPageCompletedEventArgs>.<xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> property matches the original GetPageAsync `userState`, the operation is complete and the page is ready.      5.  Call <xref:System.Windows.Documents.DocumentPaginator.GetPage%2A> to retrieve the formatted <xref:System.Windows.Documents.DocumentPage>."
  syntax:
    content: public virtual void GetPageAsync (int pageNumber, object userState);
    parameters:
    - id: pageNumber
      type: System.Int32
      description: "The zero-based page number of the <xref href=&quot;System.Windows.Documents.DocumentPage&quot;></xref> to get."
    - id: userState
      type: System.Object
      description: "A unique identifier for the asynchronous task."
  overload: System.Windows.Documents.DocumentPaginator.GetPageAsync*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>pageNumber</code> is negative."
  platform:
  - net462
- uid: System.Windows.Documents.DocumentPaginator.GetPageCompleted
  id: GetPageCompleted
  parent: System.Windows.Documents.DocumentPaginator
  langs:
  - csharp
  name: GetPageCompleted
  nameWithType: DocumentPaginator.GetPageCompleted
  fullName: System.Windows.Documents.DocumentPaginator.GetPageCompleted
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Documents
  summary: "Occurs when <xref:System.Windows.Documents.DocumentPaginator.GetPageAsync*> has completed."
  syntax:
    content: public event System.Windows.Documents.GetPageCompletedEventHandler GetPageCompleted;
    return:
      type: System.Windows.Documents.GetPageCompletedEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.DocumentPaginator.IsPageCountValid
  id: IsPageCountValid
  parent: System.Windows.Documents.DocumentPaginator
  langs:
  - csharp
  name: IsPageCountValid
  nameWithType: DocumentPaginator.IsPageCountValid
  fullName: System.Windows.Documents.DocumentPaginator.IsPageCountValid
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Documents
  summary: "When overridden in a derived class, gets a value indicating whether <xref:System.Windows.Documents.DocumentPaginator.PageCount*> is the total number of pages."
  syntax:
    content: public abstract bool IsPageCountValid { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if pagination is complete and <xref:System.Windows.Documents.DocumentPaginator.PageCount*> is the total number of pages; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>, if pagination is in process and <xref:System.Windows.Documents.DocumentPaginator.PageCount*> is the number of pages currently formatted (not the total).       This value may revert to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>, after being <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, if <xref:System.Windows.Documents.DocumentPaginator.PageSize*> or content changes; because those events would force a repagination."
  overload: System.Windows.Documents.DocumentPaginator.IsPageCountValid*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.DocumentPaginator.OnComputePageCountCompleted(System.ComponentModel.AsyncCompletedEventArgs)
  id: OnComputePageCountCompleted(System.ComponentModel.AsyncCompletedEventArgs)
  parent: System.Windows.Documents.DocumentPaginator
  langs:
  - csharp
  name: OnComputePageCountCompleted(AsyncCompletedEventArgs)
  nameWithType: DocumentPaginator.OnComputePageCountCompleted(AsyncCompletedEventArgs)
  fullName: System.Windows.Documents.DocumentPaginator.OnComputePageCountCompleted(AsyncCompletedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Documents
  summary: "Raises the <xref href=&quot;System.Windows.Documents.DocumentPaginator.ComputePageCountCompleted&quot;></xref> event."
  syntax:
    content: protected virtual void OnComputePageCountCompleted (System.ComponentModel.AsyncCompletedEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.AsyncCompletedEventArgs
      description: "An <xref:System.ComponentModel.AsyncCompletedEventArgs> that contains the event data."
  overload: System.Windows.Documents.DocumentPaginator.OnComputePageCountCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.DocumentPaginator.OnGetPageCompleted(System.Windows.Documents.GetPageCompletedEventArgs)
  id: OnGetPageCompleted(System.Windows.Documents.GetPageCompletedEventArgs)
  parent: System.Windows.Documents.DocumentPaginator
  langs:
  - csharp
  name: OnGetPageCompleted(GetPageCompletedEventArgs)
  nameWithType: DocumentPaginator.OnGetPageCompleted(GetPageCompletedEventArgs)
  fullName: System.Windows.Documents.DocumentPaginator.OnGetPageCompleted(GetPageCompletedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Documents
  summary: "Raises the <xref href=&quot;System.Windows.Documents.DocumentPaginator.GetPageCompleted&quot;></xref> event."
  syntax:
    content: protected virtual void OnGetPageCompleted (System.Windows.Documents.GetPageCompletedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Documents.GetPageCompletedEventArgs
      description: "A <xref href=&quot;System.Windows.Documents.GetPageCompletedEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Documents.DocumentPaginator.OnGetPageCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.DocumentPaginator.OnPagesChanged(System.Windows.Documents.PagesChangedEventArgs)
  id: OnPagesChanged(System.Windows.Documents.PagesChangedEventArgs)
  parent: System.Windows.Documents.DocumentPaginator
  langs:
  - csharp
  name: OnPagesChanged(PagesChangedEventArgs)
  nameWithType: DocumentPaginator.OnPagesChanged(PagesChangedEventArgs)
  fullName: System.Windows.Documents.DocumentPaginator.OnPagesChanged(PagesChangedEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Documents
  summary: "Raises the <xref href=&quot;System.Windows.Documents.DocumentPaginator.PagesChanged&quot;></xref> event."
  syntax:
    content: protected virtual void OnPagesChanged (System.Windows.Documents.PagesChangedEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Documents.PagesChangedEventArgs
      description: "A <xref href=&quot;System.Windows.Documents.PagesChangedEventArgs&quot;></xref> that contains the event data."
  overload: System.Windows.Documents.DocumentPaginator.OnPagesChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.DocumentPaginator.PageCount
  id: PageCount
  parent: System.Windows.Documents.DocumentPaginator
  langs:
  - csharp
  name: PageCount
  nameWithType: DocumentPaginator.PageCount
  fullName: System.Windows.Documents.DocumentPaginator.PageCount
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Documents
  summary: "When overridden in a derived class, gets a count of the number of pages currently formatted"
  remarks: "If <xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A> is `true`, pagination is complete and PageCount is the total number of pages in the document.       If <xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A> is `false`, pagination is in process and PageCount is the number of pages currently formatted (not the total).       This value may change if <xref:System.Windows.Documents.DocumentPaginator.PageSize%2A> or content changes, because those events would force a repagination."
  syntax:
    content: public abstract int PageCount { get; }
    return:
      type: System.Int32
      description: "A count of the number of pages that have been formatted."
  overload: System.Windows.Documents.DocumentPaginator.PageCount*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.DocumentPaginator.PagesChanged
  id: PagesChanged
  parent: System.Windows.Documents.DocumentPaginator
  langs:
  - csharp
  name: PagesChanged
  nameWithType: DocumentPaginator.PagesChanged
  fullName: System.Windows.Documents.DocumentPaginator.PagesChanged
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Documents
  summary: "Occurs when the document content is changed."
  syntax:
    content: public event System.Windows.Documents.PagesChangedEventHandler PagesChanged;
    return:
      type: System.Windows.Documents.PagesChangedEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.DocumentPaginator.PageSize
  id: PageSize
  parent: System.Windows.Documents.DocumentPaginator
  langs:
  - csharp
  name: PageSize
  nameWithType: DocumentPaginator.PageSize
  fullName: System.Windows.Documents.DocumentPaginator.PageSize
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Documents
  summary: "When overridden in a derived class, gets or sets the suggested width and height of each page."
  remarks: "The <xref:System.Windows.Documents.DocumentPaginator> may override the value of this property. Users should check <xref:System.Windows.Documents.DocumentPage.Size%2A?displayProperty=fullName>."
  example:
  - "The following example shows how to set the PageSize.  \n  \n [!code-vb[XpsSave#CreateFixedDocument](~/add/codesnippet/visualbasic/xpssave/xpfcontent.vb#createfixeddocument)]\n [!code-cs[XpsSave#CreateFixedDocument](~/add/codesnippet/csharp/XpsSave/XpfContent.cs#createfixeddocument)]"
  syntax:
    content: public abstract System.Windows.Size PageSize { get; set; }
    return:
      type: System.Windows.Size
      description: "A <xref href=&quot;System.Windows.Size&quot;></xref> representing the width and height of each page."
  overload: System.Windows.Documents.DocumentPaginator.PageSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.DocumentPaginator.Source
  id: Source
  parent: System.Windows.Documents.DocumentPaginator
  langs:
  - csharp
  name: Source
  nameWithType: DocumentPaginator.Source
  fullName: System.Windows.Documents.DocumentPaginator.Source
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Documents
  summary: "When overridden in a derived class, returns the element being paginated."
  remarks: "The object returned has this <xref:System.Windows.Documents.DocumentPaginator> as the value of its <xref:System.Windows.Documents.IDocumentPaginatorSource.DocumentPaginator%2A> property. It is guaranteed to have such a property because it implements <xref:System.Windows.Documents.IDocumentPaginatorSource>."
  syntax:
    content: public abstract System.Windows.Documents.IDocumentPaginatorSource Source { get; }
    return:
      type: System.Windows.Documents.IDocumentPaginatorSource
      description: "An <xref href=&quot;System.Windows.Documents.IDocumentPaginatorSource&quot;></xref> representing the element being paginated."
  overload: System.Windows.Documents.DocumentPaginator.Source*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Windows.Documents.DocumentPaginator.#ctor
  parent: System.Windows.Documents.DocumentPaginator
  isExternal: false
  name: DocumentPaginator()
  nameWithType: DocumentPaginator.DocumentPaginator()
  fullName: System.Windows.Documents.DocumentPaginator.DocumentPaginator()
- uid: System.Windows.Documents.DocumentPaginator.CancelAsync(System.Object)
  parent: System.Windows.Documents.DocumentPaginator
  isExternal: false
  name: CancelAsync(Object)
  nameWithType: DocumentPaginator.CancelAsync(Object)
  fullName: System.Windows.Documents.DocumentPaginator.CancelAsync(Object)
- uid: System.Windows.Documents.DocumentPaginator.ComputePageCount
  parent: System.Windows.Documents.DocumentPaginator
  isExternal: false
  name: ComputePageCount()
  nameWithType: DocumentPaginator.ComputePageCount()
  fullName: System.Windows.Documents.DocumentPaginator.ComputePageCount()
- uid: System.Windows.Documents.DocumentPaginator.ComputePageCountAsync
  parent: System.Windows.Documents.DocumentPaginator
  isExternal: false
  name: ComputePageCountAsync()
  nameWithType: DocumentPaginator.ComputePageCountAsync()
  fullName: System.Windows.Documents.DocumentPaginator.ComputePageCountAsync()
- uid: System.Windows.Documents.DocumentPaginator.ComputePageCountAsync(System.Object)
  parent: System.Windows.Documents.DocumentPaginator
  isExternal: false
  name: ComputePageCountAsync(Object)
  nameWithType: DocumentPaginator.ComputePageCountAsync(Object)
  fullName: System.Windows.Documents.DocumentPaginator.ComputePageCountAsync(Object)
- uid: System.Windows.Documents.DocumentPaginator.ComputePageCountCompleted
  parent: System.Windows.Documents.DocumentPaginator
  isExternal: false
  name: ComputePageCountCompleted
  nameWithType: DocumentPaginator.ComputePageCountCompleted
  fullName: System.Windows.Documents.DocumentPaginator.ComputePageCountCompleted
- uid: System.ComponentModel.AsyncCompletedEventHandler
  parent: System.ComponentModel
  isExternal: true
  name: AsyncCompletedEventHandler
  nameWithType: AsyncCompletedEventHandler
  fullName: System.ComponentModel.AsyncCompletedEventHandler
- uid: System.Windows.Documents.DocumentPaginator.GetPage(System.Int32)
  parent: System.Windows.Documents.DocumentPaginator
  isExternal: false
  name: GetPage(Int32)
  nameWithType: DocumentPaginator.GetPage(Int32)
  fullName: System.Windows.Documents.DocumentPaginator.GetPage(Int32)
- uid: System.Windows.Documents.DocumentPage
  parent: System.Windows.Documents
  isExternal: false
  name: DocumentPage
  nameWithType: DocumentPage
  fullName: System.Windows.Documents.DocumentPage
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32)
  parent: System.Windows.Documents.DocumentPaginator
  isExternal: false
  name: GetPageAsync(Int32)
  nameWithType: DocumentPaginator.GetPageAsync(Int32)
  fullName: System.Windows.Documents.DocumentPaginator.GetPageAsync(Int32)
- uid: System.Windows.Documents.DocumentPaginator.GetPageAsync(System.Int32,System.Object)
  parent: System.Windows.Documents.DocumentPaginator
  isExternal: false
  name: GetPageAsync(Int32,Object)
  nameWithType: DocumentPaginator.GetPageAsync(Int32,Object)
  fullName: System.Windows.Documents.DocumentPaginator.GetPageAsync(Int32,Object)
- uid: System.Windows.Documents.DocumentPaginator.GetPageCompleted
  parent: System.Windows.Documents.DocumentPaginator
  isExternal: false
  name: GetPageCompleted
  nameWithType: DocumentPaginator.GetPageCompleted
  fullName: System.Windows.Documents.DocumentPaginator.GetPageCompleted
- uid: System.Windows.Documents.GetPageCompletedEventHandler
  parent: System.Windows.Documents
  isExternal: false
  name: GetPageCompletedEventHandler
  nameWithType: GetPageCompletedEventHandler
  fullName: System.Windows.Documents.GetPageCompletedEventHandler
- uid: System.Windows.Documents.DocumentPaginator.IsPageCountValid
  parent: System.Windows.Documents.DocumentPaginator
  isExternal: false
  name: IsPageCountValid
  nameWithType: DocumentPaginator.IsPageCountValid
  fullName: System.Windows.Documents.DocumentPaginator.IsPageCountValid
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Documents.DocumentPaginator.OnComputePageCountCompleted(System.ComponentModel.AsyncCompletedEventArgs)
  parent: System.Windows.Documents.DocumentPaginator
  isExternal: false
  name: OnComputePageCountCompleted(AsyncCompletedEventArgs)
  nameWithType: DocumentPaginator.OnComputePageCountCompleted(AsyncCompletedEventArgs)
  fullName: System.Windows.Documents.DocumentPaginator.OnComputePageCountCompleted(AsyncCompletedEventArgs)
- uid: System.ComponentModel.AsyncCompletedEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: AsyncCompletedEventArgs
  nameWithType: AsyncCompletedEventArgs
  fullName: System.ComponentModel.AsyncCompletedEventArgs
- uid: System.Windows.Documents.DocumentPaginator.OnGetPageCompleted(System.Windows.Documents.GetPageCompletedEventArgs)
  parent: System.Windows.Documents.DocumentPaginator
  isExternal: false
  name: OnGetPageCompleted(GetPageCompletedEventArgs)
  nameWithType: DocumentPaginator.OnGetPageCompleted(GetPageCompletedEventArgs)
  fullName: System.Windows.Documents.DocumentPaginator.OnGetPageCompleted(GetPageCompletedEventArgs)
- uid: System.Windows.Documents.GetPageCompletedEventArgs
  parent: System.Windows.Documents
  isExternal: false
  name: GetPageCompletedEventArgs
  nameWithType: GetPageCompletedEventArgs
  fullName: System.Windows.Documents.GetPageCompletedEventArgs
- uid: System.Windows.Documents.DocumentPaginator.OnPagesChanged(System.Windows.Documents.PagesChangedEventArgs)
  parent: System.Windows.Documents.DocumentPaginator
  isExternal: false
  name: OnPagesChanged(PagesChangedEventArgs)
  nameWithType: DocumentPaginator.OnPagesChanged(PagesChangedEventArgs)
  fullName: System.Windows.Documents.DocumentPaginator.OnPagesChanged(PagesChangedEventArgs)
- uid: System.Windows.Documents.PagesChangedEventArgs
  parent: System.Windows.Documents
  isExternal: false
  name: PagesChangedEventArgs
  nameWithType: PagesChangedEventArgs
  fullName: System.Windows.Documents.PagesChangedEventArgs
- uid: System.Windows.Documents.DocumentPaginator.PageCount
  parent: System.Windows.Documents.DocumentPaginator
  isExternal: false
  name: PageCount
  nameWithType: DocumentPaginator.PageCount
  fullName: System.Windows.Documents.DocumentPaginator.PageCount
- uid: System.Windows.Documents.DocumentPaginator.PagesChanged
  parent: System.Windows.Documents.DocumentPaginator
  isExternal: false
  name: PagesChanged
  nameWithType: DocumentPaginator.PagesChanged
  fullName: System.Windows.Documents.DocumentPaginator.PagesChanged
- uid: System.Windows.Documents.PagesChangedEventHandler
  parent: System.Windows.Documents
  isExternal: false
  name: PagesChangedEventHandler
  nameWithType: PagesChangedEventHandler
  fullName: System.Windows.Documents.PagesChangedEventHandler
- uid: System.Windows.Documents.DocumentPaginator.PageSize
  parent: System.Windows.Documents.DocumentPaginator
  isExternal: false
  name: PageSize
  nameWithType: DocumentPaginator.PageSize
  fullName: System.Windows.Documents.DocumentPaginator.PageSize
- uid: System.Windows.Size
  parent: System.Windows
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Windows.Size
- uid: System.Windows.Documents.DocumentPaginator.Source
  parent: System.Windows.Documents.DocumentPaginator
  isExternal: false
  name: Source
  nameWithType: DocumentPaginator.Source
  fullName: System.Windows.Documents.DocumentPaginator.Source
- uid: System.Windows.Documents.IDocumentPaginatorSource
  parent: System.Windows.Documents
  isExternal: false
  name: IDocumentPaginatorSource
  nameWithType: IDocumentPaginatorSource
  fullName: System.Windows.Documents.IDocumentPaginatorSource
- uid: System.Windows.Documents.DocumentPaginator.#ctor*
  parent: System.Windows.Documents.DocumentPaginator
  isExternal: false
  name: DocumentPaginator
  nameWithType: DocumentPaginator.DocumentPaginator
- uid: System.Windows.Documents.DocumentPaginator.CancelAsync*
  parent: System.Windows.Documents.DocumentPaginator
  isExternal: false
  name: CancelAsync
  nameWithType: DocumentPaginator.CancelAsync
- uid: System.Windows.Documents.DocumentPaginator.ComputePageCount*
  parent: System.Windows.Documents.DocumentPaginator
  isExternal: false
  name: ComputePageCount
  nameWithType: DocumentPaginator.ComputePageCount
- uid: System.Windows.Documents.DocumentPaginator.ComputePageCountAsync*
  parent: System.Windows.Documents.DocumentPaginator
  isExternal: false
  name: ComputePageCountAsync
  nameWithType: DocumentPaginator.ComputePageCountAsync
- uid: System.Windows.Documents.DocumentPaginator.GetPage*
  parent: System.Windows.Documents.DocumentPaginator
  isExternal: false
  name: GetPage
  nameWithType: DocumentPaginator.GetPage
- uid: System.Windows.Documents.DocumentPaginator.GetPageAsync*
  parent: System.Windows.Documents.DocumentPaginator
  isExternal: false
  name: GetPageAsync
  nameWithType: DocumentPaginator.GetPageAsync
- uid: System.Windows.Documents.DocumentPaginator.IsPageCountValid*
  parent: System.Windows.Documents.DocumentPaginator
  isExternal: false
  name: IsPageCountValid
  nameWithType: DocumentPaginator.IsPageCountValid
- uid: System.Windows.Documents.DocumentPaginator.OnComputePageCountCompleted*
  parent: System.Windows.Documents.DocumentPaginator
  isExternal: false
  name: OnComputePageCountCompleted
  nameWithType: DocumentPaginator.OnComputePageCountCompleted
- uid: System.Windows.Documents.DocumentPaginator.OnGetPageCompleted*
  parent: System.Windows.Documents.DocumentPaginator
  isExternal: false
  name: OnGetPageCompleted
  nameWithType: DocumentPaginator.OnGetPageCompleted
- uid: System.Windows.Documents.DocumentPaginator.OnPagesChanged*
  parent: System.Windows.Documents.DocumentPaginator
  isExternal: false
  name: OnPagesChanged
  nameWithType: DocumentPaginator.OnPagesChanged
- uid: System.Windows.Documents.DocumentPaginator.PageCount*
  parent: System.Windows.Documents.DocumentPaginator
  isExternal: false
  name: PageCount
  nameWithType: DocumentPaginator.PageCount
- uid: System.Windows.Documents.DocumentPaginator.PageSize*
  parent: System.Windows.Documents.DocumentPaginator
  isExternal: false
  name: PageSize
  nameWithType: DocumentPaginator.PageSize
- uid: System.Windows.Documents.DocumentPaginator.Source*
  parent: System.Windows.Documents.DocumentPaginator
  isExternal: false
  name: Source
  nameWithType: DocumentPaginator.Source
