### YamlMime:ManagedReference
items:
- uid: System.Activities.Activity
  id: Activity
  children:
  - System.Activities.Activity.#ctor
  - System.Activities.Activity.CacheId
  - System.Activities.Activity.CacheMetadata(System.Activities.ActivityMetadata)
  - System.Activities.Activity.Constraints
  - System.Activities.Activity.DisplayName
  - System.Activities.Activity.Id
  - System.Activities.Activity.Implementation
  - System.Activities.Activity.ImplementationVersion
  - System.Activities.Activity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)
  - System.Activities.Activity.ShouldSerializeDisplayName
  - System.Activities.Activity.ToString
  langs:
  - csharp
  name: Activity
  nameWithType: Activity
  fullName: System.Activities.Activity
  type: Class
  summary: "Uma classe base abstrata utilizada para criar atividades compostas partir pré-existente objetos de atividade."
  remarks: "Atividade é a classe base na hierarquia de tipo de atividade. Tipos de todas as outras atividades como <xref:System.Activities.CodeActivity>, <xref:System.Activities.NativeActivity>, <xref:System.Activities.AsyncCodeActivity>, <xref:System.Activities.DynamicActivity>e <xref:System.Activities.ActivityWithResult>deriva esta classe.</xref:System.Activities.ActivityWithResult> </xref:System.Activities.DynamicActivity> </xref:System.Activities.AsyncCodeActivity> </xref:System.Activities.NativeActivity> </xref:System.Activities.CodeActivity>"
  example:
  - "The following example shows a simple implementation of an Activity derived class.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("Implementation")]

      public abstract class Activity
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.Activity.#ctor
  id: '#ctor'
  parent: System.Activities.Activity
  langs:
  - csharp
  name: Activity()
  nameWithType: Activity.Activity()
  fullName: System.Activities.Activity.Activity()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Activities.Activity&quot;> </xref> classe."
  syntax:
    content: protected Activity ();
    parameters: []
  overload: System.Activities.Activity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Activity.CacheId
  id: CacheId
  parent: System.Activities.Activity
  langs:
  - csharp
  name: CacheId
  nameWithType: Activity.CacheId
  fullName: System.Activities.Activity.CacheId
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Obtém o identificador da cache que seja exclusivo no âmbito da definição de fluxo de trabalho."
  syntax:
    content: protected int CacheId { get; }
    return:
      type: System.Int32
      description: "O identificador da cache que seja exclusivo no âmbito da definição de fluxo de trabalho."
  overload: System.Activities.Activity.CacheId*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Activity.CacheMetadata(System.Activities.ActivityMetadata)
  id: CacheMetadata(System.Activities.ActivityMetadata)
  parent: System.Activities.Activity
  langs:
  - csharp
  name: CacheMetadata(ActivityMetadata)
  nameWithType: Activity.CacheMetadata(ActivityMetadata)
  fullName: System.Activities.Activity.CacheMetadata(ActivityMetadata)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Cria e valida uma descrição de argumentos da atividade, variáveis, atividades subordinadas e delegado de atividade."
  remarks: "O tempo de execução do fluxo de trabalho utiliza a implementação predefinida do CacheMetadata para assegurar a construção correta de um fluxo de trabalho, bem como gerir relações de tempo de execução e as regras de duração. A implementação predefinida do CacheMetadata examina as propriedades do tipo de atividade com o tipo <xref:System.ComponentModel.TypeDescriptor>.</xref:System.ComponentModel.TypeDescriptor> públicas Estes membros públicos são do tipo <xref:System.Activities.Argument>, <xref:System.Activities.Variable>, [T:System.Collections.Generic.IEnumerable\\<T:System.Activities.Variable >](~/add/includes/ajax-current-ext-md.md), <xref:System.Activities.Activity>, [T:System.Collections.Generic.IEnumerable\\<T:System.Activities.Activity >](~/add/includes/ajax-current-ext-md.md), ou <xref:System.Activities.ActivityDelegate>.</xref:System.Activities.ActivityDelegate> </xref:System.Activities.Activity> </xref:System.Activities.Variable> </xref:System.Activities.Argument> Pode substituir este método para personalizar a criação da descrição de tempo de execução da atividade e fornecer a lógica de validação personalizado."
  syntax:
    content: protected virtual void CacheMetadata (System.Activities.ActivityMetadata metadata);
    parameters:
    - id: metadata
      type: System.Activities.ActivityMetadata
      description: "Metadados da atividade que encapsula argumentos da atividade, variáveis, atividades subordinadas e delegado de atividade."
  overload: System.Activities.Activity.CacheMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Activity.Constraints
  id: Constraints
  parent: System.Activities.Activity
  langs:
  - csharp
  name: Constraints
  nameWithType: Activity.Constraints
  fullName: System.Activities.Activity.Constraints
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Obtém uma coleção de <xref href=&quot;System.Activities.Validation.Constraint&quot;> </xref> atividades que podem ser configuradas para fornecer a validação para o <xref href=&quot;System.Activities.Activity&quot;> </xref>."
  syntax:
    content: protected System.Collections.ObjectModel.Collection<System.Activities.Validation.Constraint> Constraints { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Activities.Validation.Constraint}
      description: "A coleção de restrições."
  overload: System.Activities.Activity.Constraints*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Activity.DisplayName
  id: DisplayName
  parent: System.Activities.Activity
  langs:
  - csharp
  name: DisplayName
  nameWithType: Activity.DisplayName
  fullName: System.Activities.Activity.DisplayName
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Obtém ou define um nome amigável opcional que é utilizado para depuração, validação, processamento de exceções e controlo."
  remarks: "Esta propriedade é só de leitura no tempo de execução."
  syntax:
    content: public string DisplayName { get; set; }
    return:
      type: System.String
      description: "Um nome amigável que é utilizado para depuração, validação, processamento de exceções e controlo."
  overload: System.Activities.Activity.DisplayName*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Activity.Id
  id: Id
  parent: System.Activities.Activity
  langs:
  - csharp
  name: Id
  nameWithType: Activity.Id
  fullName: System.Activities.Activity.Id
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Obtém um identificador que seja exclusivo no âmbito da definição de fluxo de trabalho."
  remarks: "ID é utilizado no controlo e a validação."
  syntax:
    content: public string Id { get; }
    return:
      type: System.String
      description: "Um identificador que seja exclusivo no âmbito da definição de fluxo de trabalho."
  overload: System.Activities.Activity.Id*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Activity.Implementation
  id: Implementation
  parent: System.Activities.Activity
  langs:
  - csharp
  name: Implementation
  nameWithType: Activity.Implementation
  fullName: System.Activities.Activity.Implementation
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Obtém ou define o delegado que devolva uma <xref href=&quot;System.Activities.Activity&quot;> </xref> que contém a lógica de execução."
  remarks: "A lógica de execução pode ser implementada como vários objetos de atividade descendentes contendo-os numa atividade Sequence ou outra atividade composta."
  syntax:
    content: protected virtual Func<System.Activities.Activity> Implementation { get; set; }
    return:
      type: System.Func{System.Activities.Activity}
      description: "O delegado que contém a lógica de execução."
  overload: System.Activities.Activity.Implementation*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Activity.ImplementationVersion
  id: ImplementationVersion
  parent: System.Activities.Activity
  langs:
  - csharp
  name: ImplementationVersion
  nameWithType: Activity.ImplementationVersion
  fullName: System.Activities.Activity.ImplementationVersion
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Obtém ou define a versão de implementação utilizada."
  syntax:
    content: protected virtual Version ImplementationVersion { get; set; }
    return:
      type: System.Version
      description: "A versão da implementação"
  overload: System.Activities.Activity.ImplementationVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Activity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)
  id: OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)
  parent: System.Activities.Activity
  langs:
  - csharp
  name: OnCreateDynamicUpdateMap(UpdateMapMetadata,Activity)
  nameWithType: Activity.OnCreateDynamicUpdateMap(UpdateMapMetadata,Activity)
  fullName: System.Activities.Activity.OnCreateDynamicUpdateMap(UpdateMapMetadata,Activity)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Gera um evento quando criar o mapa de atualização dinâmica."
  syntax:
    content: protected virtual void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.UpdateMapMetadata metadata, System.Activities.Activity originalActivity);
    parameters:
    - id: metadata
      type: System.Activities.DynamicUpdate.UpdateMapMetadata
      description: "Os metadados utilizado."
    - id: originalActivity
      type: System.Activities.Activity
      description: "A atividade original."
  overload: System.Activities.Activity.OnCreateDynamicUpdateMap*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Activity.ShouldSerializeDisplayName
  id: ShouldSerializeDisplayName
  parent: System.Activities.Activity
  langs:
  - csharp
  name: ShouldSerializeDisplayName()
  nameWithType: Activity.ShouldSerializeDisplayName()
  fullName: System.Activities.Activity.ShouldSerializeDisplayName()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Indica se o <xref:System.Activities.Activity.DisplayName*>propriedade deverá ser serializada.</xref:System.Activities.Activity.DisplayName*>"
  syntax:
    content: public bool ShouldSerializeDisplayName ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Activities.Activity.DisplayName*>valor da propriedade deve ser serializada; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Activities.Activity.DisplayName*>"
  overload: System.Activities.Activity.ShouldSerializeDisplayName*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Activity.ToString
  id: ToString
  parent: System.Activities.Activity
  langs:
  - csharp
  name: ToString()
  nameWithType: Activity.ToString()
  fullName: System.Activities.Activity.ToString()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Devolve um <xref:System.String>que contém o <> </> *> e <> </> *> do <xref href=&quot;System.Activities.Activity&quot;> </xref>.</xref:System.String>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "O ID e o nome a apresentar da atividade."
  overload: System.Activities.Activity.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Activities.Activity.#ctor
  parent: System.Activities.Activity
  isExternal: false
  name: Activity()
  nameWithType: Activity.Activity()
  fullName: System.Activities.Activity.Activity()
- uid: System.Activities.Activity.CacheId
  parent: System.Activities.Activity
  isExternal: false
  name: CacheId
  nameWithType: Activity.CacheId
  fullName: System.Activities.Activity.CacheId
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Activities.Activity.CacheMetadata(System.Activities.ActivityMetadata)
  parent: System.Activities.Activity
  isExternal: false
  name: CacheMetadata(ActivityMetadata)
  nameWithType: Activity.CacheMetadata(ActivityMetadata)
  fullName: System.Activities.Activity.CacheMetadata(ActivityMetadata)
- uid: System.Activities.ActivityMetadata
  parent: System.Activities
  isExternal: false
  name: ActivityMetadata
  nameWithType: ActivityMetadata
  fullName: System.Activities.ActivityMetadata
- uid: System.Activities.Activity.Constraints
  parent: System.Activities.Activity
  isExternal: false
  name: Constraints
  nameWithType: Activity.Constraints
  fullName: System.Activities.Activity.Constraints
- uid: System.Collections.ObjectModel.Collection{System.Activities.Validation.Constraint}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<Constraint>
  nameWithType: Collection<Constraint>
  fullName: System.Collections.ObjectModel.Collection<System.Activities.Validation.Constraint>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Activities.Validation.Constraint>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Validation.Constraint
    name: Constraint
    nameWithType: Constraint
    fullName: Constraint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Activity.DisplayName
  parent: System.Activities.Activity
  isExternal: false
  name: DisplayName
  nameWithType: Activity.DisplayName
  fullName: System.Activities.Activity.DisplayName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.Activity.Id
  parent: System.Activities.Activity
  isExternal: false
  name: Id
  nameWithType: Activity.Id
  fullName: System.Activities.Activity.Id
- uid: System.Activities.Activity.Implementation
  parent: System.Activities.Activity
  isExternal: false
  name: Implementation
  nameWithType: Activity.Implementation
  fullName: System.Activities.Activity.Implementation
- uid: System.Func{System.Activities.Activity}
  parent: System
  isExternal: true
  name: Func<Activity>
  nameWithType: Func<Activity>
  fullName: System.Func<System.Activities.Activity>
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: Func<System.Activities.Activity>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Activity
    name: Activity
    nameWithType: Activity
    fullName: Activity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Activity.ImplementationVersion
  parent: System.Activities.Activity
  isExternal: false
  name: ImplementationVersion
  nameWithType: Activity.ImplementationVersion
  fullName: System.Activities.Activity.ImplementationVersion
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Activities.Activity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)
  parent: System.Activities.Activity
  isExternal: false
  name: OnCreateDynamicUpdateMap(UpdateMapMetadata,Activity)
  nameWithType: Activity.OnCreateDynamicUpdateMap(UpdateMapMetadata,Activity)
  fullName: System.Activities.Activity.OnCreateDynamicUpdateMap(UpdateMapMetadata,Activity)
- uid: System.Activities.DynamicUpdate.UpdateMapMetadata
  parent: System.Activities.DynamicUpdate
  isExternal: false
  name: UpdateMapMetadata
  nameWithType: UpdateMapMetadata
  fullName: System.Activities.DynamicUpdate.UpdateMapMetadata
- uid: System.Activities.Activity
  parent: System.Activities
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Activities.Activity
- uid: System.Activities.Activity.ShouldSerializeDisplayName
  parent: System.Activities.Activity
  isExternal: false
  name: ShouldSerializeDisplayName()
  nameWithType: Activity.ShouldSerializeDisplayName()
  fullName: System.Activities.Activity.ShouldSerializeDisplayName()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.Activity.ToString
  parent: System.Activities.Activity
  isExternal: false
  name: ToString()
  nameWithType: Activity.ToString()
  fullName: System.Activities.Activity.ToString()
- uid: System.Activities.Activity.#ctor*
  parent: System.Activities.Activity
  isExternal: false
  name: Activity
  nameWithType: Activity.Activity
- uid: System.Activities.Activity.CacheId*
  parent: System.Activities.Activity
  isExternal: false
  name: CacheId
  nameWithType: Activity.CacheId
- uid: System.Activities.Activity.CacheMetadata*
  parent: System.Activities.Activity
  isExternal: false
  name: CacheMetadata
  nameWithType: Activity.CacheMetadata
- uid: System.Activities.Activity.Constraints*
  parent: System.Activities.Activity
  isExternal: false
  name: Constraints
  nameWithType: Activity.Constraints
- uid: System.Activities.Activity.DisplayName*
  parent: System.Activities.Activity
  isExternal: false
  name: DisplayName
  nameWithType: Activity.DisplayName
- uid: System.Activities.Activity.Id*
  parent: System.Activities.Activity
  isExternal: false
  name: Id
  nameWithType: Activity.Id
- uid: System.Activities.Activity.Implementation*
  parent: System.Activities.Activity
  isExternal: false
  name: Implementation
  nameWithType: Activity.Implementation
- uid: System.Activities.Activity.ImplementationVersion*
  parent: System.Activities.Activity
  isExternal: false
  name: ImplementationVersion
  nameWithType: Activity.ImplementationVersion
- uid: System.Activities.Activity.OnCreateDynamicUpdateMap*
  parent: System.Activities.Activity
  isExternal: false
  name: OnCreateDynamicUpdateMap
  nameWithType: Activity.OnCreateDynamicUpdateMap
- uid: System.Activities.Activity.ShouldSerializeDisplayName*
  parent: System.Activities.Activity
  isExternal: false
  name: ShouldSerializeDisplayName
  nameWithType: Activity.ShouldSerializeDisplayName
- uid: System.Activities.Activity.ToString*
  parent: System.Activities.Activity
  isExternal: false
  name: ToString
  nameWithType: Activity.ToString
