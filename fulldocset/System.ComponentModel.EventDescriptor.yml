### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.EventDescriptor
  id: EventDescriptor
  children:
  - System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor)
  - System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])
  - System.ComponentModel.EventDescriptor.#ctor(System.String,System.Attribute[])
  - System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)
  - System.ComponentModel.EventDescriptor.ComponentType
  - System.ComponentModel.EventDescriptor.EventType
  - System.ComponentModel.EventDescriptor.IsMulticast
  - System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)
  langs:
  - csharp
  name: EventDescriptor
  nameWithType: EventDescriptor
  fullName: System.ComponentModel.EventDescriptor
  type: Class
  summary: "Provides information about an event."
  remarks: "An EventDescriptor consists of a name, its attributes, the component that the event is bound to, the event delegate, the type of delegate, and whether the delegate is multicast.       EventDescriptor provides the following `abstract` properties and methods:      -   <xref:System.ComponentModel.EventDescriptor.ComponentType%2A> contains the type of the component this event is declared on.      -   <xref:System.ComponentModel.EventDescriptor.EventType%2A> contains the type of delegate for the event.      -   <xref:System.ComponentModel.EventDescriptor.IsMulticast%2A> contains a value indicating whether the event delegate is a multicast delegate.      -   <xref:System.ComponentModel.EventDescriptor.AddEventHandler%2A> binds the event to a component.      -   <xref:System.ComponentModel.EventDescriptor.RemoveEventHandler%2A> unbinds the delegate from the component so that the delegate no longer receives events from the component.       For more information about events, see [NIB: Raising an Event](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2). For more information about reflection, see the topics in [Reflection](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example is built upon the example in the <xref:System.ComponentModel.EventDescriptorCollection> class. It prints the information (category, description, and display name) of each event on a button in a text box. It requires that `button1` and `textbox1` have been instantiated on a form.  \n  \n [!code-cpp[EventDescriptor#1](~/add/codesnippet/cpp/t-system.componentmodel._26_1.cpp)]\n [!code-cs[EventDescriptor#1](~/add/codesnippet/csharp/t-system.componentmodel._26_1.cs)]\n [!code-vb[EventDescriptor#1](~/add/codesnippet/visualbasic/t-system.componentmodel._26_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class EventDescriptor : System.ComponentModel.MemberDescriptor
  inheritance:
  - System.Object
  - System.ComponentModel.MemberDescriptor
  implements: []
  inheritedMembers:
  - System.ComponentModel.MemberDescriptor.AttributeArray
  - System.ComponentModel.MemberDescriptor.Attributes
  - System.ComponentModel.MemberDescriptor.Category
  - System.ComponentModel.MemberDescriptor.CreateAttributeCollection
  - System.ComponentModel.MemberDescriptor.Description
  - System.ComponentModel.MemberDescriptor.DesignTimeOnly
  - System.ComponentModel.MemberDescriptor.DisplayName
  - System.ComponentModel.MemberDescriptor.Equals(System.Object)
  - System.ComponentModel.MemberDescriptor.FillAttributes(System.Collections.IList)
  - System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)
  - System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)
  - System.ComponentModel.MemberDescriptor.GetHashCode
  - System.ComponentModel.MemberDescriptor.GetInvocationTarget(System.Type,System.Object)
  - System.ComponentModel.MemberDescriptor.GetInvokee(System.Type,System.Object)
  - System.ComponentModel.MemberDescriptor.GetSite(System.Object)
  - System.ComponentModel.MemberDescriptor.IsBrowsable
  - System.ComponentModel.MemberDescriptor.Name
  - System.ComponentModel.MemberDescriptor.NameHashCode
  platform:
  - net462
- uid: System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor)
  id: '#ctor(System.ComponentModel.MemberDescriptor)'
  parent: System.ComponentModel.EventDescriptor
  langs:
  - csharp
  name: EventDescriptor(MemberDescriptor)
  nameWithType: EventDescriptor.EventDescriptor(MemberDescriptor)
  fullName: System.ComponentModel.EventDescriptor.EventDescriptor(MemberDescriptor)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Initializes a new instance of the <xref href=&quot;System.ComponentModel.EventDescriptor&quot;></xref> class with the name and attributes in the specified <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;></xref>."
  syntax:
    content: protected EventDescriptor (System.ComponentModel.MemberDescriptor descr);
    parameters:
    - id: descr
      type: System.ComponentModel.MemberDescriptor
      description: "A <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;></xref> that contains the name of the event and its attributes."
  overload: System.ComponentModel.EventDescriptor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])
  id: '#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])'
  parent: System.ComponentModel.EventDescriptor
  langs:
  - csharp
  name: EventDescriptor(MemberDescriptor,Attribute[])
  nameWithType: EventDescriptor.EventDescriptor(MemberDescriptor,Attribute[])
  fullName: System.ComponentModel.EventDescriptor.EventDescriptor(MemberDescriptor,Attribute[])
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Initializes a new instance of the <xref href=&quot;System.ComponentModel.EventDescriptor&quot;></xref> class with the name in the specified <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;></xref> and the attributes in both the <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;></xref> and the <xref:System.Attribute> array."
  remarks: "This constructor appends the attributes in the <xref:System.Attribute> array to the attributes in the <xref:System.ComponentModel.MemberDescriptor>."
  syntax:
    content: protected EventDescriptor (System.ComponentModel.MemberDescriptor descr, Attribute[] attrs);
    parameters:
    - id: descr
      type: System.ComponentModel.MemberDescriptor
      description: "A <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;></xref> that has the name of the member and its attributes."
    - id: attrs
      type: System.Attribute[]
      description: "An <xref:System.Attribute> array with the attributes you want to add to this event description."
  overload: System.ComponentModel.EventDescriptor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EventDescriptor.#ctor(System.String,System.Attribute[])
  id: '#ctor(System.String,System.Attribute[])'
  parent: System.ComponentModel.EventDescriptor
  langs:
  - csharp
  name: EventDescriptor(String,Attribute[])
  nameWithType: EventDescriptor.EventDescriptor(String,Attribute[])
  fullName: System.ComponentModel.EventDescriptor.EventDescriptor(String,Attribute[])
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Initializes a new instance of the <xref href=&quot;System.ComponentModel.EventDescriptor&quot;></xref> class with the specified name and attribute array."
  syntax:
    content: protected EventDescriptor (string name, Attribute[] attrs);
    parameters:
    - id: name
      type: System.String
      description: "The name of the event."
    - id: attrs
      type: System.Attribute[]
      description: "An array of type <xref:System.Attribute> that contains the event attributes."
  overload: System.ComponentModel.EventDescriptor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)
  id: AddEventHandler(System.Object,System.Delegate)
  parent: System.ComponentModel.EventDescriptor
  langs:
  - csharp
  name: AddEventHandler(Object,Delegate)
  nameWithType: EventDescriptor.AddEventHandler(Object,Delegate)
  fullName: System.ComponentModel.EventDescriptor.AddEventHandler(Object,Delegate)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "When overridden in a derived class, binds the event to the component."
  remarks: "Typically, this method is implemented through reflection. For more information about reflection, see the topics in [Reflection](~/add/includes/ajax-current-ext-md.md).       For more information about delegates, see [NIB: Events and Delegates](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)."
  syntax:
    content: public abstract void AddEventHandler (object component, Delegate value);
    parameters:
    - id: component
      type: System.Object
      description: "A component that provides events to the delegate."
    - id: value
      type: System.Delegate
      description: "A delegate that represents the method that handles the event."
  overload: System.ComponentModel.EventDescriptor.AddEventHandler*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EventDescriptor.ComponentType
  id: ComponentType
  parent: System.ComponentModel.EventDescriptor
  langs:
  - csharp
  name: ComponentType
  nameWithType: EventDescriptor.ComponentType
  fullName: System.ComponentModel.EventDescriptor.ComponentType
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "When overridden in a derived class, gets the type of component this event is bound to."
  remarks: "Typically, this property is implemented through reflection."
  syntax:
    content: public abstract Type ComponentType { get; }
    return:
      type: System.Type
      description: "A <xref:System.Type> that represents the type of component the event is bound to."
  overload: System.ComponentModel.EventDescriptor.ComponentType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EventDescriptor.EventType
  id: EventType
  parent: System.ComponentModel.EventDescriptor
  langs:
  - csharp
  name: EventType
  nameWithType: EventDescriptor.EventType
  fullName: System.ComponentModel.EventDescriptor.EventType
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "When overridden in a derived class, gets the type of delegate for the event."
  remarks: "Typically, this property is implemented through reflection."
  syntax:
    content: public abstract Type EventType { get; }
    return:
      type: System.Type
      description: "A <xref:System.Type> that represents the type of delegate for the event."
  overload: System.ComponentModel.EventDescriptor.EventType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EventDescriptor.IsMulticast
  id: IsMulticast
  parent: System.ComponentModel.EventDescriptor
  langs:
  - csharp
  name: IsMulticast
  nameWithType: EventDescriptor.IsMulticast
  fullName: System.ComponentModel.EventDescriptor.IsMulticast
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "When overridden in a derived class, gets a value indicating whether the event delegate is a multicast delegate."
  remarks: "Typically, this property is implemented through reflection.       A multicast delegate differs from a regular delegate in that it can contain references to more than just one method. Methods in a multicast delegate are executed synchronously when the delegate is invoked, in the order in which they appear. If one of the called methods raises an exception, then the delegate ceases and the exception is propagated to the delegate caller."
  syntax:
    content: public abstract bool IsMulticast { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the event delegate is multicast; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ComponentModel.EventDescriptor.IsMulticast*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)
  id: RemoveEventHandler(System.Object,System.Delegate)
  parent: System.ComponentModel.EventDescriptor
  langs:
  - csharp
  name: RemoveEventHandler(Object,Delegate)
  nameWithType: EventDescriptor.RemoveEventHandler(Object,Delegate)
  fullName: System.ComponentModel.EventDescriptor.RemoveEventHandler(Object,Delegate)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "When overridden in a derived class, unbinds the delegate from the component so that the delegate will no longer receive events from the component."
  remarks: "Typically, this method is implemented through reflection. For more information, see the topics in [Reflection](~/add/includes/ajax-current-ext-md.md).       For more information about delegates, see [NIB: Events and Delegates](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)."
  syntax:
    content: public abstract void RemoveEventHandler (object component, Delegate value);
    parameters:
    - id: component
      type: System.Object
      description: "The component that the delegate is bound to."
    - id: value
      type: System.Delegate
      description: "The delegate to unbind from the component."
  overload: System.ComponentModel.EventDescriptor.RemoveEventHandler*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: System.ComponentModel.MemberDescriptor
- uid: System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor)
  parent: System.ComponentModel.EventDescriptor
  isExternal: false
  name: EventDescriptor(MemberDescriptor)
  nameWithType: EventDescriptor.EventDescriptor(MemberDescriptor)
  fullName: System.ComponentModel.EventDescriptor.EventDescriptor(MemberDescriptor)
- uid: System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])
  parent: System.ComponentModel.EventDescriptor
  isExternal: false
  name: EventDescriptor(MemberDescriptor,Attribute[])
  nameWithType: EventDescriptor.EventDescriptor(MemberDescriptor,Attribute[])
  fullName: System.ComponentModel.EventDescriptor.EventDescriptor(MemberDescriptor,Attribute[])
- uid: System.Attribute[]
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute[]
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.EventDescriptor.#ctor(System.String,System.Attribute[])
  parent: System.ComponentModel.EventDescriptor
  isExternal: false
  name: EventDescriptor(String,Attribute[])
  nameWithType: EventDescriptor.EventDescriptor(String,Attribute[])
  fullName: System.ComponentModel.EventDescriptor.EventDescriptor(String,Attribute[])
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)
  parent: System.ComponentModel.EventDescriptor
  isExternal: false
  name: AddEventHandler(Object,Delegate)
  nameWithType: EventDescriptor.AddEventHandler(Object,Delegate)
  fullName: System.ComponentModel.EventDescriptor.AddEventHandler(Object,Delegate)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Delegate
  parent: System
  isExternal: true
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.ComponentModel.EventDescriptor.ComponentType
  parent: System.ComponentModel.EventDescriptor
  isExternal: false
  name: ComponentType
  nameWithType: EventDescriptor.ComponentType
  fullName: System.ComponentModel.EventDescriptor.ComponentType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.EventDescriptor.EventType
  parent: System.ComponentModel.EventDescriptor
  isExternal: false
  name: EventType
  nameWithType: EventDescriptor.EventType
  fullName: System.ComponentModel.EventDescriptor.EventType
- uid: System.ComponentModel.EventDescriptor.IsMulticast
  parent: System.ComponentModel.EventDescriptor
  isExternal: false
  name: IsMulticast
  nameWithType: EventDescriptor.IsMulticast
  fullName: System.ComponentModel.EventDescriptor.IsMulticast
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)
  parent: System.ComponentModel.EventDescriptor
  isExternal: false
  name: RemoveEventHandler(Object,Delegate)
  nameWithType: EventDescriptor.RemoveEventHandler(Object,Delegate)
  fullName: System.ComponentModel.EventDescriptor.RemoveEventHandler(Object,Delegate)
- uid: System.ComponentModel.EventDescriptor.#ctor*
  parent: System.ComponentModel.EventDescriptor
  isExternal: false
  name: EventDescriptor
  nameWithType: EventDescriptor.EventDescriptor
- uid: System.ComponentModel.EventDescriptor.AddEventHandler*
  parent: System.ComponentModel.EventDescriptor
  isExternal: false
  name: AddEventHandler
  nameWithType: EventDescriptor.AddEventHandler
- uid: System.ComponentModel.EventDescriptor.ComponentType*
  parent: System.ComponentModel.EventDescriptor
  isExternal: false
  name: ComponentType
  nameWithType: EventDescriptor.ComponentType
- uid: System.ComponentModel.EventDescriptor.EventType*
  parent: System.ComponentModel.EventDescriptor
  isExternal: false
  name: EventType
  nameWithType: EventDescriptor.EventType
- uid: System.ComponentModel.EventDescriptor.IsMulticast*
  parent: System.ComponentModel.EventDescriptor
  isExternal: false
  name: IsMulticast
  nameWithType: EventDescriptor.IsMulticast
- uid: System.ComponentModel.EventDescriptor.RemoveEventHandler*
  parent: System.ComponentModel.EventDescriptor
  isExternal: false
  name: RemoveEventHandler
  nameWithType: EventDescriptor.RemoveEventHandler
