### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey
  id: ECDiffieHellmanPublicKey
  children:
  - System.Security.Cryptography.ECDiffieHellmanPublicKey.#ctor(System.Byte[])
  - System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose
  - System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)
  - System.Security.Cryptography.ECDiffieHellmanPublicKey.ToByteArray
  - System.Security.Cryptography.ECDiffieHellmanPublicKey.ToXmlString
  langs:
  - csharp
  name: ECDiffieHellmanPublicKey
  nameWithType: ECDiffieHellmanPublicKey
  fullName: System.Security.Cryptography.ECDiffieHellmanPublicKey
  type: Class
  summary: "Provides an abstract base class from which all <xref href=&quot;System.Security.Cryptography.ECDiffieHellmanCngPublicKey&quot;></xref> implementations must inherit."
  syntax:
    content: 'public abstract class ECDiffieHellmanPublicKey : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.Security.Cryptography.ECDiffieHellmanPublicKey
  langs:
  - csharp
  name: ECDiffieHellmanPublicKey(Byte[])
  nameWithType: ECDiffieHellmanPublicKey.ECDiffieHellmanPublicKey(Byte[])
  fullName: System.Security.Cryptography.ECDiffieHellmanPublicKey.ECDiffieHellmanPublicKey(Byte[])
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Initializes a new instance of the <xref href=&quot;System.Security.Cryptography.ECDiffieHellmanPublicKey&quot;></xref> class."
  remarks: "This constructor is called by classes that derive from the <xref:System.Security.Cryptography.ECDiffieHellmanPublicKey> class. The <xref:System.Security.Cryptography.ECDiffieHellmanCngPublicKey> class is the only currently supported implementation."
  syntax:
    content: protected ECDiffieHellmanPublicKey (byte[] keyBlob);
    parameters:
    - id: keyBlob
      type: System.Byte[]
      description: "A byte array that represents an <xref href=&quot;System.Security.Cryptography.ECDiffieHellmanPublicKey&quot;></xref> object."
  overload: System.Security.Cryptography.ECDiffieHellmanPublicKey.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyBlob</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose
  id: Dispose
  parent: System.Security.Cryptography.ECDiffieHellmanPublicKey
  langs:
  - csharp
  name: Dispose()
  nameWithType: ECDiffieHellmanPublicKey.Dispose()
  fullName: System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Releases all resources used by the current instance of the <xref href=&quot;System.Security.Cryptography.ECDiffieHellman&quot;></xref> class."
  remarks: "Call Dispose when you are finished using the <xref:System.Security.Cryptography.ECDiffieHellman>. The Dispose method leaves the <xref:System.Security.Cryptography.ECDiffieHellman> in an unusable state. After calling Dispose, you must release all references to the <xref:System.Security.Cryptography.ECDiffieHellman> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.ECDiffieHellman> was occupying.       For more information, see [Cleaning Up Unmanaged Resources](~/add/includes/ajax-current-ext-md.md) and [Implementing a Dispose Method](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Security.Cryptography.ECDiffieHellmanPublicKey
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ECDiffieHellmanPublicKey.Dispose(Boolean)
  fullName: System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Releases the unmanaged resources used by the <xref href=&quot;System.Security.Cryptography.ECDiffieHellman&quot;></xref> class and optionally releases the managed resources."
  remarks: "This method executes in two distinct scenarios:      -   If `disposing` equals `true`, the method has been called directly or indirectly by a user&quot;s code. Managed and unmanaged resources can be disposed.      -   If `disposing` equals `false`, the method has been called by the runtime from inside the finalizer, and you should not reference managed resources. Only unmanaged resources can be disposed.       If you need to provide cleanup code for managed and unmanaged resources that an object created, you should override this method.       This method is called by the public `Dispose()`method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.       When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.ECDiffieHellmanPublicKey> references. This method invokes the `Dispose()` method of each referenced object."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to release both managed and unmanaged resources; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> to release only unmanaged resources."
  overload: System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey.ToByteArray
  id: ToByteArray
  parent: System.Security.Cryptography.ECDiffieHellmanPublicKey
  langs:
  - csharp
  name: ToByteArray()
  nameWithType: ECDiffieHellmanPublicKey.ToByteArray()
  fullName: System.Security.Cryptography.ECDiffieHellmanPublicKey.ToByteArray()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Serializes the <xref href=&quot;System.Security.Cryptography.ECDiffieHellmanPublicKey&quot;></xref> key BLOB to a byte array."
  syntax:
    content: public virtual byte[] ToByteArray ();
    parameters: []
    return:
      type: System.Byte[]
      description: "A byte array that contains the serialized Elliptic Curve Diffie-Hellman (ECDH) public key."
  overload: System.Security.Cryptography.ECDiffieHellmanPublicKey.ToByteArray*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey.ToXmlString
  id: ToXmlString
  parent: System.Security.Cryptography.ECDiffieHellmanPublicKey
  langs:
  - csharp
  name: ToXmlString()
  nameWithType: ECDiffieHellmanPublicKey.ToXmlString()
  fullName: System.Security.Cryptography.ECDiffieHellmanPublicKey.ToXmlString()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Serializes the <xref href=&quot;System.Security.Cryptography.ECDiffieHellmanPublicKey&quot;></xref> public key to an XML string."
  syntax:
    content: public virtual string ToXmlString ();
    parameters: []
    return:
      type: System.String
      description: "An XML string that contains the serialized Elliptic Curve Diffie-Hellman (ECDH) public key."
  overload: System.Security.Cryptography.ECDiffieHellmanPublicKey.ToXmlString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey.#ctor(System.Byte[])
  parent: System.Security.Cryptography.ECDiffieHellmanPublicKey
  isExternal: false
  name: ECDiffieHellmanPublicKey(Byte[])
  nameWithType: ECDiffieHellmanPublicKey.ECDiffieHellmanPublicKey(Byte[])
  fullName: System.Security.Cryptography.ECDiffieHellmanPublicKey.ECDiffieHellmanPublicKey(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose
  parent: System.Security.Cryptography.ECDiffieHellmanPublicKey
  isExternal: false
  name: Dispose()
  nameWithType: ECDiffieHellmanPublicKey.Dispose()
  fullName: System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose()
- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(System.Boolean)
  parent: System.Security.Cryptography.ECDiffieHellmanPublicKey
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ECDiffieHellmanPublicKey.Dispose(Boolean)
  fullName: System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey.ToByteArray
  parent: System.Security.Cryptography.ECDiffieHellmanPublicKey
  isExternal: false
  name: ToByteArray()
  nameWithType: ECDiffieHellmanPublicKey.ToByteArray()
  fullName: System.Security.Cryptography.ECDiffieHellmanPublicKey.ToByteArray()
- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey.ToXmlString
  parent: System.Security.Cryptography.ECDiffieHellmanPublicKey
  isExternal: false
  name: ToXmlString()
  nameWithType: ECDiffieHellmanPublicKey.ToXmlString()
  fullName: System.Security.Cryptography.ECDiffieHellmanPublicKey.ToXmlString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey.#ctor*
  parent: System.Security.Cryptography.ECDiffieHellmanPublicKey
  isExternal: false
  name: ECDiffieHellmanPublicKey
  nameWithType: ECDiffieHellmanPublicKey.ECDiffieHellmanPublicKey
- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey.Dispose*
  parent: System.Security.Cryptography.ECDiffieHellmanPublicKey
  isExternal: false
  name: Dispose
  nameWithType: ECDiffieHellmanPublicKey.Dispose
- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey.ToByteArray*
  parent: System.Security.Cryptography.ECDiffieHellmanPublicKey
  isExternal: false
  name: ToByteArray
  nameWithType: ECDiffieHellmanPublicKey.ToByteArray
- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey.ToXmlString*
  parent: System.Security.Cryptography.ECDiffieHellmanPublicKey
  isExternal: false
  name: ToXmlString
  nameWithType: ECDiffieHellmanPublicKey.ToXmlString
