### YamlMime:ManagedReference
items:
- uid: System.IO.FileMode
  id: FileMode
  children:
  - System.IO.FileMode.Append
  - System.IO.FileMode.Create
  - System.IO.FileMode.CreateNew
  - System.IO.FileMode.Open
  - System.IO.FileMode.OpenOrCreate
  - System.IO.FileMode.Truncate
  langs:
  - csharp
  name: FileMode
  nameWithType: FileMode
  fullName: System.IO.FileMode
  type: Enum
  summary: "Especifica a forma como o sistema operativo deve abrir um ficheiro."
  remarks: "Para obter um exemplo de criação de um ficheiro e escrever texto para um ficheiro, consulte [como: escrever texto para um ficheiro](~/add/includes/ajax-current-ext-md.md). Para obter um exemplo de texto de ler a partir de um ficheiro, consulte [como: texto de leitura de um ficheiro](~/add/includes/ajax-current-ext-md.md). Para obter um exemplo de leitura a partir do e de escrever um ficheiro binário, consulte [como: ler e escrever um recentemente criado dados ficheiro](~/add/includes/ajax-current-ext-md.md).       A `FileMode` parâmetro for especificado em muitos dos construtores para <xref:System.IO.FileStream>, <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>e, no `Open` métodos de <xref:System.IO.File>e <xref:System.IO.FileInfo>para controlar a forma como um ficheiro é aberto.</xref:System.IO.FileInfo> </xref:System.IO.File> </xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> </xref:System.IO.FileStream>       `FileMode`controlo de parâmetros se um ficheiro é substituído, criar, abrir, ou combinação de ambas. Utilize `Open` para abrir um ficheiro existente. Para acrescentar a um ficheiro, utilize `Append`. Para truncar um ficheiro ou se não existir, crie um ficheiro, utilize `Create`."
  example:
  - "The following `FileStream` constructor opens an existing file (`FileMode.Open`).  \n  \n [!code-vb[Classic FileAccess Example#1](~/add/codesnippet/visualbasic/t-system.io.filemode_1.vb)]\n [!code-cpp[Classic FileAccess Example#1](~/add/codesnippet/cpp/t-system.io.filemode_1.cpp)]\n [!code-cs[Classic FileAccess Example#1](~/add/codesnippet/csharp/t-system.io.filemode_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public enum FileMode
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.IO.FileMode.Append
  id: Append
  parent: System.IO.FileMode
  langs:
  - csharp
  name: Append
  nameWithType: FileMode.Append
  fullName: System.IO.FileMode.Append
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Abre o ficheiro se existe e procura ao fim do ficheiro ou cria um novo ficheiro. Isto requer &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Append?displayProperty=fullName&gt; permissão. <xref uid=&quot;langword_csharp_FileMode.Append&quot; name=&quot;FileMode.Append&quot; href=&quot;&quot;></xref>podem ser utilizadas apenas em conjunto com <xref uid=&quot;langword_csharp_FileAccess.Write&quot; name=&quot;FileAccess.Write&quot; href=&quot;&quot;> </xref>. A tentar procurar até uma posição antes do fim de gera o ficheiro um <xref:System.IO.IOException>exceções e qualquer tentativa de leitura falha e gera um <xref:System.NotSupportedException>exceção.</xref:System.NotSupportedException> </xref:System.IO.IOException>"
  syntax:
    content: Append
    return:
      type: System.IO.FileMode
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileMode.Create
  id: Create
  parent: System.IO.FileMode
  langs:
  - csharp
  name: Create
  nameWithType: FileMode.Create
  fullName: System.IO.FileMode.Create
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Especifica que o sistema operativo deve criar um novo ficheiro. Se o ficheiro já existir, será substituído. Isto requer &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Write?displayProperty=fullName&gt; permissão. <xref uid=&quot;langword_csharp_FileMode.Create&quot; name=&quot;FileMode.Create&quot; href=&quot;&quot;></xref>é equivalente ao solicitar que se o ficheiro não existir, utilize CreateNew; caso contrário, utilize Truncate. Se o ficheiro já existe, mas é um ficheiro oculto, uma <xref:System.UnauthorizedAccessException>exceção é emitida.</xref:System.UnauthorizedAccessException>"
  syntax:
    content: Create
    return:
      type: System.IO.FileMode
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileMode.CreateNew
  id: CreateNew
  parent: System.IO.FileMode
  langs:
  - csharp
  name: CreateNew
  nameWithType: FileMode.CreateNew
  fullName: System.IO.FileMode.CreateNew
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Especifica que o sistema operativo deve criar um novo ficheiro. Isto requer &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Write?displayProperty=fullName&gt; permissão. Se o ficheiro já existe, uma <xref:System.IO.IOException>exceção é emitida.</xref:System.IO.IOException>"
  syntax:
    content: CreateNew
    return:
      type: System.IO.FileMode
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileMode.Open
  id: Open
  parent: System.IO.FileMode
  langs:
  - csharp
  name: Open
  nameWithType: FileMode.Open
  fullName: System.IO.FileMode.Open
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Especifica que o sistema operativo deve abrir um ficheiro existente. A capacidade para abrir o ficheiro está dependente o valor especificado pelo <xref href=&quot;System.IO.FileAccess&quot;> </xref> enumeração. A &lt;xref:System.IO.FileNotFoundException?displayProperty=fullName&gt; é emitida uma exceção se o ficheiro não existe."
  syntax:
    content: Open
    return:
      type: System.IO.FileMode
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileMode.OpenOrCreate
  id: OpenOrCreate
  parent: System.IO.FileMode
  langs:
  - csharp
  name: OpenOrCreate
  nameWithType: FileMode.OpenOrCreate
  fullName: System.IO.FileMode.OpenOrCreate
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Especifica que o sistema operativo deve abrir um ficheiro caso exista; caso contrário, deve ser criado um novo ficheiro. Se abrir o ficheiro com <xref uid=&quot;langword_csharp_FileAccess.Read&quot; name=&quot;FileAccess.Read&quot; href=&quot;&quot;> </xref>, &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=fullName&gt; permissão é necessária. Se o acesso a ficheiros <xref uid=&quot;langword_csharp_FileAccess.Write&quot; name=&quot;FileAccess.Write&quot; href=&quot;&quot;> </xref>, &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Write?displayProperty=fullName&gt; permissão é necessária. Se abrir o ficheiro com <xref uid=&quot;langword_csharp_FileAccess.ReadWrite&quot; name=&quot;FileAccess.ReadWrite&quot; href=&quot;&quot;> </xref>, ambos os &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=fullName&gt; e &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Write?displayProperty=fullName&gt; são necessárias permissões."
  syntax:
    content: OpenOrCreate
    return:
      type: System.IO.FileMode
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileMode.Truncate
  id: Truncate
  parent: System.IO.FileMode
  langs:
  - csharp
  name: Truncate
  nameWithType: FileMode.Truncate
  fullName: System.IO.FileMode.Truncate
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "Especifica que o sistema operativo deve abrir um ficheiro existente. Quando abrir o ficheiro, deve ser truncado para que o tamanho é zero bytes. Isto requer &lt;xref:System.Security.Permissions.FileIOPermissionAccess.Write?displayProperty=fullName&gt; permissão. Tenta ler a partir de um ficheiro aberto com <xref uid=&quot;langword_csharp_FileMode.Truncate&quot; name=&quot;FileMode.Truncate&quot; href=&quot;&quot;> </xref> causar um <xref:System.ArgumentException>exceção.</xref:System.ArgumentException>"
  syntax:
    content: Truncate
    return:
      type: System.IO.FileMode
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.IO.FileMode.Append
  parent: System.IO.FileMode
  isExternal: false
  name: Append
  nameWithType: FileMode.Append
  fullName: System.IO.FileMode.Append
- uid: System.IO.FileMode
  parent: System.IO
  isExternal: false
  name: FileMode
  nameWithType: FileMode
  fullName: System.IO.FileMode
- uid: System.IO.FileMode.Create
  parent: System.IO.FileMode
  isExternal: false
  name: Create
  nameWithType: FileMode.Create
  fullName: System.IO.FileMode.Create
- uid: System.IO.FileMode.CreateNew
  parent: System.IO.FileMode
  isExternal: false
  name: CreateNew
  nameWithType: FileMode.CreateNew
  fullName: System.IO.FileMode.CreateNew
- uid: System.IO.FileMode.Open
  parent: System.IO.FileMode
  isExternal: false
  name: Open
  nameWithType: FileMode.Open
  fullName: System.IO.FileMode.Open
- uid: System.IO.FileMode.OpenOrCreate
  parent: System.IO.FileMode
  isExternal: false
  name: OpenOrCreate
  nameWithType: FileMode.OpenOrCreate
  fullName: System.IO.FileMode.OpenOrCreate
- uid: System.IO.FileMode.Truncate
  parent: System.IO.FileMode
  isExternal: false
  name: Truncate
  nameWithType: FileMode.Truncate
  fullName: System.IO.FileMode.Truncate
