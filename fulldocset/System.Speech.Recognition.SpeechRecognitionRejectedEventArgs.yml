### YamlMime:ManagedReference
items:
- uid: System.Speech.Recognition.SpeechRecognitionRejectedEventArgs
  id: SpeechRecognitionRejectedEventArgs
  children: []
  langs:
  - csharp
  name: SpeechRecognitionRejectedEventArgs
  nameWithType: SpeechRecognitionRejectedEventArgs
  fullName: System.Speech.Recognition.SpeechRecognitionRejectedEventArgs
  type: Class
  summary: "Fornece informações para o <xref href=&quot;System.Speech.Recognition.SpeechRecognizer.SpeechRecognitionRejected&quot;> </xref> e <xref href=&quot;System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognitionRejected&quot;> </xref> eventos."
  remarks: "O `SpeechRecognitionRejected` evento é originado pelo <xref:System.Speech.Recognition.SpeechRecognizer>e <xref:System.Speech.Recognition.SpeechRecognitionEngine>classes.</xref:System.Speech.Recognition.SpeechRecognitionEngine> </xref:System.Speech.Recognition.SpeechRecognizer>       **SpeechRecognitionRejected** os eventos são gerados por um motor de reconhecimento de voz quando nenhuma das alternates de uma operação de reconhecimento tem uma pontuação de confiança suficientemente elevada para ser aceite. Informações detalhadas sobre expressões rejeitados estão disponíveis através de <xref:System.Speech.Recognition.RecognitionEventArgs.Result%2A>propriedade.</xref:System.Speech.Recognition.RecognitionEventArgs.Result%2A>       **SpeechRecognitionRejectedEventArgs** deriva de <xref:System.Speech.Recognition.RecognitionEventArgs>.</xref:System.Speech.Recognition.RecognitionEventArgs>"
  example:
  - "The following example recognizes phrases such as \"Display the list of artists in the jazz category\" or \"Display albums gospel\". The example uses a handler for the <xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognitionRejected> event to display a notification in the console when the speech input cannot be matched to the contents of the grammar with sufficient confidence to produce a successful recognition.  \n  \n```  \nusing System;  \nusing System.Speech.Recognition;  \n  \nnamespace SampleRecognition  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n  \n    // Initialize a shared speech recognition engine.  \n    {  \n      using (SpeechRecognizer recognizer =  \n         new SpeechRecognizer())  \n      {  \n  \n        // Create a grammar.  \n        //  Create lists of alternative choices.  \n        Choices listTypes = new Choices(new string[] { \"albums\", \"artists\" });  \n        Choices genres = new Choices(new string[] {   \n          \"blues\", \"classical\", \"gospel\", \"jazz\", \"rock\" });  \n  \n        //  Create a GrammarBuilder object and assemble the grammar components.  \n        GrammarBuilder mediaMenu = new GrammarBuilder(\"Display\");  \n        mediaMenu.Append(\"the list of\", 0, 1);  \n        mediaMenu.Append(listTypes);  \n        mediaMenu.Append(\"in the\", 0, 1);  \n        mediaMenu.Append(genres);  \n        mediaMenu.Append(\"category\", 0, 1);  \n  \n        //  Build a Grammar object from the GrammarBuilder.  \n        Grammar mediaMenuGrammar = new Grammar(mediaMenu);  \n        mediaMenuGrammar.Name = \"Media Chooser\";  \n  \n        // Attach event handlers.  \n        recognizer.LoadGrammarCompleted +=  \n          new EventHandler<LoadGrammarCompletedEventArgs>(recognizer_LoadGrammarCompleted);  \n        recognizer.SpeechRecognized +=  \n          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  \n        recognizer.SpeechRecognitionRejected +=   \n          new EventHandler<SpeechRecognitionRejectedEventArgs>(recognizer_SpeechRecognitionRejected);  \n  \n        // Load the grammar object to the recognizer.  \n        recognizer.LoadGrammarAsync(mediaMenuGrammar);  \n  \n        // Keep the console window open.  \n        Console.ReadLine();  \n      }  \n    }  \n  \n    // Handle the SpeechRecognitionRejected event.  \n    static void recognizer_SpeechRecognitionRejected(object sender, SpeechRecognitionRejectedEventArgs e)  \n    {  \n      Console.WriteLine(\"Speech input was rejected.\");  \n      foreach (RecognizedPhrase phrase in e.Result.Alternates)  \n      {  \n        Console.WriteLine(\"  Rejected phrase: \" + phrase.Text);  \n        Console.WriteLine(\"  Confidence score: \" + phrase.Confidence);  \n      }  \n    }  \n  \n    // Handle the LoadGrammarCompleted event.  \n    static void recognizer_LoadGrammarCompleted(object sender, LoadGrammarCompletedEventArgs e)  \n    {  \n      Console.WriteLine(\"Grammar loaded: \" + e.Grammar.Name);  \n    }  \n  \n    // Handle the SpeechRecognized event.  \n    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  \n    {  \n      Console.WriteLine(\"Speech recognized: \" + e.Result.Text);  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: 'public class SpeechRecognitionRejectedEventArgs : System.Speech.Recognition.RecognitionEventArgs'
  inheritance:
  - System.EventArgs
  - System.Speech.Recognition.RecognitionEventArgs
  implements: []
  inheritedMembers:
  - System.Speech.Recognition.RecognitionEventArgs.Result
  platform:
  - net462
references:
- uid: System.Speech.Recognition.RecognitionEventArgs
  isExternal: false
  name: System.Speech.Recognition.RecognitionEventArgs
