### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.FirstMatchCodeGroup
  id: FirstMatchCodeGroup
  children:
  - System.Security.Policy.FirstMatchCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)
  - System.Security.Policy.FirstMatchCodeGroup.Copy
  - System.Security.Policy.FirstMatchCodeGroup.MergeLogic
  - System.Security.Policy.FirstMatchCodeGroup.Resolve(System.Security.Policy.Evidence)
  - System.Security.Policy.FirstMatchCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  langs:
  - csharp
  name: FirstMatchCodeGroup
  nameWithType: FirstMatchCodeGroup
  fullName: System.Security.Policy.FirstMatchCodeGroup
  type: Class
  summary: "Allows security policy to be defined by the union of the policy statement of a code group and that of the first child code group that matches. This class cannot be inherited."
  remarks: "Code groups are the building blocks of code access security policy. Each policy level consists of a root code group that can have child code groups. Each child code group can have their own child code groups; this behavior extends to any number of levels, forming a tree. Each code group has a membership condition that determines if a given assembly belongs to it based on the evidence for that assembly. Only code groups whose membership conditions match a given assembly and their child code groups apply policy.       Like any code group, FirstMatchCodeGroup only applies when its membership condition matches evidence for an assembly. If there is a match, it tests the membership condition of each child in order, stopping when the first match occurs. The result of FirstMatchCodeGroup is the union of the policy statement of the root code group and the policy statement of the first child group of that code group that matches.       FirstMatchCodeGroup is intended for programmatic use by application domain hosts to set domain policy."
  example:
  - "The following example shows the use of members of the FirstMatchCodeGroup class.  \n  \n [!code-cpp[System.Security.Policy.FirstMatchCodeGroup_Evt#1](~/add/codesnippet/cpp/t-system.security.policy_7_1.cpp)]\n [!code-vb[System.Security.Policy.FirstMatchCodeGroup_Evt#1](~/add/codesnippet/visualbasic/t-system.security.policy_7_1.vb)]\n [!code-cs[System.Security.Policy.FirstMatchCodeGroup_Evt#1](~/add/codesnippet/csharp/t-system.security.policy_7_1.cs)]"
  syntax:
    content: >-
      [System.Obsolete("This type is obsolete and will be removed in a future release of the .NET Framework. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class FirstMatchCodeGroup : System.Security.Policy.CodeGroup
  inheritance:
  - System.Object
  - System.Security.Policy.CodeGroup
  implements: []
  inheritedMembers:
  - System.Security.Policy.CodeGroup.AddChild(System.Security.Policy.CodeGroup)
  - System.Security.Policy.CodeGroup.AttributeString
  - System.Security.Policy.CodeGroup.Children
  - System.Security.Policy.CodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  - System.Security.Policy.CodeGroup.Description
  - System.Security.Policy.CodeGroup.Equals(System.Object)
  - System.Security.Policy.CodeGroup.Equals(System.Security.Policy.CodeGroup,System.Boolean)
  - System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)
  - System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  - System.Security.Policy.CodeGroup.GetHashCode
  - System.Security.Policy.CodeGroup.MembershipCondition
  - System.Security.Policy.CodeGroup.Name
  - System.Security.Policy.CodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)
  - System.Security.Policy.CodeGroup.PermissionSetName
  - System.Security.Policy.CodeGroup.PolicyStatement
  - System.Security.Policy.CodeGroup.RemoveChild(System.Security.Policy.CodeGroup)
  - System.Security.Policy.CodeGroup.ToXml
  - System.Security.Policy.CodeGroup.ToXml(System.Security.Policy.PolicyLevel)
  platform:
  - net462
- uid: System.Security.Policy.FirstMatchCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)
  id: '#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)'
  parent: System.Security.Policy.FirstMatchCodeGroup
  langs:
  - csharp
  name: FirstMatchCodeGroup(IMembershipCondition,PolicyStatement)
  nameWithType: FirstMatchCodeGroup.FirstMatchCodeGroup(IMembershipCondition,PolicyStatement)
  fullName: System.Security.Policy.FirstMatchCodeGroup.FirstMatchCodeGroup(IMembershipCondition,PolicyStatement)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Initializes a new instance of the <xref href=&quot;System.Security.Policy.FirstMatchCodeGroup&quot;></xref> class."
  remarks: "This constructor creates a basic code group and should be called from the constructors of custom code groups. Child code groups can be added using the <xref:System.Security.Policy.CodeGroup.AddChild%2A> method."
  example:
  - "The following code shows the use of the FirstMatchCodeGroup constructor. This code example is part of a larger example provided for <xref:System.Security.Policy.FirstMatchCodeGroup> class.  \n  \n [!code-cpp[System.Security.Policy.FirstMatchCodeGroup_Evt#2](~/add/codesnippet/cpp/e1a4e309-d6ee-48c0-bd35-_1.cpp)]\n [!code-vb[System.Security.Policy.FirstMatchCodeGroup_Evt#2](~/add/codesnippet/visualbasic/e1a4e309-d6ee-48c0-bd35-_1.vb)]\n [!code-cs[System.Security.Policy.FirstMatchCodeGroup_Evt#2](~/add/codesnippet/csharp/e1a4e309-d6ee-48c0-bd35-_1.cs)]"
  syntax:
    content: public FirstMatchCodeGroup (System.Security.Policy.IMembershipCondition membershipCondition, System.Security.Policy.PolicyStatement policy);
    parameters:
    - id: membershipCondition
      type: System.Security.Policy.IMembershipCondition
      description: "A membership condition that tests evidence to determine whether this code group applies policy."
    - id: policy
      type: System.Security.Policy.PolicyStatement
      description: "The policy statement for the code group in the form of a permission set and attributes to grant code that matches the membership condition."
  overload: System.Security.Policy.FirstMatchCodeGroup.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The type of the <code>membershipCondition</code> parameter is not valid.       -or-       The type of the <code>policy</code> parameter is not valid."
  platform:
  - net462
- uid: System.Security.Policy.FirstMatchCodeGroup.Copy
  id: Copy
  parent: System.Security.Policy.FirstMatchCodeGroup
  langs:
  - csharp
  name: Copy()
  nameWithType: FirstMatchCodeGroup.Copy()
  fullName: System.Security.Policy.FirstMatchCodeGroup.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Makes a deep copy of the code group."
  remarks: "This method makes a deep copy of the code group, meaning that copies of all objects it contains are made, as well."
  example:
  - "The following code shows the use of Copy method to make a deep copy of the code group. This code example is part of a larger example provided for <xref:System.Security.Policy.FirstMatchCodeGroup> class.  \n  \n [!code-cpp[System.Security.Policy.FirstMatchCodeGroup_Evt#18](~/add/codesnippet/cpp/m-system.security.policy_1_1.cpp)]\n [!code-vb[System.Security.Policy.FirstMatchCodeGroup_Evt#18](~/add/codesnippet/visualbasic/m-system.security.policy_1_1.vb)]\n [!code-cs[System.Security.Policy.FirstMatchCodeGroup_Evt#18](~/add/codesnippet/csharp/m-system.security.policy_1_1.cs)]"
  syntax:
    content: public override System.Security.Policy.CodeGroup Copy ();
    parameters: []
    return:
      type: System.Security.Policy.CodeGroup
      description: "An equivalent copy of the code group, including its membership conditions and child code groups."
  overload: System.Security.Policy.FirstMatchCodeGroup.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.FirstMatchCodeGroup.MergeLogic
  id: MergeLogic
  parent: System.Security.Policy.FirstMatchCodeGroup
  langs:
  - csharp
  name: MergeLogic
  nameWithType: FirstMatchCodeGroup.MergeLogic
  fullName: System.Security.Policy.FirstMatchCodeGroup.MergeLogic
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Gets the merge logic."
  remarks: ''
  example:
  - "The following code shows the use of the MergeLogic property to get the merge logic for this code group. This code example is part of a larger example provided for the <xref:System.Security.Policy.FirstMatchCodeGroup> class.  \n  \n [!code-cpp[System.Security.Policy.FirstMatchCodeGroup_Evt#15](~/add/codesnippet/cpp/p-system.security.policy_9_1.cpp)]\n [!code-vb[System.Security.Policy.FirstMatchCodeGroup_Evt#15](~/add/codesnippet/visualbasic/p-system.security.policy_9_1.vb)]\n [!code-cs[System.Security.Policy.FirstMatchCodeGroup_Evt#15](~/add/codesnippet/csharp/p-system.security.policy_9_1.cs)]"
  syntax:
    content: public override string MergeLogic { get; }
    return:
      type: System.String
      description: "The string &quot;First Match&quot;."
  overload: System.Security.Policy.FirstMatchCodeGroup.MergeLogic*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.FirstMatchCodeGroup.Resolve(System.Security.Policy.Evidence)
  id: Resolve(System.Security.Policy.Evidence)
  parent: System.Security.Policy.FirstMatchCodeGroup
  langs:
  - csharp
  name: Resolve(Evidence)
  nameWithType: FirstMatchCodeGroup.Resolve(Evidence)
  fullName: System.Security.Policy.FirstMatchCodeGroup.Resolve(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Resolves policy for the code group and its descendants for a set of evidence."
  remarks: "Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence. If there is a match, this method returns a policy statement for the code group, including evaluation of child code groups.       For first-match code groups, each child code group&quot;s membership condition is tested against the evidence in the order in which they were added; only the first match is resolved with the evidence set. If there are no matches, the policy statement of the parent first-match code group applies. The matching child code group type determines how all child groups under it are applied, depending on how the <xref:System.Security.Policy.CodeGroup.Resolve%2A> methods of these child groups work.       The .NET Framework security system uses <xref:System.Security.Policy.CodeGroup.Resolve%2A> on the policy levels to determine which permissions to grant to loaded code from the resulting policy statements and the code request on the assembly.       This operation of this method is as follows:       If the membership condition does not match the specified evidence, return `null`; otherwise, set the permission set to be returned (P) equal to the code group&quot;s policy statement and continue. For each child code group, resolve the code group with the same evidence; if the result is not `null`, return that policy statement. If no child code group matched, return P (the parent&quot;s policy statement)."
  example:
  - "The following code shows the use of the Resolve method to resolve policy for the code group. This code example is part of a larger example provided for the <xref:System.Security.Policy.FirstMatchCodeGroup> class.  \n  \n [!code-cpp[System.Security.Policy.FirstMatchCodeGroup_Evt#19](~/add/codesnippet/cpp/bb7a14a1-f12f-4535-b4af-_1.cpp)]\n [!code-vb[System.Security.Policy.FirstMatchCodeGroup_Evt#19](~/add/codesnippet/visualbasic/bb7a14a1-f12f-4535-b4af-_1.vb)]\n [!code-cs[System.Security.Policy.FirstMatchCodeGroup_Evt#19](~/add/codesnippet/csharp/bb7a14a1-f12f-4535-b4af-_1.cs)]"
  syntax:
    content: public override System.Security.Policy.PolicyStatement Resolve (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "The evidence for the assembly."
    return:
      type: System.Security.Policy.PolicyStatement
      description: "A policy statement consisting of the permissions granted by the code group with optional attributes, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the code group does not apply (the membership condition does not match the specified evidence)."
  overload: System.Security.Policy.FirstMatchCodeGroup.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>evidence</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Policy.PolicyException
    commentId: T:System.Security.Policy.PolicyException
    description: "More than one code group (including the parent code group and any child code groups) is marked <xref href=&quot;System.Security.Policy.PolicyStatementAttribute&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Policy.FirstMatchCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  id: ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  parent: System.Security.Policy.FirstMatchCodeGroup
  langs:
  - csharp
  name: ResolveMatchingCodeGroups(Evidence)
  nameWithType: FirstMatchCodeGroup.ResolveMatchingCodeGroups(Evidence)
  fullName: System.Security.Policy.FirstMatchCodeGroup.ResolveMatchingCodeGroups(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Resolves matching code groups."
  remarks: "Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence. If there is a match, this method returns a root code group. The code group that is returned contains child code groups, which in turn can have child code groups as necessary to reflect the complete set of code groups that were matched by the evidence provided.       For first-match code groups, each child code group&quot;s membership condition is tested against the evidence in the order in which they were added; only the first match is resolved with the evidence set. If there are no matches, the policy statement of the parent first-match code group applies. The matching child code group type determines how all child groups under it are applied, depending on how the <xref:System.Security.Policy.CodeGroup.ResolveMatchingCodeGroups%2A> methods of these child groups work."
  example:
  - "The following code shows the use of the ResolveMatchingCodeGroups method to resolve matching code groups. This code example is part of a larger example provided for the <xref:System.Security.Policy.FirstMatchCodeGroup> class.  \n  \n [!code-cpp[System.Security.Policy.FirstMatchCodeGroup_Evt#9](~/add/codesnippet/cpp/890cea9a-b76c-4138-bf90-_1.cpp)]\n [!code-vb[System.Security.Policy.FirstMatchCodeGroup_Evt#9](~/add/codesnippet/visualbasic/890cea9a-b76c-4138-bf90-_1.vb)]\n [!code-cs[System.Security.Policy.FirstMatchCodeGroup_Evt#9](~/add/codesnippet/csharp/890cea9a-b76c-4138-bf90-_1.cs)]"
  syntax:
    content: public override System.Security.Policy.CodeGroup ResolveMatchingCodeGroups (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "The evidence for the assembly."
    return:
      type: System.Security.Policy.CodeGroup
      description: "A <xref href=&quot;System.Security.Policy.CodeGroup&quot;></xref> that is the root of the tree of matching code groups."
  overload: System.Security.Policy.FirstMatchCodeGroup.ResolveMatchingCodeGroups*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>evidence</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Security.Policy.CodeGroup
  isExternal: false
  name: System.Security.Policy.CodeGroup
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Policy.PolicyException
  parent: System.Security.Policy
  isExternal: false
  name: PolicyException
  nameWithType: PolicyException
  fullName: System.Security.Policy.PolicyException
- uid: System.Security.Policy.FirstMatchCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)
  parent: System.Security.Policy.FirstMatchCodeGroup
  isExternal: false
  name: FirstMatchCodeGroup(IMembershipCondition,PolicyStatement)
  nameWithType: FirstMatchCodeGroup.FirstMatchCodeGroup(IMembershipCondition,PolicyStatement)
  fullName: System.Security.Policy.FirstMatchCodeGroup.FirstMatchCodeGroup(IMembershipCondition,PolicyStatement)
- uid: System.Security.Policy.IMembershipCondition
  parent: System.Security.Policy
  isExternal: false
  name: IMembershipCondition
  nameWithType: IMembershipCondition
  fullName: System.Security.Policy.IMembershipCondition
- uid: System.Security.Policy.PolicyStatement
  parent: System.Security.Policy
  isExternal: false
  name: PolicyStatement
  nameWithType: PolicyStatement
  fullName: System.Security.Policy.PolicyStatement
- uid: System.Security.Policy.FirstMatchCodeGroup.Copy
  parent: System.Security.Policy.FirstMatchCodeGroup
  isExternal: false
  name: Copy()
  nameWithType: FirstMatchCodeGroup.Copy()
  fullName: System.Security.Policy.FirstMatchCodeGroup.Copy()
- uid: System.Security.Policy.FirstMatchCodeGroup.MergeLogic
  parent: System.Security.Policy.FirstMatchCodeGroup
  isExternal: false
  name: MergeLogic
  nameWithType: FirstMatchCodeGroup.MergeLogic
  fullName: System.Security.Policy.FirstMatchCodeGroup.MergeLogic
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Policy.FirstMatchCodeGroup.Resolve(System.Security.Policy.Evidence)
  parent: System.Security.Policy.FirstMatchCodeGroup
  isExternal: false
  name: Resolve(Evidence)
  nameWithType: FirstMatchCodeGroup.Resolve(Evidence)
  fullName: System.Security.Policy.FirstMatchCodeGroup.Resolve(Evidence)
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Security.Policy.FirstMatchCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)
  parent: System.Security.Policy.FirstMatchCodeGroup
  isExternal: false
  name: ResolveMatchingCodeGroups(Evidence)
  nameWithType: FirstMatchCodeGroup.ResolveMatchingCodeGroups(Evidence)
  fullName: System.Security.Policy.FirstMatchCodeGroup.ResolveMatchingCodeGroups(Evidence)
- uid: System.Security.Policy.FirstMatchCodeGroup.#ctor*
  parent: System.Security.Policy.FirstMatchCodeGroup
  isExternal: false
  name: FirstMatchCodeGroup
  nameWithType: FirstMatchCodeGroup.FirstMatchCodeGroup
- uid: System.Security.Policy.FirstMatchCodeGroup.Copy*
  parent: System.Security.Policy.FirstMatchCodeGroup
  isExternal: false
  name: Copy
  nameWithType: FirstMatchCodeGroup.Copy
- uid: System.Security.Policy.FirstMatchCodeGroup.MergeLogic*
  parent: System.Security.Policy.FirstMatchCodeGroup
  isExternal: false
  name: MergeLogic
  nameWithType: FirstMatchCodeGroup.MergeLogic
- uid: System.Security.Policy.FirstMatchCodeGroup.Resolve*
  parent: System.Security.Policy.FirstMatchCodeGroup
  isExternal: false
  name: Resolve
  nameWithType: FirstMatchCodeGroup.Resolve
- uid: System.Security.Policy.FirstMatchCodeGroup.ResolveMatchingCodeGroups*
  parent: System.Security.Policy.FirstMatchCodeGroup
  isExternal: false
  name: ResolveMatchingCodeGroups
  nameWithType: FirstMatchCodeGroup.ResolveMatchingCodeGroups
