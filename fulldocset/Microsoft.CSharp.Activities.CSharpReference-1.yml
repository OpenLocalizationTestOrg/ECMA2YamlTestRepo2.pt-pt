### YamlMime:ManagedReference
items:
- uid: Microsoft.CSharp.Activities.CSharpReference`1
  id: CSharpReference`1
  children:
  - Microsoft.CSharp.Activities.CSharpReference`1.#ctor
  - Microsoft.CSharp.Activities.CSharpReference`1.#ctor(System.String)
  - Microsoft.CSharp.Activities.CSharpReference`1.CacheMetadata(System.Activities.CodeActivityMetadata)
  - Microsoft.CSharp.Activities.CSharpReference`1.Execute(System.Activities.CodeActivityContext)
  - Microsoft.CSharp.Activities.CSharpReference`1.ExpressionText
  - Microsoft.CSharp.Activities.CSharpReference`1.GetExpressionTree
  - Microsoft.CSharp.Activities.CSharpReference`1.Language
  - Microsoft.CSharp.Activities.CSharpReference`1.RequiresCompilation
  langs:
  - csharp
  name: CSharpReference<TResult>
  nameWithType: CSharpReference<TResult>
  fullName: Microsoft.CSharp.Activities.CSharpReference<TResult>
  type: Class
  syntax:
    content: >-
      [System.Diagnostics.DebuggerStepThrough]

      [System.Windows.Markup.ContentProperty("ExpressionText")]

      public class CSharpReference<TResult> : System.Activities.CodeActivity<System.Activities.Location<TResult>>, System.Activities.Expressions.ITextExpression
    typeParameters:
    - id: TResult
      description: "To be added."
  inheritance:
  - System.Object
  - System.Activities.Activity
  - System.Activities.ActivityWithResult
  - System.Activities.Activity`1
  - System.Activities.CodeActivity`1
  implements:
  - System.Activities.Expressions.ITextExpression
  inheritedMembers:
  - System.Activities.Activity.CacheId
  - System.Activities.Activity.Constraints
  - System.Activities.Activity.DisplayName
  - System.Activities.Activity.Id
  - System.Activities.Activity.ShouldSerializeDisplayName
  - System.Activities.Activity.ToString
  - System.Activities.Activity`1.FromValue(`0)
  - System.Activities.Activity`1.FromVariable(System.Activities.Variable)
  - System.Activities.Activity`1.FromVariable(System.Activities.Variable{`0})
  - System.Activities.Activity`1.op_Implicit(`0)
  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable)
  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable{`0})
  - System.Activities.Activity`1.Result
  - System.Activities.ActivityWithResult.ResultType
  - System.Activities.CodeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)
  - System.Activities.CodeActivity`1.Implementation
  - System.Activities.CodeActivity`1.ImplementationVersion
  - System.Activities.CodeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)
  platform:
  - net462
- uid: Microsoft.CSharp.Activities.CSharpReference`1.#ctor
  id: '#ctor'
  parent: Microsoft.CSharp.Activities.CSharpReference`1
  langs:
  - csharp
  name: CSharpReference()
  nameWithType: CSharpReference<TResult>.CSharpReference()
  fullName: Microsoft.CSharp.Activities.CSharpReference<TResult>.CSharpReference()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: Microsoft.CSharp.Activities
  syntax:
    content: public CSharpReference ();
    parameters: []
  overload: Microsoft.CSharp.Activities.CSharpReference`1.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.CSharp.Activities.CSharpReference`1.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.CSharp.Activities.CSharpReference`1
  langs:
  - csharp
  name: CSharpReference(String)
  nameWithType: CSharpReference<TResult>.CSharpReference(String)
  fullName: Microsoft.CSharp.Activities.CSharpReference<TResult>.CSharpReference(String)
  type: Constructor
  assemblies:
  - System.Activities
  namespace: Microsoft.CSharp.Activities
  syntax:
    content: public CSharpReference (string expressionText);
    parameters:
    - id: expressionText
      type: System.String
      description: "To be added."
  overload: Microsoft.CSharp.Activities.CSharpReference`1.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.CSharp.Activities.CSharpReference`1.CacheMetadata(System.Activities.CodeActivityMetadata)
  id: CacheMetadata(System.Activities.CodeActivityMetadata)
  parent: Microsoft.CSharp.Activities.CSharpReference`1
  langs:
  - csharp
  name: CacheMetadata(CodeActivityMetadata)
  nameWithType: CSharpReference<TResult>.CacheMetadata(CodeActivityMetadata)
  fullName: Microsoft.CSharp.Activities.CSharpReference<TResult>.CacheMetadata(CodeActivityMetadata)
  type: Method
  assemblies:
  - System.Activities
  namespace: Microsoft.CSharp.Activities
  syntax:
    content: protected override void CacheMetadata (System.Activities.CodeActivityMetadata metadata);
    parameters:
    - id: metadata
      type: System.Activities.CodeActivityMetadata
      description: "To be added."
  overload: Microsoft.CSharp.Activities.CSharpReference`1.CacheMetadata*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.CSharp.Activities.CSharpReference`1.Execute(System.Activities.CodeActivityContext)
  id: Execute(System.Activities.CodeActivityContext)
  parent: Microsoft.CSharp.Activities.CSharpReference`1
  langs:
  - csharp
  name: Execute(CodeActivityContext)
  nameWithType: CSharpReference<TResult>.Execute(CodeActivityContext)
  fullName: Microsoft.CSharp.Activities.CSharpReference<TResult>.Execute(CodeActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: Microsoft.CSharp.Activities
  syntax:
    content: protected override System.Activities.Location<TResult> Execute (System.Activities.CodeActivityContext context);
    parameters:
    - id: context
      type: System.Activities.CodeActivityContext
      description: "To be added."
    return:
      type: System.Activities.Location{TResult}
      description: "To be added."
  overload: Microsoft.CSharp.Activities.CSharpReference`1.Execute*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.CSharp.Activities.CSharpReference`1.ExpressionText
  id: ExpressionText
  parent: Microsoft.CSharp.Activities.CSharpReference`1
  langs:
  - csharp
  name: ExpressionText
  nameWithType: CSharpReference<TResult>.ExpressionText
  fullName: Microsoft.CSharp.Activities.CSharpReference<TResult>.ExpressionText
  type: Property
  assemblies:
  - System.Activities
  namespace: Microsoft.CSharp.Activities
  syntax:
    content: public string ExpressionText { get; set; }
    return:
      type: System.String
      description: "To be added."
  overload: Microsoft.CSharp.Activities.CSharpReference`1.ExpressionText*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.CSharp.Activities.CSharpReference`1.GetExpressionTree
  id: GetExpressionTree
  parent: Microsoft.CSharp.Activities.CSharpReference`1
  langs:
  - csharp
  name: GetExpressionTree()
  nameWithType: CSharpReference<TResult>.GetExpressionTree()
  fullName: Microsoft.CSharp.Activities.CSharpReference<TResult>.GetExpressionTree()
  type: Method
  assemblies:
  - System.Activities
  namespace: Microsoft.CSharp.Activities
  syntax:
    content: public System.Linq.Expressions.Expression GetExpressionTree ();
    parameters: []
    return:
      type: System.Linq.Expressions.Expression
      description: "To be added."
  overload: Microsoft.CSharp.Activities.CSharpReference`1.GetExpressionTree*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.CSharp.Activities.CSharpReference`1.Language
  id: Language
  parent: Microsoft.CSharp.Activities.CSharpReference`1
  langs:
  - csharp
  name: Language
  nameWithType: CSharpReference<TResult>.Language
  fullName: Microsoft.CSharp.Activities.CSharpReference<TResult>.Language
  type: Property
  assemblies:
  - System.Activities
  namespace: Microsoft.CSharp.Activities
  syntax:
    content: public string Language { get; }
    return:
      type: System.String
      description: "To be added."
  overload: Microsoft.CSharp.Activities.CSharpReference`1.Language*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.CSharp.Activities.CSharpReference`1.RequiresCompilation
  id: RequiresCompilation
  parent: Microsoft.CSharp.Activities.CSharpReference`1
  langs:
  - csharp
  name: RequiresCompilation
  nameWithType: CSharpReference<TResult>.RequiresCompilation
  fullName: Microsoft.CSharp.Activities.CSharpReference<TResult>.RequiresCompilation
  type: Property
  assemblies:
  - System.Activities
  namespace: Microsoft.CSharp.Activities
  syntax:
    content: public bool RequiresCompilation { get; }
    return:
      type: System.Boolean
      description: "To be added."
  overload: Microsoft.CSharp.Activities.CSharpReference`1.RequiresCompilation*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Activities.CodeActivity`1
  isExternal: false
  name: System.Activities.CodeActivity<System.Activities.Location<TResult>>
- uid: Microsoft.CSharp.Activities.CSharpReference`1.#ctor
  parent: Microsoft.CSharp.Activities.CSharpReference`1
  isExternal: false
  name: CSharpReference()
  nameWithType: CSharpReference<TResult>.CSharpReference()
  fullName: Microsoft.CSharp.Activities.CSharpReference<TResult>.CSharpReference()
- uid: Microsoft.CSharp.Activities.CSharpReference`1.#ctor(System.String)
  parent: Microsoft.CSharp.Activities.CSharpReference`1
  isExternal: false
  name: CSharpReference(String)
  nameWithType: CSharpReference<TResult>.CSharpReference(String)
  fullName: Microsoft.CSharp.Activities.CSharpReference<TResult>.CSharpReference(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.CSharp.Activities.CSharpReference`1.CacheMetadata(System.Activities.CodeActivityMetadata)
  parent: Microsoft.CSharp.Activities.CSharpReference`1
  isExternal: false
  name: CacheMetadata(CodeActivityMetadata)
  nameWithType: CSharpReference<TResult>.CacheMetadata(CodeActivityMetadata)
  fullName: Microsoft.CSharp.Activities.CSharpReference<TResult>.CacheMetadata(CodeActivityMetadata)
- uid: System.Activities.CodeActivityMetadata
  parent: System.Activities
  isExternal: false
  name: CodeActivityMetadata
  nameWithType: CodeActivityMetadata
  fullName: System.Activities.CodeActivityMetadata
- uid: Microsoft.CSharp.Activities.CSharpReference`1.Execute(System.Activities.CodeActivityContext)
  parent: Microsoft.CSharp.Activities.CSharpReference`1
  isExternal: false
  name: Execute(CodeActivityContext)
  nameWithType: CSharpReference<TResult>.Execute(CodeActivityContext)
  fullName: Microsoft.CSharp.Activities.CSharpReference<TResult>.Execute(CodeActivityContext)
- uid: System.Activities.Location{TResult}
  parent: System.Activities
  isExternal: false
  name: Location<TResult>
  nameWithType: Location<TResult>
  fullName: System.Activities.Location<TResult>
  spec.csharp:
  - uid: System.Activities.Location`1
    name: Location
    nameWithType: Location
    fullName: Location<TResult>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TResult
    name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.CodeActivityContext
  parent: System.Activities
  isExternal: false
  name: CodeActivityContext
  nameWithType: CodeActivityContext
  fullName: System.Activities.CodeActivityContext
- uid: Microsoft.CSharp.Activities.CSharpReference`1.ExpressionText
  parent: Microsoft.CSharp.Activities.CSharpReference`1
  isExternal: false
  name: ExpressionText
  nameWithType: CSharpReference<TResult>.ExpressionText
  fullName: Microsoft.CSharp.Activities.CSharpReference<TResult>.ExpressionText
- uid: Microsoft.CSharp.Activities.CSharpReference`1.GetExpressionTree
  parent: Microsoft.CSharp.Activities.CSharpReference`1
  isExternal: false
  name: GetExpressionTree()
  nameWithType: CSharpReference<TResult>.GetExpressionTree()
  fullName: Microsoft.CSharp.Activities.CSharpReference<TResult>.GetExpressionTree()
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: Microsoft.CSharp.Activities.CSharpReference`1.Language
  parent: Microsoft.CSharp.Activities.CSharpReference`1
  isExternal: false
  name: Language
  nameWithType: CSharpReference<TResult>.Language
  fullName: Microsoft.CSharp.Activities.CSharpReference<TResult>.Language
- uid: Microsoft.CSharp.Activities.CSharpReference`1.RequiresCompilation
  parent: Microsoft.CSharp.Activities.CSharpReference`1
  isExternal: false
  name: RequiresCompilation
  nameWithType: CSharpReference<TResult>.RequiresCompilation
  fullName: Microsoft.CSharp.Activities.CSharpReference<TResult>.RequiresCompilation
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.CSharp.Activities.CSharpReference`1.#ctor*
  parent: Microsoft.CSharp.Activities.CSharpReference`1
  isExternal: false
  name: CSharpReference<TResult>
  nameWithType: CSharpReference<TResult>.CSharpReference<TResult>
- uid: Microsoft.CSharp.Activities.CSharpReference`1.CacheMetadata*
  parent: Microsoft.CSharp.Activities.CSharpReference`1
  isExternal: false
  name: CacheMetadata
  nameWithType: CSharpReference<TResult>.CacheMetadata
- uid: Microsoft.CSharp.Activities.CSharpReference`1.Execute*
  parent: Microsoft.CSharp.Activities.CSharpReference`1
  isExternal: false
  name: Execute
  nameWithType: CSharpReference<TResult>.Execute
- uid: Microsoft.CSharp.Activities.CSharpReference`1.ExpressionText*
  parent: Microsoft.CSharp.Activities.CSharpReference`1
  isExternal: false
  name: ExpressionText
  nameWithType: CSharpReference<TResult>.ExpressionText
- uid: Microsoft.CSharp.Activities.CSharpReference`1.GetExpressionTree*
  parent: Microsoft.CSharp.Activities.CSharpReference`1
  isExternal: false
  name: GetExpressionTree
  nameWithType: CSharpReference<TResult>.GetExpressionTree
- uid: Microsoft.CSharp.Activities.CSharpReference`1.Language*
  parent: Microsoft.CSharp.Activities.CSharpReference`1
  isExternal: false
  name: Language
  nameWithType: CSharpReference<TResult>.Language
- uid: Microsoft.CSharp.Activities.CSharpReference`1.RequiresCompilation*
  parent: Microsoft.CSharp.Activities.CSharpReference`1
  isExternal: false
  name: RequiresCompilation
  nameWithType: CSharpReference<TResult>.RequiresCompilation
