### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  id: DirectoryCatalog
  children:
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String)
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.Reflection.ReflectionContext)
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String)
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String,System.Reflection.ReflectionContext)
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changed
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changing
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.Dispose(System.Boolean)
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.FullPath
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetEnumerator
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.LoadedFiles
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.Path
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.Refresh
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.SearchPattern
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin
  - System.ComponentModel.Composition.Hosting.DirectoryCatalog.ToString
  langs:
  - csharp
  name: DirectoryCatalog
  nameWithType: DirectoryCatalog
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  type: Class
  summary: "Deteta tem o atributo partes em assemblagens no diretório especificado."
  remarks: "Pode utilizar um objeto de DirectoryCatalog para analisar o conteúdo de um diretório designado. Quaisquer partes attributed contidas nos ficheiros de biblioteca (DLL) de ligação dinâmica são extraídos e disponibilizados através do catálogo. Para restringir a análise para DLLs específicos, pode especificar um padrão de pesquisa, utilizando a mesma sintaxe que o <xref:System.IO.Directory.GetFiles%2A?displayProperty=fullName>método.</xref:System.IO.Directory.GetFiles%2A?displayProperty=fullName>      > [!WARNING] > O diretório designado não deve permitir acesso para não administradores. Por exemplo, através de uma pasta que contém os ficheiros temporários do Internet criar vulnerabilidades na sua aplicação.       Este tipo implementa o <xref:System.IDisposable>interface.</xref:System.IDisposable> Quando tiver terminado com o tipo, deve eliminar-direta ou indiretamente. Para eliminar diretamente do tipo, chame o <xref:System.IDisposable.Dispose%2A>método um `try` / `catch` bloco.</xref:System.IDisposable.Dispose%2A> Para eliminar indiretamente dele, utilize uma construção de idioma, tais como `using` (em c#) ou `Using` (em Visual Basic). Para obter mais informações, consulte a secção &quot;Utilizar um objeto que implementa IDisposable&quot; o <xref:System.IDisposable>tópico de interface.</xref:System.IDisposable>"
  example:
  - "The following example creates a DirectoryCatalog object that searches the directory the application runs from for parts. It uses a simple import to test the catalog. To fulfill this import, a DLL in the directory must have a matching export, as illustrated in the second code block.  \n  \n [!code-cs[Composition.DirectoryCatalog#1](~/add/codesnippet/csharp/consoleapplication7/program.cs#1)]\n [!code-vb[Composition.DirectoryCatalog#1](~/add/codesnippet/visualbasic/consoleapplication8/module1.vb#1)]  \n  \n To create the matching export, the following code must be in a DLL file. To create a DLL file in Visual Studio, add a new project of the type \"Class Library\" to your solution, and place this code in it.  \n  \n [!code-cs[Composition.DirectoryCatalog#2](~/add/codesnippet/csharp/classlibrary1/class1.cs#2)]\n [!code-vb[Composition.DirectoryCatalog#2](~/add/codesnippet/visualbasic/classlibrary1/class1.vb#2)]"
  syntax:
    content: >-
      [System.Diagnostics.DebuggerTypeProxy(typeof(System.ComponentModel.Composition.Hosting.DirectoryCatalog/DirectoryCatalogDebuggerProxy))]

      public class DirectoryCatalog : System.ComponentModel.Composition.Primitives.ComposablePartCatalog, System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged, System.ComponentModel.Composition.Primitives.ICompositionElement
  inheritance:
  - System.Object
  - System.ComponentModel.Composition.Primitives.ComposablePartCatalog
  implements:
  - System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged
  - System.ComponentModel.Composition.Primitives.ICompositionElement
  inheritedMembers:
  - System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose
  - System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Parts
  - System.ComponentModel.Composition.Primitives.ComposablePartCatalog.System#Collections#IEnumerable#GetEnumerator
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: DirectoryCatalog(String)
  nameWithType: DirectoryCatalog.DirectoryCatalog(String)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.DirectoryCatalog(String)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ComponentModel.Composition.Hosting.DirectoryCatalog&quot;> </xref> classe utilizando <xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&quot;> </xref> objetos com base em todos os ficheiros DLL no caminho do diretório especificado."
  syntax:
    content: public DirectoryCatalog (string path);
    parameters:
    - id: path
      type: System.String
      description: "O caminho para o diretório para procurar as assemblagens adicionar ao catálogo.       O caminho tem de ser absoluto ou relativo <xref:System.AppDomain.BaseDirectory*>.</xref:System.AppDomain.BaseDirectory*>"
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Especificado <code> path </code> é inválido (por exemplo, é numa unidade não mapeada)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos específicos da implementação."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Especificado <code> path </code>, nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em computadores baseados em Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)
  id: '#ctor(System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)'
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: DirectoryCatalog(String,ICompositionElement)
  nameWithType: DirectoryCatalog.DirectoryCatalog(String,ICompositionElement)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.DirectoryCatalog(String,ICompositionElement)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ComponentModel.Composition.Hosting.DirectoryCatalog&quot;> </xref> classe utilizando <xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&quot;> </xref> objetos com base em todos os DLL ficheiros no caminho do diretório especificado com a origem especificada para partes."
  syntax:
    content: public DirectoryCatalog (string path, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);
    parameters:
    - id: path
      type: System.String
      description: "O caminho para o diretório para procurar as assemblagens adicionar ao catálogo.       O caminho tem de ser absoluto ou relativo <xref:System.AppDomain.BaseDirectory*>.</xref:System.AppDomain.BaseDirectory*>"
    - id: definitionOrigin
      type: System.ComponentModel.Composition.Primitives.ICompositionElement
      description: "O elemento utilizado pelo diagnósticos para identificar a origem de partes."
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Especificado <code> path </code> é inválido (por exemplo, é numa unidade não mapeada)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos específicos da implementação."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Especificado <code> path </code>, nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em computadores baseados em Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.Reflection.ReflectionContext)
  id: '#ctor(System.String,System.Reflection.ReflectionContext)'
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: DirectoryCatalog(String,ReflectionContext)
  nameWithType: DirectoryCatalog.DirectoryCatalog(String,ReflectionContext)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.DirectoryCatalog(String,ReflectionContext)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ComponentModel.Composition.Hosting.DirectoryCatalog&quot;> </xref> classe utilizando <xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&quot;> </xref> objetos com base em todos os ficheiros DLL no caminho do diretório especificado, no contexto de reflexão especificado."
  syntax:
    content: public DirectoryCatalog (string path, System.Reflection.ReflectionContext reflectionContext);
    parameters:
    - id: path
      type: System.String
      description: "O caminho para o diretório para procurar as assemblagens adicionar ao catálogo.       O caminho tem de ser absoluto ou relativo <xref:System.AppDomain.BaseDirectory*>.</xref:System.AppDomain.BaseDirectory*>"
    - id: reflectionContext
      type: System.Reflection.ReflectionContext
      description: "O contexto utilizado para criar as partes."
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Especificado <code> path </code> é inválido (por exemplo, é numa unidade não mapeada)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos específicos da implementação."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Especificado <code> path </code>, nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em computadores baseados em Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: DirectoryCatalog(String,String)
  nameWithType: DirectoryCatalog.DirectoryCatalog(String,String)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.DirectoryCatalog(String,String)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ComponentModel.Composition.Hosting.DirectoryCatalog&quot;> </xref> classe utilizando <xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&quot;> </xref> objetos que correspondam a um padrão de pesquisa especificada no caminho do diretório especificado."
  syntax:
    content: public DirectoryCatalog (string path, string searchPattern);
    parameters:
    - id: path
      type: System.String
      description: "O caminho para o diretório para procurar as assemblagens adicionar ao catálogo.       O caminho tem de ser absoluto ou relativo <xref:System.AppDomain.BaseDirectory*>.</xref:System.AppDomain.BaseDirectory*>"
    - id: searchPattern
      type: System.String
      description: "A cadeia de procura. O formato da cadeia deve ser igual ao especificado para o <xref:System.IO.Directory.GetFiles*>método.</xref:System.IO.Directory.GetFiles*>"
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Especificado <code> path </code> é inválido (por exemplo, é numa unidade não mapeada)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>or <code>searchPattern</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos específicos da implementação.       - ou - <code>searchPattern</code> não contém um padrão válido."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Especificado <code> path </code>, nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em computadores baseados em Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)
  id: '#ctor(System.String,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)'
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: DirectoryCatalog(String,ReflectionContext,ICompositionElement)
  nameWithType: DirectoryCatalog.DirectoryCatalog(String,ReflectionContext,ICompositionElement)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.DirectoryCatalog(String,ReflectionContext,ICompositionElement)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ComponentModel.Composition.Hosting.DirectoryCatalog&quot;> </xref> classe utilizando <xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&quot;> </xref> objetos com base em todos os ficheiros DLL no caminho do diretório especificado, no contexto de reflexão especificado."
  syntax:
    content: public DirectoryCatalog (string path, System.Reflection.ReflectionContext reflectionContext, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);
    parameters:
    - id: path
      type: System.String
      description: "O caminho para o diretório para procurar as assemblagens adicionar ao catálogo.       O caminho tem de ser absoluto ou relativo <xref:System.AppDomain.BaseDirectory*>.</xref:System.AppDomain.BaseDirectory*>"
    - id: reflectionContext
      type: System.Reflection.ReflectionContext
      description: "O contexto utilizado para criar as partes."
    - id: definitionOrigin
      type: System.ComponentModel.Composition.Primitives.ICompositionElement
      description: "O elemento utilizado pelo diagnósticos para identificar a origem de partes."
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Especificado <code> path </code> é inválido (por exemplo, é numa unidade não mapeada)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos específicos da implementação."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Especificado <code> path </code>, nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em computadores baseados em Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)
  id: '#ctor(System.String,System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)'
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: DirectoryCatalog(String,String,ICompositionElement)
  nameWithType: DirectoryCatalog.DirectoryCatalog(String,String,ICompositionElement)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.DirectoryCatalog(String,String,ICompositionElement)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ComponentModel.Composition.Hosting.DirectoryCatalog&quot;> </xref> classe utilizando <xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&quot;> </xref> objetos com base num padrão de pesquisa especificada no caminho do diretório especificado com a origem especificada para partes."
  syntax:
    content: public DirectoryCatalog (string path, string searchPattern, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);
    parameters:
    - id: path
      type: System.String
      description: "O caminho para o diretório para procurar as assemblagens adicionar ao catálogo.       O caminho tem de ser absoluto ou relativo <xref:System.AppDomain.BaseDirectory*>.</xref:System.AppDomain.BaseDirectory*>"
    - id: searchPattern
      type: System.String
      description: "A cadeia de procura. O formato da cadeia deve ser igual ao especificado para o <xref:System.IO.Directory.GetFiles*>método.</xref:System.IO.Directory.GetFiles*>"
    - id: definitionOrigin
      type: System.ComponentModel.Composition.Primitives.ICompositionElement
      description: "O elemento utilizado pelo diagnósticos para identificar a origem de partes."
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Especificado <code> path </code> é inválido (por exemplo, é numa unidade não mapeada)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>or <code>searchPattern</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos específicos da implementação.       - ou - <code>searchPattern</code> não contém um padrão válido."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Especificado <code> path </code>, nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em computadores baseados em Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String,System.Reflection.ReflectionContext)
  id: '#ctor(System.String,System.String,System.Reflection.ReflectionContext)'
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: DirectoryCatalog(String,String,ReflectionContext)
  nameWithType: DirectoryCatalog.DirectoryCatalog(String,String,ReflectionContext)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.DirectoryCatalog(String,String,ReflectionContext)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ComponentModel.Composition.Hosting.DirectoryCatalog&quot;> </xref> classe utilizando <xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&quot;> </xref> objetos com base num padrão de pesquisa especificada no caminho do diretório especificado, utilizando o contexto de reflexão especificado."
  syntax:
    content: public DirectoryCatalog (string path, string searchPattern, System.Reflection.ReflectionContext reflectionContext);
    parameters:
    - id: path
      type: System.String
      description: "O caminho para o diretório para procurar as assemblagens adicionar ao catálogo.       O caminho tem de ser absoluto ou relativo <xref:System.AppDomain.BaseDirectory*>.</xref:System.AppDomain.BaseDirectory*>"
    - id: searchPattern
      type: System.String
      description: "A cadeia de procura. O formato da cadeia deve ser igual ao especificado para o <xref:System.IO.Directory.GetFiles*>método.</xref:System.IO.Directory.GetFiles*>"
    - id: reflectionContext
      type: System.Reflection.ReflectionContext
      description: "O contexto utilizado para criar as partes."
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Especificado <code> path </code> é inválido (por exemplo, é numa unidade não mapeada)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>or <code>searchPattern</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos específicos da implementação.       - ou - <code>searchPattern</code> não contém um padrão válido."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Especificado <code> path </code>, nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em computadores baseados em Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)
  id: '#ctor(System.String,System.String,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)'
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: DirectoryCatalog(String,String,ReflectionContext,ICompositionElement)
  nameWithType: DirectoryCatalog.DirectoryCatalog(String,String,ReflectionContext,ICompositionElement)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.DirectoryCatalog(String,String,ReflectionContext,ICompositionElement)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ComponentModel.Composition.Hosting.DirectoryCatalog&quot;> </xref> classe utilizando <xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&quot;> </xref> objetos com base num padrão de pesquisa especificada no caminho do diretório especificado, utilizando o contexto de reflexão especificado."
  syntax:
    content: public DirectoryCatalog (string path, string searchPattern, System.Reflection.ReflectionContext reflectionContext, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);
    parameters:
    - id: path
      type: System.String
      description: "O caminho para o diretório para procurar as assemblagens adicionar ao catálogo.       O caminho tem de ser absoluto ou relativo <xref:System.AppDomain.BaseDirectory*>.</xref:System.AppDomain.BaseDirectory*>"
    - id: searchPattern
      type: System.String
      description: "A cadeia de procura. O formato da cadeia deve ser igual ao especificado para o <xref:System.IO.Directory.GetFiles*>método.</xref:System.IO.Directory.GetFiles*>"
    - id: reflectionContext
      type: System.Reflection.ReflectionContext
      description: "O contexto utilizado para criar as partes."
    - id: definitionOrigin
      type: System.ComponentModel.Composition.Primitives.ICompositionElement
      description: "O elemento utilizado pelo diagnósticos para identificar a origem de partes."
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Especificado <code> path </code> é inválido (por exemplo, é numa unidade não mapeada)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>or <code>searchPattern</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O chamador não tem a permissão necessária."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>é uma cadeia de comprimento de zero, contém apenas espaços em branco ou contém um ou mais carateres inválidos específicos da implementação.       - ou - <code>searchPattern</code> não contém um padrão válido."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "Especificado <code> path </code>, nome de ficheiro ou ambos excedem o comprimento máximo definido pelo sistema. Por exemplo, em computadores baseados em Windows, caminhos tem de ter menos de 248 carateres e nomes de ficheiros tem de ser inferior a 260 caracteres."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changed
  id: Changed
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: Changed
  nameWithType: DirectoryCatalog.Changed
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changed
  type: Event
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Ocorre quando o conteúdo do catálogo foi alterada."
  syntax:
    content: public event EventHandler<System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs> Changed;
    return:
      type: System.EventHandler{System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs}
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changing
  id: Changing
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: Changing
  nameWithType: DirectoryCatalog.Changing
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changing
  type: Event
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Ocorre quando o catálogo está a mudar."
  syntax:
    content: public event EventHandler<System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs> Changing;
    return:
      type: System.EventHandler{System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs}
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DirectoryCatalog.Dispose(Boolean)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Dispose(Boolean)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Liberta os recursos não geridos utilizados pelo <xref href=&quot;System.ComponentModel.Composition.Hosting.DirectoryCatalog&quot;> </xref> e opcionalmente liberta os recursos geridos."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para libertar recursos geridos e; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para libertar recursos apenas não geridos."
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.FullPath
  id: FullPath
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: FullPath
  nameWithType: DirectoryCatalog.FullPath
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.FullPath
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Obtém o caminho absoluto traduzido observado pelo <xref href=&quot;System.ComponentModel.Composition.Hosting.DirectoryCatalog&quot;> </xref> objeto."
  syntax:
    content: public string FullPath { get; }
    return:
      type: System.String
      description: "O caminho absoluto traduzido observado pelo catálogo."
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.FullPath*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetEnumerator
  id: GetEnumerator
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: DirectoryCatalog.GetEnumerator()
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetEnumerator()
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Devolve um enumerador que itera através do catálogo."
  syntax:
    content: public override System.Collections.Generic.IEnumerator<System.ComponentModel.Composition.Primitives.ComposablePartDefinition> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.ComponentModel.Composition.Primitives.ComposablePartDefinition}
      description: "Um enumerador que pode ser utilizado para iterar através do catálogo."
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)
  id: GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: GetExports(ImportDefinition)
  nameWithType: DirectoryCatalog.GetExports(ImportDefinition)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetExports(ImportDefinition)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Obtém as definições de exportação que correspondam à restrição expressa pela definição de importação especificado."
  syntax:
    content: public override System.Collections.Generic.IEnumerable<Tuple<System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition>> GetExports (System.ComponentModel.Composition.Primitives.ImportDefinition definition);
    parameters:
    - id: definition
      type: System.ComponentModel.Composition.Primitives.ImportDefinition
      description: "As condições do <xref href=&quot;System.ComponentModel.Composition.Primitives.ExportDefinition&quot;> </xref> objetos a ser devolvido."
    return:
      type: System.Collections.Generic.IEnumerable{System.Tuple{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition}}
      description: "Uma coleção de objetos que contêm o <xref href=&quot;System.ComponentModel.Composition.Primitives.ExportDefinition&quot;> </xref> objetos e respetivos associado <xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&quot;> </xref> objetos que correspondam à restrição especificada pelo <code> definition </code>."
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetExports*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref href=&quot;System.ComponentModel.Composition.Hosting.DirectoryCatalog&quot;> </xref> objeto foi eliminado."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>definition</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.LoadedFiles
  id: LoadedFiles
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: LoadedFiles
  nameWithType: DirectoryCatalog.LoadedFiles
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.LoadedFiles
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Obtém a coleção de ficheiros atualmente carregados no catálogo."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<string> LoadedFiles { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "Uma coleção de ficheiros actualmente carregados no catálogo."
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.LoadedFiles*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)
  id: OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: OnChanged(ComposablePartCatalogChangeEventArgs)
  nameWithType: DirectoryCatalog.OnChanged(ComposablePartCatalogChangeEventArgs)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanged(ComposablePartCatalogChangeEventArgs)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Gera o <xref href=&quot;System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changed&quot;> </xref> eventos."
  syntax:
    content: protected virtual void OnChanged (System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs
      description: "Um objeto que contém os dados de eventos."
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanged*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)
  id: OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: OnChanging(ComposablePartCatalogChangeEventArgs)
  nameWithType: DirectoryCatalog.OnChanging(ComposablePartCatalogChangeEventArgs)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanging(ComposablePartCatalogChangeEventArgs)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Gera o <xref href=&quot;System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changing&quot;> </xref> eventos."
  syntax:
    content: protected virtual void OnChanging (System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs
      description: "Um objeto que contém os dados de eventos."
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanging*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Path
  id: Path
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: Path
  nameWithType: DirectoryCatalog.Path
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Path
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Obtém o caminho observado pelo <xref href=&quot;System.ComponentModel.Composition.Hosting.DirectoryCatalog&quot;> </xref> objeto."
  syntax:
    content: public string Path { get; }
    return:
      type: System.String
      description: "O caminho observado pelo catálogo."
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Path*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Refresh
  id: Refresh
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: Refresh()
  nameWithType: DirectoryCatalog.Refresh()
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Refresh()
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Atualiza o <xref href=&quot;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&quot;> </xref> objetos com os ficheiros mais recentes no diretório que correspondam ao padrão de pesquisa."
  remarks: "Se foram adicionados ficheiros para o diretório, também são adicionadas ao catálogo. Se os ficheiros foram removidos do diretório, também são removidas do catálogo. Para ficheiros que foram removidos, a assemblagem não pode ser descarregado do processo, por isso, <xref:System.ComponentModel.Composition.Primitives.ComposablePartDefinition>objetos para os ficheiros serão removidos apenas a partir do catálogo.</xref:System.ComponentModel.Composition.Primitives.ComposablePartDefinition>"
  syntax:
    content: public void Refresh ();
    parameters: []
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Refresh*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.SearchPattern
  id: SearchPattern
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: SearchPattern
  nameWithType: DirectoryCatalog.SearchPattern
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.SearchPattern
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Obtém o padrão de pesquisa que é transmitido para o construtor do <xref href=&quot;System.ComponentModel.Composition.Hosting.DirectoryCatalog&quot;> </xref> objeto."
  syntax:
    content: public string SearchPattern { get; }
    return:
      type: System.String
      description: "O padrão de pesquisa do catálogo utiliza para localizar ficheiros. A predefinição é *.dll, que devolve todos os ficheiros. DLL."
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.SearchPattern*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName
  id: System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName
  isEii: true
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName
  nameWithType: DirectoryCatalog.System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Obtém o nome a apresentar do catálogo de diretório."
  remarks: "Este membro é uma implementação de membro de interface explícita. Pode ser utilizado apenas quando o <xref:System.ComponentModel.Composition.Hosting.DirectoryCatalog>instância é convertida para um <xref:System.ComponentModel.Composition.Primitives.ICompositionElement>interface.</xref:System.ComponentModel.Composition.Primitives.ICompositionElement> </xref:System.ComponentModel.Composition.Hosting.DirectoryCatalog>"
  syntax:
    content: string System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName { get; }
    return:
      type: System.String
      description: "Uma cadeia que contém um nome a apresentar legível por humanos do catálogo de diretório."
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin
  id: System#ComponentModel#Composition#Primitives#ICompositionElement#Origin
  isEii: true
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: System.ComponentModel.Composition.Primitives.ICompositionElement.Origin
  nameWithType: DirectoryCatalog.System.ComponentModel.Composition.Primitives.ICompositionElement.Origin
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.System.ComponentModel.Composition.Primitives.ICompositionElement.Origin
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Obtém o elemento de composição a partir do qual o catálogo do teve origem."
  remarks: "Este membro é uma implementação de membro de interface explícita. Pode ser utilizado apenas quando o <xref:System.ComponentModel.Composition.Hosting.DirectoryCatalog>instância é convertida para um <xref:System.ComponentModel.Composition.Primitives.ICompositionElement>interface.</xref:System.ComponentModel.Composition.Primitives.ICompositionElement> </xref:System.ComponentModel.Composition.Hosting.DirectoryCatalog>"
  syntax:
    content: System.ComponentModel.Composition.Primitives.ICompositionElement System.ComponentModel.Composition.Primitives.ICompositionElement.Origin { get; }
    return:
      type: System.ComponentModel.Composition.Primitives.ICompositionElement
      description: "Always <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.ToString
  id: ToString
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  langs:
  - csharp
  name: ToString()
  nameWithType: DirectoryCatalog.ToString()
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.ToString()
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Obtém uma representação de cadeia do catálogo de diretório."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Uma representação de cadeia do catálogo."
  overload: System.ComponentModel.Composition.Hosting.DirectoryCatalog.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
  isExternal: false
  name: System.ComponentModel.Composition.Primitives.ComposablePartCatalog
- uid: System.IO.DirectoryNotFoundException
  isExternal: true
  name: System.IO.DirectoryNotFoundException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IO.PathTooLongException
  isExternal: true
  name: System.IO.PathTooLongException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String)
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: DirectoryCatalog(String)
  nameWithType: DirectoryCatalog.DirectoryCatalog(String)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.DirectoryCatalog(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: DirectoryCatalog(String,ICompositionElement)
  nameWithType: DirectoryCatalog.DirectoryCatalog(String,ICompositionElement)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.DirectoryCatalog(String,ICompositionElement)
- uid: System.ComponentModel.Composition.Primitives.ICompositionElement
  parent: System.ComponentModel.Composition.Primitives
  isExternal: false
  name: ICompositionElement
  nameWithType: ICompositionElement
  fullName: System.ComponentModel.Composition.Primitives.ICompositionElement
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.Reflection.ReflectionContext)
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: DirectoryCatalog(String,ReflectionContext)
  nameWithType: DirectoryCatalog.DirectoryCatalog(String,ReflectionContext)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.DirectoryCatalog(String,ReflectionContext)
- uid: System.Reflection.ReflectionContext
  parent: System.Reflection
  isExternal: true
  name: ReflectionContext
  nameWithType: ReflectionContext
  fullName: System.Reflection.ReflectionContext
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String)
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: DirectoryCatalog(String,String)
  nameWithType: DirectoryCatalog.DirectoryCatalog(String,String)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.DirectoryCatalog(String,String)
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: DirectoryCatalog(String,ReflectionContext,ICompositionElement)
  nameWithType: DirectoryCatalog.DirectoryCatalog(String,ReflectionContext,ICompositionElement)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.DirectoryCatalog(String,ReflectionContext,ICompositionElement)
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: DirectoryCatalog(String,String,ICompositionElement)
  nameWithType: DirectoryCatalog.DirectoryCatalog(String,String,ICompositionElement)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.DirectoryCatalog(String,String,ICompositionElement)
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String,System.Reflection.ReflectionContext)
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: DirectoryCatalog(String,String,ReflectionContext)
  nameWithType: DirectoryCatalog.DirectoryCatalog(String,String,ReflectionContext)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.DirectoryCatalog(String,String,ReflectionContext)
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor(System.String,System.String,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: DirectoryCatalog(String,String,ReflectionContext,ICompositionElement)
  nameWithType: DirectoryCatalog.DirectoryCatalog(String,String,ReflectionContext,ICompositionElement)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.DirectoryCatalog(String,String,ReflectionContext,ICompositionElement)
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changed
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: Changed
  nameWithType: DirectoryCatalog.Changed
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changed
- uid: System.EventHandler{System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ComposablePartCatalogChangeEventArgs>
  nameWithType: EventHandler<ComposablePartCatalogChangeEventArgs>
  fullName: System.EventHandler<System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs
    name: ComposablePartCatalogChangeEventArgs
    nameWithType: ComposablePartCatalogChangeEventArgs
    fullName: ComposablePartCatalogChangeEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changing
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: Changing
  nameWithType: DirectoryCatalog.Changing
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Changing
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Dispose(System.Boolean)
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DirectoryCatalog.Dispose(Boolean)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.FullPath
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: FullPath
  nameWithType: DirectoryCatalog.FullPath
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.FullPath
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetEnumerator
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: GetEnumerator()
  nameWithType: DirectoryCatalog.GetEnumerator()
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.ComponentModel.Composition.Primitives.ComposablePartDefinition}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<ComposablePartDefinition>
  nameWithType: IEnumerator<ComposablePartDefinition>
  fullName: System.Collections.Generic.IEnumerator<System.ComponentModel.Composition.Primitives.ComposablePartDefinition>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.ComponentModel.Composition.Primitives.ComposablePartDefinition>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.Composition.Primitives.ComposablePartDefinition
    name: ComposablePartDefinition
    nameWithType: ComposablePartDefinition
    fullName: ComposablePartDefinition
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: GetExports(ImportDefinition)
  nameWithType: DirectoryCatalog.GetExports(ImportDefinition)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetExports(ImportDefinition)
- uid: System.Collections.Generic.IEnumerable{System.Tuple{System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition}}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Tuple<ComposablePartDefinition,ExportDefinition>>
  nameWithType: IEnumerable<Tuple<ComposablePartDefinition,ExportDefinition>>
  fullName: System.Collections.Generic.IEnumerable<System.Tuple<System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Tuple<System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: Tuple<System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.Composition.Primitives.ComposablePartDefinition
    name: ComposablePartDefinition
    nameWithType: ComposablePartDefinition
    fullName: ComposablePartDefinition
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.ComponentModel.Composition.Primitives.ExportDefinition
    name: ExportDefinition
    nameWithType: ExportDefinition
    fullName: ExportDefinition
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Primitives.ImportDefinition
  parent: System.ComponentModel.Composition.Primitives
  isExternal: false
  name: ImportDefinition
  nameWithType: ImportDefinition
  fullName: System.ComponentModel.Composition.Primitives.ImportDefinition
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.LoadedFiles
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: LoadedFiles
  nameWithType: DirectoryCatalog.LoadedFiles
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.LoadedFiles
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<String>
  nameWithType: ReadOnlyCollection<String>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.String>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: OnChanged(ComposablePartCatalogChangeEventArgs)
  nameWithType: DirectoryCatalog.OnChanged(ComposablePartCatalogChangeEventArgs)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanged(ComposablePartCatalogChangeEventArgs)
- uid: System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs
  parent: System.ComponentModel.Composition.Hosting
  isExternal: false
  name: ComposablePartCatalogChangeEventArgs
  nameWithType: ComposablePartCatalogChangeEventArgs
  fullName: System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: OnChanging(ComposablePartCatalogChangeEventArgs)
  nameWithType: DirectoryCatalog.OnChanging(ComposablePartCatalogChangeEventArgs)
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanging(ComposablePartCatalogChangeEventArgs)
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Path
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: Path
  nameWithType: DirectoryCatalog.Path
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Path
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Refresh
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: Refresh()
  nameWithType: DirectoryCatalog.Refresh()
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Refresh()
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.SearchPattern
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: SearchPattern
  nameWithType: DirectoryCatalog.SearchPattern
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.SearchPattern
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName
  nameWithType: DirectoryCatalog.System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: System.ComponentModel.Composition.Primitives.ICompositionElement.Origin
  nameWithType: DirectoryCatalog.System.ComponentModel.Composition.Primitives.ICompositionElement.Origin
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.System.ComponentModel.Composition.Primitives.ICompositionElement.Origin
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.ToString
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: ToString()
  nameWithType: DirectoryCatalog.ToString()
  fullName: System.ComponentModel.Composition.Hosting.DirectoryCatalog.ToString()
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.#ctor*
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: DirectoryCatalog
  nameWithType: DirectoryCatalog.DirectoryCatalog
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Dispose*
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: Dispose
  nameWithType: DirectoryCatalog.Dispose
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.FullPath*
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: FullPath
  nameWithType: DirectoryCatalog.FullPath
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetEnumerator*
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: GetEnumerator
  nameWithType: DirectoryCatalog.GetEnumerator
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.GetExports*
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: GetExports
  nameWithType: DirectoryCatalog.GetExports
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.LoadedFiles*
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: LoadedFiles
  nameWithType: DirectoryCatalog.LoadedFiles
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanged*
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: OnChanged
  nameWithType: DirectoryCatalog.OnChanged
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.OnChanging*
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: OnChanging
  nameWithType: DirectoryCatalog.OnChanging
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Path*
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: Path
  nameWithType: DirectoryCatalog.Path
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.Refresh*
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: Refresh
  nameWithType: DirectoryCatalog.Refresh
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.SearchPattern*
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: SearchPattern
  nameWithType: DirectoryCatalog.SearchPattern
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName*
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName
  nameWithType: DirectoryCatalog.System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin*
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: System.ComponentModel.Composition.Primitives.ICompositionElement.Origin
  nameWithType: DirectoryCatalog.System.ComponentModel.Composition.Primitives.ICompositionElement.Origin
- uid: System.ComponentModel.Composition.Hosting.DirectoryCatalog.ToString*
  parent: System.ComponentModel.Composition.Hosting.DirectoryCatalog
  isExternal: false
  name: ToString
  nameWithType: DirectoryCatalog.ToString
