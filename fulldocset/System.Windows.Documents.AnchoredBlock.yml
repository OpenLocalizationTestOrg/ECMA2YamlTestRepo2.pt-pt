### YamlMime:ManagedReference
items:
- uid: System.Windows.Documents.AnchoredBlock
  id: AnchoredBlock
  children:
  - System.Windows.Documents.AnchoredBlock.#ctor(System.Windows.Documents.Block,System.Windows.Documents.TextPointer)
  - System.Windows.Documents.AnchoredBlock.Blocks
  - System.Windows.Documents.AnchoredBlock.BorderBrush
  - System.Windows.Documents.AnchoredBlock.BorderBrushProperty
  - System.Windows.Documents.AnchoredBlock.BorderThickness
  - System.Windows.Documents.AnchoredBlock.BorderThicknessProperty
  - System.Windows.Documents.AnchoredBlock.LineHeight
  - System.Windows.Documents.AnchoredBlock.LineHeightProperty
  - System.Windows.Documents.AnchoredBlock.LineStackingStrategy
  - System.Windows.Documents.AnchoredBlock.LineStackingStrategyProperty
  - System.Windows.Documents.AnchoredBlock.Margin
  - System.Windows.Documents.AnchoredBlock.MarginProperty
  - System.Windows.Documents.AnchoredBlock.Padding
  - System.Windows.Documents.AnchoredBlock.PaddingProperty
  - System.Windows.Documents.AnchoredBlock.ShouldSerializeBlocks(System.Windows.Markup.XamlDesignerSerializationManager)
  - System.Windows.Documents.AnchoredBlock.TextAlignment
  - System.Windows.Documents.AnchoredBlock.TextAlignmentProperty
  langs:
  - csharp
  name: AnchoredBlock
  nameWithType: AnchoredBlock
  fullName: System.Windows.Documents.AnchoredBlock
  type: Class
  summary: "An abstract class that provides a base for <xref href=&quot;System.Windows.Documents.Inline&quot;></xref> elements that are used to anchor <xref href=&quot;System.Windows.Documents.Block&quot;></xref> elements to flow content."
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("Blocks")]

      public abstract class AnchoredBlock : System.Windows.Documents.Inline
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.ContentElement
  - System.Windows.FrameworkContentElement
  - System.Windows.Documents.TextElement
  - System.Windows.Documents.Inline
  implements: []
  inheritedMembers:
  - System.Windows.ContentElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)
  - System.Windows.ContentElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)
  - System.Windows.ContentElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)
  - System.Windows.ContentElement.AllowDrop
  - System.Windows.ContentElement.AllowDropProperty
  - System.Windows.ContentElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.ContentElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.ContentElement.AreAnyTouchesCaptured
  - System.Windows.ContentElement.AreAnyTouchesCapturedProperty
  - System.Windows.ContentElement.AreAnyTouchesCapturedWithin
  - System.Windows.ContentElement.AreAnyTouchesCapturedWithinProperty
  - System.Windows.ContentElement.AreAnyTouchesDirectlyOver
  - System.Windows.ContentElement.AreAnyTouchesDirectlyOverProperty
  - System.Windows.ContentElement.AreAnyTouchesOver
  - System.Windows.ContentElement.AreAnyTouchesOverProperty
  - System.Windows.ContentElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.ContentElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.ContentElement.CaptureMouse
  - System.Windows.ContentElement.CaptureStylus
  - System.Windows.ContentElement.CaptureTouch(System.Windows.Input.TouchDevice)
  - System.Windows.ContentElement.CommandBindings
  - System.Windows.ContentElement.DragEnter
  - System.Windows.ContentElement.DragEnterEvent
  - System.Windows.ContentElement.DragLeave
  - System.Windows.ContentElement.DragLeaveEvent
  - System.Windows.ContentElement.DragOver
  - System.Windows.ContentElement.DragOverEvent
  - System.Windows.ContentElement.Drop
  - System.Windows.ContentElement.DropEvent
  - System.Windows.ContentElement.Focus
  - System.Windows.ContentElement.Focusable
  - System.Windows.ContentElement.FocusableChanged
  - System.Windows.ContentElement.FocusableProperty
  - System.Windows.ContentElement.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.ContentElement.GiveFeedback
  - System.Windows.ContentElement.GiveFeedbackEvent
  - System.Windows.ContentElement.GotFocus
  - System.Windows.ContentElement.GotFocusEvent
  - System.Windows.ContentElement.GotKeyboardFocus
  - System.Windows.ContentElement.GotKeyboardFocusEvent
  - System.Windows.ContentElement.GotMouseCapture
  - System.Windows.ContentElement.GotMouseCaptureEvent
  - System.Windows.ContentElement.GotStylusCapture
  - System.Windows.ContentElement.GotStylusCaptureEvent
  - System.Windows.ContentElement.GotTouchCapture
  - System.Windows.ContentElement.GotTouchCaptureEvent
  - System.Windows.ContentElement.HasAnimatedProperties
  - System.Windows.ContentElement.InputBindings
  - System.Windows.ContentElement.IsEnabled
  - System.Windows.ContentElement.IsEnabledChanged
  - System.Windows.ContentElement.IsEnabledCore
  - System.Windows.ContentElement.IsEnabledProperty
  - System.Windows.ContentElement.IsFocused
  - System.Windows.ContentElement.IsFocusedProperty
  - System.Windows.ContentElement.IsInputMethodEnabled
  - System.Windows.ContentElement.IsKeyboardFocused
  - System.Windows.ContentElement.IsKeyboardFocusedChanged
  - System.Windows.ContentElement.IsKeyboardFocusedProperty
  - System.Windows.ContentElement.IsKeyboardFocusWithin
  - System.Windows.ContentElement.IsKeyboardFocusWithinChanged
  - System.Windows.ContentElement.IsKeyboardFocusWithinProperty
  - System.Windows.ContentElement.IsMouseCaptured
  - System.Windows.ContentElement.IsMouseCapturedChanged
  - System.Windows.ContentElement.IsMouseCapturedProperty
  - System.Windows.ContentElement.IsMouseCaptureWithin
  - System.Windows.ContentElement.IsMouseCaptureWithinChanged
  - System.Windows.ContentElement.IsMouseCaptureWithinProperty
  - System.Windows.ContentElement.IsMouseDirectlyOver
  - System.Windows.ContentElement.IsMouseDirectlyOverChanged
  - System.Windows.ContentElement.IsMouseDirectlyOverProperty
  - System.Windows.ContentElement.IsMouseOver
  - System.Windows.ContentElement.IsMouseOverProperty
  - System.Windows.ContentElement.IsStylusCaptured
  - System.Windows.ContentElement.IsStylusCapturedChanged
  - System.Windows.ContentElement.IsStylusCapturedProperty
  - System.Windows.ContentElement.IsStylusCaptureWithin
  - System.Windows.ContentElement.IsStylusCaptureWithinChanged
  - System.Windows.ContentElement.IsStylusCaptureWithinProperty
  - System.Windows.ContentElement.IsStylusDirectlyOver
  - System.Windows.ContentElement.IsStylusDirectlyOverChanged
  - System.Windows.ContentElement.IsStylusDirectlyOverProperty
  - System.Windows.ContentElement.IsStylusOver
  - System.Windows.ContentElement.IsStylusOverProperty
  - System.Windows.ContentElement.KeyDown
  - System.Windows.ContentElement.KeyDownEvent
  - System.Windows.ContentElement.KeyUp
  - System.Windows.ContentElement.KeyUpEvent
  - System.Windows.ContentElement.LostFocus
  - System.Windows.ContentElement.LostFocusEvent
  - System.Windows.ContentElement.LostKeyboardFocus
  - System.Windows.ContentElement.LostKeyboardFocusEvent
  - System.Windows.ContentElement.LostMouseCapture
  - System.Windows.ContentElement.LostMouseCaptureEvent
  - System.Windows.ContentElement.LostStylusCapture
  - System.Windows.ContentElement.LostStylusCaptureEvent
  - System.Windows.ContentElement.LostTouchCapture
  - System.Windows.ContentElement.LostTouchCaptureEvent
  - System.Windows.ContentElement.MouseDown
  - System.Windows.ContentElement.MouseDownEvent
  - System.Windows.ContentElement.MouseEnter
  - System.Windows.ContentElement.MouseEnterEvent
  - System.Windows.ContentElement.MouseLeave
  - System.Windows.ContentElement.MouseLeaveEvent
  - System.Windows.ContentElement.MouseLeftButtonDown
  - System.Windows.ContentElement.MouseLeftButtonDownEvent
  - System.Windows.ContentElement.MouseLeftButtonUp
  - System.Windows.ContentElement.MouseLeftButtonUpEvent
  - System.Windows.ContentElement.MouseMove
  - System.Windows.ContentElement.MouseMoveEvent
  - System.Windows.ContentElement.MouseRightButtonDown
  - System.Windows.ContentElement.MouseRightButtonDownEvent
  - System.Windows.ContentElement.MouseRightButtonUp
  - System.Windows.ContentElement.MouseRightButtonUpEvent
  - System.Windows.ContentElement.MouseUp
  - System.Windows.ContentElement.MouseUpEvent
  - System.Windows.ContentElement.MouseWheel
  - System.Windows.ContentElement.MouseWheelEvent
  - System.Windows.ContentElement.OnCreateAutomationPeer
  - System.Windows.ContentElement.OnDragEnter(System.Windows.DragEventArgs)
  - System.Windows.ContentElement.OnDragLeave(System.Windows.DragEventArgs)
  - System.Windows.ContentElement.OnDragOver(System.Windows.DragEventArgs)
  - System.Windows.ContentElement.OnDrop(System.Windows.DragEventArgs)
  - System.Windows.ContentElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  - System.Windows.ContentElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.ContentElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)
  - System.Windows.ContentElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)
  - System.Windows.ContentElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.ContentElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.ContentElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.ContentElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.ContentElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.ContentElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.ContentElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.ContentElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.ContentElement.OnKeyDown(System.Windows.Input.KeyEventArgs)
  - System.Windows.ContentElement.OnKeyUp(System.Windows.Input.KeyEventArgs)
  - System.Windows.ContentElement.OnLostFocus(System.Windows.RoutedEventArgs)
  - System.Windows.ContentElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.ContentElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)
  - System.Windows.ContentElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)
  - System.Windows.ContentElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.ContentElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)
  - System.Windows.ContentElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)
  - System.Windows.ContentElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.ContentElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.ContentElement.OnMouseMove(System.Windows.Input.MouseEventArgs)
  - System.Windows.ContentElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.ContentElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.ContentElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.ContentElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  - System.Windows.ContentElement.OnPreviewDragEnter(System.Windows.DragEventArgs)
  - System.Windows.ContentElement.OnPreviewDragLeave(System.Windows.DragEventArgs)
  - System.Windows.ContentElement.OnPreviewDragOver(System.Windows.DragEventArgs)
  - System.Windows.ContentElement.OnPreviewDrop(System.Windows.DragEventArgs)
  - System.Windows.ContentElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)
  - System.Windows.ContentElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.ContentElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)
  - System.Windows.ContentElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)
  - System.Windows.ContentElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)
  - System.Windows.ContentElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.ContentElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.ContentElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.ContentElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)
  - System.Windows.ContentElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.ContentElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.ContentElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)
  - System.Windows.ContentElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)
  - System.Windows.ContentElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  - System.Windows.ContentElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.ContentElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.ContentElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)
  - System.Windows.ContentElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  - System.Windows.ContentElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)
  - System.Windows.ContentElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)
  - System.Windows.ContentElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)
  - System.Windows.ContentElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)
  - System.Windows.ContentElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)
  - System.Windows.ContentElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)
  - System.Windows.ContentElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.ContentElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)
  - System.Windows.ContentElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)
  - System.Windows.ContentElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnStylusMove(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)
  - System.Windows.ContentElement.OnStylusUp(System.Windows.Input.StylusEventArgs)
  - System.Windows.ContentElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)
  - System.Windows.ContentElement.OnTouchDown(System.Windows.Input.TouchEventArgs)
  - System.Windows.ContentElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)
  - System.Windows.ContentElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)
  - System.Windows.ContentElement.OnTouchMove(System.Windows.Input.TouchEventArgs)
  - System.Windows.ContentElement.OnTouchUp(System.Windows.Input.TouchEventArgs)
  - System.Windows.ContentElement.PreviewDragEnter
  - System.Windows.ContentElement.PreviewDragEnterEvent
  - System.Windows.ContentElement.PreviewDragLeave
  - System.Windows.ContentElement.PreviewDragLeaveEvent
  - System.Windows.ContentElement.PreviewDragOver
  - System.Windows.ContentElement.PreviewDragOverEvent
  - System.Windows.ContentElement.PreviewDrop
  - System.Windows.ContentElement.PreviewDropEvent
  - System.Windows.ContentElement.PreviewGiveFeedback
  - System.Windows.ContentElement.PreviewGiveFeedbackEvent
  - System.Windows.ContentElement.PreviewGotKeyboardFocus
  - System.Windows.ContentElement.PreviewGotKeyboardFocusEvent
  - System.Windows.ContentElement.PreviewKeyDown
  - System.Windows.ContentElement.PreviewKeyDownEvent
  - System.Windows.ContentElement.PreviewKeyUp
  - System.Windows.ContentElement.PreviewKeyUpEvent
  - System.Windows.ContentElement.PreviewLostKeyboardFocus
  - System.Windows.ContentElement.PreviewLostKeyboardFocusEvent
  - System.Windows.ContentElement.PreviewMouseDown
  - System.Windows.ContentElement.PreviewMouseDownEvent
  - System.Windows.ContentElement.PreviewMouseLeftButtonDown
  - System.Windows.ContentElement.PreviewMouseLeftButtonDownEvent
  - System.Windows.ContentElement.PreviewMouseLeftButtonUp
  - System.Windows.ContentElement.PreviewMouseLeftButtonUpEvent
  - System.Windows.ContentElement.PreviewMouseMove
  - System.Windows.ContentElement.PreviewMouseMoveEvent
  - System.Windows.ContentElement.PreviewMouseRightButtonDown
  - System.Windows.ContentElement.PreviewMouseRightButtonDownEvent
  - System.Windows.ContentElement.PreviewMouseRightButtonUp
  - System.Windows.ContentElement.PreviewMouseRightButtonUpEvent
  - System.Windows.ContentElement.PreviewMouseUp
  - System.Windows.ContentElement.PreviewMouseUpEvent
  - System.Windows.ContentElement.PreviewMouseWheel
  - System.Windows.ContentElement.PreviewMouseWheelEvent
  - System.Windows.ContentElement.PreviewQueryContinueDrag
  - System.Windows.ContentElement.PreviewQueryContinueDragEvent
  - System.Windows.ContentElement.PreviewStylusButtonDown
  - System.Windows.ContentElement.PreviewStylusButtonDownEvent
  - System.Windows.ContentElement.PreviewStylusButtonUp
  - System.Windows.ContentElement.PreviewStylusButtonUpEvent
  - System.Windows.ContentElement.PreviewStylusDown
  - System.Windows.ContentElement.PreviewStylusDownEvent
  - System.Windows.ContentElement.PreviewStylusInAirMove
  - System.Windows.ContentElement.PreviewStylusInAirMoveEvent
  - System.Windows.ContentElement.PreviewStylusInRange
  - System.Windows.ContentElement.PreviewStylusInRangeEvent
  - System.Windows.ContentElement.PreviewStylusMove
  - System.Windows.ContentElement.PreviewStylusMoveEvent
  - System.Windows.ContentElement.PreviewStylusOutOfRange
  - System.Windows.ContentElement.PreviewStylusOutOfRangeEvent
  - System.Windows.ContentElement.PreviewStylusSystemGesture
  - System.Windows.ContentElement.PreviewStylusSystemGestureEvent
  - System.Windows.ContentElement.PreviewStylusUp
  - System.Windows.ContentElement.PreviewStylusUpEvent
  - System.Windows.ContentElement.PreviewTextInput
  - System.Windows.ContentElement.PreviewTextInputEvent
  - System.Windows.ContentElement.PreviewTouchDown
  - System.Windows.ContentElement.PreviewTouchDownEvent
  - System.Windows.ContentElement.PreviewTouchMove
  - System.Windows.ContentElement.PreviewTouchMoveEvent
  - System.Windows.ContentElement.PreviewTouchUp
  - System.Windows.ContentElement.PreviewTouchUpEvent
  - System.Windows.ContentElement.QueryContinueDrag
  - System.Windows.ContentElement.QueryContinueDragEvent
  - System.Windows.ContentElement.QueryCursor
  - System.Windows.ContentElement.QueryCursorEvent
  - System.Windows.ContentElement.RaiseEvent(System.Windows.RoutedEventArgs)
  - System.Windows.ContentElement.ReleaseAllTouchCaptures
  - System.Windows.ContentElement.ReleaseMouseCapture
  - System.Windows.ContentElement.ReleaseStylusCapture
  - System.Windows.ContentElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)
  - System.Windows.ContentElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)
  - System.Windows.ContentElement.ShouldSerializeCommandBindings
  - System.Windows.ContentElement.ShouldSerializeInputBindings
  - System.Windows.ContentElement.StylusButtonDown
  - System.Windows.ContentElement.StylusButtonDownEvent
  - System.Windows.ContentElement.StylusButtonUp
  - System.Windows.ContentElement.StylusButtonUpEvent
  - System.Windows.ContentElement.StylusDown
  - System.Windows.ContentElement.StylusDownEvent
  - System.Windows.ContentElement.StylusEnter
  - System.Windows.ContentElement.StylusEnterEvent
  - System.Windows.ContentElement.StylusInAirMove
  - System.Windows.ContentElement.StylusInAirMoveEvent
  - System.Windows.ContentElement.StylusInRange
  - System.Windows.ContentElement.StylusInRangeEvent
  - System.Windows.ContentElement.StylusLeave
  - System.Windows.ContentElement.StylusLeaveEvent
  - System.Windows.ContentElement.StylusMove
  - System.Windows.ContentElement.StylusMoveEvent
  - System.Windows.ContentElement.StylusOutOfRange
  - System.Windows.ContentElement.StylusOutOfRangeEvent
  - System.Windows.ContentElement.StylusSystemGesture
  - System.Windows.ContentElement.StylusSystemGestureEvent
  - System.Windows.ContentElement.StylusUp
  - System.Windows.ContentElement.StylusUpEvent
  - System.Windows.ContentElement.TextInput
  - System.Windows.ContentElement.TextInputEvent
  - System.Windows.ContentElement.TouchDown
  - System.Windows.ContentElement.TouchDownEvent
  - System.Windows.ContentElement.TouchEnter
  - System.Windows.ContentElement.TouchEnterEvent
  - System.Windows.ContentElement.TouchesCaptured
  - System.Windows.ContentElement.TouchesCapturedWithin
  - System.Windows.ContentElement.TouchesDirectlyOver
  - System.Windows.ContentElement.TouchesOver
  - System.Windows.ContentElement.TouchLeave
  - System.Windows.ContentElement.TouchLeaveEvent
  - System.Windows.ContentElement.TouchMove
  - System.Windows.ContentElement.TouchMoveEvent
  - System.Windows.ContentElement.TouchUp
  - System.Windows.ContentElement.TouchUpEvent
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Documents.Inline.BaselineAlignment
  - System.Windows.Documents.Inline.BaselineAlignmentProperty
  - System.Windows.Documents.Inline.FlowDirection
  - System.Windows.Documents.Inline.FlowDirectionProperty
  - System.Windows.Documents.Inline.NextInline
  - System.Windows.Documents.Inline.PreviousInline
  - System.Windows.Documents.Inline.SiblingInlines
  - System.Windows.Documents.Inline.TextDecorations
  - System.Windows.Documents.Inline.TextDecorationsProperty
  - System.Windows.Documents.TextElement.Background
  - System.Windows.Documents.TextElement.BackgroundProperty
  - System.Windows.Documents.TextElement.ContentEnd
  - System.Windows.Documents.TextElement.ContentStart
  - System.Windows.Documents.TextElement.ElementEnd
  - System.Windows.Documents.TextElement.ElementStart
  - System.Windows.Documents.TextElement.FontFamily
  - System.Windows.Documents.TextElement.FontFamilyProperty
  - System.Windows.Documents.TextElement.FontSize
  - System.Windows.Documents.TextElement.FontSizeProperty
  - System.Windows.Documents.TextElement.FontStretch
  - System.Windows.Documents.TextElement.FontStretchProperty
  - System.Windows.Documents.TextElement.FontStyle
  - System.Windows.Documents.TextElement.FontStyleProperty
  - System.Windows.Documents.TextElement.FontWeight
  - System.Windows.Documents.TextElement.FontWeightProperty
  - System.Windows.Documents.TextElement.Foreground
  - System.Windows.Documents.TextElement.ForegroundProperty
  - System.Windows.Documents.TextElement.GetFontFamily(System.Windows.DependencyObject)
  - System.Windows.Documents.TextElement.GetFontSize(System.Windows.DependencyObject)
  - System.Windows.Documents.TextElement.GetFontStretch(System.Windows.DependencyObject)
  - System.Windows.Documents.TextElement.GetFontStyle(System.Windows.DependencyObject)
  - System.Windows.Documents.TextElement.GetFontWeight(System.Windows.DependencyObject)
  - System.Windows.Documents.TextElement.GetForeground(System.Windows.DependencyObject)
  - System.Windows.Documents.TextElement.LogicalChildren
  - System.Windows.Documents.TextElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Documents.TextElement.SetFontFamily(System.Windows.DependencyObject,System.Windows.Media.FontFamily)
  - System.Windows.Documents.TextElement.SetFontSize(System.Windows.DependencyObject,System.Double)
  - System.Windows.Documents.TextElement.SetFontStretch(System.Windows.DependencyObject,System.Windows.FontStretch)
  - System.Windows.Documents.TextElement.SetFontStyle(System.Windows.DependencyObject,System.Windows.FontStyle)
  - System.Windows.Documents.TextElement.SetFontWeight(System.Windows.DependencyObject,System.Windows.FontWeight)
  - System.Windows.Documents.TextElement.SetForeground(System.Windows.DependencyObject,System.Windows.Media.Brush)
  - System.Windows.Documents.TextElement.System#Windows#Markup#IAddChild#AddChild(System.Object)
  - System.Windows.Documents.TextElement.System#Windows#Markup#IAddChild#AddText(System.String)
  - System.Windows.Documents.TextElement.TextEffects
  - System.Windows.Documents.TextElement.TextEffectsProperty
  - System.Windows.Documents.TextElement.Typography
  - System.Windows.FrameworkContentElement.AddLogicalChild(System.Object)
  - System.Windows.FrameworkContentElement.BeginInit
  - System.Windows.FrameworkContentElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)
  - System.Windows.FrameworkContentElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.FrameworkContentElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)
  - System.Windows.FrameworkContentElement.BindingGroup
  - System.Windows.FrameworkContentElement.BindingGroupProperty
  - System.Windows.FrameworkContentElement.BringIntoView
  - System.Windows.FrameworkContentElement.ContextMenu
  - System.Windows.FrameworkContentElement.ContextMenuClosing
  - System.Windows.FrameworkContentElement.ContextMenuClosingEvent
  - System.Windows.FrameworkContentElement.ContextMenuOpening
  - System.Windows.FrameworkContentElement.ContextMenuOpeningEvent
  - System.Windows.FrameworkContentElement.ContextMenuProperty
  - System.Windows.FrameworkContentElement.Cursor
  - System.Windows.FrameworkContentElement.CursorProperty
  - System.Windows.FrameworkContentElement.DataContext
  - System.Windows.FrameworkContentElement.DataContextChanged
  - System.Windows.FrameworkContentElement.DataContextProperty
  - System.Windows.FrameworkContentElement.DefaultStyleKey
  - System.Windows.FrameworkContentElement.DefaultStyleKeyProperty
  - System.Windows.FrameworkContentElement.EndInit
  - System.Windows.FrameworkContentElement.FindName(System.String)
  - System.Windows.FrameworkContentElement.FindResource(System.Object)
  - System.Windows.FrameworkContentElement.FocusVisualStyle
  - System.Windows.FrameworkContentElement.FocusVisualStyleProperty
  - System.Windows.FrameworkContentElement.ForceCursor
  - System.Windows.FrameworkContentElement.ForceCursorProperty
  - System.Windows.FrameworkContentElement.GetBindingExpression(System.Windows.DependencyProperty)
  - System.Windows.FrameworkContentElement.GetUIParentCore
  - System.Windows.FrameworkContentElement.Initialized
  - System.Windows.FrameworkContentElement.InputScope
  - System.Windows.FrameworkContentElement.InputScopeProperty
  - System.Windows.FrameworkContentElement.IsInitialized
  - System.Windows.FrameworkContentElement.IsLoaded
  - System.Windows.FrameworkContentElement.Language
  - System.Windows.FrameworkContentElement.LanguageProperty
  - System.Windows.FrameworkContentElement.Loaded
  - System.Windows.FrameworkContentElement.LoadedEvent
  - System.Windows.FrameworkContentElement.MoveFocus(System.Windows.Input.TraversalRequest)
  - System.Windows.FrameworkContentElement.Name
  - System.Windows.FrameworkContentElement.NameProperty
  - System.Windows.FrameworkContentElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)
  - System.Windows.FrameworkContentElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)
  - System.Windows.FrameworkContentElement.OnGotFocus(System.Windows.RoutedEventArgs)
  - System.Windows.FrameworkContentElement.OnInitialized(System.EventArgs)
  - System.Windows.FrameworkContentElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)
  - System.Windows.FrameworkContentElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)
  - System.Windows.FrameworkContentElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)
  - System.Windows.FrameworkContentElement.OverridesDefaultStyle
  - System.Windows.FrameworkContentElement.OverridesDefaultStyleProperty
  - System.Windows.FrameworkContentElement.Parent
  - System.Windows.FrameworkContentElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)
  - System.Windows.FrameworkContentElement.RegisterName(System.String,System.Object)
  - System.Windows.FrameworkContentElement.RemoveLogicalChild(System.Object)
  - System.Windows.FrameworkContentElement.Resources
  - System.Windows.FrameworkContentElement.SetBinding(System.Windows.DependencyProperty,System.String)
  - System.Windows.FrameworkContentElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)
  - System.Windows.FrameworkContentElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)
  - System.Windows.FrameworkContentElement.ShouldSerializeResources
  - System.Windows.FrameworkContentElement.ShouldSerializeStyle
  - System.Windows.FrameworkContentElement.SourceUpdated
  - System.Windows.FrameworkContentElement.Style
  - System.Windows.FrameworkContentElement.StyleProperty
  - System.Windows.FrameworkContentElement.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)
  - System.Windows.FrameworkContentElement.Tag
  - System.Windows.FrameworkContentElement.TagProperty
  - System.Windows.FrameworkContentElement.TargetUpdated
  - System.Windows.FrameworkContentElement.TemplatedParent
  - System.Windows.FrameworkContentElement.ToolTip
  - System.Windows.FrameworkContentElement.ToolTipClosing
  - System.Windows.FrameworkContentElement.ToolTipClosingEvent
  - System.Windows.FrameworkContentElement.ToolTipOpening
  - System.Windows.FrameworkContentElement.ToolTipOpeningEvent
  - System.Windows.FrameworkContentElement.ToolTipProperty
  - System.Windows.FrameworkContentElement.TryFindResource(System.Object)
  - System.Windows.FrameworkContentElement.Unloaded
  - System.Windows.FrameworkContentElement.UnloadedEvent
  - System.Windows.FrameworkContentElement.UnregisterName(System.String)
  - System.Windows.FrameworkContentElement.UpdateDefaultStyle
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Documents.AnchoredBlock.#ctor(System.Windows.Documents.Block,System.Windows.Documents.TextPointer)
  id: '#ctor(System.Windows.Documents.Block,System.Windows.Documents.TextPointer)'
  parent: System.Windows.Documents.AnchoredBlock
  langs:
  - csharp
  name: AnchoredBlock(Block,TextPointer)
  nameWithType: AnchoredBlock.AnchoredBlock(Block,TextPointer)
  fullName: System.Windows.Documents.AnchoredBlock.AnchoredBlock(Block,TextPointer)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Initializes base class values when called by a derived class, taking a specified <xref href=&quot;System.Windows.Documents.Block&quot;></xref> object as the initial contents of the new descendant of <xref href=&quot;System.Windows.Documents.AnchoredBlock&quot;></xref>, and a <xref href=&quot;System.Windows.Documents.TextPointer&quot;></xref> specifying an insertion position for the new <xref href=&quot;System.Windows.Documents.AnchoredBlock&quot;></xref> descendant."
  syntax:
    content: protected AnchoredBlock (System.Windows.Documents.Block block, System.Windows.Documents.TextPointer insertionPosition);
    parameters:
    - id: block
      type: System.Windows.Documents.Block
      description: "A <xref href=&quot;System.Windows.Documents.Block&quot;></xref> object specifying the initial contents of the new element.  This parameter may be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, in which case no <xref href=&quot;System.Windows.Documents.Block&quot;></xref> is inserted."
    - id: insertionPosition
      type: System.Windows.Documents.TextPointer
      description: "A <xref href=&quot;System.Windows.Documents.TextPointer&quot;></xref> specifying an insertion position at which to insert the element after it is created, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> for no automatic insertion."
  overload: System.Windows.Documents.AnchoredBlock.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.AnchoredBlock.Blocks
  id: Blocks
  parent: System.Windows.Documents.AnchoredBlock
  langs:
  - csharp
  name: Blocks
  nameWithType: AnchoredBlock.Blocks
  fullName: System.Windows.Documents.AnchoredBlock.Blocks
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Gets a <xref href=&quot;System.Windows.Documents.BlockCollection&quot;></xref> containing the top-level <xref href=&quot;System.Windows.Documents.Block&quot;></xref> elements that comprise the contents of the element."
  syntax:
    content: public System.Windows.Documents.BlockCollection Blocks { get; }
    return:
      type: System.Windows.Documents.BlockCollection
      description: "A <xref href=&quot;System.Windows.Documents.BlockCollection&quot;></xref> containing the <xref href=&quot;System.Windows.Documents.Block&quot;></xref> elements that comprise the contents of the element.       This property has no default value."
  overload: System.Windows.Documents.AnchoredBlock.Blocks*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.AnchoredBlock.BorderBrush
  id: BorderBrush
  parent: System.Windows.Documents.AnchoredBlock
  langs:
  - csharp
  name: BorderBrush
  nameWithType: AnchoredBlock.BorderBrush
  fullName: System.Windows.Documents.AnchoredBlock.BorderBrush
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Gets or sets a <xref href=&quot;System.Windows.Media.Brush&quot;></xref> to use when painting the element&quot;s border."
  remarks: "For a table of swatches that show the available pre-defined brush colors, see <xref:System.Windows.Media.Brushes>.      <a name=&quot;dependencyPropertyInfo_BorderBrush&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Documents.AnchoredBlock.BorderBrushProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|"
  example:
  - "The following example shows how to set the <xref:System.Windows.Documents.Block.BorderBrush%2A> attribute of an element (<xref:System.Windows.Documents.Paragraph>).  \n  \n [!code-xml[BlockSnippets#_Block_BordersXAML](~/add/codesnippet/xaml/BlockSnippets/Window1.xaml#_block_bordersxaml)]  \n  \n The following figure shows how this example renders.  \n  \n ![Screenshot: Blue, 1&#47;4inch border around Block](~/add/media/block-borders.png \"Screenshot: Blue, 1/4inch border around Block\")  \n  \n The following example shows how to set the <xref:System.Windows.Documents.Block.BorderBrush%2A> property programmatically.  \n  \n [!code-vb[BlockSnippets#_Block_Borders](~/add/codesnippet/visualbasic/blocksnippets/window1.xaml.vb#_block_borders)]\n [!code-cs[BlockSnippets#_Block_Borders](~/add/codesnippet/csharp/BlockSnippets/Window1.xaml.cs#_block_borders)]"
  syntax:
    content: public System.Windows.Media.Brush BorderBrush { get; set; }
    return:
      type: System.Windows.Media.Brush
      description: "The brush used to apply to the element&quot;s border.       The default value is a **null** brush."
  overload: System.Windows.Documents.AnchoredBlock.BorderBrush*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.AnchoredBlock.BorderBrushProperty
  id: BorderBrushProperty
  parent: System.Windows.Documents.AnchoredBlock
  langs:
  - csharp
  name: BorderBrushProperty
  nameWithType: AnchoredBlock.BorderBrushProperty
  fullName: System.Windows.Documents.AnchoredBlock.BorderBrushProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Identifies the <xref:System.Windows.Documents.AnchoredBlock.BorderBrush*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty BorderBrushProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.AnchoredBlock.BorderThickness
  id: BorderThickness
  parent: System.Windows.Documents.AnchoredBlock
  langs:
  - csharp
  name: BorderThickness
  nameWithType: AnchoredBlock.BorderThickness
  fullName: System.Windows.Documents.AnchoredBlock.BorderThickness
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Gets or sets the border thickness for the element."
  remarks: "<a name=&quot;xamlAttributeUsage_BorderThickness&quot;></a>    ## XAML Attribute Usage      ```   <object BorderThickness=&quot;uniformThickness&quot;/>   - or -   <object BorderThickness=&quot;independentThickness&quot;/>   - or -   <object BorderThickness=&quot;qualifiedUniformThickness&quot;/>   - or -   <object BorderThickness=&quot;qualifiedIndependentThickness&quot;/>   ```      <a name=&quot;xamlValues_BorderThickness&quot;></a>    ## XAML Values    *uniformThickness*    String representation of a single <xref:System.Double> value to apply uniformly to all four thickness dimensions.  For example, a value of `&quot;10&quot;` is equivalent to a value of `&quot;10,10,10,10&quot;`.  An unqualified value is measured in device independent pixels. Strings need not explicitly include decimal points.       *independentThickness*    String representation of four ordered <xref:System.Double> values corresponding to independent thickness dimensions for left, top, right, and bottom, in this order.  The four values must be separated with commas; spaces are not allowed.  For example, &quot;5,10,15,20&quot; results in 5 pixels of border to the left of content, 10 pixels of border above content, 15 pixels of border to the right of content, and 20 pixels of border below the content.       *qualifiedUniformThickness*    A value described by *uniformThickness* followed by one of the following unit specifiers: `px`, `in`.       `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       For example, `&quot;1in&quot;` provides uniform border of 1 inch in all directions.       *qualifiedIndependentThickness*    A value described by *independentThickness*, with each independent value followed by one of the following unit specifiers: `px`, `in`.       `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       For example, `&quot;1.5in,0.8in,1.5in,0.8in&quot;`.  Unit specifiers may be mixed or omitted from one or more values.      <a name=&quot;dependencyPropertyInfo_BorderThickness&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Documents.AnchoredBlock.BorderThicknessProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|"
  example:
  - "The following example shows how to set the <xref:System.Windows.Documents.Block.BorderThickness%2A> attribute of a <xref:System.Windows.Documents.Block> element (<xref:System.Windows.Documents.Paragraph>).  \n  \n [!code-xml[BlockSnippets#_Block_BordersXAML](~/add/codesnippet/xaml/BlockSnippets/Window1.xaml#_block_bordersxaml)]  \n  \n The following figure shows how this example renders.  \n  \n ![Screenshot: Blue, 1&#47;4inch border around Block](~/add/media/block-borders.png \"Screenshot: Blue, 1/4inch border around Block\")  \n  \n The following example shows how to set the <xref:System.Windows.Documents.Block.BorderThickness%2A> property programmatically.  \n  \n [!code-vb[BlockSnippets#_Block_Borders](~/add/codesnippet/visualbasic/blocksnippets/window1.xaml.vb#_block_borders)]\n [!code-cs[BlockSnippets#_Block_Borders](~/add/codesnippet/csharp/BlockSnippets/Window1.xaml.cs#_block_borders)]"
  syntax:
    content: public System.Windows.Thickness BorderThickness { get; set; }
    return:
      type: System.Windows.Thickness
      description: "A <xref href=&quot;System.Windows.Thickness&quot;></xref> structure specifying the amount of border to apply, in device independent pixels.       The default value is a uniform thickness of zero (**0.0**)."
  overload: System.Windows.Documents.AnchoredBlock.BorderThickness*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.AnchoredBlock.BorderThicknessProperty
  id: BorderThicknessProperty
  parent: System.Windows.Documents.AnchoredBlock
  langs:
  - csharp
  name: BorderThicknessProperty
  nameWithType: AnchoredBlock.BorderThicknessProperty
  fullName: System.Windows.Documents.AnchoredBlock.BorderThicknessProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Identifies the <xref:System.Windows.Documents.AnchoredBlock.BorderThickness*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty BorderThicknessProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.AnchoredBlock.LineHeight
  id: LineHeight
  parent: System.Windows.Documents.AnchoredBlock
  langs:
  - csharp
  name: LineHeight
  nameWithType: AnchoredBlock.LineHeight
  fullName: System.Windows.Documents.AnchoredBlock.LineHeight
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Gets or sets the height of each line of content."
  remarks: "Changing this value does not change the height of the associated text; rather, it changes the height of the line that contains the text.       In addition to this property, the layout of lines in a <xref:System.Windows.Documents.AnchoredBlock> is affected by its <xref:System.Windows.Documents.AnchoredBlock.LineStackingStrategy%2A> property.      <a name=&quot;xamlAttributeUsage_LineHeight&quot;></a>    ## XAML Attribute Usage      ```   <object LineHeight=&quot;double&quot;/>   - or -   <object LineHeight=&quot;qualifiedDouble&quot;/>   - or -   <object LineHeight=&quot;Auto&quot;/>   ```      <a name=&quot;xamlValues_LineHeight&quot;></a>    ## XAML Values    *double*    String representation of a <xref:System.Double> value equal to or greater than `0.0034` but equal to or less than `160000`. An unqualified value is measured in device independent pixels. Strings need not explicitly include decimal points.       *qualifiedDouble*    A *double* value as described above, (excepting `Auto`) followed by one of the following unit specifiers: `px`, `in`, `cm`, `pt`.       `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       `cm` is centimeters; 1cm==(96/2.54) px       `pt` is points; 1pt==(96/72) px       Auto    Causes the line height is determined automatically from the current font characteristics.  Equivalent to a property value of <xref:System.Double.NaN>.      <a name=&quot;dependencyPropertyInfo_LineHeight&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Documents.AnchoredBlock.LineHeightProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|"
  example:
  - "The following example shows how to set the LineHeight attribute of a <xref:System.Windows.Documents.Block> element.  \n  \n [!code-xml[BlockSnippets#_Block_LineHeightXAML](~/add/codesnippet/xaml/BlockSnippets/Window1.xaml#_block_lineheightxaml)]  \n  \n The following figure shows how the previous example renders.  \n  \n ![Screenshot: FlowDocument LineHeight](~/add/media/flowdocument-lineheight.png \"Screenshot: FlowDocument LineHeight\")  \n  \n The following figure shows how the same example renders with the default setting of LineHeight=<xref:System.Double.NaN>.  \n  \n ![Screenshot: FlowDocument LineHeight default](~/add/media/flowdocument-lineheightdefault.png \"Screenshot: FlowDocument LineHeight default\")  \n  \n The following example shows how to set the LineHeight property programmatically.  \n  \n [!code-vb[BlockSnippets#_Block_LineHeight](~/add/codesnippet/visualbasic/blocksnippets/window1.xaml.vb#_block_lineheight)]\n [!code-cs[BlockSnippets#_Block_LineHeight](~/add/codesnippet/csharp/BlockSnippets/Window1.xaml.cs#_block_lineheight)]"
  syntax:
    content: public double LineHeight { get; set; }
    return:
      type: System.Double
      description: "A double value specifying the height of line in device independent pixels.  LineHeight must be equal to or greater than `0.0034` and equal to or less then `160000`.       A value of <xref:System.Double> (equivalent to an attribute value of &quot;`Auto`&quot;) causes the line height is determined automatically from the current font characteristics.       The default value is <xref:System.Double>."
  overload: System.Windows.Documents.AnchoredBlock.LineHeight*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Raised if an attempt is made to set <xref:System.Windows.Controls.TextBlock.LineHeight*> to a non-positive value."
  platform:
  - net462
- uid: System.Windows.Documents.AnchoredBlock.LineHeightProperty
  id: LineHeightProperty
  parent: System.Windows.Documents.AnchoredBlock
  langs:
  - csharp
  name: LineHeightProperty
  nameWithType: AnchoredBlock.LineHeightProperty
  fullName: System.Windows.Documents.AnchoredBlock.LineHeightProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Identifies the <xref:System.Windows.Documents.AnchoredBlock.LineHeight*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty LineHeightProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.AnchoredBlock.LineStackingStrategy
  id: LineStackingStrategy
  parent: System.Windows.Documents.AnchoredBlock
  langs:
  - csharp
  name: LineStackingStrategy
  nameWithType: AnchoredBlock.LineStackingStrategy
  fullName: System.Windows.Documents.AnchoredBlock.LineStackingStrategy
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Gets or sets the mechanism by which a line box is determined for each line of text within the text element."
  remarks: "<a name=&quot;dependencyPropertyInfo_LineStackingStrategyProperty&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Documents.AnchoredBlock.LineStackingStrategyProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|"
  example:
  - "The following example shows how to use the <xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A> property to determine how the line boxes are created for text lines of a <xref:System.Windows.Controls.TextBlock>. The first <xref:System.Windows.Controls.TextBlock> has a <xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A> value of <xref:System.Windows.LineStackingStrategy> and the second <xref:System.Windows.Controls.TextBlock> has a value of <xref:System.Windows.LineStackingStrategy>.  \n  \n [!code-xml[FlowMiscSnippets_snip#LineStackingStrategyExampleWholePage](~/add/codesnippet/xaml/flowmiscsnippets_snip/linestackingstrategyexample.xaml#linestackingstrategyexamplewholepage)]  \n  \n The following illustration shows the result of the code above.  \n  \n ![Screenshot: Compare LineStackingStrategy values](~/add/media/flow-linestackingstrategy.gif \"Screenshot: Compare LineStackingStrategy values\")"
  syntax:
    content: public System.Windows.LineStackingStrategy LineStackingStrategy { get; set; }
    return:
      type: System.Windows.LineStackingStrategy
      description: "The mechanism by which a line box is determined for each line of text within the text element. The default value is <xref href=&quot;System.Windows.LineStackingStrategy&quot;></xref>."
  overload: System.Windows.Documents.AnchoredBlock.LineStackingStrategy*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.AnchoredBlock.LineStackingStrategyProperty
  id: LineStackingStrategyProperty
  parent: System.Windows.Documents.AnchoredBlock
  langs:
  - csharp
  name: LineStackingStrategyProperty
  nameWithType: AnchoredBlock.LineStackingStrategyProperty
  fullName: System.Windows.Documents.AnchoredBlock.LineStackingStrategyProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Identifies the <xref:System.Windows.Documents.AnchoredBlock.LineStackingStrategy*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty LineStackingStrategyProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.AnchoredBlock.Margin
  id: Margin
  parent: System.Windows.Documents.AnchoredBlock
  langs:
  - csharp
  name: Margin
  nameWithType: AnchoredBlock.Margin
  fullName: System.Windows.Documents.AnchoredBlock.Margin
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Gets or sets the margin thickness for the element."
  remarks: "<xref:System.Windows.Documents.ListItem.Margin%2A> is buffer space that falls outside of an element&quot;s content area, between the edges of the element&quot;s content area and the edges of the parent element.  Contrast with <xref:System.Windows.Documents.ListItem.Padding%2A>, which is buffer space that falls inside of an element&quot;s content area, between the element&quot;s content and the inner edge of the element.      <a name=&quot;xamlAttributeUsage_Margin&quot;></a>    ## XAML Attribute Usage      ```   <object Margin=&quot;uniformThickness&quot;/>   - or -   <object Margin=&quot;independentThickness&quot;/>   - or -   <object Margin=&quot;qualifiedUniformThickness&quot;/>   - or -   <object Margin=&quot;qualifiedIndependentThickness&quot;/>   ```      <a name=&quot;xamlValues_Margin&quot;></a>    ## XAML Values    *uniformThickness*    String representation of a single <xref:System.Double> value to apply uniformly to all four thickness dimensions.  For example, a value of `&quot;10&quot;` is equivalent to a value of `&quot;10,10,10,10&quot;`.  An unqualified value is measured in device independent pixels. Strings need not explicitly include decimal points.       *independentThickness*    String representation of four ordered <xref:System.Double> values corresponding to independent thickness dimensions for left, top, right, and bottom, in this order.  The four values must be separated with commas; spaces are not allowed.  For example, &quot;5,10,15,20&quot; results in 5 pixels of margin to the left of content, 10 pixels of margin above content, 15 pixels of margin to the right of content, and 20 pixels of margin below the content.       *qualifiedUniformThickness*    A value described by *uniformThickness* followed by one of the following unit specifiers: `px`, `in`.       `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       For example, `&quot;1in&quot;` provides uniform margin of 1 inch in all directions.       *qualifiedIndependentThickness*    A value described by *independentThickness*, with each independent value followed by one of the following unit specifiers: `px`, `in`.       `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       For example, `&quot;1.5in,0.8in,1.5in,0.8in&quot;`.  Unit specifiers may be mixed or omitted from one or more values.      <a name=&quot;dependencyPropertyInfo_Margin&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Documents.AnchoredBlock.MarginProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|"
  example:
  - "The following example shows how to set the Margin attribute of a <xref:System.Windows.Documents.Block> element (<xref:System.Windows.Documents.Paragraph>).  \n  \n [!code-xml[BlockSnippets#_Block_MarginPaddingXAML](~/add/codesnippet/xaml/BlockSnippets/Window1.xaml#_block_marginpaddingxaml)]  \n  \n The following figure shows how this example renders.  Exaggerated thicknesses and colors are used for illustration.  \n  \n ![Screenshot: Paragraphs with padding and margins](~/add/media/block-marginpadding.png \"Screenshot: Paragraphs with padding and margins\")  \n  \n The following example shows how to set the Margin property programmatically.  \n  \n [!code-vb[BlockSnippets#_Block_MarginPadding](~/add/codesnippet/visualbasic/blocksnippets/window1.xaml.vb#_block_marginpadding)]\n [!code-cs[BlockSnippets#_Block_MarginPadding](~/add/codesnippet/csharp/BlockSnippets/Window1.xaml.cs#_block_marginpadding)]"
  syntax:
    content: public System.Windows.Thickness Margin { get; set; }
    return:
      type: System.Windows.Thickness
      description: "A <xref href=&quot;System.Windows.Thickness&quot;></xref> structure specifying the amount of margin to apply, in device independent pixels.       The default value is a uniform thickness of zero (**0.0**)."
  overload: System.Windows.Documents.AnchoredBlock.Margin*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.AnchoredBlock.MarginProperty
  id: MarginProperty
  parent: System.Windows.Documents.AnchoredBlock
  langs:
  - csharp
  name: MarginProperty
  nameWithType: AnchoredBlock.MarginProperty
  fullName: System.Windows.Documents.AnchoredBlock.MarginProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Identifies the <xref:System.Windows.Documents.AnchoredBlock.Margin*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty MarginProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.AnchoredBlock.Padding
  id: Padding
  parent: System.Windows.Documents.AnchoredBlock
  langs:
  - csharp
  name: Padding
  nameWithType: AnchoredBlock.Padding
  fullName: System.Windows.Documents.AnchoredBlock.Padding
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Gets or sets the padding thickness for the element."
  remarks: "<xref:System.Windows.Documents.ListItem.Padding%2A> is buffer space that falls inside an element&quot;s content area, between the element&quot;s content and the inner edge of the element.  Contrast with <xref:System.Windows.Documents.ListItem.Margin%2A>, which is buffer space that falls outside of an element&quot;s content area, between the edges of the element&quot;s content area and the edges of the parent element.      <a name=&quot;xamlAttributeUsage_Padding&quot;></a>    ## XAML Attribute Usage      ```   <object Padding=&quot;uniformThickness&quot;/>   - or -   <object Padding=&quot;independentThickness&quot;/>   - or -   <object Padding=&quot;qualifiedUniformThickness&quot;/>   - or -   <object Padding=&quot;qualifiedIndependentThickness&quot;/>   ```      <a name=&quot;xamlValues_Padding&quot;></a>    ## XAML Values    *uniformThickness*    String representation of a single <xref:System.Double> value to apply uniformly to all four thickness dimensions.  For example, a value of `&quot;10&quot;` is equivalent to a value of `&quot;10,10,10,10&quot;`.  An unqualified value is measured in device independent pixels. Strings need not explicitly include decimal points.       *independentThickness*    String representation of four ordered <xref:System.Double> values corresponding to independent thickness dimensions for left, top, right, and bottom, in this order.  The four values must be separated with commas; spaces are not allowed.  For example, &quot;5,10,15,20&quot; results in 5 pixels of padding to the left of content, 10 pixels of padding above content, 15 pixels of padding to the right of content, and 20 pixels of padding below the content.       *qualifiedUniformThickness*    A value described by *uniformThickness* followed by one of the following unit specifiers: `px`, `in`.       `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       For example, `&quot;1in&quot;` provides uniform padding of 1 inch in all directions.       *qualifiedIndependentThickness*    A value described by *independentThickness*, with each independent value followed by one of the following unit specifiers: `px`, `in`.       `px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/add/includes/ajax-current-ext-md.md)]       `in` is inches; 1in==96px       For example, `&quot;1.5in,0.8in,1.5in,0.8in&quot;`.  Unit specifiers may be mixed or omitted from one or more values.      <a name=&quot;dependencyPropertyInfo_Padding&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Documents.AnchoredBlock.PaddingProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|"
  example:
  - "The following example shows how to set the Padding attribute of a <xref:System.Windows.Documents.Block> element (<xref:System.Windows.Documents.Paragraph>).  \n  \n [!code-xml[BlockSnippets#_Block_MarginPaddingXAML](~/add/codesnippet/xaml/BlockSnippets/Window1.xaml#_block_marginpaddingxaml)]  \n  \n The following figure shows how this example renders.  Exaggerated thicknesses and colors are used for illustration.  \n  \n ![Screenshot: Paragraphs with padding and margins](~/add/media/block-marginpadding.png \"Screenshot: Paragraphs with padding and margins\")  \n  \n The following example shows how to set the Padding property programmatically.  \n  \n [!code-vb[BlockSnippets#_Block_MarginPadding](~/add/codesnippet/visualbasic/blocksnippets/window1.xaml.vb#_block_marginpadding)]\n [!code-cs[BlockSnippets#_Block_MarginPadding](~/add/codesnippet/csharp/BlockSnippets/Window1.xaml.cs#_block_marginpadding)]"
  syntax:
    content: public System.Windows.Thickness Padding { get; set; }
    return:
      type: System.Windows.Thickness
      description: "A <xref href=&quot;System.Windows.Thickness&quot;></xref> structure specifying the amount of padding to apply, in device independent pixels.       The default value is a uniform thickness of zero (**0.0**)."
  overload: System.Windows.Documents.AnchoredBlock.Padding*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.AnchoredBlock.PaddingProperty
  id: PaddingProperty
  parent: System.Windows.Documents.AnchoredBlock
  langs:
  - csharp
  name: PaddingProperty
  nameWithType: AnchoredBlock.PaddingProperty
  fullName: System.Windows.Documents.AnchoredBlock.PaddingProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Identifies the <xref:System.Windows.Documents.AnchoredBlock.Padding*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty PaddingProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.AnchoredBlock.ShouldSerializeBlocks(System.Windows.Markup.XamlDesignerSerializationManager)
  id: ShouldSerializeBlocks(System.Windows.Markup.XamlDesignerSerializationManager)
  parent: System.Windows.Documents.AnchoredBlock
  langs:
  - csharp
  name: ShouldSerializeBlocks(XamlDesignerSerializationManager)
  nameWithType: AnchoredBlock.ShouldSerializeBlocks(XamlDesignerSerializationManager)
  fullName: System.Windows.Documents.AnchoredBlock.ShouldSerializeBlocks(XamlDesignerSerializationManager)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Returns a value that indicates whether or not the effective value of the <xref:System.Windows.Documents.AnchoredBlock.Blocks*> property should be serialized during serialization of an object deriving from <xref href=&quot;System.Windows.Documents.AnchoredBlock&quot;></xref>."
  syntax:
    content: public bool ShouldSerializeBlocks (System.Windows.Markup.XamlDesignerSerializationManager manager);
    parameters:
    - id: manager
      type: System.Windows.Markup.XamlDesignerSerializationManager
      description: "A serialization service manager object for this object."
    return:
      type: System.Boolean
      description: '**true** if the <xref:System.Windows.Documents.AnchoredBlock.Blocks*> property should be serialized; otherwise, **false**.'
  overload: System.Windows.Documents.AnchoredBlock.ShouldSerializeBlocks*
  exceptions:
  - type: System.NullReferenceException
    commentId: T:System.NullReferenceException
    description: "Raised when <code>manager</code> is **null**."
  platform:
  - net462
- uid: System.Windows.Documents.AnchoredBlock.TextAlignment
  id: TextAlignment
  parent: System.Windows.Documents.AnchoredBlock
  langs:
  - csharp
  name: TextAlignment
  nameWithType: AnchoredBlock.TextAlignment
  fullName: System.Windows.Documents.AnchoredBlock.TextAlignment
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Gets or sets a value that indicates the horizontal alignment of text content."
  remarks: "<a name=&quot;dependencyPropertyInfo_TextAlignment&quot;></a>    ## Dependency Property Information      |||   |-|-|   |Identifier field|<xref:System.Windows.Documents.AnchoredBlock.TextAlignmentProperty>|   |Metadata properties set to `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|"
  example:
  - "The following example shows how to set the TextAlignment attribute of a <xref:System.Windows.Documents.Block> element.  \n  \n [!code-xml[BlockSnippets#_Block_TextAlignmentXAML](~/add/codesnippet/xaml/BlockSnippets/Window1.xaml#_block_textalignmentxaml)]  \n  \n The following figure shows how the previous example renders with **Left** text alignment (the default).  \n  \n ![Screenshot: TextAlign property value of Left](~/add/media/flowdoc-textalign-left.png \"Screenshot: TextAlign property value of Left\")  \n  \n The following figure shows how the same example renders with **Right** text alignment.  \n  \n ![Screenshot: TextAlign value of Right](~/add/media/flowdoc-textalign-right.png \"Screenshot: TextAlign value of Right\")  \n  \n The following figure shows how the same example renders with **Center** text alignment.  \n  \n ![Screenshot: TextAlign property value of Center](~/add/media/flowdoc-textalign-center.png \"Screenshot: TextAlign property value of Center\")  \n  \n The following example shows how to set the TextAlignment property programmatically.  \n  \n [!code-vb[BlockSnippets#_Block_TextAlignment](~/add/codesnippet/visualbasic/blocksnippets/window1.xaml.vb#_block_textalignment)]\n [!code-cs[BlockSnippets#_Block_TextAlignment](~/add/codesnippet/csharp/BlockSnippets/Window1.xaml.cs#_block_textalignment)]"
  syntax:
    content: public System.Windows.TextAlignment TextAlignment { get; set; }
    return:
      type: System.Windows.TextAlignment
      description: "A member of the <xref href=&quot;System.Windows.TextAlignment&quot;></xref> enumerations specifying the desired alignment.       The default value is <xref href=&quot;System.Windows.TextAlignment&quot;></xref>."
  overload: System.Windows.Documents.AnchoredBlock.TextAlignment*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Documents.AnchoredBlock.TextAlignmentProperty
  id: TextAlignmentProperty
  parent: System.Windows.Documents.AnchoredBlock
  langs:
  - csharp
  name: TextAlignmentProperty
  nameWithType: AnchoredBlock.TextAlignmentProperty
  fullName: System.Windows.Documents.AnchoredBlock.TextAlignmentProperty
  type: Field
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Documents
  summary: "Identifies the <xref:System.Windows.Documents.AnchoredBlock.TextAlignment*> dependency property."
  syntax:
    content: public static readonly System.Windows.DependencyProperty TextAlignmentProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "To be added."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Documents.Inline
  isExternal: false
  name: System.Windows.Documents.Inline
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.NullReferenceException
  isExternal: true
  name: System.NullReferenceException
- uid: System.Windows.Documents.AnchoredBlock.#ctor(System.Windows.Documents.Block,System.Windows.Documents.TextPointer)
  parent: System.Windows.Documents.AnchoredBlock
  isExternal: false
  name: AnchoredBlock(Block,TextPointer)
  nameWithType: AnchoredBlock.AnchoredBlock(Block,TextPointer)
  fullName: System.Windows.Documents.AnchoredBlock.AnchoredBlock(Block,TextPointer)
- uid: System.Windows.Documents.Block
  parent: System.Windows.Documents
  isExternal: false
  name: Block
  nameWithType: Block
  fullName: System.Windows.Documents.Block
- uid: System.Windows.Documents.TextPointer
  parent: System.Windows.Documents
  isExternal: false
  name: TextPointer
  nameWithType: TextPointer
  fullName: System.Windows.Documents.TextPointer
- uid: System.Windows.Documents.AnchoredBlock.Blocks
  parent: System.Windows.Documents.AnchoredBlock
  isExternal: false
  name: Blocks
  nameWithType: AnchoredBlock.Blocks
  fullName: System.Windows.Documents.AnchoredBlock.Blocks
- uid: System.Windows.Documents.BlockCollection
  parent: System.Windows.Documents
  isExternal: false
  name: BlockCollection
  nameWithType: BlockCollection
  fullName: System.Windows.Documents.BlockCollection
- uid: System.Windows.Documents.AnchoredBlock.BorderBrush
  parent: System.Windows.Documents.AnchoredBlock
  isExternal: false
  name: BorderBrush
  nameWithType: AnchoredBlock.BorderBrush
  fullName: System.Windows.Documents.AnchoredBlock.BorderBrush
- uid: System.Windows.Media.Brush
  parent: System.Windows.Media
  isExternal: false
  name: Brush
  nameWithType: Brush
  fullName: System.Windows.Media.Brush
- uid: System.Windows.Documents.AnchoredBlock.BorderBrushProperty
  parent: System.Windows.Documents.AnchoredBlock
  isExternal: false
  name: BorderBrushProperty
  nameWithType: AnchoredBlock.BorderBrushProperty
  fullName: System.Windows.Documents.AnchoredBlock.BorderBrushProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Documents.AnchoredBlock.BorderThickness
  parent: System.Windows.Documents.AnchoredBlock
  isExternal: false
  name: BorderThickness
  nameWithType: AnchoredBlock.BorderThickness
  fullName: System.Windows.Documents.AnchoredBlock.BorderThickness
- uid: System.Windows.Thickness
  parent: System.Windows
  isExternal: false
  name: Thickness
  nameWithType: Thickness
  fullName: System.Windows.Thickness
- uid: System.Windows.Documents.AnchoredBlock.BorderThicknessProperty
  parent: System.Windows.Documents.AnchoredBlock
  isExternal: false
  name: BorderThicknessProperty
  nameWithType: AnchoredBlock.BorderThicknessProperty
  fullName: System.Windows.Documents.AnchoredBlock.BorderThicknessProperty
- uid: System.Windows.Documents.AnchoredBlock.LineHeight
  parent: System.Windows.Documents.AnchoredBlock
  isExternal: false
  name: LineHeight
  nameWithType: AnchoredBlock.LineHeight
  fullName: System.Windows.Documents.AnchoredBlock.LineHeight
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Documents.AnchoredBlock.LineHeightProperty
  parent: System.Windows.Documents.AnchoredBlock
  isExternal: false
  name: LineHeightProperty
  nameWithType: AnchoredBlock.LineHeightProperty
  fullName: System.Windows.Documents.AnchoredBlock.LineHeightProperty
- uid: System.Windows.Documents.AnchoredBlock.LineStackingStrategy
  parent: System.Windows.Documents.AnchoredBlock
  isExternal: false
  name: LineStackingStrategy
  nameWithType: AnchoredBlock.LineStackingStrategy
  fullName: System.Windows.Documents.AnchoredBlock.LineStackingStrategy
- uid: System.Windows.LineStackingStrategy
  parent: System.Windows
  isExternal: false
  name: LineStackingStrategy
  nameWithType: LineStackingStrategy
  fullName: System.Windows.LineStackingStrategy
- uid: System.Windows.Documents.AnchoredBlock.LineStackingStrategyProperty
  parent: System.Windows.Documents.AnchoredBlock
  isExternal: false
  name: LineStackingStrategyProperty
  nameWithType: AnchoredBlock.LineStackingStrategyProperty
  fullName: System.Windows.Documents.AnchoredBlock.LineStackingStrategyProperty
- uid: System.Windows.Documents.AnchoredBlock.Margin
  parent: System.Windows.Documents.AnchoredBlock
  isExternal: false
  name: Margin
  nameWithType: AnchoredBlock.Margin
  fullName: System.Windows.Documents.AnchoredBlock.Margin
- uid: System.Windows.Documents.AnchoredBlock.MarginProperty
  parent: System.Windows.Documents.AnchoredBlock
  isExternal: false
  name: MarginProperty
  nameWithType: AnchoredBlock.MarginProperty
  fullName: System.Windows.Documents.AnchoredBlock.MarginProperty
- uid: System.Windows.Documents.AnchoredBlock.Padding
  parent: System.Windows.Documents.AnchoredBlock
  isExternal: false
  name: Padding
  nameWithType: AnchoredBlock.Padding
  fullName: System.Windows.Documents.AnchoredBlock.Padding
- uid: System.Windows.Documents.AnchoredBlock.PaddingProperty
  parent: System.Windows.Documents.AnchoredBlock
  isExternal: false
  name: PaddingProperty
  nameWithType: AnchoredBlock.PaddingProperty
  fullName: System.Windows.Documents.AnchoredBlock.PaddingProperty
- uid: System.Windows.Documents.AnchoredBlock.ShouldSerializeBlocks(System.Windows.Markup.XamlDesignerSerializationManager)
  parent: System.Windows.Documents.AnchoredBlock
  isExternal: false
  name: ShouldSerializeBlocks(XamlDesignerSerializationManager)
  nameWithType: AnchoredBlock.ShouldSerializeBlocks(XamlDesignerSerializationManager)
  fullName: System.Windows.Documents.AnchoredBlock.ShouldSerializeBlocks(XamlDesignerSerializationManager)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Markup.XamlDesignerSerializationManager
  parent: System.Windows.Markup
  isExternal: false
  name: XamlDesignerSerializationManager
  nameWithType: XamlDesignerSerializationManager
  fullName: System.Windows.Markup.XamlDesignerSerializationManager
- uid: System.Windows.Documents.AnchoredBlock.TextAlignment
  parent: System.Windows.Documents.AnchoredBlock
  isExternal: false
  name: TextAlignment
  nameWithType: AnchoredBlock.TextAlignment
  fullName: System.Windows.Documents.AnchoredBlock.TextAlignment
- uid: System.Windows.TextAlignment
  parent: System.Windows
  isExternal: false
  name: TextAlignment
  nameWithType: TextAlignment
  fullName: System.Windows.TextAlignment
- uid: System.Windows.Documents.AnchoredBlock.TextAlignmentProperty
  parent: System.Windows.Documents.AnchoredBlock
  isExternal: false
  name: TextAlignmentProperty
  nameWithType: AnchoredBlock.TextAlignmentProperty
  fullName: System.Windows.Documents.AnchoredBlock.TextAlignmentProperty
- uid: System.Windows.Documents.AnchoredBlock.#ctor*
  parent: System.Windows.Documents.AnchoredBlock
  isExternal: false
  name: AnchoredBlock
  nameWithType: AnchoredBlock.AnchoredBlock
- uid: System.Windows.Documents.AnchoredBlock.Blocks*
  parent: System.Windows.Documents.AnchoredBlock
  isExternal: false
  name: Blocks
  nameWithType: AnchoredBlock.Blocks
- uid: System.Windows.Documents.AnchoredBlock.BorderBrush*
  parent: System.Windows.Documents.AnchoredBlock
  isExternal: false
  name: BorderBrush
  nameWithType: AnchoredBlock.BorderBrush
- uid: System.Windows.Documents.AnchoredBlock.BorderThickness*
  parent: System.Windows.Documents.AnchoredBlock
  isExternal: false
  name: BorderThickness
  nameWithType: AnchoredBlock.BorderThickness
- uid: System.Windows.Documents.AnchoredBlock.LineHeight*
  parent: System.Windows.Documents.AnchoredBlock
  isExternal: false
  name: LineHeight
  nameWithType: AnchoredBlock.LineHeight
- uid: System.Windows.Documents.AnchoredBlock.LineStackingStrategy*
  parent: System.Windows.Documents.AnchoredBlock
  isExternal: false
  name: LineStackingStrategy
  nameWithType: AnchoredBlock.LineStackingStrategy
- uid: System.Windows.Documents.AnchoredBlock.Margin*
  parent: System.Windows.Documents.AnchoredBlock
  isExternal: false
  name: Margin
  nameWithType: AnchoredBlock.Margin
- uid: System.Windows.Documents.AnchoredBlock.Padding*
  parent: System.Windows.Documents.AnchoredBlock
  isExternal: false
  name: Padding
  nameWithType: AnchoredBlock.Padding
- uid: System.Windows.Documents.AnchoredBlock.ShouldSerializeBlocks*
  parent: System.Windows.Documents.AnchoredBlock
  isExternal: false
  name: ShouldSerializeBlocks
  nameWithType: AnchoredBlock.ShouldSerializeBlocks
- uid: System.Windows.Documents.AnchoredBlock.TextAlignment*
  parent: System.Windows.Documents.AnchoredBlock
  isExternal: false
  name: TextAlignment
  nameWithType: AnchoredBlock.TextAlignment
