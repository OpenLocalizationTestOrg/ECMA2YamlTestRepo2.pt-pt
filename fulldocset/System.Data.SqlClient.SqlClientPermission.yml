### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlClientPermission
  id: SqlClientPermission
  children:
  - System.Data.SqlClient.SqlClientPermission.#ctor
  - System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)
  - System.Data.SqlClient.SqlClientPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)
  - System.Data.SqlClient.SqlClientPermission.Copy
  langs:
  - csharp
  name: SqlClientPermission
  nameWithType: SqlClientPermission
  fullName: System.Data.SqlClient.SqlClientPermission
  type: Class
  summary: "Permite que o .NET Framework Data Provider para o SQL Server ajudar a garantir que um utilizador tem um nível de segurança suficiente para aceder a uma origem de dados."
  remarks: "O <xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A>propriedade tem precedência sobre a <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A>propriedade.</xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> </xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A> Por conseguinte, se definir <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A>para `false`, também tem de definir <xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A>para `false` para impedir que um utilizador efetuar uma nova ligação utilizando uma palavra-passe em branco.</xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A> </xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A>      > [!NOTE] > Quando utilizar permissões de segurança de acesso de código para ADO.NET, o padrão correto é começar a utilizar as maiúsculas e minúsculas mais restritivas (sem permissões em todos os) e, em seguida, adicionar as permissões específicas que são necessários para a tarefa específica que o código tem de efetuar. O padrão oposto, começando com todas as permissões e, em seguida, a negar uma permissão específica, não é seguro, porque existem várias formas de expressa a mesma cadeia de ligação. Por exemplo, se iniciar com todas as permissões e, em seguida, tentar negar a utilização da cadeia de ligação &quot;servidor = someserver&quot;, a cadeia &quot;server=someserver.mycompany.com&quot; seria ainda ser permitida. Iniciando sempre ao conceder as permissões não de todo, pode reduzir as possibilidades de que existem holes no conjunto de permissões."
  syntax:
    content: 'public sealed class SqlClientPermission : System.Data.Common.DBDataPermission'
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  - System.Data.Common.DBDataPermission
  implements: []
  inheritedMembers:
  - System.Data.Common.DBDataPermission.AllowBlankPassword
  - System.Data.Common.DBDataPermission.Clear
  - System.Data.Common.DBDataPermission.CreateInstance
  - System.Data.Common.DBDataPermission.FromXml(System.Security.SecurityElement)
  - System.Data.Common.DBDataPermission.Intersect(System.Security.IPermission)
  - System.Data.Common.DBDataPermission.IsSubsetOf(System.Security.IPermission)
  - System.Data.Common.DBDataPermission.IsUnrestricted
  - System.Data.Common.DBDataPermission.ToXml
  - System.Data.Common.DBDataPermission.Union(System.Security.IPermission)
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Data.SqlClient.SqlClientPermission.#ctor
  id: '#ctor'
  parent: System.Data.SqlClient.SqlClientPermission
  langs:
  - csharp
  name: SqlClientPermission()
  nameWithType: SqlClientPermission.SqlClientPermission()
  fullName: System.Data.SqlClient.SqlClientPermission.SqlClientPermission()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.SqlClient.SqlClientPermission&quot;> </xref> classe."
  syntax:
    content: public SqlClientPermission ();
    parameters: []
  overload: System.Data.SqlClient.SqlClientPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Data.SqlClient.SqlClientPermission
  langs:
  - csharp
  name: SqlClientPermission(PermissionState)
  nameWithType: SqlClientPermission.SqlClientPermission(PermissionState)
  fullName: System.Data.SqlClient.SqlClientPermission.SqlClientPermission(PermissionState)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.SqlClient.SqlClientPermission&quot;> </xref> classe."
  syntax:
    content: public SqlClientPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "Um do <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> valores."
  overload: System.Data.SqlClient.SqlClientPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)
  id: '#ctor(System.Security.Permissions.PermissionState,System.Boolean)'
  parent: System.Data.SqlClient.SqlClientPermission
  langs:
  - csharp
  name: SqlClientPermission(PermissionState,Boolean)
  nameWithType: SqlClientPermission.SqlClientPermission(PermissionState,Boolean)
  fullName: System.Data.SqlClient.SqlClientPermission.SqlClientPermission(PermissionState,Boolean)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.SqlClient.SqlClientPermission&quot;> </xref> classe."
  remarks: "O <xref:System.Security.Permissions.PermissionState>enumeração tem precedência sobre a <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A>propriedade.</xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> </xref:System.Security.Permissions.PermissionState> Por conseguinte, se definir <xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A>para `false`, também tem de definir <xref:System.Security.Permissions.PermissionState>para `None` para impedir que um utilizador efetuar uma nova ligação utilizando uma palavra-passe em branco.</xref:System.Security.Permissions.PermissionState> </xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A> Para obter um exemplo que demonstra como utilizar as exigências de segurança, consulte [segurança de acesso de código e ADO.NET](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public SqlClientPermission (System.Security.Permissions.PermissionState state, bool allowBlankPassword);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "Um do <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> valores."
    - id: allowBlankPassword
      type: System.Boolean
      description: "Indica se é permitida uma palavra-passe em branco."
  overload: System.Data.SqlClient.SqlClientPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlClientPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)
  id: Add(System.String,System.String,System.Data.KeyRestrictionBehavior)
  parent: System.Data.SqlClient.SqlClientPermission
  langs:
  - csharp
  name: Add(String,String,KeyRestrictionBehavior)
  nameWithType: SqlClientPermission.Add(String,String,KeyRestrictionBehavior)
  fullName: System.Data.SqlClient.SqlClientPermission.Add(String,String,KeyRestrictionBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Adiciona uma nova cadeia de ligação e um conjunto restrito palavras-chave para o <xref href=&quot;System.Data.SqlClient.SqlClientPermission&quot;> </xref> objeto."
  remarks: "Utilize este método para configurar as cadeias de ligação são permitidas por um objeto de permissão específico. Por exemplo, utilize o seguinte fragmento de código, se pretender permitir que apenas uma cadeia de ligação específica e mais nada: `permission.Add(&quot;server=MyServer; database=MyDatabase; Integrated Security=true&quot;, &quot;&quot;, KeyRestrictionBehavior.AllowOnly)` o exemplo seguinte permite que as cadeias de ligação que utilizem qualquer base de dados, mas apenas no servidor com o nome MyServer, com qualquer combinação de utilizador e palavra-passe e de que o contém não outras ligação cadeia palavras-chave: `permission.Add(&quot;server=MyServer;&quot;, &quot;database=; user id=; password=;&quot;, KeyRestrictionBehavior.AllowOnly)` o exemplo seguinte utiliza o mesmo cenário como acima, mas permite que um parceiro de ativação pós-falha que pode ser utilizado quando se ligar aos servidores configurada para espelhamento : `permission.Add(&quot;server=MyServer; failover partner=MyMirrorServer&quot;, &quot;database=; user id=; password=;&quot;, KeyRestrictionBehavior.AllowOnly)`       >  [!NOTE] > Quando utilizar permissões de segurança de acesso de código para ADO.NET, o padrão correto é começar a utilizar as maiúsculas e minúsculas mais restritivas (sem permissões em todos os) e, em seguida, adicionar as permissões específicas que são necessários para a tarefa específica que o código tem de efetuar. O padrão oposto, começando com todas as permissões e, em seguida, tentar negar uma permissão específica, não é seguro, porque existem várias formas de expressa a mesma cadeia de ligação. Por exemplo, se iniciar com todas as permissões e, em seguida, tentar negar a utilização da cadeia de ligação &quot;servidor = someserver&quot;, a cadeia &quot;server=someserver.mycompany.com&quot; seria ainda ser permitida. Iniciando sempre ao conceder as permissões não de todo, pode reduzir as possibilidades de que existem holes no conjunto de permissões."
  syntax:
    content: public override void Add (string connectionString, string restrictions, System.Data.KeyRestrictionBehavior behavior);
    parameters:
    - id: connectionString
      type: System.String
      description: "A cadeia de ligação."
    - id: restrictions
      type: System.String
      description: "As restrições de chaves."
    - id: behavior
      type: System.Data.KeyRestrictionBehavior
      description: "Um do <xref href=&quot;System.Data.KeyRestrictionBehavior&quot;> </xref> enumerações."
  overload: System.Data.SqlClient.SqlClientPermission.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlClientPermission.Copy
  id: Copy
  parent: System.Data.SqlClient.SqlClientPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: SqlClientPermission.Copy()
  fullName: System.Data.SqlClient.SqlClientPermission.Copy()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Returns the <xref href=&quot;System.Data.SqlClient.SqlClientPermission&quot;></xref> as an <xref href=&quot;System.Security.IPermission&quot;></xref>."
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "Uma cópia do objeto de permissão atual."
  overload: System.Data.SqlClient.SqlClientPermission.Copy*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DBDataPermission
  isExternal: false
  name: System.Data.Common.DBDataPermission
- uid: System.Data.SqlClient.SqlClientPermission.#ctor
  parent: System.Data.SqlClient.SqlClientPermission
  isExternal: false
  name: SqlClientPermission()
  nameWithType: SqlClientPermission.SqlClientPermission()
  fullName: System.Data.SqlClient.SqlClientPermission.SqlClientPermission()
- uid: System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Data.SqlClient.SqlClientPermission
  isExternal: false
  name: SqlClientPermission(PermissionState)
  nameWithType: SqlClientPermission.SqlClientPermission(PermissionState)
  fullName: System.Data.SqlClient.SqlClientPermission.SqlClientPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)
  parent: System.Data.SqlClient.SqlClientPermission
  isExternal: false
  name: SqlClientPermission(PermissionState,Boolean)
  nameWithType: SqlClientPermission.SqlClientPermission(PermissionState,Boolean)
  fullName: System.Data.SqlClient.SqlClientPermission.SqlClientPermission(PermissionState,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlClient.SqlClientPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)
  parent: System.Data.SqlClient.SqlClientPermission
  isExternal: false
  name: Add(String,String,KeyRestrictionBehavior)
  nameWithType: SqlClientPermission.Add(String,String,KeyRestrictionBehavior)
  fullName: System.Data.SqlClient.SqlClientPermission.Add(String,String,KeyRestrictionBehavior)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.KeyRestrictionBehavior
  parent: System.Data
  isExternal: false
  name: KeyRestrictionBehavior
  nameWithType: KeyRestrictionBehavior
  fullName: System.Data.KeyRestrictionBehavior
- uid: System.Data.SqlClient.SqlClientPermission.Copy
  parent: System.Data.SqlClient.SqlClientPermission
  isExternal: false
  name: Copy()
  nameWithType: SqlClientPermission.Copy()
  fullName: System.Data.SqlClient.SqlClientPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Data.SqlClient.SqlClientPermission.#ctor*
  parent: System.Data.SqlClient.SqlClientPermission
  isExternal: false
  name: SqlClientPermission
  nameWithType: SqlClientPermission.SqlClientPermission
- uid: System.Data.SqlClient.SqlClientPermission.Add*
  parent: System.Data.SqlClient.SqlClientPermission
  isExternal: false
  name: Add
  nameWithType: SqlClientPermission.Add
- uid: System.Data.SqlClient.SqlClientPermission.Copy*
  parent: System.Data.SqlClient.SqlClientPermission
  isExternal: false
  name: Copy
  nameWithType: SqlClientPermission.Copy
