### YamlMime:ManagedReference
items:
- uid: System.Data.DataTableExtensions
  id: DataTableExtensions
  children:
  - System.Data.DataTableExtensions.AsDataView(System.Data.DataTable@)
  - System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0}@)
  - System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable@)
  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0}@)
  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0}@,System.Data.Data``0able,System.Data.LoadOption)
  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0}@,System.Data.Data``0able,System.Data.LoadOption,System.Data.FillErrorEventHandler)
  langs:
  - csharp
  name: DataTableExtensions
  nameWithType: DataTableExtensions
  fullName: System.Data.DataTableExtensions
  type: Class
  summary: "Define os métodos de extensão para o <xref href=&quot;System.Data.DataTable&quot;> </xref> classe. DataTableExtensions é uma classe estática."
  syntax:
    content: public static class DataTableExtensions
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.DataTableExtensions.AsDataView(System.Data.DataTable@)
  id: AsDataView(System.Data.DataTable@)
  parent: System.Data.DataTableExtensions
  langs:
  - csharp
  name: AsDataView(DataTable)
  nameWithType: DataTableExtensions.AsDataView(DataTable)
  fullName: System.Data.DataTableExtensions.AsDataView(DataTable)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  summary: "Cria e devolve um ativada LINQ <xref href=&quot;System.Data.DataView&quot;> </xref> objeto."
  remarks: "<xref:System.Data.DataView>permite cenários de enlace de dados para [!INCLUDE[linq_dataset](~/add/includes/linq-dataset-md.md)] e pode ser criada a partir de um tipo ou sem tipo <xref:System.Data.DataTable>, fornecendo uma vista predefinida nessa tabela.</xref:System.Data.DataTable></xref:System.Data.DataView> Filtrar e ordenar podem ser definidas no <xref:System.Data.DataView>depois de terem sido criadas a partir de um <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataView> O <xref:System.Data.DataView>, em seguida, está vinculado a um controlo de IU, tal como um <xref:System.Windows.Forms.DataGrid>ou um <xref:System.Windows.Forms.DataGridView>, fornecendo um modelo de enlace de dados simples.</xref:System.Windows.Forms.DataGridView> </xref:System.Windows.Forms.DataGrid> </xref:System.Data.DataView>       Para obter mais informações e exemplos, consulte [criação de um objeto de DataView](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates a <xref:System.Data.DataView> from the SalesOrderDetail table and sets it as the data source of a <xref:System.Windows.Forms.BindingSource> object, which acts as a proxy for a <xref:System.Windows.Forms.DataGridView> control:  \n  \n [!code-vb[DP DataView Samples#CreateLDVFromTable](~/add/codesnippet/visualbasic/DataViewSamplesVB/Form1.vb#createldvfromtable)]\n [!code-cs[DP DataView Samples#CreateLDVFromTable](~/add/codesnippet/csharp/DataViewSamples/Form1.cs#createldvfromtable)]"
  syntax:
    content: public static System.Data.DataView AsDataView (this System.Data.DataTable table);
    parameters:
    - id: table
      type: System.Data.DataTable
      description: "A origem <xref href=&quot;System.Data.DataTable&quot;> </xref> partir do qual o ativada LINQ <xref href=&quot;System.Data.DataView&quot;> </xref> é criado."
    return:
      type: System.Data.DataView
      description: "Com capacidade de LINQ <xref href=&quot;System.Data.DataView&quot;> </xref> objeto."
  overload: System.Data.DataTableExtensions.AsDataView*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0}@)
  id: AsDataView``1(System.Data.EnumerableRowCollection{``0}@)
  parent: System.Data.DataTableExtensions
  langs:
  - csharp
  name: AsDataView(EnumerableRowCollection<T>)
  nameWithType: DataTableExtensions.AsDataView(EnumerableRowCollection<T>)
  fullName: System.Data.DataTableExtensions.AsDataView(EnumerableRowCollection<T>)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  syntax:
    content: 'public static System.Data.DataView AsDataView<T> (this System.Data.EnumerableRowCollection<T> source) where T : System.Data.DataRow;'
    parameters:
    - id: source
      type: System.Data.EnumerableRowCollection{T}
      description: "A adicionar."
    return:
      type: System.Data.DataView
      description: "A adicionar."
  overload: System.Data.DataTableExtensions.AsDataView<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable@)
  id: AsEnumerable(System.Data.DataTable@)
  parent: System.Data.DataTableExtensions
  langs:
  - csharp
  name: AsEnumerable(DataTable)
  nameWithType: DataTableExtensions.AsEnumerable(DataTable)
  fullName: System.Data.DataTableExtensions.AsEnumerable(DataTable)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  summary: "Devolve um &lt;xref:System.Collections.Generic.IEnumerable%601&gt; objeto, onde o parâmetro genérico <code> T </code> é <xref href=&quot;System.Data.DataRow&quot;> </xref>. Este objeto pode ser utilizado numa [!INCLUDE[vbtecLinq](~/add/includes/vbteclinq-md.md)] método ou expressão de consulta."
  remarks: "[!INCLUDE[vbteclinqext](~/add/includes/vbteclinqext-md.md)]as consultas funcionam em origens de dados que implementem o <xref:System.Collections.Generic.IEnumerable%601>interface ou a <xref:System.Query.IQueryable%601>interface.</xref:System.Query.IQueryable%601> </xref:System.Collections.Generic.IEnumerable%601>  O <xref:System.Data.DataTable>a classe não implementa a interface, pelo que tem de chamar o método AsEnumerable a utilizar o <xref:System.Data.DataTable>como uma origem do `From` cláusula de um [!INCLUDE[vbtecLinq](~/add/includes/vbteclinq-md.md)] consulta.</xref:System.Data.DataTable> </xref:System.Data.DataTable> Também poderá obter operadores personalizados, específicas do domínio, tal como <xref:System.Data.DataTableExtensions.CopyToDataTable%2A>, devolvendo um <xref:System.Collections.Generic.IEnumerable%601>objeto.</xref:System.Collections.Generic.IEnumerable%601> </xref:System.Data.DataTableExtensions.CopyToDataTable%2A>       O objeto enumeráveis devolvido pelo método AsEnumerable permanentemente está vinculado a <xref:System.Data.DataTable>que produziu o mesmo.</xref:System.Data.DataTable> Várias chamadas para o será de método AsEnumerable várias retorno independentes consultável objetos que estão vinculadas à origem de <xref:System.Data.DataTable>.</xref:System.Data.DataTable>"
  example:
  - "In the following sample, the `DisplayProducts` method receives a DataTable that contains a DataColumn named `ProductName`, extracts the `ProductName` values and then prints the values.  \n  \n [!code-cs[system.data.DataTableExtensions.AsEnumerable#1](~/add/codesnippet/csharp/m-system.data.datatablee_0_1.cs)]\n [!code-vb[system.data.DataTableExtensions.AsEnumerable#1](~/add/codesnippet/visualbasic/m-system.data.datatablee_0_1.vb)]"
  syntax:
    content: public static System.Data.EnumerableRowCollection<System.Data.DataRow> AsEnumerable (this System.Data.DataTable source);
    parameters:
    - id: source
      type: System.Data.DataTable
      description: "A origem <xref href=&quot;System.Data.DataTable&quot;> </xref> para tornar enumeráveis."
    return:
      type: System.Data.EnumerableRowCollection{System.Data.DataRow}
      description: "Um &lt;xref:System.Collections.Generic.IEnumerable%601&gt; objeto, onde o parâmetro genérico <code> T </code> é <xref href=&quot;System.Data.DataRow&quot;> </xref>."
  overload: System.Data.DataTableExtensions.AsEnumerable*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The source <xref href=&quot;System.Data.DataTable&quot;></xref> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0}@)
  id: CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0}@)
  parent: System.Data.DataTableExtensions
  langs:
  - csharp
  name: CopyToDataTable(IEnumerable<T>)
  nameWithType: DataTableExtensions.CopyToDataTable(IEnumerable<T>)
  fullName: System.Data.DataTableExtensions.CopyToDataTable(IEnumerable<T>)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  syntax:
    content: 'public static System.Data.DataTable CopyToDataTable<T> (this System.Collections.Generic.IEnumerable<T> source) where T : System.Data.DataRow;'
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{T}
      description: "A adicionar."
    return:
      type: System.Data.DataTable
      description: "A adicionar."
  overload: System.Data.DataTableExtensions.CopyToDataTable<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0}@,System.Data.Data``0able,System.Data.LoadOption)
  id: CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0}@,System.Data.Data``0able,System.Data.LoadOption)
  parent: System.Data.DataTableExtensions
  langs:
  - csharp
  name: CopyToDataTable(IEnumerable<T>,DataTable,LoadOption)
  nameWithType: DataTableExtensions.CopyToDataTable(IEnumerable<T>,DataTable,LoadOption)
  fullName: System.Data.DataTableExtensions.CopyToDataTable(IEnumerable<T>,DataTable,LoadOption)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  syntax:
    content: 'public static void CopyToDataTable<T> (this System.Collections.Generic.IEnumerable<T> source, System.Data.DataTable table, System.Data.LoadOption options) where T : System.Data.DataRow;'
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{T}
      description: "A adicionar."
    - id: table
      type: System.Data.DataTable
      description: "A adicionar."
    - id: options
      type: System.Data.LoadOption
      description: "A adicionar."
  overload: System.Data.DataTableExtensions.CopyToDataTable<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0}@,System.Data.Data``0able,System.Data.LoadOption,System.Data.FillErrorEventHandler)
  id: CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0}@,System.Data.Data``0able,System.Data.LoadOption,System.Data.FillErrorEventHandler)
  parent: System.Data.DataTableExtensions
  langs:
  - csharp
  name: CopyToDataTable(IEnumerable<T>,DataTable,LoadOption,FillErrorEventHandler)
  nameWithType: DataTableExtensions.CopyToDataTable(IEnumerable<T>,DataTable,LoadOption,FillErrorEventHandler)
  fullName: System.Data.DataTableExtensions.CopyToDataTable(IEnumerable<T>,DataTable,LoadOption,FillErrorEventHandler)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  syntax:
    content: 'public static void CopyToDataTable<T> (this System.Collections.Generic.IEnumerable<T> source, System.Data.DataTable table, System.Data.LoadOption options, System.Data.FillErrorEventHandler errorHandler) where T : System.Data.DataRow;'
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{T}
      description: "A adicionar."
    - id: table
      type: System.Data.DataTable
      description: "A adicionar."
    - id: options
      type: System.Data.LoadOption
      description: "A adicionar."
    - id: errorHandler
      type: System.Data.FillErrorEventHandler
      description: "A adicionar."
  overload: System.Data.DataTableExtensions.CopyToDataTable<T>*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Data.DataTableExtensions.AsDataView(System.Data.DataTable@)
  parent: System.Data.DataTableExtensions
  isExternal: false
  name: AsDataView(DataTable)
  nameWithType: DataTableExtensions.AsDataView(DataTable)
  fullName: System.Data.DataTableExtensions.AsDataView(DataTable)
- uid: System.Data.DataView
  parent: System.Data
  isExternal: false
  name: DataView
  nameWithType: DataView
  fullName: System.Data.DataView
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0}@)
  parent: System.Data.DataTableExtensions
  isExternal: false
  name: AsDataView(EnumerableRowCollection<T>)
  nameWithType: DataTableExtensions.AsDataView(EnumerableRowCollection<T>)
  fullName: System.Data.DataTableExtensions.AsDataView(EnumerableRowCollection<T>)
- uid: System.Data.EnumerableRowCollection{T}
  parent: System.Data
  isExternal: false
  name: EnumerableRowCollection<T>
  nameWithType: EnumerableRowCollection<T>
  fullName: System.Data.EnumerableRowCollection<T>
  spec.csharp:
  - uid: System.Data.EnumerableRowCollection`1
    name: EnumerableRowCollection
    nameWithType: EnumerableRowCollection
    fullName: EnumerableRowCollection<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable@)
  parent: System.Data.DataTableExtensions
  isExternal: false
  name: AsEnumerable(DataTable)
  nameWithType: DataTableExtensions.AsEnumerable(DataTable)
  fullName: System.Data.DataTableExtensions.AsEnumerable(DataTable)
- uid: System.Data.EnumerableRowCollection{System.Data.DataRow}
  parent: System.Data
  isExternal: false
  name: EnumerableRowCollection<DataRow>
  nameWithType: EnumerableRowCollection<DataRow>
  fullName: System.Data.EnumerableRowCollection<System.Data.DataRow>
  spec.csharp:
  - uid: System.Data.EnumerableRowCollection`1
    name: EnumerableRowCollection
    nameWithType: EnumerableRowCollection
    fullName: EnumerableRowCollection<System.Data.DataRow>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.DataRow
    name: DataRow
    nameWithType: DataRow
    fullName: DataRow
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0}@)
  parent: System.Data.DataTableExtensions
  isExternal: false
  name: CopyToDataTable(IEnumerable<T>)
  nameWithType: DataTableExtensions.CopyToDataTable(IEnumerable<T>)
  fullName: System.Data.DataTableExtensions.CopyToDataTable(IEnumerable<T>)
- uid: System.Collections.Generic.IEnumerable{T}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0}@,System.Data.Data``0able,System.Data.LoadOption)
  parent: System.Data.DataTableExtensions
  isExternal: false
  name: CopyToDataTable(IEnumerable<T>,DataTable,LoadOption)
  nameWithType: DataTableExtensions.CopyToDataTable(IEnumerable<T>,DataTable,LoadOption)
  fullName: System.Data.DataTableExtensions.CopyToDataTable(IEnumerable<T>,DataTable,LoadOption)
- uid: System.Data.LoadOption
  parent: System.Data
  isExternal: false
  name: LoadOption
  nameWithType: LoadOption
  fullName: System.Data.LoadOption
- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0}@,System.Data.Data``0able,System.Data.LoadOption,System.Data.FillErrorEventHandler)
  parent: System.Data.DataTableExtensions
  isExternal: false
  name: CopyToDataTable(IEnumerable<T>,DataTable,LoadOption,FillErrorEventHandler)
  nameWithType: DataTableExtensions.CopyToDataTable(IEnumerable<T>,DataTable,LoadOption,FillErrorEventHandler)
  fullName: System.Data.DataTableExtensions.CopyToDataTable(IEnumerable<T>,DataTable,LoadOption,FillErrorEventHandler)
- uid: System.Data.FillErrorEventHandler
  parent: System.Data
  isExternal: false
  name: FillErrorEventHandler
  nameWithType: FillErrorEventHandler
  fullName: System.Data.FillErrorEventHandler
- uid: System.Data.DataTableExtensions.AsDataView*
  parent: System.Data.DataTableExtensions
  isExternal: false
  name: AsDataView
  nameWithType: DataTableExtensions.AsDataView
- uid: System.Data.DataTableExtensions.AsDataView<T>*
  parent: System.Data.DataTableExtensions
  isExternal: false
  name: AsDataView<T>
  nameWithType: DataTableExtensions.AsDataView<T>
- uid: System.Data.DataTableExtensions.AsEnumerable*
  parent: System.Data.DataTableExtensions
  isExternal: false
  name: AsEnumerable
  nameWithType: DataTableExtensions.AsEnumerable
- uid: System.Data.DataTableExtensions.CopyToDataTable<T>*
  parent: System.Data.DataTableExtensions
  isExternal: false
  name: CopyToDataTable<T>
  nameWithType: DataTableExtensions.CopyToDataTable<T>
