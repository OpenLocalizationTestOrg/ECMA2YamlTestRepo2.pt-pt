### YamlMime:ManagedReference
items:
- uid: System.Data.DataTableExtensions
  id: DataTableExtensions
  children:
  - System.Data.DataTableExtensions.AsDataView(System.Data.DataTable@)
  - System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0}@)
  - System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable@)
  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0}@)
  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0}@,System.Data.Data``0able,System.Data.LoadOption)
  - System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0}@,System.Data.Data``0able,System.Data.LoadOption,System.Data.FillErrorEventHandler)
  langs:
  - csharp
  name: DataTableExtensions
  nameWithType: DataTableExtensions
  fullName: System.Data.DataTableExtensions
  type: Class
  summary: "Defines the extension methods to the <xref href=&quot;System.Data.DataTable&quot;></xref> class. DataTableExtensions is a static class."
  syntax:
    content: public static class DataTableExtensions
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.DataTableExtensions.AsDataView(System.Data.DataTable@)
  id: AsDataView(System.Data.DataTable@)
  parent: System.Data.DataTableExtensions
  langs:
  - csharp
  name: AsDataView(DataTable)
  nameWithType: DataTableExtensions.AsDataView(DataTable)
  fullName: System.Data.DataTableExtensions.AsDataView(DataTable)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  summary: "Creates and returns a LINQ-enabled <xref href=&quot;System.Data.DataView&quot;></xref> object."
  remarks: "<xref:System.Data.DataView> enables data-binding scenarios for [!INCLUDE[linq_dataset](~/add/includes/linq-dataset-md.md)] and can be created from a typed or untyped <xref:System.Data.DataTable>, providing a default view of that table. Filtering and sorting can be set on the <xref:System.Data.DataView> after it has been created from a <xref:System.Data.DataTable>. The <xref:System.Data.DataView> is then bound to a UI control, such as a <xref:System.Windows.Forms.DataGrid> or a <xref:System.Windows.Forms.DataGridView>, providing a simple data binding model.       For more information and examples, see [Creating a DataView Object](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates a <xref:System.Data.DataView> from the SalesOrderDetail table and sets it as the data source of a <xref:System.Windows.Forms.BindingSource> object, which acts as a proxy for a <xref:System.Windows.Forms.DataGridView> control:  \n  \n [!code-vb[DP DataView Samples#CreateLDVFromTable](~/add/codesnippet/visualbasic/DataViewSamplesVB/Form1.vb#createldvfromtable)]\n [!code-cs[DP DataView Samples#CreateLDVFromTable](~/add/codesnippet/csharp/DataViewSamples/Form1.cs#createldvfromtable)]"
  syntax:
    content: public static System.Data.DataView AsDataView (this System.Data.DataTable table);
    parameters:
    - id: table
      type: System.Data.DataTable
      description: "The source <xref href=&quot;System.Data.DataTable&quot;></xref> from which the LINQ-enabled <xref href=&quot;System.Data.DataView&quot;></xref> is created."
    return:
      type: System.Data.DataView
      description: "A LINQ-enabled <xref href=&quot;System.Data.DataView&quot;></xref> object."
  overload: System.Data.DataTableExtensions.AsDataView*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0}@)
  id: AsDataView``1(System.Data.EnumerableRowCollection{``0}@)
  parent: System.Data.DataTableExtensions
  langs:
  - csharp
  name: AsDataView(EnumerableRowCollection<T>)
  nameWithType: DataTableExtensions.AsDataView(EnumerableRowCollection<T>)
  fullName: System.Data.DataTableExtensions.AsDataView(EnumerableRowCollection<T>)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  syntax:
    content: 'public static System.Data.DataView AsDataView<T> (this System.Data.EnumerableRowCollection<T> source) where T : System.Data.DataRow;'
    parameters:
    - id: source
      type: System.Data.EnumerableRowCollection{T}
      description: "To be added."
    return:
      type: System.Data.DataView
      description: "To be added."
  overload: System.Data.DataTableExtensions.AsDataView<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable@)
  id: AsEnumerable(System.Data.DataTable@)
  parent: System.Data.DataTableExtensions
  langs:
  - csharp
  name: AsEnumerable(DataTable)
  nameWithType: DataTableExtensions.AsEnumerable(DataTable)
  fullName: System.Data.DataTableExtensions.AsEnumerable(DataTable)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  summary: "Returns an &lt;xref:System.Collections.Generic.IEnumerable%601&gt; object, where the generic parameter <code>T</code> is <xref href=&quot;System.Data.DataRow&quot;></xref>. This object can be used in a [!INCLUDE[vbtecLinq](~/add/includes/vbteclinq-md.md)] expression or method query."
  remarks: "[!INCLUDE[vbteclinqext](~/add/includes/vbteclinqext-md.md)] queries work on data sources that implement the <xref:System.Collections.Generic.IEnumerable%601> interface or the <xref:System.Query.IQueryable%601> interface.  The <xref:System.Data.DataTable> class does not implement either interface, so you must call the AsEnumerable method to use the <xref:System.Data.DataTable> as a source in the `From` clause of a [!INCLUDE[vbtecLinq](~/add/includes/vbteclinq-md.md)] query. You can also obtain custom, domain-specific operators, such as <xref:System.Data.DataTableExtensions.CopyToDataTable%2A>, by returning an <xref:System.Collections.Generic.IEnumerable%601> object.       The enumerable object returned by the AsEnumerable method is permanently bound to the <xref:System.Data.DataTable> that produced it. Multiple calls to the AsEnumerable method will return multiple, independent queryable objects that are all bound to the source <xref:System.Data.DataTable>."
  example:
  - "In the following sample, the `DisplayProducts` method receives a DataTable that contains a DataColumn named `ProductName`, extracts the `ProductName` values and then prints the values.  \n  \n [!code-cs[system.data.DataTableExtensions.AsEnumerable#1](~/add/codesnippet/csharp/m-system.data.datatablee_0_1.cs)]\n [!code-vb[system.data.DataTableExtensions.AsEnumerable#1](~/add/codesnippet/visualbasic/m-system.data.datatablee_0_1.vb)]"
  syntax:
    content: public static System.Data.EnumerableRowCollection<System.Data.DataRow> AsEnumerable (this System.Data.DataTable source);
    parameters:
    - id: source
      type: System.Data.DataTable
      description: "The source <xref href=&quot;System.Data.DataTable&quot;></xref> to make enumerable."
    return:
      type: System.Data.EnumerableRowCollection{System.Data.DataRow}
      description: "An &lt;xref:System.Collections.Generic.IEnumerable%601&gt; object, where the generic parameter <code>T</code> is <xref href=&quot;System.Data.DataRow&quot;></xref>."
  overload: System.Data.DataTableExtensions.AsEnumerable*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The source <xref href=&quot;System.Data.DataTable&quot;></xref> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0}@)
  id: CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0}@)
  parent: System.Data.DataTableExtensions
  langs:
  - csharp
  name: CopyToDataTable(IEnumerable<T>)
  nameWithType: DataTableExtensions.CopyToDataTable(IEnumerable<T>)
  fullName: System.Data.DataTableExtensions.CopyToDataTable(IEnumerable<T>)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  syntax:
    content: 'public static System.Data.DataTable CopyToDataTable<T> (this System.Collections.Generic.IEnumerable<T> source) where T : System.Data.DataRow;'
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{T}
      description: "To be added."
    return:
      type: System.Data.DataTable
      description: "To be added."
  overload: System.Data.DataTableExtensions.CopyToDataTable<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0}@,System.Data.Data``0able,System.Data.LoadOption)
  id: CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0}@,System.Data.Data``0able,System.Data.LoadOption)
  parent: System.Data.DataTableExtensions
  langs:
  - csharp
  name: CopyToDataTable(IEnumerable<T>,DataTable,LoadOption)
  nameWithType: DataTableExtensions.CopyToDataTable(IEnumerable<T>,DataTable,LoadOption)
  fullName: System.Data.DataTableExtensions.CopyToDataTable(IEnumerable<T>,DataTable,LoadOption)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  syntax:
    content: 'public static void CopyToDataTable<T> (this System.Collections.Generic.IEnumerable<T> source, System.Data.DataTable table, System.Data.LoadOption options) where T : System.Data.DataRow;'
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{T}
      description: "To be added."
    - id: table
      type: System.Data.DataTable
      description: "To be added."
    - id: options
      type: System.Data.LoadOption
      description: "To be added."
  overload: System.Data.DataTableExtensions.CopyToDataTable<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0}@,System.Data.Data``0able,System.Data.LoadOption,System.Data.FillErrorEventHandler)
  id: CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0}@,System.Data.Data``0able,System.Data.LoadOption,System.Data.FillErrorEventHandler)
  parent: System.Data.DataTableExtensions
  langs:
  - csharp
  name: CopyToDataTable(IEnumerable<T>,DataTable,LoadOption,FillErrorEventHandler)
  nameWithType: DataTableExtensions.CopyToDataTable(IEnumerable<T>,DataTable,LoadOption,FillErrorEventHandler)
  fullName: System.Data.DataTableExtensions.CopyToDataTable(IEnumerable<T>,DataTable,LoadOption,FillErrorEventHandler)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  syntax:
    content: 'public static void CopyToDataTable<T> (this System.Collections.Generic.IEnumerable<T> source, System.Data.DataTable table, System.Data.LoadOption options, System.Data.FillErrorEventHandler errorHandler) where T : System.Data.DataRow;'
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{T}
      description: "To be added."
    - id: table
      type: System.Data.DataTable
      description: "To be added."
    - id: options
      type: System.Data.LoadOption
      description: "To be added."
    - id: errorHandler
      type: System.Data.FillErrorEventHandler
      description: "To be added."
  overload: System.Data.DataTableExtensions.CopyToDataTable<T>*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Data.DataTableExtensions.AsDataView(System.Data.DataTable@)
  parent: System.Data.DataTableExtensions
  isExternal: false
  name: AsDataView(DataTable)
  nameWithType: DataTableExtensions.AsDataView(DataTable)
  fullName: System.Data.DataTableExtensions.AsDataView(DataTable)
- uid: System.Data.DataView
  parent: System.Data
  isExternal: false
  name: DataView
  nameWithType: DataView
  fullName: System.Data.DataView
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0}@)
  parent: System.Data.DataTableExtensions
  isExternal: false
  name: AsDataView(EnumerableRowCollection<T>)
  nameWithType: DataTableExtensions.AsDataView(EnumerableRowCollection<T>)
  fullName: System.Data.DataTableExtensions.AsDataView(EnumerableRowCollection<T>)
- uid: System.Data.EnumerableRowCollection{T}
  parent: System.Data
  isExternal: false
  name: EnumerableRowCollection<T>
  nameWithType: EnumerableRowCollection<T>
  fullName: System.Data.EnumerableRowCollection<T>
  spec.csharp:
  - uid: System.Data.EnumerableRowCollection`1
    name: EnumerableRowCollection
    nameWithType: EnumerableRowCollection
    fullName: EnumerableRowCollection<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable@)
  parent: System.Data.DataTableExtensions
  isExternal: false
  name: AsEnumerable(DataTable)
  nameWithType: DataTableExtensions.AsEnumerable(DataTable)
  fullName: System.Data.DataTableExtensions.AsEnumerable(DataTable)
- uid: System.Data.EnumerableRowCollection{System.Data.DataRow}
  parent: System.Data
  isExternal: false
  name: EnumerableRowCollection<DataRow>
  nameWithType: EnumerableRowCollection<DataRow>
  fullName: System.Data.EnumerableRowCollection<System.Data.DataRow>
  spec.csharp:
  - uid: System.Data.EnumerableRowCollection`1
    name: EnumerableRowCollection
    nameWithType: EnumerableRowCollection
    fullName: EnumerableRowCollection<System.Data.DataRow>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.DataRow
    name: DataRow
    nameWithType: DataRow
    fullName: DataRow
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0}@)
  parent: System.Data.DataTableExtensions
  isExternal: false
  name: CopyToDataTable(IEnumerable<T>)
  nameWithType: DataTableExtensions.CopyToDataTable(IEnumerable<T>)
  fullName: System.Data.DataTableExtensions.CopyToDataTable(IEnumerable<T>)
- uid: System.Collections.Generic.IEnumerable{T}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0}@,System.Data.Data``0able,System.Data.LoadOption)
  parent: System.Data.DataTableExtensions
  isExternal: false
  name: CopyToDataTable(IEnumerable<T>,DataTable,LoadOption)
  nameWithType: DataTableExtensions.CopyToDataTable(IEnumerable<T>,DataTable,LoadOption)
  fullName: System.Data.DataTableExtensions.CopyToDataTable(IEnumerable<T>,DataTable,LoadOption)
- uid: System.Data.LoadOption
  parent: System.Data
  isExternal: false
  name: LoadOption
  nameWithType: LoadOption
  fullName: System.Data.LoadOption
- uid: System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0}@,System.Data.Data``0able,System.Data.LoadOption,System.Data.FillErrorEventHandler)
  parent: System.Data.DataTableExtensions
  isExternal: false
  name: CopyToDataTable(IEnumerable<T>,DataTable,LoadOption,FillErrorEventHandler)
  nameWithType: DataTableExtensions.CopyToDataTable(IEnumerable<T>,DataTable,LoadOption,FillErrorEventHandler)
  fullName: System.Data.DataTableExtensions.CopyToDataTable(IEnumerable<T>,DataTable,LoadOption,FillErrorEventHandler)
- uid: System.Data.FillErrorEventHandler
  parent: System.Data
  isExternal: false
  name: FillErrorEventHandler
  nameWithType: FillErrorEventHandler
  fullName: System.Data.FillErrorEventHandler
- uid: System.Data.DataTableExtensions.AsDataView*
  parent: System.Data.DataTableExtensions
  isExternal: false
  name: AsDataView
  nameWithType: DataTableExtensions.AsDataView
- uid: System.Data.DataTableExtensions.AsDataView<T>*
  parent: System.Data.DataTableExtensions
  isExternal: false
  name: AsDataView<T>
  nameWithType: DataTableExtensions.AsDataView<T>
- uid: System.Data.DataTableExtensions.AsEnumerable*
  parent: System.Data.DataTableExtensions
  isExternal: false
  name: AsEnumerable
  nameWithType: DataTableExtensions.AsEnumerable
- uid: System.Data.DataTableExtensions.CopyToDataTable<T>*
  parent: System.Data.DataTableExtensions
  isExternal: false
  name: CopyToDataTable<T>
  nameWithType: DataTableExtensions.CopyToDataTable<T>
