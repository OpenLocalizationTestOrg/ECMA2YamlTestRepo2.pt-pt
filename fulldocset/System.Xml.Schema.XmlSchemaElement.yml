### YamlMime:ManagedReference
items:
- uid: System.Xml.Schema.XmlSchemaElement
  id: XmlSchemaElement
  children:
  - System.Xml.Schema.XmlSchemaElement.#ctor
  - System.Xml.Schema.XmlSchemaElement.Block
  - System.Xml.Schema.XmlSchemaElement.BlockResolved
  - System.Xml.Schema.XmlSchemaElement.Constraints
  - System.Xml.Schema.XmlSchemaElement.DefaultValue
  - System.Xml.Schema.XmlSchemaElement.ElementSchemaType
  - System.Xml.Schema.XmlSchemaElement.ElementType
  - System.Xml.Schema.XmlSchemaElement.Final
  - System.Xml.Schema.XmlSchemaElement.FinalResolved
  - System.Xml.Schema.XmlSchemaElement.FixedValue
  - System.Xml.Schema.XmlSchemaElement.Form
  - System.Xml.Schema.XmlSchemaElement.IsAbstract
  - System.Xml.Schema.XmlSchemaElement.IsNillable
  - System.Xml.Schema.XmlSchemaElement.Name
  - System.Xml.Schema.XmlSchemaElement.QualifiedName
  - System.Xml.Schema.XmlSchemaElement.RefName
  - System.Xml.Schema.XmlSchemaElement.SchemaType
  - System.Xml.Schema.XmlSchemaElement.SchemaTypeName
  - System.Xml.Schema.XmlSchemaElement.SubstitutionGroup
  langs:
  - csharp
  name: XmlSchemaElement
  nameWithType: XmlSchemaElement
  fullName: System.Xml.Schema.XmlSchemaElement
  type: Class
  summary: "Represents the <xref uid=&quot;langword_csharp_element&quot; name=&quot;element&quot; href=&quot;&quot;></xref> element from XML Schema as specified by the World Wide Web Consortium (W3C). This class is the base class for all particle types and is used to describe an element in an XML document."
  remarks: "> [!IMPORTANT] >  -   Do not use schemas from unknown or untrusted sources or locations. Doing so will compromise the security of your code.   > -   XML schemas (including inline schemas) are inherently vulnerable to denial of service attacks; do not accept them in untrusted scenarios.   > -   Schema validation error messages and exceptions may expose sensitive information about the content model or URI paths to the schema file. Be careful not to expose this information to untrusted callers."
  example:
  - "The following example creates the `element` element.  \n  \n [!code-cs[Classic WebData XmlSchemaElement Example#1](~/add/codesnippet/csharp/t-system.xml.schema.xmls_2_1.cs)]\n [!code-cpp[Classic WebData XmlSchemaElement Example#1](~/add/codesnippet/cpp/t-system.xml.schema.xmls_2_1.cpp)]\n [!code-vb[Classic WebData XmlSchemaElement Example#1](~/add/codesnippet/visualbasic/t-system.xml.schema.xmls_2_1.vb)]  \n  \n The following XML file is used for the preceding code example.  \n  \n [!code-xml[Classic WebData XmlSchemaElement Example#2](~/add/codesnippet/xml/t-system.xml.schema.xmls_2_2.xsd)]"
  syntax:
    content: 'public class XmlSchemaElement : System.Xml.Schema.XmlSchemaParticle'
  inheritance:
  - System.Object
  - System.Xml.Schema.XmlSchemaObject
  - System.Xml.Schema.XmlSchemaAnnotated
  - System.Xml.Schema.XmlSchemaParticle
  implements: []
  inheritedMembers:
  - System.Xml.Schema.XmlSchemaAnnotated.Annotation
  - System.Xml.Schema.XmlSchemaAnnotated.Id
  - System.Xml.Schema.XmlSchemaAnnotated.UnhandledAttributes
  - System.Xml.Schema.XmlSchemaObject.LineNumber
  - System.Xml.Schema.XmlSchemaObject.LinePosition
  - System.Xml.Schema.XmlSchemaObject.Namespaces
  - System.Xml.Schema.XmlSchemaObject.Parent
  - System.Xml.Schema.XmlSchemaObject.SourceUri
  - System.Xml.Schema.XmlSchemaParticle.MaxOccurs
  - System.Xml.Schema.XmlSchemaParticle.MaxOccursString
  - System.Xml.Schema.XmlSchemaParticle.MinOccurs
  - System.Xml.Schema.XmlSchemaParticle.MinOccursString
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.#ctor
  id: '#ctor'
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: XmlSchemaElement()
  nameWithType: XmlSchemaElement.XmlSchemaElement()
  fullName: System.Xml.Schema.XmlSchemaElement.XmlSchemaElement()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Initializes a new instance of the <xref href=&quot;System.Xml.Schema.XmlSchemaElement&quot;></xref> class."
  syntax:
    content: public XmlSchemaElement ();
    parameters: []
  overload: System.Xml.Schema.XmlSchemaElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.Block
  id: Block
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: Block
  nameWithType: XmlSchemaElement.Block
  fullName: System.Xml.Schema.XmlSchemaElement.Block
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Gets or sets a <xref uid=&quot;langword_csharp_Block&quot; name=&quot;Block&quot; href=&quot;&quot;></xref> derivation."
  remarks: "This attribute can contain the following values:      |Enum|Description|   |----------|-----------------|   |`None`|Use the derivation restriction defined by the `BlockDefault` property of the schema, if it exists.|   |`Empty`|There are no restrictions on replacements of this element.|   |`Substitution`|This element cannot be replaced by a type derived by Substitution.|   |`Extension`|This element cannot be replaced by a type derived by Extension.|   |`Restriction`|This element cannot be replaced by a type derived by Restriction.|   |`All`|`#all`. This element cannot be replaced by any type regardless of derivation method.|       This property does not prevent derivation, but prevents derivation from replacing the type in an instance. List and union values are not supported for the `block` property."
  syntax:
    content: public System.Xml.Schema.XmlSchemaDerivationMethod Block { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaDerivationMethod
      description: "The attribute used to block a type derivation. Default value is <xref uid=&quot;langword_csharp_XmlSchemaDerivationMethod.None&quot; name=&quot;XmlSchemaDerivationMethod.None&quot; href=&quot;&quot;></xref>.       Optional."
  overload: System.Xml.Schema.XmlSchemaElement.Block*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.BlockResolved
  id: BlockResolved
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: BlockResolved
  nameWithType: XmlSchemaElement.BlockResolved
  fullName: System.Xml.Schema.XmlSchemaElement.BlockResolved
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Gets the post-compilation value of the <xref uid=&quot;langword_csharp_Block&quot; name=&quot;Block&quot; href=&quot;&quot;></xref> property."
  remarks: "This value indicates how the type is enforced when `xsi:type` is used in the instance document. For example, if the value is restricted, only the specific defined type can be used, not types derived by restriction from the specific defined type.       This property can contain the values shown in the following table. The default is `None`. List and union derivation methods are not allowed on this property.      |Enum|Description|   |----------|-----------------|   |`Empty`|There are no restrictions on replacements of this element.|   |`Substitution`|This element cannot be replaced by a type derived by Substitution.|   |`Extension`|This element cannot be replaced by a type derived by Extension.|   |`Restriction`|This element cannot be replaced by a type derived by Restriction.|   |`All`|`#all`. This element cannot be replaced by any type regardless of derivation method.|"
  syntax:
    content: public System.Xml.Schema.XmlSchemaDerivationMethod BlockResolved { get; }
    return:
      type: System.Xml.Schema.XmlSchemaDerivationMethod
      description: "The post-compilation value of the <xref uid=&quot;langword_csharp_Block&quot; name=&quot;Block&quot; href=&quot;&quot;></xref> property. The default is the <xref uid=&quot;langword_csharp_BlockDefault&quot; name=&quot;BlockDefault&quot; href=&quot;&quot;></xref> value on the <xref uid=&quot;langword_csharp_schema&quot; name=&quot;schema&quot; href=&quot;&quot;></xref> element."
  overload: System.Xml.Schema.XmlSchemaElement.BlockResolved*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.Constraints
  id: Constraints
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: Constraints
  nameWithType: XmlSchemaElement.Constraints
  fullName: System.Xml.Schema.XmlSchemaElement.Constraints
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Gets the collection of constraints on the element."
  remarks: "Returns a collection of constraints on the element. Can be any of `XmlSchemaKey`, `XmlSchemaKeyref`, or `XmlSchemaUnique`."
  syntax:
    content: public System.Xml.Schema.XmlSchemaObjectCollection Constraints { get; }
    return:
      type: System.Xml.Schema.XmlSchemaObjectCollection
      description: "The collection of constraints."
  overload: System.Xml.Schema.XmlSchemaElement.Constraints*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.DefaultValue
  id: DefaultValue
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: DefaultValue
  nameWithType: XmlSchemaElement.DefaultValue
  fullName: System.Xml.Schema.XmlSchemaElement.DefaultValue
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Gets or sets the default value of the element if its content is a simple type or content of the element is <xref uid=&quot;langword_csharp_textOnly&quot; name=&quot;textOnly&quot; href=&quot;&quot;></xref>."
  remarks: "The `fixed` and `default` attributes are mutually exclusive. If the element contains a simple type, this value must be a valid value of that type."
  syntax:
    content: public string DefaultValue { get; set; }
    return:
      type: System.String
      description: "The default value for the element. The default is a null reference.       Optional."
  overload: System.Xml.Schema.XmlSchemaElement.DefaultValue*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.ElementSchemaType
  id: ElementSchemaType
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: ElementSchemaType
  nameWithType: XmlSchemaElement.ElementSchemaType
  fullName: System.Xml.Schema.XmlSchemaElement.ElementSchemaType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Gets an <xref href=&quot;System.Xml.Schema.XmlSchemaType&quot;></xref> object representing the type of the element based on the <xref:System.Xml.Schema.XmlSchemaElement.SchemaType*> or <xref:System.Xml.Schema.XmlSchemaElement.SchemaTypeName*> values of the element."
  remarks: "This property is a post-schema-validation infoset property."
  syntax:
    content: public System.Xml.Schema.XmlSchemaType ElementSchemaType { get; }
    return:
      type: System.Xml.Schema.XmlSchemaType
      description: "An <xref href=&quot;System.Xml.Schema.XmlSchemaType&quot;></xref> object."
  overload: System.Xml.Schema.XmlSchemaElement.ElementSchemaType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.ElementType
  id: ElementType
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: ElementType
  nameWithType: XmlSchemaElement.ElementType
  fullName: System.Xml.Schema.XmlSchemaElement.ElementType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Gets a common language runtime (CLR) object based on the <xref href=&quot;System.Xml.Schema.XmlSchemaElement&quot;></xref> or <xref href=&quot;System.Xml.Schema.XmlSchemaElement&quot;></xref> of the element, which holds the post-compilation value of the <xref uid=&quot;langword_csharp_ElementType&quot; name=&quot;ElementType&quot; href=&quot;&quot;></xref> property."
  remarks: "The object can be <xref:System.Xml.Schema.XmlSchemaDatatype> if the element has a built-in XML Schema type or <xref:System.Xml.Schema.XmlSchemaSimpleType> if the element has a user-defined type.       This property is a post-schema-validation infoset property.      > [!IMPORTANT] >  The ElementType property is obsolete in the 2.0 version of the .NET Framework and has been replaced by the <xref:System.Xml.Schema.XmlSchemaElement.ElementSchemaType%2A> property."
  syntax:
    content: public object ElementType { get; }
    return:
      type: System.Object
      description: "The common language runtime object. The post-compilation value of the <xref uid=&quot;langword_csharp_ElementType&quot; name=&quot;ElementType&quot; href=&quot;&quot;></xref> property."
  overload: System.Xml.Schema.XmlSchemaElement.ElementType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.Final
  id: Final
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: Final
  nameWithType: XmlSchemaElement.Final
  fullName: System.Xml.Schema.XmlSchemaElement.Final
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Gets or sets the <xref uid=&quot;langword_csharp_Final&quot; name=&quot;Final&quot; href=&quot;&quot;></xref> property to indicate that no further derivations are allowed."
  remarks: "This attribute can contain the values shown in the following table.      |Enum|Description|   |----------|-----------------|   |`None`|Use the derivation restriction defined by the `FinalDefault` property of the schema, if it exists.|   |`Empty`|There are no restrictions on derivations of this element.|   |`Extension`|This element cannot be derived by Extension.|   |`Restriction`|This element cannot be derived by Restriction.|   |`All`|`#all`. This element cannot be derived by any derivation method.|       See also <xref:System.Xml.Schema.XmlSchemaElement>. `Substitution`, `List`, and `Union` derivation methods are not allowed for this property."
  syntax:
    content: public System.Xml.Schema.XmlSchemaDerivationMethod Final { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaDerivationMethod
      description: "The <xref uid=&quot;langword_csharp_Final&quot; name=&quot;Final&quot; href=&quot;&quot;></xref> property. The default is <xref uid=&quot;langword_csharp_XmlSchemaDerivationMethod.None&quot; name=&quot;XmlSchemaDerivationMethod.None&quot; href=&quot;&quot;></xref>.       Optional."
  overload: System.Xml.Schema.XmlSchemaElement.Final*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.FinalResolved
  id: FinalResolved
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: FinalResolved
  nameWithType: XmlSchemaElement.FinalResolved
  fullName: System.Xml.Schema.XmlSchemaElement.FinalResolved
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Gets the post-compilation value of the <xref uid=&quot;langword_csharp_Final&quot; name=&quot;Final&quot; href=&quot;&quot;></xref> property."
  remarks: "This value indicates how the type is restricted when the type is extended through restriction. This property can contain the following values.      |Enum|Description|   |----------|-----------------|   |`Empty`|There are no restrictions on derivations of this element.|   |`Extension`|This element cannot be derived by Extension.|   |`Restriction`|This element cannot be derived by Restriction.|   |`All`|`#all`. This element cannot be derived by any derivation method.|       Substitution, List, and Union derivation methods are not allowed for this property."
  syntax:
    content: public System.Xml.Schema.XmlSchemaDerivationMethod FinalResolved { get; }
    return:
      type: System.Xml.Schema.XmlSchemaDerivationMethod
      description: "The post-compilation value of the <xref uid=&quot;langword_csharp_Final&quot; name=&quot;Final&quot; href=&quot;&quot;></xref> property. Default value is the <xref uid=&quot;langword_csharp_FinalDefault&quot; name=&quot;FinalDefault&quot; href=&quot;&quot;></xref> value on the <xref uid=&quot;langword_csharp_schema&quot; name=&quot;schema&quot; href=&quot;&quot;></xref> element."
  overload: System.Xml.Schema.XmlSchemaElement.FinalResolved*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.FixedValue
  id: FixedValue
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: FixedValue
  nameWithType: XmlSchemaElement.FixedValue
  fullName: System.Xml.Schema.XmlSchemaElement.FixedValue
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Gets or sets the fixed value."
  remarks: "The content should be a simple type or `textOnly`. The `fixed` and `default` attributes are mutually exclusive."
  syntax:
    content: public string FixedValue { get; set; }
    return:
      type: System.String
      description: "The fixed value that is predetermined and unchangeable. The default is a null reference.       Optional."
  overload: System.Xml.Schema.XmlSchemaElement.FixedValue*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.Form
  id: Form
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: Form
  nameWithType: XmlSchemaElement.Form
  fullName: System.Xml.Schema.XmlSchemaElement.Form
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Gets or sets the form for the element."
  remarks: "The default value is the value of the `elementFormDefault` attribute for the `schema` element containing the element. The default is `Unqualified`.      |Enum|Description|   |----------|-----------------|   |`Qualified`|Element must be qualified with the namespace prefix.|   |`Unqualified`|Element is not required to be qualified with the namespace prefix.|       The value cannot be set if the containing element is the `schema` element."
  syntax:
    content: public System.Xml.Schema.XmlSchemaForm Form { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaForm
      description: "The form for the element. The default is the &lt;xref:System.Xml.Schema.XmlSchema.ElementFormDefault%2A?displayProperty=fullName&gt; value.       Optional."
  overload: System.Xml.Schema.XmlSchemaElement.Form*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.IsAbstract
  id: IsAbstract
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: IsAbstract
  nameWithType: XmlSchemaElement.IsAbstract
  fullName: System.Xml.Schema.XmlSchemaElement.IsAbstract
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Gets or sets information to indicate if the element can be used in an instance document."
  syntax:
    content: public bool IsAbstract { get; set; }
    return:
      type: System.Boolean
      description: "If <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, the element cannot appear in the instance document. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.       Optional."
  overload: System.Xml.Schema.XmlSchemaElement.IsAbstract*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.IsNillable
  id: IsNillable
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: IsNillable
  nameWithType: XmlSchemaElement.IsNillable
  fullName: System.Xml.Schema.XmlSchemaElement.IsNillable
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Gets or sets information that indicates if <xref uid=&quot;langword_csharp_xsi:nil&quot; name=&quot;xsi:nil&quot; href=&quot;&quot;></xref> can occur in the instance data. Indicates if an explicit nil value can be assigned to the element."
  remarks: "This applies to element content and not the attributes of the element."
  syntax:
    content: public bool IsNillable { get; set; }
    return:
      type: System.Boolean
      description: "If nillable is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, this enables an instance of the element to have the <xref uid=&quot;langword_csharp_nil&quot; name=&quot;nil&quot; href=&quot;&quot;></xref> attribute set to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>. The <xref uid=&quot;langword_csharp_nil&quot; name=&quot;nil&quot; href=&quot;&quot;></xref> attribute is defined as part of the XML Schema namespace for instances. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.       Optional."
  overload: System.Xml.Schema.XmlSchemaElement.IsNillable*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.Name
  id: Name
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: Name
  nameWithType: XmlSchemaElement.Name
  fullName: System.Xml.Schema.XmlSchemaElement.Name
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Gets or sets the name of the element."
  remarks: "The name must be an NCName (no-colon name) as defined in the World Wide Web Consortium (W3C) XML Namespaces specification. `Name` and `RefName` attributes are mutually exclusive."
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "The name of the element. The default is <xref uid=&quot;langword_csharp_String.Empty&quot; name=&quot;String.Empty&quot; href=&quot;&quot;></xref>."
  overload: System.Xml.Schema.XmlSchemaElement.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.QualifiedName
  id: QualifiedName
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: QualifiedName
  nameWithType: XmlSchemaElement.QualifiedName
  fullName: System.Xml.Schema.XmlSchemaElement.QualifiedName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Gets the actual qualified name for the given element."
  remarks: "QualifiedName is the name that a `ref` attribute refers to. The qualified name consists of the NCName of the element. For example, element name = &quot;NCName&quot;, and the prefix used to describe the `targetNamespace` of the schema. This property holds the post-compilation value of the `QualifiedName` property."
  syntax:
    content: public System.Xml.XmlQualifiedName QualifiedName { get; }
    return:
      type: System.Xml.XmlQualifiedName
      description: "The qualified name of the element. The post-compilation value of the <xref uid=&quot;langword_csharp_QualifiedName&quot; name=&quot;QualifiedName&quot; href=&quot;&quot;></xref> property."
  overload: System.Xml.Schema.XmlSchemaElement.QualifiedName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.RefName
  id: RefName
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: RefName
  nameWithType: XmlSchemaElement.RefName
  fullName: System.Xml.Schema.XmlSchemaElement.RefName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Gets or sets the reference name of an element declared in this schema (or another schema indicated by the specified namespace)."
  remarks: "The `RefName` must be a QName. The `RefName` can include a namespace prefix. If `RefName` attribute is present, all `complexType`, `simpleType`, `key`, `keyref`, `unique`, `nillable`, `default`, `fixed`, `form`, `block`, and `type` must be absent. If `RefName` is present, `minOccurs`, `maxOccurs`, and `id` are allowed. To declare an element using an existing element definition, use the `RefName` attribute to specify the existing element definition.       The value cannot be set if the containing element is the `schema` element."
  syntax:
    content: public System.Xml.XmlQualifiedName RefName { get; set; }
    return:
      type: System.Xml.XmlQualifiedName
      description: "The reference name of the element."
  overload: System.Xml.Schema.XmlSchemaElement.RefName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.SchemaType
  id: SchemaType
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: SchemaType
  nameWithType: XmlSchemaElement.SchemaType
  fullName: System.Xml.Schema.XmlSchemaElement.SchemaType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Gets or sets the type of the element. This can either be a complex type or a simple type."
  remarks: "To declare an element using an existing `simpleType` or `complexType` definition, use the `SchemaType` property to specify the existing type. If `RefName` attribute is present, `complexType`, `simpleType`, `key`, `keyref`, and `unique` elements and `nillable`, `default`, `fixed`, `form`, `block`, and `SchemaType` attributes cannot be present."
  syntax:
    content: public System.Xml.Schema.XmlSchemaType SchemaType { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaType
      description: "The type of the element."
  overload: System.Xml.Schema.XmlSchemaElement.SchemaType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.SchemaTypeName
  id: SchemaTypeName
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: SchemaTypeName
  nameWithType: XmlSchemaElement.SchemaTypeName
  fullName: System.Xml.Schema.XmlSchemaElement.SchemaTypeName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Gets or sets the name of a built-in data type defined in this schema or another schema indicated by the specified namespace."
  syntax:
    content: public System.Xml.XmlQualifiedName SchemaTypeName { get; set; }
    return:
      type: System.Xml.XmlQualifiedName
      description: "The name of the built-in data type."
  overload: System.Xml.Schema.XmlSchemaElement.SchemaTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.SubstitutionGroup
  id: SubstitutionGroup
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: SubstitutionGroup
  nameWithType: XmlSchemaElement.SubstitutionGroup
  fullName: System.Xml.Schema.XmlSchemaElement.SubstitutionGroup
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Gets or sets the name of an element that is being substituted by this element."
  remarks: "This element must have the same type or a type derived from the type of the specified element. This value must be a QName.       The value cannot be set if the containing element is the `schema` element."
  syntax:
    content: public System.Xml.XmlQualifiedName SubstitutionGroup { get; set; }
    return:
      type: System.Xml.XmlQualifiedName
      description: "The qualified name of an element that is being substituted by this element.       Optional."
  overload: System.Xml.Schema.XmlSchemaElement.SubstitutionGroup*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Xml.Schema.XmlSchemaParticle
  isExternal: false
  name: System.Xml.Schema.XmlSchemaParticle
- uid: System.Xml.Schema.XmlSchemaElement.#ctor
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: XmlSchemaElement()
  nameWithType: XmlSchemaElement.XmlSchemaElement()
  fullName: System.Xml.Schema.XmlSchemaElement.XmlSchemaElement()
- uid: System.Xml.Schema.XmlSchemaElement.Block
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: Block
  nameWithType: XmlSchemaElement.Block
  fullName: System.Xml.Schema.XmlSchemaElement.Block
- uid: System.Xml.Schema.XmlSchemaDerivationMethod
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaDerivationMethod
  nameWithType: XmlSchemaDerivationMethod
  fullName: System.Xml.Schema.XmlSchemaDerivationMethod
- uid: System.Xml.Schema.XmlSchemaElement.BlockResolved
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: BlockResolved
  nameWithType: XmlSchemaElement.BlockResolved
  fullName: System.Xml.Schema.XmlSchemaElement.BlockResolved
- uid: System.Xml.Schema.XmlSchemaElement.Constraints
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: Constraints
  nameWithType: XmlSchemaElement.Constraints
  fullName: System.Xml.Schema.XmlSchemaElement.Constraints
- uid: System.Xml.Schema.XmlSchemaObjectCollection
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaObjectCollection
  nameWithType: XmlSchemaObjectCollection
  fullName: System.Xml.Schema.XmlSchemaObjectCollection
- uid: System.Xml.Schema.XmlSchemaElement.DefaultValue
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: DefaultValue
  nameWithType: XmlSchemaElement.DefaultValue
  fullName: System.Xml.Schema.XmlSchemaElement.DefaultValue
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Schema.XmlSchemaElement.ElementSchemaType
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: ElementSchemaType
  nameWithType: XmlSchemaElement.ElementSchemaType
  fullName: System.Xml.Schema.XmlSchemaElement.ElementSchemaType
- uid: System.Xml.Schema.XmlSchemaType
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaType
  nameWithType: XmlSchemaType
  fullName: System.Xml.Schema.XmlSchemaType
- uid: System.Xml.Schema.XmlSchemaElement.ElementType
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: ElementType
  nameWithType: XmlSchemaElement.ElementType
  fullName: System.Xml.Schema.XmlSchemaElement.ElementType
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Xml.Schema.XmlSchemaElement.Final
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: Final
  nameWithType: XmlSchemaElement.Final
  fullName: System.Xml.Schema.XmlSchemaElement.Final
- uid: System.Xml.Schema.XmlSchemaElement.FinalResolved
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: FinalResolved
  nameWithType: XmlSchemaElement.FinalResolved
  fullName: System.Xml.Schema.XmlSchemaElement.FinalResolved
- uid: System.Xml.Schema.XmlSchemaElement.FixedValue
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: FixedValue
  nameWithType: XmlSchemaElement.FixedValue
  fullName: System.Xml.Schema.XmlSchemaElement.FixedValue
- uid: System.Xml.Schema.XmlSchemaElement.Form
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: Form
  nameWithType: XmlSchemaElement.Form
  fullName: System.Xml.Schema.XmlSchemaElement.Form
- uid: System.Xml.Schema.XmlSchemaForm
  parent: System.Xml.Schema
  isExternal: true
  name: XmlSchemaForm
  nameWithType: XmlSchemaForm
  fullName: System.Xml.Schema.XmlSchemaForm
- uid: System.Xml.Schema.XmlSchemaElement.IsAbstract
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: IsAbstract
  nameWithType: XmlSchemaElement.IsAbstract
  fullName: System.Xml.Schema.XmlSchemaElement.IsAbstract
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.Schema.XmlSchemaElement.IsNillable
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: IsNillable
  nameWithType: XmlSchemaElement.IsNillable
  fullName: System.Xml.Schema.XmlSchemaElement.IsNillable
- uid: System.Xml.Schema.XmlSchemaElement.Name
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: Name
  nameWithType: XmlSchemaElement.Name
  fullName: System.Xml.Schema.XmlSchemaElement.Name
- uid: System.Xml.Schema.XmlSchemaElement.QualifiedName
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: QualifiedName
  nameWithType: XmlSchemaElement.QualifiedName
  fullName: System.Xml.Schema.XmlSchemaElement.QualifiedName
- uid: System.Xml.XmlQualifiedName
  parent: System.Xml
  isExternal: true
  name: XmlQualifiedName
  nameWithType: XmlQualifiedName
  fullName: System.Xml.XmlQualifiedName
- uid: System.Xml.Schema.XmlSchemaElement.RefName
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: RefName
  nameWithType: XmlSchemaElement.RefName
  fullName: System.Xml.Schema.XmlSchemaElement.RefName
- uid: System.Xml.Schema.XmlSchemaElement.SchemaType
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: SchemaType
  nameWithType: XmlSchemaElement.SchemaType
  fullName: System.Xml.Schema.XmlSchemaElement.SchemaType
- uid: System.Xml.Schema.XmlSchemaElement.SchemaTypeName
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: SchemaTypeName
  nameWithType: XmlSchemaElement.SchemaTypeName
  fullName: System.Xml.Schema.XmlSchemaElement.SchemaTypeName
- uid: System.Xml.Schema.XmlSchemaElement.SubstitutionGroup
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: SubstitutionGroup
  nameWithType: XmlSchemaElement.SubstitutionGroup
  fullName: System.Xml.Schema.XmlSchemaElement.SubstitutionGroup
- uid: System.Xml.Schema.XmlSchemaElement.#ctor*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: XmlSchemaElement
  nameWithType: XmlSchemaElement.XmlSchemaElement
- uid: System.Xml.Schema.XmlSchemaElement.Block*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: Block
  nameWithType: XmlSchemaElement.Block
- uid: System.Xml.Schema.XmlSchemaElement.BlockResolved*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: BlockResolved
  nameWithType: XmlSchemaElement.BlockResolved
- uid: System.Xml.Schema.XmlSchemaElement.Constraints*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: Constraints
  nameWithType: XmlSchemaElement.Constraints
- uid: System.Xml.Schema.XmlSchemaElement.DefaultValue*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: DefaultValue
  nameWithType: XmlSchemaElement.DefaultValue
- uid: System.Xml.Schema.XmlSchemaElement.ElementSchemaType*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: ElementSchemaType
  nameWithType: XmlSchemaElement.ElementSchemaType
- uid: System.Xml.Schema.XmlSchemaElement.ElementType*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: ElementType
  nameWithType: XmlSchemaElement.ElementType
- uid: System.Xml.Schema.XmlSchemaElement.Final*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: Final
  nameWithType: XmlSchemaElement.Final
- uid: System.Xml.Schema.XmlSchemaElement.FinalResolved*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: FinalResolved
  nameWithType: XmlSchemaElement.FinalResolved
- uid: System.Xml.Schema.XmlSchemaElement.FixedValue*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: FixedValue
  nameWithType: XmlSchemaElement.FixedValue
- uid: System.Xml.Schema.XmlSchemaElement.Form*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: Form
  nameWithType: XmlSchemaElement.Form
- uid: System.Xml.Schema.XmlSchemaElement.IsAbstract*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: IsAbstract
  nameWithType: XmlSchemaElement.IsAbstract
- uid: System.Xml.Schema.XmlSchemaElement.IsNillable*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: IsNillable
  nameWithType: XmlSchemaElement.IsNillable
- uid: System.Xml.Schema.XmlSchemaElement.Name*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: Name
  nameWithType: XmlSchemaElement.Name
- uid: System.Xml.Schema.XmlSchemaElement.QualifiedName*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: QualifiedName
  nameWithType: XmlSchemaElement.QualifiedName
- uid: System.Xml.Schema.XmlSchemaElement.RefName*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: RefName
  nameWithType: XmlSchemaElement.RefName
- uid: System.Xml.Schema.XmlSchemaElement.SchemaType*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: SchemaType
  nameWithType: XmlSchemaElement.SchemaType
- uid: System.Xml.Schema.XmlSchemaElement.SchemaTypeName*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: SchemaTypeName
  nameWithType: XmlSchemaElement.SchemaTypeName
- uid: System.Xml.Schema.XmlSchemaElement.SubstitutionGroup*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: SubstitutionGroup
  nameWithType: XmlSchemaElement.SubstitutionGroup
