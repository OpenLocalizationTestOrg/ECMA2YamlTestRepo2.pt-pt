### YamlMime:ManagedReference
items:
- uid: System.Data.OracleClient.OracleLob
  id: OracleLob
  children:
  - System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)
  - System.Data.OracleClient.OracleLob.BeginBatch
  - System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)
  - System.Data.OracleClient.OracleLob.CanRead
  - System.Data.OracleClient.OracleLob.CanSeek
  - System.Data.OracleClient.OracleLob.CanWrite
  - System.Data.OracleClient.OracleLob.ChunkSize
  - System.Data.OracleClient.OracleLob.Clone
  - System.Data.OracleClient.OracleLob.Connection
  - System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)
  - System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  - System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  - System.Data.OracleClient.OracleLob.Dispose(System.Boolean)
  - System.Data.OracleClient.OracleLob.EndBatch
  - System.Data.OracleClient.OracleLob.Erase
  - System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)
  - System.Data.OracleClient.OracleLob.Flush
  - System.Data.OracleClient.OracleLob.IsBatched
  - System.Data.OracleClient.OracleLob.IsNull
  - System.Data.OracleClient.OracleLob.IsTemporary
  - System.Data.OracleClient.OracleLob.Length
  - System.Data.OracleClient.OracleLob.LobType
  - System.Data.OracleClient.OracleLob.Null
  - System.Data.OracleClient.OracleLob.Position
  - System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)
  - System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)
  - System.Data.OracleClient.OracleLob.SetLength(System.Int64)
  - System.Data.OracleClient.OracleLob.Value
  - System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)
  - System.Data.OracleClient.OracleLob.WriteByte(System.Byte)
  langs:
  - csharp
  name: OracleLob
  nameWithType: OracleLob
  fullName: System.Data.OracleClient.OracleLob
  type: Class
  summary: "Representa um objeto grande binário (<xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;></xref>) o tipo de dados armazenado num servidor Oracle. Esta classe não pode ser herdada."
  remarks: "Um OracleLob difere de acordo com um <xref:System.Data.OracleClient.OracleBFile>em que os dados são armazenados no servidor em vez de num ficheiro físico no sistema operativo.</xref:System.Data.OracleClient.OracleBFile> Também pode ser um objeto de leitura e escrita, ao contrário de um <xref:System.Data.OracleClient.OracleBFile>, que está sempre só de leitura.</xref:System.Data.OracleClient.OracleBFile>       Um OracleLob pode ser um destes <xref:System.Data.OracleClient.OracleType>tipos de dados.</xref:System.Data.OracleClient.OracleType>      | Tipo de dados de OracleType | Descrição |   |--------------------------|-----------------|   | `Blob`| Um Oracle `BLOB` tipo de dados que contém os dados binários com um tamanho máximo de 4 gigabytes (GB). Isto é mapeado para um <xref:System.Array>do tipo <xref:System.Byte>. |   | `Clob`| Um Oracle `CLOB` definir o tipo de dados que contém dados de carateres, com base no caráter predefinida no servidor, com um tamanho máximo de 4 GB.</xref:System.Byte> </xref:System.Array> Isto mapeia para <xref:System.String>. |   | `NClob`| Um Oracle `NCLOB` tipo de dados que contém dados de carateres, com base no caráter national definidas no servidor com um tamanho máximo de 4 GB.</xref:System.String> Isto mapeia para <xref:System.String>. |       Um programador de aplicações de .NET pode obter o Oracle `LOB` valores para os tipos de dados .NET básicos, tais como <xref:System.Array>do tipo <xref:System.Byte>e <xref:System.String>, ou o tipo de dados especializado OracleLob.</xref:System.String> </xref:System.Byte> </xref:System.Array> </xref:System.String> O suporta de classe OracleLob dados a partir de leitura e escrita a Oracle `LOB` na base de dados Oracle.       Seguem-se as principais caraterísticas de um tipo de dados OracleLob distinguir de tipos de dados .NET básicos: - depois de obter o Oracle `LOB` valor da base de dados Oracle para a classe de OracleLob, pode alterar o `LOB` dados de uma transação aberta e as suas alterações são refletidos diretamente na base de dados. Se é possível obter o Oracle `LOB` valor para um <xref:System.Array>do tipo <xref:System.Byte>ou <xref:System.String>e atualizar estes matrizes, as suas alterações não são refletidas na base de dados.</xref:System.String> </xref:System.Byte> </xref:System.Array>      -Quando utiliza a classe de OracleLob para aceder a um segmento de uma `LOB` valor, só nesse segmento é transferido da base de dados Oracle para o cliente. Quando utiliza o <xref:System.Data.OracleClient.OracleDataReader.GetChars%2A>método para aceder a um segmento de uma `LOB` valor, todo o conteúdo do valor é transferido da base de dados Oracle para o cliente.</xref:System.Data.OracleClient.OracleDataReader.GetChars%2A>       Para obter um objeto de OracleLob, chame o <xref:System.Data.OracleClient.OracleDataReader.GetOracleLob%2A>método.</xref:System.Data.OracleClient.OracleDataReader.GetOracleLob%2A>       Pode construir uma OracleLob que seja NULL utilizando este formato: ```   OracleLob myLob = OracleLob.Null;   ``` esta técnica é principalmente utilizada para testar se um `LOB` devolvido do servidor é NULL, como ilustra este exemplo: ```   If(myLob == OracleLob.Null)   ``` nulo A `LOB` comporta-se da mesma forma para um byte zero `LOB` nessa <xref:System.Data.OracleClient.OracleLob.Read%2A>tem êxito e devolve sempre zero bytes.</xref:System.Data.OracleClient.OracleLob.Read%2A>       Selecionar um `LOB` coluna que contém um valor nulo devolve <xref:System.Data.OracleClient.OracleLob.Null>.</xref:System.Data.OracleClient.OracleLob.Null>       Tem de iniciar uma transação antes de obter um temporário `LOB`. Caso contrário, o <xref:System.Data.OracleClient.OracleDataReader>podem não conseguir obter os dados mais tarde.</xref:System.Data.OracleClient.OracleDataReader>       Também pode abrir um temporário `LOB` no Oracle ao chamar o DBMS_LOB. Sistema CREATETEMPORARY armazenados procedimento e enlace um `LOB` parâmetro de saída. No lado do cliente, um temporário `LOB` comportamento semelhante uma tabela com base em `LOB`. Por exemplo, para atualizar o temporário `LOB`, têm de estar entre numa transação.       O exemplo do c# seguinte demonstra como abrir um temporário `LOB`.      ```   OracleConnection connection = new OracleConnection(&quot;server=MyServer; integrated security=yes;&quot;);   connection.Open();   OracleTransaction transaction = connection.BeginTransaction();   OracleCommand command = connection.CreateCommand();   command.Transaction = transaction;   command.CommandText = &quot;declare xx blob; begin dbms_lob.createtemporary(xx, false, 0); :tempblob := xx; end;&quot;;   command.Parameters.Add(new OracleParameter(&quot;tempblob&quot;, OracleType.Blob)).Direction = ParameterDirection.Output;   command.ExecuteNonQuery();   OracleLob tempLob = (OracleLob)command.Parameters[0].Value;   byte[] tempbuff = new byte[10000];   tempLob.BeginBatch(OracleLobOpenMode.ReadWrite);   tempLob.Write(tempbuff,0,tempbuff.Length);   tempLob.EndBatch();   command.Parameters.Clear();   command.CommandText = &quot;MyTable.MyProc&quot;;   command.CommandType = CommandType.StoredProcedure;     command.Parameters.Add(new OracleParameter(&quot;ImportDoc&quot;, OracleType.Blob)).Value = tempLob;   command.ExecuteNonQuery();   transaction.Commit();   connection.Close   ```      > [!NOTE]> O herdados <xref:System.IO.Stream.WriteByte%2A>método falhar se for utilizado com dados de carateres e um <xref:System.InvalidOperationException>é emitida.</xref:System.InvalidOperationException> </xref:System.IO.Stream.WriteByte%2A> Utilize o <xref:System.Data.OracleClient.OracleLob.Write%2A>método em vez disso.</xref:System.Data.OracleClient.OracleLob.Write%2A>   >> Temporário `LOB`s são apenas fechado quando a ligação é fechada, mas com agrupamento e, em carga, temporária `LOB`s não feche. Isto pode ser resolvido pelo disposing o temporário `LOB`, invocando `tempLob.Dispose()`."
  syntax:
    content: 'public sealed class OracleLob : System.IO.Stream, ICloneable, System.Data.SqlTypes.INullable'
  inheritance:
  - System.IO.Stream
  implements:
  - System.Data.SqlTypes.INullable
  - System.ICloneable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)
  id: Append(System.Data.OracleClient.OracleLob)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Append(OracleLob)
  nameWithType: OracleLob.Append(OracleLob)
  fullName: System.Data.OracleClient.OracleLob.Append(OracleLob)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Acrescenta a dados a partir de especificado <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> para atual <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref>."
  remarks: "Para escrever o `LOB`, deve ter obtido o `LOB` utilizando a cláusula FOR UPDATE na instrução SQL SELECT e tem de ter uma transação local foi iniciada.       Todos os dados da origem `LOB` é acrescentado ao fim do atual `LOB`. A posição do nenhum `LOB` é avaliado ou alterada durante este processo.       Os tipos de dados subjacente sempre têm de ser iguais. Por exemplo, se são acrescentar partir de um <xref:System.Data.OracleClient.OracleType>o destino, <xref:System.Data.OracleClient.OracleLob>também tem de ser um <xref:System.Data.OracleClient.OracleType>.</xref:System.Data.OracleClient.OracleType> </xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleType>      > [!NOTE] > Nesta versão, uma operação de escrita para um só de leitura `LOB` pode ser bem-sucedida, mas não atualiza o `LOB` no servidor. Neste caso, no entanto, o local copiar do `LOB` é atualizado. Por conseguinte, mais tarde operações de leitura no <xref:System.Data.OracleClient.OracleLob>objeto poderá devolver resultados da operação de escrita.</xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public void Append (System.Data.OracleClient.OracleLob source);
    parameters:
    - id: source
      type: System.Data.OracleClient.OracleLob
      description: "O <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> partir da qual a acrescentar dados."
  overload: System.Data.OracleClient.OracleLob.Append*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A origem <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> é nulo."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A origem <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> é nulo, ou a ligação está fechada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A origem <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objeto foi fechado ou eliminado."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Ocorreu um erro Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.BeginBatch
  id: BeginBatch
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: BeginBatch()
  nameWithType: OracleLob.BeginBatch()
  fullName: System.Data.OracleClient.OracleLob.BeginBatch()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Impede acionadores do lado do servidor de acionadas ao executar várias operações de leitura."
  remarks: "Abre o `LOB` no <xref:System.Data.OracleClient.OracleLobOpenMode>modo; por conseguinte, o `LOB` apenas podem ser lidos, não é escrito no, até que a chamada correspondente para <xref:System.Data.OracleClient.OracleLob.EndBatch%2A>.</xref:System.Data.OracleClient.OracleLob.EndBatch%2A> </xref:System.Data.OracleClient.OracleLobOpenMode> Para efetuar operações de escrita de batch para o `LOB`, chame <xref:System.Data.OracleClient.OracleLob.BeginBatch%2A>com <xref:System.Data.OracleClient.OracleLobOpenMode>.</xref:System.Data.OracleClient.OracleLobOpenMode> </xref:System.Data.OracleClient.OracleLob.BeginBatch%2A>       Chamar BeginBatch mais do que uma vez na mesma transação atualmente emite o Oracle &quot;ORA&22293;: LOB já aberta na mesma transação&quot; erro. Além disso, se obtém o `LOB` utilizar outro <xref:System.Data.OracleClient.OracleDataReader>, e o emissor original não chamado o <xref:System.Data.OracleClient.OracleLob.EndBatch%2A>método, o mesmo erro é gerado.</xref:System.Data.OracleClient.OracleLob.EndBatch%2A> </xref:System.Data.OracleClient.OracleDataReader> Por conseguinte, tem de chamar o <xref:System.Data.OracleClient.OracleLob.EndBatch%2A>método quando tiver terminado de utilizando <xref:System.Data.OracleClient.OracleLob>.</xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleLob.EndBatch%2A>"
  syntax:
    content: public void BeginBatch ();
    parameters: []
  overload: System.Data.OracleClient.OracleLob.BeginBatch*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A ligação está fechada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi fechado ou eliminado."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Ocorreu um erro Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)
  id: BeginBatch(System.Data.OracleClient.OracleLobOpenMode)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: BeginBatch(OracleLobOpenMode)
  nameWithType: OracleLob.BeginBatch(OracleLobOpenMode)
  fullName: System.Data.OracleClient.OracleLob.BeginBatch(OracleLobOpenMode)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Impede que acionadores do lado do servidor que despoletou enquanto efetuar várias ler e operações de escrita no modo de acesso especificado."
  remarks: "Para escrever o `LOB`, deve ter obtido o `LOB` utilizando a cláusula FOR UPDATE na instrução SQL SELECT e tem de ter uma transação local foi iniciada.       Chamar <xref:System.Data.OracleClient.OracleLob.BeginBatch%2A>mais do que uma vez na mesma transação atualmente emite o Oracle &quot;ORA&22293;: LOB já aberta na mesma transação&quot; erro.</xref:System.Data.OracleClient.OracleLob.BeginBatch%2A> Além disso, se obtém o `LOB` utilizar outro <xref:System.Data.OracleClient.OracleDataReader>, e o emissor original não chamado o <xref:System.Data.OracleClient.OracleLob.EndBatch%2A>método, o mesmo erro é gerado.</xref:System.Data.OracleClient.OracleLob.EndBatch%2A> </xref:System.Data.OracleClient.OracleDataReader> Por conseguinte, tem de chamar o <xref:System.Data.OracleClient.OracleLob.EndBatch%2A>método quando tiver terminado de utilizando <xref:System.Data.OracleClient.OracleLob>.</xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleLob.EndBatch%2A>"
  syntax:
    content: public void BeginBatch (System.Data.OracleClient.OracleLobOpenMode mode);
    parameters:
    - id: mode
      type: System.Data.OracleClient.OracleLobOpenMode
      description: "Modo (uma do <xref href=&quot;System.Data.OracleClient.OracleLobOpenMode&quot;> </xref> valores) na qual o <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> podem ser acedidas entre esta chamada de BeginBatch e correspondente <xref:System.Data.OracleClient.OracleLob.EndBatch*>chamar.</xref:System.Data.OracleClient.OracleLob.EndBatch*>"
  overload: System.Data.OracleClient.OracleLob.BeginBatch*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A ligação está fechada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi fechado ou eliminado."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Ocorreu um erro Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.CanRead
  id: CanRead
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: CanRead
  nameWithType: OracleLob.CanRead
  fullName: System.Data.OracleClient.OracleLob.CanRead
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Obtém um valor que indica se o <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> fluxo pode ser lidos."
  syntax:
    content: public override bool CanRead { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> fluxo que suporta a leitura, caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se um <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> está fechado ou eliminado."
  overload: System.Data.OracleClient.OracleLob.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.CanSeek
  id: CanSeek
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: CanSeek
  nameWithType: OracleLob.CanSeek
  fullName: System.Data.OracleClient.OracleLob.CanSeek
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Obtém um valor que indica se reencaminhar e com versões anteriores operações de pesquisa pode ser executada."
  syntax:
    content: public override bool CanSeek { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Se um <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> está fechado ou eliminado, caso contrário <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>. Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> for <xref href=&quot;System.Data.OracleClient.OracleLob.Null&quot;></xref>."
  overload: System.Data.OracleClient.OracleLob.CanSeek*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.CanWrite
  id: CanWrite
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: CanWrite
  nameWithType: OracleLob.CanWrite
  fullName: System.Data.OracleClient.OracleLob.CanWrite
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Sempre devolve true, independentemente de <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> suporta escrever ou não."
  remarks: "Para escrever o `LOB`, deve ter obtido o `LOB` utilizando a cláusula FOR UPDATE na instrução SQL SELECT e tem de iniciar uma transação local."
  syntax:
    content: public override bool CanWrite { get; }
    return:
      type: System.Boolean
      description: "Devolve sempre <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, independentemente de se um aberta ou undisposed <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> suporta escrever ou não, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se um <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> está fechado ou eliminado."
  overload: System.Data.OracleClient.OracleLob.CanWrite*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.ChunkSize
  id: ChunkSize
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: ChunkSize
  nameWithType: OracleLob.ChunkSize
  fullName: System.Data.OracleClient.OracleLob.ChunkSize
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Obtém um valor que indica o número mínimo de bytes para obter ou enviar para o servidor durante uma operação de leitura/escrita."
  remarks: "O valor devolvido pela propriedade ChunkSize não é uma definição de .NET Framework Data Provider para Oracle. Em vez disso, é o valor que a Interface de chamada de Oracle (OCI) utiliza ao comunicar com o servidor. Utilize ChunkSize para garantir que os segmentos do lado do cliente são o mesmo tamanho. Ler ou escrever em segmentos mais pequenos não coloca em cache dados e faz com que um viagem de round menos otimizada para o servidor, porque um pacote completo não está recebido ou enviado."
  syntax:
    content: public int ChunkSize { get; }
    return:
      type: System.Int32
      description: "O número mínimo de bytes obter ou enviar."
  overload: System.Data.OracleClient.OracleLob.ChunkSize*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A ligação está fechada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi fechado ou eliminado."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Ocorreu um erro Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Clone
  id: Clone
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Clone()
  nameWithType: OracleLob.Clone()
  fullName: System.Data.OracleClient.OracleLob.Clone()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Cria uma nova <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objeto que referencia o mesmo Oracle <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> que o original <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objeto."
  remarks: "As propriedades da nova <xref:System.Data.OracleClient.OracleLob>objeto inicialmente ter os mesmos valores que os do objeto original.</xref:System.Data.OracleClient.OracleLob> No entanto, depois do Clone estiver concluído, cada <xref:System.Data.OracleClient.OracleLob>objeto seja independente do outro.</xref:System.Data.OracleClient.OracleLob> Por exemplo, a alteração do valor da <xref:System.Data.OracleClient.OracleLob.Position%2A>propriedade original <xref:System.Data.OracleClient.OracleLob>não altera o valor de <xref:System.Data.OracleClient.OracleLob.Position%2A>na copiar.</xref:System.Data.OracleClient.OracleLob.Position%2A> </xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleLob.Position%2A>"
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Um novo <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objeto que referencia o mesmo Oracle <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> que o original <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objeto."
  overload: System.Data.OracleClient.OracleLob.Clone*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A ligação está fechada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi fechado ou eliminado."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Connection
  id: Connection
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Connection
  nameWithType: OracleLob.Connection
  fullName: System.Data.OracleClient.OracleLob.Connection
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Obtém o <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref> utilizado por esta instância do <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
  syntax:
    content: public System.Data.OracleClient.OracleConnection Connection { get; }
    return:
      type: System.Data.OracleClient.OracleConnection
      description: "A ligação a uma origem de dados."
  overload: System.Data.OracleClient.OracleLob.Connection*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi fechado ou eliminado."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)
  id: CopyTo(System.Data.OracleClient.OracleLob)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: CopyTo(OracleLob)
  nameWithType: OracleLob.CopyTo(OracleLob)
  fullName: System.Data.OracleClient.OracleLob.CopyTo(OracleLob)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Cópias deste <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> para um destino <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
  remarks: "Os tipos de dados subjacente sempre têm de ser iguais. Por exemplo, se estiver a copiar a partir de um <xref:System.Data.OracleClient.OracleType>o destino, <xref:System.Data.OracleClient.OracleLob>também tem de ser um <xref:System.Data.OracleClient.OracleType>.</xref:System.Data.OracleClient.OracleType> </xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleType>       Se o deslocamento de destino ultrapassa o fim do destino `LOB`, a `LOB` é expandido para que os dados estão a ser copiados. O espaço entre o fim do `LOB` e o destino de deslocamento para além do fim será preenchido com zeros para `BLOB` tipos de dados e espaços para `CLOB` e `NCLOB` tipos de dados.       Para escrever o `LOB`, deve ter obtido o `LOB` utilizando a cláusula FOR UPDATE na instrução SQL SELECT e tem de ter uma transação local foi iniciada.      > [!NOTE] > Nesta versão, uma operação de escrita para um só de leitura `LOB` poderá ter êxito, mas não de atualizar o `LOB` no servidor. Neste caso, no entanto, o local copiar do `LOB` será atualizado. Por conseguinte, mais tarde operações de leitura no <xref:System.Data.OracleClient.OracleLob>objeto poderá devolver resultados da operação de escrita.</xref:System.Data.OracleClient.OracleLob>   >> O `CopyTo` método desmarque o conteúdo do destino da `OracleLob` antes de efetuar a operação de cópia."
  syntax:
    content: public long CopyTo (System.Data.OracleClient.OracleLob destination);
    parameters:
    - id: destination
      type: System.Data.OracleClient.OracleLob
      description: "O destino <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
    return:
      type: System.Int64
      description: "O número de bytes copiado. Isto exclui quaisquer padded bytes."
  overload: System.Data.OracleClient.OracleLob.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> especificado no <code> destination </code> parâmetro é nulo."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A operação não é uma transação, o <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objeto é nulo ou a ligação está fechada."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Ocorreu um erro Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  id: CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: CopyTo(OracleLob,Int64)
  nameWithType: OracleLob.CopyTo(OracleLob,Int64)
  fullName: System.Data.OracleClient.OracleLob.CopyTo(OracleLob,Int64)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Cópias deste <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> para um destino <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> com a quantidade especificada de dados."
  remarks: "Os tipos de dados subjacente sempre têm de ser iguais. Por exemplo, se estiver a copiar a partir de um <xref:System.Data.OracleClient.OracleType>o destino, <xref:System.Data.OracleClient.OracleLob>também tem de ser um <xref:System.Data.OracleClient.OracleType>.</xref:System.Data.OracleClient.OracleType> </xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleType>       Se o deslocamento de destino ultrapassa o fim do destino `LOB`, a `LOB` é expandido para que os dados estão a ser copiados. O espaço entre o fim do `LOB` e deslocamento de destino para além do fim será preenchido com zeros para `BLOB` tipos de dados e espaços para `CLOB` e `NCLOB` tipos de dados.       Para escrever o `LOB`, deve ter obtido o `LOB` utilizando a cláusula FOR UPDATE na instrução SQL SELECT e tem de ter uma transação local foi iniciada.      > [!NOTE] > Nesta versão, uma operação de escrita para um só de leitura `LOB` pode ser bem-sucedida, mas não atualiza o `LOB` no servidor. Neste caso, no entanto, o local copiar do `LOB` é atualizado. Por conseguinte, mais tarde operações de leitura no <xref:System.Data.OracleClient.OracleLob>objeto poderá devolver resultados da operação de escrita.</xref:System.Data.OracleClient.OracleLob>   >> O `CopyTo` método desmarque o conteúdo do destino da `OracleLob` antes de efetuar a operação de cópia."
  syntax:
    content: public long CopyTo (System.Data.OracleClient.OracleLob destination, long destinationOffset);
    parameters:
    - id: destination
      type: System.Data.OracleClient.OracleLob
      description: "O destino<xref href=&quot;System.Data.OracleClient.OracleLob&quot;></xref>"
    - id: destinationOffset
      type: System.Int64
      description: "O desvio para o qual pretende copiar. Para <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> tipos de dados, tem de ser um número par de bytes."
    return:
      type: System.Int64
      description: "O número de bytes copiado. Isto exclui quaisquer padded bytes."
  overload: System.Data.OracleClient.OracleLob.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> especificado no <code> destination </code> parâmetro está cheia."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Um valor especificado no <code> destinationOffset </code> parâmetro é inferior a zero ou superior a 4 gigabytes.       - ou - um valor especificado no <code> destinationOffset </code> parâmetro para um <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> ou <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> tipo de dados não for par.       - ou - tem de especificar <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> tipos de dados como um número par de bytes."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A operação não é uma transação, o <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objeto é nulo ou a ligação está fechada."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Ocorreu um erro Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  id: CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: CopyTo(Int64,OracleLob,Int64,Int64)
  nameWithType: OracleLob.CopyTo(Int64,OracleLob,Int64,Int64)
  fullName: System.Data.OracleClient.OracleLob.CopyTo(Int64,OracleLob,Int64,Int64)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Cópias deste <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> para um destino <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> com a quantidade especificada de dados e o desvio de origem."
  remarks: "Os tipos de dados subjacente sempre têm de ser iguais. Por exemplo, se estiver a copiar a partir de um <xref:System.Data.OracleClient.OracleType>o destino, <xref:System.Data.OracleClient.OracleLob>também tem de ser um <xref:System.Data.OracleClient.OracleType>.</xref:System.Data.OracleClient.OracleType> </xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleType>       Se o deslocamento de destino ultrapassa o fim do destino `LOB`, a `LOB` é expandido para que os dados estão a ser copiados. O espaço entre o fim do `LOB` e deslocamento de destino para além do fim será preenchido com zeros para `BLOB` tipos de dados e espaços para `CLOB` e `NCLOB` tipos de dados.       Para escrever o `LOB`, deve ter obtido o `LOB` utilizando a cláusula FOR UPDATE na instrução SQL SELECT e tem de ter uma transação local foi iniciada.      > [!NOTE] > Nesta versão, uma operação de escrita para um só de leitura `LOB` pode ser bem-sucedida, mas não atualiza o `LOB` no servidor. Neste caso, no entanto, o local copiar do `LOB` é atualizado. Por conseguinte, mais tarde operações de leitura no <xref:System.Data.OracleClient.OracleLob>objeto poderá devolver resultados da operação de escrita.</xref:System.Data.OracleClient.OracleLob>   >> O `CopyTo` método desmarque o conteúdo do destino da `OracleLob` antes de efetuar a operação de cópia."
  syntax:
    content: public long CopyTo (long sourceOffset, System.Data.OracleClient.OracleLob destination, long destinationOffset, long amount);
    parameters:
    - id: sourceOffset
      type: System.Int64
      description: "O desvio do qual pretende copiar. Para <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> tipos de dados, tem de ser um número par."
    - id: destination
      type: System.Data.OracleClient.OracleLob
      description: "The destination <xref uid=&quot;langword_csharp_OracleLob&quot; name=&quot;OracleLob&quot; href=&quot;&quot;></xref><xref href=&quot;System.Data.OracleClient&quot;></xref>."
    - id: destinationOffset
      type: System.Int64
      description: "O desvio de destino para o qual pretende copiar. Para <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> tipos de dados, tem de ser um número par."
    - id: amount
      type: System.Int64
      description: "A quantidade de dados, em bytes, para copiar. Para <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> tipos de dados, tem de ser um número par."
    return:
      type: System.Int64
      description: "O número de bytes copiado. Isto exclui quaisquer padded bytes."
  overload: System.Data.OracleClient.OracleLob.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> especificado no <code> destination </code> parâmetro está cheia."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Um valor especificado no <code> amount </code>, <code> sourceOffset </code>, ou <code> destinationOffset </code> parâmetro é inferior a zero ou superior a 4 gigabytes.       -or-       A value specified in the <code>amount</code>, <code>sourceOffset</code>, or <code>destinationOffset</code> parameter for a <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;></xref> or <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;></xref> data type is not even."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A operação não é uma transação, o <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objeto é nulo ou a ligação está fechada."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Ocorreu um erro Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: OracleLob.Dispose(Boolean)
  fullName: System.Data.OracleClient.OracleLob.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "A adicionar."
  overload: System.Data.OracleClient.OracleLob.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.EndBatch
  id: EndBatch
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: EndBatch()
  nameWithType: OracleLob.EndBatch()
  fullName: System.Data.OracleClient.OracleLob.EndBatch()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Permite acionadores do lado do servidor retomar acionadas depois de efetuar várias operações de escrita."
  remarks: "Chamar o <xref:System.Data.OracleClient.OracleLob.BeginBatch%2A>método antes de começar efetuar operações de escrita no <xref:System.Data.OracleClient.OracleLob>.</xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleLob.BeginBatch%2A>"
  syntax:
    content: public void EndBatch ();
    parameters: []
  overload: System.Data.OracleClient.OracleLob.EndBatch*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A ligação está fechada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi fechado ou eliminado."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Ocorreu um erro Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Erase
  id: Erase
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Erase()
  nameWithType: OracleLob.Erase()
  fullName: System.Data.OracleClient.OracleLob.Erase()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Elimina todos os dados deste <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
  remarks: "Apagar não truncar os dados. O `LOB` comprimento permanece o mesmo para uma `BLOB` tipo de dados, e os dados apagados são substituídos pelo 0x00. `CLOB`e `NCLOB` tipos de dados são substituídos por espaços.       Para escrever o `LOB`, deve ter obtido o `LOB` utilizando a cláusula FOR UPDATE na instrução SQL SELECT e tem de ter uma transação local foi iniciada.      > [!NOTE] > Nesta versão, uma operação de escrita para um só de leitura `LOB` pode ser bem-sucedida, mas não atualiza o `LOB` no servidor. Neste caso, no entanto, o local copiar do `LOB` é atualizado. Por conseguinte, mais tarde operações de leitura no <xref:System.Data.OracleClient.OracleLob>objeto poderá devolver resultados da operação de escrita.</xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public long Erase ();
    parameters: []
    return:
      type: System.Int64
      description: "O número de bytes apagadas."
  overload: System.Data.OracleClient.OracleLob.Erase*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A operação não é uma transação, o <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objeto é nulo ou a ligação está fechada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi fechado ou eliminado."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Ocorreu um erro Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)
  id: Erase(System.Int64,System.Int64)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Erase(Int64,Int64)
  nameWithType: OracleLob.Erase(Int64,Int64)
  fullName: System.Data.OracleClient.OracleLob.Erase(Int64,Int64)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Apague a quantidade especificada de dados deste <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
  remarks: "A soma dos valores no `offset` e `amount` parâmetros podem ser maiores que o tamanho do <xref:System.Data.OracleClient.OracleLob>.</xref:System.Data.OracleClient.OracleLob> Por conseguinte, especificando um valor maior que devolvidos pelo <xref:System.Data.OracleClient.OracleLob.Length%2A>propriedade for bem sucedida; no entanto <xref:System.Data.OracleClient.OracleLob.Erase%2A>apenas apague ao fim do <xref:System.Data.OracleClient.OracleLob>.</xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleLob.Erase%2A> </xref:System.Data.OracleClient.OracleLob.Length%2A> (Da mesma forma, se um valor negativo é passado para `offset`, <xref:System.Data.OracleClient.OracleLob.Erase%2A>será bem-sucedida, mas apenas apagar a partir do início do <xref:System.Data.OracleClient.OracleLob>.)</xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleLob.Erase%2A> Este comportamento é diferente do <xref:System.Data.OracleClient.OracleLob.Read%2A>e <xref:System.Data.OracleClient.OracleLob.Write%2A>métodos e oferece a vantagem da capacidade de apagar todos os dados a partir do valor especificada pelo `offset` sem o tornar uma adicional ida e volta ao servidor para verificar o tamanho real.</xref:System.Data.OracleClient.OracleLob.Write%2A> </xref:System.Data.OracleClient.OracleLob.Read%2A>       <xref:System.Data.OracleClient.OracleLob.Erase%2A>Não truncar os dados.</xref:System.Data.OracleClient.OracleLob.Erase%2A> O `LOB` comprimento permanece o mesmo para uma `BLOB` tipo de dados, e os dados apagados são substituídos pelo 0x00. `CLOB`e `NCLOB` tipos de dados são substituídos por espaços.       Para escrever o `LOB`, deve ter obtido o `LOB` utilizando a cláusula FOR UPDATE na instrução SQL SELECT e tem de ter uma transação local foi iniciada.      > [!NOTE] > Nesta versão, uma operação de escrita para um só de leitura `LOB` pode ser bem-sucedida, mas não atualiza o `LOB` no servidor. Neste caso, no entanto, o local copiar do `LOB` é atualizado. Por conseguinte, mais tarde operações de leitura no <xref:System.Data.OracleClient.OracleLob>objeto poderá devolver resultados da operação de escrita.</xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public long Erase (long offset, long amount);
    parameters:
    - id: offset
      type: System.Int64
      description: "O desvio de que pretende apagar. Para <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> tipos de dados, tem de ser um número par."
    - id: amount
      type: System.Int64
      description: "A quantidade de dados, em bytes, para apagar. Para <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> tipos de dados, tem de ser um número par."
    return:
      type: System.Int64
      description: "O número de bytes apagadas."
  overload: System.Data.OracleClient.OracleLob.Erase*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A operação não é uma transação, o <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objeto é nulo ou a ligação está fechada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi fechado ou eliminado."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Ocorreu um erro Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Flush
  id: Flush
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Flush()
  nameWithType: OracleLob.Flush()
  fullName: System.Data.OracleClient.OracleLob.Flush()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Não é atualmente suportado."
  remarks: "Nesta versão, este método não é funcional."
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.Data.OracleClient.OracleLob.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.IsBatched
  id: IsBatched
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: IsBatched
  nameWithType: OracleLob.IsBatched
  fullName: System.Data.OracleClient.OracleLob.IsBatched
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Obtém um valor que indica se uma aplicação chamar o <xref:System.Data.OracleClient.OracleLob.BeginBatch*>método.</xref:System.Data.OracleClient.OracleLob.BeginBatch*>"
  remarks: 'Quando utilizar um servidor Oracle 8.0.5, um Oracle &quot;ORA 00600: código de erro interno&quot; exceção é emitida.'
  syntax:
    content: public bool IsBatched { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a aplicação de chamada de <xref:System.Data.OracleClient.OracleLob.BeginBatch*>método, caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Data.OracleClient.OracleLob.BeginBatch*>"
  overload: System.Data.OracleClient.OracleLob.IsBatched*
  exceptions:
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Ocorreu um erro Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.IsNull
  id: IsNull
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: IsNull
  nameWithType: OracleLob.IsNull
  fullName: System.Data.OracleClient.OracleLob.IsNull
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> é um <xref href=&quot;System.Data.OracleClient.OracleBFile.Null&quot;> </xref> fluxo."
  syntax:
    content: public bool IsNull { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the <xref href=&quot;System.Data.OracleClient.OracleLob&quot;></xref> is a <xref href=&quot;System.Data.OracleClient.OracleBFile.Null&quot;></xref> stream, otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.OracleClient.OracleLob.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.IsTemporary
  id: IsTemporary
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: IsTemporary
  nameWithType: OracleLob.IsTemporary
  fullName: System.Data.OracleClient.OracleLob.IsTemporary
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> é um temporário <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref>."
  remarks: "O exemplo seguinte demonstra como criar um temporário `LOB`.      ```   OracleConnection connection = new OracleConnection(&quot;server=MyServer; integrated security=yes;&quot;);   connection.Open();   OracleTransaction transaction = connection.BeginTransaction();   OracleCommand command = connection.CreateCommand();   command.Transaction = transaction;   command.CommandText = &quot;declare xx blob; begin dbms_lob.createtemporary(xx, false, 0); :tempblob := xx; end;&quot;;   command.Parameters.Add(new OracleParameter(&quot;tempblob&quot;, OracleType.Blob)).Direction = ParameterDirection.Output;   command.ExecuteNonQuery();   OracleLob tempLob = (OracleLob)command.Parameters[0].Value;   tempLob.BeginBatch(OracleLobOpenMode.ReadWrite);   tempLob.Write(tempbuff,0,tempbuff.Length);   tempLob.EndBatch();   command.Parameters.Clear();   command.CommandText = &quot;MyTable.MyProc&quot;;   command.CommandType = CommandType.StoredProcedure;     command.Parameters.Add(new OracleParameter(&quot;ImportDoc&quot;, OracleType.Blob)).Value = tempLob;   command.ExecuteNonQuery();   transaction.Commit();   connection.Close   ```"
  syntax:
    content: public bool IsTemporary { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> é um temporário <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref>, caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.OracleClient.OracleLob.IsTemporary*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A ligação está fechada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi fechado ou eliminado."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Ocorreu um erro Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Length
  id: Length
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Length
  nameWithType: OracleLob.Length
  fullName: System.Data.OracleClient.OracleLob.Length
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Obtém um valor que devolve o tamanho do <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
  remarks: "O tamanho do <xref:System.Data.OracleClient.OracleLob>sempre é devolvido em bytes, para todos os tipos de dados.</xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public override long Length { get; }
    return:
      type: System.Int64
      description: "O tamanho do <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> em bytes."
  overload: System.Data.OracleClient.OracleLob.Length*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A ligação está fechada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi fechado ou eliminado."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Ocorreu um erro Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.LobType
  id: LobType
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: LobType
  nameWithType: OracleLob.LobType
  fullName: System.Data.OracleClient.OracleLob.LobType
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Obtém um valor que devolve o <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> tipo de dados."
  remarks: "Um <xref:System.Data.OracleClient.OracleLob>pode ser um dos seguintes <xref:System.Data.OracleClient.OracleType>tipos de dados.</xref:System.Data.OracleClient.OracleType> </xref:System.Data.OracleClient.OracleLob>      | Tipo de dados de OracleType | Descrição |   |--------------------------|-----------------|   | `Blob`| Um Oracle `BLOB` tipo de dados que contém os dados binários com um tamanho máximo de 4 gigabytes. Isto é mapeado para um <xref:System.Array>do tipo <xref:System.Byte>. |   | `Clob`| Um Oracle `CLOB` definir o tipo de dados que contém dados de carateres, com base no caráter predefinida no servidor, com um tamanho máximo de 4 gigabytes.</xref:System.Byte> </xref:System.Array> Isto mapeia para <xref:System.String>. |   | `NClob`| Um Oracle `NCLOB` tipo de dados que contém dados de carateres, com base no caráter national definidas no servidor com um tamanho máximo de 4 gigabytes.</xref:System.String> Isto mapeia para <xref:System.String>. |</xref:System.String>"
  syntax:
    content: public System.Data.OracleClient.OracleType LobType { get; }
    return:
      type: System.Data.OracleClient.OracleType
      description: "Um do <xref href=&quot;System.Data.OracleClient.OracleType&quot;> </xref> <xref uid=&quot;langword_csharp_LOB&quot; name=&quot;LOB&quot; href=&quot;&quot;> </xref> tipos de dados."
  overload: System.Data.OracleClient.OracleLob.LobType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Null
  id: "Null"
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: "Null"
  nameWithType: OracleLob.Null
  fullName: System.Data.OracleClient.OracleLob.Null
  type: Field
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Representa um valor nulo <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objeto."
  remarks: "Pode construir um <xref:System.Data.OracleClient.OracleLob>que é NULL utilizando este formato: ```   OracleLob myLob = OracleLOB.Null;   ``` esta técnica é principalmente utilizada para testar se um `LOB` devolvido do servidor é NULL, como ilustra este exemplo: ```   If(myLob == OracleLob.Null)   ``` nulo A `LOB` comporta-se da mesma forma para um byte zero `LOB` nessa <xref:System.Data.OracleClient.OracleLob.Read%2A>tem êxito e devolve sempre zero bytes.</xref:System.Data.OracleClient.OracleLob.Read%2A> </xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public static readonly System.Data.OracleClient.OracleLob Null;
    return:
      type: System.Data.OracleClient.OracleLob
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Position
  id: Position
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Position
  nameWithType: OracleLob.Position
  fullName: System.Data.OracleClient.OracleLob.Position
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Obtém o atual ler posição no <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> fluxo."
  remarks: "A sequência tem de suportar procura obter ou definir a posição. Utilize o <xref:System.Data.OracleClient.OracleLob.CanSeek%2A>propriedade para determinar se o fluxo suporta pesquisa.</xref:System.Data.OracleClient.OracleLob.CanSeek%2A>       Pesquisa para qualquer localização, para além do comprimento do fluxo é suportada. Para procurar até uma posição para ímpar `CLOB` e `NCLOB` tipos de dados também é suportado. Para obter mais informações, consulte a secção observações o <xref:System.Data.OracleClient.OracleLob.Read%2A>propriedade.</xref:System.Data.OracleClient.OracleLob.Read%2A>       A propriedade de posição não manter controlar do número de bytes do fluxo que ter sido consumida, ignorado, ou ambos."
  syntax:
    content: public override long Position { get; set; }
    return:
      type: System.Int64
      description: "A posição actual dentro de <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> fluxo."
  overload: System.Data.OracleClient.OracleLob.Position*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A ligação está fechada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi fechado ou eliminado."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Read(Byte[],Int32,Int32)
  nameWithType: OracleLob.Read(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleLob.Read(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Lê uma sequência de bytes a partir da atual <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> fluxo e progressos relativamente ao ler a posição dentro do fluxo de pelo número de bytes."
  remarks: "O método de leitura lê um máximo de `count` bytes do atual transmitir e armazena-os na `buffer` começando na `offset`. A posição atual no fluxo avançada pelo número de bytes lidos; No entanto, se ocorrer uma exceção, a posição atual no fluxo permanece inalterada. Leitura devolve o número de bytes lidos. O valor de retorno é zero apenas se a posição está atualmente no final da transmissão em fluxo. Leitura irá bloquear até que podem ser lidos pelo menos um byte de dados, no caso de não estão disponíveis dados. Ler devolve 0 se tentar ler a partir de um `LOB` quando a posição atual está no fim do `LOB`. Leitura pode devolver menos bytes que o pedido mesmo que não foi atingido o fim do fluxo.       O .NET Framework Data Provider para Oracle processa todos os `CLOB` e `NCLOB` dados como Unicode. Por conseguinte, quando acedem `CLOB` e `NCLOB` tipos de dados, é sempre lidar com o número de bytes, onde cada caráter é de 2 bytes. Por exemplo, se uma cadeia de texto que contenham carateres de três é guardada como um `NCLOB` num servidor Oracle onde o conjunto de carateres é de 4 bytes por carateres e efetuar uma `Read` operação, especifique o comprimento da cadeia como 6 bytes, embora são armazenadas como 12 bytes no servidor.       O exemplo do c# seguinte demonstra como ler <xref:System.Data.OracleClient.OracleLob>objetos.</xref:System.Data.OracleClient.OracleLob>      ```   public static void ReadLobExample(OracleCommand command)   {      int actual = 0;         //Select some data.      // Table Schema:      //  &quot;CREATE TABLE TableWithLobs (a int, b BLOB, c CLOB, d NCLOB)&quot;;      //  &quot;INSERT INTO TableWithLobs values (1, &quot;AA&quot;, &quot;AAA&quot;, N&quot;AAAA&quot;)&quot;;      command.CommandText = &quot;SELECT * FROM TableWithLobs&quot;;      OracleDataReader reader = command.ExecuteReader();      using(reader)      {         //Obtain the first row of data.         reader.Read();         //Obtain the LOBs (all 3 varieties).         OracleLob BLOB = reader.GetOracleLob(1);         OracleLob CLOB  = reader.GetOracleLob(2);         OracleLob NCLOB = reader.GetOracleLob(3);            //Example - Reading binary data (in chunks).         byte[] buffer = new byte[100];         while((actual = BLOB.Read(buffer, 0, buffer.Length)) >0)            Console.WriteLine(BLOB.LobType + &quot;.Read(&quot; + buffer + &quot;, &quot; + buffer.Length + &quot;) => &quot; + actual);            //Example - Reading CLOB/NCLOB data (in chunks).         //Note: You can read character data as raw Unicode bytes (using OracleLob.Read as in the above example).         //However, because the OracleLob object inherits directly from the.NET stream object,          //all the existing classes that manipluate streams can also be used. For example, the          //.NET StreamReader makes converting the raw bytes into actual characters easier.         StreamReader streamreader = new StreamReader(CLOB, Encoding.Unicode);         char[] cbuffer = new char[100];         while((actual = streamreader.Read(cbuffer, 0, cbuffer.Length)) >0)            Console.WriteLine(CLOB.LobType + &quot;.Read(&quot; + new string(cbuffer, 0, actual) + &quot;, &quot; + cbuffer.Length + &quot;) => &quot; + actual);            //Example - Reading data (all at once).         //You could use StreamReader.ReadToEnd to obtain all the string data,or simply         //call OracleLob.Value to obtain a contiguous allocation of all the data.         Console.WriteLine(NCLOB.LobType + &quot;.Value => &quot; + NCLOB.Value);      }   }   ```Pode construir uma <xref:System.Data.OracleClient.OracleLob>que é NULL utilizando este formato: ```   OracleLob myLob = OracleLob.Null;   ``` esta técnica é principalmente utilizada para testar se um `LOB` devolvido do servidor é NULL, como ilustra o exemplo seguinte.</xref:System.Data.OracleClient.OracleLob>      ```   If(myLob == OracleLob.Null)   ```Um valor nulo `LOB` comporta-se da mesma forma para um byte zero `LOB` nessa leitura tem êxito e sempre devolve zero bytes."
  syntax:
    content: public override int Read (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Uma matriz de bytes. Quando este método devolve, a memória intermédia contém a matriz de bytes especificado com os valores entre `offset` e (`offset` + `count`) substituído pelos bytes de leitura de origem atual."
    - id: offset
      type: System.Int32
      description: "O deslocamento de byte baseado em zero no `buffer` no qual pretende começar a armazenar os dados lido do fluxo atual. Para <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> tipos de dados, tem de ser um número par."
    - id: count
      type: System.Int32
      description: "O número máximo de bytes a possível ler o fluxo actual. Para <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> tipos de dados, tem de ser um número par."
    return:
      type: System.Int32
      description: "O número total de bytes na memória intermédia de leitura. Isto pode ser inferior ao número de bytes se que muitas bytes não estão atualmente disponíveis ou pedido zero (0) se o fim do fluxo foi atingido."
  overload: System.Data.OracleClient.OracleLob.Read*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O <code> buffer </code> é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Um valor no <code> offset </code> ou <code> count </code> parâmetro não for positivo.       - ou - a soma dos parâmetros de deslocamento e contagem é superior ao comprimento da memória intermédia.       - ou - um valor especificado no <code> amount </code> ou <code> offset </code> parâmetro é inferior a zero ou superior a 4 gigabytes."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A operação não é uma transação, o <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objeto é nulo ou a ligação está fechada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi fechado ou eliminado."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Ocorreu um erro Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Seek(Int64,SeekOrigin)
  nameWithType: OracleLob.Seek(Int64,SeekOrigin)
  fullName: System.Data.OracleClient.OracleLob.Seek(Int64,SeekOrigin)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Define a posição atual <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> fluxo."
  remarks: "Se `offset` é negativo, a nova posição tem de preceder a posição especificada pelo `origin` pelo número de bytes especificada por `offset`. Se `offset` for zero, a nova posição tem de ser a posição especificada pelo `origin`. Se `offset` for positivo, a nova posição tem de seguir a posição especificada pelo `origin` pelo número de bytes especificada por `offset`.       Pesquisa para qualquer localização, para além do comprimento do fluxo é suportada. Para procurar até uma posição para ímpar `CLOB` e `NCLOB` tipos de dados também é suportado. Para obter mais informações, consulte a secção observações o <xref:System.Data.OracleClient.OracleLob.Read%2A>propriedade.</xref:System.Data.OracleClient.OracleLob.Read%2A>"
  syntax:
    content: public override long Seek (long offset, System.IO.SeekOrigin origin);
    parameters:
    - id: offset
      type: System.Int64
      description: "Um deslocamento de byte relativamente à origem. Se `offset` é negativo, a nova posição precede a posição especificada pelo `origin` pelo número de bytes especificada por `offset`. Se `offset` for zero, a nova posição é a posição especificada pelo `origin`. Se `offset` for positivo, a nova posição segue-se a posição especificada pelo `origin` pelo número de bytes especificada por `offset`."
    - id: origin
      type: System.IO.SeekOrigin
      description: "Um valor de tipo <xref:System.IO.SeekOrigin>que indica que o ponto de referência utilizado para obter a posição de novo.</xref:System.IO.SeekOrigin>"
    return:
      type: System.Int64
      description: "Nova posição dentro do fluxo actual."
  overload: System.Data.OracleClient.OracleLob.Seek*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> origin </code> parâmetro não contém um valor válido."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "A posição resultante ultrapassa o comprimento do valor."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objeto foi fechado ou eliminado."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Ocorreu um erro Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: SetLength(Int64)
  nameWithType: OracleLob.SetLength(Int64)
  fullName: System.Data.OracleClient.OracleLob.SetLength(Int64)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Define o período do <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> fluxo para um valor inferior ao comprimento atual."
  remarks: "Uma tentativa para aumentar o comprimento do <xref:System.Data.OracleClient.OracleLob>Falha de fluxo e devolve &quot;mensagem: ORA&22926;: especificado comprimento compactação é superior ao comprimento do valor LOB atual&quot; do servidor Oracle.</xref:System.Data.OracleClient.OracleLob>       Um fluxo tem de suportar ambos escrita e pesquisa para SetLength para a função.       O .NET Framework Data Provider para Oracle processa todos os `CLOB` e `NCLOB` dados como Unicode. Por conseguinte, quando acedem `CLOB` e `NCLOB` tipos de dados, é sempre lidar com o número de bytes, onde cada caráter é de 2 bytes. Por exemplo, se uma cadeia de texto que contenham carateres de três é guardada como um `NCLOB` num servidor Oracle onde o conjunto de carateres é de 4 bytes por carateres e efetuar uma `SetLength` operação, especifique o comprimento da cadeia como 6 bytes, embora são armazenadas como 12 bytes no servidor.       Para escrever o `LOB`, deve ter obtido o `LOB` utilizando a cláusula FOR UPDATE na instrução SQL SELECT e tem de ter uma transação local foi iniciada.      > [!NOTE] > A operação de escrita para um só de leitura `LOB` pode ser bem-sucedida, mas não atualiza o `LOB` no servidor. Neste caso, no entanto, o local copiar do `LOB` é atualizado. Por conseguinte, mais tarde operações de leitura no <xref:System.Data.OracleClient.OracleLob>objeto poderá devolver resultados da operação de escrita.</xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public override void SetLength (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "O comprimento pretendido do atual <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> fluxo em bytes. Para <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> tipos de dados, tem de ser um número par."
  overload: System.Data.OracleClient.OracleLob.SetLength*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Um valor especificado no <code> value </code> parâmetro para um <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> ou <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> tipo de dados não for par.       - ou - um valor especificado no <code> value </code> parâmetro é inferior a zero ou superior a 4 gigabytes."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A operação não é uma transação, o <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objeto é nulo ou a ligação está fechada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi fechado ou eliminado."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Ocorreu um erro Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Value
  id: Value
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Value
  nameWithType: OracleLob.Value
  fullName: System.Data.OracleClient.OracleLob.Value
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Obtém o valor de fluxo de tempo de execução de idioma comum equivalente do valor subjacente."
  remarks: "Para <xref:System.Data.OracleClient.OracleType>tipos de dados, o valor devolve os dados de subjacentes completos como uma matriz do tipo contígua `Byte[]`.</xref:System.Data.OracleClient.OracleType> Para <xref:System.Data.OracleClient.OracleType>e <xref:System.Data.OracleClient.OracleType>tipos de dados, o valor devolve todos os dados como um `String` tipo de dados.</xref:System.Data.OracleClient.OracleType> </xref:System.Data.OracleClient.OracleType> Para dados nulo, o valor devolve <xref:System.DBNull>.</xref:System.DBNull> Ao comparar os valores devolvidos, poder diferenciar entre dados vazios, null, os dados e os dados.      > [!NOTE] > Uma vantagem de utilizar `LOB` tipos de dados é a capacidade de obter grandes quantidades de dados em segmentos do cliente. No entanto, quando utiliza o valor, obter todos os dados para o `LOB` coluna como um segmento contígua, pode aumentar significativamente a sobrecarga de aplicação."
  syntax:
    content: public object Value { get; }
    return:
      type: System.Object
      description: "For <xref href=&quot;System.Data.OracleClient.OracleType&quot;></xref>, an array of type <xref uid=&quot;langword_csharp_Byte[]&quot; name=&quot;Byte[]&quot; href=&quot;&quot;></xref>. For <xref href=&quot;System.Data.OracleClient.OracleType&quot;></xref> and <xref href=&quot;System.Data.OracleClient.OracleType&quot;></xref>, a <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Para dados nulo, <xref href=&quot;System.DBNull&quot;> </xref>."
  overload: System.Data.OracleClient.OracleLob.Value*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi fechado ou eliminado."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Ocorreu um erro Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: Write(Byte[],Int32,Int32)
  nameWithType: OracleLob.Write(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleLob.Write(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Escreve uma sequência de bytes atual <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> transmitir e avança a posição atual neste fluxo pelo número de bytes escritos."
  remarks: "Se a operação de escrita for bem sucedida, a posição na sequência avança pelo número de bytes escritos. Se ocorrer uma exceção, a posição na sequência permanece inalterada.       Escrever para além do fim de `LOB` é permitido e enlarges o `LOB` pelo número de bytes escritos.       O .NET Framework Data Provider para Oracle processa todos os `CLOB` e `NCLOB` dados como Unicode. Por conseguinte, quando acedem `CLOB` e `NCLOB` tipos de dados, é sempre lidar com o número de bytes, onde cada caráter é de 2 bytes. Por exemplo, se uma cadeia de texto que contenham carateres de três é guardada como um `NCLOB` num servidor Oracle onde o conjunto de carateres é de 4 bytes por carateres e efetuar uma `Write` operação, especifique o comprimento da cadeia como 6 bytes, embora são armazenadas como 12 bytes no servidor.       Para escrever o `LOB`, deve ter obtido o `LOB` utilizando a cláusula FOR UPDATE na instrução SQL SELECT e tem de ter uma transação local foi iniciada.       O exemplo do c# seguinte demonstra como escrever <xref:System.Data.OracleClient.OracleLob>objetos.</xref:System.Data.OracleClient.OracleLob>      ```   public static void WriteLobExample(OracleCommand command)   {      //Note: Updating LOB data requires a transaction.      command.Transaction = command.Connection.BeginTransaction();      //Select some data.      //    Table Schema:      //        &quot;CREATE TABLE tablewithlobs (a int, b BLOB, c BLOB)&quot;;      //        &quot;INSERT INTO tablewithlobs values (1, &quot;AA&quot;, &quot;AAA&quot;)&quot;;      command.CommandText = &quot;SELECT * FROM TableWithLobs FOR UPDATE&quot;;      OracleDataReader reader = command.ExecuteReader();      using(reader)      {         //Obtain the first row of data.         reader.Read();         //Obtain both LOBs.         OracleLob BLOB1    = reader.GetOracleLob(1);         OracleLob BLOB2    = reader.GetOracleLob(2);         //Perform any desired operations on the LOB, (read, position, and so on).         //...         //Example - Writing binary data (directly to the backend).         //To write, you can use any of the stream classes, or write raw binary data using          //the OracleLob write method. Writing character vs. binary is the same;         //however note that character is always in terms of Unicode byte counts         //(for example: even number of bytes - 2 bytes for every Unicode character).         byte[] buffer = new byte[100];         buffer[0] = 0xCC;         buffer[1] = 0xDD;         BLOB1.Write(buffer, 0, 2);         BLOB1.Position = 0;         Console.WriteLine(BLOB1.LobType + &quot;.Write(&quot; + buffer + &quot;, 0, 2) => &quot; + BLOB1.Value);            //Example - Copying data into another LOB.         long actual = BLOB1.CopyTo(BLOB2);         Console.WriteLine(BLOB1.LobType + &quot;.CopyTo(&quot; + BLOB2.Value + &quot;) => &quot; + actual);            //Commit the transaction now that everything succeeded.         //Note: On error, Transaction.Dispose is called (from the using statement)         //and will automatically roll-back the pending transaction.         command.Transaction.Commit();      }   }   ```      > [!NOTE]> A operação de escrita para um só de leitura `LOB` pode ser bem-sucedida, mas não atualiza o `LOB` no servidor. Neste caso, no entanto, o local copiar do `LOB` é atualizado. Por conseguinte, mais tarde operações de leitura no <xref:System.Data.OracleClient.OracleLob>objeto poderá devolver resultados da operação de escrita.</xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public override void Write (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Uma matriz de bytes. Este método copia o número de bytes especificada no `count` de `buffer` para o fluxo actual."
    - id: offset
      type: System.Int32
      description: "O deslocamento de byte baseado em zero no `buffer` no qual pretende começar a copiar bytes no fluxo atual. Para <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> tipos de dados, tem de ser um número par."
    - id: count
      type: System.Int32
      description: "O número de bytes a escrever para o fluxo actual. Para <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> tipos de dados, tem de ser um número par."
  overload: System.Data.OracleClient.OracleLob.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O <code> buffer </code> parâmetro é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Um valor no <code> offset </code> ou <code> count </code> parâmetro não for positivo.       - ou - a soma do <code> offset </code> e <code> count </code> parâmetros é maior do que o <code> buffer </code> comprimento.       - ou - um valor especificado no <code> count </code> ou <code> offset </code> parâmetro é inferior a zero ou superior a 4 gigabytes.       - ou - tem de especificar <xref uid=&quot;langword_csharp_CLOB&quot; name=&quot;CLOB&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_NCLOB&quot; name=&quot;NCLOB&quot; href=&quot;&quot;> </xref> tipos de dados como um número par de bytes."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A operação não é uma transação, o <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> objeto é nulo ou a ligação está fechada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi fechado ou eliminado."
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "Ocorreu um erro Oracle."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleLob.WriteByte(System.Byte)
  id: WriteByte(System.Byte)
  parent: System.Data.OracleClient.OracleLob
  langs:
  - csharp
  name: WriteByte(Byte)
  nameWithType: OracleLob.WriteByte(Byte)
  fullName: System.Data.OracleClient.OracleLob.WriteByte(Byte)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Escreve um byte a posição atual no <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> transmitir e avança a posição dentro do fluxo por um byte."
  remarks: "Se a operação de escrita for bem sucedida, a posição na sequência avança por um byte. Se ocorrer uma exceção, a posição na sequência permanece inalterada.       Escrever para além do fim do `LOB` é permitido e enlarges o `LOB` por um byte.       Para escrever o `LOB`, deve ter obtido o `LOB` utilizando a cláusula FOR UPDATE na instrução SQL SELECT e tem de ter uma transação local foi iniciada.      > [!NOTE] > A operação de escrita para um só de leitura `LOB` pode ser bem-sucedida, mas não atualiza o `LOB` no servidor. Neste caso, no entanto, o local copiar do `LOB` é atualizado. Por conseguinte, mais tarde operações de leitura no <xref:System.Data.OracleClient.OracleLob>objeto poderá devolver resultados da operação de escrita.</xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public override void WriteByte (byte value);
    parameters:
    - id: value
      type: System.Byte
      description: "O byte para escrever no fluxo."
  overload: System.Data.OracleClient.OracleLob.WriteByte*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IO.Stream
  isExternal: false
  name: System.IO.Stream
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.Data.OracleClient.OracleException
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleException
  nameWithType: OracleException
  fullName: System.Data.OracleClient.OracleException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Append(OracleLob)
  nameWithType: OracleLob.Append(OracleLob)
  fullName: System.Data.OracleClient.OracleLob.Append(OracleLob)
- uid: System.Data.OracleClient.OracleLob
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleLob
  nameWithType: OracleLob
  fullName: System.Data.OracleClient.OracleLob
- uid: System.Data.OracleClient.OracleLob.BeginBatch
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: BeginBatch()
  nameWithType: OracleLob.BeginBatch()
  fullName: System.Data.OracleClient.OracleLob.BeginBatch()
- uid: System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: BeginBatch(OracleLobOpenMode)
  nameWithType: OracleLob.BeginBatch(OracleLobOpenMode)
  fullName: System.Data.OracleClient.OracleLob.BeginBatch(OracleLobOpenMode)
- uid: System.Data.OracleClient.OracleLobOpenMode
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleLobOpenMode
  nameWithType: OracleLobOpenMode
  fullName: System.Data.OracleClient.OracleLobOpenMode
- uid: System.Data.OracleClient.OracleLob.CanRead
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CanRead
  nameWithType: OracleLob.CanRead
  fullName: System.Data.OracleClient.OracleLob.CanRead
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.OracleClient.OracleLob.CanSeek
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CanSeek
  nameWithType: OracleLob.CanSeek
  fullName: System.Data.OracleClient.OracleLob.CanSeek
- uid: System.Data.OracleClient.OracleLob.CanWrite
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CanWrite
  nameWithType: OracleLob.CanWrite
  fullName: System.Data.OracleClient.OracleLob.CanWrite
- uid: System.Data.OracleClient.OracleLob.ChunkSize
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: ChunkSize
  nameWithType: OracleLob.ChunkSize
  fullName: System.Data.OracleClient.OracleLob.ChunkSize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.OracleClient.OracleLob.Clone
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Clone()
  nameWithType: OracleLob.Clone()
  fullName: System.Data.OracleClient.OracleLob.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.OracleClient.OracleLob.Connection
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Connection
  nameWithType: OracleLob.Connection
  fullName: System.Data.OracleClient.OracleLob.Connection
- uid: System.Data.OracleClient.OracleConnection
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleConnection
  nameWithType: OracleConnection
  fullName: System.Data.OracleClient.OracleConnection
- uid: System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CopyTo(OracleLob)
  nameWithType: OracleLob.CopyTo(OracleLob)
  fullName: System.Data.OracleClient.OracleLob.CopyTo(OracleLob)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CopyTo(OracleLob,Int64)
  nameWithType: OracleLob.CopyTo(OracleLob,Int64)
  fullName: System.Data.OracleClient.OracleLob.CopyTo(OracleLob,Int64)
- uid: System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CopyTo(Int64,OracleLob,Int64,Int64)
  nameWithType: OracleLob.CopyTo(Int64,OracleLob,Int64,Int64)
  fullName: System.Data.OracleClient.OracleLob.CopyTo(Int64,OracleLob,Int64,Int64)
- uid: System.Data.OracleClient.OracleLob.Dispose(System.Boolean)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: OracleLob.Dispose(Boolean)
  fullName: System.Data.OracleClient.OracleLob.Dispose(Boolean)
- uid: System.Data.OracleClient.OracleLob.EndBatch
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: EndBatch()
  nameWithType: OracleLob.EndBatch()
  fullName: System.Data.OracleClient.OracleLob.EndBatch()
- uid: System.Data.OracleClient.OracleLob.Erase
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Erase()
  nameWithType: OracleLob.Erase()
  fullName: System.Data.OracleClient.OracleLob.Erase()
- uid: System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Erase(Int64,Int64)
  nameWithType: OracleLob.Erase(Int64,Int64)
  fullName: System.Data.OracleClient.OracleLob.Erase(Int64,Int64)
- uid: System.Data.OracleClient.OracleLob.Flush
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Flush()
  nameWithType: OracleLob.Flush()
  fullName: System.Data.OracleClient.OracleLob.Flush()
- uid: System.Data.OracleClient.OracleLob.IsBatched
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: IsBatched
  nameWithType: OracleLob.IsBatched
  fullName: System.Data.OracleClient.OracleLob.IsBatched
- uid: System.Data.OracleClient.OracleLob.IsNull
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: IsNull
  nameWithType: OracleLob.IsNull
  fullName: System.Data.OracleClient.OracleLob.IsNull
- uid: System.Data.OracleClient.OracleLob.IsTemporary
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: IsTemporary
  nameWithType: OracleLob.IsTemporary
  fullName: System.Data.OracleClient.OracleLob.IsTemporary
- uid: System.Data.OracleClient.OracleLob.Length
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Length
  nameWithType: OracleLob.Length
  fullName: System.Data.OracleClient.OracleLob.Length
- uid: System.Data.OracleClient.OracleLob.LobType
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: LobType
  nameWithType: OracleLob.LobType
  fullName: System.Data.OracleClient.OracleLob.LobType
- uid: System.Data.OracleClient.OracleType
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleType
  nameWithType: OracleType
  fullName: System.Data.OracleClient.OracleType
- uid: System.Data.OracleClient.OracleLob.Null
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: "Null"
  nameWithType: OracleLob.Null
  fullName: System.Data.OracleClient.OracleLob.Null
- uid: System.Data.OracleClient.OracleLob.Position
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Position
  nameWithType: OracleLob.Position
  fullName: System.Data.OracleClient.OracleLob.Position
- uid: System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Read(Byte[],Int32,Int32)
  nameWithType: OracleLob.Read(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleLob.Read(Byte[],Int32,Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Seek(Int64,SeekOrigin)
  nameWithType: OracleLob.Seek(Int64,SeekOrigin)
  fullName: System.Data.OracleClient.OracleLob.Seek(Int64,SeekOrigin)
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.Data.OracleClient.OracleLob.SetLength(System.Int64)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: SetLength(Int64)
  nameWithType: OracleLob.SetLength(Int64)
  fullName: System.Data.OracleClient.OracleLob.SetLength(Int64)
- uid: System.Data.OracleClient.OracleLob.Value
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Value
  nameWithType: OracleLob.Value
  fullName: System.Data.OracleClient.OracleLob.Value
- uid: System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Write(Byte[],Int32,Int32)
  nameWithType: OracleLob.Write(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleLob.Write(Byte[],Int32,Int32)
- uid: System.Data.OracleClient.OracleLob.WriteByte(System.Byte)
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: WriteByte(Byte)
  nameWithType: OracleLob.WriteByte(Byte)
  fullName: System.Data.OracleClient.OracleLob.WriteByte(Byte)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.OracleClient.OracleLob.Append*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Append
  nameWithType: OracleLob.Append
- uid: System.Data.OracleClient.OracleLob.BeginBatch*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: BeginBatch
  nameWithType: OracleLob.BeginBatch
- uid: System.Data.OracleClient.OracleLob.CanRead*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CanRead
  nameWithType: OracleLob.CanRead
- uid: System.Data.OracleClient.OracleLob.CanSeek*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CanSeek
  nameWithType: OracleLob.CanSeek
- uid: System.Data.OracleClient.OracleLob.CanWrite*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CanWrite
  nameWithType: OracleLob.CanWrite
- uid: System.Data.OracleClient.OracleLob.ChunkSize*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: ChunkSize
  nameWithType: OracleLob.ChunkSize
- uid: System.Data.OracleClient.OracleLob.Clone*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Clone
  nameWithType: OracleLob.Clone
- uid: System.Data.OracleClient.OracleLob.Connection*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Connection
  nameWithType: OracleLob.Connection
- uid: System.Data.OracleClient.OracleLob.CopyTo*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: CopyTo
  nameWithType: OracleLob.CopyTo
- uid: System.Data.OracleClient.OracleLob.Dispose*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Dispose
  nameWithType: OracleLob.Dispose
- uid: System.Data.OracleClient.OracleLob.EndBatch*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: EndBatch
  nameWithType: OracleLob.EndBatch
- uid: System.Data.OracleClient.OracleLob.Erase*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Erase
  nameWithType: OracleLob.Erase
- uid: System.Data.OracleClient.OracleLob.Flush*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Flush
  nameWithType: OracleLob.Flush
- uid: System.Data.OracleClient.OracleLob.IsBatched*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: IsBatched
  nameWithType: OracleLob.IsBatched
- uid: System.Data.OracleClient.OracleLob.IsNull*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: IsNull
  nameWithType: OracleLob.IsNull
- uid: System.Data.OracleClient.OracleLob.IsTemporary*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: IsTemporary
  nameWithType: OracleLob.IsTemporary
- uid: System.Data.OracleClient.OracleLob.Length*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Length
  nameWithType: OracleLob.Length
- uid: System.Data.OracleClient.OracleLob.LobType*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: LobType
  nameWithType: OracleLob.LobType
- uid: System.Data.OracleClient.OracleLob.Position*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Position
  nameWithType: OracleLob.Position
- uid: System.Data.OracleClient.OracleLob.Read*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Read
  nameWithType: OracleLob.Read
- uid: System.Data.OracleClient.OracleLob.Seek*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Seek
  nameWithType: OracleLob.Seek
- uid: System.Data.OracleClient.OracleLob.SetLength*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: SetLength
  nameWithType: OracleLob.SetLength
- uid: System.Data.OracleClient.OracleLob.Value*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Value
  nameWithType: OracleLob.Value
- uid: System.Data.OracleClient.OracleLob.Write*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: Write
  nameWithType: OracleLob.Write
- uid: System.Data.OracleClient.OracleLob.WriteByte*
  parent: System.Data.OracleClient.OracleLob
  isExternal: false
  name: WriteByte
  nameWithType: OracleLob.WriteByte
