### YamlMime:ManagedReference
items:
- uid: System.IO.Pipes.NamedPipeClientStream
  id: NamedPipeClientStream
  children:
  - System.IO.Pipes.NamedPipeClientStream.#ctor(System.String)
  - System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String)
  - System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)
  - System.IO.Pipes.NamedPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)
  - System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)
  - System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)
  - System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)
  - System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)
  - System.IO.Pipes.NamedPipeClientStream.CheckPipePropertyOperations
  - System.IO.Pipes.NamedPipeClientStream.Connect
  - System.IO.Pipes.NamedPipeClientStream.Connect(System.Int32)
  - System.IO.Pipes.NamedPipeClientStream.ConnectAsync
  - System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32)
  - System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Threading.CancellationToken)
  - System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32,System.Threading.CancellationToken)
  - System.IO.Pipes.NamedPipeClientStream.Finalize
  - System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances
  langs:
  - csharp
  name: NamedPipeClientStream
  nameWithType: NamedPipeClientStream
  fullName: System.IO.Pipes.NamedPipeClientStream
  type: Class
  summary: "Exposes a <xref:System.IO.Stream> around a named pipe, which supports both synchronous and asynchronous read and write operations."
  remarks: "Named pipes provide one-way or duplex pipes for communication between a pipe server and one or more pipe clients. Named pipes can be used for interprocess communication locally or over a network. A single pipe name can be shared by multiple NamedPipeClientStream objects.       Any process can act as either a named pipe server or client, or both.      > [!NOTE] >  For [!INCLUDE[winxppro](~/add/includes/winxppro-md.md)] and [!INCLUDE[win2kserver](~/add/includes/win2kserver-md.md)], a maximum of 10 pipes can simultaneously connect over the network."
  example:
  - "The following example demonstrates a way to send a string from a parent process to a child process on the same computer using named pipes. This example creates a <xref:System.IO.Pipes.NamedPipeServerStream> object in a parent process. The <xref:System.IO.Pipes.NamedPipeServerStream> object has a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection>. The server then waits for a NamedPipeClientStream object in a child process to connect to it. In this example, both processes are on the same computer and the NamedPipeClientStream object has a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection>. The parent process then sends a user-supplied string to the child process. The string is displayed to the console.  \n  \n This example is for the client process, which connects to the server process. For the entire code sample, including the code for both the pipe client and server, see [How to: Use Named Pipes for Network Interprocess Communication](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/add/codesnippet/visualbasic/t-system.io.pipes.namedp_1_1.vb)]\n [!code-cs[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/add/codesnippet/csharp/t-system.io.pipes.namedp_1_1.cs)]"
  syntax:
    content: 'public sealed class NamedPipeClientStream : System.IO.Pipes.PipeStream'
  inheritance:
  - System.IO.Stream
  - System.IO.Pipes.PipeStream
  implements: []
  inheritedMembers:
  - System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Pipes.PipeStream.CanRead
  - System.IO.Pipes.PipeStream.CanSeek
  - System.IO.Pipes.PipeStream.CanWrite
  - System.IO.Pipes.PipeStream.CheckReadOperations
  - System.IO.Pipes.PipeStream.CheckWriteOperations
  - System.IO.Pipes.PipeStream.Dispose(System.Boolean)
  - System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)
  - System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)
  - System.IO.Pipes.PipeStream.Flush
  - System.IO.Pipes.PipeStream.GetAccessControl
  - System.IO.Pipes.PipeStream.InBufferSize
  - System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)
  - System.IO.Pipes.PipeStream.IsAsync
  - System.IO.Pipes.PipeStream.IsConnected
  - System.IO.Pipes.PipeStream.IsHandleExposed
  - System.IO.Pipes.PipeStream.IsMessageComplete
  - System.IO.Pipes.PipeStream.Length
  - System.IO.Pipes.PipeStream.OutBufferSize
  - System.IO.Pipes.PipeStream.Position
  - System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.IO.Pipes.PipeStream.ReadByte
  - System.IO.Pipes.PipeStream.ReadMode
  - System.IO.Pipes.PipeStream.SafePipeHandle
  - System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)
  - System.IO.Pipes.PipeStream.SetLength(System.Int64)
  - System.IO.Pipes.PipeStream.TransmissionMode
  - System.IO.Pipes.PipeStream.WaitForPipeDrain
  - System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.IO.Pipes.PipeStream.WriteByte(System.Byte)
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: NamedPipeClientStream(String)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String)
  fullName: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Initializes a new instance of the <xref href=&quot;System.IO.Pipes.NamedPipeClientStream&quot;></xref> class with the specified pipe name."
  remarks: "This constructor uses the following default values:      -   A default server name of &quot;.&quot;.      -   A default <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection>.      -   A default <xref:System.IO.Pipes.PipeOptions> value of <xref:System.IO.Pipes.PipeOptions>.      -   A default <xref:System.Security.Principal.TokenImpersonationLevel> value of <xref:System.Security.Principal.TokenImpersonationLevel>.      -   A default <xref:System.IO.HandleInheritability> value of <xref:System.IO.HandleInheritability>."
  syntax:
    content: public NamedPipeClientStream (string pipeName);
    parameters:
    - id: pipeName
      type: System.String
      description: "The name of the pipe."
  overload: System.IO.Pipes.NamedPipeClientStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pipeName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pipeName</code> is a zero-length string."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>pipeName</code> is set to &quot;anonymous&quot;."
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: NamedPipeClientStream(String,String)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String,String)
  fullName: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(String,String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Initializes a new instance of the <xref href=&quot;System.IO.Pipes.NamedPipeClientStream&quot;></xref> class with the specified pipe and server names."
  remarks: "This constructor uses the following default values:      -   A default <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection>.      -   A default <xref:System.IO.Pipes.PipeOptions> value of <xref:System.IO.Pipes.PipeOptions>.      -   A default <xref:System.Security.Principal.TokenImpersonationLevel> value of <xref:System.Security.Principal.TokenImpersonationLevel>.      -   A default <xref:System.IO.HandleInheritability> value of <xref:System.IO.HandleInheritability>."
  syntax:
    content: public NamedPipeClientStream (string serverName, string pipeName);
    parameters:
    - id: serverName
      type: System.String
      description: "The name of the remote computer to connect to, or &quot;.&quot; to specify the local computer."
    - id: pipeName
      type: System.String
      description: "The name of the pipe."
  overload: System.IO.Pipes.NamedPipeClientStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pipeName</code> or <code>serverName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pipeName</code> or <code>serverName</code> is a zero-length string."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>pipeName</code> is set to &quot;anonymous&quot;."
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)
  id: '#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)'
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: NamedPipeClientStream(String,String,PipeDirection)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String,String,PipeDirection)
  fullName: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(String,String,PipeDirection)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Initializes a new instance of the <xref href=&quot;System.IO.Pipes.NamedPipeClientStream&quot;></xref> class with the specified pipe and server names, and the specified pipe direction."
  remarks: "This constructor uses the following default values:      -   A default <xref:System.IO.Pipes.PipeOptions> value of <xref:System.IO.Pipes.PipeOptions>.      -   A default <xref:System.Security.Principal.TokenImpersonationLevel> value of <xref:System.Security.Principal.TokenImpersonationLevel>.      -   A default <xref:System.IO.HandleInheritability> value of <xref:System.IO.HandleInheritability>."
  example:
  - "The following example demonstrates a method to send a string from a parent process to a child process using named pipes. This example creates a <xref:System.IO.Pipes.NamedPipeClientStream> object in a child process, which then connects to a pipe on the local computer. The server example can be seen in the <xref:System.IO.Pipes.NamedPipeServerStream> class. This example is part of a larger example provided for the <xref:System.IO.Pipes.NamedPipeServerStream> and <xref:System.IO.Pipes.NamedPipeClientStream> classes.  \n  \n [!code-vb[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/add/codesnippet/visualbasic/4b637d6e-09dd-4dd0-9a45-_1.vb)]\n [!code-cs[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/add/codesnippet/csharp/4b637d6e-09dd-4dd0-9a45-_1.cs)]"
  syntax:
    content: public NamedPipeClientStream (string serverName, string pipeName, System.IO.Pipes.PipeDirection direction);
    parameters:
    - id: serverName
      type: System.String
      description: "The name of the remote computer to connect to, or &quot;.&quot; to specify the local computer."
    - id: pipeName
      type: System.String
      description: "The name of the pipe."
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "One of the enumeration values that determines the direction of the pipe."
  overload: System.IO.Pipes.NamedPipeClientStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pipeName</code> or <code>serverName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pipeName</code> or <code>serverName</code> is a zero-length string."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>pipeName</code> is set to &quot;anonymous&quot;.       -or-       <code>direction</code> is not a valid <xref href=&quot;System.IO.Pipes.PipeDirection&quot;></xref> value."
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)
  id: '#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)'
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: NamedPipeClientStream(PipeDirection,Boolean,Boolean,SafePipeHandle)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(PipeDirection,Boolean,Boolean,SafePipeHandle)
  fullName: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(PipeDirection,Boolean,Boolean,SafePipeHandle)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Initializes a new instance of the <xref href=&quot;System.IO.Pipes.NamedPipeClientStream&quot;></xref> class for the specified pipe handle with the specified pipe direction."
  syntax:
    content: public NamedPipeClientStream (System.IO.Pipes.PipeDirection direction, bool isAsync, bool isConnected, Microsoft.Win32.SafeHandles.SafePipeHandle safePipeHandle);
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "One of the enumeration values that determines the direction of the pipe."
    - id: isAsync
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to indicate that the handle was opened asynchronously; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: isConnected
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to indicate that the pipe is connected; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: safePipeHandle
      type: Microsoft.Win32.SafeHandles.SafePipeHandle
      description: "A safe handle for the pipe that this <xref href=&quot;System.IO.Pipes.NamedPipeClientStream&quot;></xref> object will encapsulate."
  overload: System.IO.Pipes.NamedPipeClientStream.#ctor*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The stream has been closed."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>safePipeHandle</code> is not a valid handle."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>safePipeHandle</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>direction</code> is not a valid <xref href=&quot;System.IO.Pipes.PipeDirection&quot;></xref> value."
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)
  id: '#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)'
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: NamedPipeClientStream(String,String,PipeDirection,PipeOptions)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String,String,PipeDirection,PipeOptions)
  fullName: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(String,String,PipeDirection,PipeOptions)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Initializes a new instance of the <xref href=&quot;System.IO.Pipes.NamedPipeClientStream&quot;></xref> class with the specified pipe and server names, and the specified pipe direction and pipe options."
  remarks: "This constructor uses the following default values:      -   A default <xref:System.Security.Principal.TokenImpersonationLevel> value of <xref:System.Security.Principal.TokenImpersonationLevel>.      -   A default <xref:System.IO.HandleInheritability> value of <xref:System.IO.HandleInheritability>."
  syntax:
    content: public NamedPipeClientStream (string serverName, string pipeName, System.IO.Pipes.PipeDirection direction, System.IO.Pipes.PipeOptions options);
    parameters:
    - id: serverName
      type: System.String
      description: "The name of the remote computer to connect to, or &quot;.&quot; to specify the local computer."
    - id: pipeName
      type: System.String
      description: "The name of the pipe."
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "One of the enumeration values that determines the direction of the pipe."
    - id: options
      type: System.IO.Pipes.PipeOptions
      description: "One of the enumeration values that determines how to open or create the pipe."
  overload: System.IO.Pipes.NamedPipeClientStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pipeName</code> or <code>serverName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pipeName</code> or <code>serverName</code> is a zero-length string."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>pipeName</code> is set to &quot;anonymous&quot;.       -or-       <code>direction</code> is not a valid <xref href=&quot;System.IO.Pipes.PipeDirection&quot;></xref> value.       -or-       <code>options</code> is not a valid <xref href=&quot;System.IO.Pipes.PipeOptions&quot;></xref> value."
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)
  id: '#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)'
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: NamedPipeClientStream(String,String,PipeDirection,PipeOptions,TokenImpersonationLevel)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String,String,PipeDirection,PipeOptions,TokenImpersonationLevel)
  fullName: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(String,String,PipeDirection,PipeOptions,TokenImpersonationLevel)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Initializes a new instance of the <xref href=&quot;System.IO.Pipes.NamedPipeClientStream&quot;></xref> class with the specified pipe and server names, and the specified pipe direction, pipe options, and security impersonation level."
  remarks: "This constructor uses a default <xref:System.IO.HandleInheritability> value of <xref:System.IO.HandleInheritability>."
  syntax:
    content: public NamedPipeClientStream (string serverName, string pipeName, System.IO.Pipes.PipeDirection direction, System.IO.Pipes.PipeOptions options, System.Security.Principal.TokenImpersonationLevel impersonationLevel);
    parameters:
    - id: serverName
      type: System.String
      description: "The name of the remote computer to connect to, or &quot;.&quot; to specify the local computer."
    - id: pipeName
      type: System.String
      description: "The name of the pipe."
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "One of the enumeration values that determines the direction of the pipe."
    - id: options
      type: System.IO.Pipes.PipeOptions
      description: "One of the enumeration values that determines how to open or create the pipe."
    - id: impersonationLevel
      type: System.Security.Principal.TokenImpersonationLevel
      description: "One of the enumeration values that determines the security impersonation level."
  overload: System.IO.Pipes.NamedPipeClientStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pipeName</code> or <code>serverName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pipeName</code> or <code>serverName</code> is a zero-length string."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>pipeName</code> is set to &quot;anonymous&quot;.       -or-       <code>direction</code> is not a valid <xref href=&quot;System.IO.Pipes.PipeDirection&quot;></xref> value.       -or-       <code>options</code> is not a valid <xref href=&quot;System.IO.Pipes.PipeOptions&quot;></xref> value.       -or-       <code>impersonationLevel</code> is not a valid <xref:System.Security.Principal.TokenImpersonationLevel> value."
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)
  id: '#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)'
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: NamedPipeClientStream(String,String,PipeAccessRights,PipeOptions,TokenImpersonationLevel,HandleInheritability)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String,String,PipeAccessRights,PipeOptions,TokenImpersonationLevel,HandleInheritability)
  fullName: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(String,String,PipeAccessRights,PipeOptions,TokenImpersonationLevel,HandleInheritability)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Initializes a new instance of the <xref href=&quot;System.IO.Pipes.NamedPipeClientStream&quot;></xref> class with the specified pipe and server names, and the specified pipe options, security impersonation level, and inheritability mode."
  remarks: "The pipe direction for this constructor is determined by the `desiredAccessRights` parameter. If the `desiredAccessRights` value is <xref:System.IO.Pipes.PipeAccessRights>, the pipe direction will be <xref:System.IO.Pipes.PipeDirection>. If the value of `desiredAccessRights` is <xref:System.IO.Pipes.PipeAccessRights>, the pipe direction will be <xref:System.IO.Pipes.PipeDirection>. If the value of `desiredAccessRights` includes both <xref:System.IO.Pipes.PipeAccessRights> and <xref:System.IO.Pipes.PipeAccessRights>, the pipe direction will be <xref:System.IO.Pipes.PipeDirection>."
  syntax:
    content: public NamedPipeClientStream (string serverName, string pipeName, System.IO.Pipes.PipeAccessRights desiredAccessRights, System.IO.Pipes.PipeOptions options, System.Security.Principal.TokenImpersonationLevel impersonationLevel, System.IO.HandleInheritability inheritability);
    parameters:
    - id: serverName
      type: System.String
      description: "The name of the remote computer to connect to, or &quot;.&quot; to specify the local computer."
    - id: pipeName
      type: System.String
      description: "The name of the pipe."
    - id: desiredAccessRights
      type: System.IO.Pipes.PipeAccessRights
      description: "One of the enumeration values that specifies the desired access rights of the pipe."
    - id: options
      type: System.IO.Pipes.PipeOptions
      description: "One of the enumeration values that determines how to open or create the pipe."
    - id: impersonationLevel
      type: System.Security.Principal.TokenImpersonationLevel
      description: "One of the enumeration values that determines the security impersonation level."
    - id: inheritability
      type: System.IO.HandleInheritability
      description: "One of the enumeration values that determines whether the underlying handle will be inheritable by child processes."
  overload: System.IO.Pipes.NamedPipeClientStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pipeName</code> or <code>serverName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pipeName</code> or <code>serverName</code> is a zero-length string."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>pipeName</code> is set to &quot;anonymous&quot;.       -or-       <code>options</code> is not a valid <xref href=&quot;System.IO.Pipes.PipeOptions&quot;></xref> value.       -or-       <code>impersonationLevel</code> is not a valid <xref:System.Security.Principal.TokenImpersonationLevel> value.       -or-       <code>inheritability</code> is not a valid <xref:System.IO.HandleInheritability> value."
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)
  id: '#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)'
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: NamedPipeClientStream(String,String,PipeDirection,PipeOptions,TokenImpersonationLevel,HandleInheritability)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String,String,PipeDirection,PipeOptions,TokenImpersonationLevel,HandleInheritability)
  fullName: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(String,String,PipeDirection,PipeOptions,TokenImpersonationLevel,HandleInheritability)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Initializes a new instance of the <xref href=&quot;System.IO.Pipes.NamedPipeClientStream&quot;></xref> class with the specified pipe and server names, and the specified pipe direction, pipe options, security impersonation level, and inheritability mode."
  syntax:
    content: public NamedPipeClientStream (string serverName, string pipeName, System.IO.Pipes.PipeDirection direction, System.IO.Pipes.PipeOptions options, System.Security.Principal.TokenImpersonationLevel impersonationLevel, System.IO.HandleInheritability inheritability);
    parameters:
    - id: serverName
      type: System.String
      description: "The name of the remote computer to connect to, or &quot;.&quot; to specify the local computer."
    - id: pipeName
      type: System.String
      description: "The name of the pipe."
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "One of the enumeration values that determines the direction of the pipe."
    - id: options
      type: System.IO.Pipes.PipeOptions
      description: "One of the enumeration values that determines how to open or create the pipe."
    - id: impersonationLevel
      type: System.Security.Principal.TokenImpersonationLevel
      description: "One of the enumeration values that determines the security impersonation level."
    - id: inheritability
      type: System.IO.HandleInheritability
      description: "One of the enumeration values that determines whether the underlying handle will be inheritable by child processes."
  overload: System.IO.Pipes.NamedPipeClientStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pipeName</code> or <code>serverName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pipeName</code> or <code>serverName</code> is a zero-length string."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>pipeName</code> is set to &quot;anonymous&quot;.       -or-       <code>direction</code> is not a valid <xref href=&quot;System.IO.Pipes.PipeDirection&quot;></xref> value.       -or-       <code>options</code> is not a valid <xref href=&quot;System.IO.Pipes.PipeOptions&quot;></xref> value.       -or-       <code>impersonationLevel</code> is not a valid <xref:System.Security.Principal.TokenImpersonationLevel> value.       -or-       <code>inheritability</code> is not a valid <xref:System.IO.HandleInheritability> value."
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeClientStream.CheckPipePropertyOperations
  id: CheckPipePropertyOperations
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: CheckPipePropertyOperations()
  nameWithType: NamedPipeClientStream.CheckPipePropertyOperations()
  fullName: System.IO.Pipes.NamedPipeClientStream.CheckPipePropertyOperations()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  syntax:
    content: protected override void CheckPipePropertyOperations ();
    parameters: []
  overload: System.IO.Pipes.NamedPipeClientStream.CheckPipePropertyOperations*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeClientStream.Connect
  id: Connect
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: Connect()
  nameWithType: NamedPipeClientStream.Connect()
  fullName: System.IO.Pipes.NamedPipeClientStream.Connect()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Connects to a waiting server with an infinite time-out value."
  remarks: "This method calls the <xref:System.IO.Pipes.NamedPipeClientStream.Connect%28System.Int32%29> method with an infinite time-out value.       This method waits for a pipe instance to become available. <xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A> might return before <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A> is called from the <xref:System.IO.Pipes.NamedPipeServerStream> object, but <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A> will not return until <xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A> has returned.       Any data written to the pipe after a <xref:System.IO.Pipes.NamedPipeClientStream> object has connected, but before the server has called <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>, will be available to the server following the call to <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>."
  example:
  - "The following example demonstrates a method to send a string from a parent process to a child process using named pipes. This example creates a <xref:System.IO.Pipes.NamedPipeClientStream> object in a child process, which then connects to a pipe on the local computer. The server example can be seen in the <xref:System.IO.Pipes.NamedPipeServerStream> class. This example is part of a larger example provided for the <xref:System.IO.Pipes.NamedPipeServerStream> and <xref:System.IO.Pipes.NamedPipeClientStream> classes.  \n  \n [!code-vb[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/add/codesnippet/visualbasic/m-system.io.pipes.namedp_1_1.vb)]\n [!code-cs[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/add/codesnippet/csharp/m-system.io.pipes.namedp_1_1.cs)]"
  syntax:
    content: public void Connect ();
    parameters: []
  overload: System.IO.Pipes.NamedPipeClientStream.Connect*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The client is already connected."
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeClientStream.Connect(System.Int32)
  id: Connect(System.Int32)
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: Connect(Int32)
  nameWithType: NamedPipeClientStream.Connect(Int32)
  fullName: System.IO.Pipes.NamedPipeClientStream.Connect(Int32)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Connects to a waiting server within the specified time-out period."
  remarks: "This method waits for a pipe instance to become available. <xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A> might return before <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A> is called from the <xref:System.IO.Pipes.NamedPipeServerStream>, but <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A> will not return until <xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A> has returned. You set the `timeout` parameter to <xref:System.Threading.Timeout.Infinite> to specify an infinite time-out value.       Any data written to the pipe after a <xref:System.IO.Pipes.NamedPipeClientStream> object has connected, but before the server has called <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>, will be available to the server following the call to <xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>."
  syntax:
    content: public void Connect (int timeout);
    parameters:
    - id: timeout
      type: System.Int32
      description: "The number of milliseconds to wait for the server to respond before the connection times out."
  overload: System.IO.Pipes.NamedPipeClientStream.Connect*
  exceptions:
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "Could not connect to the server within the specified <code>timeout</code> period."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code> is less than 0 and not set to <xref:System.Threading.Timeout.Infinite>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The client is already connected."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The server is connected to another client and the time-out period has expired."
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeClientStream.ConnectAsync
  id: ConnectAsync
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: ConnectAsync()
  nameWithType: NamedPipeClientStream.ConnectAsync()
  fullName: System.IO.Pipes.NamedPipeClientStream.ConnectAsync()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Asynchronously connects to a waiting server with an infinite timeout period."
  syntax:
    content: public System.Threading.Tasks.Task ConnectAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task
      description: "A task that represents the asynchronous connect operation."
  overload: System.IO.Pipes.NamedPipeClientStream.ConnectAsync*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32)
  id: ConnectAsync(System.Int32)
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: ConnectAsync(Int32)
  nameWithType: NamedPipeClientStream.ConnectAsync(Int32)
  fullName: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(Int32)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Asynchronously connects to a waiting server within the specified timeout period."
  syntax:
    content: public System.Threading.Tasks.Task ConnectAsync (int timeout);
    parameters:
    - id: timeout
      type: System.Int32
      description: "The number of milliseconds to wait for the server to respond before the connection times out."
    return:
      type: System.Threading.Tasks.Task
      description: "A task that represents the asynchronous connect operation."
  overload: System.IO.Pipes.NamedPipeClientStream.ConnectAsync*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Threading.CancellationToken)
  id: ConnectAsync(System.Threading.CancellationToken)
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: ConnectAsync(CancellationToken)
  nameWithType: NamedPipeClientStream.ConnectAsync(CancellationToken)
  fullName: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(CancellationToken)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Asynchronously connects to a waiting server and monitors cancellation requests."
  syntax:
    content: public System.Threading.Tasks.Task ConnectAsync (System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "The token to monitor for cancellation requests. The default value is <xref:System.Threading.CancellationToken.None*>."
    return:
      type: System.Threading.Tasks.Task
      description: "A task that represents the asynchronous connect operation."
  overload: System.IO.Pipes.NamedPipeClientStream.ConnectAsync*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32,System.Threading.CancellationToken)
  id: ConnectAsync(System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: ConnectAsync(Int32,CancellationToken)
  nameWithType: NamedPipeClientStream.ConnectAsync(Int32,CancellationToken)
  fullName: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(Int32,CancellationToken)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Asynchronously connects to a waiting server within the specified timeout period and monitors cancellation requests."
  syntax:
    content: public System.Threading.Tasks.Task ConnectAsync (int timeout, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: timeout
      type: System.Int32
      description: "The number of milliseconds to wait for the server to respond before the connection times out."
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: "The token to monitor for cancellation requests. The default value is <xref:System.Threading.CancellationToken.None*>."
    return:
      type: System.Threading.Tasks.Task
      description: "A task that represents the asynchronous connect operation."
  overload: System.IO.Pipes.NamedPipeClientStream.ConnectAsync*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeClientStream.Finalize
  id: Finalize
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: Finalize()
  nameWithType: NamedPipeClientStream.Finalize()
  fullName: System.IO.Pipes.NamedPipeClientStream.Finalize()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Releases unmanaged resources and performs other cleanup operations before the <xref href=&quot;System.IO.Pipes.NamedPipeClientStream&quot;></xref> instance is reclaimed by garbage collection."
  syntax:
    content: ~NamedPipeClientStream ();
    parameters: []
  overload: System.IO.Pipes.NamedPipeClientStream.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances
  id: NumberOfServerInstances
  parent: System.IO.Pipes.NamedPipeClientStream
  langs:
  - csharp
  name: NumberOfServerInstances
  nameWithType: NamedPipeClientStream.NumberOfServerInstances
  fullName: System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Gets the number of server instances that share the same pipe name."
  remarks: "This property returns the number of server instances for the <xref:System.IO.Pipes.NamedPipeServerStream> object that the current <xref:System.IO.Pipes.NamedPipeClientStream> object has a handle to or is connected to. If the current <xref:System.IO.Pipes.NamedPipeClientStream> object has not yet connected to a named pipe server, or if the current pipe handle has not yet been set, this property throws an <xref:System.InvalidOperationException>."
  example:
  - "The following example demonstrates a method to send a string from a parent process to a child process using named pipes. In this example, a <xref:System.IO.Pipes.NamedPipeClientStream> object is created in a child process, which then connects to a pipe on the local computer. The server example can be seen in the <xref:System.IO.Pipes.NamedPipeServerStream> class. This example is part of a larger example provided for the <xref:System.IO.Pipes.NamedPipeServerStream> and <xref:System.IO.Pipes.NamedPipeClientStream> classes.  \n  \n [!code-vb[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/add/codesnippet/visualbasic/p-system.io.pipes.namedp_1.vb)]\n [!code-cs[System.IO.Pipes.NamedPipeClientStream_Sample1#01](~/add/codesnippet/csharp/p-system.io.pipes.namedp_1.cs)]"
  syntax:
    content: public int NumberOfServerInstances { get; }
    return:
      type: System.Int32
      description: "The number of server instances that share the same pipe name."
  overload: System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The pipe handle has not been set.       -or-       The current <xref href=&quot;System.IO.Pipes.NamedPipeClientStream&quot;></xref> object has not yet connected to a <xref href=&quot;System.IO.Pipes.NamedPipeServerStream&quot;></xref> object."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "The pipe is broken or an I/O error occurred."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "The underlying pipe handle is closed."
  platform:
  - net462
references:
- uid: System.IO.Pipes.PipeStream
  isExternal: false
  name: System.IO.Pipes.PipeStream
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.TimeoutException
  isExternal: true
  name: System.TimeoutException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String)
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: NamedPipeClientStream(String)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String)
  fullName: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String)
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: NamedPipeClientStream(String,String)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String,String)
  fullName: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(String,String)
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: NamedPipeClientStream(String,String,PipeDirection)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String,String,PipeDirection)
  fullName: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(String,String,PipeDirection)
- uid: System.IO.Pipes.PipeDirection
  parent: System.IO.Pipes
  isExternal: false
  name: PipeDirection
  nameWithType: PipeDirection
  fullName: System.IO.Pipes.PipeDirection
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: NamedPipeClientStream(PipeDirection,Boolean,Boolean,SafePipeHandle)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(PipeDirection,Boolean,Boolean,SafePipeHandle)
  fullName: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(PipeDirection,Boolean,Boolean,SafePipeHandle)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Win32.SafeHandles.SafePipeHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafePipeHandle
  nameWithType: SafePipeHandle
  fullName: Microsoft.Win32.SafeHandles.SafePipeHandle
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: NamedPipeClientStream(String,String,PipeDirection,PipeOptions)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String,String,PipeDirection,PipeOptions)
  fullName: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(String,String,PipeDirection,PipeOptions)
- uid: System.IO.Pipes.PipeOptions
  parent: System.IO.Pipes
  isExternal: false
  name: PipeOptions
  nameWithType: PipeOptions
  fullName: System.IO.Pipes.PipeOptions
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: NamedPipeClientStream(String,String,PipeDirection,PipeOptions,TokenImpersonationLevel)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String,String,PipeDirection,PipeOptions,TokenImpersonationLevel)
  fullName: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(String,String,PipeDirection,PipeOptions,TokenImpersonationLevel)
- uid: System.Security.Principal.TokenImpersonationLevel
  parent: System.Security.Principal
  isExternal: true
  name: TokenImpersonationLevel
  nameWithType: TokenImpersonationLevel
  fullName: System.Security.Principal.TokenImpersonationLevel
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: NamedPipeClientStream(String,String,PipeAccessRights,PipeOptions,TokenImpersonationLevel,HandleInheritability)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String,String,PipeAccessRights,PipeOptions,TokenImpersonationLevel,HandleInheritability)
  fullName: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(String,String,PipeAccessRights,PipeOptions,TokenImpersonationLevel,HandleInheritability)
- uid: System.IO.Pipes.PipeAccessRights
  parent: System.IO.Pipes
  isExternal: false
  name: PipeAccessRights
  nameWithType: PipeAccessRights
  fullName: System.IO.Pipes.PipeAccessRights
- uid: System.IO.HandleInheritability
  parent: System.IO
  isExternal: true
  name: HandleInheritability
  nameWithType: HandleInheritability
  fullName: System.IO.HandleInheritability
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: NamedPipeClientStream(String,String,PipeDirection,PipeOptions,TokenImpersonationLevel,HandleInheritability)
  nameWithType: NamedPipeClientStream.NamedPipeClientStream(String,String,PipeDirection,PipeOptions,TokenImpersonationLevel,HandleInheritability)
  fullName: System.IO.Pipes.NamedPipeClientStream.NamedPipeClientStream(String,String,PipeDirection,PipeOptions,TokenImpersonationLevel,HandleInheritability)
- uid: System.IO.Pipes.NamedPipeClientStream.CheckPipePropertyOperations
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: CheckPipePropertyOperations()
  nameWithType: NamedPipeClientStream.CheckPipePropertyOperations()
  fullName: System.IO.Pipes.NamedPipeClientStream.CheckPipePropertyOperations()
- uid: System.IO.Pipes.NamedPipeClientStream.Connect
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: Connect()
  nameWithType: NamedPipeClientStream.Connect()
  fullName: System.IO.Pipes.NamedPipeClientStream.Connect()
- uid: System.IO.Pipes.NamedPipeClientStream.Connect(System.Int32)
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: Connect(Int32)
  nameWithType: NamedPipeClientStream.Connect(Int32)
  fullName: System.IO.Pipes.NamedPipeClientStream.Connect(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.Pipes.NamedPipeClientStream.ConnectAsync
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: ConnectAsync()
  nameWithType: NamedPipeClientStream.ConnectAsync()
  fullName: System.IO.Pipes.NamedPipeClientStream.ConnectAsync()
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32)
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: ConnectAsync(Int32)
  nameWithType: NamedPipeClientStream.ConnectAsync(Int32)
  fullName: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(Int32)
- uid: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Threading.CancellationToken)
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: ConnectAsync(CancellationToken)
  nameWithType: NamedPipeClientStream.ConnectAsync(CancellationToken)
  fullName: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(CancellationToken)
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: ConnectAsync(Int32,CancellationToken)
  nameWithType: NamedPipeClientStream.ConnectAsync(Int32,CancellationToken)
  fullName: System.IO.Pipes.NamedPipeClientStream.ConnectAsync(Int32,CancellationToken)
- uid: System.IO.Pipes.NamedPipeClientStream.Finalize
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: Finalize()
  nameWithType: NamedPipeClientStream.Finalize()
  fullName: System.IO.Pipes.NamedPipeClientStream.Finalize()
- uid: System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: NumberOfServerInstances
  nameWithType: NamedPipeClientStream.NumberOfServerInstances
  fullName: System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances
- uid: System.IO.Pipes.NamedPipeClientStream.#ctor*
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: NamedPipeClientStream
  nameWithType: NamedPipeClientStream.NamedPipeClientStream
- uid: System.IO.Pipes.NamedPipeClientStream.CheckPipePropertyOperations*
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: CheckPipePropertyOperations
  nameWithType: NamedPipeClientStream.CheckPipePropertyOperations
- uid: System.IO.Pipes.NamedPipeClientStream.Connect*
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: Connect
  nameWithType: NamedPipeClientStream.Connect
- uid: System.IO.Pipes.NamedPipeClientStream.ConnectAsync*
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: ConnectAsync
  nameWithType: NamedPipeClientStream.ConnectAsync
- uid: System.IO.Pipes.NamedPipeClientStream.Finalize*
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: Finalize
  nameWithType: NamedPipeClientStream.Finalize
- uid: System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances*
  parent: System.IO.Pipes.NamedPipeClientStream
  isExternal: false
  name: NumberOfServerInstances
  nameWithType: NamedPipeClientStream.NumberOfServerInstances
