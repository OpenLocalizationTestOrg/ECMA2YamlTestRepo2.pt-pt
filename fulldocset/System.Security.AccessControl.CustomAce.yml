### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.CustomAce
  id: CustomAce
  children:
  - System.Security.AccessControl.CustomAce.#ctor(System.Security.AccessControl.AceType,System.Security.AccessControl.AceFlags,System.Byte[])
  - System.Security.AccessControl.CustomAce.BinaryLength
  - System.Security.AccessControl.CustomAce.GetBinaryForm(System.Byte[],System.Int32)
  - System.Security.AccessControl.CustomAce.GetOpaque
  - System.Security.AccessControl.CustomAce.MaxOpaqueLength
  - System.Security.AccessControl.CustomAce.OpaqueLength
  - System.Security.AccessControl.CustomAce.SetOpaque(System.Byte[])
  langs:
  - csharp
  name: CustomAce
  nameWithType: CustomAce
  fullName: System.Security.AccessControl.CustomAce
  type: Class
  summary: "Represents an Access Control Entry (ACE) that is not defined by one of the members of the <see cref=&quot;T:System.Security.AccessControl.AceType&quot;></see> enumeration."
  remarks: "A CustomAce object contains an ACE header and an opaque blob of data."
  syntax:
    content: 'public sealed class CustomAce : System.Security.AccessControl.GenericAce'
  inheritance:
  - System.Object
  - System.Security.AccessControl.GenericAce
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.GenericAce.AceFlags
  - System.Security.AccessControl.GenericAce.AceType
  - System.Security.AccessControl.GenericAce.AuditFlags
  - System.Security.AccessControl.GenericAce.Copy
  - System.Security.AccessControl.GenericAce.CreateFromBinaryForm(System.Byte[],System.Int32)
  - System.Security.AccessControl.GenericAce.Equals(System.Object)
  - System.Security.AccessControl.GenericAce.GetHashCode
  - System.Security.AccessControl.GenericAce.InheritanceFlags
  - System.Security.AccessControl.GenericAce.IsInherited
  - System.Security.AccessControl.GenericAce.op_Equality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)
  - System.Security.AccessControl.GenericAce.op_Inequality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)
  - System.Security.AccessControl.GenericAce.PropagationFlags
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.AccessControl.CustomAce.#ctor(System.Security.AccessControl.AceType,System.Security.AccessControl.AceFlags,System.Byte[])
  id: '#ctor(System.Security.AccessControl.AceType,System.Security.AccessControl.AceFlags,System.Byte[])'
  parent: System.Security.AccessControl.CustomAce
  langs:
  - csharp
  name: CustomAce(AceType,AceFlags,Byte[])
  nameWithType: CustomAce.CustomAce(AceType,AceFlags,Byte[])
  fullName: System.Security.AccessControl.CustomAce.CustomAce(AceType,AceFlags,Byte[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Initializes a new instance of the <see cref=&quot;T:System.Security.AccessControl.CustomAce&quot;></see> class."
  remarks: "The `opaque` data is not cloned. The data should be cloned before calling this constructor if the caller does not trust the source of the data to not modify the data."
  syntax:
    content: public CustomAce (System.Security.AccessControl.AceType type, System.Security.AccessControl.AceFlags flags, byte[] opaque);
    parameters:
    - id: type
      type: System.Security.AccessControl.AceType
      description: "Type of the new Access Control Entry (ACE). This value must be greater than ."
    - id: flags
      type: System.Security.AccessControl.AceFlags
      description: "Flags that specify information about the inheritance, inheritance propagation, and auditing conditions for the new ACE."
    - id: opaque
      type: System.Byte[]
      description: "An array of byte values that contains the data for the new ACE. This value can be . The length of this array must not be greater than the value of the  field, and must be a multiple of four."
  overload: System.Security.AccessControl.CustomAce.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value of the type parameter is not greater than  or the length of the opaque array is either greater than the value of the  field or not a multiple of four."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.AccessControl.CustomAce.BinaryLength
  id: BinaryLength
  parent: System.Security.AccessControl.CustomAce
  langs:
  - csharp
  name: BinaryLength
  nameWithType: CustomAce.BinaryLength
  fullName: System.Security.AccessControl.CustomAce.BinaryLength
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Gets the length, in bytes, of the binary representation of the current <see cref=&quot;T:System.Security.AccessControl.CustomAce&quot;></see> object. This length should be used before marshaling the ACL into a binary array with the &lt;xref:System.Security.AccessControl.CustomAce.GetBinaryForm%2A&gt; method."
  syntax:
    content: public override int BinaryLength { get; }
    return:
      type: System.Int32
      description: "The length, in bytes, of the binary representation of the current <see cref=&quot;T:System.Security.AccessControl.CustomAce&quot;></see> object."
  overload: System.Security.AccessControl.CustomAce.BinaryLength*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.AccessControl.CustomAce.GetBinaryForm(System.Byte[],System.Int32)
  id: GetBinaryForm(System.Byte[],System.Int32)
  parent: System.Security.AccessControl.CustomAce
  langs:
  - csharp
  name: GetBinaryForm(Byte[],Int32)
  nameWithType: CustomAce.GetBinaryForm(Byte[],Int32)
  fullName: System.Security.AccessControl.CustomAce.GetBinaryForm(Byte[],Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Marshals the contents of the <see cref=&quot;T:System.Security.AccessControl.CustomAce&quot;></see> object into the specified byte array beginning at the specified offset."
  syntax:
    content: public override void GetBinaryForm (byte[] binaryForm, int offset);
    parameters:
    - id: binaryForm
      type: System.Byte[]
      description: "The byte array into which the contents of the  is marshaled."
    - id: offset
      type: System.Int32
      description: "The offset at which to start marshaling."
  overload: System.Security.AccessControl.CustomAce.GetBinaryForm*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "\n    offset is negative or too high to allow the entire  to be copied into array."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.AccessControl.CustomAce.GetOpaque
  id: GetOpaque
  parent: System.Security.AccessControl.CustomAce
  langs:
  - csharp
  name: GetOpaque()
  nameWithType: CustomAce.GetOpaque()
  fullName: System.Security.AccessControl.CustomAce.GetOpaque()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Returns the opaque data associated with this <see cref=&quot;T:System.Security.AccessControl.CustomAce&quot;></see> object."
  syntax:
    content: public byte[] GetOpaque ();
    parameters: []
    return:
      type: System.Byte[]
      description: "To be added."
  overload: System.Security.AccessControl.CustomAce.GetOpaque*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.AccessControl.CustomAce.MaxOpaqueLength
  id: MaxOpaqueLength
  parent: System.Security.AccessControl.CustomAce
  langs:
  - csharp
  name: MaxOpaqueLength
  nameWithType: CustomAce.MaxOpaqueLength
  fullName: System.Security.AccessControl.CustomAce.MaxOpaqueLength
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Returns the maximum allowed length of an opaque data blob for this <see cref=&quot;T:System.Security.AccessControl.CustomAce&quot;></see> object."
  syntax:
    content: public static readonly int MaxOpaqueLength;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.AccessControl.CustomAce.OpaqueLength
  id: OpaqueLength
  parent: System.Security.AccessControl.CustomAce
  langs:
  - csharp
  name: OpaqueLength
  nameWithType: CustomAce.OpaqueLength
  fullName: System.Security.AccessControl.CustomAce.OpaqueLength
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Gets the length of the opaque data associated with this <see cref=&quot;T:System.Security.AccessControl.CustomAce&quot;></see> object."
  syntax:
    content: public int OpaqueLength { get; }
    return:
      type: System.Int32
      description: "The length of the opaque callback data."
  overload: System.Security.AccessControl.CustomAce.OpaqueLength*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Security.AccessControl.CustomAce.SetOpaque(System.Byte[])
  id: SetOpaque(System.Byte[])
  parent: System.Security.AccessControl.CustomAce
  langs:
  - csharp
  name: SetOpaque(Byte[])
  nameWithType: CustomAce.SetOpaque(Byte[])
  fullName: System.Security.AccessControl.CustomAce.SetOpaque(Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Sets the opaque callback data associated with this <see cref=&quot;T:System.Security.AccessControl.CustomAce&quot;></see> object."
  syntax:
    content: public void SetOpaque (byte[] opaque);
    parameters:
    - id: opaque
      type: System.Byte[]
      description: "An array of byte values that represents the opaque callback data for this  object."
  overload: System.Security.AccessControl.CustomAce.SetOpaque*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Security.AccessControl.GenericAce
  isExternal: false
  name: System.Security.AccessControl.GenericAce
- uid: System.Security.AccessControl.CustomAce.#ctor(System.Security.AccessControl.AceType,System.Security.AccessControl.AceFlags,System.Byte[])
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: CustomAce(AceType,AceFlags,Byte[])
  nameWithType: CustomAce.CustomAce(AceType,AceFlags,Byte[])
  fullName: System.Security.AccessControl.CustomAce.CustomAce(AceType,AceFlags,Byte[])
- uid: System.Security.AccessControl.AceType
  parent: System.Security.AccessControl
  isExternal: false
  name: AceType
  nameWithType: AceType
  fullName: System.Security.AccessControl.AceType
- uid: System.Security.AccessControl.AceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AceFlags
  nameWithType: AceFlags
  fullName: System.Security.AccessControl.AceFlags
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.AccessControl.CustomAce.BinaryLength
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: BinaryLength
  nameWithType: CustomAce.BinaryLength
  fullName: System.Security.AccessControl.CustomAce.BinaryLength
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.AccessControl.CustomAce.GetBinaryForm(System.Byte[],System.Int32)
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: GetBinaryForm(Byte[],Int32)
  nameWithType: CustomAce.GetBinaryForm(Byte[],Int32)
  fullName: System.Security.AccessControl.CustomAce.GetBinaryForm(Byte[],Int32)
- uid: System.Security.AccessControl.CustomAce.GetOpaque
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: GetOpaque()
  nameWithType: CustomAce.GetOpaque()
  fullName: System.Security.AccessControl.CustomAce.GetOpaque()
- uid: System.Security.AccessControl.CustomAce.MaxOpaqueLength
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: MaxOpaqueLength
  nameWithType: CustomAce.MaxOpaqueLength
  fullName: System.Security.AccessControl.CustomAce.MaxOpaqueLength
- uid: System.Security.AccessControl.CustomAce.OpaqueLength
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: OpaqueLength
  nameWithType: CustomAce.OpaqueLength
  fullName: System.Security.AccessControl.CustomAce.OpaqueLength
- uid: System.Security.AccessControl.CustomAce.SetOpaque(System.Byte[])
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: SetOpaque(Byte[])
  nameWithType: CustomAce.SetOpaque(Byte[])
  fullName: System.Security.AccessControl.CustomAce.SetOpaque(Byte[])
- uid: System.Security.AccessControl.CustomAce.#ctor*
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: CustomAce
  nameWithType: CustomAce.CustomAce
- uid: System.Security.AccessControl.CustomAce.BinaryLength*
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: BinaryLength
  nameWithType: CustomAce.BinaryLength
- uid: System.Security.AccessControl.CustomAce.GetBinaryForm*
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: GetBinaryForm
  nameWithType: CustomAce.GetBinaryForm
- uid: System.Security.AccessControl.CustomAce.GetOpaque*
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: GetOpaque
  nameWithType: CustomAce.GetOpaque
- uid: System.Security.AccessControl.CustomAce.OpaqueLength*
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: OpaqueLength
  nameWithType: CustomAce.OpaqueLength
- uid: System.Security.AccessControl.CustomAce.SetOpaque*
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: SetOpaque
  nameWithType: CustomAce.SetOpaque
