### YamlMime:ManagedReference
items:
- uid: System.Reflection.Emit.MethodRental
  id: MethodRental
  children:
  - System.Reflection.Emit.MethodRental.JitImmediate
  - System.Reflection.Emit.MethodRental.JitOnDemand
  - System.Reflection.Emit.MethodRental.SwapMethodBody(System.Type,System.Int32,System.IntPtr,System.Int32,System.Int32)
  - System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetTypeInfoCount(System.UInt32@)
  - System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  langs:
  - csharp
  name: MethodRental
  nameWithType: MethodRental
  fullName: System.Reflection.Emit.MethodRental
  type: Class
  summary: "Provides a fast way to swap method body implementation given a method of a class."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]

      [System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._MethodRental))]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class MethodRental : System.Runtime.InteropServices._MethodRental
  inheritance:
  - System.Object
  implements:
  - System.Runtime.InteropServices._MethodRental
  inheritedMembers: []
  platform:
  - net462
- uid: System.Reflection.Emit.MethodRental.JitImmediate
  id: JitImmediate
  parent: System.Reflection.Emit.MethodRental
  langs:
  - csharp
  name: JitImmediate
  nameWithType: MethodRental.JitImmediate
  fullName: System.Reflection.Emit.MethodRental.JitImmediate
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "Specifies that the method should be just-in-time (JIT) compiled immediately."
  syntax:
    content: public const int JitImmediate = 1;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Emit.MethodRental.JitOnDemand
  id: JitOnDemand
  parent: System.Reflection.Emit.MethodRental
  langs:
  - csharp
  name: JitOnDemand
  nameWithType: MethodRental.JitOnDemand
  fullName: System.Reflection.Emit.MethodRental.JitOnDemand
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "Specifies that the method should be just-in-time (JIT) compiled when needed."
  syntax:
    content: public const int JitOnDemand = 0;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.Emit.MethodRental.SwapMethodBody(System.Type,System.Int32,System.IntPtr,System.Int32,System.Int32)
  id: SwapMethodBody(System.Type,System.Int32,System.IntPtr,System.Int32,System.Int32)
  parent: System.Reflection.Emit.MethodRental
  langs:
  - csharp
  name: SwapMethodBody(Type,Int32,IntPtr,Int32,Int32)
  nameWithType: MethodRental.SwapMethodBody(Type,Int32,IntPtr,Int32,Int32)
  fullName: System.Reflection.Emit.MethodRental.SwapMethodBody(Type,Int32,IntPtr,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "Swaps the body of a method."
  remarks: "You cannot use this method to swap the body of a global method.       The method can only be called by the client that created the dynamic module that contains the type whose method&quot;s body is being swapped."
  example:
  - "The following example illustrates how to swap a method body for a new body. It also illustrates how to obtain a method token for an existing method and how to construct a blob of bytes representing the Microsoft Intermediate Language (MSIL) code to be passed to `SwapMethodBody`.  \n  \n [!code-cpp[Classic MethodRental.SwapMethodBody Example#1](~/add/codesnippet/cpp/cc436dde-ab12-4c7e-9169-_1.cpp)]\n [!code-cs[Classic MethodRental.SwapMethodBody Example#1](~/add/codesnippet/csharp/cc436dde-ab12-4c7e-9169-_1.cs)]\n [!code-vb[Classic MethodRental.SwapMethodBody Example#1](~/add/codesnippet/visualbasic/cc436dde-ab12-4c7e-9169-_1.vb)]"
  syntax:
    content: public static void SwapMethodBody (Type cls, int methodtoken, IntPtr rgIL, int methodSize, int flags);
    parameters:
    - id: cls
      type: System.Type
      description: "The class containing the method."
    - id: methodtoken
      type: System.Int32
      description: "The token for the method."
    - id: rgIL
      type: System.IntPtr
      description: "A pointer to the method. This should include the method header."
    - id: methodSize
      type: System.Int32
      description: "The size of the new method body in bytes."
    - id: flags
      type: System.Int32
      description: "Flags that control the swapping. See the definitions of the constants."
  overload: System.Reflection.Emit.MethodRental.SwapMethodBody*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>cls</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The type <code>cls</code> is not complete."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>methodSize</code> is less than one or greater than 4128767 (3effff hex)."
  platform:
  - net462
- uid: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  id: System#Runtime#InteropServices#_MethodRental#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  isEii: true
  parent: System.Reflection.Emit.MethodRental
  langs:
  - csharp
  name: System.Runtime.InteropServices._MethodRental.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: MethodRental.System.Runtime.InteropServices._MethodRental.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Reflection.Emit.MethodRental.System.Runtime.InteropServices._MethodRental.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "Maps a set of names to a corresponding set of dispatch identifiers."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library."
  syntax:
    content: void _MethodRental.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);
    parameters:
    - id: riid
      type: System.Guid
      description: "Reserved for future use. Must be IID_NULL."
    - id: rgszNames
      type: System.IntPtr
      description: "Passed-in array of names to be mapped."
    - id: cNames
      type: System.UInt32
      description: "Count of the names to be mapped."
    - id: lcid
      type: System.UInt32
      description: "The locale context in which to interpret the names."
    - id: rgDispId
      type: System.IntPtr
      description: "Caller-allocated array which receives the IDs corresponding to the names."
  overload: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetIDsOfNames*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "The method is called late-bound using the COM `IDispatch` interface."
  platform:
  - net462
- uid: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  id: System#Runtime#InteropServices#_MethodRental#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  isEii: true
  parent: System.Reflection.Emit.MethodRental
  langs:
  - csharp
  name: System.Runtime.InteropServices._MethodRental.GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: MethodRental.System.Runtime.InteropServices._MethodRental.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Reflection.Emit.MethodRental.System.Runtime.InteropServices._MethodRental.GetTypeInfo(UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "Retrieves the type information for an object, which can then be used to get the type information for an interface."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfo`, see the MSDN Library."
  syntax:
    content: void _MethodRental.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);
    parameters:
    - id: iTInfo
      type: System.UInt32
      description: "The type information to return."
    - id: lcid
      type: System.UInt32
      description: "The locale identifier for the type information."
    - id: ppTInfo
      type: System.IntPtr
      description: "Receives a pointer to the requested type information object."
  overload: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetTypeInfo*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "The method is called late-bound using the COM `IDispatch` interface."
  platform:
  - net462
- uid: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetTypeInfoCount(System.UInt32@)
  id: System#Runtime#InteropServices#_MethodRental#GetTypeInfoCount(System.UInt32@)
  isEii: true
  parent: System.Reflection.Emit.MethodRental
  langs:
  - csharp
  name: System.Runtime.InteropServices._MethodRental.GetTypeInfoCount(UInt32)
  nameWithType: MethodRental.System.Runtime.InteropServices._MethodRental.GetTypeInfoCount(UInt32)
  fullName: System.Reflection.Emit.MethodRental.System.Runtime.InteropServices._MethodRental.GetTypeInfoCount(UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "Retrieves the number of type information interfaces that an object provides (either 0 or 1)."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library."
  syntax:
    content: void _MethodRental.GetTypeInfoCount (out uint pcTInfo);
    parameters:
    - id: pcTInfo
      type: System.UInt32
      description: "Points to a location that receives the number of type information interfaces provided by the object."
  overload: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetTypeInfoCount*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "The method is called late-bound using the COM `IDispatch` interface."
  platform:
  - net462
- uid: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  id: System#Runtime#InteropServices#_MethodRental#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  isEii: true
  parent: System.Reflection.Emit.MethodRental
  langs:
  - csharp
  name: System.Runtime.InteropServices._MethodRental.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: MethodRental.System.Runtime.InteropServices._MethodRental.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Reflection.Emit.MethodRental.System.Runtime.InteropServices._MethodRental.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Reflection.Emit
  summary: "Provides access to properties and methods exposed by an object."
  remarks: "This method is for access to managed classes from unmanaged code, and should not be called from managed code. For more information about `IDispatch::Invoke`, see the MSDN Library."
  syntax:
    content: void _MethodRental.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);
    parameters:
    - id: dispIdMember
      type: System.UInt32
      description: "Identifies the member."
    - id: riid
      type: System.Guid
      description: "Reserved for future use. Must be IID_NULL."
    - id: lcid
      type: System.UInt32
      description: "The locale context in which to interpret arguments."
    - id: wFlags
      type: System.Int16
      description: "Flags describing the context of the call."
    - id: pDispParams
      type: System.IntPtr
      description: "Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays."
    - id: pVarResult
      type: System.IntPtr
      description: "Pointer to the location where the result is to be stored."
    - id: pExcepInfo
      type: System.IntPtr
      description: "Pointer to a structure that contains exception information."
    - id: puArgErr
      type: System.IntPtr
      description: "The index of the first argument that has an error."
  overload: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#Invoke*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: "The method is called late-bound using the COM `IDispatch` interface."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.NotImplementedException
  isExternal: true
  name: System.NotImplementedException
- uid: System.Reflection.Emit.MethodRental.JitImmediate
  parent: System.Reflection.Emit.MethodRental
  isExternal: false
  name: JitImmediate
  nameWithType: MethodRental.JitImmediate
  fullName: System.Reflection.Emit.MethodRental.JitImmediate
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Reflection.Emit.MethodRental.JitOnDemand
  parent: System.Reflection.Emit.MethodRental
  isExternal: false
  name: JitOnDemand
  nameWithType: MethodRental.JitOnDemand
  fullName: System.Reflection.Emit.MethodRental.JitOnDemand
- uid: System.Reflection.Emit.MethodRental.SwapMethodBody(System.Type,System.Int32,System.IntPtr,System.Int32,System.Int32)
  parent: System.Reflection.Emit.MethodRental
  isExternal: false
  name: SwapMethodBody(Type,Int32,IntPtr,Int32,Int32)
  nameWithType: MethodRental.SwapMethodBody(Type,Int32,IntPtr,Int32,Int32)
  fullName: System.Reflection.Emit.MethodRental.SwapMethodBody(Type,Int32,IntPtr,Int32,Int32)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.Emit.MethodRental
  isExternal: false
  name: System.Runtime.InteropServices._MethodRental.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: MethodRental.System.Runtime.InteropServices._MethodRental.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Reflection.Emit.MethodRental.System.Runtime.InteropServices._MethodRental.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Reflection.Emit.MethodRental
  isExternal: false
  name: System.Runtime.InteropServices._MethodRental.GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: MethodRental.System.Runtime.InteropServices._MethodRental.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Reflection.Emit.MethodRental.System.Runtime.InteropServices._MethodRental.GetTypeInfo(UInt32,UInt32,IntPtr)
- uid: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetTypeInfoCount(System.UInt32@)
  parent: System.Reflection.Emit.MethodRental
  isExternal: false
  name: System.Runtime.InteropServices._MethodRental.GetTypeInfoCount(UInt32)
  nameWithType: MethodRental.System.Runtime.InteropServices._MethodRental.GetTypeInfoCount(UInt32)
  fullName: System.Reflection.Emit.MethodRental.System.Runtime.InteropServices._MethodRental.GetTypeInfoCount(UInt32)
- uid: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Reflection.Emit.MethodRental
  isExternal: false
  name: System.Runtime.InteropServices._MethodRental.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: MethodRental.System.Runtime.InteropServices._MethodRental.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Reflection.Emit.MethodRental.System.Runtime.InteropServices._MethodRental.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Reflection.Emit.MethodRental.SwapMethodBody*
  parent: System.Reflection.Emit.MethodRental
  isExternal: false
  name: SwapMethodBody
  nameWithType: MethodRental.SwapMethodBody
- uid: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetIDsOfNames*
  parent: System.Reflection.Emit.MethodRental
  isExternal: false
  name: System.Runtime.InteropServices._MethodRental.GetIDsOfNames
  nameWithType: MethodRental.System.Runtime.InteropServices._MethodRental.GetIDsOfNames
- uid: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetTypeInfo*
  parent: System.Reflection.Emit.MethodRental
  isExternal: false
  name: System.Runtime.InteropServices._MethodRental.GetTypeInfo
  nameWithType: MethodRental.System.Runtime.InteropServices._MethodRental.GetTypeInfo
- uid: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#GetTypeInfoCount*
  parent: System.Reflection.Emit.MethodRental
  isExternal: false
  name: System.Runtime.InteropServices._MethodRental.GetTypeInfoCount
  nameWithType: MethodRental.System.Runtime.InteropServices._MethodRental.GetTypeInfoCount
- uid: System.Reflection.Emit.MethodRental.System#Runtime#InteropServices#_MethodRental#Invoke*
  parent: System.Reflection.Emit.MethodRental
  isExternal: false
  name: System.Runtime.InteropServices._MethodRental.Invoke
  nameWithType: MethodRental.System.Runtime.InteropServices._MethodRental.Invoke
