### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.UserNameSecurityToken
  id: UserNameSecurityToken
  children:
  - System.IdentityModel.Tokens.UserNameSecurityToken.#ctor(System.String,System.String)
  - System.IdentityModel.Tokens.UserNameSecurityToken.#ctor(System.String,System.String,System.String)
  - System.IdentityModel.Tokens.UserNameSecurityToken.Id
  - System.IdentityModel.Tokens.UserNameSecurityToken.Password
  - System.IdentityModel.Tokens.UserNameSecurityToken.SecurityKeys
  - System.IdentityModel.Tokens.UserNameSecurityToken.UserName
  - System.IdentityModel.Tokens.UserNameSecurityToken.ValidFrom
  - System.IdentityModel.Tokens.UserNameSecurityToken.ValidTo
  langs:
  - csharp
  name: UserNameSecurityToken
  nameWithType: UserNameSecurityToken
  fullName: System.IdentityModel.Tokens.UserNameSecurityToken
  type: Class
  summary: "Represents a security token that is based upon a user name and password."
  remarks: "Use UserNameSecurityToken class to provide authentication credentials in the form of a user name and password."
  syntax:
    content: 'public class UserNameSecurityToken : System.IdentityModel.Tokens.SecurityToken'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityToken
  implements: []
  inheritedMembers:
  - System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1
  - System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1
  - System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  platform:
  - net462
- uid: System.IdentityModel.Tokens.UserNameSecurityToken.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.IdentityModel.Tokens.UserNameSecurityToken
  langs:
  - csharp
  name: UserNameSecurityToken(String,String)
  nameWithType: UserNameSecurityToken.UserNameSecurityToken(String,String)
  fullName: System.IdentityModel.Tokens.UserNameSecurityToken.UserNameSecurityToken(String,String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Initializes a new instance of the <xref href=&quot;System.IdentityModel.Tokens.UserNameSecurityToken&quot;></xref> class using the specified user name and password."
  syntax:
    content: public UserNameSecurityToken (string userName, string password);
    parameters:
    - id: userName
      type: System.String
      description: "A user name. Sets the <xref:System.IdentityModel.Tokens.UserNameSecurityToken.UserName*> property."
    - id: password
      type: System.String
      description: "A password for the user name. Sets the <xref:System.IdentityModel.Tokens.UserNameSecurityToken.Password*> property."
  overload: System.IdentityModel.Tokens.UserNameSecurityToken.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>userName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>password</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.UserNameSecurityToken.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.IdentityModel.Tokens.UserNameSecurityToken
  langs:
  - csharp
  name: UserNameSecurityToken(String,String,String)
  nameWithType: UserNameSecurityToken.UserNameSecurityToken(String,String,String)
  fullName: System.IdentityModel.Tokens.UserNameSecurityToken.UserNameSecurityToken(String,String,String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Initializes a new instance of the <xref href=&quot;System.IdentityModel.Tokens.UserNameSecurityToken&quot;></xref> class using the specified user name, password, and unique identifier."
  syntax:
    content: public UserNameSecurityToken (string userName, string password, string id);
    parameters:
    - id: userName
      type: System.String
      description: "A user name. Sets the <xref:System.IdentityModel.Tokens.UserNameSecurityToken.UserName*> property."
    - id: password
      type: System.String
      description: "A password for the user name. Sets the <xref:System.IdentityModel.Tokens.UserNameSecurityToken.Password*> property."
    - id: id
      type: System.String
      description: "A unique identifier of the security token. Sets the <xref:System.IdentityModel.Tokens.UserNameSecurityToken.Id*> property."
  overload: System.IdentityModel.Tokens.UserNameSecurityToken.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>userName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>password</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>id</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.UserNameSecurityToken.Id
  id: Id
  parent: System.IdentityModel.Tokens.UserNameSecurityToken
  langs:
  - csharp
  name: Id
  nameWithType: UserNameSecurityToken.Id
  fullName: System.IdentityModel.Tokens.UserNameSecurityToken.Id
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets a unique identifier of the security token."
  remarks: "The Id property is usually in the format of a URI with a GUID."
  syntax:
    content: public override string Id { get; }
    return:
      type: System.String
      description: "A unique identifier of the security token."
  overload: System.IdentityModel.Tokens.UserNameSecurityToken.Id*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.UserNameSecurityToken.Password
  id: Password
  parent: System.IdentityModel.Tokens.UserNameSecurityToken
  langs:
  - csharp
  name: Password
  nameWithType: UserNameSecurityToken.Password
  fullName: System.IdentityModel.Tokens.UserNameSecurityToken.Password
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets the password for the user name associated with the security token."
  syntax:
    content: public string Password { get; }
    return:
      type: System.String
      description: "The password for the user name associated with the security token."
  overload: System.IdentityModel.Tokens.UserNameSecurityToken.Password*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.UserNameSecurityToken.SecurityKeys
  id: SecurityKeys
  parent: System.IdentityModel.Tokens.UserNameSecurityToken
  langs:
  - csharp
  name: SecurityKeys
  nameWithType: UserNameSecurityToken.SecurityKeys
  fullName: System.IdentityModel.Tokens.UserNameSecurityToken.SecurityKeys
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets the cryptographic keys associated with the security token."
  remarks: "<xref:System.IdentityModel.Tokens.UserNameSecurityToken> security tokens cannot be used for cryptographic operations, by default, so the SecurityKeys property returns an empty collection."
  syntax:
    content: public override System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey> SecurityKeys { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; of type <xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;></xref> that contains the set of keys associated with the security token."
  overload: System.IdentityModel.Tokens.UserNameSecurityToken.SecurityKeys*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.UserNameSecurityToken.UserName
  id: UserName
  parent: System.IdentityModel.Tokens.UserNameSecurityToken
  langs:
  - csharp
  name: UserName
  nameWithType: UserNameSecurityToken.UserName
  fullName: System.IdentityModel.Tokens.UserNameSecurityToken.UserName
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets the user name that is associated with the security token."
  syntax:
    content: public string UserName { get; }
    return:
      type: System.String
      description: "The user name that is associated with the security token."
  overload: System.IdentityModel.Tokens.UserNameSecurityToken.UserName*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.UserNameSecurityToken.ValidFrom
  id: ValidFrom
  parent: System.IdentityModel.Tokens.UserNameSecurityToken
  langs:
  - csharp
  name: ValidFrom
  nameWithType: UserNameSecurityToken.ValidFrom
  fullName: System.IdentityModel.Tokens.UserNameSecurityToken.ValidFrom
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets the first instant in time at which this security token is valid."
  remarks: "Use the ValidFrom and <xref:System.IdentityModel.Tokens.UserNameSecurityToken.ValidTo%2A> properties to determine the time period in which a <xref:System.IdentityModel.Tokens.UserNameSecurityToken> token is valid. The ValidFrom and <xref:System.IdentityModel.Tokens.UserNameSecurityToken.ValidTo%2A> properties represent the first and last instants in time in which the security token is valid, respectively."
  syntax:
    content: public override DateTime ValidFrom { get; }
    return:
      type: System.DateTime
      description: "A <xref:System.DateTime> that represents the instant in time at which this security token is first valid."
  overload: System.IdentityModel.Tokens.UserNameSecurityToken.ValidFrom*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.UserNameSecurityToken.ValidTo
  id: ValidTo
  parent: System.IdentityModel.Tokens.UserNameSecurityToken
  langs:
  - csharp
  name: ValidTo
  nameWithType: UserNameSecurityToken.ValidTo
  fullName: System.IdentityModel.Tokens.UserNameSecurityToken.ValidTo
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Gets the last instant in time at which this security token is valid."
  remarks: "Use the <xref:System.IdentityModel.Tokens.UserNameSecurityToken.ValidFrom%2A> and ValidTo properties to determine the time period in which a <xref:System.IdentityModel.Tokens.UserNameSecurityToken> token is valid. The <xref:System.IdentityModel.Tokens.UserNameSecurityToken.ValidFrom%2A> and ValidTo properties represent the first and last instants in time in which the security token is valid, respectively."
  syntax:
    content: public override DateTime ValidTo { get; }
    return:
      type: System.DateTime
      description: "A <xref:System.DateTime> that represents the last instant in time at which this security token is valid."
  overload: System.IdentityModel.Tokens.UserNameSecurityToken.ValidTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: System.IdentityModel.Tokens.SecurityToken
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IdentityModel.Tokens.UserNameSecurityToken.#ctor(System.String,System.String)
  parent: System.IdentityModel.Tokens.UserNameSecurityToken
  isExternal: false
  name: UserNameSecurityToken(String,String)
  nameWithType: UserNameSecurityToken.UserNameSecurityToken(String,String)
  fullName: System.IdentityModel.Tokens.UserNameSecurityToken.UserNameSecurityToken(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.UserNameSecurityToken.#ctor(System.String,System.String,System.String)
  parent: System.IdentityModel.Tokens.UserNameSecurityToken
  isExternal: false
  name: UserNameSecurityToken(String,String,String)
  nameWithType: UserNameSecurityToken.UserNameSecurityToken(String,String,String)
  fullName: System.IdentityModel.Tokens.UserNameSecurityToken.UserNameSecurityToken(String,String,String)
- uid: System.IdentityModel.Tokens.UserNameSecurityToken.Id
  parent: System.IdentityModel.Tokens.UserNameSecurityToken
  isExternal: false
  name: Id
  nameWithType: UserNameSecurityToken.Id
  fullName: System.IdentityModel.Tokens.UserNameSecurityToken.Id
- uid: System.IdentityModel.Tokens.UserNameSecurityToken.Password
  parent: System.IdentityModel.Tokens.UserNameSecurityToken
  isExternal: false
  name: Password
  nameWithType: UserNameSecurityToken.Password
  fullName: System.IdentityModel.Tokens.UserNameSecurityToken.Password
- uid: System.IdentityModel.Tokens.UserNameSecurityToken.SecurityKeys
  parent: System.IdentityModel.Tokens.UserNameSecurityToken
  isExternal: false
  name: SecurityKeys
  nameWithType: UserNameSecurityToken.SecurityKeys
  fullName: System.IdentityModel.Tokens.UserNameSecurityToken.SecurityKeys
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<SecurityKey>
  nameWithType: ReadOnlyCollection<SecurityKey>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SecurityKey
    name: SecurityKey
    nameWithType: SecurityKey
    fullName: SecurityKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.UserNameSecurityToken.UserName
  parent: System.IdentityModel.Tokens.UserNameSecurityToken
  isExternal: false
  name: UserName
  nameWithType: UserNameSecurityToken.UserName
  fullName: System.IdentityModel.Tokens.UserNameSecurityToken.UserName
- uid: System.IdentityModel.Tokens.UserNameSecurityToken.ValidFrom
  parent: System.IdentityModel.Tokens.UserNameSecurityToken
  isExternal: false
  name: ValidFrom
  nameWithType: UserNameSecurityToken.ValidFrom
  fullName: System.IdentityModel.Tokens.UserNameSecurityToken.ValidFrom
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.IdentityModel.Tokens.UserNameSecurityToken.ValidTo
  parent: System.IdentityModel.Tokens.UserNameSecurityToken
  isExternal: false
  name: ValidTo
  nameWithType: UserNameSecurityToken.ValidTo
  fullName: System.IdentityModel.Tokens.UserNameSecurityToken.ValidTo
- uid: System.IdentityModel.Tokens.UserNameSecurityToken.#ctor*
  parent: System.IdentityModel.Tokens.UserNameSecurityToken
  isExternal: false
  name: UserNameSecurityToken
  nameWithType: UserNameSecurityToken.UserNameSecurityToken
- uid: System.IdentityModel.Tokens.UserNameSecurityToken.Id*
  parent: System.IdentityModel.Tokens.UserNameSecurityToken
  isExternal: false
  name: Id
  nameWithType: UserNameSecurityToken.Id
- uid: System.IdentityModel.Tokens.UserNameSecurityToken.Password*
  parent: System.IdentityModel.Tokens.UserNameSecurityToken
  isExternal: false
  name: Password
  nameWithType: UserNameSecurityToken.Password
- uid: System.IdentityModel.Tokens.UserNameSecurityToken.SecurityKeys*
  parent: System.IdentityModel.Tokens.UserNameSecurityToken
  isExternal: false
  name: SecurityKeys
  nameWithType: UserNameSecurityToken.SecurityKeys
- uid: System.IdentityModel.Tokens.UserNameSecurityToken.UserName*
  parent: System.IdentityModel.Tokens.UserNameSecurityToken
  isExternal: false
  name: UserName
  nameWithType: UserNameSecurityToken.UserName
- uid: System.IdentityModel.Tokens.UserNameSecurityToken.ValidFrom*
  parent: System.IdentityModel.Tokens.UserNameSecurityToken
  isExternal: false
  name: ValidFrom
  nameWithType: UserNameSecurityToken.ValidFrom
- uid: System.IdentityModel.Tokens.UserNameSecurityToken.ValidTo*
  parent: System.IdentityModel.Tokens.UserNameSecurityToken
  isExternal: false
  name: ValidTo
  nameWithType: UserNameSecurityToken.ValidTo
