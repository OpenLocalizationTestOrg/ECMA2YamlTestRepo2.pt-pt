### YamlMime:ManagedReference
items:
- uid: System.Windows.TriggerCollection
  id: TriggerCollection
  children:
  - System.Windows.TriggerCollection.ClearItems
  - System.Windows.TriggerCollection.InsertItem(System.Int32,System.Windows.TriggerBase)
  - System.Windows.TriggerCollection.IsSealed
  - System.Windows.TriggerCollection.RemoveItem(System.Int32)
  - System.Windows.TriggerCollection.SetItem(System.Int32,System.Windows.TriggerBase)
  langs:
  - csharp
  name: TriggerCollection
  nameWithType: TriggerCollection
  fullName: System.Windows.TriggerCollection
  type: Class
  summary: "Represents a collection of <xref href=&quot;System.Windows.TriggerBase&quot;></xref> objects."
  syntax:
    content: >-
      [System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)]

      public sealed class TriggerCollection : System.Collections.ObjectModel.Collection<System.Windows.TriggerBase>
  inheritance:
  - System.Collections.ObjectModel.Collection`1
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.TriggerCollection.ClearItems
  id: ClearItems
  parent: System.Windows.TriggerCollection
  langs:
  - csharp
  name: ClearItems()
  nameWithType: TriggerCollection.ClearItems()
  fullName: System.Windows.TriggerCollection.ClearItems()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  syntax:
    content: protected override void ClearItems ();
    parameters: []
  overload: System.Windows.TriggerCollection.ClearItems*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.TriggerCollection.InsertItem(System.Int32,System.Windows.TriggerBase)
  id: InsertItem(System.Int32,System.Windows.TriggerBase)
  parent: System.Windows.TriggerCollection
  langs:
  - csharp
  name: InsertItem(Int32,TriggerBase)
  nameWithType: TriggerCollection.InsertItem(Int32,TriggerBase)
  fullName: System.Windows.TriggerCollection.InsertItem(Int32,TriggerBase)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  syntax:
    content: protected override void InsertItem (int index, System.Windows.TriggerBase item);
    parameters:
    - id: index
      type: System.Int32
      description: "To be added."
    - id: item
      type: System.Windows.TriggerBase
      description: "To be added."
  overload: System.Windows.TriggerCollection.InsertItem*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.TriggerCollection.IsSealed
  id: IsSealed
  parent: System.Windows.TriggerCollection
  langs:
  - csharp
  name: IsSealed
  nameWithType: TriggerCollection.IsSealed
  fullName: System.Windows.TriggerCollection.IsSealed
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Gets a value that indicates whether this collection is read-only and cannot be changed."
  remarks: "If this property returns `true` and you try to modify the state of this object, an exception is thrown."
  syntax:
    content: public bool IsSealed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if this collection is read-only; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.TriggerCollection.IsSealed*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.TriggerCollection.RemoveItem(System.Int32)
  id: RemoveItem(System.Int32)
  parent: System.Windows.TriggerCollection
  langs:
  - csharp
  name: RemoveItem(Int32)
  nameWithType: TriggerCollection.RemoveItem(Int32)
  fullName: System.Windows.TriggerCollection.RemoveItem(Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  syntax:
    content: protected override void RemoveItem (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "To be added."
  overload: System.Windows.TriggerCollection.RemoveItem*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.TriggerCollection.SetItem(System.Int32,System.Windows.TriggerBase)
  id: SetItem(System.Int32,System.Windows.TriggerBase)
  parent: System.Windows.TriggerCollection
  langs:
  - csharp
  name: SetItem(Int32,TriggerBase)
  nameWithType: TriggerCollection.SetItem(Int32,TriggerBase)
  fullName: System.Windows.TriggerCollection.SetItem(Int32,TriggerBase)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  syntax:
    content: protected override void SetItem (int index, System.Windows.TriggerBase item);
    parameters:
    - id: index
      type: System.Int32
      description: "To be added."
    - id: item
      type: System.Windows.TriggerBase
      description: "To be added."
  overload: System.Windows.TriggerCollection.SetItem*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: System.Collections.ObjectModel.Collection<System.Windows.TriggerBase>
- uid: System.Windows.TriggerCollection.ClearItems
  parent: System.Windows.TriggerCollection
  isExternal: false
  name: ClearItems()
  nameWithType: TriggerCollection.ClearItems()
  fullName: System.Windows.TriggerCollection.ClearItems()
- uid: System.Windows.TriggerCollection.InsertItem(System.Int32,System.Windows.TriggerBase)
  parent: System.Windows.TriggerCollection
  isExternal: false
  name: InsertItem(Int32,TriggerBase)
  nameWithType: TriggerCollection.InsertItem(Int32,TriggerBase)
  fullName: System.Windows.TriggerCollection.InsertItem(Int32,TriggerBase)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.TriggerBase
  parent: System.Windows
  isExternal: false
  name: TriggerBase
  nameWithType: TriggerBase
  fullName: System.Windows.TriggerBase
- uid: System.Windows.TriggerCollection.IsSealed
  parent: System.Windows.TriggerCollection
  isExternal: false
  name: IsSealed
  nameWithType: TriggerCollection.IsSealed
  fullName: System.Windows.TriggerCollection.IsSealed
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.TriggerCollection.RemoveItem(System.Int32)
  parent: System.Windows.TriggerCollection
  isExternal: false
  name: RemoveItem(Int32)
  nameWithType: TriggerCollection.RemoveItem(Int32)
  fullName: System.Windows.TriggerCollection.RemoveItem(Int32)
- uid: System.Windows.TriggerCollection.SetItem(System.Int32,System.Windows.TriggerBase)
  parent: System.Windows.TriggerCollection
  isExternal: false
  name: SetItem(Int32,TriggerBase)
  nameWithType: TriggerCollection.SetItem(Int32,TriggerBase)
  fullName: System.Windows.TriggerCollection.SetItem(Int32,TriggerBase)
- uid: System.Windows.TriggerCollection.ClearItems*
  parent: System.Windows.TriggerCollection
  isExternal: false
  name: ClearItems
  nameWithType: TriggerCollection.ClearItems
- uid: System.Windows.TriggerCollection.InsertItem*
  parent: System.Windows.TriggerCollection
  isExternal: false
  name: InsertItem
  nameWithType: TriggerCollection.InsertItem
- uid: System.Windows.TriggerCollection.IsSealed*
  parent: System.Windows.TriggerCollection
  isExternal: false
  name: IsSealed
  nameWithType: TriggerCollection.IsSealed
- uid: System.Windows.TriggerCollection.RemoveItem*
  parent: System.Windows.TriggerCollection
  isExternal: false
  name: RemoveItem
  nameWithType: TriggerCollection.RemoveItem
- uid: System.Windows.TriggerCollection.SetItem*
  parent: System.Windows.TriggerCollection
  isExternal: false
  name: SetItem
  nameWithType: TriggerCollection.SetItem
