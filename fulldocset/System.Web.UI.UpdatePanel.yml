### YamlMime:ManagedReference
items:
- uid: System.Web.UI.UpdatePanel
  id: UpdatePanel
  children:
  - System.Web.UI.UpdatePanel.#ctor
  - System.Web.UI.UpdatePanel.Attributes
  - System.Web.UI.UpdatePanel.ChildrenAsTriggers
  - System.Web.UI.UpdatePanel.ContentTemplate
  - System.Web.UI.UpdatePanel.ContentTemplateContainer
  - System.Web.UI.UpdatePanel.Controls
  - System.Web.UI.UpdatePanel.CreateContentTemplateContainer
  - System.Web.UI.UpdatePanel.CreateControlCollection
  - System.Web.UI.UpdatePanel.Initialize
  - System.Web.UI.UpdatePanel.IsInPartialRendering
  - System.Web.UI.UpdatePanel.OnInit(System.EventArgs)
  - System.Web.UI.UpdatePanel.OnLoad(System.EventArgs)
  - System.Web.UI.UpdatePanel.OnPreRender(System.EventArgs)
  - System.Web.UI.UpdatePanel.OnUnload(System.EventArgs)
  - System.Web.UI.UpdatePanel.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.UpdatePanel.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.UpdatePanel.RenderMode
  - System.Web.UI.UpdatePanel.RequiresUpdate
  - System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.UpdatePanel.Triggers
  - System.Web.UI.UpdatePanel.Update
  - System.Web.UI.UpdatePanel.UpdateMode
  langs:
  - csharp
  name: UpdatePanel
  nameWithType: UpdatePanel
  fullName: System.Web.UI.UpdatePanel
  type: Class
  summary: "Permite secções de uma página para serem compostos parcialmente sem uma nova colocação."
  remarks: "Neste tópico:- [introdução](#introduction)      -   [atualizar conteúdo do UpdatePanel](#refreshing_updatepanel_content)      -   [UpdatePanel utilização](#updatepanel_usage)      -   [aplicar estilos](#applying_styles)      -   [sintaxe declarativa](#declarative_syntax) <a name=&quot;introduction&quot;> </a> # # introdução UpdatePanel controlos são uma parte central da funcionalidade de AJAX no ASP.NET.       São utilizadas com o <xref:System.Web.UI.ScriptManager>controlo para permitir a composição da página parcial.</xref:System.Web.UI.ScriptManager> Composição da página parcial reduz a necessidade de postbacks síncronos e de página de conclusão quando apenas uma parte da página tem de ser atualizados. Composição da página parcial melhora a experiência de utilizador dado que reduz o flicker de ecrã que ocorre durante uma nova colocação full-page e melhora interatividade de página Web.      <a name=&quot;refreshing_updatepanel_content&quot;></a># # Atualizar composição da página parcial UpdatePanel conteúdo quando estiver ativada, um controlo pode efetuar uma nova colocação que atualiza a página ou um postback assíncrono que atualiza o conteúdo de um ou mais controlos de UpdatePanel. Se um controlo faz com que um postback assíncrono e atualiza um controlo UpdatePanel dependem as seguintes: - se a <xref:System.Web.UI.UpdatePanel.UpdateMode%2A>do controlo UpdatePanel for definida como <xref:System.Web.UI.UpdatePanelUpdateMode>, conteúdo do controlo UpdatePanel é atualizado em cada nova colocação que origina a partir da página.</xref:System.Web.UI.UpdatePanelUpdateMode> </xref:System.Web.UI.UpdatePanel.UpdateMode%2A> Isto inclui novas colocações assíncronas par de controlos que estão dentro de outros controlos de UpdatePanel e postbacks de controlos que não se encontrem dentro de controlos de UpdatePanel.      -Se a <xref:System.Web.UI.UpdatePanel.UpdateMode%2A>propriedade está definida como <xref:System.Web.UI.UpdatePanelUpdateMode>, conteúdo do controlo UpdatePanel é atualizado nas seguintes circunstâncias: - quando chamar o <xref:System.Web.UI.UpdatePanel.Update%2A>método do UpdatePanel controlar explicitamente.</xref:System.Web.UI.UpdatePanel.Update%2A> </xref:System.Web.UI.UpdatePanelUpdateMode> </xref:System.Web.UI.UpdatePanel.UpdateMode%2A>          -Quando o controlo UpdatePanel é aninhado no interior de outro UpdatePanel controlo e o painel principal é atualizado.          -Quando uma nova colocação é causada por um controlo que está definido como um acionador, utilizando o `Triggers` propriedade do controlo UpdatePanel. Neste cenário, o controlo aciona explicitamente uma atualização do conteúdo do painel. O controlo pode ser dentro ou fora do controlo de UpdatePanel o acionador está associado.          -Quando o <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>propriedade está definida como `true` e um controlo subordinado do controlo UpdatePanel provoca uma nova colocação.</xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> Controlos subordinados dos controlos de UpdatePanel aninhados não causam uma atualização para o controlo UpdatePanel externa, exceto se explicitamente são definidos como acionadores.       A combinação de definição a <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>propriedade `false` e o <xref:System.Web.UI.UpdatePanel.UpdateMode%2A>propriedade <xref:System.Web.UI.UpdatePanelUpdateMode>não é permitida e irá gerar uma exceção.</xref:System.Web.UI.UpdatePanelUpdateMode> </xref:System.Web.UI.UpdatePanel.UpdateMode%2A> </xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>       Quando o controlo UpdatePanel efetua um post assíncrona, adiciona um cabeçalho HTTP personalizado. Alguns proxies remover este cabeçalho HTTP personalizado. Se isto ocorrer, o servidor processa o pedido como uma nova colocação regular, o que causa um erro de cliente. Para resolver este problema, insira um campo de formulário personalizado quando efetuar mensagens assíncronas. Em seguida, verifique o cabeçalho ou o campo de formulário personalizado no código do servidor.      <a name=&quot;updatepanel_usage&quot;></a># # UpdatePanel utilização pode utilizar vários controlos de UpdatePanel para atualizar regiões de outra página de forma independente. Quando a página que contém um ou mais controlos de UpdatePanel é o primeira composto, todo o conteúdo de todos os controlos de UpdatePanel são apresentados e enviada para o browser. Em novas colocações assíncronas subsequentes, o conteúdo de cada controlo UpdatePanel poderão não estar atualizado dependendo das definições do painel e no cliente ou servidor lógica painéis individuais.       Também pode utilizar os controlos de UpdatePanel nos seguintes cenários: - em controlos de utilizador.      -Nas páginas principais e conteúdas.      -Aninhada outros controlos de UpdatePanel.      -Interior transformada em modelo controla, como o <xref:System.Web.UI.WebControls.GridView>ou <xref:System.Web.UI.WebControls.Repeater>controlos.</xref:System.Web.UI.WebControls.Repeater> </xref:System.Web.UI.WebControls.GridView>       É possível adicionar controlos de UpdatePanel forma declarativa ou através de programação.       Pode adicionar um controlo UpdatePanel através de programação, mas não é possível adicionar acionadores através de programação. Para criar o acionador como comportamento, pode registar um controlo na página como um controlo de nova colocação assíncrono. Fazê-lo ao chamar o <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A>método o <xref:System.Web.UI.ScriptManager>controlo.</xref:System.Web.UI.ScriptManager> </xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> Em seguida, pode criar um processador de eventos que é executado na resposta para a nova colocação assíncrona e, no processador, chamada o <xref:System.Web.UI.UpdatePanel.Update%2A>método do controlo UpdatePanel.</xref:System.Web.UI.UpdatePanel.Update%2A>      <a name=&quot;applying_styles&quot;></a># # Aplicar estilos o UpdatePanel controlo aceita expando atributos. Isto permite-lhe definir uma classe CSS para o HTMLelements composição de controlos. Por exemplo, poderá criar a marcação mostrada no exemplo seguinte: ```   <asp:UpdatePanel runat=&quot;server&quot; class=&quot;myStyle&quot;>   </asp:UpdatePanel>    ``` a marcação no exemplo anterior composições HTML semelhante ao seguinte quando a página é executada: ```   <div id=&quot;ctl00_MainContent_UpdatePanel1&quot; class=&quot;MyStyle&quot;>   </div>   ``` <a name=&quot;declarative_syntax&quot;> </a> # # sintaxe declarativa      ```   <asp:UpdatePanel       ChildrenAsTriggers=&quot;True|False&quot;       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       ID=&quot;string&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnUnload=&quot;Unload event handler&quot;       RenderMode=&quot;Block|Inline&quot;       runat=&quot;server&quot;       SkinID=&quot;string&quot;       UpdateMode=&quot;Always|Conditional&quot;       Visible=&quot;True|False&quot;   >       <ContentTemplate>           <!-- child controls -->       </ContentTemplate>       <Triggers>           <asp:AsyncPostBackTrigger                ControlID=&quot;string&quot;               EventName=&quot;string&quot;           />           <asp:PostBackTrigger                ControlID=&quot;string&quot;           />       </Triggers>   </asp:UpdatePanel>   ```"
  example:
  - "The following examples show different uses of the UpdatePanel control.  \n  \n **Controls Inside an UpdatePanel Control**  \n  \n The following example shows how to put controls inside an UpdatePanel control to reduce screen flicker when you post to the server. In this example, a <xref:System.Web.UI.WebControls.Calendar> and a <xref:System.Web.UI.WebControls.DropDownList> control are inside an UpdatePanel control. By default, the <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> property is <xref:System.Web.UI.UpdatePanelUpdateMode> and the <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> property is `true`. Therefore, child controls of the panel cause an asynchronous postback.  \n  \n [!code-vb[System.Web.UI.UpdatePanel#1](~/add/codesnippet/visualbasic/t-system.web.ui.updatepa_0_1.aspx)]\n [!code-cs[System.Web.UI.UpdatePanel#1](~/add/codesnippet/csharp/t-system.web.ui.updatepa_0_1.aspx)]  \n  \n **Master/Detail Scenario with UpdatePanel Controls**  \n  \n In the following example, an UpdatePanel control is used in a master/detail scenario that shows orders and order details from the Northwind database. One UpdatePanel control contains the <xref:System.Web.UI.WebControls.GridView> control that displays a list of orders. A second UpdatePanel control contains a <xref:System.Web.UI.WebControls.DetailsView> control that displays the details of one order. When you select an order from the first table, details for that order are displayed in the second table. The second table is updated asynchronously based on the selection in the first table. The sorting and paging operations in the orders summary table also cause partial updates.  \n  \n [!code-cs[System.Web.UI.UpdatePanel#2](~/add/codesnippet/csharp/t-system.web.ui.updatepa_0_2.aspx)]\n [!code-vb[System.Web.UI.UpdatePanel#2](~/add/codesnippet/visualbasic/t-system.web.ui.updatepa_0_2.aspx)]  \n  \n If you put a <xref:System.Web.UI.WebControls.GridView> control inside an UpdatePanel control, setting the <xref:System.Web.UI.WebControls.GridView> control's <xref:System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks%2A> property to `true` is not supported. However, because the UpdatePanel control supports asynchronous postbacks, any postbacks that change the <xref:System.Web.UI.WebControls.GridView> control inside an UpdatePanel control cause the same behavior as sorting and paging callbacks.  \n  \n **Using an UpdatePanel Control in a Template**  \n  \n In the following example, an UpdatePanel control is used in the item template of a <xref:System.Web.UI.WebControls.GridView> control. UpdatePanel controls in each data row are generated automatically. Each row's UpdatePanel control contains a <xref:System.Web.UI.WebControls.Label> control to display the quantity of the item in that row and a <xref:System.Web.UI.WebControls.Button> control to decrease and increase the quantity.  \n  \n [!code-cs[System.Web.UI.UpdatePanel#3](~/add/codesnippet/csharp/t-system.web.ui.updatepa_0_3.aspx)]\n [!code-vb[System.Web.UI.UpdatePanel#3](~/add/codesnippet/visualbasic/t-system.web.ui.updatepa_0_3.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("Triggers")]

      [System.ComponentModel.Designer("System.Web.UI.Design.UpdatePanelDesigner, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")]

      [System.Drawing.ToolboxBitmap(typeof(EmbeddedResourceFinder), "System.Web.Resources.UpdatePanel.bmp")]

      [System.Web.UI.ParseChildren(true)]

      [System.Web.UI.PersistChildren(false)]

      public class UpdatePanel : System.Web.UI.Control, System.Web.UI.IAttributeAccessor
  inheritance:
  - System.Object
  - System.Web.UI.Control
  implements:
  - System.Web.UI.IAttributeAccessor
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableTheming
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.SkinID
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.TrackViewState
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  platform:
  - net462
- uid: System.Web.UI.UpdatePanel.#ctor
  id: '#ctor'
  parent: System.Web.UI.UpdatePanel
  langs:
  - csharp
  name: UpdatePanel()
  nameWithType: UpdatePanel.UpdatePanel()
  fullName: System.Web.UI.UpdatePanel.UpdatePanel()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> classe."
  remarks: "Utilize este construtor para inicializar uma nova instância de <xref:System.Web.UI.UpdatePanel>classe.</xref:System.Web.UI.UpdatePanel> Para adicionar dinamicamente um <xref:System.Web.UI.UpdatePanel>controlar a uma página, crie um novo <xref:System.Web.UI.UpdatePanel>instância e, em seguida, adicionar controlos subordinados para o objeto de controlo que é exposto pela instância <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A>propriedade.</xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> </xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel>"
  example:
  - "The following example shows how to dynamically create an <xref:System.Web.UI.UpdatePanel> control and add it to a page. When you click the button inside the <xref:System.Web.UI.UpdatePanel> control, the message is refreshed with the date and time. Child controls are added by using the <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> property.  \n  \n [!code-cs[System.Web.UI.UpdatePanel.Constructor#1](~/add/codesnippet/csharp/m-system.web.ui.updatepa_1_1.aspx)]\n [!code-vb[System.Web.UI.UpdatePanel.Constructor#1](~/add/codesnippet/visualbasic/m-system.web.ui.updatepa_1_1.aspx)]"
  syntax:
    content: public UpdatePanel ();
    parameters: []
  overload: System.Web.UI.UpdatePanel.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.UpdatePanel.Attributes
  id: Attributes
  parent: System.Web.UI.UpdatePanel
  langs:
  - csharp
  name: Attributes
  nameWithType: UpdatePanel.Attributes
  fullName: System.Web.UI.UpdatePanel.Attributes
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Obtém a folha de estilo em cascata (CSS) de coleção de atributos a <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> controlo."
  remarks: "A propriedade de atributos contém uma coleção de atributos de estilo CSS que podem ser utilizados no envolvente `div` elemento do <xref:System.Web.UI.UpdatePanel>controlo.</xref:System.Web.UI.UpdatePanel>"
  syntax:
    content: public System.Web.UI.AttributeCollection Attributes { get; }
    return:
      type: System.Web.UI.AttributeCollection
      description: "Os nomes do CSS regras de estilo na coleção de atributos."
  overload: System.Web.UI.UpdatePanel.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.UpdatePanel.ChildrenAsTriggers
  id: ChildrenAsTriggers
  parent: System.Web.UI.UpdatePanel
  langs:
  - csharp
  name: ChildrenAsTriggers
  nameWithType: UpdatePanel.ChildrenAsTriggers
  fullName: System.Web.UI.UpdatePanel.ChildrenAsTriggers
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Obtém ou define um valor que indica se novas colocações de subordinados imediatos controla de um <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> controlo atualizar o conteúdo do painel."
  remarks: "Defina a propriedade ChildrenAsTriggers como `true` se pretender que as novas colocações de controlos subordinados imediatos do <xref:System.Web.UI.UpdatePanel>controlo para fazer com que uma atualização de conteúdo do painel.</xref:System.Web.UI.UpdatePanel> Controlos subordinados da aninhada <xref:System.Web.UI.UpdatePanel>controlos não irão causar uma atualização do principal <xref:System.Web.UI.UpdatePanel>controlo do conteúdo, a menos que tem de chamar o <xref:System.Web.UI.UpdatePanel.Update%2A>método explicitamente ou definir os controlos subordinados como acionadores.</xref:System.Web.UI.UpdatePanel.Update%2A> </xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel>      > [!NOTE] > Quando o <xref:System.Web.UI.UpdatePanel.UpdateMode%2A>propriedade está definida como <xref:System.Web.UI.UpdatePanelUpdateMode>e a propriedade ChildrenAsTriggers está definida como `false`, um <xref:System.InvalidOperationException>é emitida uma exceção durante a <xref:System.Web.UI.UpdatePanel.OnPreRender%2A>método.</xref:System.Web.UI.UpdatePanel.OnPreRender%2A> </xref:System.InvalidOperationException> </xref:System.Web.UI.UpdatePanelUpdateMode> </xref:System.Web.UI.UpdatePanel.UpdateMode%2A> Esta combinação de propriedades não é permitida para o <xref:System.Web.UI.UpdatePanel>controlo.</xref:System.Web.UI.UpdatePanel>       Um cenário onde pode definir ChildrenAsTriggers para `false` é quando se tiver dois <xref:System.Web.UI.UpdatePanel>controlos e pretender que uma nova colocação partir do painel do primeiro para atualizar o conteúdo do painel segundo, mas não atualizar os seus próprios conteúdos.</xref:System.Web.UI.UpdatePanel> Por exemplo, o primeiro painel pode ser uma lista dos produtos para comprar e o painel segundo poderá ser um carrinho de compras."
  syntax:
    content: public bool ChildrenAsTriggers { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os postbacks de subordinados imediatos controlos do <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> atualização do painel de controlo do conteúdo; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.UpdatePanel.ChildrenAsTriggers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.UpdatePanel.ContentTemplate
  id: ContentTemplate
  parent: System.Web.UI.UpdatePanel
  langs:
  - csharp
  name: ContentTemplate
  nameWithType: UpdatePanel.ContentTemplate
  fullName: System.Web.UI.UpdatePanel.ContentTemplate
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Obtém ou define o modelo que define o conteúdo a <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> controlo."
  remarks: "A propriedade ContentTemplate contém o conteúdo que é apresentado no interior de um <xref:System.Web.UI.UpdatePanel>controlar quando é composto.</xref:System.Web.UI.UpdatePanel> Pode criar conteúdo do modelo de forma declarativa ou através de programação. O modelo de conteúdo de um <xref:System.Web.UI.UpdatePanel>controlo é um modelo de instância única.</xref:System.Web.UI.UpdatePanel> Por conseguinte, as propriedades dos controlos contém podem ser acedidas diretamente na página sem utilizar o <xref:System.Web.UI.Page.FindControl%2A>método.</xref:System.Web.UI.Page.FindControl%2A> Para obter mais informações, consulte o <xref:System.Web.UI.TemplateInstanceAttribute>Descrição geral de classe.</xref:System.Web.UI.TemplateInstanceAttribute>       Para adicionar itens para a <xref:System.Web.UI.UpdatePanel>controlar de forma declarativa, adicione um `<ContentTemplate>` elemento entre a abertura e fecho de etiquetas do <xref:System.Web.UI.UpdatePanel>controlo.</xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel> Dentro do `<ContentTemplate>` etiquetas de elemento, declarar outros elementos HTML e controlos.       Para adicionar itens para a <xref:System.Web.UI.UpdatePanel>controlar dinamicamente, utilize o <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A>propriedade, o que lhe permite adicionar controlos subordinados sem ter de criar um modelo personalizado que implementa o <xref:System.Web.UI.ITemplate>interface.</xref:System.Web.UI.ITemplate> </xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> </xref:System.Web.UI.UpdatePanel>"
  syntax:
    content: public System.Web.UI.ITemplate ContentTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "Um <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> instância que define o conteúdo a <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> controlo. A predefinição é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.UpdatePanel.ContentTemplate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A propriedade ContentTemplate o <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> controlo está definido após a criação de uma instância do modelo ou depois de criar o contentor de modelo de conteúdo."
  platform:
  - net462
- uid: System.Web.UI.UpdatePanel.ContentTemplateContainer
  id: ContentTemplateContainer
  parent: System.Web.UI.UpdatePanel
  langs:
  - csharp
  name: ContentTemplateContainer
  nameWithType: UpdatePanel.ContentTemplateContainer
  fullName: System.Web.UI.UpdatePanel.ContentTemplateContainer
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Obtém um objeto de controlo para o qual pode adicionar programaticamente controlos subordinados."
  remarks: "A propriedade ContentTemplateContainer permite-lhe adicionar programaticamente controlos subordinados para o <xref:System.Web.UI.UpdatePanel>controlo sem ter de definir um modelo personalizado que herda do <xref:System.Web.UI.ITemplate>interface.</xref:System.Web.UI.ITemplate> </xref:System.Web.UI.UpdatePanel> Se estiver a adicionar o conteúdo para o <xref:System.Web.UI.UpdatePanel>controlar de forma declarativa ou através de um designer, deve adicionar o conteúdo para o <xref:System.Web.UI.UpdatePanel.ContentTemplate%2A>propriedade utilizando um `<ContentTemplate>` elemento.</xref:System.Web.UI.UpdatePanel.ContentTemplate%2A> </xref:System.Web.UI.UpdatePanel>"
  example:
  - "The following example shows how to programmatically specify the ContentTemplateContainer property of an <xref:System.Web.UI.UpdatePanel> control. The <xref:System.Web.UI.WebControls.Label.Text%2A> property of a <xref:System.Web.UI.WebControls.Label> control is set when `Button1` is clicked.  \n  \n [!code-cs[System.Web.UI.UpdatePanel.Constructor#1](~/add/codesnippet/csharp/p-system.web.ui.updatepa_2_1.aspx)]\n [!code-vb[System.Web.UI.UpdatePanel.Constructor#1](~/add/codesnippet/visualbasic/p-system.web.ui.updatepa_2_1.aspx)]"
  syntax:
    content: public System.Web.UI.Control ContentTemplateContainer { get; }
    return:
      type: System.Web.UI.Control
      description: "A <xref href=&quot;System.Web.UI.Control&quot;> </xref> objeto que define o conteúdo a <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> controlo."
  overload: System.Web.UI.UpdatePanel.ContentTemplateContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.UpdatePanel.Controls
  id: Controls
  parent: System.Web.UI.UpdatePanel
  langs:
  - csharp
  name: Controls
  nameWithType: UpdatePanel.Controls
  fullName: System.Web.UI.UpdatePanel.Controls
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Obtém o <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref> controla objeto que contém o elemento subordinado para o <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> controlo."
  remarks: "A propriedade Controls seja substituída a partir da base de <xref:System.Web.UI.Control>classe e selado para impedir a derivação adicional.</xref:System.Web.UI.Control> Para adicionar controlos para o <xref:System.Web.UI.UpdatePanel>controlar de forma declarativa, crie um `<ContentTemplate>` elemento dentro do <xref:System.Web.UI.UpdatePanel>markup de controlo.</xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel> Para adicionar controlos para o <xref:System.Web.UI.UpdatePanel>controlar programaticamente, utilize o <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A>propriedade.</xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> </xref:System.Web.UI.UpdatePanel>"
  syntax:
    content: public override sealed System.Web.UI.ControlCollection Controls { get; }
    return:
      type: System.Web.UI.ControlCollection
      description: "A coleção de controlos subordinados para o <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> controlo."
  overload: System.Web.UI.UpdatePanel.Controls*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <>*>, <>*>, <>*>, <>*>, or <>*> method of the <xref href=&quot;System.Web.UI.ControlCollection&quot;></xref> class has been called. Para alterar o conteúdo a <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> controlar, modifique os controlos subordinados do <> </> *> propriedade."
  platform:
  - net462
- uid: System.Web.UI.UpdatePanel.CreateContentTemplateContainer
  id: CreateContentTemplateContainer
  parent: System.Web.UI.UpdatePanel
  langs:
  - csharp
  name: CreateContentTemplateContainer()
  nameWithType: UpdatePanel.CreateContentTemplateContainer()
  fullName: System.Web.UI.UpdatePanel.CreateContentTemplateContainer()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Cria um <xref href=&quot;System.Web.UI.Control&quot;> </xref> objeto que age como um contentor para controlos subordinados que definem a <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> conteúdo do controlo."
  remarks: "Este método destina-se pelos programadores do controlo que pretendem expandir o <xref:System.Web.UI.UpdatePanel>controlo.</xref:System.Web.UI.UpdatePanel> Por exemplo, em classes derivadas, pode fornecer um controlo de raiz diferentes que age como um contentor para o <xref:System.Web.UI.UpdatePanel>conteúdo do controlo.</xref:System.Web.UI.UpdatePanel> A implementação predefinida devolve um <xref:System.Web.UI.Control>objeto.</xref:System.Web.UI.Control>"
  example:
  - "The following example shows how to override the CreateContentTemplateContainer method in a custom <xref:System.Web.UI.UpdatePanel> control to always render the `<fieldset>` and `<legend>` elements for the panel's content. The custom <xref:System.Web.UI.UpdatePanel> control defines a public property named `GroupingText` that is a string literal inside the `<legend>` element.  \n  \n A custom <xref:System.Web.UI.UpdatePanel> control named `CustomUpdatePanel` derives from <xref:System.Web.UI.UpdatePanel> and overrides the CreateContentTemplateContainer method. Put the `CustomUpdatePanel` class source code in the Web site's App_Code folder.  \n  \n [!code-cs[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#2](~/add/codesnippet/csharp/m-system.web.ui.updatepa_2_1.cs)]\n [!code-vb[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#2](~/add/codesnippet/visualbasic/m-system.web.ui.updatepa_2_1.vb)]  \n  \n The custom <xref:System.Web.UI.UpdatePanel> control is used on the page just as the <xref:System.Web.UI.UpdatePanel> control is. The following example shows a page that contains the custom <xref:System.Web.UI.UpdatePanel> control.  \n  \n [!code-cs[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#1](~/add/codesnippet/csharp/m-system.web.ui.updatepa_2_2.aspx)]\n [!code-vb[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#1](~/add/codesnippet/visualbasic/m-system.web.ui.updatepa_2_2.aspx)]"
  syntax:
    content: protected virtual System.Web.UI.Control CreateContentTemplateContainer ();
    parameters: []
    return:
      type: System.Web.UI.Control
      description: "A <xref href=&quot;System.Web.UI.Control&quot;> </xref> contentor para o <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> conteúdo do controlo."
  overload: System.Web.UI.UpdatePanel.CreateContentTemplateContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.UpdatePanel.CreateControlCollection
  id: CreateControlCollection
  parent: System.Web.UI.UpdatePanel
  langs:
  - csharp
  name: CreateControlCollection()
  nameWithType: UpdatePanel.CreateControlCollection()
  fullName: System.Web.UI.UpdatePanel.CreateControlCollection()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Devolve o conjunto de todos os controlos que estão contidas no <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> controlo."
  remarks: "O método CreateControlCollection é utilizado pelos programadores do controlo.       Uma vez que este método é protegido e selado, é visível para classes que herdam a <xref:System.Web.UI.UpdatePanel>classe, mas não pode ser substituída.</xref:System.Web.UI.UpdatePanel> Este método substitui a implementação base para devolver um especializadas <xref:System.Web.UI.ControlCollection>objeto que emite um <xref:System.InvalidOperationException>quando o <xref:System.Web.UI.ControlCollection.Add%2A>, <xref:System.Web.UI.ControlCollection.AddAt%2A>, <xref:System.Web.UI.ControlCollection.Clear%2A>, <xref:System.Web.UI.ControlCollection.Remove%2A>, ou <xref:System.Web.UI.ControlCollection.RemoveAt%2A>método do <xref:System.Web.UI.ControlCollection>classe é invocada.</xref:System.Web.UI.ControlCollection> </xref:System.Web.UI.ControlCollection.RemoveAt%2A> </xref:System.Web.UI.ControlCollection.Remove%2A> </xref:System.Web.UI.ControlCollection.Clear%2A> </xref:System.Web.UI.ControlCollection.AddAt%2A> </xref:System.Web.UI.ControlCollection.Add%2A> </xref:System.InvalidOperationException> </xref:System.Web.UI.ControlCollection> Para alterar o conteúdo a <xref:System.Web.UI.UpdatePanel>controlar, modifique os controlos subordinados do <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A>propriedade.</xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> </xref:System.Web.UI.UpdatePanel>"
  syntax:
    content: protected override sealed System.Web.UI.ControlCollection CreateControlCollection ();
    parameters: []
    return:
      type: System.Web.UI.ControlCollection
      description: "A <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref> objeto que é composta por todos os controlos que definem o conteúdo a <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> controlo."
  overload: System.Web.UI.UpdatePanel.CreateControlCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.UpdatePanel.Initialize
  id: Initialize
  parent: System.Web.UI.UpdatePanel
  langs:
  - csharp
  name: Initialize()
  nameWithType: UpdatePanel.Initialize()
  fullName: System.Web.UI.UpdatePanel.Initialize()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Inicializa a <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> controlar acionador coleção, se estiver ativada a composição da página parcial."
  remarks: "Se a página parcial composição não estiver ativada, os acionadores que estão definidos no <xref:System.Web.UI.UpdatePanel.Triggers%2A>propriedade não foram inicializados porque têm sem qualquer efeito.</xref:System.Web.UI.UpdatePanel.Triggers%2A> O <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A>propriedade o <xref:System.Web.UI.ScriptManager>controlo obtém ou define um valor que indica se a página parcial composição está ativada.</xref:System.Web.UI.ScriptManager> </xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> O <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A>propriedade o <xref:System.Web.UI.ScriptManager>controlo obtém ou define um valor que indica se a página parcial composição é suportada.</xref:System.Web.UI.ScriptManager> </xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A>"
  syntax:
    content: protected virtual void Initialize ();
    parameters: []
  overload: System.Web.UI.UpdatePanel.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.UpdatePanel.IsInPartialRendering
  id: IsInPartialRendering
  parent: System.Web.UI.UpdatePanel
  langs:
  - csharp
  name: IsInPartialRendering
  nameWithType: UpdatePanel.IsInPartialRendering
  fullName: System.Web.UI.UpdatePanel.IsInPartialRendering
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> controlo está a ser atualizado como resultado de uma nova colocação assíncrona."
  remarks: "A propriedade IsInPartialRendering destina-se por programadores do controlo que pretendem saber quando uma <xref:System.Web.UI.UpdatePanel>controlo está a ser atualizado como resultado de uma nova colocação assíncrona.</xref:System.Web.UI.UpdatePanel> Em cenários de desenvolvimento de página, utilize o <xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A>propriedade para determinar se uma página está a processar como resultado de uma nova colocação assíncrona.</xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A>"
  syntax:
    content: public bool IsInPartialRendering { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se atual <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> controlo está a ser atualizado, como resultado de uma nova colocação assíncrona; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.UpdatePanel.IsInPartialRendering*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.UpdatePanel.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.UpdatePanel
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: UpdatePanel.OnInit(EventArgs)
  fullName: System.Web.UI.UpdatePanel.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Gera o <xref href=&quot;System.Web.UI.Control.Init&quot;> </xref> eventos."
  remarks: "O <xref:System.Web.UI.UpdatePanel>do controlo <xref:System.Web.UI.UpdatePanel.ContentTemplate%2A>propriedade é instanciada durante o método &quot; OnInit.</xref:System.Web.UI.UpdatePanel.ContentTemplate%2A> </xref:System.Web.UI.UpdatePanel>       O método &quot; OnInit é utilizado pelos programadores do controlo para expandir a funcionalidade do <xref:System.Web.UI.UpdatePanel>controlo.</xref:System.Web.UI.UpdatePanel>"
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>objeto que contém os dados do evento.</xref:System.EventArgs>"
  overload: System.Web.UI.UpdatePanel.OnInit*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <> </> *> propriedade está a ser definida quando o <> </> *> propriedade já foi criada."
  platform:
  - net462
- uid: System.Web.UI.UpdatePanel.OnLoad(System.EventArgs)
  id: OnLoad(System.EventArgs)
  parent: System.Web.UI.UpdatePanel
  langs:
  - csharp
  name: OnLoad(EventArgs)
  nameWithType: UpdatePanel.OnLoad(EventArgs)
  fullName: System.Web.UI.UpdatePanel.OnLoad(EventArgs)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Gera o <xref href=&quot;System.Web.UI.Control.Load&quot;> </xref> evento para o <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> controlar e invoca o <xref:System.Web.UI.UpdatePanel.Initialize*>método quando a composição da página parcial não está ativada.</xref:System.Web.UI.UpdatePanel.Initialize*>"
  syntax:
    content: protected override void OnLoad (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>objeto que contém os dados do evento.</xref:System.EventArgs>"
  overload: System.Web.UI.UpdatePanel.OnLoad*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.UpdatePanel.OnPreRender(System.EventArgs)
  id: OnPreRender(System.EventArgs)
  parent: System.Web.UI.UpdatePanel
  langs:
  - csharp
  name: OnPreRender(EventArgs)
  nameWithType: UpdatePanel.OnPreRender(EventArgs)
  fullName: System.Web.UI.UpdatePanel.OnPreRender(EventArgs)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Gera o <xref href=&quot;System.Web.UI.Control.PreRender&quot;> </xref> eventos."
  remarks: "O método OnPreRender é utilizado pelos programadores do controlo para expandir a funcionalidade do <xref:System.Web.UI.UpdatePanel>controlo.</xref:System.Web.UI.UpdatePanel>"
  syntax:
    content: protected override void OnPreRender (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>objeto que contém os dados do evento.</xref:System.EventArgs>"
  overload: System.Web.UI.UpdatePanel.OnPreRender*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <> </> *> propriedade está definida como <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>e o <> </> *> propriedade está definida como <xref href=&quot;System.Web.UI.UpdatePanelUpdateMode&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.UpdatePanel.OnUnload(System.EventArgs)
  id: OnUnload(System.EventArgs)
  parent: System.Web.UI.UpdatePanel
  langs:
  - csharp
  name: OnUnload(EventArgs)
  nameWithType: UpdatePanel.OnUnload(EventArgs)
  fullName: System.Web.UI.UpdatePanel.OnUnload(EventArgs)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Gera a base de <xref href=&quot;System.Web.UI.Control.Unload&quot;> </xref> eventos."
  remarks: "O método OnUnload é utilizado pelos programadores do controlo para expandir a funcionalidade de <xref:System.Web.UI.UpdatePanel>controlo</xref:System.Web.UI.UpdatePanel>"
  syntax:
    content: protected override void OnUnload (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>objeto que contém dados de eventos.</xref:System.EventArgs>"
  overload: System.Web.UI.UpdatePanel.OnUnload*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.UpdatePanel.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.UpdatePanel
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: UpdatePanel.Render(HtmlTextWriter)
  fullName: System.Web.UI.UpdatePanel.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Gera o <xref:System.Web.UI.Control.Render*>eventos.</xref:System.Web.UI.Control.Render*>"
  remarks: "O método de composição é utilizado pelos programadores do controlo para expandir a funcionalidade do <xref:System.Web.UI.UpdatePanel>controlo.</xref:System.Web.UI.UpdatePanel>       O método de composição escreve o conteúdo composto do <xref:System.Web.UI.UpdatePanel>controlo para o browser utilizando o fornecido <xref:System.Web.UI.HtmlTextWriter>objeto.</xref:System.Web.UI.HtmlTextWriter> </xref:System.Web.UI.UpdatePanel> Ao substituir o método de composição de uma classe derivada, certifique-se chamar o método de composição da classe base para que controla o subordinado do <xref:System.Web.UI.UpdatePanel>controlo são apresentados.</xref:System.Web.UI.UpdatePanel>"
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "Um <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> objeto que representa o fluxo de saída para compor o conteúdo HTML."
  overload: System.Web.UI.UpdatePanel.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.UpdatePanel.RenderChildren(System.Web.UI.HtmlTextWriter)
  id: RenderChildren(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.UpdatePanel
  langs:
  - csharp
  name: RenderChildren(HtmlTextWriter)
  nameWithType: UpdatePanel.RenderChildren(HtmlTextWriter)
  fullName: System.Web.UI.UpdatePanel.RenderChildren(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Gera o evento RenderChildren."
  remarks: "O método RenderChildren é utilizado pelos programadores do controlo para expandir a funcionalidade do <xref:System.Web.UI.UpdatePanel>controlo.</xref:System.Web.UI.UpdatePanel>       O método RenderChildren escreve o conteúdo composto do <xref:System.Web.UI.UpdatePanel>controlo para o browser utilizando o fornecido <xref:System.Web.UI.HtmlTextWriter>objeto.</xref:System.Web.UI.HtmlTextWriter> </xref:System.Web.UI.UpdatePanel> Ao substituir o método RenderChildren uma classe derivada, certifique-se chamar o método de RenderChildren da classe base para que controla o subordinado do <xref:System.Web.UI.UpdatePanel>controlo são apresentados.</xref:System.Web.UI.UpdatePanel>"
  syntax:
    content: protected override void RenderChildren (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "Um <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> objeto que representa o fluxo de saída para compor o conteúdo HTML."
  overload: System.Web.UI.UpdatePanel.RenderChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.UpdatePanel.RenderMode
  id: RenderMode
  parent: System.Web.UI.UpdatePanel
  langs:
  - csharp
  name: RenderMode
  nameWithType: UpdatePanel.RenderMode
  fullName: System.Web.UI.UpdatePanel.RenderMode
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Obtém ou define um valor que indica se um <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> conteúdo do controlo é colocado entre um HTML <xref uid=&quot;langword_csharp_&lt;div&gt;&quot; name=&quot;&lt;div&gt;&quot; href=&quot;&quot;> </xref> ou <xref uid=&quot;langword_csharp_&lt;span&gt;&quot; name=&quot;&lt;span&gt;&quot; href=&quot;&quot;> </xref> elemento."
  remarks: "Se a propriedade RenderMode estiver definida como <xref:System.Web.UI.UpdatePanelRenderMode>, o conteúdo de um <xref:System.Web.UI.UpdatePanel>controlo é composto no interior de um HTML `<span>` elemento.</xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanelRenderMode> Se a propriedade RenderMode estiver definida como <xref:System.Web.UI.UpdatePanelRenderMode>, é composto no interior de um HTML `<div>` elemento.</xref:System.Web.UI.UpdatePanelRenderMode>"
  example:
  - "The following example shows how to set the RenderMode property declaratively. The <xref:System.Web.UI.UpdatePanel> control named `UpdatePanel1` is rendered in an HTML `<span>` element. If the RenderMode property were set to <xref:System.Web.UI.UpdatePanelRenderMode>, the resulting paragraph would appear disjointed because of the way in which the HTML `<div>` element is rendered.  \n  \n [!code-vb[System.Web.UI.UpdatePanel.RenderMode#1](~/add/codesnippet/visualbasic/p-system.web.ui.updatepa_1_1.aspx)]\n [!code-cs[System.Web.UI.UpdatePanel.RenderMode#1](~/add/codesnippet/csharp/p-system.web.ui.updatepa_1_1.aspx)]"
  syntax:
    content: public System.Web.UI.UpdatePanelRenderMode RenderMode { get; set; }
    return:
      type: System.Web.UI.UpdatePanelRenderMode
      description: "Um do <xref href=&quot;System.Web.UI.UpdatePanelRenderMode&quot;> </xref> valores. A predefinição é <xref href=&quot;System.Web.UI.UpdatePanelRenderMode&quot;> </xref> para que o conteúdo do painel é colocado entre um HTML <xref uid=&quot;langword_csharp_&lt;div&gt;&quot; name=&quot;&lt;div&gt;&quot; href=&quot;&quot;> </xref> elemento."
  overload: System.Web.UI.UpdatePanel.RenderMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.UpdatePanel.RequiresUpdate
  id: RequiresUpdate
  parent: System.Web.UI.UpdatePanel
  langs:
  - csharp
  name: RequiresUpdate
  nameWithType: UpdatePanel.RequiresUpdate
  fullName: System.Web.UI.UpdatePanel.RequiresUpdate
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Obtém um valor que indica se o conteúdo a <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> controlo será atualizado."
  remarks: "Por predefinição, a propriedade RequiresUpdate devolve `true` se o <xref:System.Web.UI.UpdatePanel.Update%2A>método foi chamado explicitamente ou se a <xref:System.Web.UI.UpdatePanel.UpdateMode%2A>propriedade está definida como <xref:System.Web.UI.UpdatePanelUpdateMode>.</xref:System.Web.UI.UpdatePanelUpdateMode> </xref:System.Web.UI.UpdatePanel.UpdateMode%2A> </xref:System.Web.UI.UpdatePanel.Update%2A>       Esta propriedade destina-se pelos programadores do controlo que pretendem expandir o <xref:System.Web.UI.UpdatePanel>controlo.</xref:System.Web.UI.UpdatePanel> Por exemplo, em classes derivadas, poderá fornecer uma lógica adicional para determinar se um <xref:System.Web.UI.UpdatePanel>controlo deve ser atualizado.</xref:System.Web.UI.UpdatePanel>"
  syntax:
    content: protected virtual bool RequiresUpdate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> conteúdo do controlo será atualizada; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.UpdatePanel.RequiresUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  id: System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  isEii: true
  parent: System.Web.UI.UpdatePanel
  langs:
  - csharp
  name: System.Web.UI.IAttributeAccessor.GetAttribute(String)
  nameWithType: UpdatePanel.System.Web.UI.IAttributeAccessor.GetAttribute(String)
  fullName: System.Web.UI.UpdatePanel.System.Web.UI.IAttributeAccessor.GetAttribute(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Devolve um atributo de um controlo Web utilizando um nome especificado."
  remarks: "Este membro é uma implementação de membro de interface explícita. Pode ser utilizado apenas quando o <xref:System.Web.UI.UpdatePanel>instância é convertida para um <xref:System.Web.UI.IAttributeAccessor>interface.</xref:System.Web.UI.IAttributeAccessor> </xref:System.Web.UI.UpdatePanel>"
  syntax:
    content: string IAttributeAccessor.GetAttribute (string key);
    parameters:
    - id: key
      type: System.String
      description: "O nome do atributo."
    return:
      type: System.String
      description: "O valor do atributo."
  overload: System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#GetAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  id: System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  isEii: true
  parent: System.Web.UI.UpdatePanel
  langs:
  - csharp
  name: System.Web.UI.IAttributeAccessor.SetAttribute(String,String)
  nameWithType: UpdatePanel.System.Web.UI.IAttributeAccessor.SetAttribute(String,String)
  fullName: System.Web.UI.UpdatePanel.System.Web.UI.IAttributeAccessor.SetAttribute(String,String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Define o valor do atributo controlo especificado."
  remarks: "Este membro é uma implementação de membro de interface explícita. Pode ser utilizado apenas quando o <xref:System.Web.UI.UpdatePanel>instância é convertida para um <xref:System.Web.UI.IAttributeAccessor>interface.</xref:System.Web.UI.IAttributeAccessor> </xref:System.Web.UI.UpdatePanel>"
  syntax:
    content: void IAttributeAccessor.SetAttribute (string key, string value);
    parameters:
    - id: key
      type: System.String
      description: "O nome do atributo para definir."
    - id: value
      type: System.String
      description: "O valor do atributo para definir."
  overload: System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#SetAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.UpdatePanel.Triggers
  id: Triggers
  parent: System.Web.UI.UpdatePanel
  langs:
  - csharp
  name: Triggers
  nameWithType: UpdatePanel.Triggers
  fullName: System.Web.UI.UpdatePanel.Triggers
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Obtém um <xref href=&quot;System.Web.UI.UpdatePanelTriggerCollection&quot;> </xref> objeto que contenha <xref href=&quot;System.Web.UI.AsyncPostBackTrigger&quot;> </xref> e <xref href=&quot;System.Web.UI.PostBackTrigger&quot;> </xref> objetos que foram registados de modo declarativo para o <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> controlo."
  remarks: "A propriedade de Acionadores obtém uma coleção de todos os acionadores que foram definidas para o <xref:System.Web.UI.UpdatePanel>controlo.</xref:System.Web.UI.UpdatePanel> (Pode definir acionadores de modo declarativo utilizando o **Editor de colecções UpdatePanelTrigger** caixa de diálogo no designer ou utilizando o `<Triggers>` elemento do <xref:System.Web.UI.UpdatePanel>controlo.)</xref:System.Web.UI.UpdatePanel> A coleção inclui <xref:System.Web.UI.AsyncPostBackTrigger>e <xref:System.Web.UI.PostBackTrigger>objetos.</xref:System.Web.UI.PostBackTrigger> </xref:System.Web.UI.AsyncPostBackTrigger>       Acionadores declarativas que são definidas nos Acionadores de coleção não são controlados na vista de estado.       Quando um controlo que é um contentor de nomenclatura é utilizado como um acionador, todos os respectivos controlos subordinados que fazer com que a nova colocação comportam-se como acionadores."
  syntax:
    content: public System.Web.UI.UpdatePanelTriggerCollection Triggers { get; }
    return:
      type: System.Web.UI.UpdatePanelTriggerCollection
      description: "Uma coleção de objetos do tipo <xref href=&quot;System.Web.UI.AsyncPostBackTrigger&quot;> </xref> e <xref href=&quot;System.Web.UI.PostBackTrigger&quot;> </xref>."
  overload: System.Web.UI.UpdatePanel.Triggers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.UpdatePanel.Update
  id: Update
  parent: System.Web.UI.UpdatePanel
  langs:
  - csharp
  name: Update()
  nameWithType: UpdatePanel.Update()
  fullName: System.Web.UI.UpdatePanel.Update()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Faz com que uma atualização do conteúdo de um <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> controlo."
  remarks: "Se a página está ativada para composição da página parcial, ao invocar o método de atualização, o <xref:System.Web.UI.UpdatePanel>conteúdo do controlo é atualizado no browser.</xref:System.Web.UI.UpdatePanel> Chamar o método de atualização, se tiver o código de servidor que tem de ser executado para determinar se um <xref:System.Web.UI.UpdatePanel>controlo deve ser atualizado.</xref:System.Web.UI.UpdatePanel> Se planeia utilizar o método de atualização, defina a <xref:System.Web.UI.UpdatePanel.UpdateMode%2A>propriedade <xref:System.Web.UI.UpdatePanelUpdateMode>.</xref:System.Web.UI.UpdatePanelUpdateMode> </xref:System.Web.UI.UpdatePanel.UpdateMode%2A> Se pretender que a decisão de atualizar o painel na lógica de servidor, certifique-se de que o <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>propriedade é `false` e que nenhum acionador explícita está definidos para o painel.</xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>       Num cenário de desenvolvimento página típica, se definir acionadores ou se o <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>propriedade é `true` para o <xref:System.Web.UI.UpdatePanel>controlo, o método de atualização é automaticamente chamado durante o ciclo de vida da página.</xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>       Se o <xref:System.Web.UI.UpdatePanel.ContentTemplate%2A>propriedade não está definida para o <xref:System.Web.UI.UpdatePanel>controlar, não existem atualizações do painel irão ocorrer.</xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel.ContentTemplate%2A>"
  example:
  - "The following example uses the Update method to update the content of an <xref:System.Web.UI.UpdatePanel> control when more than five seconds have elapsed since the last update.  \n  \n [!code-cs[System.Web.UI.UpdatePanel.UpdateMode#1](~/add/codesnippet/csharp/m-system.web.ui.updatepa_0_1.aspx)]\n [!code-vb[System.Web.UI.UpdatePanel.UpdateMode#1](~/add/codesnippet/visualbasic/m-system.web.ui.updatepa_0_1.aspx)]"
  syntax:
    content: public void Update ();
    parameters: []
  overload: System.Web.UI.UpdatePanel.Update*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.Web.UI.UpdatePanel.UpdateMode*> property is set to <xref href=\"System.Web.UI.UpdatePanelUpdateMode\"></xref>.  \n  \n \\- or –  \n  \n The Update method is called during or after the page's <xref:System.Web.UI.Page.Render*> event."
  platform:
  - net462
- uid: System.Web.UI.UpdatePanel.UpdateMode
  id: UpdateMode
  parent: System.Web.UI.UpdatePanel
  langs:
  - csharp
  name: UpdateMode
  nameWithType: UpdatePanel.UpdateMode
  fullName: System.Web.UI.UpdatePanel.UpdateMode
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Obtém ou define um valor que indica quando uma <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> conteúdo do controlo é atualizado."
  remarks: "Quando um <xref:System.Web.UI.UpdatePanel>controlo não está no interior de outro <xref:System.Web.UI.UpdatePanel>controlo, o painel está atualizado de acordo com as definições do UpdateMode e <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>Propriedades, juntamente com a coleção de acionadores.</xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> </xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel> Quando um <xref:System.Web.UI.UpdatePanel>controlo está no interior de outro <xref:System.Web.UI.UpdatePanel>controlo, o painel de subordinados é atualizado automaticamente quando o painel principal é atualizado.</xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel>       O conteúdo de um <xref:System.Web.UI.UpdatePanel>controlo é atualizado nas seguintes circunstâncias: - se a propriedade UpdateMode está definida como <xref:System.Web.UI.UpdatePanelUpdateMode>, a <xref:System.Web.UI.UpdatePanel>conteúdo do controlo é atualizado em cada nova colocação que tem origem em qualquer lugar na página.</xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanelUpdateMode> </xref:System.Web.UI.UpdatePanel> Isto inclui novas colocações assíncronas par de controlos que estão dentro de outra <xref:System.Web.UI.UpdatePanel>controlos e novas colocações de controlos que não estão dentro <xref:System.Web.UI.UpdatePanel>controlos.</xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel>      -Se a <xref:System.Web.UI.UpdatePanel>controlo é aninhado no interior de outro <xref:System.Web.UI.UpdatePanel>controlo e o painel de atualização principal está atualizado.</xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel>      -Se a propriedade UpdateMode está definida como <xref:System.Web.UI.UpdatePanelUpdateMode>, e ocorre uma das seguintes condições:-tem de chamar o <xref:System.Web.UI.UpdatePanel.Update%2A>método do <xref:System.Web.UI.UpdatePanel>controlar explicitamente.</xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel.Update%2A> </xref:System.Web.UI.UpdatePanelUpdateMode>          -A nova colocação é causada por um controlo que está definido como um acionador, utilizando o <xref:System.Web.UI.UpdatePanel.Triggers%2A>propriedade o <xref:System.Web.UI.UpdatePanel>controlo.</xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel.Triggers%2A> Neste cenário, o controlo aciona explicitamente uma atualização do conteúdo do painel. O controlo pode ser dentro ou fora do <xref:System.Web.UI.UpdatePanel>controlo que define o acionador.</xref:System.Web.UI.UpdatePanel>          -O <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>propriedade está definida como `true` e um controlo subordinado a <xref:System.Web.UI.UpdatePanel>controlo provoca uma nova colocação.</xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> Um controlo subordinado um aninhada <xref:System.Web.UI.UpdatePanel>controlo não irá causar uma atualização para o exterior <xref:System.Web.UI.UpdatePanel>controlar, a menos que estes esteja explicitamente definido como um acionador.</xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel>"
  example:
  - "The following example shows how to use the UpdateMode property. The example declares two <xref:System.Web.UI.UpdatePanel> controls. In the first panel, the UpdateMode property is set to <xref:System.Web.UI.UpdatePanelUpdateMode>. In the second panel, UpdateMode is set to <xref:System.Web.UI.UpdatePanelUpdateMode>. A button outside both panels is registered as an asynchronous postback control by calling the <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> method of the <xref:System.Web.UI.ScriptManager> control. In the button's `Click` event handler, the <xref:System.Web.UI.UpdatePanel.Update%2A> method of the first panel is called if more than five seconds have elapsed since its last update. In this scenario, the panel’s content is updated only if the last panel refresh was more than five seconds ago. The content of the second panel is always updated.  \n  \n [!code-cs[System.Web.UI.UpdatePanel.UpdateMode#1](~/add/codesnippet/csharp/p-system.web.ui.updatepa_0_1.aspx)]\n [!code-vb[System.Web.UI.UpdatePanel.UpdateMode#1](~/add/codesnippet/visualbasic/p-system.web.ui.updatepa_0_1.aspx)]"
  syntax:
    content: public System.Web.UI.UpdatePanelUpdateMode UpdateMode { get; set; }
    return:
      type: System.Web.UI.UpdatePanelUpdateMode
      description: "Um do <xref href=&quot;System.Web.UI.UpdatePanelUpdateMode&quot;> </xref> valores. A predefinição é <xref href=&quot;System.Web.UI.UpdatePanelUpdateMode&quot;> </xref>."
  overload: System.Web.UI.UpdatePanel.UpdateMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O tipo especificado não é um do <xref href=&quot;System.Web.UI.UpdatePanelUpdateMode&quot;> </xref> valores."
  platform:
  - net462
references:
- uid: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.Control
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.UI.UpdatePanel.#ctor
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: UpdatePanel()
  nameWithType: UpdatePanel.UpdatePanel()
  fullName: System.Web.UI.UpdatePanel.UpdatePanel()
- uid: System.Web.UI.UpdatePanel.Attributes
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: Attributes
  nameWithType: UpdatePanel.Attributes
  fullName: System.Web.UI.UpdatePanel.Attributes
- uid: System.Web.UI.AttributeCollection
  parent: System.Web.UI
  isExternal: false
  name: AttributeCollection
  nameWithType: AttributeCollection
  fullName: System.Web.UI.AttributeCollection
- uid: System.Web.UI.UpdatePanel.ChildrenAsTriggers
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: ChildrenAsTriggers
  nameWithType: UpdatePanel.ChildrenAsTriggers
  fullName: System.Web.UI.UpdatePanel.ChildrenAsTriggers
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.UpdatePanel.ContentTemplate
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: ContentTemplate
  nameWithType: UpdatePanel.ContentTemplate
  fullName: System.Web.UI.UpdatePanel.ContentTemplate
- uid: System.Web.UI.ITemplate
  parent: System.Web.UI
  isExternal: false
  name: ITemplate
  nameWithType: ITemplate
  fullName: System.Web.UI.ITemplate
- uid: System.Web.UI.UpdatePanel.ContentTemplateContainer
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: ContentTemplateContainer
  nameWithType: UpdatePanel.ContentTemplateContainer
  fullName: System.Web.UI.UpdatePanel.ContentTemplateContainer
- uid: System.Web.UI.UpdatePanel.Controls
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: Controls
  nameWithType: UpdatePanel.Controls
  fullName: System.Web.UI.UpdatePanel.Controls
- uid: System.Web.UI.ControlCollection
  parent: System.Web.UI
  isExternal: false
  name: ControlCollection
  nameWithType: ControlCollection
  fullName: System.Web.UI.ControlCollection
- uid: System.Web.UI.UpdatePanel.CreateContentTemplateContainer
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: CreateContentTemplateContainer()
  nameWithType: UpdatePanel.CreateContentTemplateContainer()
  fullName: System.Web.UI.UpdatePanel.CreateContentTemplateContainer()
- uid: System.Web.UI.UpdatePanel.CreateControlCollection
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: CreateControlCollection()
  nameWithType: UpdatePanel.CreateControlCollection()
  fullName: System.Web.UI.UpdatePanel.CreateControlCollection()
- uid: System.Web.UI.UpdatePanel.Initialize
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: Initialize()
  nameWithType: UpdatePanel.Initialize()
  fullName: System.Web.UI.UpdatePanel.Initialize()
- uid: System.Web.UI.UpdatePanel.IsInPartialRendering
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: IsInPartialRendering
  nameWithType: UpdatePanel.IsInPartialRendering
  fullName: System.Web.UI.UpdatePanel.IsInPartialRendering
- uid: System.Web.UI.UpdatePanel.OnInit(System.EventArgs)
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: UpdatePanel.OnInit(EventArgs)
  fullName: System.Web.UI.UpdatePanel.OnInit(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.UpdatePanel.OnLoad(System.EventArgs)
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: OnLoad(EventArgs)
  nameWithType: UpdatePanel.OnLoad(EventArgs)
  fullName: System.Web.UI.UpdatePanel.OnLoad(EventArgs)
- uid: System.Web.UI.UpdatePanel.OnPreRender(System.EventArgs)
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: OnPreRender(EventArgs)
  nameWithType: UpdatePanel.OnPreRender(EventArgs)
  fullName: System.Web.UI.UpdatePanel.OnPreRender(EventArgs)
- uid: System.Web.UI.UpdatePanel.OnUnload(System.EventArgs)
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: OnUnload(EventArgs)
  nameWithType: UpdatePanel.OnUnload(EventArgs)
  fullName: System.Web.UI.UpdatePanel.OnUnload(EventArgs)
- uid: System.Web.UI.UpdatePanel.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: UpdatePanel.Render(HtmlTextWriter)
  fullName: System.Web.UI.UpdatePanel.Render(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.UpdatePanel.RenderChildren(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: RenderChildren(HtmlTextWriter)
  nameWithType: UpdatePanel.RenderChildren(HtmlTextWriter)
  fullName: System.Web.UI.UpdatePanel.RenderChildren(HtmlTextWriter)
- uid: System.Web.UI.UpdatePanel.RenderMode
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: RenderMode
  nameWithType: UpdatePanel.RenderMode
  fullName: System.Web.UI.UpdatePanel.RenderMode
- uid: System.Web.UI.UpdatePanelRenderMode
  parent: System.Web.UI
  isExternal: false
  name: UpdatePanelRenderMode
  nameWithType: UpdatePanelRenderMode
  fullName: System.Web.UI.UpdatePanelRenderMode
- uid: System.Web.UI.UpdatePanel.RequiresUpdate
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: RequiresUpdate
  nameWithType: UpdatePanel.RequiresUpdate
  fullName: System.Web.UI.UpdatePanel.RequiresUpdate
- uid: System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: System.Web.UI.IAttributeAccessor.GetAttribute(String)
  nameWithType: UpdatePanel.System.Web.UI.IAttributeAccessor.GetAttribute(String)
  fullName: System.Web.UI.UpdatePanel.System.Web.UI.IAttributeAccessor.GetAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: System.Web.UI.IAttributeAccessor.SetAttribute(String,String)
  nameWithType: UpdatePanel.System.Web.UI.IAttributeAccessor.SetAttribute(String,String)
  fullName: System.Web.UI.UpdatePanel.System.Web.UI.IAttributeAccessor.SetAttribute(String,String)
- uid: System.Web.UI.UpdatePanel.Triggers
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: Triggers
  nameWithType: UpdatePanel.Triggers
  fullName: System.Web.UI.UpdatePanel.Triggers
- uid: System.Web.UI.UpdatePanelTriggerCollection
  parent: System.Web.UI
  isExternal: false
  name: UpdatePanelTriggerCollection
  nameWithType: UpdatePanelTriggerCollection
  fullName: System.Web.UI.UpdatePanelTriggerCollection
- uid: System.Web.UI.UpdatePanel.Update
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: Update()
  nameWithType: UpdatePanel.Update()
  fullName: System.Web.UI.UpdatePanel.Update()
- uid: System.Web.UI.UpdatePanel.UpdateMode
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: UpdateMode
  nameWithType: UpdatePanel.UpdateMode
  fullName: System.Web.UI.UpdatePanel.UpdateMode
- uid: System.Web.UI.UpdatePanelUpdateMode
  parent: System.Web.UI
  isExternal: false
  name: UpdatePanelUpdateMode
  nameWithType: UpdatePanelUpdateMode
  fullName: System.Web.UI.UpdatePanelUpdateMode
- uid: System.Web.UI.UpdatePanel.#ctor*
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: UpdatePanel
  nameWithType: UpdatePanel.UpdatePanel
- uid: System.Web.UI.UpdatePanel.Attributes*
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: Attributes
  nameWithType: UpdatePanel.Attributes
- uid: System.Web.UI.UpdatePanel.ChildrenAsTriggers*
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: ChildrenAsTriggers
  nameWithType: UpdatePanel.ChildrenAsTriggers
- uid: System.Web.UI.UpdatePanel.ContentTemplate*
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: ContentTemplate
  nameWithType: UpdatePanel.ContentTemplate
- uid: System.Web.UI.UpdatePanel.ContentTemplateContainer*
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: ContentTemplateContainer
  nameWithType: UpdatePanel.ContentTemplateContainer
- uid: System.Web.UI.UpdatePanel.Controls*
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: Controls
  nameWithType: UpdatePanel.Controls
- uid: System.Web.UI.UpdatePanel.CreateContentTemplateContainer*
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: CreateContentTemplateContainer
  nameWithType: UpdatePanel.CreateContentTemplateContainer
- uid: System.Web.UI.UpdatePanel.CreateControlCollection*
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: CreateControlCollection
  nameWithType: UpdatePanel.CreateControlCollection
- uid: System.Web.UI.UpdatePanel.Initialize*
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: Initialize
  nameWithType: UpdatePanel.Initialize
- uid: System.Web.UI.UpdatePanel.IsInPartialRendering*
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: IsInPartialRendering
  nameWithType: UpdatePanel.IsInPartialRendering
- uid: System.Web.UI.UpdatePanel.OnInit*
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: OnInit
  nameWithType: UpdatePanel.OnInit
- uid: System.Web.UI.UpdatePanel.OnLoad*
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: OnLoad
  nameWithType: UpdatePanel.OnLoad
- uid: System.Web.UI.UpdatePanel.OnPreRender*
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: OnPreRender
  nameWithType: UpdatePanel.OnPreRender
- uid: System.Web.UI.UpdatePanel.OnUnload*
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: OnUnload
  nameWithType: UpdatePanel.OnUnload
- uid: System.Web.UI.UpdatePanel.Render*
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: Render
  nameWithType: UpdatePanel.Render
- uid: System.Web.UI.UpdatePanel.RenderChildren*
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: RenderChildren
  nameWithType: UpdatePanel.RenderChildren
- uid: System.Web.UI.UpdatePanel.RenderMode*
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: RenderMode
  nameWithType: UpdatePanel.RenderMode
- uid: System.Web.UI.UpdatePanel.RequiresUpdate*
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: RequiresUpdate
  nameWithType: UpdatePanel.RequiresUpdate
- uid: System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#GetAttribute*
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: System.Web.UI.IAttributeAccessor.GetAttribute
  nameWithType: UpdatePanel.System.Web.UI.IAttributeAccessor.GetAttribute
- uid: System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#SetAttribute*
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: System.Web.UI.IAttributeAccessor.SetAttribute
  nameWithType: UpdatePanel.System.Web.UI.IAttributeAccessor.SetAttribute
- uid: System.Web.UI.UpdatePanel.Triggers*
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: Triggers
  nameWithType: UpdatePanel.Triggers
- uid: System.Web.UI.UpdatePanel.Update*
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: Update
  nameWithType: UpdatePanel.Update
- uid: System.Web.UI.UpdatePanel.UpdateMode*
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: UpdateMode
  nameWithType: UpdatePanel.UpdateMode
