### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.MouseEventArgs
  id: MouseEventArgs
  children:
  - System.Windows.Input.MouseEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32)
  - System.Windows.Input.MouseEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.StylusDevice)
  - System.Windows.Input.MouseEventArgs.GetPosition(System.Windows.IInputElement)
  - System.Windows.Input.MouseEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  - System.Windows.Input.MouseEventArgs.LeftButton
  - System.Windows.Input.MouseEventArgs.MiddleButton
  - System.Windows.Input.MouseEventArgs.MouseDevice
  - System.Windows.Input.MouseEventArgs.RightButton
  - System.Windows.Input.MouseEventArgs.StylusDevice
  - System.Windows.Input.MouseEventArgs.XButton1
  - System.Windows.Input.MouseEventArgs.XButton2
  langs:
  - csharp
  name: MouseEventArgs
  nameWithType: MouseEventArgs
  fullName: System.Windows.Input.MouseEventArgs
  type: Class
  summary: "Provides data for mouse related routed events that do not specifically involve mouse buttons or the mouse wheel, for example <xref href=&quot;System.Windows.UIElement.MouseMove&quot;></xref>."
  remarks: "This event data class is used with the following attached events.      -   <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=fullName>      -   <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=fullName>      -   <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=fullName>      -   <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=fullName>      -   <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=fullName>      -   <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=fullName>       This event data class is used with the following routed events. These routed events forward the previously listed attached events to make them more accessible to the general element model in [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)].      -   <xref:System.Windows.UIElement.MouseEnter?displayProperty=fullName>      -   <xref:System.Windows.UIElement.MouseLeave?displayProperty=fullName>      -   <xref:System.Windows.UIElement.MouseMove?displayProperty=fullName>      -   <xref:System.Windows.UIElement.PreviewMouseMove?displayProperty=fullName>      -   <xref:System.Windows.ContentElement.MouseEnter?displayProperty=fullName>      -   <xref:System.Windows.ContentElement.MouseLeave?displayProperty=fullName>      -   <xref:System.Windows.ContentElement.MouseMove?displayProperty=fullName>      -   <xref:System.Windows.ContentElement.PreviewMouseMove?displayProperty=fullName>       The attached events and the base element routed events share their event data, and the bubbling and tunneling versions of the routed events also share event data. This can affect the handled characteristics of the event as it travels the event route. For details, see [Input Overview](~/add/includes/ajax-current-ext-md.md).       Other than the <xref:System.Windows.RoutedEventArgs> properties that are relevant for all routed events, the most interesting properties of MouseEventArgs that you might use in a <xref:System.Windows.Input.MouseEventHandler> implementation are several properties that expose the current button state (such as <xref:System.Windows.Input.MouseEventArgs.LeftButton%2A>) and <xref:System.Windows.Input.MouseEventArgs.MouseDevice%2A>). <xref:System.Windows.Input.MouseEventArgs.MouseDevice%2A> is useful particularly because you can check <xref:System.Windows.Input.MouseDevice.Captured%2A> on it.       Note that events that specifically deal with mouse button events use a different event data class, <xref:System.Windows.Input.MouseButtonEventArgs>. The mouse button properties are available on MouseEventArgs in case there are input modes or interactions that involve the buttons even if you are handling a non-button event.       The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse."
  syntax:
    content: 'public class MouseEventArgs : System.Windows.Input.InputEventArgs'
  inheritance:
  - System.EventArgs
  - System.Windows.RoutedEventArgs
  - System.Windows.Input.InputEventArgs
  implements: []
  inheritedMembers:
  - System.Windows.Input.InputEventArgs.Device
  - System.Windows.Input.InputEventArgs.Timestamp
  - System.Windows.RoutedEventArgs.Handled
  - System.Windows.RoutedEventArgs.OnSetSource(System.Object)
  - System.Windows.RoutedEventArgs.OriginalSource
  - System.Windows.RoutedEventArgs.RoutedEvent
  - System.Windows.RoutedEventArgs.Source
  platform:
  - net462
- uid: System.Windows.Input.MouseEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32)
  id: '#ctor(System.Windows.Input.MouseDevice,System.Int32)'
  parent: System.Windows.Input.MouseEventArgs
  langs:
  - csharp
  name: MouseEventArgs(MouseDevice,Int32)
  nameWithType: MouseEventArgs.MouseEventArgs(MouseDevice,Int32)
  fullName: System.Windows.Input.MouseEventArgs.MouseEventArgs(MouseDevice,Int32)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Input.MouseEventArgs&quot;></xref> class using the specified <xref href=&quot;System.Windows.Input.MouseDevice&quot;></xref> and timestamp"
  syntax:
    content: public MouseEventArgs (System.Windows.Input.MouseDevice mouse, int timestamp);
    parameters:
    - id: mouse
      type: System.Windows.Input.MouseDevice
      description: "The mouse device associated with this event."
    - id: timestamp
      type: System.Int32
      description: "The time when the input occurred."
  overload: System.Windows.Input.MouseEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.StylusDevice)
  id: '#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.StylusDevice)'
  parent: System.Windows.Input.MouseEventArgs
  langs:
  - csharp
  name: MouseEventArgs(MouseDevice,Int32,StylusDevice)
  nameWithType: MouseEventArgs.MouseEventArgs(MouseDevice,Int32,StylusDevice)
  fullName: System.Windows.Input.MouseEventArgs.MouseEventArgs(MouseDevice,Int32,StylusDevice)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Input.MouseEventArgs&quot;></xref> class using the specified <xref href=&quot;System.Windows.Input.MouseDevice&quot;></xref>, timestamp, and <xref href=&quot;System.Windows.Input.StylusDevice&quot;></xref>."
  syntax:
    content: public MouseEventArgs (System.Windows.Input.MouseDevice mouse, int timestamp, System.Windows.Input.StylusDevice stylusDevice);
    parameters:
    - id: mouse
      type: System.Windows.Input.MouseDevice
      description: "The mouse device associated with this event."
    - id: timestamp
      type: System.Int32
      description: "The time when the input occurred."
    - id: stylusDevice
      type: System.Windows.Input.StylusDevice
      description: "The logical stylus device associated with this event."
  overload: System.Windows.Input.MouseEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseEventArgs.GetPosition(System.Windows.IInputElement)
  id: GetPosition(System.Windows.IInputElement)
  parent: System.Windows.Input.MouseEventArgs
  langs:
  - csharp
  name: GetPosition(IInputElement)
  nameWithType: MouseEventArgs.GetPosition(IInputElement)
  fullName: System.Windows.Input.MouseEventArgs.GetPosition(IInputElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Returns the position of the mouse pointer relative to the specified element."
  remarks: "The point (0,0) is the upper-left corner of the frame of reference.       The static <xref:System.Windows.Input.Mouse.GetPosition%2A?displayProperty=fullName> method can also be used to obtain the position of the mouse."
  syntax:
    content: public System.Windows.Point GetPosition (System.Windows.IInputElement relativeTo);
    parameters:
    - id: relativeTo
      type: System.Windows.IInputElement
      description: "The element to use as the frame of reference for calculating the position of the mouse pointer."
    return:
      type: System.Windows.Point
      description: "The x- and y-coordinates of the mouse pointer position relative to the specified object."
  overload: System.Windows.Input.MouseEventArgs.GetPosition*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  id: InvokeEventHandler(System.Delegate,System.Object)
  parent: System.Windows.Input.MouseEventArgs
  langs:
  - csharp
  name: InvokeEventHandler(Delegate,Object)
  nameWithType: MouseEventArgs.InvokeEventHandler(Delegate,Object)
  fullName: System.Windows.Input.MouseEventArgs.InvokeEventHandler(Delegate,Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Invokes event handlers in a type-specific way, which can increase event system efficiency."
  remarks: "This implementation casts the generic handler as a <xref:System.Windows.Input.MouseEventHandler> and then invokes it. For details on this implementation pattern and the reasons for it, see <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> and [Routed Events Overview](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);
    parameters:
    - id: genericHandler
      type: System.Delegate
      description: "The generic handler to call in a type-specific way."
    - id: genericTarget
      type: System.Object
      description: "The target to call the handler on."
  overload: System.Windows.Input.MouseEventArgs.InvokeEventHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseEventArgs.LeftButton
  id: LeftButton
  parent: System.Windows.Input.MouseEventArgs
  langs:
  - csharp
  name: LeftButton
  nameWithType: MouseEventArgs.LeftButton
  fullName: System.Windows.Input.MouseEventArgs.LeftButton
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Gets the current state of the left mouse button."
  remarks: "The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse."
  example:
  - "The following example prints a message if the state of the LeftButton property is <xref:System.Windows.Input.MouseButtonState>.  \n  \n [!code-vb[mousesnippetsample#MouseEventArgsLeftButtonDown](~/add/codesnippet/visualbasic/mousesnippetsample/window1.xaml.vb#mouseeventargsleftbuttondown)]\n [!code-cs[mousesnippetsample#MouseEventArgsLeftButtonDown](~/add/codesnippet/csharp/MouseSnippetSample/Window1.xaml.cs#mouseeventargsleftbuttondown)]"
  syntax:
    content: public System.Windows.Input.MouseButtonState LeftButton { get; }
    return:
      type: System.Windows.Input.MouseButtonState
      description: "The current state of the left mouse button, which is either <xref href=&quot;System.Windows.Input.MouseButtonState&quot;></xref> or <xref href=&quot;System.Windows.Input.MouseButtonState&quot;></xref>.  There is no default value."
  overload: System.Windows.Input.MouseEventArgs.LeftButton*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseEventArgs.MiddleButton
  id: MiddleButton
  parent: System.Windows.Input.MouseEventArgs
  langs:
  - csharp
  name: MiddleButton
  nameWithType: MouseEventArgs.MiddleButton
  fullName: System.Windows.Input.MouseEventArgs.MiddleButton
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Gets the current state of the middle mouse button."
  remarks: "The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse."
  example:
  - "The following example prints a message if the state of the MiddleButton property is <xref:System.Windows.Input.MouseButtonState>.  \n  \n [!code-vb[mousesnippetsample#MouseEventArgsMiddleButtonDown](~/add/codesnippet/visualbasic/mousesnippetsample/window1.xaml.vb#mouseeventargsmiddlebuttondown)]\n [!code-cs[mousesnippetsample#MouseEventArgsMiddleButtonDown](~/add/codesnippet/csharp/MouseSnippetSample/Window1.xaml.cs#mouseeventargsmiddlebuttondown)]"
  syntax:
    content: public System.Windows.Input.MouseButtonState MiddleButton { get; }
    return:
      type: System.Windows.Input.MouseButtonState
      description: "The current state of the middle mouse button, which is either <xref href=&quot;System.Windows.Input.MouseButtonState&quot;></xref> or <xref href=&quot;System.Windows.Input.MouseButtonState&quot;></xref>. There is no default value."
  overload: System.Windows.Input.MouseEventArgs.MiddleButton*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseEventArgs.MouseDevice
  id: MouseDevice
  parent: System.Windows.Input.MouseEventArgs
  langs:
  - csharp
  name: MouseDevice
  nameWithType: MouseEventArgs.MouseDevice
  fullName: System.Windows.Input.MouseEventArgs.MouseDevice
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Gets the mouse device associated with this event."
  remarks: "The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse."
  example:
  - "The following example gets the <xref:System.Windows.Input.MouseDevice> associated with an input event.  \n  \n [!code-vb[mousesnippetsample#MouseEventArgsMouseDevice](~/add/codesnippet/visualbasic/mousesnippetsample/window1.xaml.vb#mouseeventargsmousedevice)]\n [!code-cs[mousesnippetsample#MouseEventArgsMouseDevice](~/add/codesnippet/csharp/MouseSnippetSample/Window1.xaml.cs#mouseeventargsmousedevice)]"
  syntax:
    content: public System.Windows.Input.MouseDevice MouseDevice { get; }
    return:
      type: System.Windows.Input.MouseDevice
      description: "The mouse device associated with this event.  There is no default value."
  overload: System.Windows.Input.MouseEventArgs.MouseDevice*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseEventArgs.RightButton
  id: RightButton
  parent: System.Windows.Input.MouseEventArgs
  langs:
  - csharp
  name: RightButton
  nameWithType: MouseEventArgs.RightButton
  fullName: System.Windows.Input.MouseEventArgs.RightButton
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Gets the current state of the right mouse button."
  remarks: "The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse."
  example:
  - "The following example prints a message if the state of the RightButton property is <xref:System.Windows.Input.MouseButtonState>.  \n  \n [!code-vb[mousesnippetsample#MouseEventArgsRightButtonDown](~/add/codesnippet/visualbasic/mousesnippetsample/window1.xaml.vb#mouseeventargsrightbuttondown)]\n [!code-cs[mousesnippetsample#MouseEventArgsRightButtonDown](~/add/codesnippet/csharp/MouseSnippetSample/Window1.xaml.cs#mouseeventargsrightbuttondown)]"
  syntax:
    content: public System.Windows.Input.MouseButtonState RightButton { get; }
    return:
      type: System.Windows.Input.MouseButtonState
      description: "The current state of the right mouse button, which is either <xref href=&quot;System.Windows.Input.MouseButtonState&quot;></xref> or <xref href=&quot;System.Windows.Input.MouseButtonState&quot;></xref>.  There is no default value."
  overload: System.Windows.Input.MouseEventArgs.RightButton*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseEventArgs.StylusDevice
  id: StylusDevice
  parent: System.Windows.Input.MouseEventArgs
  langs:
  - csharp
  name: StylusDevice
  nameWithType: MouseEventArgs.StylusDevice
  fullName: System.Windows.Input.MouseEventArgs.StylusDevice
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Gets the stylus device associated with this event."
  remarks: ''
  example:
  - "The following example shows how to retrieve the <xref:System.Windows.Input.StylusDevice> associated with an event.  \n  \n [!code-vb[mousesnippetsample#MouseEventArgsStylusDevice](~/add/codesnippet/visualbasic/mousesnippetsample/window1.xaml.vb#mouseeventargsstylusdevice)]\n [!code-cs[mousesnippetsample#MouseEventArgsStylusDevice](~/add/codesnippet/csharp/MouseSnippetSample/Window1.xaml.cs#mouseeventargsstylusdevice)]"
  syntax:
    content: public System.Windows.Input.StylusDevice StylusDevice { get; }
    return:
      type: System.Windows.Input.StylusDevice
      description: "The stylus associated with this event.  There is no default value."
  overload: System.Windows.Input.MouseEventArgs.StylusDevice*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseEventArgs.XButton1
  id: XButton1
  parent: System.Windows.Input.MouseEventArgs
  langs:
  - csharp
  name: XButton1
  nameWithType: MouseEventArgs.XButton1
  fullName: System.Windows.Input.MouseEventArgs.XButton1
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Gets the current state of the first extended mouse button."
  remarks: "The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse."
  example:
  - "The following example prints a message if the state of the XButton1 property is <xref:System.Windows.Input.MouseButtonState>.  \n  \n [!code-vb[mousesnippetsample#MouseEventArgsXButton1ButtonDown](~/add/codesnippet/visualbasic/mousesnippetsample/window1.xaml.vb#mouseeventargsxbutton1buttondown)]\n [!code-cs[mousesnippetsample#MouseEventArgsXButton1ButtonDown](~/add/codesnippet/csharp/MouseSnippetSample/Window1.xaml.cs#mouseeventargsxbutton1buttondown)]"
  syntax:
    content: public System.Windows.Input.MouseButtonState XButton1 { get; }
    return:
      type: System.Windows.Input.MouseButtonState
      description: "The current state of the first extended mouse button, which is either <xref href=&quot;System.Windows.Input.MouseButtonState&quot;></xref> or <xref href=&quot;System.Windows.Input.MouseButtonState&quot;></xref>.  There is no default value."
  overload: System.Windows.Input.MouseEventArgs.XButton1*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseEventArgs.XButton2
  id: XButton2
  parent: System.Windows.Input.MouseEventArgs
  langs:
  - csharp
  name: XButton2
  nameWithType: MouseEventArgs.XButton2
  fullName: System.Windows.Input.MouseEventArgs.XButton2
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "Gets the state of the second extended mouse button."
  remarks: "The <xref:System.Windows.Input.Mouse> class provides additional properties and methods for determining the state of the mouse."
  example:
  - "The following example prints a message if the state of the XButton2 property is <xref:System.Windows.Input.MouseButtonState>.  \n  \n [!code-vb[mousesnippetsample#MouseEventArgsXButton2ButtonDown](~/add/codesnippet/visualbasic/mousesnippetsample/window1.xaml.vb#mouseeventargsxbutton2buttondown)]\n [!code-cs[mousesnippetsample#MouseEventArgsXButton2ButtonDown](~/add/codesnippet/csharp/MouseSnippetSample/Window1.xaml.cs#mouseeventargsxbutton2buttondown)]"
  syntax:
    content: public System.Windows.Input.MouseButtonState XButton2 { get; }
    return:
      type: System.Windows.Input.MouseButtonState
      description: "The current state of the second extended mouse button, which is either <xref href=&quot;System.Windows.Input.MouseButtonState&quot;></xref> or <xref href=&quot;System.Windows.Input.MouseButtonState&quot;></xref>.  There is no default value."
  overload: System.Windows.Input.MouseEventArgs.XButton2*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Input.InputEventArgs
  isExternal: false
  name: System.Windows.Input.InputEventArgs
- uid: System.Windows.Input.MouseEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32)
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: MouseEventArgs(MouseDevice,Int32)
  nameWithType: MouseEventArgs.MouseEventArgs(MouseDevice,Int32)
  fullName: System.Windows.Input.MouseEventArgs.MouseEventArgs(MouseDevice,Int32)
- uid: System.Windows.Input.MouseDevice
  parent: System.Windows.Input
  isExternal: false
  name: MouseDevice
  nameWithType: MouseDevice
  fullName: System.Windows.Input.MouseDevice
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Input.MouseEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.StylusDevice)
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: MouseEventArgs(MouseDevice,Int32,StylusDevice)
  nameWithType: MouseEventArgs.MouseEventArgs(MouseDevice,Int32,StylusDevice)
  fullName: System.Windows.Input.MouseEventArgs.MouseEventArgs(MouseDevice,Int32,StylusDevice)
- uid: System.Windows.Input.StylusDevice
  parent: System.Windows.Input
  isExternal: false
  name: StylusDevice
  nameWithType: StylusDevice
  fullName: System.Windows.Input.StylusDevice
- uid: System.Windows.Input.MouseEventArgs.GetPosition(System.Windows.IInputElement)
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: GetPosition(IInputElement)
  nameWithType: MouseEventArgs.GetPosition(IInputElement)
  fullName: System.Windows.Input.MouseEventArgs.GetPosition(IInputElement)
- uid: System.Windows.Point
  parent: System.Windows
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point
- uid: System.Windows.IInputElement
  parent: System.Windows
  isExternal: false
  name: IInputElement
  nameWithType: IInputElement
  fullName: System.Windows.IInputElement
- uid: System.Windows.Input.MouseEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: InvokeEventHandler(Delegate,Object)
  nameWithType: MouseEventArgs.InvokeEventHandler(Delegate,Object)
  fullName: System.Windows.Input.MouseEventArgs.InvokeEventHandler(Delegate,Object)
- uid: System.Delegate
  parent: System
  isExternal: true
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Input.MouseEventArgs.LeftButton
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: LeftButton
  nameWithType: MouseEventArgs.LeftButton
  fullName: System.Windows.Input.MouseEventArgs.LeftButton
- uid: System.Windows.Input.MouseButtonState
  parent: System.Windows.Input
  isExternal: false
  name: MouseButtonState
  nameWithType: MouseButtonState
  fullName: System.Windows.Input.MouseButtonState
- uid: System.Windows.Input.MouseEventArgs.MiddleButton
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: MiddleButton
  nameWithType: MouseEventArgs.MiddleButton
  fullName: System.Windows.Input.MouseEventArgs.MiddleButton
- uid: System.Windows.Input.MouseEventArgs.MouseDevice
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: MouseDevice
  nameWithType: MouseEventArgs.MouseDevice
  fullName: System.Windows.Input.MouseEventArgs.MouseDevice
- uid: System.Windows.Input.MouseEventArgs.RightButton
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: RightButton
  nameWithType: MouseEventArgs.RightButton
  fullName: System.Windows.Input.MouseEventArgs.RightButton
- uid: System.Windows.Input.MouseEventArgs.StylusDevice
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: StylusDevice
  nameWithType: MouseEventArgs.StylusDevice
  fullName: System.Windows.Input.MouseEventArgs.StylusDevice
- uid: System.Windows.Input.MouseEventArgs.XButton1
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: XButton1
  nameWithType: MouseEventArgs.XButton1
  fullName: System.Windows.Input.MouseEventArgs.XButton1
- uid: System.Windows.Input.MouseEventArgs.XButton2
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: XButton2
  nameWithType: MouseEventArgs.XButton2
  fullName: System.Windows.Input.MouseEventArgs.XButton2
- uid: System.Windows.Input.MouseEventArgs.#ctor*
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: MouseEventArgs
  nameWithType: MouseEventArgs.MouseEventArgs
- uid: System.Windows.Input.MouseEventArgs.GetPosition*
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: GetPosition
  nameWithType: MouseEventArgs.GetPosition
- uid: System.Windows.Input.MouseEventArgs.InvokeEventHandler*
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: InvokeEventHandler
  nameWithType: MouseEventArgs.InvokeEventHandler
- uid: System.Windows.Input.MouseEventArgs.LeftButton*
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: LeftButton
  nameWithType: MouseEventArgs.LeftButton
- uid: System.Windows.Input.MouseEventArgs.MiddleButton*
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: MiddleButton
  nameWithType: MouseEventArgs.MiddleButton
- uid: System.Windows.Input.MouseEventArgs.MouseDevice*
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: MouseDevice
  nameWithType: MouseEventArgs.MouseDevice
- uid: System.Windows.Input.MouseEventArgs.RightButton*
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: RightButton
  nameWithType: MouseEventArgs.RightButton
- uid: System.Windows.Input.MouseEventArgs.StylusDevice*
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: StylusDevice
  nameWithType: MouseEventArgs.StylusDevice
- uid: System.Windows.Input.MouseEventArgs.XButton1*
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: XButton1
  nameWithType: MouseEventArgs.XButton1
- uid: System.Windows.Input.MouseEventArgs.XButton2*
  parent: System.Windows.Input.MouseEventArgs
  isExternal: false
  name: XButton2
  nameWithType: MouseEventArgs.XButton2
