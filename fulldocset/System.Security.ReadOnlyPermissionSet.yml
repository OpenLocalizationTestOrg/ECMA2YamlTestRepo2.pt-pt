### YamlMime:ManagedReference
items:
- uid: System.Security.ReadOnlyPermissionSet
  id: ReadOnlyPermissionSet
  children:
  - System.Security.ReadOnlyPermissionSet.#ctor(System.Security.SecurityElement)
  - System.Security.ReadOnlyPermissionSet.AddPermissionImpl(System.Security.IPermission)
  - System.Security.ReadOnlyPermissionSet.Copy
  - System.Security.ReadOnlyPermissionSet.FromXml(System.Security.SecurityElement)
  - System.Security.ReadOnlyPermissionSet.GetEnumeratorImpl
  - System.Security.ReadOnlyPermissionSet.GetPermissionImpl(System.Type)
  - System.Security.ReadOnlyPermissionSet.IsReadOnly
  - System.Security.ReadOnlyPermissionSet.RemovePermissionImpl(System.Type)
  - System.Security.ReadOnlyPermissionSet.SetPermissionImpl(System.Security.IPermission)
  - System.Security.ReadOnlyPermissionSet.ToXml
  langs:
  - csharp
  name: ReadOnlyPermissionSet
  nameWithType: ReadOnlyPermissionSet
  fullName: System.Security.ReadOnlyPermissionSet
  type: Class
  summary: "Represents a read-only collection that can contain many different types of permissions."
  remarks: "Read-only permission sets are created from explicit XML and cannot be modified after creation. This restriction ensures that the permission set will be restored to the same XML encoding that it was originally created from. Attempting to add or remove a permission from the ReadOnlyPermissionSet results in an <xref:System.InvalidOperationException>.       Note that any permission you obtain from the ReadOnlyPermissionSet is only a copy of the permission. If the copy is mutable and is changed, the permission that is in the ReadOnlyPermissionSet is not changed."
  syntax:
    content: 'public sealed class ReadOnlyPermissionSet : System.Security.PermissionSet'
  inheritance:
  - System.Object
  - System.Security.PermissionSet
  implements: []
  inheritedMembers:
  - System.Security.PermissionSet.AddPermission(System.Security.IPermission)
  - System.Security.PermissionSet.Assert
  - System.Security.PermissionSet.ContainsNonCodeAccessPermissions
  - System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)
  - System.Security.PermissionSet.CopyTo(System.Array,System.Int32)
  - System.Security.PermissionSet.Count
  - System.Security.PermissionSet.Demand
  - System.Security.PermissionSet.Deny
  - System.Security.PermissionSet.Equals(System.Object)
  - System.Security.PermissionSet.GetEnumerator
  - System.Security.PermissionSet.GetHashCode
  - System.Security.PermissionSet.GetPermission(System.Type)
  - System.Security.PermissionSet.Intersect(System.Security.PermissionSet)
  - System.Security.PermissionSet.IsEmpty
  - System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)
  - System.Security.PermissionSet.IsSynchronized
  - System.Security.PermissionSet.IsUnrestricted
  - System.Security.PermissionSet.PermitOnly
  - System.Security.PermissionSet.RemovePermission(System.Type)
  - System.Security.PermissionSet.RevertAssert
  - System.Security.PermissionSet.SetPermission(System.Security.IPermission)
  - System.Security.PermissionSet.SyncRoot
  - System.Security.PermissionSet.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)
  - System.Security.PermissionSet.ToString
  - System.Security.PermissionSet.Union(System.Security.PermissionSet)
  platform:
  - net462
- uid: System.Security.ReadOnlyPermissionSet.#ctor(System.Security.SecurityElement)
  id: '#ctor(System.Security.SecurityElement)'
  parent: System.Security.ReadOnlyPermissionSet
  langs:
  - csharp
  name: ReadOnlyPermissionSet(SecurityElement)
  nameWithType: ReadOnlyPermissionSet.ReadOnlyPermissionSet(SecurityElement)
  fullName: System.Security.ReadOnlyPermissionSet.ReadOnlyPermissionSet(SecurityElement)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Initializes a new instance of the <xref href=&quot;System.Security.ReadOnlyPermissionSet&quot;></xref> class."
  syntax:
    content: public ReadOnlyPermissionSet (System.Security.SecurityElement permissionSetXml);
    parameters:
    - id: permissionSetXml
      type: System.Security.SecurityElement
      description: "The XML element from which to take the value of the new <xref href=&quot;System.Security.ReadOnlyPermissionSet&quot;></xref>."
  overload: System.Security.ReadOnlyPermissionSet.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>permissionSetXml</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.ReadOnlyPermissionSet.AddPermissionImpl(System.Security.IPermission)
  id: AddPermissionImpl(System.Security.IPermission)
  parent: System.Security.ReadOnlyPermissionSet
  langs:
  - csharp
  name: AddPermissionImpl(IPermission)
  nameWithType: ReadOnlyPermissionSet.AddPermissionImpl(IPermission)
  fullName: System.Security.ReadOnlyPermissionSet.AddPermissionImpl(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  syntax:
    content: protected override System.Security.IPermission AddPermissionImpl (System.Security.IPermission perm);
    parameters:
    - id: perm
      type: System.Security.IPermission
      description: "To be added."
    return:
      type: System.Security.IPermission
      description: "To be added."
  overload: System.Security.ReadOnlyPermissionSet.AddPermissionImpl*
  exceptions: []
  platform:
  - net462
- uid: System.Security.ReadOnlyPermissionSet.Copy
  id: Copy
  parent: System.Security.ReadOnlyPermissionSet
  langs:
  - csharp
  name: Copy()
  nameWithType: ReadOnlyPermissionSet.Copy()
  fullName: System.Security.ReadOnlyPermissionSet.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Creates a copy of the <xref href=&quot;System.Security.ReadOnlyPermissionSet&quot;></xref>."
  syntax:
    content: public override System.Security.PermissionSet Copy ();
    parameters: []
    return:
      type: System.Security.PermissionSet
      description: "A copy of the read-only permission set."
  overload: System.Security.ReadOnlyPermissionSet.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.ReadOnlyPermissionSet.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.ReadOnlyPermissionSet
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: ReadOnlyPermissionSet.FromXml(SecurityElement)
  fullName: System.Security.ReadOnlyPermissionSet.FromXml(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Reconstructs a security object with a specified state from an XML encoding."
  remarks: "This override of <xref:System.Security.PermissionSet.FromXml%2A?displayProperty=fullName> is intended to be called by the base class <xref:System.Security.PermissionSet> when it is deserializing the permission set. An exception is thrown if you attempt to call FromXml directly. You cannot modify a read-only permission set with a FromXml call."
  syntax:
    content: public override void FromXml (System.Security.SecurityElement et);
    parameters:
    - id: et
      type: System.Security.SecurityElement
      description: "The XML encoding to use to reconstruct the security object."
  overload: System.Security.ReadOnlyPermissionSet.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>et</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>et</code> parameter is not a valid permission element.       -or-       The <code>et</code> parameter&quot;s version number is not supported."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The object is not being deserialized; that is, <xref href=&quot;System.Security.PermissionSet&quot;></xref> did not call back into FromXml during deserialization."
  platform:
  - net462
- uid: System.Security.ReadOnlyPermissionSet.GetEnumeratorImpl
  id: GetEnumeratorImpl
  parent: System.Security.ReadOnlyPermissionSet
  langs:
  - csharp
  name: GetEnumeratorImpl()
  nameWithType: ReadOnlyPermissionSet.GetEnumeratorImpl()
  fullName: System.Security.ReadOnlyPermissionSet.GetEnumeratorImpl()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  syntax:
    content: protected override System.Collections.IEnumerator GetEnumeratorImpl ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "To be added."
  overload: System.Security.ReadOnlyPermissionSet.GetEnumeratorImpl*
  exceptions: []
  platform:
  - net462
- uid: System.Security.ReadOnlyPermissionSet.GetPermissionImpl(System.Type)
  id: GetPermissionImpl(System.Type)
  parent: System.Security.ReadOnlyPermissionSet
  langs:
  - csharp
  name: GetPermissionImpl(Type)
  nameWithType: ReadOnlyPermissionSet.GetPermissionImpl(Type)
  fullName: System.Security.ReadOnlyPermissionSet.GetPermissionImpl(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  syntax:
    content: protected override System.Security.IPermission GetPermissionImpl (Type permClass);
    parameters:
    - id: permClass
      type: System.Type
      description: "To be added."
    return:
      type: System.Security.IPermission
      description: "To be added."
  overload: System.Security.ReadOnlyPermissionSet.GetPermissionImpl*
  exceptions: []
  platform:
  - net462
- uid: System.Security.ReadOnlyPermissionSet.IsReadOnly
  id: IsReadOnly
  parent: System.Security.ReadOnlyPermissionSet
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: ReadOnlyPermissionSet.IsReadOnly
  fullName: System.Security.ReadOnlyPermissionSet.IsReadOnly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Gets a value that indicates whether the collection is read-only."
  remarks: "A <xref:System.Security.ReadOnlyPermissionSet> is always read-only, so this value must always be `true`."
  syntax:
    content: public override bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Security.ReadOnlyPermissionSet.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Security.ReadOnlyPermissionSet.RemovePermissionImpl(System.Type)
  id: RemovePermissionImpl(System.Type)
  parent: System.Security.ReadOnlyPermissionSet
  langs:
  - csharp
  name: RemovePermissionImpl(Type)
  nameWithType: ReadOnlyPermissionSet.RemovePermissionImpl(Type)
  fullName: System.Security.ReadOnlyPermissionSet.RemovePermissionImpl(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  syntax:
    content: protected override System.Security.IPermission RemovePermissionImpl (Type permClass);
    parameters:
    - id: permClass
      type: System.Type
      description: "To be added."
    return:
      type: System.Security.IPermission
      description: "To be added."
  overload: System.Security.ReadOnlyPermissionSet.RemovePermissionImpl*
  exceptions: []
  platform:
  - net462
- uid: System.Security.ReadOnlyPermissionSet.SetPermissionImpl(System.Security.IPermission)
  id: SetPermissionImpl(System.Security.IPermission)
  parent: System.Security.ReadOnlyPermissionSet
  langs:
  - csharp
  name: SetPermissionImpl(IPermission)
  nameWithType: ReadOnlyPermissionSet.SetPermissionImpl(IPermission)
  fullName: System.Security.ReadOnlyPermissionSet.SetPermissionImpl(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  syntax:
    content: protected override System.Security.IPermission SetPermissionImpl (System.Security.IPermission perm);
    parameters:
    - id: perm
      type: System.Security.IPermission
      description: "To be added."
    return:
      type: System.Security.IPermission
      description: "To be added."
  overload: System.Security.ReadOnlyPermissionSet.SetPermissionImpl*
  exceptions: []
  platform:
  - net462
- uid: System.Security.ReadOnlyPermissionSet.ToXml
  id: ToXml
  parent: System.Security.ReadOnlyPermissionSet
  langs:
  - csharp
  name: ToXml()
  nameWithType: ReadOnlyPermissionSet.ToXml()
  fullName: System.Security.ReadOnlyPermissionSet.ToXml()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Creates an XML encoding of the security object and its current state."
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "An XML encoding of the security object, including any state information."
  overload: System.Security.ReadOnlyPermissionSet.ToXml*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.PermissionSet
  isExternal: false
  name: System.Security.PermissionSet
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.ReadOnlyPermissionSet.#ctor(System.Security.SecurityElement)
  parent: System.Security.ReadOnlyPermissionSet
  isExternal: false
  name: ReadOnlyPermissionSet(SecurityElement)
  nameWithType: ReadOnlyPermissionSet.ReadOnlyPermissionSet(SecurityElement)
  fullName: System.Security.ReadOnlyPermissionSet.ReadOnlyPermissionSet(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.ReadOnlyPermissionSet.AddPermissionImpl(System.Security.IPermission)
  parent: System.Security.ReadOnlyPermissionSet
  isExternal: false
  name: AddPermissionImpl(IPermission)
  nameWithType: ReadOnlyPermissionSet.AddPermissionImpl(IPermission)
  fullName: System.Security.ReadOnlyPermissionSet.AddPermissionImpl(IPermission)
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.ReadOnlyPermissionSet.Copy
  parent: System.Security.ReadOnlyPermissionSet
  isExternal: false
  name: Copy()
  nameWithType: ReadOnlyPermissionSet.Copy()
  fullName: System.Security.ReadOnlyPermissionSet.Copy()
- uid: System.Security.ReadOnlyPermissionSet.FromXml(System.Security.SecurityElement)
  parent: System.Security.ReadOnlyPermissionSet
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: ReadOnlyPermissionSet.FromXml(SecurityElement)
  fullName: System.Security.ReadOnlyPermissionSet.FromXml(SecurityElement)
- uid: System.Security.ReadOnlyPermissionSet.GetEnumeratorImpl
  parent: System.Security.ReadOnlyPermissionSet
  isExternal: false
  name: GetEnumeratorImpl()
  nameWithType: ReadOnlyPermissionSet.GetEnumeratorImpl()
  fullName: System.Security.ReadOnlyPermissionSet.GetEnumeratorImpl()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Security.ReadOnlyPermissionSet.GetPermissionImpl(System.Type)
  parent: System.Security.ReadOnlyPermissionSet
  isExternal: false
  name: GetPermissionImpl(Type)
  nameWithType: ReadOnlyPermissionSet.GetPermissionImpl(Type)
  fullName: System.Security.ReadOnlyPermissionSet.GetPermissionImpl(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.ReadOnlyPermissionSet.IsReadOnly
  parent: System.Security.ReadOnlyPermissionSet
  isExternal: false
  name: IsReadOnly
  nameWithType: ReadOnlyPermissionSet.IsReadOnly
  fullName: System.Security.ReadOnlyPermissionSet.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.ReadOnlyPermissionSet.RemovePermissionImpl(System.Type)
  parent: System.Security.ReadOnlyPermissionSet
  isExternal: false
  name: RemovePermissionImpl(Type)
  nameWithType: ReadOnlyPermissionSet.RemovePermissionImpl(Type)
  fullName: System.Security.ReadOnlyPermissionSet.RemovePermissionImpl(Type)
- uid: System.Security.ReadOnlyPermissionSet.SetPermissionImpl(System.Security.IPermission)
  parent: System.Security.ReadOnlyPermissionSet
  isExternal: false
  name: SetPermissionImpl(IPermission)
  nameWithType: ReadOnlyPermissionSet.SetPermissionImpl(IPermission)
  fullName: System.Security.ReadOnlyPermissionSet.SetPermissionImpl(IPermission)
- uid: System.Security.ReadOnlyPermissionSet.ToXml
  parent: System.Security.ReadOnlyPermissionSet
  isExternal: false
  name: ToXml()
  nameWithType: ReadOnlyPermissionSet.ToXml()
  fullName: System.Security.ReadOnlyPermissionSet.ToXml()
- uid: System.Security.ReadOnlyPermissionSet.#ctor*
  parent: System.Security.ReadOnlyPermissionSet
  isExternal: false
  name: ReadOnlyPermissionSet
  nameWithType: ReadOnlyPermissionSet.ReadOnlyPermissionSet
- uid: System.Security.ReadOnlyPermissionSet.AddPermissionImpl*
  parent: System.Security.ReadOnlyPermissionSet
  isExternal: false
  name: AddPermissionImpl
  nameWithType: ReadOnlyPermissionSet.AddPermissionImpl
- uid: System.Security.ReadOnlyPermissionSet.Copy*
  parent: System.Security.ReadOnlyPermissionSet
  isExternal: false
  name: Copy
  nameWithType: ReadOnlyPermissionSet.Copy
- uid: System.Security.ReadOnlyPermissionSet.FromXml*
  parent: System.Security.ReadOnlyPermissionSet
  isExternal: false
  name: FromXml
  nameWithType: ReadOnlyPermissionSet.FromXml
- uid: System.Security.ReadOnlyPermissionSet.GetEnumeratorImpl*
  parent: System.Security.ReadOnlyPermissionSet
  isExternal: false
  name: GetEnumeratorImpl
  nameWithType: ReadOnlyPermissionSet.GetEnumeratorImpl
- uid: System.Security.ReadOnlyPermissionSet.GetPermissionImpl*
  parent: System.Security.ReadOnlyPermissionSet
  isExternal: false
  name: GetPermissionImpl
  nameWithType: ReadOnlyPermissionSet.GetPermissionImpl
- uid: System.Security.ReadOnlyPermissionSet.IsReadOnly*
  parent: System.Security.ReadOnlyPermissionSet
  isExternal: false
  name: IsReadOnly
  nameWithType: ReadOnlyPermissionSet.IsReadOnly
- uid: System.Security.ReadOnlyPermissionSet.RemovePermissionImpl*
  parent: System.Security.ReadOnlyPermissionSet
  isExternal: false
  name: RemovePermissionImpl
  nameWithType: ReadOnlyPermissionSet.RemovePermissionImpl
- uid: System.Security.ReadOnlyPermissionSet.SetPermissionImpl*
  parent: System.Security.ReadOnlyPermissionSet
  isExternal: false
  name: SetPermissionImpl
  nameWithType: ReadOnlyPermissionSet.SetPermissionImpl
- uid: System.Security.ReadOnlyPermissionSet.ToXml*
  parent: System.Security.ReadOnlyPermissionSet
  isExternal: false
  name: ToXml
  nameWithType: ReadOnlyPermissionSet.ToXml
