### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.QueryContinueDragEventArgs
  id: QueryContinueDragEventArgs
  children:
  - System.Windows.Forms.QueryContinueDragEventArgs.#ctor(System.Int32,System.Boolean,System.Windows.Forms.DragAction)
  - System.Windows.Forms.QueryContinueDragEventArgs.Action
  - System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed
  - System.Windows.Forms.QueryContinueDragEventArgs.KeyState
  langs:
  - csharp
  name: QueryContinueDragEventArgs
  nameWithType: QueryContinueDragEventArgs
  fullName: System.Windows.Forms.QueryContinueDragEventArgs
  type: Class
  summary: "Provides data for the <xref href=&quot;System.Windows.Forms.Control.QueryContinueDrag&quot;></xref> event."
  remarks: "The <xref:System.Windows.Forms.Control.QueryContinueDrag> event occurs during a drag-and-drop operation and allows the drag source to determine whether the drag-and-drop operation should be canceled. A QueryContinueDragEventArgs specifies whether and how the drag-and-drop operation should proceed, whether any modifier keys are pressed, and whether the user has pressed the ESC key.       By default, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event sets <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> to <xref:System.Windows.Forms.DragAction?displayProperty=fullName> if the ESC key was pressed and sets `Action` to <xref:System.Windows.Forms.DragAction?displayProperty=fullName> if the left, middle, or right mouse button is pressed.       For information about the event model, see [Events](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "This code excerpt demonstrates using the QueryContinueDragEventArgs class with the <xref:System.Windows.Forms.Control.QueryContinueDrag> event. See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.  \n  \n [!code-cpp[System.Windows.Forms.Control.DoDragDrop#6](~/add/codesnippet/cpp/t-system.windows.forms.q_4_1.cpp)]\n [!code-vb[System.Windows.Forms.Control.DoDragDrop#6](~/add/codesnippet/visualbasic/t-system.windows.forms.q_4_1.vb)]\n [!code-cs[System.Windows.Forms.Control.DoDragDrop#6](~/add/codesnippet/csharp/t-system.windows.forms.q_4_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class QueryContinueDragEventArgs : EventArgs
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.QueryContinueDragEventArgs.#ctor(System.Int32,System.Boolean,System.Windows.Forms.DragAction)
  id: '#ctor(System.Int32,System.Boolean,System.Windows.Forms.DragAction)'
  parent: System.Windows.Forms.QueryContinueDragEventArgs
  langs:
  - csharp
  name: QueryContinueDragEventArgs(Int32,Boolean,DragAction)
  nameWithType: QueryContinueDragEventArgs.QueryContinueDragEventArgs(Int32,Boolean,DragAction)
  fullName: System.Windows.Forms.QueryContinueDragEventArgs.QueryContinueDragEventArgs(Int32,Boolean,DragAction)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Initializes a new instance of the <xref href=&quot;System.Windows.Forms.QueryContinueDragEventArgs&quot;></xref> class."
  syntax:
    content: public QueryContinueDragEventArgs (int keyState, bool escapePressed, System.Windows.Forms.DragAction action);
    parameters:
    - id: keyState
      type: System.Int32
      description: "The current state of the SHIFT, CTRL, and ALT keys."
    - id: escapePressed
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the ESC key was pressed; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: action
      type: System.Windows.Forms.DragAction
      description: "A <xref href=&quot;System.Windows.Forms.DragAction&quot;></xref> value."
  overload: System.Windows.Forms.QueryContinueDragEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.QueryContinueDragEventArgs.Action
  id: Action
  parent: System.Windows.Forms.QueryContinueDragEventArgs
  langs:
  - csharp
  name: Action
  nameWithType: QueryContinueDragEventArgs.Action
  fullName: System.Windows.Forms.QueryContinueDragEventArgs.Action
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets or sets the status of a drag-and-drop operation."
  remarks: "By default, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event sets Action to <xref:System.Windows.Forms.DragAction?displayProperty=fullName> if the ESC key was pressed and sets `Action` to <xref:System.Windows.Forms.DragAction?displayProperty=fullName> if the left, middle, or right mouse button is pressed."
  example:
  - "This code excerpt demonstrates using the <xref:System.Windows.Forms.QueryContinueDragEventArgs> class with the <xref:System.Windows.Forms.Control.QueryContinueDrag> event. See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.  \n  \n [!code-cpp[System.Windows.Forms.Control.DoDragDrop#6](~/add/codesnippet/cpp/p-system.windows.forms.q_0_1.cpp)]\n [!code-vb[System.Windows.Forms.Control.DoDragDrop#6](~/add/codesnippet/visualbasic/p-system.windows.forms.q_0_1.vb)]\n [!code-cs[System.Windows.Forms.Control.DoDragDrop#6](~/add/codesnippet/csharp/p-system.windows.forms.q_0_1.cs)]"
  syntax:
    content: public System.Windows.Forms.DragAction Action { get; set; }
    return:
      type: System.Windows.Forms.DragAction
      description: "A <xref href=&quot;System.Windows.Forms.DragAction&quot;></xref> value."
  overload: System.Windows.Forms.QueryContinueDragEventArgs.Action*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed
  id: EscapePressed
  parent: System.Windows.Forms.QueryContinueDragEventArgs
  langs:
  - csharp
  name: EscapePressed
  nameWithType: QueryContinueDragEventArgs.EscapePressed
  fullName: System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets whether the user pressed the ESC key."
  remarks: "By default, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event sets <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> to <xref:System.Windows.Forms.DragAction?displayProperty=fullName> if EscapePressed is true."
  example:
  - "The following code example demonstrates the use of the EscapePressed . In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=fullName> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=fullName> event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#43](~/add/codesnippet/csharp/p-system.windows.forms.q_6_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#43](~/add/codesnippet/visualbasic/p-system.windows.forms.q_6_1.vb)]"
  syntax:
    content: public bool EscapePressed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the ESC key was pressed; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.QueryContinueDragEventArgs.KeyState
  id: KeyState
  parent: System.Windows.Forms.QueryContinueDragEventArgs
  langs:
  - csharp
  name: KeyState
  nameWithType: QueryContinueDragEventArgs.KeyState
  fullName: System.Windows.Forms.QueryContinueDragEventArgs.KeyState
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gets the current state of the SHIFT, CTRL, and ALT keys."
  remarks: "The bits that are set in the KeyState property identify the keys or mouse buttons that were pressed during the operation. For example, if the left mouse button is pressed, the first bit in the KeyState property is set. You can use the bitwise `AND` operator to test for a given key state.       The following table lists the bits that are set for a specified event.      |Bit|Key|   |---------|---------|   |1|The left mouse button.|   |2|The right mouse button.|   |4|The SHIFT key.|   |8|The CTL key.|   |16|The middle mouse button.|   |32|The ALT key.|       By default, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event sets <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> to <xref:System.Windows.Forms.DragAction?displayProperty=fullName> if KeyState indicates that the left, middle, or right mouse button is pressed."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=fullName> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.QueryContinueDrag?displayProperty=fullName> event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#43](~/add/codesnippet/csharp/p-system.windows.forms.q_2_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#43](~/add/codesnippet/visualbasic/p-system.windows.forms.q_2_1.vb)]"
  syntax:
    content: public int KeyState { get; }
    return:
      type: System.Int32
      description: "The current state of the SHIFT, CTRL, and ALT keys."
  overload: System.Windows.Forms.QueryContinueDragEventArgs.KeyState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Windows.Forms.QueryContinueDragEventArgs.#ctor(System.Int32,System.Boolean,System.Windows.Forms.DragAction)
  parent: System.Windows.Forms.QueryContinueDragEventArgs
  isExternal: false
  name: QueryContinueDragEventArgs(Int32,Boolean,DragAction)
  nameWithType: QueryContinueDragEventArgs.QueryContinueDragEventArgs(Int32,Boolean,DragAction)
  fullName: System.Windows.Forms.QueryContinueDragEventArgs.QueryContinueDragEventArgs(Int32,Boolean,DragAction)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.DragAction
  parent: System.Windows.Forms
  isExternal: false
  name: DragAction
  nameWithType: DragAction
  fullName: System.Windows.Forms.DragAction
- uid: System.Windows.Forms.QueryContinueDragEventArgs.Action
  parent: System.Windows.Forms.QueryContinueDragEventArgs
  isExternal: false
  name: Action
  nameWithType: QueryContinueDragEventArgs.Action
  fullName: System.Windows.Forms.QueryContinueDragEventArgs.Action
- uid: System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed
  parent: System.Windows.Forms.QueryContinueDragEventArgs
  isExternal: false
  name: EscapePressed
  nameWithType: QueryContinueDragEventArgs.EscapePressed
  fullName: System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed
- uid: System.Windows.Forms.QueryContinueDragEventArgs.KeyState
  parent: System.Windows.Forms.QueryContinueDragEventArgs
  isExternal: false
  name: KeyState
  nameWithType: QueryContinueDragEventArgs.KeyState
  fullName: System.Windows.Forms.QueryContinueDragEventArgs.KeyState
- uid: System.Windows.Forms.QueryContinueDragEventArgs.#ctor*
  parent: System.Windows.Forms.QueryContinueDragEventArgs
  isExternal: false
  name: QueryContinueDragEventArgs
  nameWithType: QueryContinueDragEventArgs.QueryContinueDragEventArgs
- uid: System.Windows.Forms.QueryContinueDragEventArgs.Action*
  parent: System.Windows.Forms.QueryContinueDragEventArgs
  isExternal: false
  name: Action
  nameWithType: QueryContinueDragEventArgs.Action
- uid: System.Windows.Forms.QueryContinueDragEventArgs.EscapePressed*
  parent: System.Windows.Forms.QueryContinueDragEventArgs
  isExternal: false
  name: EscapePressed
  nameWithType: QueryContinueDragEventArgs.EscapePressed
- uid: System.Windows.Forms.QueryContinueDragEventArgs.KeyState*
  parent: System.Windows.Forms.QueryContinueDragEventArgs
  isExternal: false
  name: KeyState
  nameWithType: QueryContinueDragEventArgs.KeyState
