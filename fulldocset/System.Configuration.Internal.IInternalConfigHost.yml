### YamlMime:ManagedReference
items:
- uid: System.Configuration.Internal.IInternalConfigHost
  id: IInternalConfigHost
  children:
  - System.Configuration.Internal.IInternalConfigHost.CreateConfigurationContext(System.String,System.String)
  - System.Configuration.Internal.IInternalConfigHost.CreateDeprecatedConfigContext(System.String)
  - System.Configuration.Internal.IInternalConfigHost.DecryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)
  - System.Configuration.Internal.IInternalConfigHost.DeleteStream(System.String)
  - System.Configuration.Internal.IInternalConfigHost.EncryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)
  - System.Configuration.Internal.IInternalConfigHost.GetConfigPathFromLocationSubPath(System.String,System.String)
  - System.Configuration.Internal.IInternalConfigHost.GetConfigType(System.String,System.Boolean)
  - System.Configuration.Internal.IInternalConfigHost.GetConfigTypeName(System.Type)
  - System.Configuration.Internal.IInternalConfigHost.GetRestrictedPermissions(System.Configuration.Internal.IInternalConfigRecord,System.Security.PermissionSet@,System.Boolean@)
  - System.Configuration.Internal.IInternalConfigHost.GetStreamName(System.String)
  - System.Configuration.Internal.IInternalConfigHost.GetStreamNameForConfigSource(System.String,System.String)
  - System.Configuration.Internal.IInternalConfigHost.GetStreamVersion(System.String)
  - System.Configuration.Internal.IInternalConfigHost.Impersonate
  - System.Configuration.Internal.IInternalConfigHost.Init(System.Configuration.Internal.IInternalConfigRoot,System.Object[])
  - System.Configuration.Internal.IInternalConfigHost.InitForConfiguration(System.String@,System.String@,System.String@,System.Configuration.Internal.IInternalConfigRoot,System.Object[])
  - System.Configuration.Internal.IInternalConfigHost.IsAboveApplication(System.String)
  - System.Configuration.Internal.IInternalConfigHost.IsConfigRecordRequired(System.String)
  - System.Configuration.Internal.IInternalConfigHost.IsDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition)
  - System.Configuration.Internal.IInternalConfigHost.IsFile(System.String)
  - System.Configuration.Internal.IInternalConfigHost.IsFullTrustSectionWithoutAptcaAllowed(System.Configuration.Internal.IInternalConfigRecord)
  - System.Configuration.Internal.IInternalConfigHost.IsInitDelayed(System.Configuration.Internal.IInternalConfigRecord)
  - System.Configuration.Internal.IInternalConfigHost.IsLocationApplicable(System.String)
  - System.Configuration.Internal.IInternalConfigHost.IsRemote
  - System.Configuration.Internal.IInternalConfigHost.IsSecondaryRoot(System.String)
  - System.Configuration.Internal.IInternalConfigHost.IsTrustedConfigPath(System.String)
  - System.Configuration.Internal.IInternalConfigHost.OpenStreamForRead(System.String)
  - System.Configuration.Internal.IInternalConfigHost.OpenStreamForRead(System.String,System.Boolean)
  - System.Configuration.Internal.IInternalConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@)
  - System.Configuration.Internal.IInternalConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@,System.Boolean)
  - System.Configuration.Internal.IInternalConfigHost.PrefetchAll(System.String,System.String)
  - System.Configuration.Internal.IInternalConfigHost.PrefetchSection(System.String,System.String)
  - System.Configuration.Internal.IInternalConfigHost.RequireCompleteInit(System.Configuration.Internal.IInternalConfigRecord)
  - System.Configuration.Internal.IInternalConfigHost.StartMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)
  - System.Configuration.Internal.IInternalConfigHost.StopMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)
  - System.Configuration.Internal.IInternalConfigHost.SupportsChangeNotifications
  - System.Configuration.Internal.IInternalConfigHost.SupportsLocation
  - System.Configuration.Internal.IInternalConfigHost.SupportsPath
  - System.Configuration.Internal.IInternalConfigHost.SupportsRefresh
  - System.Configuration.Internal.IInternalConfigHost.VerifyDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition,System.Configuration.Internal.IConfigErrorInfo)
  - System.Configuration.Internal.IInternalConfigHost.WriteCompleted(System.String,System.Boolean,System.Object)
  - System.Configuration.Internal.IInternalConfigHost.WriteCompleted(System.String,System.Boolean,System.Object,System.Boolean)
  langs:
  - csharp
  name: IInternalConfigHost
  nameWithType: IInternalConfigHost
  fullName: System.Configuration.Internal.IInternalConfigHost
  type: Interface
  summary: "Defines interfaces used by internal .NET structures to initialize application configuration properties."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public interface IInternalConfigHost
  implements: []
  platform:
  - net462
- uid: System.Configuration.Internal.IInternalConfigHost.CreateConfigurationContext(System.String,System.String)
  id: CreateConfigurationContext(System.String,System.String)
  parent: System.Configuration.Internal.IInternalConfigHost
  langs:
  - csharp
  name: CreateConfigurationContext(String,String)
  nameWithType: IInternalConfigHost.CreateConfigurationContext(String,String)
  fullName: System.Configuration.Internal.IInternalConfigHost.CreateConfigurationContext(String,String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Internal
  summary: "Creates and returns a context object for a <xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref> of an application configuration."
  syntax:
    content: public object CreateConfigurationContext (string configPath, string locationSubPath);
    parameters:
    - id: configPath
      type: System.String
      description: "A string representing the path of the application configuration file."
    - id: locationSubPath
      type: System.String
      description: "A string representing a subpath location of the configuration element."
    return:
      type: System.Object
      description: "A context object for a <xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref> object of an application configuration."
  overload: System.Configuration.Internal.IInternalConfigHost.CreateConfigurationContext*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Internal.IInternalConfigHost.CreateDeprecatedConfigContext(System.String)
  id: CreateDeprecatedConfigContext(System.String)
  parent: System.Configuration.Internal.IInternalConfigHost
  langs:
  - csharp
  name: CreateDeprecatedConfigContext(String)
  nameWithType: IInternalConfigHost.CreateDeprecatedConfigContext(String)
  fullName: System.Configuration.Internal.IInternalConfigHost.CreateDeprecatedConfigContext(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Internal
  summary: "Creates and returns a deprecated context object of the application configuration."
  syntax:
    content: public object CreateDeprecatedConfigContext (string configPath);
    parameters:
    - id: configPath
      type: System.String
      description: "A string representing a path to an application configuration file."
    return:
      type: System.Object
      description: "A deprecated context object of the application configuration."
  overload: System.Configuration.Internal.IInternalConfigHost.CreateDeprecatedConfigContext*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Internal.IInternalConfigHost.DecryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)
  id: DecryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)
  parent: System.Configuration.Internal.IInternalConfigHost
  langs:
  - csharp
  name: DecryptSection(String,ProtectedConfigurationProvider,ProtectedConfigurationSection)
  nameWithType: IInternalConfigHost.DecryptSection(String,ProtectedConfigurationProvider,ProtectedConfigurationSection)
  fullName: System.Configuration.Internal.IInternalConfigHost.DecryptSection(String,ProtectedConfigurationProvider,ProtectedConfigurationSection)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Internal
  summary: "Decrypts an encrypted configuration section and returns it as a string."
  syntax:
    content: public string DecryptSection (string encryptedXml, System.Configuration.ProtectedConfigurationProvider protectionProvider, System.Configuration.ProtectedConfigurationSection protectedConfigSection);
    parameters:
    - id: encryptedXml
      type: System.String
      description: "An encrypted XML string representing a configuration section."
    - id: protectionProvider
      type: System.Configuration.ProtectedConfigurationProvider
      description: "The <xref href=&quot;System.Configuration.ProtectedConfigurationProvider&quot;></xref> object."
    - id: protectedConfigSection
      type: System.Configuration.ProtectedConfigurationSection
      description: "The <xref href=&quot;System.Configuration.ProtectedConfigurationSection&quot;></xref> object."
    return:
      type: System.String
      description: "A decrypted configuration section as a string."
  overload: System.Configuration.Internal.IInternalConfigHost.DecryptSection*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Internal.IInternalConfigHost.DeleteStream(System.String)
  id: DeleteStream(System.String)
  parent: System.Configuration.Internal.IInternalConfigHost
  langs:
  - csharp
  name: DeleteStream(String)
  nameWithType: IInternalConfigHost.DeleteStream(String)
  fullName: System.Configuration.Internal.IInternalConfigHost.DeleteStream(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Internal
  summary: "Deletes the <xref:System.IO.Stream> object performing I/O tasks on the application configuration file."
  syntax:
    content: public void DeleteStream (string streamName);
    parameters:
    - id: streamName
      type: System.String
      description: "A string representing the name of the <xref:System.IO.Stream> object performing I/O tasks on the configuration file."
  overload: System.Configuration.Internal.IInternalConfigHost.DeleteStream*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Internal.IInternalConfigHost.EncryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)
  id: EncryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)
  parent: System.Configuration.Internal.IInternalConfigHost
  langs:
  - csharp
  name: EncryptSection(String,ProtectedConfigurationProvider,ProtectedConfigurationSection)
  nameWithType: IInternalConfigHost.EncryptSection(String,ProtectedConfigurationProvider,ProtectedConfigurationSection)
  fullName: System.Configuration.Internal.IInternalConfigHost.EncryptSection(String,ProtectedConfigurationProvider,ProtectedConfigurationSection)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Internal
  summary: "Encrypts a configuration section and returns it as a string."
  syntax:
    content: public string EncryptSection (string clearTextXml, System.Configuration.ProtectedConfigurationProvider protectionProvider, System.Configuration.ProtectedConfigurationSection protectedConfigSection);
    parameters:
    - id: clearTextXml
      type: System.String
      description: "An XML string representing a configuration section to encrypt."
    - id: protectionProvider
      type: System.Configuration.ProtectedConfigurationProvider
      description: "The <xref href=&quot;System.Configuration.ProtectedConfigurationProvider&quot;></xref> object."
    - id: protectedConfigSection
      type: System.Configuration.ProtectedConfigurationSection
      description: "The <xref href=&quot;System.Configuration.ProtectedConfigurationSection&quot;></xref> object."
    return:
      type: System.String
      description: "An encrypted configuration section represented as a string."
  overload: System.Configuration.Internal.IInternalConfigHost.EncryptSection*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Internal.IInternalConfigHost.GetConfigPathFromLocationSubPath(System.String,System.String)
  id: GetConfigPathFromLocationSubPath(System.String,System.String)
  parent: System.Configuration.Internal.IInternalConfigHost
  langs:
  - csharp
  name: GetConfigPathFromLocationSubPath(String,String)
  nameWithType: IInternalConfigHost.GetConfigPathFromLocationSubPath(String,String)
  fullName: System.Configuration.Internal.IInternalConfigHost.GetConfigPathFromLocationSubPath(String,String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Internal
  summary: "Returns the complete path to an application configuration file based on the location subpath."
  syntax:
    content: public string GetConfigPathFromLocationSubPath (string configPath, string locationSubPath);
    parameters:
    - id: configPath
      type: System.String
      description: "A string representing the path of the application configuration file."
    - id: locationSubPath
      type: System.String
      description: "The subpath location of the configuration file."
    return:
      type: System.String
      description: "A string representing the complete path to an application configuration file."
  overload: System.Configuration.Internal.IInternalConfigHost.GetConfigPathFromLocationSubPath*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Internal.IInternalConfigHost.GetConfigType(System.String,System.Boolean)
  id: GetConfigType(System.String,System.Boolean)
  parent: System.Configuration.Internal.IInternalConfigHost
  langs:
  - csharp
  name: GetConfigType(String,Boolean)
  nameWithType: IInternalConfigHost.GetConfigType(String,Boolean)
  fullName: System.Configuration.Internal.IInternalConfigHost.GetConfigType(String,Boolean)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Internal
  summary: "Returns a <xref:System.Type> object representing the type of the configuration object."
  syntax:
    content: public Type GetConfigType (string typeName, bool throwOnError);
    parameters:
    - id: typeName
      type: System.String
      description: "The type name"
    - id: throwOnError
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to throw an exception if an error occurs; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>"
    return:
      type: System.Type
      description: "A <xref:System.Type> object representing the type of the configuration object."
  overload: System.Configuration.Internal.IInternalConfigHost.GetConfigType*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Internal.IInternalConfigHost.GetConfigTypeName(System.Type)
  id: GetConfigTypeName(System.Type)
  parent: System.Configuration.Internal.IInternalConfigHost
  langs:
  - csharp
  name: GetConfigTypeName(Type)
  nameWithType: IInternalConfigHost.GetConfigTypeName(Type)
  fullName: System.Configuration.Internal.IInternalConfigHost.GetConfigTypeName(Type)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Internal
  summary: "Returns a string representing a type name from the <xref:System.Type> object representing the type of the configuration."
  syntax:
    content: public string GetConfigTypeName (Type t);
    parameters:
    - id: t
      type: System.Type
      description: "A <xref:System.Type> object."
    return:
      type: System.String
      description: "A string representing the type name from a <xref:System.Type> object representing the type of the configuration."
  overload: System.Configuration.Internal.IInternalConfigHost.GetConfigTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Internal.IInternalConfigHost.GetRestrictedPermissions(System.Configuration.Internal.IInternalConfigRecord,System.Security.PermissionSet@,System.Boolean@)
  id: GetRestrictedPermissions(System.Configuration.Internal.IInternalConfigRecord,System.Security.PermissionSet@,System.Boolean@)
  parent: System.Configuration.Internal.IInternalConfigHost
  langs:
  - csharp
  name: GetRestrictedPermissions(IInternalConfigRecord,PermissionSet,Boolean)
  nameWithType: IInternalConfigHost.GetRestrictedPermissions(IInternalConfigRecord,PermissionSet,Boolean)
  fullName: System.Configuration.Internal.IInternalConfigHost.GetRestrictedPermissions(IInternalConfigRecord,PermissionSet,Boolean)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Internal
  summary: "Associates the configuration with a <xref href=&quot;System.Security.PermissionSet&quot;></xref> object."
  syntax:
    content: public void GetRestrictedPermissions (System.Configuration.Internal.IInternalConfigRecord configRecord, out System.Security.PermissionSet permissionSet, out bool isHostReady);
    parameters:
    - id: configRecord
      type: System.Configuration.Internal.IInternalConfigRecord
      description: "An <xref href=&quot;System.Configuration.Internal.IInternalConfigRecord&quot;></xref> object."
    - id: permissionSet
      type: System.Security.PermissionSet
      description: "The <xref href=&quot;System.Security.PermissionSet&quot;></xref> object to associate with the configuration."
    - id: isHostReady
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to indicate the configuration host is has completed building associated permissions; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Configuration.Internal.IInternalConfigHost.GetRestrictedPermissions*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Internal.IInternalConfigHost.GetStreamName(System.String)
  id: GetStreamName(System.String)
  parent: System.Configuration.Internal.IInternalConfigHost
  langs:
  - csharp
  name: GetStreamName(String)
  nameWithType: IInternalConfigHost.GetStreamName(String)
  fullName: System.Configuration.Internal.IInternalConfigHost.GetStreamName(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Internal
  summary: "Returns a string representing the configuration file name associated with the <xref:System.IO.Stream> object performing I/O tasks on the configuration file."
  syntax:
    content: public string GetStreamName (string configPath);
    parameters:
    - id: configPath
      type: System.String
      description: "A string representing the path of the application configuration file."
    return:
      type: System.String
      description: "A string representing the configuration file name associated with the <xref:System.IO.Stream> I/O tasks on the configuration file."
  overload: System.Configuration.Internal.IInternalConfigHost.GetStreamName*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Internal.IInternalConfigHost.GetStreamNameForConfigSource(System.String,System.String)
  id: GetStreamNameForConfigSource(System.String,System.String)
  parent: System.Configuration.Internal.IInternalConfigHost
  langs:
  - csharp
  name: GetStreamNameForConfigSource(String,String)
  nameWithType: IInternalConfigHost.GetStreamNameForConfigSource(String,String)
  fullName: System.Configuration.Internal.IInternalConfigHost.GetStreamNameForConfigSource(String,String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Internal
  summary: "Returns a string representing the configuration file name associated with the <xref:System.IO.Stream> object performing I/O tasks on a remote configuration file."
  syntax:
    content: public string GetStreamNameForConfigSource (string streamName, string configSource);
    parameters:
    - id: streamName
      type: System.String
      description: "A string representing the configuration file name associated with the <xref:System.IO.Stream> object performing I/O tasks on the configuration file."
    - id: configSource
      type: System.String
      description: "A string representing a path to a remote configuration file."
    return:
      type: System.String
      description: "A string representing the configuration file name associated with the <xref:System.IO.Stream> object performing I/O tasks on the configuration file."
  overload: System.Configuration.Internal.IInternalConfigHost.GetStreamNameForConfigSource*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Internal.IInternalConfigHost.GetStreamVersion(System.String)
  id: GetStreamVersion(System.String)
  parent: System.Configuration.Internal.IInternalConfigHost
  langs:
  - csharp
  name: GetStreamVersion(String)
  nameWithType: IInternalConfigHost.GetStreamVersion(String)
  fullName: System.Configuration.Internal.IInternalConfigHost.GetStreamVersion(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Internal
  summary: "Returns the version of the <xref:System.IO.Stream> object associated with configuration file."
  syntax:
    content: public object GetStreamVersion (string streamName);
    parameters:
    - id: streamName
      type: System.String
      description: "A string representing the name of the <xref:System.IO.Stream> object performing I/O tasks on the configuration file."
    return:
      type: System.Object
      description: "The version of the <xref:System.IO.Stream> object associated with configuration file."
  overload: System.Configuration.Internal.IInternalConfigHost.GetStreamVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Internal.IInternalConfigHost.Impersonate
  id: Impersonate
  parent: System.Configuration.Internal.IInternalConfigHost
  langs:
  - csharp
  name: Impersonate()
  nameWithType: IInternalConfigHost.Impersonate()
  fullName: System.Configuration.Internal.IInternalConfigHost.Impersonate()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Internal
  summary: "Instructs the host to impersonate and returns an <xref:System.IDisposable> object required by the internal .NET structure."
  syntax:
    content: public IDisposable Impersonate ();
    parameters: []
    return:
      type: System.IDisposable
      description: "An <xref:System.IDisposable> value."
  overload: System.Configuration.Internal.IInternalConfigHost.Impersonate*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Internal.IInternalConfigHost.Init(System.Configuration.Internal.IInternalConfigRoot,System.Object[])
  id: Init(System.Configuration.Internal.IInternalConfigRoot,System.Object[])
  parent: System.Configuration.Internal.IInternalConfigHost
  langs:
  - csharp
  name: Init(IInternalConfigRoot,Object[])
  nameWithType: IInternalConfigHost.Init(IInternalConfigRoot,Object[])
  fullName: System.Configuration.Internal.IInternalConfigHost.Init(IInternalConfigRoot,Object[])
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Internal
  summary: "Initializes a configuration host."
  syntax:
    content: public void Init (System.Configuration.Internal.IInternalConfigRoot configRoot, object[] hostInitParams);
    parameters:
    - id: configRoot
      type: System.Configuration.Internal.IInternalConfigRoot
      description: "The configuration root object."
    - id: hostInitParams
      type: System.Object[]
      description: "The parameter object containing the values used for initializing the configuration host."
  overload: System.Configuration.Internal.IInternalConfigHost.Init*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Internal.IInternalConfigHost.InitForConfiguration(System.String@,System.String@,System.String@,System.Configuration.Internal.IInternalConfigRoot,System.Object[])
  id: InitForConfiguration(System.String@,System.String@,System.String@,System.Configuration.Internal.IInternalConfigRoot,System.Object[])
  parent: System.Configuration.Internal.IInternalConfigHost
  langs:
  - csharp
  name: InitForConfiguration(String,String,String,IInternalConfigRoot,Object[])
  nameWithType: IInternalConfigHost.InitForConfiguration(String,String,String,IInternalConfigRoot,Object[])
  fullName: System.Configuration.Internal.IInternalConfigHost.InitForConfiguration(String,String,String,IInternalConfigRoot,Object[])
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Internal
  summary: "Initializes a configuration object."
  syntax:
    content: public void InitForConfiguration (ref string locationSubPath, out string configPath, out string locationConfigPath, System.Configuration.Internal.IInternalConfigRoot configRoot, object[] hostInitConfigurationParams);
    parameters:
    - id: locationSubPath
      type: System.String
      description: "The subpath location of the configuration file."
    - id: configPath
      type: System.String
      description: "A string representing the path of the application configuration file."
    - id: locationConfigPath
      type: System.String
      description: "A string representing the location of a configuration path."
    - id: configRoot
      type: System.Configuration.Internal.IInternalConfigRoot
      description: "The <xref href=&quot;System.Configuration.Internal.IInternalConfigRoot&quot;></xref> object."
    - id: hostInitConfigurationParams
      type: System.Object[]
      description: "The parameter object containing the values used for initializing the configuration host."
  overload: System.Configuration.Internal.IInternalConfigHost.InitForConfiguration*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Internal.IInternalConfigHost.IsAboveApplication(System.String)
  id: IsAboveApplication(System.String)
  parent: System.Configuration.Internal.IInternalConfigHost
  langs:
  - csharp
  name: IsAboveApplication(String)
  nameWithType: IInternalConfigHost.IsAboveApplication(String)
  fullName: System.Configuration.Internal.IInternalConfigHost.IsAboveApplication(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Internal
  summary: "Returns a value indicating whether the configuration file is located at a higher level in the configuration hierarchy than the application configuration."
  syntax:
    content: public bool IsAboveApplication (string configPath);
    parameters:
    - id: configPath
      type: System.String
      description: "A string representing the path of the application configuration file."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> the configuration file is located at a higher level in the configuration hierarchy than the application configuration; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Configuration.Internal.IInternalConfigHost.IsAboveApplication*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Internal.IInternalConfigHost.IsConfigRecordRequired(System.String)
  id: IsConfigRecordRequired(System.String)
  parent: System.Configuration.Internal.IInternalConfigHost
  langs:
  - csharp
  name: IsConfigRecordRequired(String)
  nameWithType: IInternalConfigHost.IsConfigRecordRequired(String)
  fullName: System.Configuration.Internal.IInternalConfigHost.IsConfigRecordRequired(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Internal
  summary: "Returns a value indicating whether a child record is required for a child configuration path."
  syntax:
    content: public bool IsConfigRecordRequired (string configPath);
    parameters:
    - id: configPath
      type: System.String
      description: "A string representing the path of the application configuration file."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if child record is required for a child configuration path; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Configuration.Internal.IInternalConfigHost.IsConfigRecordRequired*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Internal.IInternalConfigHost.IsDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition)
  id: IsDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition)
  parent: System.Configuration.Internal.IInternalConfigHost
  langs:
  - csharp
  name: IsDefinitionAllowed(String,ConfigurationAllowDefinition,ConfigurationAllowExeDefinition)
  nameWithType: IInternalConfigHost.IsDefinitionAllowed(String,ConfigurationAllowDefinition,ConfigurationAllowExeDefinition)
  fullName: System.Configuration.Internal.IInternalConfigHost.IsDefinitionAllowed(String,ConfigurationAllowDefinition,ConfigurationAllowExeDefinition)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Internal
  summary: "Determines if a different <xref:System.Type> definition is allowable for an application configuration object."
  syntax:
    content: public bool IsDefinitionAllowed (string configPath, System.Configuration.ConfigurationAllowDefinition allowDefinition, System.Configuration.ConfigurationAllowExeDefinition allowExeDefinition);
    parameters:
    - id: configPath
      type: System.String
      description: "A string representing the path of the application configuration file."
    - id: allowDefinition
      type: System.Configuration.ConfigurationAllowDefinition
      description: "A <xref href=&quot;System.Configuration.ConfigurationAllowDefinition&quot;></xref> object."
    - id: allowExeDefinition
      type: System.Configuration.ConfigurationAllowExeDefinition
      description: "A <xref href=&quot;System.Configuration.ConfigurationAllowExeDefinition&quot;></xref> object."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if a different <xref:System.Type> definition is allowable for an application configuration object; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Configuration.Internal.IInternalConfigHost.IsDefinitionAllowed*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Internal.IInternalConfigHost.IsFile(System.String)
  id: IsFile(System.String)
  parent: System.Configuration.Internal.IInternalConfigHost
  langs:
  - csharp
  name: IsFile(String)
  nameWithType: IInternalConfigHost.IsFile(String)
  fullName: System.Configuration.Internal.IInternalConfigHost.IsFile(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Internal
  summary: "Returns a value indicating whether the file path used by a <xref:System.IO.Stream> object to read a configuration file is a valid path."
  syntax:
    content: public bool IsFile (string streamName);
    parameters:
    - id: streamName
      type: System.String
      description: "A string representing the name of the <xref:System.IO.Stream> object performing I/O tasks on the configuration file."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the path used by a <xref:System.IO.Stream> object to read a configuration file is a valid path; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Configuration.Internal.IInternalConfigHost.IsFile*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Internal.IInternalConfigHost.IsFullTrustSectionWithoutAptcaAllowed(System.Configuration.Internal.IInternalConfigRecord)
  id: IsFullTrustSectionWithoutAptcaAllowed(System.Configuration.Internal.IInternalConfigRecord)
  parent: System.Configuration.Internal.IInternalConfigHost
  langs:
  - csharp
  name: IsFullTrustSectionWithoutAptcaAllowed(IInternalConfigRecord)
  nameWithType: IInternalConfigHost.IsFullTrustSectionWithoutAptcaAllowed(IInternalConfigRecord)
  fullName: System.Configuration.Internal.IInternalConfigHost.IsFullTrustSectionWithoutAptcaAllowed(IInternalConfigRecord)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Internal
  summary: "Returns a value indicating whether a configuration section requires a fully trusted code access security level and does not allow the <xref:System.Security.AllowPartiallyTrustedCallersAttribute> attribute to disable implicit link demands."
  syntax:
    content: public bool IsFullTrustSectionWithoutAptcaAllowed (System.Configuration.Internal.IInternalConfigRecord configRecord);
    parameters:
    - id: configRecord
      type: System.Configuration.Internal.IInternalConfigRecord
      description: "The <xref href=&quot;System.Configuration.Internal.IInternalConfigRecord&quot;></xref> object."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the configuration section requires a fully trusted code access security level and does not allow the <xref:System.Security.AllowPartiallyTrustedCallersAttribute> attribute to disable implicit link demands; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Configuration.Internal.IInternalConfigHost.IsFullTrustSectionWithoutAptcaAllowed*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Internal.IInternalConfigHost.IsInitDelayed(System.Configuration.Internal.IInternalConfigRecord)
  id: IsInitDelayed(System.Configuration.Internal.IInternalConfigRecord)
  parent: System.Configuration.Internal.IInternalConfigHost
  langs:
  - csharp
  name: IsInitDelayed(IInternalConfigRecord)
  nameWithType: IInternalConfigHost.IsInitDelayed(IInternalConfigRecord)
  fullName: System.Configuration.Internal.IInternalConfigHost.IsInitDelayed(IInternalConfigRecord)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Internal
  summary: "Returns a value indicating whether the initialization of a configuration object is considered delayed."
  syntax:
    content: public bool IsInitDelayed (System.Configuration.Internal.IInternalConfigRecord configRecord);
    parameters:
    - id: configRecord
      type: System.Configuration.Internal.IInternalConfigRecord
      description: "The <xref href=&quot;System.Configuration.Internal.IInternalConfigRecord&quot;></xref> object."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the initialization of a configuration object is considered delayed; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Configuration.Internal.IInternalConfigHost.IsInitDelayed*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Internal.IInternalConfigHost.IsLocationApplicable(System.String)
  id: IsLocationApplicable(System.String)
  parent: System.Configuration.Internal.IInternalConfigHost
  langs:
  - csharp
  name: IsLocationApplicable(String)
  nameWithType: IInternalConfigHost.IsLocationApplicable(String)
  fullName: System.Configuration.Internal.IInternalConfigHost.IsLocationApplicable(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Internal
  summary: "Returns a value indicating whether the configuration object supports a location tag."
  syntax:
    content: public bool IsLocationApplicable (string configPath);
    parameters:
    - id: configPath
      type: System.String
      description: "A string representing the path of the application configuration file."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the configuration object supports a location tag; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Configuration.Internal.IInternalConfigHost.IsLocationApplicable*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Internal.IInternalConfigHost.IsRemote
  id: IsRemote
  parent: System.Configuration.Internal.IInternalConfigHost
  langs:
  - csharp
  name: IsRemote
  nameWithType: IInternalConfigHost.IsRemote
  fullName: System.Configuration.Internal.IInternalConfigHost.IsRemote
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Internal
  summary: "Returns a value indicating whether the configuration is remote."
  syntax:
    content: public bool IsRemote { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the configuration is remote; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Configuration.Internal.IInternalConfigHost.IsRemote*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Internal.IInternalConfigHost.IsSecondaryRoot(System.String)
  id: IsSecondaryRoot(System.String)
  parent: System.Configuration.Internal.IInternalConfigHost
  langs:
  - csharp
  name: IsSecondaryRoot(String)
  nameWithType: IInternalConfigHost.IsSecondaryRoot(String)
  fullName: System.Configuration.Internal.IInternalConfigHost.IsSecondaryRoot(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Internal
  summary: "Returns a value indicating whether a configuration path is to a configuration node whose contents should be treated as a root."
  syntax:
    content: public bool IsSecondaryRoot (string configPath);
    parameters:
    - id: configPath
      type: System.String
      description: "A string representing the path of the application configuration file."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the configuration path is to a configuration node whose contents should be treated as a root; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Configuration.Internal.IInternalConfigHost.IsSecondaryRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Internal.IInternalConfigHost.IsTrustedConfigPath(System.String)
  id: IsTrustedConfigPath(System.String)
  parent: System.Configuration.Internal.IInternalConfigHost
  langs:
  - csharp
  name: IsTrustedConfigPath(String)
  nameWithType: IInternalConfigHost.IsTrustedConfigPath(String)
  fullName: System.Configuration.Internal.IInternalConfigHost.IsTrustedConfigPath(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Internal
  summary: "Returns a value indicating whether the configuration path is trusted."
  syntax:
    content: public bool IsTrustedConfigPath (string configPath);
    parameters:
    - id: configPath
      type: System.String
      description: "A string representing the path of the application configuration file."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the configuration path is trusted; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Configuration.Internal.IInternalConfigHost.IsTrustedConfigPath*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Internal.IInternalConfigHost.OpenStreamForRead(System.String)
  id: OpenStreamForRead(System.String)
  parent: System.Configuration.Internal.IInternalConfigHost
  langs:
  - csharp
  name: OpenStreamForRead(String)
  nameWithType: IInternalConfigHost.OpenStreamForRead(String)
  fullName: System.Configuration.Internal.IInternalConfigHost.OpenStreamForRead(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Internal
  summary: "Opens a <xref:System.IO.Stream> to read a configuration file."
  syntax:
    content: public System.IO.Stream OpenStreamForRead (string streamName);
    parameters:
    - id: streamName
      type: System.String
      description: "A string representing the name of the <xref:System.IO.Stream> object performing I/O tasks on the configuration file."
    return:
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream> object."
  overload: System.Configuration.Internal.IInternalConfigHost.OpenStreamForRead*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Internal.IInternalConfigHost.OpenStreamForRead(System.String,System.Boolean)
  id: OpenStreamForRead(System.String,System.Boolean)
  parent: System.Configuration.Internal.IInternalConfigHost
  langs:
  - csharp
  name: OpenStreamForRead(String,Boolean)
  nameWithType: IInternalConfigHost.OpenStreamForRead(String,Boolean)
  fullName: System.Configuration.Internal.IInternalConfigHost.OpenStreamForRead(String,Boolean)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Internal
  summary: "Opens a <xref:System.IO.Stream> object to read a configuration file."
  syntax:
    content: public System.IO.Stream OpenStreamForRead (string streamName, bool assertPermissions);
    parameters:
    - id: streamName
      type: System.String
      description: "A string representing the name of the <xref:System.IO.Stream> object performing I/O tasks on the configuration file."
    - id: assertPermissions
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to assert permissions; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    return:
      type: System.IO.Stream
      description: "Returns the <xref:System.IO.Stream> object specified by <code>streamName</code>."
  overload: System.Configuration.Internal.IInternalConfigHost.OpenStreamForRead*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Internal.IInternalConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@)
  id: OpenStreamForWrite(System.String,System.String,System.Object@)
  parent: System.Configuration.Internal.IInternalConfigHost
  langs:
  - csharp
  name: OpenStreamForWrite(String,String,Object)
  nameWithType: IInternalConfigHost.OpenStreamForWrite(String,String,Object)
  fullName: System.Configuration.Internal.IInternalConfigHost.OpenStreamForWrite(String,String,Object)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Internal
  summary: "Opens a <xref:System.IO.Stream> object for writing to a configuration file or for writing to a temporary file used to build a configuration file. Allows a <xref:System.IO.Stream> object to be designated as a template for copying file attributes."
  syntax:
    content: public System.IO.Stream OpenStreamForWrite (string streamName, string templateStreamName, ref object writeContext);
    parameters:
    - id: streamName
      type: System.String
      description: "A string representing the name of the <xref:System.IO.Stream> object performing I/O tasks on the configuration file."
    - id: templateStreamName
      type: System.String
      description: "The name of a <xref:System.IO.Stream> object from which file attributes are to be copied as a template."
    - id: writeContext
      type: System.Object
      description: "The write context of the <xref:System.IO.Stream> object."
    return:
      type: System.IO.Stream
      description: "A <xref:System.IO.Stream> object."
  overload: System.Configuration.Internal.IInternalConfigHost.OpenStreamForWrite*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Internal.IInternalConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@,System.Boolean)
  id: OpenStreamForWrite(System.String,System.String,System.Object@,System.Boolean)
  parent: System.Configuration.Internal.IInternalConfigHost
  langs:
  - csharp
  name: OpenStreamForWrite(String,String,Object,Boolean)
  nameWithType: IInternalConfigHost.OpenStreamForWrite(String,String,Object,Boolean)
  fullName: System.Configuration.Internal.IInternalConfigHost.OpenStreamForWrite(String,String,Object,Boolean)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Internal
  summary: "Opens a <xref:System.IO.Stream> object for writing to a configuration file. Allows a <xref:System.IO.Stream> object to be designated as a template for copying file attributes."
  syntax:
    content: public System.IO.Stream OpenStreamForWrite (string streamName, string templateStreamName, ref object writeContext, bool assertPermissions);
    parameters:
    - id: streamName
      type: System.String
      description: "A string representing the name of the <xref:System.IO.Stream> object performing I/O tasks on the configuration file."
    - id: templateStreamName
      type: System.String
      description: "The name of a <xref:System.IO.Stream> from which file attributes are to be copied as a template."
    - id: writeContext
      type: System.Object
      description: "The write context of the <xref:System.IO.Stream> object performing I/O tasks on the configuration file."
    - id: assertPermissions
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to assert permissions; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    return:
      type: System.IO.Stream
      description: "Returns the <xref:System.IO.Stream> object specified by <code>streamName</code>."
  overload: System.Configuration.Internal.IInternalConfigHost.OpenStreamForWrite*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Internal.IInternalConfigHost.PrefetchAll(System.String,System.String)
  id: PrefetchAll(System.String,System.String)
  parent: System.Configuration.Internal.IInternalConfigHost
  langs:
  - csharp
  name: PrefetchAll(String,String)
  nameWithType: IInternalConfigHost.PrefetchAll(String,String)
  fullName: System.Configuration.Internal.IInternalConfigHost.PrefetchAll(String,String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Internal
  summary: "Returns a value indicating whether the entire configuration file could be read by a designated <xref:System.IO.Stream> object."
  syntax:
    content: public bool PrefetchAll (string configPath, string streamName);
    parameters:
    - id: configPath
      type: System.String
      description: "A string representing the path of the application configuration file."
    - id: streamName
      type: System.String
      description: "A string representing the name of the <xref:System.IO.Stream> object performing I/O tasks on the configuration file."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the entire configuration file could be read by the <xref:System.IO.Stream> object designated by <code>streamName</code>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Configuration.Internal.IInternalConfigHost.PrefetchAll*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Internal.IInternalConfigHost.PrefetchSection(System.String,System.String)
  id: PrefetchSection(System.String,System.String)
  parent: System.Configuration.Internal.IInternalConfigHost
  langs:
  - csharp
  name: PrefetchSection(String,String)
  nameWithType: IInternalConfigHost.PrefetchSection(String,String)
  fullName: System.Configuration.Internal.IInternalConfigHost.PrefetchSection(String,String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Internal
  summary: "Instructs the <xref href=&quot;System.Configuration.Internal.IInternalConfigHost&quot;></xref> object to read a designated section of its associated configuration file."
  syntax:
    content: public bool PrefetchSection (string sectionGroupName, string sectionName);
    parameters:
    - id: sectionGroupName
      type: System.String
      description: "A string representing the identifying name of a configuration file section group."
    - id: sectionName
      type: System.String
      description: "A string representing the identifying name of a configuration file section."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if a section of the configuration file designated by <code>sectionGroupName</code> and <code>sectionName</code> could be read by a <xref:System.IO.Stream> object; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Configuration.Internal.IInternalConfigHost.PrefetchSection*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Internal.IInternalConfigHost.RequireCompleteInit(System.Configuration.Internal.IInternalConfigRecord)
  id: RequireCompleteInit(System.Configuration.Internal.IInternalConfigRecord)
  parent: System.Configuration.Internal.IInternalConfigHost
  langs:
  - csharp
  name: RequireCompleteInit(IInternalConfigRecord)
  nameWithType: IInternalConfigHost.RequireCompleteInit(IInternalConfigRecord)
  fullName: System.Configuration.Internal.IInternalConfigHost.RequireCompleteInit(IInternalConfigRecord)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Internal
  summary: "Indicates a new configuration record requires a complete initialization."
  syntax:
    content: public void RequireCompleteInit (System.Configuration.Internal.IInternalConfigRecord configRecord);
    parameters:
    - id: configRecord
      type: System.Configuration.Internal.IInternalConfigRecord
      description: "An <xref href=&quot;System.Configuration.Internal.IInternalConfigRecord&quot;></xref> object."
  overload: System.Configuration.Internal.IInternalConfigHost.RequireCompleteInit*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Internal.IInternalConfigHost.StartMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)
  id: StartMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)
  parent: System.Configuration.Internal.IInternalConfigHost
  langs:
  - csharp
  name: StartMonitoringStreamForChanges(String,StreamChangeCallback)
  nameWithType: IInternalConfigHost.StartMonitoringStreamForChanges(String,StreamChangeCallback)
  fullName: System.Configuration.Internal.IInternalConfigHost.StartMonitoringStreamForChanges(String,StreamChangeCallback)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Internal
  summary: "Instructs the <xref href=&quot;System.Configuration.Internal.IInternalConfigHost&quot;></xref> object to monitor an associated <xref:System.IO.Stream> object for changes in a configuration file."
  syntax:
    content: public object StartMonitoringStreamForChanges (string streamName, System.Configuration.Internal.StreamChangeCallback callback);
    parameters:
    - id: streamName
      type: System.String
      description: "A string representing the name of the <xref:System.IO.Stream> object performing I/O tasks on the configuration file."
    - id: callback
      type: System.Configuration.Internal.StreamChangeCallback
      description: "A <xref href=&quot;System.Configuration.Internal.StreamChangeCallback&quot;></xref> object to receive the returned data representing the changes in the configuration file."
    return:
      type: System.Object
      description: "An <xref:System.Object> containing changed configuration settings."
  overload: System.Configuration.Internal.IInternalConfigHost.StartMonitoringStreamForChanges*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Internal.IInternalConfigHost.StopMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)
  id: StopMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)
  parent: System.Configuration.Internal.IInternalConfigHost
  langs:
  - csharp
  name: StopMonitoringStreamForChanges(String,StreamChangeCallback)
  nameWithType: IInternalConfigHost.StopMonitoringStreamForChanges(String,StreamChangeCallback)
  fullName: System.Configuration.Internal.IInternalConfigHost.StopMonitoringStreamForChanges(String,StreamChangeCallback)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Internal
  summary: "Instructs the  <xref href=&quot;System.Configuration.Internal.IInternalConfigHost&quot;></xref> object to stop monitoring an associated <xref:System.IO.Stream> object for changes in a configuration file."
  syntax:
    content: public void StopMonitoringStreamForChanges (string streamName, System.Configuration.Internal.StreamChangeCallback callback);
    parameters:
    - id: streamName
      type: System.String
      description: "A string representing the name of the <xref:System.IO.Stream> object performing I/O tasks on the configuration file."
    - id: callback
      type: System.Configuration.Internal.StreamChangeCallback
      description: "A <xref href=&quot;System.Configuration.Internal.StreamChangeCallback&quot;></xref> object."
  overload: System.Configuration.Internal.IInternalConfigHost.StopMonitoringStreamForChanges*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Internal.IInternalConfigHost.SupportsChangeNotifications
  id: SupportsChangeNotifications
  parent: System.Configuration.Internal.IInternalConfigHost
  langs:
  - csharp
  name: SupportsChangeNotifications
  nameWithType: IInternalConfigHost.SupportsChangeNotifications
  fullName: System.Configuration.Internal.IInternalConfigHost.SupportsChangeNotifications
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Internal
  summary: "Returns a value indicating whether the host configuration supports change notification."
  syntax:
    content: public bool SupportsChangeNotifications { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the configuration supports change notification; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Configuration.Internal.IInternalConfigHost.SupportsChangeNotifications*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Internal.IInternalConfigHost.SupportsLocation
  id: SupportsLocation
  parent: System.Configuration.Internal.IInternalConfigHost
  langs:
  - csharp
  name: SupportsLocation
  nameWithType: IInternalConfigHost.SupportsLocation
  fullName: System.Configuration.Internal.IInternalConfigHost.SupportsLocation
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Internal
  summary: "Returns a value indicating whether the host configuration supports location tags."
  syntax:
    content: public bool SupportsLocation { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the configuration supports location tags; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Configuration.Internal.IInternalConfigHost.SupportsLocation*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Internal.IInternalConfigHost.SupportsPath
  id: SupportsPath
  parent: System.Configuration.Internal.IInternalConfigHost
  langs:
  - csharp
  name: SupportsPath
  nameWithType: IInternalConfigHost.SupportsPath
  fullName: System.Configuration.Internal.IInternalConfigHost.SupportsPath
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Internal
  summary: "Returns a value indicating whether the host configuration supports path tags."
  syntax:
    content: public bool SupportsPath { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the configuration supports path tags; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Configuration.Internal.IInternalConfigHost.SupportsPath*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Internal.IInternalConfigHost.SupportsRefresh
  id: SupportsRefresh
  parent: System.Configuration.Internal.IInternalConfigHost
  langs:
  - csharp
  name: SupportsRefresh
  nameWithType: IInternalConfigHost.SupportsRefresh
  fullName: System.Configuration.Internal.IInternalConfigHost.SupportsRefresh
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Internal
  summary: "Returns a value indicating whether the host configuration supports configuration refresh."
  syntax:
    content: public bool SupportsRefresh { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the configuration supports configuration refresh; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Configuration.Internal.IInternalConfigHost.SupportsRefresh*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Internal.IInternalConfigHost.VerifyDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition,System.Configuration.Internal.IConfigErrorInfo)
  id: VerifyDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition,System.Configuration.Internal.IConfigErrorInfo)
  parent: System.Configuration.Internal.IInternalConfigHost
  langs:
  - csharp
  name: VerifyDefinitionAllowed(String,ConfigurationAllowDefinition,ConfigurationAllowExeDefinition,IConfigErrorInfo)
  nameWithType: IInternalConfigHost.VerifyDefinitionAllowed(String,ConfigurationAllowDefinition,ConfigurationAllowExeDefinition,IConfigErrorInfo)
  fullName: System.Configuration.Internal.IInternalConfigHost.VerifyDefinitionAllowed(String,ConfigurationAllowDefinition,ConfigurationAllowExeDefinition,IConfigErrorInfo)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Internal
  summary: "Verifies that a configuration definition is allowed for a configuration record."
  syntax:
    content: public void VerifyDefinitionAllowed (string configPath, System.Configuration.ConfigurationAllowDefinition allowDefinition, System.Configuration.ConfigurationAllowExeDefinition allowExeDefinition, System.Configuration.Internal.IConfigErrorInfo errorInfo);
    parameters:
    - id: configPath
      type: System.String
      description: "A string representing the path of the application configuration file."
    - id: allowDefinition
      type: System.Configuration.ConfigurationAllowDefinition
      description: "A <xref:System.Configuration.SectionInformation.AllowDefinition*> object."
    - id: allowExeDefinition
      type: System.Configuration.ConfigurationAllowExeDefinition
      description: "A <xref href=&quot;System.Configuration.ConfigurationAllowExeDefinition&quot;></xref> object"
    - id: errorInfo
      type: System.Configuration.Internal.IConfigErrorInfo
      description: "An <xref href=&quot;System.Configuration.Internal.IConfigErrorInfo&quot;></xref> object."
  overload: System.Configuration.Internal.IInternalConfigHost.VerifyDefinitionAllowed*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Internal.IInternalConfigHost.WriteCompleted(System.String,System.Boolean,System.Object)
  id: WriteCompleted(System.String,System.Boolean,System.Object)
  parent: System.Configuration.Internal.IInternalConfigHost
  langs:
  - csharp
  name: WriteCompleted(String,Boolean,Object)
  nameWithType: IInternalConfigHost.WriteCompleted(String,Boolean,Object)
  fullName: System.Configuration.Internal.IInternalConfigHost.WriteCompleted(String,Boolean,Object)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Internal
  summary: "Indicates that all writing to the configuration file has completed."
  syntax:
    content: public void WriteCompleted (string streamName, bool success, object writeContext);
    parameters:
    - id: streamName
      type: System.String
      description: "A string representing the name of the <xref:System.IO.Stream> object performing I/O tasks on the configuration file."
    - id: success
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the write to the configuration file was completed successfully; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: writeContext
      type: System.Object
      description: "The write context of the <xref:System.IO.Stream> object performing I/O tasks on the configuration file."
  overload: System.Configuration.Internal.IInternalConfigHost.WriteCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Internal.IInternalConfigHost.WriteCompleted(System.String,System.Boolean,System.Object,System.Boolean)
  id: WriteCompleted(System.String,System.Boolean,System.Object,System.Boolean)
  parent: System.Configuration.Internal.IInternalConfigHost
  langs:
  - csharp
  name: WriteCompleted(String,Boolean,Object,Boolean)
  nameWithType: IInternalConfigHost.WriteCompleted(String,Boolean,Object,Boolean)
  fullName: System.Configuration.Internal.IInternalConfigHost.WriteCompleted(String,Boolean,Object,Boolean)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Internal
  summary: "Indicates that all writing to the configuration file has completed and specifies whether permissions should be asserted."
  syntax:
    content: public void WriteCompleted (string streamName, bool success, object writeContext, bool assertPermissions);
    parameters:
    - id: streamName
      type: System.String
      description: "A string representing the name of the <xref:System.IO.Stream> object performing I/O tasks on the configuration file."
    - id: success
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to indicate the write was completed successfully; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
    - id: writeContext
      type: System.Object
      description: "The write context of the <xref:System.IO.Stream> object performing I/O tasks on the configuration file."
    - id: assertPermissions
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to assert permissions; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Configuration.Internal.IInternalConfigHost.WriteCompleted*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.Internal.IInternalConfigHost.CreateConfigurationContext(System.String,System.String)
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: CreateConfigurationContext(String,String)
  nameWithType: IInternalConfigHost.CreateConfigurationContext(String,String)
  fullName: System.Configuration.Internal.IInternalConfigHost.CreateConfigurationContext(String,String)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.Internal.IInternalConfigHost.CreateDeprecatedConfigContext(System.String)
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: CreateDeprecatedConfigContext(String)
  nameWithType: IInternalConfigHost.CreateDeprecatedConfigContext(String)
  fullName: System.Configuration.Internal.IInternalConfigHost.CreateDeprecatedConfigContext(String)
- uid: System.Configuration.Internal.IInternalConfigHost.DecryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: DecryptSection(String,ProtectedConfigurationProvider,ProtectedConfigurationSection)
  nameWithType: IInternalConfigHost.DecryptSection(String,ProtectedConfigurationProvider,ProtectedConfigurationSection)
  fullName: System.Configuration.Internal.IInternalConfigHost.DecryptSection(String,ProtectedConfigurationProvider,ProtectedConfigurationSection)
- uid: System.Configuration.ProtectedConfigurationProvider
  parent: System.Configuration
  isExternal: false
  name: ProtectedConfigurationProvider
  nameWithType: ProtectedConfigurationProvider
  fullName: System.Configuration.ProtectedConfigurationProvider
- uid: System.Configuration.ProtectedConfigurationSection
  parent: System.Configuration
  isExternal: false
  name: ProtectedConfigurationSection
  nameWithType: ProtectedConfigurationSection
  fullName: System.Configuration.ProtectedConfigurationSection
- uid: System.Configuration.Internal.IInternalConfigHost.DeleteStream(System.String)
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: DeleteStream(String)
  nameWithType: IInternalConfigHost.DeleteStream(String)
  fullName: System.Configuration.Internal.IInternalConfigHost.DeleteStream(String)
- uid: System.Configuration.Internal.IInternalConfigHost.EncryptSection(System.String,System.Configuration.ProtectedConfigurationProvider,System.Configuration.ProtectedConfigurationSection)
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: EncryptSection(String,ProtectedConfigurationProvider,ProtectedConfigurationSection)
  nameWithType: IInternalConfigHost.EncryptSection(String,ProtectedConfigurationProvider,ProtectedConfigurationSection)
  fullName: System.Configuration.Internal.IInternalConfigHost.EncryptSection(String,ProtectedConfigurationProvider,ProtectedConfigurationSection)
- uid: System.Configuration.Internal.IInternalConfigHost.GetConfigPathFromLocationSubPath(System.String,System.String)
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: GetConfigPathFromLocationSubPath(String,String)
  nameWithType: IInternalConfigHost.GetConfigPathFromLocationSubPath(String,String)
  fullName: System.Configuration.Internal.IInternalConfigHost.GetConfigPathFromLocationSubPath(String,String)
- uid: System.Configuration.Internal.IInternalConfigHost.GetConfigType(System.String,System.Boolean)
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: GetConfigType(String,Boolean)
  nameWithType: IInternalConfigHost.GetConfigType(String,Boolean)
  fullName: System.Configuration.Internal.IInternalConfigHost.GetConfigType(String,Boolean)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.Internal.IInternalConfigHost.GetConfigTypeName(System.Type)
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: GetConfigTypeName(Type)
  nameWithType: IInternalConfigHost.GetConfigTypeName(Type)
  fullName: System.Configuration.Internal.IInternalConfigHost.GetConfigTypeName(Type)
- uid: System.Configuration.Internal.IInternalConfigHost.GetRestrictedPermissions(System.Configuration.Internal.IInternalConfigRecord,System.Security.PermissionSet@,System.Boolean@)
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: GetRestrictedPermissions(IInternalConfigRecord,PermissionSet,Boolean)
  nameWithType: IInternalConfigHost.GetRestrictedPermissions(IInternalConfigRecord,PermissionSet,Boolean)
  fullName: System.Configuration.Internal.IInternalConfigHost.GetRestrictedPermissions(IInternalConfigRecord,PermissionSet,Boolean)
- uid: System.Configuration.Internal.IInternalConfigRecord
  parent: System.Configuration.Internal
  isExternal: false
  name: IInternalConfigRecord
  nameWithType: IInternalConfigRecord
  fullName: System.Configuration.Internal.IInternalConfigRecord
- uid: System.Security.PermissionSet
  parent: System.Security
  isExternal: false
  name: PermissionSet
  nameWithType: PermissionSet
  fullName: System.Security.PermissionSet
- uid: System.Configuration.Internal.IInternalConfigHost.GetStreamName(System.String)
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: GetStreamName(String)
  nameWithType: IInternalConfigHost.GetStreamName(String)
  fullName: System.Configuration.Internal.IInternalConfigHost.GetStreamName(String)
- uid: System.Configuration.Internal.IInternalConfigHost.GetStreamNameForConfigSource(System.String,System.String)
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: GetStreamNameForConfigSource(String,String)
  nameWithType: IInternalConfigHost.GetStreamNameForConfigSource(String,String)
  fullName: System.Configuration.Internal.IInternalConfigHost.GetStreamNameForConfigSource(String,String)
- uid: System.Configuration.Internal.IInternalConfigHost.GetStreamVersion(System.String)
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: GetStreamVersion(String)
  nameWithType: IInternalConfigHost.GetStreamVersion(String)
  fullName: System.Configuration.Internal.IInternalConfigHost.GetStreamVersion(String)
- uid: System.Configuration.Internal.IInternalConfigHost.Impersonate
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: Impersonate()
  nameWithType: IInternalConfigHost.Impersonate()
  fullName: System.Configuration.Internal.IInternalConfigHost.Impersonate()
- uid: System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Configuration.Internal.IInternalConfigHost.Init(System.Configuration.Internal.IInternalConfigRoot,System.Object[])
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: Init(IInternalConfigRoot,Object[])
  nameWithType: IInternalConfigHost.Init(IInternalConfigRoot,Object[])
  fullName: System.Configuration.Internal.IInternalConfigHost.Init(IInternalConfigRoot,Object[])
- uid: System.Configuration.Internal.IInternalConfigRoot
  parent: System.Configuration.Internal
  isExternal: false
  name: IInternalConfigRoot
  nameWithType: IInternalConfigRoot
  fullName: System.Configuration.Internal.IInternalConfigRoot
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Configuration.Internal.IInternalConfigHost.InitForConfiguration(System.String@,System.String@,System.String@,System.Configuration.Internal.IInternalConfigRoot,System.Object[])
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: InitForConfiguration(String,String,String,IInternalConfigRoot,Object[])
  nameWithType: IInternalConfigHost.InitForConfiguration(String,String,String,IInternalConfigRoot,Object[])
  fullName: System.Configuration.Internal.IInternalConfigHost.InitForConfiguration(String,String,String,IInternalConfigRoot,Object[])
- uid: System.Configuration.Internal.IInternalConfigHost.IsAboveApplication(System.String)
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: IsAboveApplication(String)
  nameWithType: IInternalConfigHost.IsAboveApplication(String)
  fullName: System.Configuration.Internal.IInternalConfigHost.IsAboveApplication(String)
- uid: System.Configuration.Internal.IInternalConfigHost.IsConfigRecordRequired(System.String)
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: IsConfigRecordRequired(String)
  nameWithType: IInternalConfigHost.IsConfigRecordRequired(String)
  fullName: System.Configuration.Internal.IInternalConfigHost.IsConfigRecordRequired(String)
- uid: System.Configuration.Internal.IInternalConfigHost.IsDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition)
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: IsDefinitionAllowed(String,ConfigurationAllowDefinition,ConfigurationAllowExeDefinition)
  nameWithType: IInternalConfigHost.IsDefinitionAllowed(String,ConfigurationAllowDefinition,ConfigurationAllowExeDefinition)
  fullName: System.Configuration.Internal.IInternalConfigHost.IsDefinitionAllowed(String,ConfigurationAllowDefinition,ConfigurationAllowExeDefinition)
- uid: System.Configuration.ConfigurationAllowDefinition
  parent: System.Configuration
  isExternal: false
  name: ConfigurationAllowDefinition
  nameWithType: ConfigurationAllowDefinition
  fullName: System.Configuration.ConfigurationAllowDefinition
- uid: System.Configuration.ConfigurationAllowExeDefinition
  parent: System.Configuration
  isExternal: false
  name: ConfigurationAllowExeDefinition
  nameWithType: ConfigurationAllowExeDefinition
  fullName: System.Configuration.ConfigurationAllowExeDefinition
- uid: System.Configuration.Internal.IInternalConfigHost.IsFile(System.String)
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: IsFile(String)
  nameWithType: IInternalConfigHost.IsFile(String)
  fullName: System.Configuration.Internal.IInternalConfigHost.IsFile(String)
- uid: System.Configuration.Internal.IInternalConfigHost.IsFullTrustSectionWithoutAptcaAllowed(System.Configuration.Internal.IInternalConfigRecord)
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: IsFullTrustSectionWithoutAptcaAllowed(IInternalConfigRecord)
  nameWithType: IInternalConfigHost.IsFullTrustSectionWithoutAptcaAllowed(IInternalConfigRecord)
  fullName: System.Configuration.Internal.IInternalConfigHost.IsFullTrustSectionWithoutAptcaAllowed(IInternalConfigRecord)
- uid: System.Configuration.Internal.IInternalConfigHost.IsInitDelayed(System.Configuration.Internal.IInternalConfigRecord)
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: IsInitDelayed(IInternalConfigRecord)
  nameWithType: IInternalConfigHost.IsInitDelayed(IInternalConfigRecord)
  fullName: System.Configuration.Internal.IInternalConfigHost.IsInitDelayed(IInternalConfigRecord)
- uid: System.Configuration.Internal.IInternalConfigHost.IsLocationApplicable(System.String)
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: IsLocationApplicable(String)
  nameWithType: IInternalConfigHost.IsLocationApplicable(String)
  fullName: System.Configuration.Internal.IInternalConfigHost.IsLocationApplicable(String)
- uid: System.Configuration.Internal.IInternalConfigHost.IsRemote
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: IsRemote
  nameWithType: IInternalConfigHost.IsRemote
  fullName: System.Configuration.Internal.IInternalConfigHost.IsRemote
- uid: System.Configuration.Internal.IInternalConfigHost.IsSecondaryRoot(System.String)
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: IsSecondaryRoot(String)
  nameWithType: IInternalConfigHost.IsSecondaryRoot(String)
  fullName: System.Configuration.Internal.IInternalConfigHost.IsSecondaryRoot(String)
- uid: System.Configuration.Internal.IInternalConfigHost.IsTrustedConfigPath(System.String)
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: IsTrustedConfigPath(String)
  nameWithType: IInternalConfigHost.IsTrustedConfigPath(String)
  fullName: System.Configuration.Internal.IInternalConfigHost.IsTrustedConfigPath(String)
- uid: System.Configuration.Internal.IInternalConfigHost.OpenStreamForRead(System.String)
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: OpenStreamForRead(String)
  nameWithType: IInternalConfigHost.OpenStreamForRead(String)
  fullName: System.Configuration.Internal.IInternalConfigHost.OpenStreamForRead(String)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Configuration.Internal.IInternalConfigHost.OpenStreamForRead(System.String,System.Boolean)
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: OpenStreamForRead(String,Boolean)
  nameWithType: IInternalConfigHost.OpenStreamForRead(String,Boolean)
  fullName: System.Configuration.Internal.IInternalConfigHost.OpenStreamForRead(String,Boolean)
- uid: System.Configuration.Internal.IInternalConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@)
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: OpenStreamForWrite(String,String,Object)
  nameWithType: IInternalConfigHost.OpenStreamForWrite(String,String,Object)
  fullName: System.Configuration.Internal.IInternalConfigHost.OpenStreamForWrite(String,String,Object)
- uid: System.Configuration.Internal.IInternalConfigHost.OpenStreamForWrite(System.String,System.String,System.Object@,System.Boolean)
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: OpenStreamForWrite(String,String,Object,Boolean)
  nameWithType: IInternalConfigHost.OpenStreamForWrite(String,String,Object,Boolean)
  fullName: System.Configuration.Internal.IInternalConfigHost.OpenStreamForWrite(String,String,Object,Boolean)
- uid: System.Configuration.Internal.IInternalConfigHost.PrefetchAll(System.String,System.String)
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: PrefetchAll(String,String)
  nameWithType: IInternalConfigHost.PrefetchAll(String,String)
  fullName: System.Configuration.Internal.IInternalConfigHost.PrefetchAll(String,String)
- uid: System.Configuration.Internal.IInternalConfigHost.PrefetchSection(System.String,System.String)
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: PrefetchSection(String,String)
  nameWithType: IInternalConfigHost.PrefetchSection(String,String)
  fullName: System.Configuration.Internal.IInternalConfigHost.PrefetchSection(String,String)
- uid: System.Configuration.Internal.IInternalConfigHost.RequireCompleteInit(System.Configuration.Internal.IInternalConfigRecord)
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: RequireCompleteInit(IInternalConfigRecord)
  nameWithType: IInternalConfigHost.RequireCompleteInit(IInternalConfigRecord)
  fullName: System.Configuration.Internal.IInternalConfigHost.RequireCompleteInit(IInternalConfigRecord)
- uid: System.Configuration.Internal.IInternalConfigHost.StartMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: StartMonitoringStreamForChanges(String,StreamChangeCallback)
  nameWithType: IInternalConfigHost.StartMonitoringStreamForChanges(String,StreamChangeCallback)
  fullName: System.Configuration.Internal.IInternalConfigHost.StartMonitoringStreamForChanges(String,StreamChangeCallback)
- uid: System.Configuration.Internal.StreamChangeCallback
  parent: System.Configuration.Internal
  isExternal: false
  name: StreamChangeCallback
  nameWithType: StreamChangeCallback
  fullName: System.Configuration.Internal.StreamChangeCallback
- uid: System.Configuration.Internal.IInternalConfigHost.StopMonitoringStreamForChanges(System.String,System.Configuration.Internal.StreamChangeCallback)
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: StopMonitoringStreamForChanges(String,StreamChangeCallback)
  nameWithType: IInternalConfigHost.StopMonitoringStreamForChanges(String,StreamChangeCallback)
  fullName: System.Configuration.Internal.IInternalConfigHost.StopMonitoringStreamForChanges(String,StreamChangeCallback)
- uid: System.Configuration.Internal.IInternalConfigHost.SupportsChangeNotifications
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: SupportsChangeNotifications
  nameWithType: IInternalConfigHost.SupportsChangeNotifications
  fullName: System.Configuration.Internal.IInternalConfigHost.SupportsChangeNotifications
- uid: System.Configuration.Internal.IInternalConfigHost.SupportsLocation
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: SupportsLocation
  nameWithType: IInternalConfigHost.SupportsLocation
  fullName: System.Configuration.Internal.IInternalConfigHost.SupportsLocation
- uid: System.Configuration.Internal.IInternalConfigHost.SupportsPath
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: SupportsPath
  nameWithType: IInternalConfigHost.SupportsPath
  fullName: System.Configuration.Internal.IInternalConfigHost.SupportsPath
- uid: System.Configuration.Internal.IInternalConfigHost.SupportsRefresh
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: SupportsRefresh
  nameWithType: IInternalConfigHost.SupportsRefresh
  fullName: System.Configuration.Internal.IInternalConfigHost.SupportsRefresh
- uid: System.Configuration.Internal.IInternalConfigHost.VerifyDefinitionAllowed(System.String,System.Configuration.ConfigurationAllowDefinition,System.Configuration.ConfigurationAllowExeDefinition,System.Configuration.Internal.IConfigErrorInfo)
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: VerifyDefinitionAllowed(String,ConfigurationAllowDefinition,ConfigurationAllowExeDefinition,IConfigErrorInfo)
  nameWithType: IInternalConfigHost.VerifyDefinitionAllowed(String,ConfigurationAllowDefinition,ConfigurationAllowExeDefinition,IConfigErrorInfo)
  fullName: System.Configuration.Internal.IInternalConfigHost.VerifyDefinitionAllowed(String,ConfigurationAllowDefinition,ConfigurationAllowExeDefinition,IConfigErrorInfo)
- uid: System.Configuration.Internal.IConfigErrorInfo
  parent: System.Configuration.Internal
  isExternal: false
  name: IConfigErrorInfo
  nameWithType: IConfigErrorInfo
  fullName: System.Configuration.Internal.IConfigErrorInfo
- uid: System.Configuration.Internal.IInternalConfigHost.WriteCompleted(System.String,System.Boolean,System.Object)
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: WriteCompleted(String,Boolean,Object)
  nameWithType: IInternalConfigHost.WriteCompleted(String,Boolean,Object)
  fullName: System.Configuration.Internal.IInternalConfigHost.WriteCompleted(String,Boolean,Object)
- uid: System.Configuration.Internal.IInternalConfigHost.WriteCompleted(System.String,System.Boolean,System.Object,System.Boolean)
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: WriteCompleted(String,Boolean,Object,Boolean)
  nameWithType: IInternalConfigHost.WriteCompleted(String,Boolean,Object,Boolean)
  fullName: System.Configuration.Internal.IInternalConfigHost.WriteCompleted(String,Boolean,Object,Boolean)
- uid: System.Configuration.Internal.IInternalConfigHost.CreateConfigurationContext*
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: CreateConfigurationContext
  nameWithType: IInternalConfigHost.CreateConfigurationContext
- uid: System.Configuration.Internal.IInternalConfigHost.CreateDeprecatedConfigContext*
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: CreateDeprecatedConfigContext
  nameWithType: IInternalConfigHost.CreateDeprecatedConfigContext
- uid: System.Configuration.Internal.IInternalConfigHost.DecryptSection*
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: DecryptSection
  nameWithType: IInternalConfigHost.DecryptSection
- uid: System.Configuration.Internal.IInternalConfigHost.DeleteStream*
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: DeleteStream
  nameWithType: IInternalConfigHost.DeleteStream
- uid: System.Configuration.Internal.IInternalConfigHost.EncryptSection*
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: EncryptSection
  nameWithType: IInternalConfigHost.EncryptSection
- uid: System.Configuration.Internal.IInternalConfigHost.GetConfigPathFromLocationSubPath*
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: GetConfigPathFromLocationSubPath
  nameWithType: IInternalConfigHost.GetConfigPathFromLocationSubPath
- uid: System.Configuration.Internal.IInternalConfigHost.GetConfigType*
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: GetConfigType
  nameWithType: IInternalConfigHost.GetConfigType
- uid: System.Configuration.Internal.IInternalConfigHost.GetConfigTypeName*
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: GetConfigTypeName
  nameWithType: IInternalConfigHost.GetConfigTypeName
- uid: System.Configuration.Internal.IInternalConfigHost.GetRestrictedPermissions*
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: GetRestrictedPermissions
  nameWithType: IInternalConfigHost.GetRestrictedPermissions
- uid: System.Configuration.Internal.IInternalConfigHost.GetStreamName*
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: GetStreamName
  nameWithType: IInternalConfigHost.GetStreamName
- uid: System.Configuration.Internal.IInternalConfigHost.GetStreamNameForConfigSource*
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: GetStreamNameForConfigSource
  nameWithType: IInternalConfigHost.GetStreamNameForConfigSource
- uid: System.Configuration.Internal.IInternalConfigHost.GetStreamVersion*
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: GetStreamVersion
  nameWithType: IInternalConfigHost.GetStreamVersion
- uid: System.Configuration.Internal.IInternalConfigHost.Impersonate*
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: Impersonate
  nameWithType: IInternalConfigHost.Impersonate
- uid: System.Configuration.Internal.IInternalConfigHost.Init*
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: Init
  nameWithType: IInternalConfigHost.Init
- uid: System.Configuration.Internal.IInternalConfigHost.InitForConfiguration*
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: InitForConfiguration
  nameWithType: IInternalConfigHost.InitForConfiguration
- uid: System.Configuration.Internal.IInternalConfigHost.IsAboveApplication*
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: IsAboveApplication
  nameWithType: IInternalConfigHost.IsAboveApplication
- uid: System.Configuration.Internal.IInternalConfigHost.IsConfigRecordRequired*
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: IsConfigRecordRequired
  nameWithType: IInternalConfigHost.IsConfigRecordRequired
- uid: System.Configuration.Internal.IInternalConfigHost.IsDefinitionAllowed*
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: IsDefinitionAllowed
  nameWithType: IInternalConfigHost.IsDefinitionAllowed
- uid: System.Configuration.Internal.IInternalConfigHost.IsFile*
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: IsFile
  nameWithType: IInternalConfigHost.IsFile
- uid: System.Configuration.Internal.IInternalConfigHost.IsFullTrustSectionWithoutAptcaAllowed*
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: IsFullTrustSectionWithoutAptcaAllowed
  nameWithType: IInternalConfigHost.IsFullTrustSectionWithoutAptcaAllowed
- uid: System.Configuration.Internal.IInternalConfigHost.IsInitDelayed*
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: IsInitDelayed
  nameWithType: IInternalConfigHost.IsInitDelayed
- uid: System.Configuration.Internal.IInternalConfigHost.IsLocationApplicable*
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: IsLocationApplicable
  nameWithType: IInternalConfigHost.IsLocationApplicable
- uid: System.Configuration.Internal.IInternalConfigHost.IsRemote*
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: IsRemote
  nameWithType: IInternalConfigHost.IsRemote
- uid: System.Configuration.Internal.IInternalConfigHost.IsSecondaryRoot*
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: IsSecondaryRoot
  nameWithType: IInternalConfigHost.IsSecondaryRoot
- uid: System.Configuration.Internal.IInternalConfigHost.IsTrustedConfigPath*
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: IsTrustedConfigPath
  nameWithType: IInternalConfigHost.IsTrustedConfigPath
- uid: System.Configuration.Internal.IInternalConfigHost.OpenStreamForRead*
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: OpenStreamForRead
  nameWithType: IInternalConfigHost.OpenStreamForRead
- uid: System.Configuration.Internal.IInternalConfigHost.OpenStreamForWrite*
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: OpenStreamForWrite
  nameWithType: IInternalConfigHost.OpenStreamForWrite
- uid: System.Configuration.Internal.IInternalConfigHost.PrefetchAll*
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: PrefetchAll
  nameWithType: IInternalConfigHost.PrefetchAll
- uid: System.Configuration.Internal.IInternalConfigHost.PrefetchSection*
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: PrefetchSection
  nameWithType: IInternalConfigHost.PrefetchSection
- uid: System.Configuration.Internal.IInternalConfigHost.RequireCompleteInit*
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: RequireCompleteInit
  nameWithType: IInternalConfigHost.RequireCompleteInit
- uid: System.Configuration.Internal.IInternalConfigHost.StartMonitoringStreamForChanges*
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: StartMonitoringStreamForChanges
  nameWithType: IInternalConfigHost.StartMonitoringStreamForChanges
- uid: System.Configuration.Internal.IInternalConfigHost.StopMonitoringStreamForChanges*
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: StopMonitoringStreamForChanges
  nameWithType: IInternalConfigHost.StopMonitoringStreamForChanges
- uid: System.Configuration.Internal.IInternalConfigHost.SupportsChangeNotifications*
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: SupportsChangeNotifications
  nameWithType: IInternalConfigHost.SupportsChangeNotifications
- uid: System.Configuration.Internal.IInternalConfigHost.SupportsLocation*
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: SupportsLocation
  nameWithType: IInternalConfigHost.SupportsLocation
- uid: System.Configuration.Internal.IInternalConfigHost.SupportsPath*
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: SupportsPath
  nameWithType: IInternalConfigHost.SupportsPath
- uid: System.Configuration.Internal.IInternalConfigHost.SupportsRefresh*
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: SupportsRefresh
  nameWithType: IInternalConfigHost.SupportsRefresh
- uid: System.Configuration.Internal.IInternalConfigHost.VerifyDefinitionAllowed*
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: VerifyDefinitionAllowed
  nameWithType: IInternalConfigHost.VerifyDefinitionAllowed
- uid: System.Configuration.Internal.IInternalConfigHost.WriteCompleted*
  parent: System.Configuration.Internal.IInternalConfigHost
  isExternal: false
  name: WriteCompleted
  nameWithType: IInternalConfigHost.WriteCompleted
