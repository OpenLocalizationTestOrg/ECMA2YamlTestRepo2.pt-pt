### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.SamlCondition
  id: SamlCondition
  children:
  - System.IdentityModel.Tokens.SamlCondition.#ctor
  - System.IdentityModel.Tokens.SamlCondition.IsReadOnly
  - System.IdentityModel.Tokens.SamlCondition.MakeReadOnly
  - System.IdentityModel.Tokens.SamlCondition.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.Tokens.SamlCondition.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)
  langs:
  - csharp
  name: SamlCondition
  nameWithType: SamlCondition
  fullName: System.IdentityModel.Tokens.SamlCondition
  type: Class
  summary: "Represents a condition that must be taken into account when assessing the validity of a SAML assertion."
  remarks: "<xref:System.IdentityModel.Tokens.SamlSecurityToken> security tokens specify their claims using SAML assertions and a set of conditions that must be taken into account when assessing the validity of the SAML assertion. The SamlCondition class represents a single condition. An example of a condition is whether the SAML assertion must not be cached, which is represented by the <xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition> class.       The SAML specification defines two conditions and it allows for the set of conditions to be extended. The two conditions defined by the SAML specification are <xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition> and <xref:System.IdentityModel.Tokens.SamlDoNotCacheCondition>. To define a new condition, derive a class from the SamlCondition class."
  syntax:
    content: public abstract class SamlCondition
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlCondition.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Tokens.SamlCondition
  langs:
  - csharp
  name: SamlCondition()
  nameWithType: SamlCondition.SamlCondition()
  fullName: System.IdentityModel.Tokens.SamlCondition.SamlCondition()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Initializes a new instance of the <xref href=&quot;System.IdentityModel.Tokens.SamlCondition&quot;></xref> class."
  syntax:
    content: protected SamlCondition ();
    parameters: []
  overload: System.IdentityModel.Tokens.SamlCondition.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlCondition.IsReadOnly
  id: IsReadOnly
  parent: System.IdentityModel.Tokens.SamlCondition
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: SamlCondition.IsReadOnly
  fullName: System.IdentityModel.Tokens.SamlCondition.IsReadOnly
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "When overridden in a derived class, gets a value indicating whether the properties of this instance are read-only."
  remarks: "To make this instance of the <xref:System.IdentityModel.Tokens.SamlCondition> class read-only, call the <xref:System.IdentityModel.Tokens.SamlCondition.MakeReadOnly%2A> method."
  syntax:
    content: public abstract bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the properties of this instance are read-only; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.IdentityModel.Tokens.SamlCondition.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlCondition.MakeReadOnly
  id: MakeReadOnly
  parent: System.IdentityModel.Tokens.SamlCondition
  langs:
  - csharp
  name: MakeReadOnly()
  nameWithType: SamlCondition.MakeReadOnly()
  fullName: System.IdentityModel.Tokens.SamlCondition.MakeReadOnly()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "When overridden in a derived class, causes this instance to be read-only."
  remarks: "When the MakeReadOnly method is called, the <xref:System.IdentityModel.Tokens.SamlCondition.IsReadOnly%2A> property is set to `true` and properties of this instance can no longer be set."
  syntax:
    content: public abstract void MakeReadOnly ();
    parameters: []
  overload: System.IdentityModel.Tokens.SamlCondition.MakeReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlCondition.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  id: ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlCondition
  langs:
  - csharp
  name: ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: SamlCondition.ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlCondition.ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "When overridden in a derived class, reads the condition from the specified XML reader."
  syntax:
    content: public abstract void ReadXml (System.Xml.XmlDictionaryReader reader, System.IdentityModel.Tokens.SamlSerializer samlSerializer, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer, System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);
    parameters:
    - id: reader
      type: System.Xml.XmlDictionaryReader
      description: "A <xref:System.Xml.XmlDictionaryReader> to read the condition."
    - id: samlSerializer
      type: System.IdentityModel.Tokens.SamlSerializer
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlSerializer&quot;></xref> that is capable of reading XML elements in the SAML authorization statement that is defined in the SAML specification."
    - id: keyInfoSerializer
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenSerializer&quot;></xref> that reads the <xref uid=&quot;langword_csharp_KeyInfo&quot; name=&quot;KeyInfo&quot; href=&quot;&quot;></xref> clause of the digital signature."
    - id: outOfBandTokenResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;></xref> that determines the security token that created the digital signature."
  overload: System.IdentityModel.Tokens.SamlCondition.ReadXml*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlCondition.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)
  id: WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)
  parent: System.IdentityModel.Tokens.SamlCondition
  langs:
  - csharp
  name: WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
  nameWithType: SamlCondition.WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
  fullName: System.IdentityModel.Tokens.SamlCondition.WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "When overridden in a derived class, writes the condition into the specified XML serializer."
  syntax:
    content: public abstract void WriteXml (System.Xml.XmlDictionaryWriter writer, System.IdentityModel.Tokens.SamlSerializer samlSerializer, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer);
    parameters:
    - id: writer
      type: System.Xml.XmlDictionaryWriter
      description: "A <xref:System.Xml.XmlDictionaryWriter> to write the condition."
    - id: samlSerializer
      type: System.IdentityModel.Tokens.SamlSerializer
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlSerializer&quot;></xref> that is capable of writing XML elements in a SAML assertion."
    - id: keyInfoSerializer
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenSerializer&quot;></xref> that is capable of writing <xref uid=&quot;langword_csharp_KeyInfo&quot; name=&quot;KeyInfo&quot; href=&quot;&quot;></xref> clauses."
  overload: System.IdentityModel.Tokens.SamlCondition.WriteXml*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.Tokens.SamlCondition.#ctor
  parent: System.IdentityModel.Tokens.SamlCondition
  isExternal: false
  name: SamlCondition()
  nameWithType: SamlCondition.SamlCondition()
  fullName: System.IdentityModel.Tokens.SamlCondition.SamlCondition()
- uid: System.IdentityModel.Tokens.SamlCondition.IsReadOnly
  parent: System.IdentityModel.Tokens.SamlCondition
  isExternal: false
  name: IsReadOnly
  nameWithType: SamlCondition.IsReadOnly
  fullName: System.IdentityModel.Tokens.SamlCondition.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.SamlCondition.MakeReadOnly
  parent: System.IdentityModel.Tokens.SamlCondition
  isExternal: false
  name: MakeReadOnly()
  nameWithType: SamlCondition.MakeReadOnly()
  fullName: System.IdentityModel.Tokens.SamlCondition.MakeReadOnly()
- uid: System.IdentityModel.Tokens.SamlCondition.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlCondition
  isExternal: false
  name: ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: SamlCondition.ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlCondition.ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
- uid: System.Xml.XmlDictionaryReader
  parent: System.Xml
  isExternal: true
  name: XmlDictionaryReader
  nameWithType: XmlDictionaryReader
  fullName: System.Xml.XmlDictionaryReader
- uid: System.IdentityModel.Tokens.SamlSerializer
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlSerializer
  nameWithType: SamlSerializer
  fullName: System.IdentityModel.Tokens.SamlSerializer
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenSerializer
  nameWithType: SecurityTokenSerializer
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer
- uid: System.IdentityModel.Selectors.SecurityTokenResolver
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenResolver
  nameWithType: SecurityTokenResolver
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver
- uid: System.IdentityModel.Tokens.SamlCondition.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)
  parent: System.IdentityModel.Tokens.SamlCondition
  isExternal: false
  name: WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
  nameWithType: SamlCondition.WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
  fullName: System.IdentityModel.Tokens.SamlCondition.WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
- uid: System.Xml.XmlDictionaryWriter
  parent: System.Xml
  isExternal: true
  name: XmlDictionaryWriter
  nameWithType: XmlDictionaryWriter
  fullName: System.Xml.XmlDictionaryWriter
- uid: System.IdentityModel.Tokens.SamlCondition.#ctor*
  parent: System.IdentityModel.Tokens.SamlCondition
  isExternal: false
  name: SamlCondition
  nameWithType: SamlCondition.SamlCondition
- uid: System.IdentityModel.Tokens.SamlCondition.IsReadOnly*
  parent: System.IdentityModel.Tokens.SamlCondition
  isExternal: false
  name: IsReadOnly
  nameWithType: SamlCondition.IsReadOnly
- uid: System.IdentityModel.Tokens.SamlCondition.MakeReadOnly*
  parent: System.IdentityModel.Tokens.SamlCondition
  isExternal: false
  name: MakeReadOnly
  nameWithType: SamlCondition.MakeReadOnly
- uid: System.IdentityModel.Tokens.SamlCondition.ReadXml*
  parent: System.IdentityModel.Tokens.SamlCondition
  isExternal: false
  name: ReadXml
  nameWithType: SamlCondition.ReadXml
- uid: System.IdentityModel.Tokens.SamlCondition.WriteXml*
  parent: System.IdentityModel.Tokens.SamlCondition
  isExternal: false
  name: WriteXml
  nameWithType: SamlCondition.WriteXml
