### YamlMime:ManagedReference
items:
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient
  id: UdpSingleSourceMulticastClient
  children:
  - System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)
  - System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)
  - System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose
  - System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)
  - System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)
  - System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)
  - System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize
  - System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize
  langs:
  - csharp
  name: UdpSingleSourceMulticastClient
  nameWithType: UdpSingleSourceMulticastClient
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient
  type: Class
  summary: "Um recetor de cliente para o tráfego multicast de uma única origem, também conhecido como origem específica Multicast (SSM)."
  remarks: "O endereço de multicast de grupo e o endereço de origem do remetente tem de ser conhecidas.       Para além de receção de dados de multicast de um remetente específico, o cliente UdpSingleSourceMulticastClient também pode enviar dados unicast novamente para o remetente.       Para receber multicast de várias origens, ou quando as origens não são conhecidas com antecedência, em vez disso, utilize a classe de UdpSingleSourceMulticastClient."
  syntax:
    content: >-
      [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]

      [System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)]

      public class UdpSingleSourceMulticastClient : IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)
  id: '#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)'
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: UdpSingleSourceMulticastClient(IPAddress,IPAddress,Int32)
  nameWithType: UdpSingleSourceMulticastClient.UdpSingleSourceMulticastClient(IPAddress,IPAddress,Int32)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.UdpSingleSourceMulticastClient(IPAddress,IPAddress,Int32)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Cria uma nova <xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> cliente UDP que pode subscrever para um endereço de grupo e receber os datagramas de uma única origem."
  remarks: "O construtor de UdpSingleSourceMulticastClient associa um socket multicast UDP com um endereço de grupo e a porta, mas não vincular ou caso contrário, utilize o socket.       O `groupAddress` parâmetro pode ser um IPv6 ou IPv4 multicast endereço. No entanto, a família de endereços do `sourceAddress` e `groupAddress` parâmetros têm o mesmo.       O `localPort` parâmetro não tem de especificar uma porta inferior a 1.024."
  syntax:
    content: public UdpSingleSourceMulticastClient (System.Net.IPAddress sourceAddress, System.Net.IPAddress groupAddress, int localPort);
    parameters:
    - id: sourceAddress
      type: System.Net.IPAddress
      description: "O endereço de origem do remetente para este recetor subscrever."
    - id: groupAddress
      type: System.Net.IPAddress
      description: "O endereço de multicast de grupo para este recetor subscrever."
    - id: localPort
      type: System.Int32
      description: "A porta local para este recetor à qual vincular."
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sourceAddress</code>e <code>groupAddress</code> tem de ser a mesma família de endereços."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceAddress</code>é uma referência nulo (Nothing em Visual Basic).       - ou - <code>groupAddress</code> é uma referência nulo (Nothing em Visual Basic)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>localPort</code>é inferior a 0 - ou - <code>localPort</code> é maior que 65535."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>localPort</code>é inferior a 1024"
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)
  id: BeginJoinGroup(System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: BeginJoinGroup(AsyncCallback,Object)
  nameWithType: UdpSingleSourceMulticastClient.BeginJoinGroup(AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Vincula o socket e começa a uma operação de associação ao grupo de multicast para permitir que os datagramas ser recebida de um endereço de origem única."
  remarks: "O método BeginJoinGroup está vinculado a um socket multicast UDP para uma porta local e associa um grupo de multicast para permitir que os datagramas ser recebida de um endereço de origem única. O endereço multicast grupo, o endereço de origem única e a porta local para vincular ao estão especificados no <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A>construtor.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A>       O método especificado no `callback` parâmetro é invocado quando a conclusão da operação para aderir ao grupo de multicast.       Se for necessário pelo runtime, o método BeginJoinGroup também executa uma verificação de política para verificar que o cliente está autorizado a aceder ao grupo de multicast. Se o cliente não é permitido o acesso, uma <xref:System.Net.Sockets.SocketException>é emitida com <xref:System.Net.Sockets.SocketError>.</xref:System.Net.Sockets.SocketError> </xref:System.Net.Sockets.SocketException>"
  syntax:
    content: public IAsyncResult BeginJoinGroup (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "Um método de chamada de retorno para invocar quando a operação for concluída."
    - id: state
      type: System.Object
      description: "Informações de estado opcional para passar para o `callback` método para esta operação."
    return:
      type: System.IAsyncResult
      description: "Devolve <xref:System.IAsyncResult>.</xref:System.IAsyncResult>       Um <xref:System.IAsyncResult>que referencia esta operação.</xref:System.IAsyncResult>"
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O grupo de multicast já foi associado ou uma operação de associação está atualmente em curso."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> foi eliminado."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Ocorreu um erro ao tentar aceder à socket. Consulte a secção observações para obter mais informações."
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: BeginReceiveFromSource(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: UdpSingleSourceMulticastClient.BeginReceiveFromSource(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Começa a operação de receção de um pacote do associados a um grupo de multicast e invoca a chamada de retorno especificada quando chegou no grupo de um pacote de um remetente especificado."
  remarks: "O método BeginReceiveFromSource é iniciada uma operação de receção de um pacote UDP do multicast associado a um grupo de um remetente único. A porta local, o grupo de multicast e o endereço do remetente origem estão especificados no <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A>construtor.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> O cliente de multicast tem também de ter concluído uma associação ao grupo de multicast.       O método especificado no `callback` parâmetro é invocado quando recebeu um pacote.       É possível ter uma falha de socket se uma operação de receção falhar de forma síncrona, apesar de este ser invulgar com UDP. Se ocorrer uma falha de socket, um <xref:System.Net.Sockets.SocketException>é emitida.</xref:System.Net.Sockets.SocketException> Erro recebido é especificado como um membro do <xref:System.Net.Sockets.SocketError>enumeração.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public IAsyncResult BeginReceiveFromSource (byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "A memória intermédia para armazenar os dados recebidos."
    - id: offset
      type: System.Int32
      description: "O deslocamento, em bytes, do início do `buffer` onde os dados devem ser armazenados."
    - id: count
      type: System.Int32
      description: "O número máximo de bytes para receber e armazenar no `buffer`."
    - id: callback
      type: System.AsyncCallback
      description: "O método de chamada de retorno para invocar quando concluir a operação."
    - id: state
      type: System.Object
      description: "Informações de estado opcional para passar para o `callback` método para esta operação."
    return:
      type: System.IAsyncResult
      description: "Devolve <xref:System.IAsyncResult>.</xref:System.IAsyncResult>       Um <xref:System.IAsyncResult>que referencia esta operação.</xref:System.IAsyncResult>"
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>é uma referência nulo (Nothing em Visual Basic)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>é inferior a 0 - ou - <code>offset</code> é superior ao comprimento do <code>buffer</code>.       - ou - <code>count</code> é inferior a 0 - ou - <code>offset</code> plus a contagem é superior ao comprimento do <code>buffer</code>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O grupo de multicast ainda não foi associado."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> foi eliminado."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Ocorreu um erro ao tentar aceder ao socket de receção. Consulte a secção observações para obter mais informações."
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: BeginSendToSource(Byte[],Int32,Int32,Int32,AsyncCallback,Object)
  nameWithType: UdpSingleSourceMulticastClient.BeginSendToSource(Byte[],Int32,Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(Byte[],Int32,Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Começa a operação de envio de um pacote unicast para a origem especificada anteriormente."
  remarks: "O método BeginSendToSource é iniciada uma operação de envio de um pacote UDP para a origem especificada anteriormente.       Alguns protocolos utilizam estas informações para transmitir ao longo do controlo de fluxo, qualidade de estatísticas de serviço ou mensagens de recuperação.       O método especificado no `callback` parâmetro é invocado quando existe um pacote foi enviado.       O cliente tem de ter concluído uma associação ao grupo de multicast.       Se a porta de destino especificado no `remotePort` parâmetro é inferior a 1.024, uma <xref:System.Net.Sockets.SocketException>é emitida com <xref:System.Net.Sockets.SocketError>.</xref:System.Net.Sockets.SocketError> </xref:System.Net.Sockets.SocketException>       É possível ter uma falha de socket se uma operação de envio falhar de forma síncrona, apesar de este ser invulgar com UDP. Se ocorrer uma falha de socket, um <xref:System.Net.Sockets.SocketException>é emitida.</xref:System.Net.Sockets.SocketException> Erro recebido é especificado como um membro do <xref:System.Net.Sockets.SocketError>enumeração.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public IAsyncResult BeginSendToSource (byte[] buffer, int offset, int count, int remotePort, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "A memória intermédia que contém os dados para enviar."
    - id: offset
      type: System.Int32
      description: "O deslocamento, em bytes, do início do `buffer` para ler os dados a serem enviados."
    - id: count
      type: System.Int32
      description: "O número de bytes para enviar a partir de `buffer`."
    - id: remotePort
      type: System.Int32
      description: "A porta remota ao qual o pacote está a ser enviados. O endereço remoto é especificado pelo &lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A&gt; construtor."
    - id: callback
      type: System.AsyncCallback
      description: "O método de chamada de retorno para invocar quando concluir a operação."
    - id: state
      type: System.Object
      description: "Informações de estado opcional para passar para o `callback` método para esta operação."
    return:
      type: System.IAsyncResult
      description: "Devolve <xref:System.IAsyncResult>.</xref:System.IAsyncResult>       Um <xref:System.IAsyncResult>que referencia esta operação.</xref:System.IAsyncResult>"
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>é uma referência nulo (Nothing em Visual Basic)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>é inferior a 0 - ou - <code>offset</code> é superior ao comprimento do <code>buffer</code>.       - ou - <code>count</code> é inferior a 0 - ou - <code>offset</code> plus a contagem é superior ao comprimento do <code>buffer</code>.       - ou - <code>remotePort</code> é inferior a 0 ou maior que 65535."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O grupo de multicast ainda não foi associado."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> foi eliminado."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Ocorreu um erro ao tentar aceder à socket. Consulte a secção observações para obter mais informações."
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose
  id: Dispose
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: Dispose()
  nameWithType: UdpSingleSourceMulticastClient.Dispose()
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Deixa o grupo de multicast e disponibiliza todos os recursos utilizados pela instância atual do <xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> classe e <xref:System.Net.Sockets.Socket>.</xref:System.Net.Sockets.Socket> subjacentes"
  remarks: "É possível chamar Dispose quando tiver terminado de utilizando <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient> O método de Dispose deixa o <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>num Estado não utilizável.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient> Depois de chamar Dispose, tem de libertar todas as referências para o <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>para que o recoletor de lixo pode reclame a memória que a <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>foi occupying.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient> </xref:System.Net.Sockets.UdpSingleSourceMulticastClient>       Chamar sempre Dispose antes de libertar a última referência <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient> Caso contrário, os recursos que está a utilizar não irão ser libertados até que as chamadas de recoletor de lixo a <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>do objeto <xref:System.Object.Finalize%2A>método.</xref:System.Object.Finalize%2A> </xref:System.Net.Sockets.UdpSingleSourceMulticastClient>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)
  id: EndJoinGroup(System.IAsyncResult)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: EndJoinGroup(IAsyncResult)
  nameWithType: UdpSingleSourceMulticastClient.EndJoinGroup(IAsyncResult)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(IAsyncResult)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Concluir a operação do grupo de associação assíncrona a um grupo de multicast."
  remarks: "O método EndJoinGroup conclui um enlace assíncrono para uma operação de socket e aderir a um grupo de multicast.       Se for necessário pelo runtime, o método EndJoinGroup também executa uma verificação de política para verificar que o cliente está autorizado a aceder ao grupo de multicast. Se o cliente não é permitido o acesso, uma <xref:System.Net.Sockets.SocketException>é emitida com <xref:System.Net.Sockets.SocketError>.</xref:System.Net.Sockets.SocketError> </xref:System.Net.Sockets.SocketException>       Se ocorrer uma falha de socket ao efetuar a operação de associação de grupo, um <xref:System.Net.Sockets.SocketException>é emitida.</xref:System.Net.Sockets.SocketException> Erro recebido é especificado como um membro do <xref:System.Net.Sockets.SocketError>enumeração.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public void EndJoinGroup (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "O resultado da operação assíncrona de associação."
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>result</code>é uma referência nulo (Nothing em Visual Basic)."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> foi eliminado."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Ocorreu um erro ao tentar aceder à socket. Consulte a secção observações para obter mais informações."
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)
  id: EndReceiveFromSource(System.IAsyncResult,System.Int32@)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: EndReceiveFromSource(IAsyncResult,Int32)
  nameWithType: UdpSingleSourceMulticastClient.EndReceiveFromSource(IAsyncResult,Int32)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(IAsyncResult,Int32)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Concluir a operação assíncrona de receção de um pacote do associados a um grupo de multicast e fornece as informações que recebeu."
  remarks: "O método EndReceiveFromSource concluir uma operação assíncrona para receber um pacote de uma única origem de um grupo de multicast.       Se ocorrer uma falha de socket ao efetuar a operação de receção, um <xref:System.Net.Sockets.SocketException>é emitida.</xref:System.Net.Sockets.SocketException> Erro recebido é especificado como um membro do <xref:System.Net.Sockets.SocketError>enumeração.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public int EndReceiveFromSource (IAsyncResult result, out int sourcePort);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "O resultado a assíncronas a operação de receção."
    - id: sourcePort
      type: System.Int32
      description: "O ponto final de origem em que foi recebeu o pacote."
    return:
      type: System.Int32
      description: "Devolve <xref:System.Int32>.</xref:System.Int32>       O comprimento, em bytes, da mensagem armazenado no <code> buffer </code> parâmetro transmitido para o <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource*>método.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource*>"
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>result</code>é uma referência nulo (Nothing em Visual Basic)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O grupo de multicast ainda não foi associado."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> foi eliminado."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Ocorreu um erro ao tentar aceder à socket. Consulte a secção observações para obter mais informações."
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)
  id: EndSendToSource(System.IAsyncResult)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: EndSendToSource(IAsyncResult)
  nameWithType: UdpSingleSourceMulticastClient.EndSendToSource(IAsyncResult)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(IAsyncResult)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Concluir a operação de envio de um pacote unicast para uma única origem."
  remarks: "O método EndSendToSource conclui uma operação assíncrona para enviar um pacote para uma única origem anteriormente especificada.       Se ocorrer uma falha de socket ao efetuar a operação de receção, um <xref:System.Net.Sockets.SocketException>é emitida.</xref:System.Net.Sockets.SocketException> Erro recebido é especificado como um membro do <xref:System.Net.Sockets.SocketError>enumeração.</xref:System.Net.Sockets.SocketError>"
  syntax:
    content: public void EndSendToSource (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "O resultado da operação de envio assíncrono."
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>result</code>é uma referência nulo (Nothing em Visual Basic)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O grupo de multicast ainda não foi associado."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> foi eliminado."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "Ocorreu um erro ao tentar aceder à socket. Consulte a secção observações para obter mais informações."
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize
  id: ReceiveBufferSize
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: ReceiveBufferSize
  nameWithType: UdpSingleSourceMulticastClient.ReceiveBufferSize
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Obtém ou define o tamanho, em bytes, da memória intermédia de receção do <xref:System.Net.Sockets.Socket>utilizada para operações de receção multicast neste <xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> instância.</xref:System.Net.Sockets.Socket>"
  remarks: "O `ReceiveBufferSize` propriedade obtém ou define o tamanho, em bytes, da memória intermédia de receção de subjacentes <xref:System.Net.Sockets.Socket>utilizada para operações de receção multicast neste <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>instância.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient> </xref:System.Net.Sockets.Socket> Especificamente, o `ReceiveBufferSize` propriedade controla o tamanho da memória intermédia utilizada pela pilha de quando é recebido um pacote, mas a aplicação ainda não chamado o <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A>método.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> Se esta memória intermédia obtém preenchida cópias de segurança e pacotes mantém futuras antes das chamadas de aplicação a <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A>e <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A>métodos, os pacotes antigos irão obter removidos.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A> </xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> A aplicação nunca será capaz de receber os pacotes antigos e, em vez disso, irá receber pacotes mais recentes quando chama o <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A>método.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A>       O tamanho predefinido de memória intermédia de receção no Windows é 8.192."
  syntax:
    content: public int ReceiveBufferSize { get; set; }
    return:
      type: System.Int32
      description: "Devolve <xref:System.Int32>.</xref:System.Int32>       O tamanho, em bytes, da memória intermédia de receção."
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O tamanho de memória intermédia especificado é inferior a 0."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O grupo de multicast ainda não foi associado."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> foi eliminado."
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize
  id: SendBufferSize
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: SendBufferSize
  nameWithType: UdpSingleSourceMulticastClient.SendBufferSize
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "Obtém ou define o tamanho, em bytes, da memória intermédia de envio do <xref:System.Net.Sockets.Socket>utilizada para operações de envio multicast neste <xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> instância.</xref:System.Net.Sockets.Socket>"
  remarks: "A propriedade SendBufferSize obtém ou define o tamanho, em bytes, da memória intermédia de envio de subjacentes <xref:System.Net.Sockets.Socket>utilizada para operações de envio multicast neste <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>instância.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient> </xref:System.Net.Sockets.Socket>       No Mac OS X, a propriedade SendBufferSize controla o número de bytes podem ser espera-para--enviados da memória intermédia a pilha de rede antes chamadas adicionais para o <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A>método começam a falhar.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> As aplicações no Mac OS X poderão ter de ser preocupado com esta propriedade se de que estão a enviar um grande número de pacotes UDP num curto período de tempo.       No Windows, as chamadas para o <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A>método irá demorar mais tempo para chamar a chamada de retorno dependendo do valor da propriedade SendBufferSize se a memória intermédia de envio estiver cheia.</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> A propriedade SendBufferSize controla apenas se da memória intermédia permanece o utilizador bloqueado na memória física até concluir o envio.       O tamanho predefinido da memória intermédia send no Windows é 8.192."
  syntax:
    content: public int SendBufferSize { get; set; }
    return:
      type: System.Int32
      description: "Devolve <xref:System.Int32>.</xref:System.Int32>       O tamanho, em bytes, da memória intermédia de envio."
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O tamanho de memória intermédia especificado é inferior a 0."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O grupo de multicast ainda não foi associado."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> foi eliminado."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Net.Sockets.SocketException
  isExternal: true
  name: System.Net.Sockets.SocketException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: UdpSingleSourceMulticastClient(IPAddress,IPAddress,Int32)
  nameWithType: UdpSingleSourceMulticastClient.UdpSingleSourceMulticastClient(IPAddress,IPAddress,Int32)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.UdpSingleSourceMulticastClient(IPAddress,IPAddress,Int32)
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: BeginJoinGroup(AsyncCallback,Object)
  nameWithType: UdpSingleSourceMulticastClient.BeginJoinGroup(AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: BeginReceiveFromSource(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: UdpSingleSourceMulticastClient.BeginReceiveFromSource(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: BeginSendToSource(Byte[],Int32,Int32,Int32,AsyncCallback,Object)
  nameWithType: UdpSingleSourceMulticastClient.BeginSendToSource(Byte[],Int32,Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(Byte[],Int32,Int32,Int32,AsyncCallback,Object)
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: Dispose()
  nameWithType: UdpSingleSourceMulticastClient.Dispose()
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose()
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: EndJoinGroup(IAsyncResult)
  nameWithType: UdpSingleSourceMulticastClient.EndJoinGroup(IAsyncResult)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(IAsyncResult)
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: EndReceiveFromSource(IAsyncResult,Int32)
  nameWithType: UdpSingleSourceMulticastClient.EndReceiveFromSource(IAsyncResult,Int32)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(IAsyncResult,Int32)
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: EndSendToSource(IAsyncResult)
  nameWithType: UdpSingleSourceMulticastClient.EndSendToSource(IAsyncResult)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(IAsyncResult)
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: ReceiveBufferSize
  nameWithType: UdpSingleSourceMulticastClient.ReceiveBufferSize
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: SendBufferSize
  nameWithType: UdpSingleSourceMulticastClient.SendBufferSize
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: UdpSingleSourceMulticastClient
  nameWithType: UdpSingleSourceMulticastClient.UdpSingleSourceMulticastClient
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: BeginJoinGroup
  nameWithType: UdpSingleSourceMulticastClient.BeginJoinGroup
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: BeginReceiveFromSource
  nameWithType: UdpSingleSourceMulticastClient.BeginReceiveFromSource
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: BeginSendToSource
  nameWithType: UdpSingleSourceMulticastClient.BeginSendToSource
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: Dispose
  nameWithType: UdpSingleSourceMulticastClient.Dispose
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: EndJoinGroup
  nameWithType: UdpSingleSourceMulticastClient.EndJoinGroup
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: EndReceiveFromSource
  nameWithType: UdpSingleSourceMulticastClient.EndReceiveFromSource
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: EndSendToSource
  nameWithType: UdpSingleSourceMulticastClient.EndSendToSource
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: ReceiveBufferSize
  nameWithType: UdpSingleSourceMulticastClient.ReceiveBufferSize
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: SendBufferSize
  nameWithType: UdpSingleSourceMulticastClient.SendBufferSize
