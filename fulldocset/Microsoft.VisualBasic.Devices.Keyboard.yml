### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Devices.Keyboard
  id: Keyboard
  children:
  - Microsoft.VisualBasic.Devices.Keyboard.#ctor
  - Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown
  - Microsoft.VisualBasic.Devices.Keyboard.CapsLock
  - Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown
  - Microsoft.VisualBasic.Devices.Keyboard.NumLock
  - Microsoft.VisualBasic.Devices.Keyboard.ScrollLock
  - Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String)
  - Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String,System.Boolean)
  - Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown
  langs:
  - csharp
  name: Keyboard
  nameWithType: Keyboard
  fullName: Microsoft.VisualBasic.Devices.Keyboard
  type: Class
  summary: "Fornece propriedades para aceder ao estado atual do teclado, tais como a que as chaves são premidos atualmente e fornece um método para enviar batimentos de tecla para a janela ativa."
  remarks: "O `My.Computer.Keyboard` objeto fornece uma interface para o teclado do computador. As propriedades do `My.Computer.Keyboard` fornecem informações sobre o estado das várias chaves especiais. O `My.Computer.Keyboard.SendKeys` método permite-lhe enviar chaves para a janela ativa como se ter sido escritos no teclado.      ## Tarefas a tabela seguinte apresenta um exemplo de uma tarefa que envolvem o `My.Computer.Keyboard` objeto.      |||   |-|-|   | Para | Consulte |   | Enviar batimentos de tecla para uma aplicação | [Como: iniciar uma aplicação e enviá-lo batimentos de tecla (Visual Basic)](~/add/includes/ajax-current-ext-md.md)|      # # Disponibilidade por tipo de projeto |||   |-|-|   | O tipo de projeto | Disponível |   | Aplicação do Windows | **Yes**|   | Biblioteca de classe | **Yes**|   | Aplicação de consola | **Yes**|   | Biblioteca de controlo do Windows | **Yes**|   | Biblioteca de controlo de Web | Não |   | Serviço do Windows | **Yes**|   | Web Site | Não |"
  example:
  - "This example uses the `My.Computer.Keyboard.CtrlKeyDown` property to determine if the computer's CTRL key is pressed.  \n  \n [!code-vb[VbVbalrMyComputer#36](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#36)]"
  syntax:
    content: public class Keyboard
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Keyboard.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.Devices.Keyboard
  langs:
  - csharp
  name: Keyboard()
  nameWithType: Keyboard.Keyboard()
  fullName: Microsoft.VisualBasic.Devices.Keyboard.Keyboard()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Inicializa uma nova instância do <xref href=&quot;Microsoft.VisualBasic.Devices.Keyboard&quot;> </xref> classe."
  syntax:
    content: public Keyboard ();
    parameters: []
  overload: Microsoft.VisualBasic.Devices.Keyboard.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown
  id: AltKeyDown
  parent: Microsoft.VisualBasic.Devices.Keyboard
  langs:
  - csharp
  name: AltKeyDown
  nameWithType: Keyboard.AltKeyDown
  fullName: Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Obtém um <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> que indica se a tecla ALT está inativo."
  remarks: "O `My.Computer.Keyboard.AltKeyDown` propriedade fornece funcionalidade semelhante a <xref:System.Windows.Forms.Control.ModifierKeys%2A>propriedade.</xref:System.Windows.Forms.Control.ModifierKeys%2A>      ## Disponibilidade por tipo de projeto |||   |-|-|   | O tipo de projeto | Disponível |   | Aplicação do Windows | **Yes**|   | Biblioteca de classe | **Yes**|   | Aplicação de consola | **Yes**|   | Biblioteca de controlo do Windows | **Yes**|   | Biblioteca de controlo de Web | Não |   | Serviço do Windows | **Yes**|   | Web Site | Não |"
  example:
  - "This example uses the `My.Computer.Keyboard.AltKeyDown` property to determine if the computer's ALT key is down.  \n  \n [!code-vb[VbVbalrMyComputer#23](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#23)]"
  syntax:
    content: public bool AltKeyDown { get; }
    return:
      type: System.Boolean
      description: 'A <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> valor: <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> se a tecla ALT é baixo; caso contrário <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>.'
  overload: Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Keyboard.CapsLock
  id: CapsLock
  parent: Microsoft.VisualBasic.Devices.Keyboard
  langs:
  - csharp
  name: CapsLock
  nameWithType: Keyboard.CapsLock
  fullName: Microsoft.VisualBasic.Devices.Keyboard.CapsLock
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Obtém um <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> que indica se a funcionalidade CAPS LOCK está ativado."
  remarks: "É devolvido apenas o estado de CAPS LOCK ativado.      ## Disponibilidade por tipo de projeto |||   |-|-|   | O tipo de projeto | Disponível |   | Aplicação do Windows | **Yes**|   | Biblioteca de classe | **Yes**|   | Aplicação de consola | **Yes**|   | Biblioteca de controlo do Windows | **Yes**|   | Biblioteca de controlo de Web | Não |   | Serviço do Windows | **Yes**|   | Web Site | Não |"
  example:
  - "This example uses the `My.Computer.Keyboard.CapsLock` property to determine if the computer's CAPS LOCK is turned on.  \n  \n [!code-vb[VbVbalrMyComputer#50](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#50)]"
  syntax:
    content: public bool CapsLock { get; }
    return:
      type: System.Boolean
      description: 'A <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> valor: <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> se a funcionalidade CAPS LOCK estiver ativada no; caso contrário <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>.'
  overload: Microsoft.VisualBasic.Devices.Keyboard.CapsLock*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown
  id: CtrlKeyDown
  parent: Microsoft.VisualBasic.Devices.Keyboard
  langs:
  - csharp
  name: CtrlKeyDown
  nameWithType: Keyboard.CtrlKeyDown
  fullName: Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Obtém um <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> que indica se uma tecla CTRL está inativo."
  remarks: "O `My.Computer.Keyboard.CtrlKeyDown` propriedade fornece funcionalidade semelhante a <xref:System.Windows.Forms.Control.ModifierKeys%2A>propriedade.</xref:System.Windows.Forms.Control.ModifierKeys%2A>      ## Disponibilidade por tipo de projeto |||   |-|-|   | O tipo de projeto | Disponível |   | Aplicação do Windows | **Yes**|   | Biblioteca de classe | **Yes**|   | Aplicação de consola | **Yes**|   | Biblioteca de controlo do Windows | **Yes**|   | Biblioteca de controlo de Web | Não |   | Serviço do Windows | **Yes**|   | Web Site | Não |"
  example:
  - "This example uses the `My.Computer.Keyboard.CtrlKeyDown` property to determine if the computer's CTRL key is down.  \n  \n [!code-vb[VbVbalrMyComputer#34](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#34)]"
  syntax:
    content: public bool CtrlKeyDown { get; }
    return:
      type: System.Boolean
      description: "A <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref> value. <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se uma tecla CTRL estiver desativado; caso contrário <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Keyboard.NumLock
  id: NumLock
  parent: Microsoft.VisualBasic.Devices.Keyboard
  langs:
  - csharp
  name: NumLock
  nameWithType: Keyboard.NumLock
  fullName: Microsoft.VisualBasic.Devices.Keyboard.NumLock
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Obtém um <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> que indica se a chave de bloqueio de núm é no."
  remarks: "Apenas o estado da chave NUM bloqueio é devolvido.      ## Disponibilidade por tipo de projeto |||   |-|-|   | O tipo de projeto | Disponível |   | Aplicação do Windows | **Yes**|   | Biblioteca de classe | **Yes**|   | Aplicação de consola | **Yes**|   | Biblioteca de controlo do Windows | **Yes**|   | Biblioteca de controlo de Web | Não |   | Serviço do Windows | **Yes**|   | Web Site | Não |"
  example:
  - "This example uses the `My.Computer.Keyboard.NumLock` property to determine if the computer's NUM LOCK key is on.  \n  \n [!code-vb[VbVbalrMyComputer#48](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#48)]"
  syntax:
    content: public bool NumLock { get; }
    return:
      type: System.Boolean
      description: "A <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref> value. <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se estiver NUM bloqueio no; caso contrário <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.Devices.Keyboard.NumLock*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Keyboard.ScrollLock
  id: ScrollLock
  parent: Microsoft.VisualBasic.Devices.Keyboard
  langs:
  - csharp
  name: ScrollLock
  nameWithType: Keyboard.ScrollLock
  fullName: Microsoft.VisualBasic.Devices.Keyboard.ScrollLock
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Obtém um <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> que indica se a chave de bloqueio do deslocamento é no."
  remarks: "Apenas o estado da chave de bloqueio do deslocamento é devolvido.      ## Disponibilidade por tipo de projeto |||   |-|-|   | O tipo de projeto | Disponível |   | Aplicação do Windows | **Yes**|   | Biblioteca de classe | **Yes**|   | Aplicação de consola | **Yes**|   | Biblioteca de controlo do Windows | **Yes**|   | Biblioteca de controlo de Web | Não |   | Serviço do Windows | **Yes**|   | Web Site | Não |"
  example:
  - "This example uses the `My.Computer.Keyboard.ScrollLock` property to determine if the computer's SCROLL LOCK key is on.  \n  \n [!code-vb[VbVbalrMyComputer#31](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#31)]"
  syntax:
    content: public bool ScrollLock { get; }
    return:
      type: System.Boolean
      description: "A <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref> value. <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se o bloqueio de deslocamento está ativada; caso contrário <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.Devices.Keyboard.ScrollLock*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String)
  id: SendKeys(System.String)
  parent: Microsoft.VisualBasic.Devices.Keyboard
  langs:
  - csharp
  name: SendKeys(String)
  nameWithType: Keyboard.SendKeys(String)
  fullName: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Envia um ou mais batimentos de tecla para a janela ativa, como se escreveu no teclado."
  remarks: "O `My.Computer.Keyboard.SendKeys` método fornece funcionalidade semelhante a <xref:System.Windows.Forms.SendKeys.Send%2A>e <xref:System.Windows.Forms.SendKeys.SendWait%2A>métodos.</xref:System.Windows.Forms.SendKeys.SendWait%2A> </xref:System.Windows.Forms.SendKeys.Send%2A>       O `wait` argumento é útil se a outra aplicação tem de concluir antes de continuar com a aplicação.      > [!NOTE] > Porque não existe nenhum método gerido para ativar a outra aplicação, pode utilizar esta classe na aplicação atual, manualmente selecione a janela para enviar as chaves ou utilizar métodos de API do Windows, tais como `FindWindow` e `SetForegroundWindow`, para forçar o foco em outras aplicações. Para obter mais informações, consulte [explicação passo a passo: chamar APIs do Windows](~/add/includes/ajax-current-ext-md.md).       O `keys` argumento pode especificar qualquer tecla único ou qualquer tecla combinado com ALT, CTRL, ou SHIFT (ou qualquer combinação dessas chaves). Cada chave é representada por um ou mais carateres, tais como `a` para o caráter &quot;a&quot;, ou `{ENTER}` para a tecla ENTER.       Combinar uma chave com SHIFT, preceder o código de chave com `+` (sinal). Combinar uma chave com CTRL, preceder o código de chave com `^` (acento circunflexo). Combinar uma chave com ALT, preceder o código de chave com `%` (início de sessão por cento). Para especificar chaves repetidas, utilize o formato `{` *chave número*`}`. Tem de colocar um espaço entre *chave* e *número*. Por exemplo, `{LEFT 42}` significa &quot;prima a tecla de seta esquerda vezes 42&quot;; `{h 10}` significa &quot;prima &quot;h&quot; 10 vezes.&quot;       A tabela seguinte lista os códigos que podem ser utilizados para especificar os carateres que não são apresentadas quando prime chave correspondente (por exemplo, ENTER ou TAB).      |||   |-|-|   | Chave | Código |   | RETROCESSO | {RETROCESSO} ou {BS} |   | QUEBRAR | {QUEBRAR} |   | CAPS LOCK ATIVADO | {CAPSLOCK} |   | LIMPAR | {LIMPAR} |   | ELIMINAR | {ELIMINAR} ou {DEL} |   | SETA PARA BAIXO | {PENDENTE} |   | FIM | {END} |   | INTRODUZA (teclado numérico) | {INTRODUZA} |   | INTRODUZA | ~ |   | ESC | {ESCAPE} ou {ESC} |   | AJUDAR | {AJUDAR} |   | HOME PAGE | {HOME PAGE} |   | INS | {INSERIR} |   | SETA PARA A ESQUERDA | {LEFT} |   | NÚM BLOQUEIO | {NUMLOCK} |   | PÁGINA PARA BAIXO | {PGDN} |   | PÁGINA CONFIGURAR | {PGUP} |   | DEVOLVER | {DEVOLVER} |   | SETA PARA A DIREITA | {DIREITO} |   | BLOQUEIO DO DESLOCAMENTO | {SCROLLLOCK} |   | SEPARADOR | {SEPARADOR} |   | SETA PARA CIMA | {ATÉ} |   | F1 através de F15 | {F1} através de {F15} |      # # Disponibilidade por tipo de projeto |||   |-|-|   | O tipo de projeto | Disponível |   | Aplicação do Windows | **Yes**|   | Biblioteca de classe | **Yes**|   | Aplicação de consola | **Yes**|   | Biblioteca de controlo do Windows | **Yes**|   | Biblioteca de controlo de Web | Não |   | Serviço do Windows | **Yes**|   | Web Site | Não |"
  example:
  - "This example uses the `My.Computer.Keyboard.SendKeys` method to send keystrokes to an external application, the Calculator application, started by the `Shell` function.  \n  \n [!code-vb[VbVbalrMyComputer#25](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#25)]  \n  \n A <xref:System.ArgumentException> exception is raised if an application with the requested process identifier cannot be found.  \n  \n The call to the `Shell` function requires full trust (<xref:System.Security.SecurityException> class)."
  syntax:
    content: public void SendKeys (string keys);
    parameters:
    - id: keys
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> que define as chaves para enviar."
  overload: Microsoft.VisualBasic.Devices.Keyboard.SendKeys*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Uma situação de fidedignidade parcial existe no qual o utilizador não possui as permissões necessárias."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String,System.Boolean)
  id: SendKeys(System.String,System.Boolean)
  parent: Microsoft.VisualBasic.Devices.Keyboard
  langs:
  - csharp
  name: SendKeys(String,Boolean)
  nameWithType: Keyboard.SendKeys(String,Boolean)
  fullName: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Envia um ou mais batimentos de tecla para a janela ativa, como se escreveu no teclado."
  remarks: "O `My.Computer.Keyboard.SendKeys` método fornece funcionalidade semelhante a <xref:System.Windows.Forms.SendKeys.Send%2A>e <xref:System.Windows.Forms.SendKeys.SendWait%2A>métodos.</xref:System.Windows.Forms.SendKeys.SendWait%2A> </xref:System.Windows.Forms.SendKeys.Send%2A>       O `wait` argumento é útil se a outra aplicação tem de concluir antes de continuar com a aplicação.      > [!NOTE] > Porque não existe nenhum método gerido para ativar a outra aplicação, pode utilizar esta classe na aplicação atual, manualmente selecione a janela para enviar as chaves ou utilizar métodos de API do Windows, tais como `FindWindow` e `SetForegroundWindow`, para forçar o foco em outras aplicações. Para obter mais informações, consulte [explicação passo a passo: chamar APIs do Windows](~/add/includes/ajax-current-ext-md.md).       O `keys` argumento pode especificar qualquer tecla único ou qualquer tecla combinado com ALT, CTRL, ou SHIFT (ou qualquer combinação dessas chaves). Cada chave é representada por um ou mais carateres, tais como `a` para o caráter &quot;a&quot;, ou `{ENTER}` para a tecla ENTER.       Combinar uma chave com SHIFT, preceder o código de chave com `+` (sinal). Combinar uma chave com CTRL, preceder o código de chave com `^` (acento circunflexo). Combinar uma chave com ALT, preceder o código de chave com `%` (início de sessão por cento). Para especificar chaves repetidas, utilize o formato `{` *chave número*`}`. Tem de colocar um espaço entre *chave* e *número*. Por exemplo, `{LEFT 42}` significa &quot;prima a tecla de seta esquerda vezes 42&quot;; `{h 10}` significa &quot;prima &quot;h&quot; 10 vezes.&quot;       A tabela seguinte lista os códigos que podem ser utilizados para especificar os carateres que não são apresentadas quando prime chave correspondente (por exemplo, ENTER ou TAB).      |||   |-|-|   | Chave | Código |   | RETROCESSO | {RETROCESSO} ou {BS} |   | QUEBRAR | {QUEBRAR} |   | CAPS LOCK ATIVADO | {CAPSLOCK} |   | LIMPAR | {LIMPAR} |   | ELIMINAR | {ELIMINAR} ou {DEL} |   | SETA PARA BAIXO | {PENDENTE} |   | FIM | {END} |   | INTRODUZA (teclado numérico) | {INTRODUZA} |   | INTRODUZA | ~ |   | ESC | {ESCAPE} ou {ESC} |   | AJUDAR | {AJUDAR} |   | HOME PAGE | {HOME PAGE} |   | INS | {INSERIR} |   | SETA PARA A ESQUERDA | {LEFT} |   | NÚM BLOQUEIO | {NUMLOCK} |   | PÁGINA PARA BAIXO | {PGDN} |   | PÁGINA CONFIGURAR | {PGUP} |   | DEVOLVER | {DEVOLVER} |   | SETA PARA A DIREITA | {DIREITO} |   | BLOQUEIO DO DESLOCAMENTO | {SCROLLLOCK} |   | SEPARADOR | {SEPARADOR} |   | SETA PARA CIMA | {ATÉ} |   | F1 através de F15 | {F1} através de {F15} |      # # Disponibilidade por tipo de projeto |||   |-|-|   | O tipo de projeto | Disponível |   | Aplicação do Windows | **Yes**|   | Biblioteca de classe | **Yes**|   | Aplicação de consola | **Yes**|   | Biblioteca de controlo do Windows | **Yes**|   | Biblioteca de controlo de Web | Não |   | Serviço do Windows | **Yes**|   | Web Site | Não |"
  example:
  - "This example uses the `My.Computer.Keyboard.SendKeys` method to send keystrokes to an external application, the Calculator application, started by the `Shell` function.  \n  \n [!code-vb[VbVbalrMyComputer#25](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#25)]  \n  \n A <xref:System.ArgumentException> exception is raised if an application with the requested process identifier cannot be found.  \n  \n The call to the `Shell` function requires full trust (<xref:System.Security.SecurityException> class)."
  syntax:
    content: public void SendKeys (string keys, bool wait);
    parameters:
    - id: keys
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> que define as chaves para enviar."
    - id: wait
      type: System.Boolean
      description: "Opcional. A <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> que especifica se deve ou não aguardar batimentos de tecla processadas antes de continua a aplicação. <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Por predefinição."
  overload: Microsoft.VisualBasic.Devices.Keyboard.SendKeys*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Uma situação de fidedignidade parcial existe no qual o utilizador não possui as permissões necessárias."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown
  id: ShiftKeyDown
  parent: Microsoft.VisualBasic.Devices.Keyboard
  langs:
  - csharp
  name: ShiftKeyDown
  nameWithType: Keyboard.ShiftKeyDown
  fullName: Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Obtém um <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref> que indica se uma tecla SHIFT está inativo."
  remarks: "O `My.Computer.Keyboard.ShiftKeyDown` propriedade fornece funcionalidade semelhante a <xref:System.Windows.Forms.Control.ModifierKeys%2A>propriedade.</xref:System.Windows.Forms.Control.ModifierKeys%2A>      ## Disponibilidade por tipo de projeto |||   |-|-|   | O tipo de projeto | Disponível |   | Aplicação do Windows | **Yes**|   | Biblioteca de classe | **Yes**|   | Aplicação de consola | **Yes**|   | Biblioteca de controlo do Windows | **Yes**|   | Biblioteca de controlo de Web | Não |   | Serviço do Windows | **Yes**|   | Web Site | Não |"
  example:
  - "This example uses the `My.Computer.Keyboard.ShiftKeyDown` property to determine if one of the computer's SHIFT keys is down.  \n  \n [!code-vb[VbVbalrMyComputer#47](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#47)]"
  syntax:
    content: public bool ShiftKeyDown { get; }
    return:
      type: System.Boolean
      description: "A <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref> value. <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se uma tecla SHIFT estiver desativado; caso contrário <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: Microsoft.VisualBasic.Devices.Keyboard.#ctor
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: Keyboard()
  nameWithType: Keyboard.Keyboard()
  fullName: Microsoft.VisualBasic.Devices.Keyboard.Keyboard()
- uid: Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: AltKeyDown
  nameWithType: Keyboard.AltKeyDown
  fullName: Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.Devices.Keyboard.CapsLock
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: CapsLock
  nameWithType: Keyboard.CapsLock
  fullName: Microsoft.VisualBasic.Devices.Keyboard.CapsLock
- uid: Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: CtrlKeyDown
  nameWithType: Keyboard.CtrlKeyDown
  fullName: Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown
- uid: Microsoft.VisualBasic.Devices.Keyboard.NumLock
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: NumLock
  nameWithType: Keyboard.NumLock
  fullName: Microsoft.VisualBasic.Devices.Keyboard.NumLock
- uid: Microsoft.VisualBasic.Devices.Keyboard.ScrollLock
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: ScrollLock
  nameWithType: Keyboard.ScrollLock
  fullName: Microsoft.VisualBasic.Devices.Keyboard.ScrollLock
- uid: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String)
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: SendKeys(String)
  nameWithType: Keyboard.SendKeys(String)
  fullName: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String,System.Boolean)
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: SendKeys(String,Boolean)
  nameWithType: Keyboard.SendKeys(String,Boolean)
  fullName: Microsoft.VisualBasic.Devices.Keyboard.SendKeys(String,Boolean)
- uid: Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: ShiftKeyDown
  nameWithType: Keyboard.ShiftKeyDown
  fullName: Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown
- uid: Microsoft.VisualBasic.Devices.Keyboard.#ctor*
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: Keyboard
  nameWithType: Keyboard.Keyboard
- uid: Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown*
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: AltKeyDown
  nameWithType: Keyboard.AltKeyDown
- uid: Microsoft.VisualBasic.Devices.Keyboard.CapsLock*
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: CapsLock
  nameWithType: Keyboard.CapsLock
- uid: Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown*
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: CtrlKeyDown
  nameWithType: Keyboard.CtrlKeyDown
- uid: Microsoft.VisualBasic.Devices.Keyboard.NumLock*
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: NumLock
  nameWithType: Keyboard.NumLock
- uid: Microsoft.VisualBasic.Devices.Keyboard.ScrollLock*
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: ScrollLock
  nameWithType: Keyboard.ScrollLock
- uid: Microsoft.VisualBasic.Devices.Keyboard.SendKeys*
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: SendKeys
  nameWithType: Keyboard.SendKeys
- uid: Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown*
  parent: Microsoft.VisualBasic.Devices.Keyboard
  isExternal: false
  name: ShiftKeyDown
  nameWithType: Keyboard.ShiftKeyDown
