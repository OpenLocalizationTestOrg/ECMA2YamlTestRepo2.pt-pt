### YamlMime:ManagedReference
items:
- uid: System.Runtime.ProfileOptimization
  id: ProfileOptimization
  children:
  - System.Runtime.ProfileOptimization.SetProfileRoot(System.String)
  - System.Runtime.ProfileOptimization.StartProfile(System.String)
  langs:
  - csharp
  name: ProfileOptimization
  nameWithType: ProfileOptimization
  fullName: System.Runtime.ProfileOptimization
  type: Class
  summary: "Melhora o desempenho de arranque de domínios de aplicação nas aplicações que requerem o compilador do just-in-time (JIT), efetuando a compilação de fundo dos métodos que se prevê a ser executado, com base nos perfis criados durante compilações anteriores."
  remarks: "> [!IMPORTANT]> Otimização de perfil requer um computador especializado. Os métodos são ignorados noutros computadores.       Sempre que iniciar a otimização de perfil num domínio de aplicação, o perfil que foi criado durante a utilização anterior é de leitura. As informações do perfil são utilizadas o ajudará a compilação de em segundo plano, identificando os métodos que são mais prováveis ser executada durante o arranque. Em computadores especializados, aumenta a possibilidade de um método já está compilado pelo tempo necessário para que o thread de aplicação principal não tem de chamar o compilador JIT.       O ficheiro de perfil é substituído em cada utilização, pelo que sempre contém as informações mais recentes sobre os quais os métodos são utilizados durante o arranque.       Perfis de otimização não estão limitadas para arranque de domínio de aplicação. Podem ser utilizadas para qualquer atividade que irá exigir a utilização intensa de compilador JIT. Pode manter vários perfis para um domínio de aplicação para que cada atividade essa tenha o seu próprio perfil.       Para utilizar perfis de otimização num domínio de aplicação, tem de chamar o <xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A>método e especifique a pasta onde estão armazenados os perfis.</xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A> A pasta já deve existir. Para começar a utilizar um perfil, chame o <xref:System.Runtime.ProfileOptimization.StartProfile%2A>método e especifique o nome de ficheiro do perfil.</xref:System.Runtime.ProfileOptimization.StartProfile%2A> Se o ficheiro não foi registado anteriormente, será criado na primeira utilização. Não há nenhum benefício o primeiro de tempo de desempenho é criado um perfil.       Otimização de perfil não alterar a ordem na qual são executados métodos. Métodos não estão a ser executados no thread de segundo plano; Se um método é compilado, mas nunca chamado, basta não é utilizado. Se um ficheiro de perfil está danificado ou não é possível escrever na pasta especificada (por exemplo, porque a pasta não existe), a execução do programa continua sem a criação de perfis de otimização."
  syntax:
    content: public static class ProfileOptimization
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.ProfileOptimization.SetProfileRoot(System.String)
  id: SetProfileRoot(System.String)
  parent: System.Runtime.ProfileOptimization
  langs:
  - csharp
  name: SetProfileRoot(String)
  nameWithType: ProfileOptimization.SetProfileRoot(String)
  fullName: System.Runtime.ProfileOptimization.SetProfileRoot(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime
  summary: "Permite a otimização de criação de perfis para o domínio de aplicação atual e define a pasta onde estão armazenados os ficheiros de perfil de otimização. Num computador single-core, o método é ignorado."
  remarks: "Tem de chamar este método antes de chamar o <xref:System.Runtime.ProfileOptimization.StartProfile%2A>método pela primeira vez no domínio de aplicação atual.</xref:System.Runtime.ProfileOptimization.StartProfile%2A> Se chamar SetProfileRoot mais do que uma vez no mesmo domínio de aplicação, serão ignoradas todas as chamadas após o primeiro.       A pasta especificada já deve existir. Se não existir, chamar este método não criá-la e não a criação de perfis ocorre.       Em computadores que não têm vários núcleos, este método é ignorado."
  syntax:
    content: public static void SetProfileRoot (string directoryPath);
    parameters:
    - id: directoryPath
      type: System.String
      description: "O caminho completo para a pasta onde estão armazenados os ficheiros de perfil para o domínio de aplicação atual."
  overload: System.Runtime.ProfileOptimization.SetProfileRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.ProfileOptimization.StartProfile(System.String)
  id: StartProfile(System.String)
  parent: System.Runtime.ProfileOptimization
  langs:
  - csharp
  name: StartProfile(String)
  nameWithType: ProfileOptimization.StartProfile(String)
  fullName: System.Runtime.ProfileOptimization.StartProfile(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime
  summary: "Inicia a compilação de (JIT) just-in-time dos métodos de que foram anteriormente registados no ficheiro de perfil especificado, num thread em segundo plano. Inicia o processo de gravação utilizado método atual, o que mais tarde substitui o ficheiro de perfil especificado."
  remarks: "Se o perfil especificado existe na pasta especificada pelo <xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A>método, as informações contém é utilizado para determinar a ordem na qual os métodos são compilados no thread de segundo plano.</xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A> O método StartProfile cria o perfil, se ainda não existir e inicia a gravação de utilização de método.       Apenas os métodos que, na verdade, são denominados são registados, independentemente se foram compiladas no thread de segundo plano ou o thread principal da aplicação. Um método é compilado no thread de aplicação principal, se a aplicação tem de chamá-lo antes do thread de segundo plano que compilado-lo.       O código que efetua a gravação controla a taxa a que sejam compilados métodos, incluindo métodos compilados no thread de segundo plano e em que o thread principal. Quando a taxa está abaixo de um nível predeterminado, gravação é interrompida. Gravação interrompe também se a taxa de compilação JIT exceder um limite superior predeterminado.       Se o <xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A>método não foi chamado para o domínio de aplicação atual ou, se o computador não tiver vários núcleos, o método StartProfile não tem qualquer efeito.</xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A>"
  syntax:
    content: public static void StartProfile (string profile);
    parameters:
    - id: profile
      type: System.String
      description: "O nome de ficheiro de perfil para utilizar."
  overload: System.Runtime.ProfileOptimization.StartProfile*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.ProfileOptimization.SetProfileRoot(System.String)
  parent: System.Runtime.ProfileOptimization
  isExternal: false
  name: SetProfileRoot(String)
  nameWithType: ProfileOptimization.SetProfileRoot(String)
  fullName: System.Runtime.ProfileOptimization.SetProfileRoot(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.ProfileOptimization.StartProfile(System.String)
  parent: System.Runtime.ProfileOptimization
  isExternal: false
  name: StartProfile(String)
  nameWithType: ProfileOptimization.StartProfile(String)
  fullName: System.Runtime.ProfileOptimization.StartProfile(String)
- uid: System.Runtime.ProfileOptimization.SetProfileRoot*
  parent: System.Runtime.ProfileOptimization
  isExternal: false
  name: SetProfileRoot
  nameWithType: ProfileOptimization.SetProfileRoot
- uid: System.Runtime.ProfileOptimization.StartProfile*
  parent: System.Runtime.ProfileOptimization
  isExternal: false
  name: StartProfile
  nameWithType: ProfileOptimization.StartProfile
