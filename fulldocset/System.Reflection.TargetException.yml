### YamlMime:ManagedReference
items:
- uid: System.Reflection.TargetException
  id: TargetException
  children:
  - System.Reflection.TargetException.#ctor
  - System.Reflection.TargetException.#ctor(System.String)
  - System.Reflection.TargetException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Reflection.TargetException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  name: TargetException
  nameWithType: TargetException
  fullName: System.Reflection.TargetException
  type: Class
  summary: "Representa a exceção que é acionada quando é efetuada uma tentativa de invocar um destino inválido."
  remarks: "A `TargetException` é acionada quando é efetuada uma tentativa de invocar um método não estático num objeto nulo. Isto pode ocorrer porque o chamador não tem acesso para o membro ou porque o destino não defina o membro e assim sucessivamente.      > [!NOTE] > Esta exceção não está incluída no [aplicações de .NET para a loja Windows](http://go.microsoft.com/fwlink/?LinkID=247912) ou, mas é acionado por alguns membros que são. Para detetar a exceção nesse caso, escrever um `catch` instrução para <xref:System.Exception>em vez disso.</xref:System.Exception>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class TargetException : ApplicationException
  inheritance:
  - System.Exception
  - System.ApplicationException
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Reflection.TargetException.#ctor
  id: '#ctor'
  parent: System.Reflection.TargetException
  langs:
  - csharp
  name: TargetException()
  nameWithType: TargetException.TargetException()
  fullName: System.Reflection.TargetException.TargetException()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Reflection.TargetException&quot;> </xref> classe com uma mensagem vazia e a causa de raiz da exceção."
  remarks: "O `InnerException` propriedade está definida como `null` e o código de erro HRESULT está definido como COR_E_TARGET.       `TargetException`herda <xref:System.Exception>.</xref:System.Exception> Este construtor define as propriedades do `Exception` objeto conforme mostrado na seguinte tabela.      | Propriedade | Valor |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| `null`|   | <xref:System.Exception.Message%2A>| A cadeia vazia (&quot;&quot;). |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public TargetException ();
    parameters: []
  overload: System.Reflection.TargetException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.TargetException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Reflection.TargetException
  langs:
  - csharp
  name: TargetException(String)
  nameWithType: TargetException.TargetException(String)
  fullName: System.Reflection.TargetException.TargetException(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Reflection.TargetException&quot;> </xref> exceção fazer com que a classe com a mensagem indicada e a raiz."
  remarks: "`TargetException`herda <xref:System.Exception>.</xref:System.Exception> Este construtor define as propriedades do `Exception` objeto conforme mostrado na seguinte tabela.      | Propriedade | Valor |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| `null`|   | <xref:System.Exception.Message%2A>| A cadeia de mensagem. |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public TargetException (string message);
    parameters:
    - id: message
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> que descreve o motivo por que ocorreu a exceção."
  overload: System.Reflection.TargetException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.TargetException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Reflection.TargetException
  langs:
  - csharp
  name: TargetException(SerializationInfo,StreamingContext)
  nameWithType: TargetException.TargetException(SerializationInfo,StreamingContext)
  fullName: System.Reflection.TargetException.TargetException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Reflection.TargetException&quot;> </xref> classe com as informações de serialização e contexto especificadas."
  syntax:
    content: protected TargetException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Os dados de serialização ou anulação da serialização do objeto."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "A origem e destino para o objeto."
  overload: System.Reflection.TargetException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.TargetException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Reflection.TargetException
  langs:
  - csharp
  name: TargetException(String,Exception)
  nameWithType: TargetException.TargetException(String,Exception)
  fullName: System.Reflection.TargetException.TargetException(String,Exception)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Reflection.TargetException&quot;> </xref> classe com uma mensagem de erro especificado e uma referência a exceção interna que é a causa desta exceção."
  remarks: "Uma exceção que é acionada como um resultado direto de uma exceção anterior deve incluir uma referência a exceção anterior no <xref:System.Exception.InnerException%2A>propriedade.</xref:System.Exception.InnerException%2A> O <xref:System.Exception.InnerException%2A>propriedade devolve o mesmo valor que é transmitido para o construtor ou `null` se o <xref:System.Exception.InnerException%2A>propriedade não fornecer o valor da exceção interna para o construtor.</xref:System.Exception.InnerException%2A> </xref:System.Exception.InnerException%2A>       A tabela seguinte mostra os valores de propriedade inicial para uma instância do <xref:System.Reflection.TargetException>.</xref:System.Reflection.TargetException>      | Propriedade | Valor |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| A referência a exceção interna. |   | <xref:System.Exception.Message%2A>| A cadeia de mensagem de erro. |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public TargetException (string message, Exception inner);
    parameters:
    - id: message
      type: System.String
      description: "A mensagem de erro que explique a razão para a exceção."
    - id: inner
      type: System.Exception
      description: "A exceção é a causa da exceção atual. Se o `inner` não é o parâmetro <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, a exceção atual num <xref uid=&quot;langword_csharp_catch&quot; name=&quot;catch&quot; href=&quot;&quot;> </xref> bloco que processa a exceção interna."
  overload: System.Reflection.TargetException.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ApplicationException
  isExternal: false
  name: System.ApplicationException
- uid: System.Reflection.TargetException.#ctor
  parent: System.Reflection.TargetException
  isExternal: false
  name: TargetException()
  nameWithType: TargetException.TargetException()
  fullName: System.Reflection.TargetException.TargetException()
- uid: System.Reflection.TargetException.#ctor(System.String)
  parent: System.Reflection.TargetException
  isExternal: false
  name: TargetException(String)
  nameWithType: TargetException.TargetException(String)
  fullName: System.Reflection.TargetException.TargetException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Reflection.TargetException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Reflection.TargetException
  isExternal: false
  name: TargetException(SerializationInfo,StreamingContext)
  nameWithType: TargetException.TargetException(SerializationInfo,StreamingContext)
  fullName: System.Reflection.TargetException.TargetException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Reflection.TargetException.#ctor(System.String,System.Exception)
  parent: System.Reflection.TargetException
  isExternal: false
  name: TargetException(String,Exception)
  nameWithType: TargetException.TargetException(String,Exception)
  fullName: System.Reflection.TargetException.TargetException(String,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Reflection.TargetException.#ctor*
  parent: System.Reflection.TargetException
  isExternal: false
  name: TargetException
  nameWithType: TargetException.TargetException
