### YamlMime:ManagedReference
items:
- uid: System.Threading.CompressedStack
  id: CompressedStack
  children:
  - System.Threading.CompressedStack.Capture
  - System.Threading.CompressedStack.CreateCopy
  - System.Threading.CompressedStack.GetCompressedStack
  - System.Threading.CompressedStack.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Threading.CompressedStack.Run(System.Threading.CompressedStack,System.Threading.ContextCallback,System.Object)
  langs:
  - csharp
  name: CompressedStack
  nameWithType: CompressedStack
  fullName: System.Threading.CompressedStack
  type: Class
  summary: "Provides methods for setting and capturing the compressed stack on the current thread. This class cannot be inherited."
  remarks: "The compressed stack is a compact representation of all the code access security information on the call stack, such as <xref:System.Security.CodeAccessPermission.Deny%2A> and <xref:System.Security.CodeAccessPermission.Assert%2A> actions. For example, if a <xref:System.Security.CodeAccessPermission.Deny%2A> action is two stack frames up from the current frame and there are no other code access security annotations between there and the current frame, the compressed stack records only that information, without having to serialize the entire call stack.       The CompressedStackclass is used internally by the <xref:System.Security.SecurityContext> class. For example, the <xref:System.Security.SecurityContext.Capture%2A?displayProperty=fullName> method captures the compressed stack for the current call stack, along with impersonation and culture information. The <xref:System.Security.SecurityContext> class is used in turn by the <xref:System.Threading.ExecutionContext> class to flow context across threads, for example when scheduling thread pool tasks.       This class is not used in ordinary application programming."
  syntax:
    content: 'public sealed class CompressedStack : System.Runtime.Serialization.ISerializable'
  inheritance:
  - System.Object
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Threading.CompressedStack.Capture
  id: Capture
  parent: System.Threading.CompressedStack
  langs:
  - csharp
  name: Capture()
  nameWithType: CompressedStack.Capture()
  fullName: System.Threading.CompressedStack.Capture()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Captures the compressed stack from the current thread."
  remarks: "Captures all the code access security information on the call stack, such as <xref:System.Security.CodeAccessPermission.Deny%2A> and <xref:System.Security.CodeAccessPermission.Assert%2A> actions, in a compressed format. For example, if a <xref:System.Security.CodeAccessPermission.Deny%2A> action is two stack frames up from the current frame and there are no other code access security annotations between there and the current frame, the compressed stack records only that information, without having to serialize the entire call stack.       The captured compressed stack can be applied to another thread."
  syntax:
    content: public static System.Threading.CompressedStack Capture ();
    parameters: []
    return:
      type: System.Threading.CompressedStack
      description: "A <xref href=&quot;System.Threading.CompressedStack&quot;></xref> object."
  overload: System.Threading.CompressedStack.Capture*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.CompressedStack.CreateCopy
  id: CreateCopy
  parent: System.Threading.CompressedStack
  langs:
  - csharp
  name: CreateCopy()
  nameWithType: CompressedStack.CreateCopy()
  fullName: System.Threading.CompressedStack.CreateCopy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Creates a copy of the current compressed stack."
  remarks: "This method is useful for creating a copy of the current compressed stack to apply to another thread."
  syntax:
    content: public System.Threading.CompressedStack CreateCopy ();
    parameters: []
    return:
      type: System.Threading.CompressedStack
      description: "A <xref href=&quot;System.Threading.CompressedStack&quot;></xref> object representing the current compressed stack."
  overload: System.Threading.CompressedStack.CreateCopy*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.CompressedStack.GetCompressedStack
  id: GetCompressedStack
  parent: System.Threading.CompressedStack
  langs:
  - csharp
  name: GetCompressedStack()
  nameWithType: CompressedStack.GetCompressedStack()
  fullName: System.Threading.CompressedStack.GetCompressedStack()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Gets the compressed stack for the current thread."
  remarks: "If security is enabled, the current compressed stack is returned. If security is disabled, GetCompressedStack returns an empty <xref:System.Threading.CompressedStack> object.      > [!NOTE] >  This method uses <xref:System.Security.Permissions.SecurityAction?displayProperty=fullName> to prevent it from being called from untrusted code; only the immediate caller is required to have <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A?displayProperty=fullName> permission. For important limitations on using the `LinkDemand` member, see [Demand vs. LinkDemand](http://msdn.microsoft.com/en-us/1ab877f2-70f4-4e0d-8116-943999dfe8f5).      > [!NOTE] >  This member also makes a link demand for the ECMA public key, which is not a valid cryptographic key but a pseudo key. Within the .NET Framework the link demand for the ECMA pseudo key is automatically converted to a link demand for the Microsoft public key. The security exception is based on the Microsoft public key, not the ECMA pseudo key."
  syntax:
    content: public static System.Threading.CompressedStack GetCompressedStack ();
    parameters: []
    return:
      type: System.Threading.CompressedStack
      description: "A <xref href=&quot;System.Threading.CompressedStack&quot;></xref> for the current thread."
  overload: System.Threading.CompressedStack.GetCompressedStack*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "A caller in the call chain does not have permission to access unmanaged code.       -or-       The request for <xref href=&quot;System.Security.Permissions.StrongNameIdentityPermission&quot;></xref> failed."
  platform:
  - net462
- uid: System.Threading.CompressedStack.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Threading.CompressedStack
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: CompressedStack.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Threading.CompressedStack.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Sets the <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref> object with the logical context information needed to recreate an instance of this execution context."
  remarks: "GetObjectData sets a <xref:System.Runtime.Serialization.SerializationInfo> with the logical call context information. During deserialization, the execution context object is reconstituted from the <xref:System.Runtime.Serialization.SerializationInfo> transmitted over the stream.       For more information, see <xref:System.Runtime.Serialization.SerializationInfo>."
  syntax:
    content: public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "The <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref> object to be populated with serialization information."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "The <xref:System.Runtime.Serialization.StreamingContext> structure representing the destination context of the serialization."
  overload: System.Threading.CompressedStack.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>info</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Threading.CompressedStack.Run(System.Threading.CompressedStack,System.Threading.ContextCallback,System.Object)
  id: Run(System.Threading.CompressedStack,System.Threading.ContextCallback,System.Object)
  parent: System.Threading.CompressedStack
  langs:
  - csharp
  name: Run(CompressedStack,ContextCallback,Object)
  nameWithType: CompressedStack.Run(CompressedStack,ContextCallback,Object)
  fullName: System.Threading.CompressedStack.Run(CompressedStack,ContextCallback,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Runs a method in the specified compressed stack on the current thread."
  remarks: "The compressed stack is returned to its previous state when the method completes."
  syntax:
    content: public static void Run (System.Threading.CompressedStack compressedStack, System.Threading.ContextCallback callback, object state);
    parameters:
    - id: compressedStack
      type: System.Threading.CompressedStack
      description: "The <xref href=&quot;System.Threading.CompressedStack&quot;></xref> to set."
    - id: callback
      type: System.Threading.ContextCallback
      description: "A <xref:System.Threading.ContextCallback> that represents the method to be run in the specified security context."
    - id: state
      type: System.Object
      description: "The object to be passed to the callback method."
  overload: System.Threading.CompressedStack.Run*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>compressedStack</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Threading.CompressedStack.Capture
  parent: System.Threading.CompressedStack
  isExternal: false
  name: Capture()
  nameWithType: CompressedStack.Capture()
  fullName: System.Threading.CompressedStack.Capture()
- uid: System.Threading.CompressedStack
  parent: System.Threading
  isExternal: false
  name: CompressedStack
  nameWithType: CompressedStack
  fullName: System.Threading.CompressedStack
- uid: System.Threading.CompressedStack.CreateCopy
  parent: System.Threading.CompressedStack
  isExternal: false
  name: CreateCopy()
  nameWithType: CompressedStack.CreateCopy()
  fullName: System.Threading.CompressedStack.CreateCopy()
- uid: System.Threading.CompressedStack.GetCompressedStack
  parent: System.Threading.CompressedStack
  isExternal: false
  name: GetCompressedStack()
  nameWithType: CompressedStack.GetCompressedStack()
  fullName: System.Threading.CompressedStack.GetCompressedStack()
- uid: System.Threading.CompressedStack.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Threading.CompressedStack
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: CompressedStack.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Threading.CompressedStack.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Threading.CompressedStack.Run(System.Threading.CompressedStack,System.Threading.ContextCallback,System.Object)
  parent: System.Threading.CompressedStack
  isExternal: false
  name: Run(CompressedStack,ContextCallback,Object)
  nameWithType: CompressedStack.Run(CompressedStack,ContextCallback,Object)
  fullName: System.Threading.CompressedStack.Run(CompressedStack,ContextCallback,Object)
- uid: System.Threading.ContextCallback
  parent: System.Threading
  isExternal: true
  name: ContextCallback
  nameWithType: ContextCallback
  fullName: System.Threading.ContextCallback
- uid: System.Threading.CompressedStack.Capture*
  parent: System.Threading.CompressedStack
  isExternal: false
  name: Capture
  nameWithType: CompressedStack.Capture
- uid: System.Threading.CompressedStack.CreateCopy*
  parent: System.Threading.CompressedStack
  isExternal: false
  name: CreateCopy
  nameWithType: CompressedStack.CreateCopy
- uid: System.Threading.CompressedStack.GetCompressedStack*
  parent: System.Threading.CompressedStack
  isExternal: false
  name: GetCompressedStack
  nameWithType: CompressedStack.GetCompressedStack
- uid: System.Threading.CompressedStack.GetObjectData*
  parent: System.Threading.CompressedStack
  isExternal: false
  name: GetObjectData
  nameWithType: CompressedStack.GetObjectData
- uid: System.Threading.CompressedStack.Run*
  parent: System.Threading.CompressedStack
  isExternal: false
  name: Run
  nameWithType: CompressedStack.Run
