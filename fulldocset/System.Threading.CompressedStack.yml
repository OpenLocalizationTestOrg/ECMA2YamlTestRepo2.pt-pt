### YamlMime:ManagedReference
items:
- uid: System.Threading.CompressedStack
  id: CompressedStack
  children:
  - System.Threading.CompressedStack.Capture
  - System.Threading.CompressedStack.CreateCopy
  - System.Threading.CompressedStack.GetCompressedStack
  - System.Threading.CompressedStack.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Threading.CompressedStack.Run(System.Threading.CompressedStack,System.Threading.ContextCallback,System.Object)
  langs:
  - csharp
  name: CompressedStack
  nameWithType: CompressedStack
  fullName: System.Threading.CompressedStack
  type: Class
  summary: "Fornece métodos para definir e capturar a pilha comprimida no thread atual. Esta classe não pode ser herdada."
  remarks: "A pilha de comprimido é uma representação compact de todas as informações de segurança acesso a código na pilha de chamadas, tais como <xref:System.Security.CodeAccessPermission.Deny%2A>e <xref:System.Security.CodeAccessPermission.Assert%2A>ações.</xref:System.Security.CodeAccessPermission.Assert%2A> </xref:System.Security.CodeAccessPermission.Deny%2A> Por exemplo, se um <xref:System.Security.CodeAccessPermission.Deny%2A>ação é dois pilha frames cópias de segurança da frame actual e existem sem acesso de código anotações de segurança entre daí e frame actual, a pilha de comprimido regista apenas essa informação, sem ter de serializar a pilha de chamadas de todo.</xref:System.Security.CodeAccessPermission.Deny%2A>       O CompressedStackclass é utilizada internamente pela <xref:System.Security.SecurityContext>classe.</xref:System.Security.SecurityContext> Por exemplo, o <xref:System.Security.SecurityContext.Capture%2A?displayProperty=fullName>método captura a pilha de comprimido para a pilha de chamadas atual, juntamente com informações de representação e cultura.</xref:System.Security.SecurityContext.Capture%2A?displayProperty=fullName> O <xref:System.Security.SecurityContext>classe é utilizada por sua vez pelo <xref:System.Threading.ExecutionContext>classe para o contexto de fluxo entre threads, por exemplo, durante o agendamento de tarefas de conjunto de threads.</xref:System.Threading.ExecutionContext> </xref:System.Security.SecurityContext>       Esta classe não é utilizada na programação de aplicação comum."
  syntax:
    content: 'public sealed class CompressedStack : System.Runtime.Serialization.ISerializable'
  inheritance:
  - System.Object
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Threading.CompressedStack.Capture
  id: Capture
  parent: System.Threading.CompressedStack
  langs:
  - csharp
  name: Capture()
  nameWithType: CompressedStack.Capture()
  fullName: System.Threading.CompressedStack.Capture()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Captura a pilha comprimida do thread atual."
  remarks: "Captura todas as informações de segurança acesso a código na pilha de chamadas, tais como <xref:System.Security.CodeAccessPermission.Deny%2A>e <xref:System.Security.CodeAccessPermission.Assert%2A>ações, num formato comprimido.</xref:System.Security.CodeAccessPermission.Assert%2A> </xref:System.Security.CodeAccessPermission.Deny%2A> Por exemplo, se um <xref:System.Security.CodeAccessPermission.Deny%2A>ação é dois pilha frames cópias de segurança da frame actual e existem sem acesso de código anotações de segurança entre daí e frame actual, a pilha de comprimido regista apenas essa informação, sem ter de serializar a pilha de chamadas de todo.</xref:System.Security.CodeAccessPermission.Deny%2A>       A pilha de comprimido capturada pode ser aplicada a outro thread."
  syntax:
    content: public static System.Threading.CompressedStack Capture ();
    parameters: []
    return:
      type: System.Threading.CompressedStack
      description: "A <xref href=&quot;System.Threading.CompressedStack&quot;></xref> object."
  overload: System.Threading.CompressedStack.Capture*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.CompressedStack.CreateCopy
  id: CreateCopy
  parent: System.Threading.CompressedStack
  langs:
  - csharp
  name: CreateCopy()
  nameWithType: CompressedStack.CreateCopy()
  fullName: System.Threading.CompressedStack.CreateCopy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Cria uma cópia da pilha de comprimido atual."
  remarks: "Este método é útil para criar uma cópia da pilha de atual comprimida para aplicar a outro thread."
  syntax:
    content: public System.Threading.CompressedStack CreateCopy ();
    parameters: []
    return:
      type: System.Threading.CompressedStack
      description: "A <xref href=&quot;System.Threading.CompressedStack&quot;> </xref> objeto que representa a pilha de comprimido atual."
  overload: System.Threading.CompressedStack.CreateCopy*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.CompressedStack.GetCompressedStack
  id: GetCompressedStack
  parent: System.Threading.CompressedStack
  langs:
  - csharp
  name: GetCompressedStack()
  nameWithType: CompressedStack.GetCompressedStack()
  fullName: System.Threading.CompressedStack.GetCompressedStack()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Obtém a pilha de comprimido para o thread actual."
  remarks: "Se estiver ativada a segurança, é devolvida a pilha de comprimido atual. Se a segurança está desativada, GetCompressedStack devolve vazio <xref:System.Threading.CompressedStack>objeto.</xref:System.Threading.CompressedStack>      > [!NOTE] > Este método utiliza <xref:System.Security.Permissions.SecurityAction?displayProperty=fullName>impedir que a ser chamado a partir do código não fidedigno; apenas o chamador imediato é necessário ter <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A?displayProperty=fullName>permissão.</xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A?displayProperty=fullName> </xref:System.Security.Permissions.SecurityAction?displayProperty=fullName> Para limitações importantes sobre como utilizar o `LinkDemand` membro, consulte [exigem vs. LinkDemand](http://msdn.microsoft.com/en-us/1ab877f2-70f4-4e0d-8116-943999dfe8f5).      > [!NOTE] > Este membro também faz um pedido de ligação para a chave pública ECMA, que não é uma chave criptográfica válida, mas uma chave de pseudo. Dentro do .NET Framework o pedido de ligação para a chave de pseudo ECMA é automaticamente convertido para um pedido de ligação para a chave pública da Microsoft. A exceção de segurança baseia-se a chave pública do Microsoft, não a chave de pseudo ECMA."
  syntax:
    content: public static System.Threading.CompressedStack GetCompressedStack ();
    parameters: []
    return:
      type: System.Threading.CompressedStack
      description: "A <xref href=&quot;System.Threading.CompressedStack&quot;> </xref> para o thread actual."
  overload: System.Threading.CompressedStack.GetCompressedStack*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Um chamador na cadeia de chamada não tem permissão para aceder a código não gerido.       - ou - o pedido para <xref href=&quot;System.Security.Permissions.StrongNameIdentityPermission&quot;> </xref> falhou."
  platform:
  - net462
- uid: System.Threading.CompressedStack.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Threading.CompressedStack
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: CompressedStack.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Threading.CompressedStack.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Define o <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> objeto com as informações de contexto lógica necessárias para recriar uma instância de neste contexto de execução."
  remarks: "Invocar GetObjectData define um <xref:System.Runtime.Serialization.SerializationInfo>lógica com chamada informações de contexto.</xref:System.Runtime.Serialization.SerializationInfo> Durante a anulação da serialização do objeto de contexto de execução é reconstituted do <xref:System.Runtime.Serialization.SerializationInfo>transmitidos através do fluxo.</xref:System.Runtime.Serialization.SerializationInfo>       Para obter mais informações, consulte <xref:System.Runtime.Serialization.SerializationInfo>.</xref:System.Runtime.Serialization.SerializationInfo>"
  syntax:
    content: public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "O <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> o objeto a ser preenchidos com informações de serialização."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "O <xref:System.Runtime.Serialization.StreamingContext>estrutura que representa o contexto de destino de serialização.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Threading.CompressedStack.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>info</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Threading.CompressedStack.Run(System.Threading.CompressedStack,System.Threading.ContextCallback,System.Object)
  id: Run(System.Threading.CompressedStack,System.Threading.ContextCallback,System.Object)
  parent: System.Threading.CompressedStack
  langs:
  - csharp
  name: Run(CompressedStack,ContextCallback,Object)
  nameWithType: CompressedStack.Run(CompressedStack,ContextCallback,Object)
  fullName: System.Threading.CompressedStack.Run(CompressedStack,ContextCallback,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Executa um método na pilha de comprimido especificada no thread atual."
  remarks: "A pilha de comprimido é devolvida para o estado anterior, quando o método for concluída."
  syntax:
    content: public static void Run (System.Threading.CompressedStack compressedStack, System.Threading.ContextCallback callback, object state);
    parameters:
    - id: compressedStack
      type: System.Threading.CompressedStack
      description: "The <xref href=&quot;System.Threading.CompressedStack&quot;></xref> to set."
    - id: callback
      type: System.Threading.ContextCallback
      description: "A <xref:System.Threading.ContextCallback>que representa o método para ser executado no contexto de segurança especificados.</xref:System.Threading.ContextCallback>"
    - id: state
      type: System.Object
      description: "O objecto transmitido para o método de chamada de retorno."
  overload: System.Threading.CompressedStack.Run*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>compressedStack</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Threading.CompressedStack.Capture
  parent: System.Threading.CompressedStack
  isExternal: false
  name: Capture()
  nameWithType: CompressedStack.Capture()
  fullName: System.Threading.CompressedStack.Capture()
- uid: System.Threading.CompressedStack
  parent: System.Threading
  isExternal: false
  name: CompressedStack
  nameWithType: CompressedStack
  fullName: System.Threading.CompressedStack
- uid: System.Threading.CompressedStack.CreateCopy
  parent: System.Threading.CompressedStack
  isExternal: false
  name: CreateCopy()
  nameWithType: CompressedStack.CreateCopy()
  fullName: System.Threading.CompressedStack.CreateCopy()
- uid: System.Threading.CompressedStack.GetCompressedStack
  parent: System.Threading.CompressedStack
  isExternal: false
  name: GetCompressedStack()
  nameWithType: CompressedStack.GetCompressedStack()
  fullName: System.Threading.CompressedStack.GetCompressedStack()
- uid: System.Threading.CompressedStack.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Threading.CompressedStack
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: CompressedStack.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Threading.CompressedStack.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Threading.CompressedStack.Run(System.Threading.CompressedStack,System.Threading.ContextCallback,System.Object)
  parent: System.Threading.CompressedStack
  isExternal: false
  name: Run(CompressedStack,ContextCallback,Object)
  nameWithType: CompressedStack.Run(CompressedStack,ContextCallback,Object)
  fullName: System.Threading.CompressedStack.Run(CompressedStack,ContextCallback,Object)
- uid: System.Threading.ContextCallback
  parent: System.Threading
  isExternal: true
  name: ContextCallback
  nameWithType: ContextCallback
  fullName: System.Threading.ContextCallback
- uid: System.Threading.CompressedStack.Capture*
  parent: System.Threading.CompressedStack
  isExternal: false
  name: Capture
  nameWithType: CompressedStack.Capture
- uid: System.Threading.CompressedStack.CreateCopy*
  parent: System.Threading.CompressedStack
  isExternal: false
  name: CreateCopy
  nameWithType: CompressedStack.CreateCopy
- uid: System.Threading.CompressedStack.GetCompressedStack*
  parent: System.Threading.CompressedStack
  isExternal: false
  name: GetCompressedStack
  nameWithType: CompressedStack.GetCompressedStack
- uid: System.Threading.CompressedStack.GetObjectData*
  parent: System.Threading.CompressedStack
  isExternal: false
  name: GetObjectData
  nameWithType: CompressedStack.GetObjectData
- uid: System.Threading.CompressedStack.Run*
  parent: System.Threading.CompressedStack
  isExternal: false
  name: Run
  nameWithType: CompressedStack.Run
