### YamlMime:ManagedReference
items:
- uid: System.Security.Principal.SecurityIdentifier
  id: SecurityIdentifier
  children:
  - System.Security.Principal.SecurityIdentifier.#ctor(System.IntPtr)
  - System.Security.Principal.SecurityIdentifier.#ctor(System.String)
  - System.Security.Principal.SecurityIdentifier.#ctor(System.Byte[],System.Int32)
  - System.Security.Principal.SecurityIdentifier.#ctor(System.Security.Principal.WellKnownSidType,System.Security.Principal.SecurityIdentifier)
  - System.Security.Principal.SecurityIdentifier.AccountDomainSid
  - System.Security.Principal.SecurityIdentifier.BinaryLength
  - System.Security.Principal.SecurityIdentifier.CompareTo(System.Security.Principal.SecurityIdentifier)
  - System.Security.Principal.SecurityIdentifier.Equals(System.Object)
  - System.Security.Principal.SecurityIdentifier.Equals(System.Security.Principal.SecurityIdentifier)
  - System.Security.Principal.SecurityIdentifier.GetBinaryForm(System.Byte[],System.Int32)
  - System.Security.Principal.SecurityIdentifier.GetHashCode
  - System.Security.Principal.SecurityIdentifier.IsAccountSid
  - System.Security.Principal.SecurityIdentifier.IsEqualDomainSid(System.Security.Principal.SecurityIdentifier)
  - System.Security.Principal.SecurityIdentifier.IsValidTargetType(System.Type)
  - System.Security.Principal.SecurityIdentifier.IsWellKnown(System.Security.Principal.WellKnownSidType)
  - System.Security.Principal.SecurityIdentifier.MaxBinaryLength
  - System.Security.Principal.SecurityIdentifier.MinBinaryLength
  - System.Security.Principal.SecurityIdentifier.op_Equality(System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier)
  - System.Security.Principal.SecurityIdentifier.op_Inequality(System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier)
  - System.Security.Principal.SecurityIdentifier.ToString
  - System.Security.Principal.SecurityIdentifier.Translate(System.Type)
  - System.Security.Principal.SecurityIdentifier.Value
  langs:
  - csharp
  name: SecurityIdentifier
  nameWithType: SecurityIdentifier
  fullName: System.Security.Principal.SecurityIdentifier
  type: Class
  summary: "Represents a security identifier (SID) and provides marshaling and comparison operations for SIDs."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public sealed class SecurityIdentifier : System.Security.Principal.IdentityReference, IComparable<System.Security.Principal.SecurityIdentifier>
  inheritance:
  - System.Object
  - System.Security.Principal.IdentityReference
  implements:
  - System.IComparable<System.Security.Principal.SecurityIdentifier>
  inheritedMembers:
  - System.Security.Principal.IdentityReference.op_Equality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  - System.Security.Principal.IdentityReference.op_Inequality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.#ctor(System.IntPtr)
  id: '#ctor(System.IntPtr)'
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: SecurityIdentifier(IntPtr)
  nameWithType: SecurityIdentifier.SecurityIdentifier(IntPtr)
  fullName: System.Security.Principal.SecurityIdentifier.SecurityIdentifier(IntPtr)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Initializes a new instance of the <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref> class by using an integer that represents the binary form of a security identifier (SID)."
  syntax:
    content: public SecurityIdentifier (IntPtr binaryForm);
    parameters:
    - id: binaryForm
      type: System.IntPtr
      description: "An integer that represents the binary form of a SID."
  overload: System.Security.Principal.SecurityIdentifier.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: SecurityIdentifier(String)
  nameWithType: SecurityIdentifier.SecurityIdentifier(String)
  fullName: System.Security.Principal.SecurityIdentifier.SecurityIdentifier(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Initializes a new instance of the <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref> class by using the specified security identifier (SID) in Security Descriptor Definition Language (SDDL) format."
  syntax:
    content: public SecurityIdentifier (string sddlForm);
    parameters:
    - id: sddlForm
      type: System.String
      description: "SDDL string for the SID used to create the <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref> object."
  overload: System.Security.Principal.SecurityIdentifier.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.#ctor(System.Byte[],System.Int32)
  id: '#ctor(System.Byte[],System.Int32)'
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: SecurityIdentifier(Byte[],Int32)
  nameWithType: SecurityIdentifier.SecurityIdentifier(Byte[],Int32)
  fullName: System.Security.Principal.SecurityIdentifier.SecurityIdentifier(Byte[],Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Initializes a new instance of the <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref> class by using a specified binary representation of a security identifier (SID)."
  syntax:
    content: public SecurityIdentifier (byte[] binaryForm, int offset);
    parameters:
    - id: binaryForm
      type: System.Byte[]
      description: "The byte array that represents the SID."
    - id: offset
      type: System.Int32
      description: "The byte offset to use as the starting index in `binaryForm`."
  overload: System.Security.Principal.SecurityIdentifier.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.#ctor(System.Security.Principal.WellKnownSidType,System.Security.Principal.SecurityIdentifier)
  id: '#ctor(System.Security.Principal.WellKnownSidType,System.Security.Principal.SecurityIdentifier)'
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: SecurityIdentifier(WellKnownSidType,SecurityIdentifier)
  nameWithType: SecurityIdentifier.SecurityIdentifier(WellKnownSidType,SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.SecurityIdentifier(WellKnownSidType,SecurityIdentifier)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Initializes a new instance of the <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref> class by using the specified well known security identifier (SID) type and domain SID."
  syntax:
    content: public SecurityIdentifier (System.Security.Principal.WellKnownSidType sidType, System.Security.Principal.SecurityIdentifier domainSid);
    parameters:
    - id: sidType
      type: System.Security.Principal.WellKnownSidType
      description: "One of the enumeration values. This value must not be <xref href=&quot;System.Security.Principal.WellKnownSidType&quot;></xref>."
    - id: domainSid
      type: System.Security.Principal.SecurityIdentifier
      description: "The domain SID. This value is required for the following <xref href=\"System.Security.Principal.WellKnownSidType\"></xref> values. This parameter is ignored for any other <xref href=\"System.Security.Principal.WellKnownSidType\"></xref> values.  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>"
  overload: System.Security.Principal.SecurityIdentifier.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.AccountDomainSid
  id: AccountDomainSid
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: AccountDomainSid
  nameWithType: SecurityIdentifier.AccountDomainSid
  fullName: System.Security.Principal.SecurityIdentifier.AccountDomainSid
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Returns the account domain security identifier (SID) portion from the SID represented by the <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref> object if the SID represents a Windows account SID. If the SID does not represent a Windows account SID, this property returns <xref:System.ArgumentNullException>."
  syntax:
    content: public System.Security.Principal.SecurityIdentifier AccountDomainSid { get; }
    return:
      type: System.Security.Principal.SecurityIdentifier
      description: "The account domain SID portion from the SID represented by the <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref> object if the SID represents a Windows account SID; otherwise, it returns <xref:System.ArgumentNullException>."
  overload: System.Security.Principal.SecurityIdentifier.AccountDomainSid*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.BinaryLength
  id: BinaryLength
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: BinaryLength
  nameWithType: SecurityIdentifier.BinaryLength
  fullName: System.Security.Principal.SecurityIdentifier.BinaryLength
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Returns the length, in bytes, of the security identifier (SID) represented by the <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref> object."
  syntax:
    content: public int BinaryLength { get; }
    return:
      type: System.Int32
      description: "The length, in bytes, of the SID represented by the <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref> object."
  overload: System.Security.Principal.SecurityIdentifier.BinaryLength*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.CompareTo(System.Security.Principal.SecurityIdentifier)
  id: CompareTo(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: CompareTo(SecurityIdentifier)
  nameWithType: SecurityIdentifier.CompareTo(SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.CompareTo(SecurityIdentifier)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Compares the current <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref> object with the specified <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref> object."
  syntax:
    content: public int CompareTo (System.Security.Principal.SecurityIdentifier sid);
    parameters:
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "The object to compare with the current object."
    return:
      type: System.Int32
      description: "A signed number indicating the relative values of this instance and <code>sid</code>.       <table><thead><tr><th> Return Value       </th><th> Description       </th></tr></thead><tbody><tr><td> Less than zero       </td><td> This instance is less than <code>sid</code>.       </td></tr><tr><td> Zero       </td><td> This instance is equal to <code>sid</code>.       </td></tr><tr><td> Greater than zero       </td><td> This instance is greater than <code>sid</code>.       </td></tr></tbody></table>"
  overload: System.Security.Principal.SecurityIdentifier.CompareTo*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: SecurityIdentifier.Equals(Object)
  fullName: System.Security.Principal.SecurityIdentifier.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Returns a value that indicates whether this <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref> object is equal to a specified object."
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "An object to compare with this <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref> object, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <code>o</code> is an object with the same underlying type and value as this <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref> object; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Principal.SecurityIdentifier.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.Equals(System.Security.Principal.SecurityIdentifier)
  id: Equals(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: Equals(SecurityIdentifier)
  nameWithType: SecurityIdentifier.Equals(SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.Equals(SecurityIdentifier)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Indicates whether the specified <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref> object is equal to the current <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref> object."
  syntax:
    content: public bool Equals (System.Security.Principal.SecurityIdentifier sid);
    parameters:
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "The object to compare with the current object."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the value of <code>sid</code> is equal to the value of the current <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref> object."
  overload: System.Security.Principal.SecurityIdentifier.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.GetBinaryForm(System.Byte[],System.Int32)
  id: GetBinaryForm(System.Byte[],System.Int32)
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: GetBinaryForm(Byte[],Int32)
  nameWithType: SecurityIdentifier.GetBinaryForm(Byte[],Int32)
  fullName: System.Security.Principal.SecurityIdentifier.GetBinaryForm(Byte[],Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Copies the binary representation of the specified security identifier (SID) represented by the <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref> class to a byte array."
  syntax:
    content: public void GetBinaryForm (byte[] binaryForm, int offset);
    parameters:
    - id: binaryForm
      type: System.Byte[]
      description: "The byte array to receive the copied SID."
    - id: offset
      type: System.Int32
      description: "The byte offset to use as the starting index in `binaryForm`."
  overload: System.Security.Principal.SecurityIdentifier.GetBinaryForm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.GetHashCode
  id: GetHashCode
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: SecurityIdentifier.GetHashCode()
  fullName: System.Security.Principal.SecurityIdentifier.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Serves as a hash function for the current <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref> object. The GetHashCode method is suitable for hashing algorithms and data structures like a hash table."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "A hash value for the current <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref> object."
  overload: System.Security.Principal.SecurityIdentifier.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.IsAccountSid
  id: IsAccountSid
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: IsAccountSid()
  nameWithType: SecurityIdentifier.IsAccountSid()
  fullName: System.Security.Principal.SecurityIdentifier.IsAccountSid()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Returns a value that indicates whether the security identifier (SID) represented by this <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref> object is a valid Windows account SID."
  syntax:
    content: public bool IsAccountSid ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the SID represented by this <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref> object is a valid Windows account SID; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Principal.SecurityIdentifier.IsAccountSid*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.IsEqualDomainSid(System.Security.Principal.SecurityIdentifier)
  id: IsEqualDomainSid(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: IsEqualDomainSid(SecurityIdentifier)
  nameWithType: SecurityIdentifier.IsEqualDomainSid(SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.IsEqualDomainSid(SecurityIdentifier)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Returns a value that indicates whether the security identifier (SID) represented by this <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref> object is from the same domain as the specified SID."
  syntax:
    content: public bool IsEqualDomainSid (System.Security.Principal.SecurityIdentifier sid);
    parameters:
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "The SID to compare with this <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref> object."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the SID represented by this <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref> object is in the same domain as the <code>sid</code> SID; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Principal.SecurityIdentifier.IsEqualDomainSid*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.IsValidTargetType(System.Type)
  id: IsValidTargetType(System.Type)
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: IsValidTargetType(Type)
  nameWithType: SecurityIdentifier.IsValidTargetType(Type)
  fullName: System.Security.Principal.SecurityIdentifier.IsValidTargetType(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Returns a value that indicates whether the specified type is a valid translation type for the <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref> class."
  syntax:
    content: public override bool IsValidTargetType (Type targetType);
    parameters:
    - id: targetType
      type: System.Type
      description: "The type being queried for validity to serve as a conversion from <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>. The following target types are valid:  \n  \n \\- <xref href=\"System.Security.Principal.NTAccount\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <code>targetType</code> is a valid translation type for the <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref> class; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Principal.SecurityIdentifier.IsValidTargetType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.IsWellKnown(System.Security.Principal.WellKnownSidType)
  id: IsWellKnown(System.Security.Principal.WellKnownSidType)
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: IsWellKnown(WellKnownSidType)
  nameWithType: SecurityIdentifier.IsWellKnown(WellKnownSidType)
  fullName: System.Security.Principal.SecurityIdentifier.IsWellKnown(WellKnownSidType)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Returns a value that indicates whether the <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref> object matches the specified well known security identifier (SID) type."
  syntax:
    content: public bool IsWellKnown (System.Security.Principal.WellKnownSidType type);
    parameters:
    - id: type
      type: System.Security.Principal.WellKnownSidType
      description: "A value to compare with the <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref> object."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <code>type</code> is the SID type for the <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref> object; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Principal.SecurityIdentifier.IsWellKnown*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.MaxBinaryLength
  id: MaxBinaryLength
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: MaxBinaryLength
  nameWithType: SecurityIdentifier.MaxBinaryLength
  fullName: System.Security.Principal.SecurityIdentifier.MaxBinaryLength
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Returns the maximum size, in bytes, of the binary representation of the security identifier."
  syntax:
    content: public static readonly int MaxBinaryLength;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.MinBinaryLength
  id: MinBinaryLength
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: MinBinaryLength
  nameWithType: SecurityIdentifier.MinBinaryLength
  fullName: System.Security.Principal.SecurityIdentifier.MinBinaryLength
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Returns the minimum size, in bytes, of the binary representation of the security identifier."
  syntax:
    content: public static readonly int MinBinaryLength;
    return:
      type: System.Int32
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.op_Equality(System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier)
  id: op_Equality(System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: op_Equality(SecurityIdentifier,SecurityIdentifier)
  nameWithType: SecurityIdentifier.op_Equality(SecurityIdentifier,SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.op_Equality(SecurityIdentifier,SecurityIdentifier)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Compares two <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref> objects to determine whether they are equal. They are considered equal if they have the same canonical representation as the one returned by the <xref:System.Security.Principal.SecurityIdentifier.Value*> property or if they are both <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  syntax:
    content: public static bool op_Equality (System.Security.Principal.SecurityIdentifier left, System.Security.Principal.SecurityIdentifier right);
    parameters:
    - id: left
      type: System.Security.Principal.SecurityIdentifier
      description: "The left operand to use for the equality comparison. This parameter can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: right
      type: System.Security.Principal.SecurityIdentifier
      description: "The right operand to use for the equality comparison. This parameter can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <code>left</code> and <code>right</code> are equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Principal.SecurityIdentifier.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.op_Inequality(System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier)
  id: op_Inequality(System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: op_Inequality(SecurityIdentifier,SecurityIdentifier)
  nameWithType: SecurityIdentifier.op_Inequality(SecurityIdentifier,SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.op_Inequality(SecurityIdentifier,SecurityIdentifier)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Compares two <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref> objects to determine whether they are not equal. They are considered not equal if they have different canonical name representations than the one returned by the <xref:System.Security.Principal.SecurityIdentifier.Value*> property or if one of the objects is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> and the other is not."
  syntax:
    content: public static bool op_Inequality (System.Security.Principal.SecurityIdentifier left, System.Security.Principal.SecurityIdentifier right);
    parameters:
    - id: left
      type: System.Security.Principal.SecurityIdentifier
      description: "The left operand to use for the inequality comparison. This parameter can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: right
      type: System.Security.Principal.SecurityIdentifier
      description: "The right operand to use for the inequality comparison. This parameter can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <code>left</code> and <code>right</code> are not equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Principal.SecurityIdentifier.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.ToString
  id: ToString
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: ToString()
  nameWithType: SecurityIdentifier.ToString()
  fullName: System.Security.Principal.SecurityIdentifier.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Returns the security identifier (SID), in Security Descriptor Definition Language (SDDL) format, for the account represented by the <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref> object. An example of the SDDL format is S-1-5-9."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "The SID, in SDDL format, for the account represented by the <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref> object."
  overload: System.Security.Principal.SecurityIdentifier.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.Translate(System.Type)
  id: Translate(System.Type)
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: Translate(Type)
  nameWithType: SecurityIdentifier.Translate(Type)
  fullName: System.Security.Principal.SecurityIdentifier.Translate(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Translates the account name represented by the <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref> object into another <xref href=&quot;System.Security.Principal.IdentityReference&quot;></xref>-derived type."
  syntax:
    content: public override System.Security.Principal.IdentityReference Translate (Type targetType);
    parameters:
    - id: targetType
      type: System.Type
      description: "The target type for the conversion from <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref>. The target type must be a type that is considered valid by the <xref:System.Security.Principal.SecurityIdentifier.IsValidTargetType*> method."
    return:
      type: System.Security.Principal.IdentityReference
      description: "The converted identity."
  overload: System.Security.Principal.SecurityIdentifier.Translate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetType </code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetType </code>is not an <xref href=&quot;System.Security.Principal.IdentityReference&quot;></xref> type."
  - type: System.Security.Principal.IdentityNotMappedException
    commentId: T:System.Security.Principal.IdentityNotMappedException
    description: "Some or all identity references could not be translated."
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "A Win32 error code was returned."
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.Value
  id: Value
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: Value
  nameWithType: SecurityIdentifier.Value
  fullName: System.Security.Principal.SecurityIdentifier.Value
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Returns an uppercase Security Descriptor Definition Language (SDDL) string for the security identifier (SID) represented by this <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref> object."
  syntax:
    content: public override string Value { get; }
    return:
      type: System.String
      description: "An uppercase SDDL string for the SID represented by the <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref> object."
  overload: System.Security.Principal.SecurityIdentifier.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Principal.IdentityReference
  isExternal: false
  name: System.Security.Principal.IdentityReference
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Principal.IdentityNotMappedException
  parent: System.Security.Principal
  isExternal: false
  name: IdentityNotMappedException
  nameWithType: IdentityNotMappedException
  fullName: System.Security.Principal.IdentityNotMappedException
- uid: System.SystemException
  parent: System
  isExternal: false
  name: SystemException
  nameWithType: SystemException
  fullName: System.SystemException
- uid: System.Security.Principal.SecurityIdentifier.#ctor(System.IntPtr)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: SecurityIdentifier(IntPtr)
  nameWithType: SecurityIdentifier.SecurityIdentifier(IntPtr)
  fullName: System.Security.Principal.SecurityIdentifier.SecurityIdentifier(IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Security.Principal.SecurityIdentifier.#ctor(System.String)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: SecurityIdentifier(String)
  nameWithType: SecurityIdentifier.SecurityIdentifier(String)
  fullName: System.Security.Principal.SecurityIdentifier.SecurityIdentifier(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Principal.SecurityIdentifier.#ctor(System.Byte[],System.Int32)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: SecurityIdentifier(Byte[],Int32)
  nameWithType: SecurityIdentifier.SecurityIdentifier(Byte[],Int32)
  fullName: System.Security.Principal.SecurityIdentifier.SecurityIdentifier(Byte[],Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Principal.SecurityIdentifier.#ctor(System.Security.Principal.WellKnownSidType,System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: SecurityIdentifier(WellKnownSidType,SecurityIdentifier)
  nameWithType: SecurityIdentifier.SecurityIdentifier(WellKnownSidType,SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.SecurityIdentifier(WellKnownSidType,SecurityIdentifier)
- uid: System.Security.Principal.WellKnownSidType
  parent: System.Security.Principal
  isExternal: false
  name: WellKnownSidType
  nameWithType: WellKnownSidType
  fullName: System.Security.Principal.WellKnownSidType
- uid: System.Security.Principal.SecurityIdentifier
  parent: System.Security.Principal
  isExternal: false
  name: SecurityIdentifier
  nameWithType: SecurityIdentifier
  fullName: System.Security.Principal.SecurityIdentifier
- uid: System.Security.Principal.SecurityIdentifier.AccountDomainSid
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: AccountDomainSid
  nameWithType: SecurityIdentifier.AccountDomainSid
  fullName: System.Security.Principal.SecurityIdentifier.AccountDomainSid
- uid: System.Security.Principal.SecurityIdentifier.BinaryLength
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: BinaryLength
  nameWithType: SecurityIdentifier.BinaryLength
  fullName: System.Security.Principal.SecurityIdentifier.BinaryLength
- uid: System.Security.Principal.SecurityIdentifier.CompareTo(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: CompareTo(SecurityIdentifier)
  nameWithType: SecurityIdentifier.CompareTo(SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.CompareTo(SecurityIdentifier)
- uid: System.Security.Principal.SecurityIdentifier.Equals(System.Object)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: Equals(Object)
  nameWithType: SecurityIdentifier.Equals(Object)
  fullName: System.Security.Principal.SecurityIdentifier.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Principal.SecurityIdentifier.Equals(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: Equals(SecurityIdentifier)
  nameWithType: SecurityIdentifier.Equals(SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.Equals(SecurityIdentifier)
- uid: System.Security.Principal.SecurityIdentifier.GetBinaryForm(System.Byte[],System.Int32)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: GetBinaryForm(Byte[],Int32)
  nameWithType: SecurityIdentifier.GetBinaryForm(Byte[],Int32)
  fullName: System.Security.Principal.SecurityIdentifier.GetBinaryForm(Byte[],Int32)
- uid: System.Security.Principal.SecurityIdentifier.GetHashCode
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: GetHashCode()
  nameWithType: SecurityIdentifier.GetHashCode()
  fullName: System.Security.Principal.SecurityIdentifier.GetHashCode()
- uid: System.Security.Principal.SecurityIdentifier.IsAccountSid
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: IsAccountSid()
  nameWithType: SecurityIdentifier.IsAccountSid()
  fullName: System.Security.Principal.SecurityIdentifier.IsAccountSid()
- uid: System.Security.Principal.SecurityIdentifier.IsEqualDomainSid(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: IsEqualDomainSid(SecurityIdentifier)
  nameWithType: SecurityIdentifier.IsEqualDomainSid(SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.IsEqualDomainSid(SecurityIdentifier)
- uid: System.Security.Principal.SecurityIdentifier.IsValidTargetType(System.Type)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: IsValidTargetType(Type)
  nameWithType: SecurityIdentifier.IsValidTargetType(Type)
  fullName: System.Security.Principal.SecurityIdentifier.IsValidTargetType(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.Principal.SecurityIdentifier.IsWellKnown(System.Security.Principal.WellKnownSidType)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: IsWellKnown(WellKnownSidType)
  nameWithType: SecurityIdentifier.IsWellKnown(WellKnownSidType)
  fullName: System.Security.Principal.SecurityIdentifier.IsWellKnown(WellKnownSidType)
- uid: System.Security.Principal.SecurityIdentifier.MaxBinaryLength
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: MaxBinaryLength
  nameWithType: SecurityIdentifier.MaxBinaryLength
  fullName: System.Security.Principal.SecurityIdentifier.MaxBinaryLength
- uid: System.Security.Principal.SecurityIdentifier.MinBinaryLength
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: MinBinaryLength
  nameWithType: SecurityIdentifier.MinBinaryLength
  fullName: System.Security.Principal.SecurityIdentifier.MinBinaryLength
- uid: System.Security.Principal.SecurityIdentifier.op_Equality(System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: op_Equality(SecurityIdentifier,SecurityIdentifier)
  nameWithType: SecurityIdentifier.op_Equality(SecurityIdentifier,SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.op_Equality(SecurityIdentifier,SecurityIdentifier)
- uid: System.Security.Principal.SecurityIdentifier.op_Inequality(System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: op_Inequality(SecurityIdentifier,SecurityIdentifier)
  nameWithType: SecurityIdentifier.op_Inequality(SecurityIdentifier,SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.op_Inequality(SecurityIdentifier,SecurityIdentifier)
- uid: System.Security.Principal.SecurityIdentifier.ToString
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: ToString()
  nameWithType: SecurityIdentifier.ToString()
  fullName: System.Security.Principal.SecurityIdentifier.ToString()
- uid: System.Security.Principal.SecurityIdentifier.Translate(System.Type)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: Translate(Type)
  nameWithType: SecurityIdentifier.Translate(Type)
  fullName: System.Security.Principal.SecurityIdentifier.Translate(Type)
- uid: System.Security.Principal.SecurityIdentifier.Value
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: Value
  nameWithType: SecurityIdentifier.Value
  fullName: System.Security.Principal.SecurityIdentifier.Value
- uid: System.Security.Principal.SecurityIdentifier.#ctor*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: SecurityIdentifier
  nameWithType: SecurityIdentifier.SecurityIdentifier
- uid: System.Security.Principal.SecurityIdentifier.AccountDomainSid*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: AccountDomainSid
  nameWithType: SecurityIdentifier.AccountDomainSid
- uid: System.Security.Principal.SecurityIdentifier.BinaryLength*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: BinaryLength
  nameWithType: SecurityIdentifier.BinaryLength
- uid: System.Security.Principal.SecurityIdentifier.CompareTo*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: CompareTo
  nameWithType: SecurityIdentifier.CompareTo
- uid: System.Security.Principal.SecurityIdentifier.Equals*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: Equals
  nameWithType: SecurityIdentifier.Equals
- uid: System.Security.Principal.SecurityIdentifier.GetBinaryForm*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: GetBinaryForm
  nameWithType: SecurityIdentifier.GetBinaryForm
- uid: System.Security.Principal.SecurityIdentifier.GetHashCode*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: GetHashCode
  nameWithType: SecurityIdentifier.GetHashCode
- uid: System.Security.Principal.SecurityIdentifier.IsAccountSid*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: IsAccountSid
  nameWithType: SecurityIdentifier.IsAccountSid
- uid: System.Security.Principal.SecurityIdentifier.IsEqualDomainSid*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: IsEqualDomainSid
  nameWithType: SecurityIdentifier.IsEqualDomainSid
- uid: System.Security.Principal.SecurityIdentifier.IsValidTargetType*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: IsValidTargetType
  nameWithType: SecurityIdentifier.IsValidTargetType
- uid: System.Security.Principal.SecurityIdentifier.IsWellKnown*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: IsWellKnown
  nameWithType: SecurityIdentifier.IsWellKnown
- uid: System.Security.Principal.SecurityIdentifier.op_Equality*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: op_Equality
  nameWithType: SecurityIdentifier.op_Equality
- uid: System.Security.Principal.SecurityIdentifier.op_Inequality*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: op_Inequality
  nameWithType: SecurityIdentifier.op_Inequality
- uid: System.Security.Principal.SecurityIdentifier.ToString*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: ToString
  nameWithType: SecurityIdentifier.ToString
- uid: System.Security.Principal.SecurityIdentifier.Translate*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: Translate
  nameWithType: SecurityIdentifier.Translate
- uid: System.Security.Principal.SecurityIdentifier.Value*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: Value
  nameWithType: SecurityIdentifier.Value
