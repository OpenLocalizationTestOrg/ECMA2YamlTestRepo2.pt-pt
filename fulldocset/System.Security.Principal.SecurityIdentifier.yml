### YamlMime:ManagedReference
items:
- uid: System.Security.Principal.SecurityIdentifier
  id: SecurityIdentifier
  children:
  - System.Security.Principal.SecurityIdentifier.#ctor(System.IntPtr)
  - System.Security.Principal.SecurityIdentifier.#ctor(System.String)
  - System.Security.Principal.SecurityIdentifier.#ctor(System.Byte[],System.Int32)
  - System.Security.Principal.SecurityIdentifier.#ctor(System.Security.Principal.WellKnownSidType,System.Security.Principal.SecurityIdentifier)
  - System.Security.Principal.SecurityIdentifier.AccountDomainSid
  - System.Security.Principal.SecurityIdentifier.BinaryLength
  - System.Security.Principal.SecurityIdentifier.CompareTo(System.Security.Principal.SecurityIdentifier)
  - System.Security.Principal.SecurityIdentifier.Equals(System.Object)
  - System.Security.Principal.SecurityIdentifier.Equals(System.Security.Principal.SecurityIdentifier)
  - System.Security.Principal.SecurityIdentifier.GetBinaryForm(System.Byte[],System.Int32)
  - System.Security.Principal.SecurityIdentifier.GetHashCode
  - System.Security.Principal.SecurityIdentifier.IsAccountSid
  - System.Security.Principal.SecurityIdentifier.IsEqualDomainSid(System.Security.Principal.SecurityIdentifier)
  - System.Security.Principal.SecurityIdentifier.IsValidTargetType(System.Type)
  - System.Security.Principal.SecurityIdentifier.IsWellKnown(System.Security.Principal.WellKnownSidType)
  - System.Security.Principal.SecurityIdentifier.MaxBinaryLength
  - System.Security.Principal.SecurityIdentifier.MinBinaryLength
  - System.Security.Principal.SecurityIdentifier.op_Equality(System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier)
  - System.Security.Principal.SecurityIdentifier.op_Inequality(System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier)
  - System.Security.Principal.SecurityIdentifier.ToString
  - System.Security.Principal.SecurityIdentifier.Translate(System.Type)
  - System.Security.Principal.SecurityIdentifier.Value
  langs:
  - csharp
  name: SecurityIdentifier
  nameWithType: SecurityIdentifier
  fullName: System.Security.Principal.SecurityIdentifier
  type: Class
  summary: "Representa um identificador de segurança (SID) e fornece as operações de comparação de empacotamento de referências e para os SIDs."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public sealed class SecurityIdentifier : System.Security.Principal.IdentityReference, IComparable<System.Security.Principal.SecurityIdentifier>
  inheritance:
  - System.Object
  - System.Security.Principal.IdentityReference
  implements:
  - System.IComparable<System.Security.Principal.SecurityIdentifier>
  inheritedMembers:
  - System.Security.Principal.IdentityReference.op_Equality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  - System.Security.Principal.IdentityReference.op_Inequality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.#ctor(System.IntPtr)
  id: '#ctor(System.IntPtr)'
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: SecurityIdentifier(IntPtr)
  nameWithType: SecurityIdentifier.SecurityIdentifier(IntPtr)
  fullName: System.Security.Principal.SecurityIdentifier.SecurityIdentifier(IntPtr)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> classe utilizando um número inteiro que representa o formato binário de um identificador de segurança (SID)."
  syntax:
    content: public SecurityIdentifier (IntPtr binaryForm);
    parameters:
    - id: binaryForm
      type: System.IntPtr
      description: "Um número inteiro que representa o formato binário de um SID."
  overload: System.Security.Principal.SecurityIdentifier.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: SecurityIdentifier(String)
  nameWithType: SecurityIdentifier.SecurityIdentifier(String)
  fullName: System.Security.Principal.SecurityIdentifier.SecurityIdentifier(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> classe utilizando o identificador de segurança especificados (SID) no formato de linguagem de definição de descritor de segurança (SDDL)."
  syntax:
    content: public SecurityIdentifier (string sddlForm);
    parameters:
    - id: sddlForm
      type: System.String
      description: "Cadeia SDDL para o SID utilizado para criar o <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> objeto."
  overload: System.Security.Principal.SecurityIdentifier.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.#ctor(System.Byte[],System.Int32)
  id: '#ctor(System.Byte[],System.Int32)'
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: SecurityIdentifier(Byte[],Int32)
  nameWithType: SecurityIdentifier.SecurityIdentifier(Byte[],Int32)
  fullName: System.Security.Principal.SecurityIdentifier.SecurityIdentifier(Byte[],Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> classe através da utilização de uma representação binária especificada de um identificador de segurança (SID)."
  syntax:
    content: public SecurityIdentifier (byte[] binaryForm, int offset);
    parameters:
    - id: binaryForm
      type: System.Byte[]
      description: "A matriz de bytes que representa o SID."
    - id: offset
      type: System.Int32
      description: "O byte de deslocamento para utilizar como o índice de início no `binaryForm`."
  overload: System.Security.Principal.SecurityIdentifier.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.#ctor(System.Security.Principal.WellKnownSidType,System.Security.Principal.SecurityIdentifier)
  id: '#ctor(System.Security.Principal.WellKnownSidType,System.Security.Principal.SecurityIdentifier)'
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: SecurityIdentifier(WellKnownSidType,SecurityIdentifier)
  nameWithType: SecurityIdentifier.SecurityIdentifier(WellKnownSidType,SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.SecurityIdentifier(WellKnownSidType,SecurityIdentifier)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> classe com o tipo de identificador (SID) de segurança bem conhecidos especificados e o SID de domínio."
  syntax:
    content: public SecurityIdentifier (System.Security.Principal.WellKnownSidType sidType, System.Security.Principal.SecurityIdentifier domainSid);
    parameters:
    - id: sidType
      type: System.Security.Principal.WellKnownSidType
      description: "Um dos valores de enumeração. Este valor não deve ser <xref href=&quot;System.Security.Principal.WellKnownSidType&quot;> </xref>."
    - id: domainSid
      type: System.Security.Principal.SecurityIdentifier
      description: "The domain SID. This value is required for the following <xref href=\"System.Security.Principal.WellKnownSidType\"></xref> values. This parameter is ignored for any other <xref href=\"System.Security.Principal.WellKnownSidType\"></xref> values.  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.WellKnownSidType\"></xref>"
  overload: System.Security.Principal.SecurityIdentifier.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.AccountDomainSid
  id: AccountDomainSid
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: AccountDomainSid
  nameWithType: SecurityIdentifier.AccountDomainSid
  fullName: System.Security.Principal.SecurityIdentifier.AccountDomainSid
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Devolve a parte de identificador (SID) de segurança de domínio de conta de SID representado pelo <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> objeto se o SID representa um SID de conta do Windows. Se o SID não representa um SID de conta do Windows, esta propriedade devolve <xref:System.ArgumentNullException>.</xref:System.ArgumentNullException>"
  syntax:
    content: public System.Security.Principal.SecurityIdentifier AccountDomainSid { get; }
    return:
      type: System.Security.Principal.SecurityIdentifier
      description: "O domínio da conta de SID parte do SID representado pelo <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> objeto se o SID representa um Windows conta SID; caso contrário, devolve <xref:System.ArgumentNullException>.</xref:System.ArgumentNullException>"
  overload: System.Security.Principal.SecurityIdentifier.AccountDomainSid*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.BinaryLength
  id: BinaryLength
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: BinaryLength
  nameWithType: SecurityIdentifier.BinaryLength
  fullName: System.Security.Principal.SecurityIdentifier.BinaryLength
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Devolve o comprimento, em bytes, do identificador de segurança (SID) representado pelo <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> objeto."
  syntax:
    content: public int BinaryLength { get; }
    return:
      type: System.Int32
      description: "O comprimento do SID representado pelo, em bytes, o <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> objeto."
  overload: System.Security.Principal.SecurityIdentifier.BinaryLength*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.CompareTo(System.Security.Principal.SecurityIdentifier)
  id: CompareTo(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: CompareTo(SecurityIdentifier)
  nameWithType: SecurityIdentifier.CompareTo(SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.CompareTo(SecurityIdentifier)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Compara atual <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> objeto especificado com <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> objeto."
  syntax:
    content: public int CompareTo (System.Security.Principal.SecurityIdentifier sid);
    parameters:
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "O objeto para a comparação com o objeto atual."
    return:
      type: System.Int32
      description: "Um número assinado que indica que os valores desta instância relativos e <code> sid </code>.       <table><thead><tr><th> Valor devolvido       </th><th> Descrição       </th></tr></thead><tbody><tr><td> Menor que zero       </td><td> Esta instância é inferior a <code> sid </code>.       </td></tr><tr><td> Zero       </td><td> Esta instância é igual a <code> sid </code>.       </td></tr><tr><td> Maior que zero       </td><td> Esta instância é superior ao <code> sid </code>.       </td></tr></tbody></table>"
  overload: System.Security.Principal.SecurityIdentifier.CompareTo*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: SecurityIdentifier.Equals(Object)
  fullName: System.Security.Principal.SecurityIdentifier.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Devolve um valor que indica se esta <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> objeto é igual a um objeto especificado."
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "Um objeto para o comparar com esta <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> objeto, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <code> o </code> é um objeto com o mesmo subjacente tipo e valor deste <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> objeto; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Principal.SecurityIdentifier.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.Equals(System.Security.Principal.SecurityIdentifier)
  id: Equals(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: Equals(SecurityIdentifier)
  nameWithType: SecurityIdentifier.Equals(SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.Equals(SecurityIdentifier)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Indica se especificado <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> objeto é igual a atual <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> objeto."
  syntax:
    content: public bool Equals (System.Security.Principal.SecurityIdentifier sid);
    parameters:
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "O objeto para a comparação com o objeto atual."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o valor de <code> sid </code> é igual ao valor de actual <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> objeto."
  overload: System.Security.Principal.SecurityIdentifier.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.GetBinaryForm(System.Byte[],System.Int32)
  id: GetBinaryForm(System.Byte[],System.Int32)
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: GetBinaryForm(Byte[],Int32)
  nameWithType: SecurityIdentifier.GetBinaryForm(Byte[],Int32)
  fullName: System.Security.Principal.SecurityIdentifier.GetBinaryForm(Byte[],Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Copia a representação binária do identificador de segurança especificados (SID) representado pelo <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> classe para uma matriz de bytes."
  syntax:
    content: public void GetBinaryForm (byte[] binaryForm, int offset);
    parameters:
    - id: binaryForm
      type: System.Byte[]
      description: "A matriz de bytes para receber o SID copiado."
    - id: offset
      type: System.Int32
      description: "O byte de deslocamento para utilizar como o índice de início no `binaryForm`."
  overload: System.Security.Principal.SecurityIdentifier.GetBinaryForm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.GetHashCode
  id: GetHashCode
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: SecurityIdentifier.GetHashCode()
  fullName: System.Security.Principal.SecurityIdentifier.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Funciona como uma função de hash para o atual <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> objeto. O método GetHashCode é adequado para codificar estruturas de algoritmos e os dados, como uma tabela hash."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Um valor de hash para o atual <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> objeto."
  overload: System.Security.Principal.SecurityIdentifier.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.IsAccountSid
  id: IsAccountSid
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: IsAccountSid()
  nameWithType: SecurityIdentifier.IsAccountSid()
  fullName: System.Security.Principal.SecurityIdentifier.IsAccountSid()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Devolve um valor que indica se o identificador de segurança (SID) representado por este <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> objeto é uma conta do Windows válida SID."
  syntax:
    content: public bool IsAccountSid ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o SID representado por este <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> objeto é uma conta do Windows válida SID; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Principal.SecurityIdentifier.IsAccountSid*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.IsEqualDomainSid(System.Security.Principal.SecurityIdentifier)
  id: IsEqualDomainSid(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: IsEqualDomainSid(SecurityIdentifier)
  nameWithType: SecurityIdentifier.IsEqualDomainSid(SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.IsEqualDomainSid(SecurityIdentifier)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Devolve um valor que indica se o identificador de segurança (SID) representado por este <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> objeto é do mesmo domínio que o SID especificado."
  syntax:
    content: public bool IsEqualDomainSid (System.Security.Principal.SecurityIdentifier sid);
    parameters:
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "O SID para comparar com esta <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> objeto."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o SID representado por este <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> objeto está no mesmo domínio que o <code> sid </code> SID; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Principal.SecurityIdentifier.IsEqualDomainSid*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.IsValidTargetType(System.Type)
  id: IsValidTargetType(System.Type)
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: IsValidTargetType(Type)
  nameWithType: SecurityIdentifier.IsValidTargetType(Type)
  fullName: System.Security.Principal.SecurityIdentifier.IsValidTargetType(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Devolve um valor que indica se o tipo especificado é um tipo de conversão válido para o <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> classe."
  syntax:
    content: public override bool IsValidTargetType (Type targetType);
    parameters:
    - id: targetType
      type: System.Type
      description: "The type being queried for validity to serve as a conversion from <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>. The following target types are valid:  \n  \n \\- <xref href=\"System.Security.Principal.NTAccount\"></xref>  \n  \n \\- <xref href=\"System.Security.Principal.SecurityIdentifier\"></xref>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <code> targetType </code> é um tipo de conversão válido para o <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> classe; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Principal.SecurityIdentifier.IsValidTargetType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.IsWellKnown(System.Security.Principal.WellKnownSidType)
  id: IsWellKnown(System.Security.Principal.WellKnownSidType)
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: IsWellKnown(WellKnownSidType)
  nameWithType: SecurityIdentifier.IsWellKnown(WellKnownSidType)
  fullName: System.Security.Principal.SecurityIdentifier.IsWellKnown(WellKnownSidType)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Devolve um valor que indica se o <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> objeto corresponde ao tipo de identificador (SID) de segurança bem conhecidos especificados."
  syntax:
    content: public bool IsWellKnown (System.Security.Principal.WellKnownSidType type);
    parameters:
    - id: type
      type: System.Security.Principal.WellKnownSidType
      description: "Um valor a comparar com a <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> objeto."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <code> type </code> é o tipo de SID para o <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> objeto; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Principal.SecurityIdentifier.IsWellKnown*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.MaxBinaryLength
  id: MaxBinaryLength
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: MaxBinaryLength
  nameWithType: SecurityIdentifier.MaxBinaryLength
  fullName: System.Security.Principal.SecurityIdentifier.MaxBinaryLength
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Devolve o tamanho máximo, em bytes, da representação binária do identificador de segurança."
  syntax:
    content: public static readonly int MaxBinaryLength;
    return:
      type: System.Int32
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.MinBinaryLength
  id: MinBinaryLength
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: MinBinaryLength
  nameWithType: SecurityIdentifier.MinBinaryLength
  fullName: System.Security.Principal.SecurityIdentifier.MinBinaryLength
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Devolve o tamanho mínimo, em bytes, da representação binária do identificador de segurança."
  syntax:
    content: public static readonly int MinBinaryLength;
    return:
      type: System.Int32
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.op_Equality(System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier)
  id: op_Equality(System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: op_Equality(SecurityIdentifier,SecurityIdentifier)
  nameWithType: SecurityIdentifier.op_Equality(SecurityIdentifier,SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.op_Equality(SecurityIdentifier,SecurityIdentifier)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Compara dois <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> objetos para determinar se estes são iguais. Estes são considerados iguais se tiverem a mesma representação canónica como devolvido pelo <xref:System.Security.Principal.SecurityIdentifier.Value*>propriedade ou se estão ambos <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Security.Principal.SecurityIdentifier.Value*>"
  syntax:
    content: public static bool op_Equality (System.Security.Principal.SecurityIdentifier left, System.Security.Principal.SecurityIdentifier right);
    parameters:
    - id: left
      type: System.Security.Principal.SecurityIdentifier
      description: "O operando esquerdo a utilizar para a comparação de igualdade. Este parâmetro pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: right
      type: System.Security.Principal.SecurityIdentifier
      description: "O operando direito a utilizar para a comparação de igualdade. Este parâmetro pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>left</code> and <code>right</code> are equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Principal.SecurityIdentifier.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.op_Inequality(System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier)
  id: op_Inequality(System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: op_Inequality(SecurityIdentifier,SecurityIdentifier)
  nameWithType: SecurityIdentifier.op_Inequality(SecurityIdentifier,SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.op_Inequality(SecurityIdentifier,SecurityIdentifier)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Compara dois <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> objetos para determinar se estes não são iguais. Que são consideradas não igual se tiverem representações nome canónico diferente daquela devolvido pelo <xref:System.Security.Principal.SecurityIdentifier.Value*>propriedade ou se é um dos objetos <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> e outros não.</xref:System.Security.Principal.SecurityIdentifier.Value*>"
  syntax:
    content: public static bool op_Inequality (System.Security.Principal.SecurityIdentifier left, System.Security.Principal.SecurityIdentifier right);
    parameters:
    - id: left
      type: System.Security.Principal.SecurityIdentifier
      description: "O operando esquerdo a utilizar para a comparação de inequality. Este parâmetro pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: right
      type: System.Security.Principal.SecurityIdentifier
      description: "O operando direito a utilizar para a comparação de inequality. Este parâmetro pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>left</code> and <code>right</code> are not equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Principal.SecurityIdentifier.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.ToString
  id: ToString
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: ToString()
  nameWithType: SecurityIdentifier.ToString()
  fullName: System.Security.Principal.SecurityIdentifier.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Devolve o identificador de segurança (SID), no formato de linguagem de definição de descritor de segurança (SDDL), para a conta representado pelo <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> objeto. Um exemplo do formato SDDL é S-1-5-9."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "O SID, no formato SDDL, para a conta representado pelo <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> objeto."
  overload: System.Security.Principal.SecurityIdentifier.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.Translate(System.Type)
  id: Translate(System.Type)
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: Translate(Type)
  nameWithType: SecurityIdentifier.Translate(Type)
  fullName: System.Security.Principal.SecurityIdentifier.Translate(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Converte o nome da conta representado pelo <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> objeto a outro <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref>-tipo derivado."
  syntax:
    content: public override System.Security.Principal.IdentityReference Translate (Type targetType);
    parameters:
    - id: targetType
      type: System.Type
      description: "O tipo de destino para a conversão de <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>. O tipo de destino tem de ser um tipo que seja considerado válido pelo <xref:System.Security.Principal.SecurityIdentifier.IsValidTargetType*>método.</xref:System.Security.Principal.SecurityIdentifier.IsValidTargetType*>"
    return:
      type: System.Security.Principal.IdentityReference
      description: "A identidade convertida."
  overload: System.Security.Principal.SecurityIdentifier.Translate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetType </code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetType </code>Não é um <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> tipo."
  - type: System.Security.Principal.IdentityNotMappedException
    commentId: T:System.Security.Principal.IdentityNotMappedException
    description: "Não foi possível converter algumas ou todas as referências de identidade."
  - type: System.SystemException
    commentId: T:System.SystemException
    description: "Foi devolvido um código de erro do Win32."
  platform:
  - net462
- uid: System.Security.Principal.SecurityIdentifier.Value
  id: Value
  parent: System.Security.Principal.SecurityIdentifier
  langs:
  - csharp
  name: Value
  nameWithType: SecurityIdentifier.Value
  fullName: System.Security.Principal.SecurityIdentifier.Value
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Devolve uma cadeia de linguagem de definição de descritor de segurança (SDDL) maiúsculas para o identificador de segurança (SID) representado por este <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> objeto."
  syntax:
    content: public override string Value { get; }
    return:
      type: System.String
      description: "Uma cadeia SDDL maiúsculas para o SID representado pelo <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> objeto."
  overload: System.Security.Principal.SecurityIdentifier.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Principal.IdentityReference
  isExternal: false
  name: System.Security.Principal.IdentityReference
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Principal.IdentityNotMappedException
  parent: System.Security.Principal
  isExternal: false
  name: IdentityNotMappedException
  nameWithType: IdentityNotMappedException
  fullName: System.Security.Principal.IdentityNotMappedException
- uid: System.SystemException
  parent: System
  isExternal: false
  name: SystemException
  nameWithType: SystemException
  fullName: System.SystemException
- uid: System.Security.Principal.SecurityIdentifier.#ctor(System.IntPtr)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: SecurityIdentifier(IntPtr)
  nameWithType: SecurityIdentifier.SecurityIdentifier(IntPtr)
  fullName: System.Security.Principal.SecurityIdentifier.SecurityIdentifier(IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Security.Principal.SecurityIdentifier.#ctor(System.String)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: SecurityIdentifier(String)
  nameWithType: SecurityIdentifier.SecurityIdentifier(String)
  fullName: System.Security.Principal.SecurityIdentifier.SecurityIdentifier(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Principal.SecurityIdentifier.#ctor(System.Byte[],System.Int32)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: SecurityIdentifier(Byte[],Int32)
  nameWithType: SecurityIdentifier.SecurityIdentifier(Byte[],Int32)
  fullName: System.Security.Principal.SecurityIdentifier.SecurityIdentifier(Byte[],Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Principal.SecurityIdentifier.#ctor(System.Security.Principal.WellKnownSidType,System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: SecurityIdentifier(WellKnownSidType,SecurityIdentifier)
  nameWithType: SecurityIdentifier.SecurityIdentifier(WellKnownSidType,SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.SecurityIdentifier(WellKnownSidType,SecurityIdentifier)
- uid: System.Security.Principal.WellKnownSidType
  parent: System.Security.Principal
  isExternal: false
  name: WellKnownSidType
  nameWithType: WellKnownSidType
  fullName: System.Security.Principal.WellKnownSidType
- uid: System.Security.Principal.SecurityIdentifier
  parent: System.Security.Principal
  isExternal: false
  name: SecurityIdentifier
  nameWithType: SecurityIdentifier
  fullName: System.Security.Principal.SecurityIdentifier
- uid: System.Security.Principal.SecurityIdentifier.AccountDomainSid
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: AccountDomainSid
  nameWithType: SecurityIdentifier.AccountDomainSid
  fullName: System.Security.Principal.SecurityIdentifier.AccountDomainSid
- uid: System.Security.Principal.SecurityIdentifier.BinaryLength
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: BinaryLength
  nameWithType: SecurityIdentifier.BinaryLength
  fullName: System.Security.Principal.SecurityIdentifier.BinaryLength
- uid: System.Security.Principal.SecurityIdentifier.CompareTo(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: CompareTo(SecurityIdentifier)
  nameWithType: SecurityIdentifier.CompareTo(SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.CompareTo(SecurityIdentifier)
- uid: System.Security.Principal.SecurityIdentifier.Equals(System.Object)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: Equals(Object)
  nameWithType: SecurityIdentifier.Equals(Object)
  fullName: System.Security.Principal.SecurityIdentifier.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Principal.SecurityIdentifier.Equals(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: Equals(SecurityIdentifier)
  nameWithType: SecurityIdentifier.Equals(SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.Equals(SecurityIdentifier)
- uid: System.Security.Principal.SecurityIdentifier.GetBinaryForm(System.Byte[],System.Int32)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: GetBinaryForm(Byte[],Int32)
  nameWithType: SecurityIdentifier.GetBinaryForm(Byte[],Int32)
  fullName: System.Security.Principal.SecurityIdentifier.GetBinaryForm(Byte[],Int32)
- uid: System.Security.Principal.SecurityIdentifier.GetHashCode
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: GetHashCode()
  nameWithType: SecurityIdentifier.GetHashCode()
  fullName: System.Security.Principal.SecurityIdentifier.GetHashCode()
- uid: System.Security.Principal.SecurityIdentifier.IsAccountSid
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: IsAccountSid()
  nameWithType: SecurityIdentifier.IsAccountSid()
  fullName: System.Security.Principal.SecurityIdentifier.IsAccountSid()
- uid: System.Security.Principal.SecurityIdentifier.IsEqualDomainSid(System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: IsEqualDomainSid(SecurityIdentifier)
  nameWithType: SecurityIdentifier.IsEqualDomainSid(SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.IsEqualDomainSid(SecurityIdentifier)
- uid: System.Security.Principal.SecurityIdentifier.IsValidTargetType(System.Type)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: IsValidTargetType(Type)
  nameWithType: SecurityIdentifier.IsValidTargetType(Type)
  fullName: System.Security.Principal.SecurityIdentifier.IsValidTargetType(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.Principal.SecurityIdentifier.IsWellKnown(System.Security.Principal.WellKnownSidType)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: IsWellKnown(WellKnownSidType)
  nameWithType: SecurityIdentifier.IsWellKnown(WellKnownSidType)
  fullName: System.Security.Principal.SecurityIdentifier.IsWellKnown(WellKnownSidType)
- uid: System.Security.Principal.SecurityIdentifier.MaxBinaryLength
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: MaxBinaryLength
  nameWithType: SecurityIdentifier.MaxBinaryLength
  fullName: System.Security.Principal.SecurityIdentifier.MaxBinaryLength
- uid: System.Security.Principal.SecurityIdentifier.MinBinaryLength
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: MinBinaryLength
  nameWithType: SecurityIdentifier.MinBinaryLength
  fullName: System.Security.Principal.SecurityIdentifier.MinBinaryLength
- uid: System.Security.Principal.SecurityIdentifier.op_Equality(System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: op_Equality(SecurityIdentifier,SecurityIdentifier)
  nameWithType: SecurityIdentifier.op_Equality(SecurityIdentifier,SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.op_Equality(SecurityIdentifier,SecurityIdentifier)
- uid: System.Security.Principal.SecurityIdentifier.op_Inequality(System.Security.Principal.SecurityIdentifier,System.Security.Principal.SecurityIdentifier)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: op_Inequality(SecurityIdentifier,SecurityIdentifier)
  nameWithType: SecurityIdentifier.op_Inequality(SecurityIdentifier,SecurityIdentifier)
  fullName: System.Security.Principal.SecurityIdentifier.op_Inequality(SecurityIdentifier,SecurityIdentifier)
- uid: System.Security.Principal.SecurityIdentifier.ToString
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: ToString()
  nameWithType: SecurityIdentifier.ToString()
  fullName: System.Security.Principal.SecurityIdentifier.ToString()
- uid: System.Security.Principal.SecurityIdentifier.Translate(System.Type)
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: Translate(Type)
  nameWithType: SecurityIdentifier.Translate(Type)
  fullName: System.Security.Principal.SecurityIdentifier.Translate(Type)
- uid: System.Security.Principal.SecurityIdentifier.Value
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: Value
  nameWithType: SecurityIdentifier.Value
  fullName: System.Security.Principal.SecurityIdentifier.Value
- uid: System.Security.Principal.SecurityIdentifier.#ctor*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: SecurityIdentifier
  nameWithType: SecurityIdentifier.SecurityIdentifier
- uid: System.Security.Principal.SecurityIdentifier.AccountDomainSid*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: AccountDomainSid
  nameWithType: SecurityIdentifier.AccountDomainSid
- uid: System.Security.Principal.SecurityIdentifier.BinaryLength*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: BinaryLength
  nameWithType: SecurityIdentifier.BinaryLength
- uid: System.Security.Principal.SecurityIdentifier.CompareTo*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: CompareTo
  nameWithType: SecurityIdentifier.CompareTo
- uid: System.Security.Principal.SecurityIdentifier.Equals*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: Equals
  nameWithType: SecurityIdentifier.Equals
- uid: System.Security.Principal.SecurityIdentifier.GetBinaryForm*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: GetBinaryForm
  nameWithType: SecurityIdentifier.GetBinaryForm
- uid: System.Security.Principal.SecurityIdentifier.GetHashCode*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: GetHashCode
  nameWithType: SecurityIdentifier.GetHashCode
- uid: System.Security.Principal.SecurityIdentifier.IsAccountSid*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: IsAccountSid
  nameWithType: SecurityIdentifier.IsAccountSid
- uid: System.Security.Principal.SecurityIdentifier.IsEqualDomainSid*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: IsEqualDomainSid
  nameWithType: SecurityIdentifier.IsEqualDomainSid
- uid: System.Security.Principal.SecurityIdentifier.IsValidTargetType*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: IsValidTargetType
  nameWithType: SecurityIdentifier.IsValidTargetType
- uid: System.Security.Principal.SecurityIdentifier.IsWellKnown*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: IsWellKnown
  nameWithType: SecurityIdentifier.IsWellKnown
- uid: System.Security.Principal.SecurityIdentifier.op_Equality*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: op_Equality
  nameWithType: SecurityIdentifier.op_Equality
- uid: System.Security.Principal.SecurityIdentifier.op_Inequality*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: op_Inequality
  nameWithType: SecurityIdentifier.op_Inequality
- uid: System.Security.Principal.SecurityIdentifier.ToString*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: ToString
  nameWithType: SecurityIdentifier.ToString
- uid: System.Security.Principal.SecurityIdentifier.Translate*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: Translate
  nameWithType: SecurityIdentifier.Translate
- uid: System.Security.Principal.SecurityIdentifier.Value*
  parent: System.Security.Principal.SecurityIdentifier
  isExternal: false
  name: Value
  nameWithType: SecurityIdentifier.Value
