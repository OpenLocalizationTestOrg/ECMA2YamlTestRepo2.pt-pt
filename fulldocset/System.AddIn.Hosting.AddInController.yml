### YamlMime:ManagedReference
items:
- uid: System.AddIn.Hosting.AddInController
  id: AddInController
  children:
  - System.AddIn.Hosting.AddInController.AddInEnvironment
  - System.AddIn.Hosting.AddInController.AppDomain
  - System.AddIn.Hosting.AddInController.GetAddInController(System.Object)
  - System.AddIn.Hosting.AddInController.Shutdown
  - System.AddIn.Hosting.AddInController.Token
  langs:
  - csharp
  name: AddInController
  nameWithType: AddInController
  fullName: System.AddIn.Hosting.AddInController
  type: Class
  summary: "Fornece acesso a um suplemento para uma variedade de tarefas."
  remarks: "Utilizar esta classe para realizar as seguintes tarefas:-Utilize a <xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A>propriedade de modo a obter um <xref:System.AddIn.Hosting.AddInEnvironment>objeto para um suplemento</xref:System.AddIn.Hosting.AddInEnvironment> </xref:System.AddIn.Hosting.AddInController.AddInEnvironment%2A> Em seguida, utilize esse objeto ativar outros suplementos no mesmo domínio de aplicação e o processo que o suplemento original.      -Utilize a <xref:System.AddIn.Hosting.AddInController.AppDomain%2A>propriedade de modo a obter um <xref:System.AppDomain>objeto para um suplemento</xref:System.AppDomain> </xref:System.AddIn.Hosting.AddInController.AppDomain%2A> Em seguida, utilize esse objeto ativar outros suplementos no mesmo domínio de aplicação, como o suplemento original. Tenha em atenção que devido a limitações no sistema de interação remota processos cruzados, este cenário não funcionarão com suplementos são ativados num processo separado.      -Utilize a <xref:System.AddIn.Hosting.AddInController.Token%2A>propriedade de modo a obter um <xref:System.AddIn.Hosting.AddInToken>objeto que representa um suplemento</xref:System.AddIn.Hosting.AddInToken> </xref:System.AddIn.Hosting.AddInController.Token%2A>      -Encerrar um suplemento com a <xref:System.AddIn.Hosting.AddInController.Shutdown%2A>método.</xref:System.AddIn.Hosting.AddInController.Shutdown%2A>       Para obter o controlador para um suplemento, chame o <xref:System.AddIn.Hosting.AddInController.GetAddInController%2A>método e uma instância do add-in como o parâmetro de passagem.</xref:System.AddIn.Hosting.AddInController.GetAddInController%2A>"
  example:
  - "The following example activates an add-in within the same environment as a previously activated add-in by using an AddInController object.  \n  \n [!code-vb[AddInP3Host#8](~/add/codesnippet/visualbasic/addinp3hostvb/p3host.vb#8)]\n [!code-cs[AddInP3Host#8](~/add/codesnippet/csharp/addinP3Host/P3Host.cs#8)]"
  syntax:
    content: public sealed class AddInController
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInController.AddInEnvironment
  id: AddInEnvironment
  parent: System.AddIn.Hosting.AddInController
  langs:
  - csharp
  name: AddInEnvironment
  nameWithType: AddInController.AddInEnvironment
  fullName: System.AddIn.Hosting.AddInController.AddInEnvironment
  type: Property
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "Obtém um <xref href=&quot;System.AddIn.Hosting.AddInEnvironment&quot;> </xref> objeto."
  remarks: "Utilize esta propriedade para obter o <xref:System.AddIn.Hosting.AddInEnvironment>objeto para um suplemento</xref:System.AddIn.Hosting.AddInEnvironment> Em seguida, utilize esse objeto ativar outros suplementos no mesmo domínio de aplicação e o processo que o suplemento original."
  example:
  - "The following example activates a second add-in within the same environment as the first add-in.  \n  \n [!code-vb[AddInP3Host#8](~/add/codesnippet/visualbasic/addinp3hostvb/p3host.vb#8)]\n [!code-cs[AddInP3Host#8](~/add/codesnippet/csharp/addinP3Host/P3Host.cs#8)]"
  syntax:
    content: public System.AddIn.Hosting.AddInEnvironment AddInEnvironment { get; }
    return:
      type: System.AddIn.Hosting.AddInEnvironment
      description: "Um objeto que pode ser utilizado para ativar outros suplementos no mesmo ambiente, como o suplemento original."
  overload: System.AddIn.Hosting.AddInController.AddInEnvironment*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInController.AppDomain
  id: AppDomain
  parent: System.AddIn.Hosting.AddInController
  langs:
  - csharp
  name: AppDomain
  nameWithType: AddInController.AppDomain
  fullName: System.AddIn.Hosting.AddInController.AppDomain
  type: Property
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "Obtém o domínio de aplicação que contém um suplemento."
  remarks: "Utilize esta propriedade para obter um suplemento <xref:System.AppDomain>objeto e ativar outros suplementos no mesmo domínio de aplicação.</xref:System.AppDomain>"
  example:
  - "The following example activates a second add-in in the same application domain as the first add-in.  \n  \n [!code-vb[AddInP3Host#9](~/add/codesnippet/visualbasic/addinp3hostvb/p3host.vb#9)]\n [!code-cs[AddInP3Host#9](~/add/codesnippet/csharp/addinP3Host/P3Host.cs#9)]"
  syntax:
    content: public AppDomain AppDomain { get; }
    return:
      type: System.AppDomain
      description: "O domínio de aplicações do suplemento."
  overload: System.AddIn.Hosting.AddInController.AppDomain*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInController.GetAddInController(System.Object)
  id: GetAddInController(System.Object)
  parent: System.AddIn.Hosting.AddInController
  langs:
  - csharp
  name: GetAddInController(Object)
  nameWithType: AddInController.GetAddInController(Object)
  fullName: System.AddIn.Hosting.AddInController.GetAddInController(Object)
  type: Method
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "Obtém o controlador para um suplemento."
  remarks: "Os <xref:System.AddIn.Hosting.AddInToken.Activate%2A>métodos de devolvem um objeto que representa a vista do anfitrião do suplemento</xref:System.AddIn.Hosting.AddInToken.Activate%2A>"
  syntax:
    content: public static System.AddIn.Hosting.AddInController GetAddInController (object addIn);
    parameters:
    - id: addIn
      type: System.Object
      description: "A vista de anfitrião do suplemento."
    return:
      type: System.AddIn.Hosting.AddInController
      description: "O controlador para o suplemento."
  overload: System.AddIn.Hosting.AddInController.GetAddInController*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInController.Shutdown
  id: Shutdown
  parent: System.AddIn.Hosting.AddInController
  langs:
  - csharp
  name: Shutdown()
  nameWithType: AddInController.Shutdown()
  fullName: System.AddIn.Hosting.AddInController.Shutdown()
  type: Method
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "Desativa um suplemento."
  remarks: "Este método interrompe o pipeline de comunicação entre um suplemento e o respetivo anfitrião. Se o suplemento foi ativado num domínio de aplicação gerados automaticamente utilizando o <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29>ou <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.Security.PermissionSet%29>métodos, o método de encerramento efetua a descarga também o domínio de aplicação.</xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.Security.PermissionSet%29> </xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29>       Se o suplemento foi carregado no seu próprio domínio de aplicação, o método de encerramento também efetua a descarga de domínio de aplicação.       Se o suplemento foi carregado para um domínio de aplicação existente, os segmentos de pipeline e o anfitrião já não terá quaisquer referências a esse suplemento. Neste caso, o suplemento será elegível para ser reclamada a recolha de lixo.       Também pode utilizar esta classe para encerrar um suplemento que está ativado num processo externo."
  example:
  - "The following example obtains the <xref:System.AddIn.Hosting.AddInController> object for a host view named `manager` and then shuts down the add-in.  \n  \n [!code-vb[AddInCollectionPipelineHost#6](~/add/codesnippet/visualbasic/ListAdaptersHost/Program.vb#6)]\n [!code-cs[AddInCollectionPipelineHost#6](~/add/codesnippet/csharp/ListAdaptersHost/Program.cs#6)]"
  syntax:
    content: public void Shutdown ();
    parameters: []
  overload: System.AddIn.Hosting.AddInController.Shutdown*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInController.Token
  id: Token
  parent: System.AddIn.Hosting.AddInController
  langs:
  - csharp
  name: Token
  nameWithType: AddInController.Token
  fullName: System.AddIn.Hosting.AddInController.Token
  type: Property
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "Obtém o token que representa o suplemento."
  remarks: "Normalmente, utilize esta propriedade para obter um token para ativar um suplemento numa altura posterior."
  syntax:
    content: public System.AddIn.Hosting.AddInToken Token { get; }
    return:
      type: System.AddIn.Hosting.AddInToken
      description: "Um objecto que representa o suplemento."
  overload: System.AddIn.Hosting.AddInController.Token*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.AddIn.Hosting.AddInController.AddInEnvironment
  parent: System.AddIn.Hosting.AddInController
  isExternal: false
  name: AddInEnvironment
  nameWithType: AddInController.AddInEnvironment
  fullName: System.AddIn.Hosting.AddInController.AddInEnvironment
- uid: System.AddIn.Hosting.AddInEnvironment
  parent: System.AddIn.Hosting
  isExternal: false
  name: AddInEnvironment
  nameWithType: AddInEnvironment
  fullName: System.AddIn.Hosting.AddInEnvironment
- uid: System.AddIn.Hosting.AddInController.AppDomain
  parent: System.AddIn.Hosting.AddInController
  isExternal: false
  name: AppDomain
  nameWithType: AddInController.AppDomain
  fullName: System.AddIn.Hosting.AddInController.AppDomain
- uid: System.AppDomain
  parent: System
  isExternal: false
  name: AppDomain
  nameWithType: AppDomain
  fullName: System.AppDomain
- uid: System.AddIn.Hosting.AddInController.GetAddInController(System.Object)
  parent: System.AddIn.Hosting.AddInController
  isExternal: false
  name: GetAddInController(Object)
  nameWithType: AddInController.GetAddInController(Object)
  fullName: System.AddIn.Hosting.AddInController.GetAddInController(Object)
- uid: System.AddIn.Hosting.AddInController
  parent: System.AddIn.Hosting
  isExternal: false
  name: AddInController
  nameWithType: AddInController
  fullName: System.AddIn.Hosting.AddInController
- uid: System.AddIn.Hosting.AddInController.Shutdown
  parent: System.AddIn.Hosting.AddInController
  isExternal: false
  name: Shutdown()
  nameWithType: AddInController.Shutdown()
  fullName: System.AddIn.Hosting.AddInController.Shutdown()
- uid: System.AddIn.Hosting.AddInController.Token
  parent: System.AddIn.Hosting.AddInController
  isExternal: false
  name: Token
  nameWithType: AddInController.Token
  fullName: System.AddIn.Hosting.AddInController.Token
- uid: System.AddIn.Hosting.AddInToken
  parent: System.AddIn.Hosting
  isExternal: false
  name: AddInToken
  nameWithType: AddInToken
  fullName: System.AddIn.Hosting.AddInToken
- uid: System.AddIn.Hosting.AddInController.AddInEnvironment*
  parent: System.AddIn.Hosting.AddInController
  isExternal: false
  name: AddInEnvironment
  nameWithType: AddInController.AddInEnvironment
- uid: System.AddIn.Hosting.AddInController.AppDomain*
  parent: System.AddIn.Hosting.AddInController
  isExternal: false
  name: AppDomain
  nameWithType: AddInController.AppDomain
- uid: System.AddIn.Hosting.AddInController.GetAddInController*
  parent: System.AddIn.Hosting.AddInController
  isExternal: false
  name: GetAddInController
  nameWithType: AddInController.GetAddInController
- uid: System.AddIn.Hosting.AddInController.Shutdown*
  parent: System.AddIn.Hosting.AddInController
  isExternal: false
  name: Shutdown
  nameWithType: AddInController.Shutdown
- uid: System.AddIn.Hosting.AddInController.Token*
  parent: System.AddIn.Hosting.AddInController
  isExternal: false
  name: Token
  nameWithType: AddInController.Token
