### YamlMime:ManagedReference
items:
- uid: System.AddIn.Hosting.AddInToken
  id: AddInToken
  children:
  - System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInEnvironment)
  - System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInSecurityLevel)
  - System.AddIn.Hosting.AddInToken.Activate``1(System.AppDomain)
  - System.AddIn.Hosting.AddInToken.Activate``1(System.Security.PermissionSet)
  - System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInProcess,System.AddIn.Hosting.AddInSecurityLevel)
  - System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInProcess,System.Security.PermissionSet)
  - System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInSecurityLevel,System.String)
  - System.AddIn.Hosting.AddInToken.AddInFullName
  - System.AddIn.Hosting.AddInToken.AssemblyName
  - System.AddIn.Hosting.AddInToken.Description
  - System.AddIn.Hosting.AddInToken.EnableDirectConnect
  - System.AddIn.Hosting.AddInToken.Equals(System.Object)
  - System.AddIn.Hosting.AddInToken.GetEnumerator
  - System.AddIn.Hosting.AddInToken.GetHashCode
  - System.AddIn.Hosting.AddInToken.Name
  - System.AddIn.Hosting.AddInToken.Publisher
  - System.AddIn.Hosting.AddInToken.QualificationData
  - System.AddIn.Hosting.AddInToken.System#Collections#IEnumerable#GetEnumerator
  - System.AddIn.Hosting.AddInToken.ToString
  - System.AddIn.Hosting.AddInToken.Version
  langs:
  - csharp
  name: AddInToken
  nameWithType: AddInToken
  fullName: System.AddIn.Hosting.AddInToken
  type: Class
  summary: "Represents an add-in that can be activated."
  remarks: "An AddInToken object represents an add-in, and its associated pipeline segments, that can be activated. The token contains the name, assembly name, description, publisher, and version of the add-in that it represents.       Use the <xref:System.AddIn.Hosting.AddInStore.FindAddIns%2A?displayProperty=fullName> method to get a collection of tokens that represent add-ins whose pipelines match a specified host view. Use the <xref:System.AddIn.Hosting.AddInStore.FindAddIn%2A?displayProperty=fullName> method to get a collection of tokens that represent all the pipelines for a specified add-in that match a specified host view.       To activate an add-in, pass the token that represents the desired add-in to the <xref:System.AddIn.Hosting.AddInToken.Activate%2A> method. This method returns an instance of the type that represents the host view of the add-in.       The <xref:System.AddIn.Hosting.AddInToken.Activate%2A> method has several overloads. When you use an overload that does not require the name of an application domain as one of its parameters, a new application domain for the add-in is automatically created.       You can use Language-Integrated Query (LINQ) extension methods to perform queries on an AddInToken, treating the token as a collection of <xref:System.AddIn.Hosting.QualificationDataItem> structures."
  example:
  - "This section contains two examples. The first example activates an add-in that has been selected by using the `ChooseAddIn` method, and the second example shows the `ChooseAddIn` method.  \n  \n **Example 1**  \n  \n The following example shows how to activate an add-in with a token.  \n  \n [!code-vb[AddInP3Host#5](~/add/codesnippet/visualbasic/addinp3hostvb/p3host.vb#5)]\n [!code-cs[AddInP3Host#5](~/add/codesnippet/csharp/addinP3Host/P3Host.cs#5)]  \n  \n **Example 2**  \n  \n The following example shows the custom `ChooseAddIn` method, which enumerates an AddInToken collection. The user selects a token from this collection to activate the corresponding add-in.  \n  \n [!code-vb[AddInP3Host#13](~/add/codesnippet/visualbasic/addinp3hostvb/p3host.vb#13)]\n [!code-cs[AddInP3Host#13](~/add/codesnippet/csharp/addinP3Host/P3Host.cs#13)]"
  syntax:
    content: 'public sealed class AddInToken : System.Collections.Generic.IEnumerable<System.AddIn.Hosting.QualificationDataItem>'
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable<System.AddIn.Hosting.QualificationDataItem>
  inheritedMembers: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInEnvironment)
  id: Activate``1(System.AddIn.Hosting.AddInEnvironment)
  parent: System.AddIn.Hosting.AddInToken
  langs:
  - csharp
  name: Activate(AddInEnvironment)
  nameWithType: AddInToken.Activate(AddInEnvironment)
  fullName: System.AddIn.Hosting.AddInToken.Activate(AddInEnvironment)
  type: Method
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  syntax:
    content: public T Activate<T> (System.AddIn.Hosting.AddInEnvironment environment);
    parameters:
    - id: environment
      type: System.AddIn.Hosting.AddInEnvironment
      description: "To be added."
    return:
      type: T
      description: "To be added."
  overload: System.AddIn.Hosting.AddInToken.Activate<T>*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInSecurityLevel)
  id: Activate``1(System.AddIn.Hosting.AddInSecurityLevel)
  parent: System.AddIn.Hosting.AddInToken
  langs:
  - csharp
  name: Activate(AddInSecurityLevel)
  nameWithType: AddInToken.Activate(AddInSecurityLevel)
  fullName: System.AddIn.Hosting.AddInToken.Activate(AddInSecurityLevel)
  type: Method
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  syntax:
    content: public T Activate<T> (System.AddIn.Hosting.AddInSecurityLevel trustLevel);
    parameters:
    - id: trustLevel
      type: System.AddIn.Hosting.AddInSecurityLevel
      description: "To be added."
    return:
      type: T
      description: "To be added."
  overload: System.AddIn.Hosting.AddInToken.Activate<T>*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInToken.Activate``1(System.AppDomain)
  id: Activate``1(System.AppDomain)
  parent: System.AddIn.Hosting.AddInToken
  langs:
  - csharp
  name: Activate(AppDomain)
  nameWithType: AddInToken.Activate(AppDomain)
  fullName: System.AddIn.Hosting.AddInToken.Activate(AppDomain)
  type: Method
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  syntax:
    content: public T Activate<T> (AppDomain target);
    parameters:
    - id: target
      type: System.AppDomain
      description: "To be added."
    return:
      type: T
      description: "To be added."
  overload: System.AddIn.Hosting.AddInToken.Activate<T>*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInToken.Activate``1(System.Security.PermissionSet)
  id: Activate``1(System.Security.PermissionSet)
  parent: System.AddIn.Hosting.AddInToken
  langs:
  - csharp
  name: Activate(PermissionSet)
  nameWithType: AddInToken.Activate(PermissionSet)
  fullName: System.AddIn.Hosting.AddInToken.Activate(PermissionSet)
  type: Method
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  syntax:
    content: public T Activate<T> (System.Security.PermissionSet permissions);
    parameters:
    - id: permissions
      type: System.Security.PermissionSet
      description: "To be added."
    return:
      type: T
      description: "To be added."
  overload: System.AddIn.Hosting.AddInToken.Activate<T>*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInProcess,System.AddIn.Hosting.AddInSecurityLevel)
  id: Activate``1(System.AddIn.Hosting.AddInProcess,System.AddIn.Hosting.AddInSecurityLevel)
  parent: System.AddIn.Hosting.AddInToken
  langs:
  - csharp
  name: Activate(AddInProcess,AddInSecurityLevel)
  nameWithType: AddInToken.Activate(AddInProcess,AddInSecurityLevel)
  fullName: System.AddIn.Hosting.AddInToken.Activate(AddInProcess,AddInSecurityLevel)
  type: Method
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  syntax:
    content: public T Activate<T> (System.AddIn.Hosting.AddInProcess process, System.AddIn.Hosting.AddInSecurityLevel level);
    parameters:
    - id: process
      type: System.AddIn.Hosting.AddInProcess
      description: "To be added."
    - id: level
      type: System.AddIn.Hosting.AddInSecurityLevel
      description: "To be added."
    return:
      type: T
      description: "To be added."
  overload: System.AddIn.Hosting.AddInToken.Activate<T>*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInProcess,System.Security.PermissionSet)
  id: Activate``1(System.AddIn.Hosting.AddInProcess,System.Security.PermissionSet)
  parent: System.AddIn.Hosting.AddInToken
  langs:
  - csharp
  name: Activate(AddInProcess,PermissionSet)
  nameWithType: AddInToken.Activate(AddInProcess,PermissionSet)
  fullName: System.AddIn.Hosting.AddInToken.Activate(AddInProcess,PermissionSet)
  type: Method
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  syntax:
    content: public T Activate<T> (System.AddIn.Hosting.AddInProcess process, System.Security.PermissionSet permissionSet);
    parameters:
    - id: process
      type: System.AddIn.Hosting.AddInProcess
      description: "To be added."
    - id: permissionSet
      type: System.Security.PermissionSet
      description: "To be added."
    return:
      type: T
      description: "To be added."
  overload: System.AddIn.Hosting.AddInToken.Activate<T>*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInSecurityLevel,System.String)
  id: Activate``1(System.AddIn.Hosting.AddInSecurityLevel,System.String)
  parent: System.AddIn.Hosting.AddInToken
  langs:
  - csharp
  name: Activate(AddInSecurityLevel,String)
  nameWithType: AddInToken.Activate(AddInSecurityLevel,String)
  fullName: System.AddIn.Hosting.AddInToken.Activate(AddInSecurityLevel,String)
  type: Method
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  syntax:
    content: public T Activate<T> (System.AddIn.Hosting.AddInSecurityLevel trustLevel, string appDomainName);
    parameters:
    - id: trustLevel
      type: System.AddIn.Hosting.AddInSecurityLevel
      description: "To be added."
    - id: appDomainName
      type: System.String
      description: "To be added."
    return:
      type: T
      description: "To be added."
  overload: System.AddIn.Hosting.AddInToken.Activate<T>*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInToken.AddInFullName
  id: AddInFullName
  parent: System.AddIn.Hosting.AddInToken
  langs:
  - csharp
  name: AddInFullName
  nameWithType: AddInToken.AddInFullName
  fullName: System.AddIn.Hosting.AddInToken.AddInFullName
  type: Property
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "Gets the namespace and type of the add-in."
  remarks: "This property obtains the full name of the add-in as it would be returned by the <xref:System.Type.FullName%2A?displayProperty=fullName> property. This value is always available on an instance of an <xref:System.AddIn.Hosting.AddInToken> object."
  example:
  - "The following example displays the value of the <xref:System.AddIn.Hosting.AddInToken.Name%2A>, AddInFullName, <xref:System.AddIn.Hosting.AddInToken.Description%2A>, <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>, <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>, and <xref:System.AddIn.Hosting.AddInToken.Version%2A> properties to the console. This code example is part of a larger example provided for the <xref:System.AddIn.Hosting.AddInToken>class.  \n  \n [!code-vb[AddInP3Host#7](~/add/codesnippet/visualbasic/addinp3hostvb/p3host.vb#7)]\n [!code-cs[AddInP3Host#7](~/add/codesnippet/csharp/addinP3Host/P3Host.cs#7)]"
  syntax:
    content: public string AddInFullName { get; }
    return:
      type: System.String
      description: "The type of the add-in, fully qualified by its namespace."
  overload: System.AddIn.Hosting.AddInToken.AddInFullName*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInToken.AssemblyName
  id: AssemblyName
  parent: System.AddIn.Hosting.AddInToken
  langs:
  - csharp
  name: AssemblyName
  nameWithType: AddInToken.AssemblyName
  fullName: System.AddIn.Hosting.AddInToken.AssemblyName
  type: Property
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "Gets the name of the assembly that contains the add-in."
  remarks: "This property obtains the display name of the assembly that contains the add-in, as it would be returned by the <xref:System.Reflection.Assembly.FullName%2A?displayProperty=fullName> property. This value is always available on an instance of an <xref:System.AddIn.Hosting.AddInToken> object."
  example:
  - "The following example displays the value of the <xref:System.AddIn.Hosting.AddInToken.Name%2A>, <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>, <xref:System.AddIn.Hosting.AddInToken.Description%2A>, AssemblyName, <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>, and <xref:System.AddIn.Hosting.AddInToken.Version%2A> properties to the console. This code example is part of a larger example provided for the <xref:System.AddIn.Hosting.AddInToken> class.  \n  \n [!code-vb[AddInP3Host#7](~/add/codesnippet/visualbasic/addinp3hostvb/p3host.vb#7)]\n [!code-cs[AddInP3Host#7](~/add/codesnippet/csharp/addinP3Host/P3Host.cs#7)]"
  syntax:
    content: public System.Reflection.AssemblyName AssemblyName { get; }
    return:
      type: System.Reflection.AssemblyName
      description: "The name of the assembly."
  overload: System.AddIn.Hosting.AddInToken.AssemblyName*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInToken.Description
  id: Description
  parent: System.AddIn.Hosting.AddInToken
  langs:
  - csharp
  name: Description
  nameWithType: AddInToken.Description
  fullName: System.AddIn.Hosting.AddInToken.Description
  type: Property
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "Gets the description of the add-in."
  remarks: "This property obtains the description of the add-in as specified in the <xref:System.AddIn.AddInAttribute> attribute."
  example:
  - "The following example displays the value of the <xref:System.AddIn.Hosting.AddInToken.Name%2A>, <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>, Description, <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>, <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>, and <xref:System.AddIn.Hosting.AddInToken.Version%2A> properties to the console. This code example is part of a larger example provided for the <xref:System.AddIn.Hosting.AddInToken> class.  \n  \n [!code-vb[AddInP3Host#7](~/add/codesnippet/visualbasic/addinp3hostvb/p3host.vb#7)]\n [!code-cs[AddInP3Host#7](~/add/codesnippet/csharp/addinP3Host/P3Host.cs#7)]"
  syntax:
    content: public string Description { get; }
    return:
      type: System.String
      description: "A description of the add-in, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the description is not specified in the <xref href=&quot;System.AddIn.AddInAttribute&quot;></xref> attribute."
  overload: System.AddIn.Hosting.AddInToken.Description*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInToken.EnableDirectConnect
  id: EnableDirectConnect
  parent: System.AddIn.Hosting.AddInToken
  langs:
  - csharp
  name: EnableDirectConnect
  nameWithType: AddInToken.EnableDirectConnect
  fullName: System.AddIn.Hosting.AddInToken.EnableDirectConnect
  type: Property
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "Gets and sets a value that indicates whether add-ins should be directly connected to their hosts when conditions permit."
  remarks: "The following conditions must exist for the direct connection to occur:      -   This property must be set to `true`.      -   The add-in must be in the same application domain as the host.      -   The add-in view and the host view of the add-in must be the same type.      -   All the segments of the pipeline must be available.       When a direct connection is established, the add-in-side adapter and the host-side adapter are not instantiated."
  syntax:
    content: public static bool EnableDirectConnect { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the add-in should be directly connected to the host; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.AddIn.Hosting.AddInToken.EnableDirectConnect*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInToken.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.AddIn.Hosting.AddInToken
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: AddInToken.Equals(Object)
  fullName: System.AddIn.Hosting.AddInToken.Equals(Object)
  type: Method
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "Determines whether a specified object is equal to the current instance."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "The object to compare with the current instance."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the specified object and the current instance are equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.AddIn.Hosting.AddInToken.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInToken.GetEnumerator
  id: GetEnumerator
  parent: System.AddIn.Hosting.AddInToken
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: AddInToken.GetEnumerator()
  fullName: System.AddIn.Hosting.AddInToken.GetEnumerator()
  type: Method
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "Returns an enumerator for the qualification data of the pipeline segments that are associated with this token."
  remarks: "Use this method to treat a token as if it were a collection of qualification data items, for example, in a `foreach` statement (`For Each` in Visual Basic, `for each` in Visual C++).       Use the enumerator returned by this method to iterate through the qualification data items of the pipeline segments associated with the current token. Each item of qualification data is a <xref:System.AddIn.Hosting.QualificationDataItem> structure that identifies the pipeline segment and contains a name/value pair from a <xref:System.AddIn.Pipeline.QualificationDataAttribute> attribute applied to that segment.      > [!NOTE] >  The add-in model does not use qualification data that is applied to the host view of the add-in. As a result, when you enumerate qualification data you will not find any items whose <xref:System.AddIn.Hosting.QualificationDataItem.Segment%2A> property is <xref:System.AddIn.Hosting.AddInSegmentType?displayProperty=fullName>.       Alternatively, you can use the <xref:System.AddIn.Hosting.AddInToken.QualificationData%2A> property to get a nested set of dictionaries that contain the qualification data of the pipeline segments."
  example:
  - "The following example lists the qualification data for the pipeline segments associated with each <xref:System.AddIn.Hosting.AddInToken> in a collection of tokens.  \n  \n [!code-vb[AddInP3Host#12](~/add/codesnippet/visualbasic/addinp3hostvb/p3host.vb#12)]\n [!code-cs[AddInP3Host#12](~/add/codesnippet/csharp/addinP3Host/P3Host.cs#12)]"
  syntax:
    content: public System.Collections.Generic.IEnumerator<System.AddIn.Hosting.QualificationDataItem> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.AddIn.Hosting.QualificationDataItem}
      description: "An enumerator that can be used to iterate through the qualification data of the pipeline segments that are associated with the current token."
  overload: System.AddIn.Hosting.AddInToken.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInToken.GetHashCode
  id: GetHashCode
  parent: System.AddIn.Hosting.AddInToken
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: AddInToken.GetHashCode()
  fullName: System.AddIn.Hosting.AddInToken.GetHashCode()
  type: Method
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "Serves as a hash function for a token."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "A hash code for the current token."
  overload: System.AddIn.Hosting.AddInToken.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInToken.Name
  id: Name
  parent: System.AddIn.Hosting.AddInToken
  langs:
  - csharp
  name: Name
  nameWithType: AddInToken.Name
  fullName: System.AddIn.Hosting.AddInToken.Name
  type: Property
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "Gets the name of the add-in."
  remarks: "This property obtains the name of the add-in as specified in the <xref:System.AddIn.AddInAttribute> attribute. This value is always available on an instance of an <xref:System.AddIn.Hosting.AddInToken> object."
  example:
  - "The following example displays the value of the Name, <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>, <xref:System.AddIn.Hosting.AddInToken.Description%2A>, <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>, <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>, and <xref:System.AddIn.Hosting.AddInToken.Version%2A> properties to the console. This code example is part of a larger example provided for the <xref:System.AddIn.Hosting.AddInToken> class.  \n  \n [!code-vb[AddInP3Host#7](~/add/codesnippet/visualbasic/addinp3hostvb/p3host.vb#7)]\n [!code-cs[AddInP3Host#7](~/add/codesnippet/csharp/addinP3Host/P3Host.cs#7)]"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "The name of the add-in."
  overload: System.AddIn.Hosting.AddInToken.Name*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInToken.Publisher
  id: Publisher
  parent: System.AddIn.Hosting.AddInToken
  langs:
  - csharp
  name: Publisher
  nameWithType: AddInToken.Publisher
  fullName: System.AddIn.Hosting.AddInToken.Publisher
  type: Property
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "Gets the publisher of the add-in."
  remarks: "This property obtains the publisher of the add-in as specified in the <xref:System.AddIn.AddInAttribute> attribute."
  example:
  - "The following example displays the value of the <xref:System.AddIn.Hosting.AddInToken.Name%2A>, <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>, <xref:System.AddIn.Hosting.AddInToken.Description%2A>, <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>, Publisher, and <xref:System.AddIn.Hosting.AddInToken.Version%2A> properties to the console. This code example is part of a larger example provided for the <xref:System.AddIn.Hosting.AddInToken> class.  \n  \n [!code-vb[AddInP3Host#7](~/add/codesnippet/visualbasic/addinp3hostvb/p3host.vb#7)]\n [!code-cs[AddInP3Host#7](~/add/codesnippet/csharp/addinP3Host/P3Host.cs#7)]"
  syntax:
    content: public string Publisher { get; }
    return:
      type: System.String
      description: "The publisher of the add-in, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the publisher is not specified in the <xref href=&quot;System.AddIn.AddInAttribute&quot;></xref> attribute."
  overload: System.AddIn.Hosting.AddInToken.Publisher*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInToken.QualificationData
  id: QualificationData
  parent: System.AddIn.Hosting.AddInToken
  langs:
  - csharp
  name: QualificationData
  nameWithType: AddInToken.QualificationData
  fullName: System.AddIn.Hosting.AddInToken.QualificationData
  type: Property
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "Gets a dictionary of data about the segments in the pipeline associated with the current token."
  remarks: "Use this property to obtain data that has been applied to pipeline segments with the <xref:System.AddIn.Pipeline.QualificationDataAttribute> attribute. You can use this data to identify and work with the types that compose your pipelines.       This property returns a dictionary of dictionaries. The top dictionary always has six keys. Each key is an <xref:System.AddIn.Hosting.AddInSegmentType> value for a segment in the pipeline. Each value is a generic <xref:System.Collections.Generic.IDictionary%602>of strings with string keys that contains the segment&quot;s qualification data.       The keys and values of these inner dictionaries are the names and values specified in the <xref:System.AddIn.Pipeline.QualificationDataAttribute> attributes for the segments. If no qualification data has been applied to a segment, its dictionary is empty.      > [!NOTE] >  The add-in model does not use qualification data that is applied to the host view of the add-in. As a result, the dictionary for <xref:System.AddIn.Hosting.AddInSegmentType?displayProperty=fullName> is always empty.       Alternatively, you can obtain qualification data by enumerating an <xref:System.AddIn.Hosting.AddInToken> as if it were a collection of <xref:System.AddIn.Hosting.QualificationDataItem> structures, using a `foreach` statement (`For Each` in Visual Basic, `for each` in Visual C++). See the example provided for the <xref:System.AddIn.Hosting.QualificationDataItem> structure."
  example:
  - "The following example shows how to examine an add-in's qualification data.  \n  \n [!code-vb[AddInP3Host#11](~/add/codesnippet/visualbasic/addinp3hostvb/p3host.vb#11)]\n [!code-cs[AddInP3Host#11](~/add/codesnippet/csharp/addinP3Host/P3Host.cs#11)]"
  syntax:
    content: public System.Collections.Generic.IDictionary<System.AddIn.Hosting.AddInSegmentType,System.Collections.Generic.IDictionary<string,string>> QualificationData { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.AddIn.Hosting.AddInSegmentType,System.Collections.Generic.IDictionary{System.String,System.String}}
      description: "A dictionary whose keys are pipeline segments and whose values are dictionaries of name/value pairs that represent qualification data for each segment."
  overload: System.AddIn.Hosting.AddInToken.QualificationData*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInToken.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.AddIn.Hosting.AddInToken
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: AddInToken.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.AddIn.Hosting.AddInToken.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "Returns an enumerator for the qualification data of the pipeline segments that are associated with this token."
  remarks: "This method allows a token to be treated like a collection of qualification data items, for example in a `foreach` statement (`For Each` in Visual Basic, `for each` in Visual C++).       Use the enumerator returned by this method to iterate through the qualification data items of the pipeline segments associated with the current token. Each item of qualification data is a <xref:System.AddIn.Hosting.QualificationDataItem> structure that identifies the pipeline segment and contains the name/value pair from a <xref:System.AddIn.Pipeline.QualificationDataAttribute> attribute applied to that segment.      > [!NOTE] >  The add-in model does not use qualification data that is applied to the host view of the add-in. As a result, when you enumerate qualification data you will not find any items whose <xref:System.AddIn.Hosting.QualificationDataItem.Segment%2A> property is <xref:System.AddIn.Hosting.AddInSegmentType?displayProperty=fullName>.       Alternatively, you can use the <xref:System.AddIn.Hosting.AddInToken.QualificationData%2A> property to get a nested set of dictionaries containing the qualification data of the pipeline segments."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "An enumerator that can be used to iterate through the qualification data of the pipeline segments that are associated with the current token."
  overload: System.AddIn.Hosting.AddInToken.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInToken.ToString
  id: ToString
  parent: System.AddIn.Hosting.AddInToken
  langs:
  - csharp
  name: ToString()
  nameWithType: AddInToken.ToString()
  fullName: System.AddIn.Hosting.AddInToken.ToString()
  type: Method
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "Returns a string that represents the token."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A string that represents the token."
  overload: System.AddIn.Hosting.AddInToken.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Hosting.AddInToken.Version
  id: Version
  parent: System.AddIn.Hosting.AddInToken
  langs:
  - csharp
  name: Version
  nameWithType: AddInToken.Version
  fullName: System.AddIn.Hosting.AddInToken.Version
  type: Property
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: "Gets the version of the add-in, as specified in the <xref href=&quot;System.AddIn.AddInAttribute&quot;></xref> attribute."
  remarks: "The version number is a free-form string."
  example:
  - "The following example displays the value of the <xref:System.AddIn.Hosting.AddInToken.Name%2A>, <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>, <xref:System.AddIn.Hosting.AddInToken.Description%2A>, <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>, <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>, and Version properties to the console. This code example is part of a larger example provided for the <xref:System.AddIn.Hosting.AddInToken> class.  \n  \n [!code-vb[AddInP3Host#7](~/add/codesnippet/visualbasic/addinp3hostvb/p3host.vb#7)]\n [!code-cs[AddInP3Host#7](~/add/codesnippet/csharp/addinP3Host/P3Host.cs#7)]"
  syntax:
    content: public string Version { get; }
    return:
      type: System.String
      description: "The version of the add-in, or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the version number is not specified in the <xref href=&quot;System.AddIn.AddInAttribute&quot;></xref> attribute."
  overload: System.AddIn.Hosting.AddInToken.Version*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInEnvironment)
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: Activate(AddInEnvironment)
  nameWithType: AddInToken.Activate(AddInEnvironment)
  fullName: System.AddIn.Hosting.AddInToken.Activate(AddInEnvironment)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.AddIn.Hosting.AddInEnvironment
  parent: System.AddIn.Hosting
  isExternal: false
  name: AddInEnvironment
  nameWithType: AddInEnvironment
  fullName: System.AddIn.Hosting.AddInEnvironment
- uid: System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInSecurityLevel)
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: Activate(AddInSecurityLevel)
  nameWithType: AddInToken.Activate(AddInSecurityLevel)
  fullName: System.AddIn.Hosting.AddInToken.Activate(AddInSecurityLevel)
- uid: System.AddIn.Hosting.AddInSecurityLevel
  parent: System.AddIn.Hosting
  isExternal: false
  name: AddInSecurityLevel
  nameWithType: AddInSecurityLevel
  fullName: System.AddIn.Hosting.AddInSecurityLevel
- uid: System.AddIn.Hosting.AddInToken.Activate``1(System.AppDomain)
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: Activate(AppDomain)
  nameWithType: AddInToken.Activate(AppDomain)
  fullName: System.AddIn.Hosting.AddInToken.Activate(AppDomain)
- uid: System.AppDomain
  parent: System
  isExternal: false
  name: AppDomain
  nameWithType: AppDomain
  fullName: System.AppDomain
- uid: System.AddIn.Hosting.AddInToken.Activate``1(System.Security.PermissionSet)
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: Activate(PermissionSet)
  nameWithType: AddInToken.Activate(PermissionSet)
  fullName: System.AddIn.Hosting.AddInToken.Activate(PermissionSet)
- uid: System.Security.PermissionSet
  parent: System.Security
  isExternal: false
  name: PermissionSet
  nameWithType: PermissionSet
  fullName: System.Security.PermissionSet
- uid: System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInProcess,System.AddIn.Hosting.AddInSecurityLevel)
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: Activate(AddInProcess,AddInSecurityLevel)
  nameWithType: AddInToken.Activate(AddInProcess,AddInSecurityLevel)
  fullName: System.AddIn.Hosting.AddInToken.Activate(AddInProcess,AddInSecurityLevel)
- uid: System.AddIn.Hosting.AddInProcess
  parent: System.AddIn.Hosting
  isExternal: false
  name: AddInProcess
  nameWithType: AddInProcess
  fullName: System.AddIn.Hosting.AddInProcess
- uid: System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInProcess,System.Security.PermissionSet)
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: Activate(AddInProcess,PermissionSet)
  nameWithType: AddInToken.Activate(AddInProcess,PermissionSet)
  fullName: System.AddIn.Hosting.AddInToken.Activate(AddInProcess,PermissionSet)
- uid: System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInSecurityLevel,System.String)
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: Activate(AddInSecurityLevel,String)
  nameWithType: AddInToken.Activate(AddInSecurityLevel,String)
  fullName: System.AddIn.Hosting.AddInToken.Activate(AddInSecurityLevel,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.AddIn.Hosting.AddInToken.AddInFullName
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: AddInFullName
  nameWithType: AddInToken.AddInFullName
  fullName: System.AddIn.Hosting.AddInToken.AddInFullName
- uid: System.AddIn.Hosting.AddInToken.AssemblyName
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: AssemblyName
  nameWithType: AddInToken.AssemblyName
  fullName: System.AddIn.Hosting.AddInToken.AssemblyName
- uid: System.Reflection.AssemblyName
  parent: System.Reflection
  isExternal: true
  name: AssemblyName
  nameWithType: AssemblyName
  fullName: System.Reflection.AssemblyName
- uid: System.AddIn.Hosting.AddInToken.Description
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: Description
  nameWithType: AddInToken.Description
  fullName: System.AddIn.Hosting.AddInToken.Description
- uid: System.AddIn.Hosting.AddInToken.EnableDirectConnect
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: EnableDirectConnect
  nameWithType: AddInToken.EnableDirectConnect
  fullName: System.AddIn.Hosting.AddInToken.EnableDirectConnect
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.AddIn.Hosting.AddInToken.Equals(System.Object)
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: Equals(Object)
  nameWithType: AddInToken.Equals(Object)
  fullName: System.AddIn.Hosting.AddInToken.Equals(Object)
- uid: System.AddIn.Hosting.AddInToken.GetEnumerator
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: GetEnumerator()
  nameWithType: AddInToken.GetEnumerator()
  fullName: System.AddIn.Hosting.AddInToken.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.AddIn.Hosting.QualificationDataItem}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<QualificationDataItem>
  nameWithType: IEnumerator<QualificationDataItem>
  fullName: System.Collections.Generic.IEnumerator<System.AddIn.Hosting.QualificationDataItem>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.AddIn.Hosting.QualificationDataItem>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.AddIn.Hosting.QualificationDataItem
    name: QualificationDataItem
    nameWithType: QualificationDataItem
    fullName: QualificationDataItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.AddIn.Hosting.AddInToken.GetHashCode
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: GetHashCode()
  nameWithType: AddInToken.GetHashCode()
  fullName: System.AddIn.Hosting.AddInToken.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.AddIn.Hosting.AddInToken.Name
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: Name
  nameWithType: AddInToken.Name
  fullName: System.AddIn.Hosting.AddInToken.Name
- uid: System.AddIn.Hosting.AddInToken.Publisher
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: Publisher
  nameWithType: AddInToken.Publisher
  fullName: System.AddIn.Hosting.AddInToken.Publisher
- uid: System.AddIn.Hosting.AddInToken.QualificationData
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: QualificationData
  nameWithType: AddInToken.QualificationData
  fullName: System.AddIn.Hosting.AddInToken.QualificationData
- uid: System.Collections.Generic.IDictionary{System.AddIn.Hosting.AddInSegmentType,System.Collections.Generic.IDictionary{System.String,System.String}}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<AddInSegmentType,IDictionary<String,String>>
  nameWithType: IDictionary<AddInSegmentType,IDictionary<String,String>>
  fullName: System.Collections.Generic.IDictionary<System.AddIn.Hosting.AddInSegmentType,System.Collections.Generic.IDictionary<System.String,System.String>>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.AddIn.Hosting.AddInSegmentType,System.Collections.Generic.IDictionary<System.String,System.String>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.AddIn.Hosting.AddInSegmentType
    name: AddInSegmentType
    nameWithType: AddInSegmentType
    fullName: AddInSegmentType
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.AddIn.Hosting.AddInToken.System#Collections#IEnumerable#GetEnumerator
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: AddInToken.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.AddIn.Hosting.AddInToken.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.AddIn.Hosting.AddInToken.ToString
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: ToString()
  nameWithType: AddInToken.ToString()
  fullName: System.AddIn.Hosting.AddInToken.ToString()
- uid: System.AddIn.Hosting.AddInToken.Version
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: Version
  nameWithType: AddInToken.Version
  fullName: System.AddIn.Hosting.AddInToken.Version
- uid: System.AddIn.Hosting.AddInToken.Activate<T>*
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: Activate<T>
  nameWithType: AddInToken.Activate<T>
- uid: System.AddIn.Hosting.AddInToken.AddInFullName*
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: AddInFullName
  nameWithType: AddInToken.AddInFullName
- uid: System.AddIn.Hosting.AddInToken.AssemblyName*
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: AssemblyName
  nameWithType: AddInToken.AssemblyName
- uid: System.AddIn.Hosting.AddInToken.Description*
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: Description
  nameWithType: AddInToken.Description
- uid: System.AddIn.Hosting.AddInToken.EnableDirectConnect*
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: EnableDirectConnect
  nameWithType: AddInToken.EnableDirectConnect
- uid: System.AddIn.Hosting.AddInToken.Equals*
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: Equals
  nameWithType: AddInToken.Equals
- uid: System.AddIn.Hosting.AddInToken.GetEnumerator*
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: GetEnumerator
  nameWithType: AddInToken.GetEnumerator
- uid: System.AddIn.Hosting.AddInToken.GetHashCode*
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: GetHashCode
  nameWithType: AddInToken.GetHashCode
- uid: System.AddIn.Hosting.AddInToken.Name*
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: Name
  nameWithType: AddInToken.Name
- uid: System.AddIn.Hosting.AddInToken.Publisher*
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: Publisher
  nameWithType: AddInToken.Publisher
- uid: System.AddIn.Hosting.AddInToken.QualificationData*
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: QualificationData
  nameWithType: AddInToken.QualificationData
- uid: System.AddIn.Hosting.AddInToken.System#Collections#IEnumerable#GetEnumerator*
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: AddInToken.System.Collections.IEnumerable.GetEnumerator
- uid: System.AddIn.Hosting.AddInToken.ToString*
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: ToString
  nameWithType: AddInToken.ToString
- uid: System.AddIn.Hosting.AddInToken.Version*
  parent: System.AddIn.Hosting.AddInToken
  isExternal: false
  name: Version
  nameWithType: AddInToken.Version
