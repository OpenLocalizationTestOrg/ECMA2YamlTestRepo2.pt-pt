### YamlMime:ManagedReference
items:
- uid: System.Messaging.ActiveXMessageFormatter
  id: ActiveXMessageFormatter
  children:
  - System.Messaging.ActiveXMessageFormatter.#ctor
  - System.Messaging.ActiveXMessageFormatter.CanRead(System.Messaging.Message)
  - System.Messaging.ActiveXMessageFormatter.Clone
  - System.Messaging.ActiveXMessageFormatter.InitStreamedObject(System.Object)
  - System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)
  - System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)
  langs:
  - csharp
  name: ActiveXMessageFormatter
  nameWithType: ActiveXMessageFormatter
  fullName: System.Messaging.ActiveXMessageFormatter
  type: Class
  summary: "Serializes or deserializes primitive data types and other objects to or from the body of a Message Queuing message, using a format that is compatible with the MSMQ ActiveX Component."
  remarks: "The ActiveXMessageFormatter is compatible with messages sent using Message Queuing COM components, allowing interoperability with applications that use the MSMQ COM control.       The ActiveXMessageFormatter can serialize most primitives, as well as objects that implement the `IPersistStream` OLE interface. It can deserialize the same set of primitives, but requires further effort when deserializing a COM object (for example, an object created using Visual Basic 6.0) that implements `IPersistStream`. The object to deserialize must be in memory by first importing the object into a .NET Framework application.       When an application sends a message to the queue using an instance of the <xref:System.Messaging.MessageQueue> class, the formatter serializes the object into a stream and inserts it into the message body. When reading from a queue using a <xref:System.Messaging.MessageQueue>, the formatter deserializes the message data into the <xref:System.Messaging.Message.Body%2A> property of a <xref:System.Messaging.Message>.       ActiveX serialization is very compact, which makes using the ActiveXMessageFormatter and MSMQ COM control a very fast method of serialization."
  syntax:
    content: 'public class ActiveXMessageFormatter : ICloneable, System.Messaging.IMessageFormatter'
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  - System.Messaging.IMessageFormatter
  inheritedMembers: []
  platform:
  - net462
- uid: System.Messaging.ActiveXMessageFormatter.#ctor
  id: '#ctor'
  parent: System.Messaging.ActiveXMessageFormatter
  langs:
  - csharp
  name: ActiveXMessageFormatter()
  nameWithType: ActiveXMessageFormatter.ActiveXMessageFormatter()
  fullName: System.Messaging.ActiveXMessageFormatter.ActiveXMessageFormatter()
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Initializes a new instance of the <xref href=&quot;System.Messaging.ActiveXMessageFormatter&quot;></xref> class."
  syntax:
    content: public ActiveXMessageFormatter ();
    parameters: []
  overload: System.Messaging.ActiveXMessageFormatter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.ActiveXMessageFormatter.CanRead(System.Messaging.Message)
  id: CanRead(System.Messaging.Message)
  parent: System.Messaging.ActiveXMessageFormatter
  langs:
  - csharp
  name: CanRead(Message)
  nameWithType: ActiveXMessageFormatter.CanRead(Message)
  fullName: System.Messaging.ActiveXMessageFormatter.CanRead(Message)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Determines whether the formatter can deserialize the contents of the message."
  remarks: "CanRead returns `false` if the message body is not a primitive that the Message Queuing ActiveX control can deserialize or if it does not implement the `IPersistStream` interface."
  syntax:
    content: public bool CanRead (System.Messaging.Message message);
    parameters:
    - id: message
      type: System.Messaging.Message
      description: "The <xref href=&quot;System.Messaging.Message&quot;></xref> to inspect."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref href=&quot;System.Messaging.ActiveXMessageFormatter&quot;></xref> can deserialize the message; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.ActiveXMessageFormatter.CanRead*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>message</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Messaging.ActiveXMessageFormatter.Clone
  id: Clone
  parent: System.Messaging.ActiveXMessageFormatter
  langs:
  - csharp
  name: Clone()
  nameWithType: ActiveXMessageFormatter.Clone()
  fullName: System.Messaging.ActiveXMessageFormatter.Clone()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Creates an instance of the <xref href=&quot;System.Messaging.ActiveXMessageFormatter&quot;></xref> class that is identical to the current <xref href=&quot;System.Messaging.ActiveXMessageFormatter&quot;></xref>."
  remarks: "This method is used by the <xref:System.Messaging.MessageQueue> class in order to receive multiple messages at the same time (for example, if the application is receiving asynchronously). You typically do not need to call this method in your application code."
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "An object whose properties are identical to those of this <xref href=&quot;System.Messaging.ActiveXMessageFormatter&quot;></xref>."
  overload: System.Messaging.ActiveXMessageFormatter.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.ActiveXMessageFormatter.InitStreamedObject(System.Object)
  id: InitStreamedObject(System.Object)
  parent: System.Messaging.ActiveXMessageFormatter
  langs:
  - csharp
  name: InitStreamedObject(Object)
  nameWithType: ActiveXMessageFormatter.InitStreamedObject(Object)
  fullName: System.Messaging.ActiveXMessageFormatter.InitStreamedObject(Object)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Provides a utility to help serialize COM objects that implement <xref uid=&quot;langword_csharp_IPersistStream&quot; name=&quot;IPersistStream&quot; href=&quot;&quot;></xref> and require <xref uid=&quot;langword_csharp_IPersistStreamInit&quot; name=&quot;IPersistStreamInit&quot; href=&quot;&quot;></xref> to be called."
  syntax:
    content: public static void InitStreamedObject (object streamedObject);
    parameters:
    - id: streamedObject
      type: System.Object
      description: "An OLE object that implements <xref uid=&quot;langword_csharp_IPersistStreamInit&quot; name=&quot;IPersistStreamInit&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.ActiveXMessageFormatter.InitStreamedObject*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)
  id: Read(System.Messaging.Message)
  parent: System.Messaging.ActiveXMessageFormatter
  langs:
  - csharp
  name: Read(Message)
  nameWithType: ActiveXMessageFormatter.Read(Message)
  fullName: System.Messaging.ActiveXMessageFormatter.Read(Message)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Reads the contents from the given message and creates an object that contains the deserialized message."
  remarks: "If the body of the message represents a primitive type, the message&quot;s <xref:System.Messaging.Message.BodyType%2A> property must be one of the managed types in the following table.      |BodyType value|Managed type|   |--------------------|------------------|   |VT_LPSTR|<xref:System.Char> array (deserialized using ASCII encoding)|   |VT_BSTR, VT_LPWSTR|<xref:System.String> (deserialized using Unicode encoding)|   |VT_VECTOR &#124; VT_UI1|<xref:System.Byte> array|   |VT_BOOL|<xref:System.Boolean>|   |VT_CLSID|<xref:System.Guid>|   |VT_CY|<xref:System.Decimal>|   |VT_DATE|<xref:System.DateTime>|   |VT_I1, VT_UI1|<xref:System.Byte>|   |VT_I2|<xref:System.Int16>|   |VT_UI2|<xref:System.UInt16>|   |VT_I4|<xref:System.Int32>|   |VT_UI4|<xref:System.UInt32>|   |VT_I8|<xref:System.Int64>|   |VT_UI8|<xref:System.UInt64>|   |VT_R4|<xref:System.Single>|   |VT_R8|<xref:System.Double>|   |VT_NULL|`null`|   |VT_STREAMED_OBJECT|<xref:System.Object>|"
  syntax:
    content: public object Read (System.Messaging.Message message);
    parameters:
    - id: message
      type: System.Messaging.Message
      description: "The <xref href=&quot;System.Messaging.Message&quot;></xref>, in MSMQ ActiveX control format, to deserialize."
    return:
      type: System.Object
      description: "The deserialized message."
  overload: System.Messaging.ActiveXMessageFormatter.Read*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.Messaging.Message.BodyType*> property of the <code>message</code> passed as a parameter cannot be mapped to a primitive type, nor does it represent a streamed object."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The body represents a stored object. The <xref href=&quot;System.Messaging.ActiveXMessageFormatter&quot;></xref> does not support deserialization of stored objects."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>message</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)
  id: Write(System.Messaging.Message,System.Object)
  parent: System.Messaging.ActiveXMessageFormatter
  langs:
  - csharp
  name: Write(Message,Object)
  nameWithType: ActiveXMessageFormatter.Write(Message,Object)
  fullName: System.Messaging.ActiveXMessageFormatter.Write(Message,Object)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Serializes an object into the body of the message."
  remarks: "The following table shows the relationship between managed types and the <xref:System.Messaging.Message.BodyType%2A> property. The object that you serialize must be one of these managed types or must implement the OLE `IPersistStream` interface.      |BodyType value|Managed type|   |--------------------|------------------|   |VT_LPSTR|<xref:System.Char>|   |VT_BSTR, VT_LPWSTR|<xref:System.String>|   |VT_VECTOR &#124; VT_UI1|<xref:System.Byte>|   |VT_BOOL|<xref:System.Boolean>|   |VT_CLSID|<xref:System.Guid>|   |VT_CY|<xref:System.Decimal>|   |VT_DATE|<xref:System.DateTime>|   |VT_I1, VT_UI1|<xref:System.Byte>|   |VT_I2|<xref:System.Int16>|   |VT_UI2|<xref:System.UInt16>|   |VT_I4|<xref:System.Int32>|   |VT_UI4|<xref:System.UInt32>|   |VT_I8|<xref:System.Int64>|   |VT_UI8|<xref:System.UInt64>|   |VT_R4|<xref:System.Single>|   |VT_R8|<xref:System.Double>|   |VT_NULL|`null`|   |VT_STREAMED_OBJECT|`IPersistStream` (OLE) <xref:System.Object>|"
  syntax:
    content: public void Write (System.Messaging.Message message, object obj);
    parameters:
    - id: message
      type: System.Messaging.Message
      description: "The <xref href=&quot;System.Messaging.Message&quot;></xref> whose <xref:System.Messaging.Message.Body*> property will contain the serialized object."
    - id: obj
      type: System.Object
      description: "The object to be serialized into the message body."
  overload: System.Messaging.ActiveXMessageFormatter.Write*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The object to serialize is neither a primitive nor a streamed object that implements the OLE <xref uid=&quot;langword_csharp_IPersistStream&quot; name=&quot;IPersistStream&quot; href=&quot;&quot;></xref> interface."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>message</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Messaging.ActiveXMessageFormatter.#ctor
  parent: System.Messaging.ActiveXMessageFormatter
  isExternal: false
  name: ActiveXMessageFormatter()
  nameWithType: ActiveXMessageFormatter.ActiveXMessageFormatter()
  fullName: System.Messaging.ActiveXMessageFormatter.ActiveXMessageFormatter()
- uid: System.Messaging.ActiveXMessageFormatter.CanRead(System.Messaging.Message)
  parent: System.Messaging.ActiveXMessageFormatter
  isExternal: false
  name: CanRead(Message)
  nameWithType: ActiveXMessageFormatter.CanRead(Message)
  fullName: System.Messaging.ActiveXMessageFormatter.CanRead(Message)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Messaging.Message
  parent: System.Messaging
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: System.Messaging.Message
- uid: System.Messaging.ActiveXMessageFormatter.Clone
  parent: System.Messaging.ActiveXMessageFormatter
  isExternal: false
  name: Clone()
  nameWithType: ActiveXMessageFormatter.Clone()
  fullName: System.Messaging.ActiveXMessageFormatter.Clone()
- uid: System.Messaging.ActiveXMessageFormatter.InitStreamedObject(System.Object)
  parent: System.Messaging.ActiveXMessageFormatter
  isExternal: false
  name: InitStreamedObject(Object)
  nameWithType: ActiveXMessageFormatter.InitStreamedObject(Object)
  fullName: System.Messaging.ActiveXMessageFormatter.InitStreamedObject(Object)
- uid: System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)
  parent: System.Messaging.ActiveXMessageFormatter
  isExternal: false
  name: Read(Message)
  nameWithType: ActiveXMessageFormatter.Read(Message)
  fullName: System.Messaging.ActiveXMessageFormatter.Read(Message)
- uid: System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)
  parent: System.Messaging.ActiveXMessageFormatter
  isExternal: false
  name: Write(Message,Object)
  nameWithType: ActiveXMessageFormatter.Write(Message,Object)
  fullName: System.Messaging.ActiveXMessageFormatter.Write(Message,Object)
- uid: System.Messaging.ActiveXMessageFormatter.#ctor*
  parent: System.Messaging.ActiveXMessageFormatter
  isExternal: false
  name: ActiveXMessageFormatter
  nameWithType: ActiveXMessageFormatter.ActiveXMessageFormatter
- uid: System.Messaging.ActiveXMessageFormatter.CanRead*
  parent: System.Messaging.ActiveXMessageFormatter
  isExternal: false
  name: CanRead
  nameWithType: ActiveXMessageFormatter.CanRead
- uid: System.Messaging.ActiveXMessageFormatter.Clone*
  parent: System.Messaging.ActiveXMessageFormatter
  isExternal: false
  name: Clone
  nameWithType: ActiveXMessageFormatter.Clone
- uid: System.Messaging.ActiveXMessageFormatter.InitStreamedObject*
  parent: System.Messaging.ActiveXMessageFormatter
  isExternal: false
  name: InitStreamedObject
  nameWithType: ActiveXMessageFormatter.InitStreamedObject
- uid: System.Messaging.ActiveXMessageFormatter.Read*
  parent: System.Messaging.ActiveXMessageFormatter
  isExternal: false
  name: Read
  nameWithType: ActiveXMessageFormatter.Read
- uid: System.Messaging.ActiveXMessageFormatter.Write*
  parent: System.Messaging.ActiveXMessageFormatter
  isExternal: false
  name: Write
  nameWithType: ActiveXMessageFormatter.Write
