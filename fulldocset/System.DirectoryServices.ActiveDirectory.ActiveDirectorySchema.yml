### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  id: ActiveDirectorySchema
  children:
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.Dispose(System.Boolean)
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses(System.DirectoryServices.ActiveDirectory.SchemaClassType)
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctClasses
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctProperties
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties(System.DirectoryServices.ActiveDirectory.PropertyTypes)
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindClass(System.String)
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctClass(System.String)
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctProperty(System.String)
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindProperty(System.String)
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetCurrentSchema
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetDirectoryEntry
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetSchema(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.RefreshSchema
  - System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.SchemaRoleOwner
  langs:
  - csharp
  name: ActiveDirectorySchema
  nameWithType: ActiveDirectorySchema
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  type: Class
  summary: "A classe de ActiveDirectorySchema representa a partição de esquema para um determinado domínio."
  syntax:
    content: 'public class ActiveDirectorySchema : System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition'
  inheritance:
  - System.Object
  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition
  implements: []
  inheritedMembers:
  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose
  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Name
  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.ToString
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ActiveDirectorySchema.Dispose(Boolean)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.Dispose(Boolean)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Liberta os recursos geridos que são utilizados pelo <xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema&quot;> </xref> objeto e, opcionalmente, versões não gerido recursos."
  remarks: "O `disposing` parâmetro afeta apenas a versão dos recursos geridos. Recursos não geridos sempre são lançados através deste método."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para libertar recursos geridos e; <xref uid=&quot;langword_csharp_false &quot; name=&quot;false &quot; href=&quot;&quot;> </xref>para libertar recursos apenas não geridos."
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses
  id: FindAllClasses
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  langs:
  - csharp
  name: FindAllClasses()
  nameWithType: ActiveDirectorySchema.FindAllClasses()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Obtém todas as classes de serviços de domínio do Active Directory no esquema."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection FindAllClasses ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection&quot;> </xref> objeto que contém uma coleção de <xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass&quot;> </xref> objetos para as classes que foram obtidos."
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto atual foi eliminado."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses(System.DirectoryServices.ActiveDirectory.SchemaClassType)
  id: FindAllClasses(System.DirectoryServices.ActiveDirectory.SchemaClassType)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  langs:
  - csharp
  name: FindAllClasses(SchemaClassType)
  nameWithType: ActiveDirectorySchema.FindAllClasses(SchemaClassType)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses(SchemaClassType)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Obtém todas as classes de serviços de domínio do Active Directory no esquema do tipo especificado."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection FindAllClasses (System.DirectoryServices.ActiveDirectory.SchemaClassType type);
    parameters:
    - id: type
      type: System.DirectoryServices.ActiveDirectory.SchemaClassType
      description: "Um do <xref href=&quot;System.DirectoryServices.ActiveDirectory.SchemaClassType&quot;> </xref> membros que identifica o tipo de classes a obter."
    return:
      type: System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection&quot;> </xref> objeto que contém uma coleção de <xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass&quot;> </xref> objetos para as classes que foram obtidos."
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto atual foi eliminado."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctClasses
  id: FindAllDefunctClasses
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  langs:
  - csharp
  name: FindAllDefunctClasses()
  nameWithType: ActiveDirectorySchema.FindAllDefunctClasses()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctClasses()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Obtém todas as classes de serviços de domínio do Active Directory desativadas no esquema."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection FindAllDefunctClasses ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection&quot;> </xref> objeto que contém uma coleção de <xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass&quot;> </xref> objetos para as classes que foram obtidos."
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctClasses*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto atual foi eliminado."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctProperties
  id: FindAllDefunctProperties
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  langs:
  - csharp
  name: FindAllDefunctProperties()
  nameWithType: ActiveDirectorySchema.FindAllDefunctProperties()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctProperties()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Obtém todas as propriedades de serviços de domínio do Active Directory desativadas no esquema."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection FindAllDefunctProperties ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection&quot;> </xref> objeto que contém uma coleção de <xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty&quot;> </xref> objetos para as propriedades que foram obtidos."
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctProperties*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto atual foi eliminado."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties
  id: FindAllProperties
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  langs:
  - csharp
  name: FindAllProperties()
  nameWithType: ActiveDirectorySchema.FindAllProperties()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Obtém todas as propriedades de serviços de domínio do Active Directory no esquema."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection FindAllProperties ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection&quot;> </xref> objeto que contém uma coleção de <xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty&quot;> </xref> objetos para as propriedades que foram obtidos."
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto atual foi eliminado."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties(System.DirectoryServices.ActiveDirectory.PropertyTypes)
  id: FindAllProperties(System.DirectoryServices.ActiveDirectory.PropertyTypes)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  langs:
  - csharp
  name: FindAllProperties(PropertyTypes)
  nameWithType: ActiveDirectorySchema.FindAllProperties(PropertyTypes)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties(PropertyTypes)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Obtém todas as propriedades de serviços de domínio do Active Directory no esquema do tipo especificado."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection FindAllProperties (System.DirectoryServices.ActiveDirectory.PropertyTypes type);
    parameters:
    - id: type
      type: System.DirectoryServices.ActiveDirectory.PropertyTypes
      description: "Um do <xref href=&quot;System.DirectoryServices.ActiveDirectory.PropertyTypes&quot;> </xref> membros que identifica o tipo de propriedades a obter."
    return:
      type: System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection&quot;> </xref> objeto que contém uma coleção de <xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty&quot;> </xref> objetos para as propriedades que foram obtidos."
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto atual foi eliminado."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindClass(System.String)
  id: FindClass(System.String)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  langs:
  - csharp
  name: FindClass(String)
  nameWithType: ActiveDirectorySchema.FindClass(String)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindClass(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Obtém a classe com o nome especificado."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass FindClass (string ldapDisplayName);
    parameters:
    - id: ldapDisplayName
      type: System.String
      description: "O nome a apresentar LDAP da classe para localizar."
    return:
      type: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass
      description: "Um <xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass&quot;> </xref> objeto que representa a classe com o nome especificado."
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindClass*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Não é possível localizar uma classe com o nome especificado."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>ldapDisplayName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ldapDisplayName</code>é o comprimento zero."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto atual foi eliminado."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctClass(System.String)
  id: FindDefunctClass(System.String)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  langs:
  - csharp
  name: FindDefunctClass(String)
  nameWithType: ActiveDirectorySchema.FindDefunctClass(String)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctClass(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Obtém a classe obsoleto que tem o nome comum especificado."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass FindDefunctClass (string commonName);
    parameters:
    - id: commonName
      type: System.String
      description: "O nome comum da classe desativado para localizar."
    return:
      type: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass
      description: "Um <xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass&quot;> </xref> objeto que representa a classe com o nome comum especificado."
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctClass*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Não é possível localizar uma classe com o nome especificado."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>commonName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>commonName</code>é o comprimento zero."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto atual foi eliminado."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctProperty(System.String)
  id: FindDefunctProperty(System.String)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  langs:
  - csharp
  name: FindDefunctProperty(String)
  nameWithType: ActiveDirectorySchema.FindDefunctProperty(String)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctProperty(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Obtém a propriedade obsoleto que tem o nome comum especificado."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty FindDefunctProperty (string commonName);
    parameters:
    - id: commonName
      type: System.String
      description: "O nome comum da propriedade desativado para localizar."
    return:
      type: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty&quot;> </xref> objeto que representa a propriedade."
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctProperty*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Não é possível localizar uma propriedade com o nome especificado."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>commonName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>commonName</code>é o comprimento zero."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto atual foi eliminado."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindProperty(System.String)
  id: FindProperty(System.String)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  langs:
  - csharp
  name: FindProperty(String)
  nameWithType: ActiveDirectorySchema.FindProperty(String)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindProperty(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Obtém a propriedade com o nome especificado."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty FindProperty (string ldapDisplayName);
    parameters:
    - id: ldapDisplayName
      type: System.String
      description: "O nome a apresentar LDAP da propriedade para localizar."
    return:
      type: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty&quot;> </xref> objeto que representa a propriedade com o nome especificado."
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindProperty*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Não é possível localizar uma propriedade com o nome especificado."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>propertyName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>propertyName</code>é o comprimento zero."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto atual foi eliminado."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetCurrentSchema
  id: GetCurrentSchema
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  langs:
  - csharp
  name: GetCurrentSchema()
  nameWithType: ActiveDirectorySchema.GetCurrentSchema()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetCurrentSchema()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Obtém o objeto de esquema da floresta que o utilizador atualmente com sessão iniciada é membro."
  syntax:
    content: public static System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema GetCurrentSchema ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
      description: "Um <xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema&quot;> </xref> objeto que representa o esquema para que o computador local é um membro do domínio."
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetCurrentSchema*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Não é possível estabelecer uma ligação ao domínio local."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetDirectoryEntry
  id: GetDirectoryEntry
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  langs:
  - csharp
  name: GetDirectoryEntry()
  nameWithType: ActiveDirectorySchema.GetDirectoryEntry()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetDirectoryEntry()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Obtém um <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> objeto que representa a partição de diretório."
  syntax:
    content: public override System.DirectoryServices.DirectoryEntry GetDirectoryEntry ();
    parameters: []
    return:
      type: System.DirectoryServices.DirectoryEntry
      description: "A <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> objeto que representa a partição de diretório."
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetDirectoryEntry*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto atual foi eliminado."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetSchema(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  id: GetSchema(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  langs:
  - csharp
  name: GetSchema(DirectoryContext)
  nameWithType: ActiveDirectorySchema.GetSchema(DirectoryContext)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetSchema(DirectoryContext)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Obtém o objeto de esquema para o contexto especificado."
  syntax:
    content: public static System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema GetSchema (System.DirectoryServices.ActiveDirectory.DirectoryContext context);
    parameters:
    - id: context
      type: System.DirectoryServices.ActiveDirectory.DirectoryContext
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.DirectoryContext&quot;> </xref> objeto que contém o destino e as credenciais a utilizar para obter o objeto. O destino do contexto deve ser uma floresta, o servidor de diretório ou o conjunto de configuração."
    return:
      type: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema&quot;> </xref> objeto que representa o esquema para o contexto especificado."
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetSchema*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Uma ligação para o destino especificado no <code> context </code> não pode ser efetuada."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>context</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>context</code>Não é válido."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.RefreshSchema
  id: RefreshSchema
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  langs:
  - csharp
  name: RefreshSchema()
  nameWithType: ActiveDirectorySchema.RefreshSchema()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.RefreshSchema()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Atualiza a cache do esquema no computador cliente."
  syntax:
    content: public void RefreshSchema ();
    parameters: []
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.RefreshSchema*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.SchemaRoleOwner
  id: SchemaRoleOwner
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  langs:
  - csharp
  name: SchemaRoleOwner
  nameWithType: ActiveDirectorySchema.SchemaRoleOwner
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.SchemaRoleOwner
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Obtém o proprietário da função de mestre de esquema."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DirectoryServer SchemaRoleOwner { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.DirectoryServer
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.DirectoryServer&quot;> </xref> objeto que representa o servidor que é o mestre de esquema."
  overload: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.SchemaRoleOwner*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto atual foi eliminado."
  platform:
  - net462
references:
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition
  isExternal: false
  name: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryObjectNotFoundException
  nameWithType: ActiveDirectoryObjectNotFoundException
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.Dispose(System.Boolean)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ActiveDirectorySchema.Dispose(Boolean)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindAllClasses()
  nameWithType: ActiveDirectorySchema.FindAllClasses()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses()
- uid: System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ReadOnlyActiveDirectorySchemaClassCollection
  nameWithType: ReadOnlyActiveDirectorySchemaClassCollection
  fullName: System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses(System.DirectoryServices.ActiveDirectory.SchemaClassType)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindAllClasses(SchemaClassType)
  nameWithType: ActiveDirectorySchema.FindAllClasses(SchemaClassType)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses(SchemaClassType)
- uid: System.DirectoryServices.ActiveDirectory.SchemaClassType
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: SchemaClassType
  nameWithType: SchemaClassType
  fullName: System.DirectoryServices.ActiveDirectory.SchemaClassType
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctClasses
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindAllDefunctClasses()
  nameWithType: ActiveDirectorySchema.FindAllDefunctClasses()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctClasses()
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctProperties
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindAllDefunctProperties()
  nameWithType: ActiveDirectorySchema.FindAllDefunctProperties()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctProperties()
- uid: System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ReadOnlyActiveDirectorySchemaPropertyCollection
  nameWithType: ReadOnlyActiveDirectorySchemaPropertyCollection
  fullName: System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindAllProperties()
  nameWithType: ActiveDirectorySchema.FindAllProperties()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties()
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties(System.DirectoryServices.ActiveDirectory.PropertyTypes)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindAllProperties(PropertyTypes)
  nameWithType: ActiveDirectorySchema.FindAllProperties(PropertyTypes)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties(PropertyTypes)
- uid: System.DirectoryServices.ActiveDirectory.PropertyTypes
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: PropertyTypes
  nameWithType: PropertyTypes
  fullName: System.DirectoryServices.ActiveDirectory.PropertyTypes
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindClass(System.String)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindClass(String)
  nameWithType: ActiveDirectorySchema.FindClass(String)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindClass(String)
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectorySchemaClass
  nameWithType: ActiveDirectorySchemaClass
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctClass(System.String)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindDefunctClass(String)
  nameWithType: ActiveDirectorySchema.FindDefunctClass(String)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctClass(String)
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctProperty(System.String)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindDefunctProperty(String)
  nameWithType: ActiveDirectorySchema.FindDefunctProperty(String)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctProperty(String)
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectorySchemaProperty
  nameWithType: ActiveDirectorySchemaProperty
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindProperty(System.String)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindProperty(String)
  nameWithType: ActiveDirectorySchema.FindProperty(String)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindProperty(String)
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetCurrentSchema
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: GetCurrentSchema()
  nameWithType: ActiveDirectorySchema.GetCurrentSchema()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetCurrentSchema()
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectorySchema
  nameWithType: ActiveDirectorySchema
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetDirectoryEntry
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: GetDirectoryEntry()
  nameWithType: ActiveDirectorySchema.GetDirectoryEntry()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetDirectoryEntry()
- uid: System.DirectoryServices.DirectoryEntry
  parent: System.DirectoryServices
  isExternal: false
  name: DirectoryEntry
  nameWithType: DirectoryEntry
  fullName: System.DirectoryServices.DirectoryEntry
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetSchema(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: GetSchema(DirectoryContext)
  nameWithType: ActiveDirectorySchema.GetSchema(DirectoryContext)
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetSchema(DirectoryContext)
- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DirectoryContext
  nameWithType: DirectoryContext
  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.RefreshSchema
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: RefreshSchema()
  nameWithType: ActiveDirectorySchema.RefreshSchema()
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.RefreshSchema()
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.SchemaRoleOwner
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: SchemaRoleOwner
  nameWithType: ActiveDirectorySchema.SchemaRoleOwner
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.SchemaRoleOwner
- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DirectoryServer
  nameWithType: DirectoryServer
  fullName: System.DirectoryServices.ActiveDirectory.DirectoryServer
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.Dispose*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: Dispose
  nameWithType: ActiveDirectorySchema.Dispose
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindAllClasses
  nameWithType: ActiveDirectorySchema.FindAllClasses
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctClasses*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindAllDefunctClasses
  nameWithType: ActiveDirectorySchema.FindAllDefunctClasses
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctProperties*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindAllDefunctProperties
  nameWithType: ActiveDirectorySchema.FindAllDefunctProperties
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindAllProperties
  nameWithType: ActiveDirectorySchema.FindAllProperties
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindClass*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindClass
  nameWithType: ActiveDirectorySchema.FindClass
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctClass*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindDefunctClass
  nameWithType: ActiveDirectorySchema.FindDefunctClass
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctProperty*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindDefunctProperty
  nameWithType: ActiveDirectorySchema.FindDefunctProperty
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindProperty*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: FindProperty
  nameWithType: ActiveDirectorySchema.FindProperty
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetCurrentSchema*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: GetCurrentSchema
  nameWithType: ActiveDirectorySchema.GetCurrentSchema
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetDirectoryEntry*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: GetDirectoryEntry
  nameWithType: ActiveDirectorySchema.GetDirectoryEntry
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetSchema*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: GetSchema
  nameWithType: ActiveDirectorySchema.GetSchema
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.RefreshSchema*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: RefreshSchema
  nameWithType: ActiveDirectorySchema.RefreshSchema
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.SchemaRoleOwner*
  parent: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  isExternal: false
  name: SchemaRoleOwner
  nameWithType: ActiveDirectorySchema.SchemaRoleOwner
