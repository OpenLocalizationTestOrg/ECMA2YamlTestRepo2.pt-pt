### YamlMime:ManagedReference
items:
- uid: System.Net.WebPermissionAttribute
  id: WebPermissionAttribute
  children:
  - System.Net.WebPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  - System.Net.WebPermissionAttribute.Accept
  - System.Net.WebPermissionAttribute.AcceptPattern
  - System.Net.WebPermissionAttribute.Connect
  - System.Net.WebPermissionAttribute.ConnectPattern
  - System.Net.WebPermissionAttribute.CreatePermission
  langs:
  - csharp
  name: WebPermissionAttribute
  nameWithType: WebPermissionAttribute
  fullName: System.Net.WebPermissionAttribute
  type: Class
  summary: "Specifies permission to access Internet resources. This class cannot be inherited."
  remarks: "WebPermissionAttribute allows you to declaratively specify which URI strings and regular expression strings your class can use.       The security information specified in the WebPermissionAttribute is stored in the metadata of the attribute target, which is the class to which WebPermissionAttribute is applied. The system accesses this information at run time. The <xref:System.Security.Permissions.SecurityAction?displayProperty=fullName> passed to the constructor determines the allowable WebPermissionAttribute targets. The system uses the <xref:System.Net.WebPermission> returned by the <xref:System.Net.WebPermissionAttribute.CreatePermission%2A> method to convert the security information of the attribute target to a serializable form stored in metadata.      > [!NOTE] >  WebPermissionAttribute is used only for [Declarative Security](http://msdn.microsoft.com/en-us/97e21efd-6e89-4115-90d5-ad239513dad8). For [Imperative Security](http://msdn.microsoft.com/en-us/15aab1e1-6b7d-41ad-b102-c1ed7bedea27), use the corresponding <xref:System.Net.WebPermission>."
  example:
  - "The following example demonstrates how to apply WebPermissionAttribute to a method.  \n  \n [!code-cs[WebPermissionAttribute_AcceptConnect#1](~/add/codesnippet/csharp/t-system.net.webpermissi_1.cs)]\n [!code-cpp[WebPermissionAttribute_AcceptConnect#1](~/add/codesnippet/cpp/t-system.net.webpermissi_1.cpp)]\n [!code-vb[WebPermissionAttribute_AcceptConnect#1](~/add/codesnippet/visualbasic/t-system.net.webpermissi_1.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)]

      public sealed class WebPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute
  inheritance:
  - System.Attribute
  - System.Security.Permissions.SecurityAttribute
  - System.Security.Permissions.CodeAccessSecurityAttribute
  implements: []
  inheritedMembers:
  - System.Security.Permissions.SecurityAttribute.Action
  - System.Security.Permissions.SecurityAttribute.Unrestricted
  platform:
  - net462
- uid: System.Net.WebPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  id: '#ctor(System.Security.Permissions.SecurityAction)'
  parent: System.Net.WebPermissionAttribute
  langs:
  - csharp
  name: WebPermissionAttribute(SecurityAction)
  nameWithType: WebPermissionAttribute.WebPermissionAttribute(SecurityAction)
  fullName: System.Net.WebPermissionAttribute.WebPermissionAttribute(SecurityAction)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Initializes a new instance of the <xref href=&quot;System.Net.WebPermissionAttribute&quot;></xref> class with a value that specifies the security actions that can be performed on this class."
  remarks: "The <xref:System.Security.Permissions.SecurityAction> value passed to this constructor specifies the allowable security actions that can be performed on this class."
  example:
  - "The following example demonstrates how to apply <xref:System.Net.WebPermissionAttribute> to a method.  \n  \n [!code-cs[WebPermissionAttribute_Constructor#1](~/add/codesnippet/csharp/0d5811ce-ed17-41f8-8a54-_1.cs)]\n [!code-vb[WebPermissionAttribute_Constructor#1](~/add/codesnippet/visualbasic/0d5811ce-ed17-41f8-8a54-_1.vb)]\n [!code-cpp[WebPermissionAttribute_Constructor#1](~/add/codesnippet/cpp/0d5811ce-ed17-41f8-8a54-_1.cpp)]"
  syntax:
    content: public WebPermissionAttribute (System.Security.Permissions.SecurityAction action);
    parameters:
    - id: action
      type: System.Security.Permissions.SecurityAction
      description: "One of the <xref href=&quot;System.Security.Permissions.SecurityAction&quot;></xref> values."
  overload: System.Net.WebPermissionAttribute.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>action</code> is not a valid <xref href=&quot;System.Security.Permissions.SecurityAction&quot;></xref> value."
  platform:
  - net462
- uid: System.Net.WebPermissionAttribute.Accept
  id: Accept
  parent: System.Net.WebPermissionAttribute
  langs:
  - csharp
  name: Accept
  nameWithType: WebPermissionAttribute.Accept
  fullName: System.Net.WebPermissionAttribute.Accept
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Gets or sets the URI string accepted by the current <xref href=&quot;System.Net.WebPermissionAttribute&quot;></xref>."
  remarks: "When applying <xref:System.Net.WebPermissionAttribute> to your class, this property specifies what URI string will be accepted for use within your class. This permission is applied when the security system calls <xref:System.Net.WebPermissionAttribute.CreatePermission%2A>. This property is write-once."
  example:
  - "The following example demonstrates how to use <xref:System.Net.WebPermissionAttribute> to specify an allowable Accept string.  \n  \n [!code-vb[WebPermissionAttribute_Accept#1](~/add/codesnippet/visualbasic/p-system.net.webpermissi_3_1.vb)]\n [!code-cs[WebPermissionAttribute_Accept#1](~/add/codesnippet/csharp/p-system.net.webpermissi_3_1.cs)]\n [!code-cpp[WebPermissionAttribute_Accept#1](~/add/codesnippet/cpp/p-system.net.webpermissi_3_1.cpp)]"
  syntax:
    content: public string Accept { get; set; }
    return:
      type: System.String
      description: "A string containing the URI accepted by the current <xref href=&quot;System.Net.WebPermissionAttribute&quot;></xref>."
  overload: System.Net.WebPermissionAttribute.Accept*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Accept is not <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> when you attempt to set the value. If you wish to specify more than one Accept URI, use an additional attribute declaration statement."
  platform:
  - net462
- uid: System.Net.WebPermissionAttribute.AcceptPattern
  id: AcceptPattern
  parent: System.Net.WebPermissionAttribute
  langs:
  - csharp
  name: AcceptPattern
  nameWithType: WebPermissionAttribute.AcceptPattern
  fullName: System.Net.WebPermissionAttribute.AcceptPattern
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Gets or sets a regular expression pattern that describes the URI accepted by the current <xref href=&quot;System.Net.WebPermissionAttribute&quot;></xref>."
  remarks: "When applying <xref:System.Net.WebPermissionAttribute> to your class, this property specifies what regular expression string will be accepted for use within your class. This property is write-once."
  example:
  - "The following example demonstrates how to use <xref:System.Net.WebPermissionAttribute> to specify an allowable AcceptPattern.  \n  \n [!code-vb[WebPermissionAttribute_AcceptPattern#1](~/add/codesnippet/visualbasic/p-system.net.webpermissi_0_1.vb)]\n [!code-cs[WebPermissionAttribute_AcceptPattern#1](~/add/codesnippet/csharp/p-system.net.webpermissi_0_1.cs)]\n [!code-cpp[WebPermissionAttribute_AcceptPattern#1](~/add/codesnippet/cpp/p-system.net.webpermissi_0_1.cpp)]"
  syntax:
    content: public string AcceptPattern { get; set; }
    return:
      type: System.String
      description: "A string containing a regular expression pattern that describes the URI accepted by the current <xref href=&quot;System.Net.WebPermissionAttribute&quot;></xref>. This string must be escaped according to the rules for encoding a &lt;xref:System.Text.RegularExpressions.Regex?displayProperty=fullName&gt; constructor string."
  overload: System.Net.WebPermissionAttribute.AcceptPattern*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "AcceptPattern is not <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> when you attempt to set the value. If you wish to specify more than one Accept URI, use an additional attribute declaration statement."
  platform:
  - net462
- uid: System.Net.WebPermissionAttribute.Connect
  id: Connect
  parent: System.Net.WebPermissionAttribute
  langs:
  - csharp
  name: Connect
  nameWithType: WebPermissionAttribute.Connect
  fullName: System.Net.WebPermissionAttribute.Connect
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Gets or sets the URI connection string controlled by the current <xref href=&quot;System.Net.WebPermissionAttribute&quot;></xref>."
  remarks: "When applying <xref:System.Net.WebPermissionAttribute> to your class, this property specifies what URI connection is accepted for use within your class. This property is write-once."
  example:
  - "The following example demonstrates how to use WebPermissionAttribute to specify an allowable Connect string.  \n  \n [!code-cpp[WebPermissionAttribute_Connect#1](~/add/codesnippet/cpp/p-system.net.webpermissi_1_1.cpp)]\n [!code-vb[WebPermissionAttribute_Connect#1](~/add/codesnippet/visualbasic/p-system.net.webpermissi_1_1.vb)]\n [!code-cs[WebPermissionAttribute_Connect#1](~/add/codesnippet/csharp/p-system.net.webpermissi_1_1.cs)]"
  syntax:
    content: public string Connect { get; set; }
    return:
      type: System.String
      description: "A string containing the URI connection controlled by the current <xref href=&quot;System.Net.WebPermissionAttribute&quot;></xref>."
  overload: System.Net.WebPermissionAttribute.Connect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Connect is not <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> when you attempt to set the value. If you wish to specify more than one Connect URI, use an additional attribute declaration statement."
  platform:
  - net462
- uid: System.Net.WebPermissionAttribute.ConnectPattern
  id: ConnectPattern
  parent: System.Net.WebPermissionAttribute
  langs:
  - csharp
  name: ConnectPattern
  nameWithType: WebPermissionAttribute.ConnectPattern
  fullName: System.Net.WebPermissionAttribute.ConnectPattern
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "Gets or sets a regular expression pattern that describes the URI connection controlled by the current <xref href=&quot;System.Net.WebPermissionAttribute&quot;></xref>."
  remarks: "When applying <xref:System.Net.WebPermissionAttribute> to your class, this property specifies what regular expression connect string is accepted for use within your class. This property is write-once."
  example:
  - "The following example demonstrates how to use <xref:System.Net.WebPermissionAttribute> to specify an allowable ConnectPattern.  \n  \n [!code-cs[WebPermissionAttribute_ConnectPattern#1](~/add/codesnippet/csharp/p-system.net.webpermissi_4_1.cs)]\n [!code-vb[WebPermissionAttribute_ConnectPattern#1](~/add/codesnippet/visualbasic/p-system.net.webpermissi_4_1.vb)]\n [!code-cpp[WebPermissionAttribute_ConnectPattern#1](~/add/codesnippet/cpp/p-system.net.webpermissi_4_1.cpp)]"
  syntax:
    content: public string ConnectPattern { get; set; }
    return:
      type: System.String
      description: "A string containing a regular expression pattern that describes the URI connection controlled by this <xref href=&quot;System.Net.WebPermissionAttribute&quot;></xref>."
  overload: System.Net.WebPermissionAttribute.ConnectPattern*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "ConnectPattern is not <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> when you attempt to set the value. If you wish to specify more than one connect URI, use an additional attribute declaration statement."
  platform:
  - net462
- uid: System.Net.WebPermissionAttribute.CreatePermission
  id: CreatePermission
  parent: System.Net.WebPermissionAttribute
  langs:
  - csharp
  name: CreatePermission()
  nameWithType: WebPermissionAttribute.CreatePermission()
  fullName: System.Net.WebPermissionAttribute.CreatePermission()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Creates and returns a new instance of the <xref href=&quot;System.Net.WebPermission&quot;></xref> class."
  remarks: "The <xref:System.Net.SocketPermissionAttribute.CreatePermission%2A> method is called by the security system, not by application code.       The security information described by <xref:System.Net.WebPermissionAttribute> is stored in the metadata of the attribute target, which is the class to which <xref:System.Net.WebPermissionAttribute> is applied. The system accesses the information at run time. The system uses the <xref:System.Net.WebPermission> returned by <xref:System.Net.SocketPermissionAttribute.CreatePermission%2A> to convert the security information of the attribute target to a serializable form stored in metadata."
  syntax:
    content: public override System.Security.IPermission CreatePermission ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "A <xref href=&quot;System.Net.WebPermission&quot;></xref> corresponding to the security declaration."
  overload: System.Net.WebPermissionAttribute.CreatePermission*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Permissions.CodeAccessSecurityAttribute
  isExternal: false
  name: System.Security.Permissions.CodeAccessSecurityAttribute
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Net.WebPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  parent: System.Net.WebPermissionAttribute
  isExternal: false
  name: WebPermissionAttribute(SecurityAction)
  nameWithType: WebPermissionAttribute.WebPermissionAttribute(SecurityAction)
  fullName: System.Net.WebPermissionAttribute.WebPermissionAttribute(SecurityAction)
- uid: System.Security.Permissions.SecurityAction
  parent: System.Security.Permissions
  isExternal: false
  name: SecurityAction
  nameWithType: SecurityAction
  fullName: System.Security.Permissions.SecurityAction
- uid: System.Net.WebPermissionAttribute.Accept
  parent: System.Net.WebPermissionAttribute
  isExternal: false
  name: Accept
  nameWithType: WebPermissionAttribute.Accept
  fullName: System.Net.WebPermissionAttribute.Accept
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.WebPermissionAttribute.AcceptPattern
  parent: System.Net.WebPermissionAttribute
  isExternal: false
  name: AcceptPattern
  nameWithType: WebPermissionAttribute.AcceptPattern
  fullName: System.Net.WebPermissionAttribute.AcceptPattern
- uid: System.Net.WebPermissionAttribute.Connect
  parent: System.Net.WebPermissionAttribute
  isExternal: false
  name: Connect
  nameWithType: WebPermissionAttribute.Connect
  fullName: System.Net.WebPermissionAttribute.Connect
- uid: System.Net.WebPermissionAttribute.ConnectPattern
  parent: System.Net.WebPermissionAttribute
  isExternal: false
  name: ConnectPattern
  nameWithType: WebPermissionAttribute.ConnectPattern
  fullName: System.Net.WebPermissionAttribute.ConnectPattern
- uid: System.Net.WebPermissionAttribute.CreatePermission
  parent: System.Net.WebPermissionAttribute
  isExternal: false
  name: CreatePermission()
  nameWithType: WebPermissionAttribute.CreatePermission()
  fullName: System.Net.WebPermissionAttribute.CreatePermission()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Net.WebPermissionAttribute.#ctor*
  parent: System.Net.WebPermissionAttribute
  isExternal: false
  name: WebPermissionAttribute
  nameWithType: WebPermissionAttribute.WebPermissionAttribute
- uid: System.Net.WebPermissionAttribute.Accept*
  parent: System.Net.WebPermissionAttribute
  isExternal: false
  name: Accept
  nameWithType: WebPermissionAttribute.Accept
- uid: System.Net.WebPermissionAttribute.AcceptPattern*
  parent: System.Net.WebPermissionAttribute
  isExternal: false
  name: AcceptPattern
  nameWithType: WebPermissionAttribute.AcceptPattern
- uid: System.Net.WebPermissionAttribute.Connect*
  parent: System.Net.WebPermissionAttribute
  isExternal: false
  name: Connect
  nameWithType: WebPermissionAttribute.Connect
- uid: System.Net.WebPermissionAttribute.ConnectPattern*
  parent: System.Net.WebPermissionAttribute
  isExternal: false
  name: ConnectPattern
  nameWithType: WebPermissionAttribute.ConnectPattern
- uid: System.Net.WebPermissionAttribute.CreatePermission*
  parent: System.Net.WebPermissionAttribute
  isExternal: false
  name: CreatePermission
  nameWithType: WebPermissionAttribute.CreatePermission
