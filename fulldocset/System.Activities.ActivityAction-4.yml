### YamlMime:ManagedReference
items:
- uid: System.Activities.ActivityAction`4
  id: ActivityAction`4
  children:
  - System.Activities.ActivityAction`4.#ctor
  - System.Activities.ActivityAction`4.Argument1
  - System.Activities.ActivityAction`4.Argument2
  - System.Activities.ActivityAction`4.Argument3
  - System.Activities.ActivityAction`4.Argument4
  langs:
  - csharp
  name: ActivityAction<T1,T2,T3,T4>
  nameWithType: ActivityAction<T1,T2,T3,T4>
  fullName: System.Activities.ActivityAction<T1,T2,T3,T4>
  type: Class
  syntax:
    content: 'public sealed class ActivityAction<T1,T2,T3,T4> : System.Activities.ActivityDelegate'
    typeParameters:
    - id: T1
      description: "To be added."
    - id: T2
      description: "To be added."
    - id: T3
      description: "To be added."
    - id: T4
      description: "To be added."
  inheritance:
  - System.Object
  - System.Activities.ActivityDelegate
  implements: []
  inheritedMembers:
  - System.Activities.ActivityDelegate.DisplayName
  - System.Activities.ActivityDelegate.GetResultArgument
  - System.Activities.ActivityDelegate.Handler
  - System.Activities.ActivityDelegate.OnGetRuntimeDelegateArguments(System.Collections.Generic.IList{System.Activities.RuntimeDelegateArgument})
  - System.Activities.ActivityDelegate.ShouldSerializeDisplayName
  - System.Activities.ActivityDelegate.ToString
  platform:
  - net462
- uid: System.Activities.ActivityAction`4.#ctor
  id: '#ctor'
  parent: System.Activities.ActivityAction`4
  langs:
  - csharp
  name: ActivityAction()
  nameWithType: ActivityAction<T1,T2,T3,T4>.ActivityAction()
  fullName: System.Activities.ActivityAction<T1,T2,T3,T4>.ActivityAction()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: public ActivityAction ();
    parameters: []
  overload: System.Activities.ActivityAction`4.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityAction`4.Argument1
  id: Argument1
  parent: System.Activities.ActivityAction`4
  langs:
  - csharp
  name: Argument1
  nameWithType: ActivityAction<T1,T2,T3,T4>.Argument1
  fullName: System.Activities.ActivityAction<T1,T2,T3,T4>.Argument1
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: public System.Activities.DelegateInArgument<T1> Argument1 { get; set; }
    return:
      type: System.Activities.DelegateInArgument{T1}
      description: "To be added."
  overload: System.Activities.ActivityAction`4.Argument1*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityAction`4.Argument2
  id: Argument2
  parent: System.Activities.ActivityAction`4
  langs:
  - csharp
  name: Argument2
  nameWithType: ActivityAction<T1,T2,T3,T4>.Argument2
  fullName: System.Activities.ActivityAction<T1,T2,T3,T4>.Argument2
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: public System.Activities.DelegateInArgument<T2> Argument2 { get; set; }
    return:
      type: System.Activities.DelegateInArgument{T2}
      description: "To be added."
  overload: System.Activities.ActivityAction`4.Argument2*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityAction`4.Argument3
  id: Argument3
  parent: System.Activities.ActivityAction`4
  langs:
  - csharp
  name: Argument3
  nameWithType: ActivityAction<T1,T2,T3,T4>.Argument3
  fullName: System.Activities.ActivityAction<T1,T2,T3,T4>.Argument3
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: public System.Activities.DelegateInArgument<T3> Argument3 { get; set; }
    return:
      type: System.Activities.DelegateInArgument{T3}
      description: "To be added."
  overload: System.Activities.ActivityAction`4.Argument3*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityAction`4.Argument4
  id: Argument4
  parent: System.Activities.ActivityAction`4
  langs:
  - csharp
  name: Argument4
  nameWithType: ActivityAction<T1,T2,T3,T4>.Argument4
  fullName: System.Activities.ActivityAction<T1,T2,T3,T4>.Argument4
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  syntax:
    content: public System.Activities.DelegateInArgument<T4> Argument4 { get; set; }
    return:
      type: System.Activities.DelegateInArgument{T4}
      description: "To be added."
  overload: System.Activities.ActivityAction`4.Argument4*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Activities.ActivityDelegate
  isExternal: false
  name: System.Activities.ActivityDelegate
- uid: System.Activities.ActivityAction`4.#ctor
  parent: System.Activities.ActivityAction`4
  isExternal: false
  name: ActivityAction()
  nameWithType: ActivityAction<T1,T2,T3,T4>.ActivityAction()
  fullName: System.Activities.ActivityAction<T1,T2,T3,T4>.ActivityAction()
- uid: System.Activities.ActivityAction`4.Argument1
  parent: System.Activities.ActivityAction`4
  isExternal: false
  name: Argument1
  nameWithType: ActivityAction<T1,T2,T3,T4>.Argument1
  fullName: System.Activities.ActivityAction<T1,T2,T3,T4>.Argument1
- uid: System.Activities.DelegateInArgument{T1}
  parent: System.Activities
  isExternal: false
  name: DelegateInArgument<T1>
  nameWithType: DelegateInArgument<T1>
  fullName: System.Activities.DelegateInArgument<T1>
  spec.csharp:
  - uid: System.Activities.DelegateInArgument`1
    name: DelegateInArgument
    nameWithType: DelegateInArgument
    fullName: DelegateInArgument<T1>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T1
    name: T1
    nameWithType: T1
    fullName: T1
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.ActivityAction`4.Argument2
  parent: System.Activities.ActivityAction`4
  isExternal: false
  name: Argument2
  nameWithType: ActivityAction<T1,T2,T3,T4>.Argument2
  fullName: System.Activities.ActivityAction<T1,T2,T3,T4>.Argument2
- uid: System.Activities.DelegateInArgument{T2}
  parent: System.Activities
  isExternal: false
  name: DelegateInArgument<T2>
  nameWithType: DelegateInArgument<T2>
  fullName: System.Activities.DelegateInArgument<T2>
  spec.csharp:
  - uid: System.Activities.DelegateInArgument`1
    name: DelegateInArgument
    nameWithType: DelegateInArgument
    fullName: DelegateInArgument<T2>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T2
    name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.ActivityAction`4.Argument3
  parent: System.Activities.ActivityAction`4
  isExternal: false
  name: Argument3
  nameWithType: ActivityAction<T1,T2,T3,T4>.Argument3
  fullName: System.Activities.ActivityAction<T1,T2,T3,T4>.Argument3
- uid: System.Activities.DelegateInArgument{T3}
  parent: System.Activities
  isExternal: false
  name: DelegateInArgument<T3>
  nameWithType: DelegateInArgument<T3>
  fullName: System.Activities.DelegateInArgument<T3>
  spec.csharp:
  - uid: System.Activities.DelegateInArgument`1
    name: DelegateInArgument
    nameWithType: DelegateInArgument
    fullName: DelegateInArgument<T3>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T3
    name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.ActivityAction`4.Argument4
  parent: System.Activities.ActivityAction`4
  isExternal: false
  name: Argument4
  nameWithType: ActivityAction<T1,T2,T3,T4>.Argument4
  fullName: System.Activities.ActivityAction<T1,T2,T3,T4>.Argument4
- uid: System.Activities.DelegateInArgument{T4}
  parent: System.Activities
  isExternal: false
  name: DelegateInArgument<T4>
  nameWithType: DelegateInArgument<T4>
  fullName: System.Activities.DelegateInArgument<T4>
  spec.csharp:
  - uid: System.Activities.DelegateInArgument`1
    name: DelegateInArgument
    nameWithType: DelegateInArgument
    fullName: DelegateInArgument<T4>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T4
    name: T4
    nameWithType: T4
    fullName: T4
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.ActivityAction`4.#ctor*
  parent: System.Activities.ActivityAction`4
  isExternal: false
  name: ActivityAction<T1,T2,T3,T4>
  nameWithType: ActivityAction<T1,T2,T3,T4>.ActivityAction<T1,T2,T3,T4>
- uid: System.Activities.ActivityAction`4.Argument1*
  parent: System.Activities.ActivityAction`4
  isExternal: false
  name: Argument1
  nameWithType: ActivityAction<T1,T2,T3,T4>.Argument1
- uid: System.Activities.ActivityAction`4.Argument2*
  parent: System.Activities.ActivityAction`4
  isExternal: false
  name: Argument2
  nameWithType: ActivityAction<T1,T2,T3,T4>.Argument2
- uid: System.Activities.ActivityAction`4.Argument3*
  parent: System.Activities.ActivityAction`4
  isExternal: false
  name: Argument3
  nameWithType: ActivityAction<T1,T2,T3,T4>.Argument3
- uid: System.Activities.ActivityAction`4.Argument4*
  parent: System.Activities.ActivityAction`4
  isExternal: false
  name: Argument4
  nameWithType: ActivityAction<T1,T2,T3,T4>.Argument4
