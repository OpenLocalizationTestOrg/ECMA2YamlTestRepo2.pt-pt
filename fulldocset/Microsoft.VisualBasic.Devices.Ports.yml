### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Devices.Ports
  id: Ports
  children:
  - Microsoft.VisualBasic.Devices.Ports.#ctor
  - Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String)
  - Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32)
  - Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity)
  - Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)
  - Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)
  - Microsoft.VisualBasic.Devices.Ports.SerialPortNames
  langs:
  - csharp
  name: Ports
  nameWithType: Ports
  fullName: Microsoft.VisualBasic.Devices.Ports
  type: Class
  summary: "Provides a property and a method for accessing the computer&quot;s serial ports."
  remarks: "The `My.Computer.Ports` object provides a straightforward entry point for accessing the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] serial port class, <xref:System.IO.Ports.SerialPort>.       The following table lists examples of tasks involving the `My.Computer.Ports` object.      |||   |-|-|   |To|See|   |Dial a modem attached to a serial port|[How to: Dial Modems Attached to Serial Ports](../Topic/How%20to:%20Dial%20Modems%20Attached%20to%20Serial%20Ports%20in%20Visual%20Basic.md)|   |Send a string to a serial port|[How to: Send Strings to Serial Ports](../Topic/How%20to:%20Send%20Strings%20to%20Serial%20Ports%20in%20Visual%20Basic.md)|   |Receive strings from a serial port|[How to: Receive Strings From Serial Ports](../Topic/How%20to:%20Receive%20Strings%20From%20Serial%20Ports%20in%20Visual%20Basic.md)|   |Show available serial ports|[How to: Show Available Serial Ports](../Topic/How%20to:%20Show%20Available%20Serial%20Ports%20in%20Visual%20Basic.md)|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"
  example:
  - "This example describes how to send strings to the computer's `COM1` serial port.  \n  \n The `Using` block allows the application to close the serial port even if it generates an exception. All code that manipulates the serial port should appear within this block, or within a `Try...Catch...Finally` block with a call to use the <xref:System.IO.Ports.SerialPort.Close%2A> method.  \n  \n The <xref:System.IO.Ports.SerialPort.WriteLine%2A> method sends the data to the serial port.  \n  \n [!code-vb[VbVbalrMyComputer#33](~/add/codesnippet/VisualBasic/VbVbalrMyComputer/Class2.vb#33)]  \n  \n For more information, see [How to: Send Strings to Serial Ports](../Topic/How%20to:%20Send%20Strings%20to%20Serial%20Ports%20in%20Visual%20Basic.md)."
  syntax:
    content: public class Ports
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.Devices.Ports.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.Devices.Ports
  langs:
  - csharp
  name: Ports()
  nameWithType: Ports.Ports()
  fullName: Microsoft.VisualBasic.Devices.Ports.Ports()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Initializes a new instance of the <see cref=&quot;T:Microsoft.VisualBasic.Devices.Ports&quot;></see> class."
  syntax:
    content: public Ports ();
    parameters: []
  overload: Microsoft.VisualBasic.Devices.Ports.#ctor*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String)
  id: OpenSerialPort(System.String)
  parent: Microsoft.VisualBasic.Devices.Ports
  langs:
  - csharp
  name: OpenSerialPort(String)
  nameWithType: Ports.OpenSerialPort(String)
  fullName: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Creates and opens a <see cref=&quot;T:System.IO.Ports.SerialPort&quot;></see> object."
  remarks: "The `My.Computer.Ports.OpenSerialPort` method creates and opens a <xref:System.IO.Ports.SerialPort> object. The arguments to the `OpenSerialPort` method determine the settings of the <xref:System.IO.Ports.SerialPort> object.       Your code should close the <xref:System.IO.Ports.SerialPort> object when it is finished using the object. You can use the <xref:System.IO.Ports.SerialPort.Close%2A> method to close the object explicitly or the `Using` statement to close it implicitly. See the example in this topic for more information.       The following table lists examples of tasks involving the `My.Computer.Ports.OpenSerialPort` method.      |||   |-|-|   |To|See|   |Dial a modem attached to a serial port|[How to: Dial Modems Attached to Serial Ports](../Topic/How%20to:%20Dial%20Modems%20Attached%20to%20Serial%20Ports%20in%20Visual%20Basic.md)|   |Send a string to serial port|[How to: Send Strings to Serial Ports](../Topic/How%20to:%20Send%20Strings%20to%20Serial%20Ports%20in%20Visual%20Basic.md)|   |Receive strings from a serial port|[How to: Receive Strings From Serial Ports](../Topic/How%20to:%20Receive%20Strings%20From%20Serial%20Ports%20in%20Visual%20Basic.md)|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"
  example:
  - "This example describes how to send strings to the computer's `COM1` serial port.  \n  \n The `Using` block allows the application to close the serial port even if it generates an exception. All code that manipulates the serial port should appear within this block, or within a `Try...Catch...Finally` block with a call to use the <xref:System.IO.Ports.SerialPort.Close%2A> method.  \n  \n The <xref:System.IO.Ports.SerialPort.WriteLine%2A> method sends the data to the serial port.  \n  \n [!code-vb[VbVbalrMyComputer#33](~/add/codesnippet/VisualBasic/VbVbalrMyComputer/Class2.vb#33)]  \n  \n For more information, see [How to: Send Strings to Serial Ports](../Topic/How%20to:%20Send%20Strings%20to%20Serial%20Ports%20in%20Visual%20Basic.md)."
  syntax:
    content: public System.IO.Ports.SerialPort OpenSerialPort (string portName);
    parameters:
    - id: portName
      type: System.String
      description: "\n    . Required. Name of the port to open."
    return:
      type: System.IO.Ports.SerialPort
      description: "To be added."
  overload: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n    portName is  or an empty string."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32)
  id: OpenSerialPort(System.String,System.Int32)
  parent: Microsoft.VisualBasic.Devices.Ports
  langs:
  - csharp
  name: OpenSerialPort(String,Int32)
  nameWithType: Ports.OpenSerialPort(String,Int32)
  fullName: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(String,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Creates and opens a <see cref=&quot;T:System.IO.Ports.SerialPort&quot;></see> object."
  remarks: "The `My.Computer.Ports.OpenSerialPort` method creates and opens a <xref:System.IO.Ports.SerialPort> object. The arguments to the `OpenSerialPort` method determine the settings of the <xref:System.IO.Ports.SerialPort> object.       Your code should close the <xref:System.IO.Ports.SerialPort> object when it is finished using the object. You can use the <xref:System.IO.Ports.SerialPort.Close%2A> method to close the object explicitly or the `Using` statement to close it implicitly. See the example in this topic for more information.       The following table lists examples of tasks involving the `My.Computer.Ports.OpenSerialPort` method.      |||   |-|-|   |To|See|   |Dial a modem attached to a serial port|[How to: Dial Modems Attached to Serial Ports](../Topic/How%20to:%20Dial%20Modems%20Attached%20to%20Serial%20Ports%20in%20Visual%20Basic.md)|   |Send a string to serial port|[How to: Send Strings to Serial Ports](../Topic/How%20to:%20Send%20Strings%20to%20Serial%20Ports%20in%20Visual%20Basic.md)|   |Receive strings from a serial port|[How to: Receive Strings From Serial Ports](../Topic/How%20to:%20Receive%20Strings%20From%20Serial%20Ports%20in%20Visual%20Basic.md)|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"
  example:
  - "This example describes how to send strings to the computer's `COM1` serial port.  \n  \n The `Using` block allows the application to close the serial port even if it generates an exception. All code that manipulates the serial port should appear within this block, or within a `Try...Catch...Finally` block with a call to use the <xref:System.IO.Ports.SerialPort.Close%2A> method.  \n  \n The <xref:System.IO.Ports.SerialPort.WriteLine%2A> method sends the data to the serial port.  \n  \n [!code-vb[VbVbalrMyComputer#33](~/add/codesnippet/VisualBasic/VbVbalrMyComputer/Class2.vb#33)]  \n  \n For more information, see [How to: Send Strings to Serial Ports](../Topic/How%20to:%20Send%20Strings%20to%20Serial%20Ports%20in%20Visual%20Basic.md)."
  syntax:
    content: public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate);
    parameters:
    - id: portName
      type: System.String
      description: "\n    . Required. Name of the port to open."
    - id: baudRate
      type: System.Int32
      description: "\n    . Baud rate of the port."
    return:
      type: System.IO.Ports.SerialPort
      description: "To be added."
  overload: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n    portName is  or an empty string."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n    baudRate is less than or equal to zero."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity)
  id: OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity)
  parent: Microsoft.VisualBasic.Devices.Ports
  langs:
  - csharp
  name: OpenSerialPort(String,Int32,Parity)
  nameWithType: Ports.OpenSerialPort(String,Int32,Parity)
  fullName: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(String,Int32,Parity)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Creates and opens a <see cref=&quot;T:System.IO.Ports.SerialPort&quot;></see> object."
  remarks: "The `My.Computer.Ports.OpenSerialPort` method creates and opens a <xref:System.IO.Ports.SerialPort> object. The arguments to the `OpenSerialPort` method determine the settings of the <xref:System.IO.Ports.SerialPort> object.       Your code should close the <xref:System.IO.Ports.SerialPort> object when it is finished using the object. You can use the <xref:System.IO.Ports.SerialPort.Close%2A> method to close the object explicitly or the `Using` statement to close it implicitly. See the example in this topic for more information.       The following table lists examples of tasks involving the `My.Computer.Ports.OpenSerialPort` method.      |||   |-|-|   |To|See|   |Dial a modem attached to a serial port|[How to: Dial Modems Attached to Serial Ports](../Topic/How%20to:%20Dial%20Modems%20Attached%20to%20Serial%20Ports%20in%20Visual%20Basic.md)|   |Send a string to serial port|[How to: Send Strings to Serial Ports](../Topic/How%20to:%20Send%20Strings%20to%20Serial%20Ports%20in%20Visual%20Basic.md)|   |Receive strings from a serial port|[How to: Receive Strings From Serial Ports](../Topic/How%20to:%20Receive%20Strings%20From%20Serial%20Ports%20in%20Visual%20Basic.md)|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"
  example:
  - "This example describes how to send strings to the computer's `COM1` serial port.  \n  \n The `Using` block allows the application to close the serial port even if it generates an exception. All code that manipulates the serial port should appear within this block, or within a `Try...Catch...Finally` block with a call to use the <xref:System.IO.Ports.SerialPort.Close%2A> method.  \n  \n The <xref:System.IO.Ports.SerialPort.WriteLine%2A> method sends the data to the serial port.  \n  \n [!code-vb[VbVbalrMyComputer#33](~/add/codesnippet/VisualBasic/VbVbalrMyComputer/Class2.vb#33)]  \n  \n For more information, see [How to: Send Strings to Serial Ports](../Topic/How%20to:%20Send%20Strings%20to%20Serial%20Ports%20in%20Visual%20Basic.md)."
  syntax:
    content: public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate, System.IO.Ports.Parity parity);
    parameters:
    - id: portName
      type: System.String
      description: "\n    . Required. Name of the port to open."
    - id: baudRate
      type: System.Int32
      description: "\n    . Baud rate of the port."
    - id: parity
      type: System.IO.Ports.Parity
      description: "\n    . Parity of the port."
    return:
      type: System.IO.Ports.SerialPort
      description: "To be added."
  overload: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n    portName is  or an empty string."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n    baudRate is less than or equal to zero."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "\n    parity is not one of the  enumeration values."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)
  id: OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)
  parent: Microsoft.VisualBasic.Devices.Ports
  langs:
  - csharp
  name: OpenSerialPort(String,Int32,Parity,Int32)
  nameWithType: Ports.OpenSerialPort(String,Int32,Parity,Int32)
  fullName: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(String,Int32,Parity,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Creates and opens a <see cref=&quot;T:System.IO.Ports.SerialPort&quot;></see> object."
  remarks: "The `My.Computer.Ports.OpenSerialPort` method creates and opens a <xref:System.IO.Ports.SerialPort> object. The arguments to the `OpenSerialPort` method determine the settings of the <xref:System.IO.Ports.SerialPort> object.       Your code should close the <xref:System.IO.Ports.SerialPort> object when it is finished using the object. You can use the <xref:System.IO.Ports.SerialPort.Close%2A> method to close the object explicitly or the `Using` statement to close it implicitly. See the example in this topic for more information.       The following table lists examples of tasks involving the `My.Computer.Ports.OpenSerialPort` method.      |||   |-|-|   |To|See|   |Dial a modem attached to a serial port|[How to: Dial Modems Attached to Serial Ports](../Topic/How%20to:%20Dial%20Modems%20Attached%20to%20Serial%20Ports%20in%20Visual%20Basic.md)|   |Send a string to serial port|[How to: Send Strings to Serial Ports](../Topic/How%20to:%20Send%20Strings%20to%20Serial%20Ports%20in%20Visual%20Basic.md)|   |Receive strings from a serial port|[How to: Receive Strings From Serial Ports](../Topic/How%20to:%20Receive%20Strings%20From%20Serial%20Ports%20in%20Visual%20Basic.md)|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"
  example:
  - "This example describes how to send strings to the computer's `COM1` serial port.  \n  \n The `Using` block allows the application to close the serial port even if it generates an exception. All code that manipulates the serial port should appear within this block, or within a `Try...Catch...Finally` block with a call to use the <xref:System.IO.Ports.SerialPort.Close%2A> method.  \n  \n The <xref:System.IO.Ports.SerialPort.WriteLine%2A> method sends the data to the serial port.  \n  \n [!code-vb[VbVbalrMyComputer#33](~/add/codesnippet/VisualBasic/VbVbalrMyComputer/Class2.vb#33)]  \n  \n For more information, see [How to: Send Strings to Serial Ports](../Topic/How%20to:%20Send%20Strings%20to%20Serial%20Ports%20in%20Visual%20Basic.md)."
  syntax:
    content: public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits);
    parameters:
    - id: portName
      type: System.String
      description: "\n    . Required. Name of the port to open."
    - id: baudRate
      type: System.Int32
      description: "\n    . Baud rate of the port."
    - id: parity
      type: System.IO.Ports.Parity
      description: "\n    . Parity of the port."
    - id: dataBits
      type: System.Int32
      description: "\n    . Data-bit setting of the port."
    return:
      type: System.IO.Ports.SerialPort
      description: "To be added."
  overload: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n    portName is  or an empty string."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n    dataBits is less than or equal to zero."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "\n    parity is not one of the  enumeration values."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)
  id: OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)
  parent: Microsoft.VisualBasic.Devices.Ports
  langs:
  - csharp
  name: OpenSerialPort(String,Int32,Parity,Int32,StopBits)
  nameWithType: Ports.OpenSerialPort(String,Int32,Parity,Int32,StopBits)
  fullName: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(String,Int32,Parity,Int32,StopBits)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Creates and opens a <see cref=&quot;T:System.IO.Ports.SerialPort&quot;></see> object."
  remarks: "The `My.Computer.Ports.OpenSerialPort` method creates and opens a <xref:System.IO.Ports.SerialPort> object. The arguments to the `OpenSerialPort` method determine the settings of the <xref:System.IO.Ports.SerialPort> object.       Your code should close the <xref:System.IO.Ports.SerialPort> object when it is finished using the object. You can use the <xref:System.IO.Ports.SerialPort.Close%2A> method to close the object explicitly or the `Using` statement to close it implicitly. See the example in this topic for more information.       The following table lists examples of tasks involving the `My.Computer.Ports.OpenSerialPort` method.      |||   |-|-|   |To|See|   |Dial a modem attached to a serial port|[How to: Dial Modems Attached to Serial Ports](../Topic/How%20to:%20Dial%20Modems%20Attached%20to%20Serial%20Ports%20in%20Visual%20Basic.md)|   |Send a string to serial port|[How to: Send Strings to Serial Ports](../Topic/How%20to:%20Send%20Strings%20to%20Serial%20Ports%20in%20Visual%20Basic.md)|   |Receive strings from a serial port|[How to: Receive Strings From Serial Ports](../Topic/How%20to:%20Receive%20Strings%20From%20Serial%20Ports%20in%20Visual%20Basic.md)|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"
  example:
  - "This example describes how to send strings to the computer's `COM1` serial port.  \n  \n The `Using` block allows the application to close the serial port even if it generates an exception. All code that manipulates the serial port should appear within this block, or within a `Try...Catch...Finally` block with a call to use the <xref:System.IO.Ports.SerialPort.Close%2A> method.  \n  \n The <xref:System.IO.Ports.SerialPort.WriteLine%2A> method sends the data to the serial port.  \n  \n [!code-vb[VbVbalrMyComputer#33](~/add/codesnippet/VisualBasic/VbVbalrMyComputer/Class2.vb#33)]  \n  \n For more information, see [How to: Send Strings to Serial Ports](../Topic/How%20to:%20Send%20Strings%20to%20Serial%20Ports%20in%20Visual%20Basic.md)."
  syntax:
    content: public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits, System.IO.Ports.StopBits stopBits);
    parameters:
    - id: portName
      type: System.String
      description: "\n    . Required. Name of the port to open."
    - id: baudRate
      type: System.Int32
      description: "\n    . Baud rate of the port."
    - id: parity
      type: System.IO.Ports.Parity
      description: "\n    . Parity of the port."
    - id: dataBits
      type: System.Int32
      description: "\n    . Data-bit setting of the port."
    - id: stopBits
      type: System.IO.Ports.StopBits
      description: "\n    . Stop-bit setting of the port."
    return:
      type: System.IO.Ports.SerialPort
      description: "To be added."
  overload: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\n    portName is  or an empty string."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n    dataBits is less than or equal to zero."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "\n    stopBits is not one of the  enumeration values."
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.VisualBasic.Devices.Ports.SerialPortNames
  id: SerialPortNames
  parent: Microsoft.VisualBasic.Devices.Ports
  langs:
  - csharp
  name: SerialPortNames
  nameWithType: Ports.SerialPortNames
  fullName: Microsoft.VisualBasic.Devices.Ports.SerialPortNames
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Gets a collection of the names of the serial ports on the computer."
  remarks: "The `My.Computer.Ports.SerialPortNames` property gets a collection of the names of the serial ports on the computer.      > [!NOTE] >  The port names returned by `My.Computer.Ports.SerialPortNames` may be incorrect when run on Windows 98. To prevent application errors, use exception handling, such as the `Try...Catch...Finally` statement or the `Using` statement, when using the port names to open ports.       The following table lists an example of a task involving the `My.Computer.Ports.SerialPortNames` property.      |||   |-|-|   |To|See|   |Show available serial ports|[How to: Show Available Serial Ports](../Topic/How%20to:%20Show%20Available%20Serial%20Ports%20in%20Visual%20Basic.md)|      ## Availability by Project Type      |||   |-|-|   |Project type|Available|   |Windows Application|**Yes**|   |Class Library|**Yes**|   |Console Application|**Yes**|   |Windows Control Library|**Yes**|   |Web Control Library|No|   |Windows Service|**Yes**|   |Web Site|No|"
  example:
  - "This example loops over all the strings that the `My.Computer.Ports.SerialPortNames` property returns. These strings are the names of the available serial ports on the computer.  \n  \n Typically, a user selects which serial port the application should use from the list of available ports. In this example, the serial port names are stored in a <xref:System.Windows.Forms.ListBox> control. For more information, see [ListBox Control](../Topic/ListBox%20Control%20\\(Windows%20Forms\\).md).  \n  \n [!code-vb[VbVbalrMyComputer#45](~/add/codesnippet/VisualBasic/VbVbalrMyComputer/Class2.vb#45)]  \n  \n This example requires:  \n  \n-   A reference to the <xref:System?displayProperty=fullName> namespace.  \n  \n-   That your form have a <xref:System.Windows.Forms.ListBox> control named `ListBox1`.  \n  \n For more information, see [How to: Show Available Serial Ports](../Topic/How%20to:%20Show%20Available%20Serial%20Ports%20in%20Visual%20Basic.md)."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<string> SerialPortNames { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "A collection of the names of the serial ports on the computer."
  overload: Microsoft.VisualBasic.Devices.Ports.SerialPortNames*
  exceptions: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: Microsoft.VisualBasic.Devices.Ports.#ctor
  parent: Microsoft.VisualBasic.Devices.Ports
  isExternal: false
  name: Ports()
  nameWithType: Ports.Ports()
  fullName: Microsoft.VisualBasic.Devices.Ports.Ports()
- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String)
  parent: Microsoft.VisualBasic.Devices.Ports
  isExternal: false
  name: OpenSerialPort(String)
  nameWithType: Ports.OpenSerialPort(String)
  fullName: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(String)
- uid: System.IO.Ports.SerialPort
  parent: System.IO.Ports
  isExternal: false
  name: SerialPort
  nameWithType: SerialPort
  fullName: System.IO.Ports.SerialPort
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32)
  parent: Microsoft.VisualBasic.Devices.Ports
  isExternal: false
  name: OpenSerialPort(String,Int32)
  nameWithType: Ports.OpenSerialPort(String,Int32)
  fullName: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(String,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity)
  parent: Microsoft.VisualBasic.Devices.Ports
  isExternal: false
  name: OpenSerialPort(String,Int32,Parity)
  nameWithType: Ports.OpenSerialPort(String,Int32,Parity)
  fullName: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(String,Int32,Parity)
- uid: System.IO.Ports.Parity
  parent: System.IO.Ports
  isExternal: false
  name: Parity
  nameWithType: Parity
  fullName: System.IO.Ports.Parity
- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)
  parent: Microsoft.VisualBasic.Devices.Ports
  isExternal: false
  name: OpenSerialPort(String,Int32,Parity,Int32)
  nameWithType: Ports.OpenSerialPort(String,Int32,Parity,Int32)
  fullName: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(String,Int32,Parity,Int32)
- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)
  parent: Microsoft.VisualBasic.Devices.Ports
  isExternal: false
  name: OpenSerialPort(String,Int32,Parity,Int32,StopBits)
  nameWithType: Ports.OpenSerialPort(String,Int32,Parity,Int32,StopBits)
  fullName: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(String,Int32,Parity,Int32,StopBits)
- uid: System.IO.Ports.StopBits
  parent: System.IO.Ports
  isExternal: false
  name: StopBits
  nameWithType: StopBits
  fullName: System.IO.Ports.StopBits
- uid: Microsoft.VisualBasic.Devices.Ports.SerialPortNames
  parent: Microsoft.VisualBasic.Devices.Ports
  isExternal: false
  name: SerialPortNames
  nameWithType: Ports.SerialPortNames
  fullName: Microsoft.VisualBasic.Devices.Ports.SerialPortNames
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<String>
  nameWithType: ReadOnlyCollection<String>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.String>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.VisualBasic.Devices.Ports.#ctor*
  parent: Microsoft.VisualBasic.Devices.Ports
  isExternal: false
  name: Ports
  nameWithType: Ports.Ports
- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort*
  parent: Microsoft.VisualBasic.Devices.Ports
  isExternal: false
  name: OpenSerialPort
  nameWithType: Ports.OpenSerialPort
- uid: Microsoft.VisualBasic.Devices.Ports.SerialPortNames*
  parent: Microsoft.VisualBasic.Devices.Ports
  isExternal: false
  name: SerialPortNames
  nameWithType: Ports.SerialPortNames
