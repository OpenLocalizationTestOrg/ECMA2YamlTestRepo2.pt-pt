### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Devices.Ports
  id: Ports
  children:
  - Microsoft.VisualBasic.Devices.Ports.#ctor
  - Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String)
  - Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32)
  - Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity)
  - Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)
  - Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)
  - Microsoft.VisualBasic.Devices.Ports.SerialPortNames
  langs:
  - csharp
  name: Ports
  nameWithType: Ports
  fullName: Microsoft.VisualBasic.Devices.Ports
  type: Class
  summary: "Fornece uma propriedade e um método para aceder a portas série do computador."
  remarks: "O `My.Computer.Ports` objeto fornece um ponto de entrada simples para aceder a [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] classe de porta série, <xref:System.IO.Ports.SerialPort>.</xref:System.IO.Ports.SerialPort>       A tabela seguinte lista os exemplos de tarefas que envolvem o `My.Computer.Ports` objeto.      |||   |-|-|   | Para | Consulte |   | Marcar um modem anexado a uma porta série | [Como: Marcar Modems ligados a portas série](~/add/includes/ajax-current-ext-md.md)|   | Enviar uma cadeia para uma porta série | [Como: enviar cadeias a portas série](~/add/includes/ajax-current-ext-md.md)|   | Receber cadeias de uma porta série | [Como: receber cadeias de portas série](~/add/includes/ajax-current-ext-md.md)|   | Mostrar a portas série disponíveis | [Como: Mostrar portas série disponíveis](~/add/includes/ajax-current-ext-md.md)|      # # Disponibilidade por tipo de projeto |||   |-|-|   | O tipo de projeto | Disponível |   | Aplicação do Windows | **Yes**|   | Biblioteca de classe | **Yes**|   | Aplicação de consola | **Yes**|   | Biblioteca de controlo do Windows | **Yes**|   | Biblioteca de controlo de Web | Não |   | Serviço do Windows | **Yes**|   | Web Site | Não |"
  example:
  - "This example describes how to send strings to the computer's `COM1` serial port.  \n  \n The `Using` block allows the application to close the serial port even if it generates an exception. All code that manipulates the serial port should appear within this block, or within a `Try...Catch...Finally` block with a call to use the <xref:System.IO.Ports.SerialPort.Close%2A> method.  \n  \n The <xref:System.IO.Ports.SerialPort.WriteLine%2A> method sends the data to the serial port.  \n  \n [!code-vb[VbVbalrMyComputer#33](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#33)]  \n  \n For more information, see [How to: Send Strings to Serial Ports](../Topic/How%20to:%20Send%20Strings%20to%20Serial%20Ports%20in%20Visual%20Basic.md)."
  syntax:
    content: public class Ports
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Ports.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.Devices.Ports
  langs:
  - csharp
  name: Ports()
  nameWithType: Ports.Ports()
  fullName: Microsoft.VisualBasic.Devices.Ports.Ports()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Inicializa uma nova instância do <xref href=&quot;Microsoft.VisualBasic.Devices.Ports&quot;> </xref> classe."
  syntax:
    content: public Ports ();
    parameters: []
  overload: Microsoft.VisualBasic.Devices.Ports.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String)
  id: OpenSerialPort(System.String)
  parent: Microsoft.VisualBasic.Devices.Ports
  langs:
  - csharp
  name: OpenSerialPort(String)
  nameWithType: Ports.OpenSerialPort(String)
  fullName: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Cria e abre um <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> objeto."
  remarks: "O `My.Computer.Ports.OpenSerialPort` método cria e abre um <xref:System.IO.Ports.SerialPort>objeto.</xref:System.IO.Ports.SerialPort> Os argumentos para o `OpenSerialPort` método determinar as definições do <xref:System.IO.Ports.SerialPort>objeto.</xref:System.IO.Ports.SerialPort>       O código deve fechar o <xref:System.IO.Ports.SerialPort>Quando terminar de objeto utilizando o objeto.</xref:System.IO.Ports.SerialPort> Pode utilizar o <xref:System.IO.Ports.SerialPort.Close%2A>método para fechar o objeto explicitamente ou `Using` declaração de para fechá-lo implicitamente.</xref:System.IO.Ports.SerialPort.Close%2A> Consulte o exemplo neste tópico para obter mais informações.       A tabela seguinte lista os exemplos de tarefas que envolvem o `My.Computer.Ports.OpenSerialPort` método.      |||   |-|-|   | Para | Consulte |   | Marcar um modem anexado a uma porta série | [Como: Marcar Modems ligados a portas série](~/add/includes/ajax-current-ext-md.md)|   | Enviar uma cadeia para a porta série | [Como: enviar cadeias a portas série](~/add/includes/ajax-current-ext-md.md)|   | Receber cadeias de uma porta série | [Como: receber cadeias de portas série](~/add/includes/ajax-current-ext-md.md)|      # # Disponibilidade por tipo de projeto |||   |-|-|   | O tipo de projeto | Disponível |   | Aplicação do Windows | **Yes**|   | Biblioteca de classe | **Yes**|   | Aplicação de consola | **Yes**|   | Biblioteca de controlo do Windows | **Yes**|   | Biblioteca de controlo de Web | Não |   | Serviço do Windows | **Yes**|   | Web Site | Não |"
  example:
  - "This example describes how to send strings to the computer's `COM1` serial port.  \n  \n The `Using` block allows the application to close the serial port even if it generates an exception. All code that manipulates the serial port should appear within this block, or within a `Try...Catch...Finally` block with a call to use the <xref:System.IO.Ports.SerialPort.Close%2A> method.  \n  \n The <xref:System.IO.Ports.SerialPort.WriteLine%2A> method sends the data to the serial port.  \n  \n [!code-vb[VbVbalrMyComputer#33](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#33)]  \n  \n For more information, see [How to: Send Strings to Serial Ports](../Topic/How%20to:%20Send%20Strings%20to%20Serial%20Ports%20in%20Visual%20Basic.md)."
  syntax:
    content: public System.IO.Ports.SerialPort OpenSerialPort (string portName);
    parameters:
    - id: portName
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Necessário. Nome da porta para abrir."
    return:
      type: System.IO.Ports.SerialPort
      description: "Uma abertura <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> objeto, configurado com os argumentos fornecidos."
  overload: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>portName</code>é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia vazia."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32)
  id: OpenSerialPort(System.String,System.Int32)
  parent: Microsoft.VisualBasic.Devices.Ports
  langs:
  - csharp
  name: OpenSerialPort(String,Int32)
  nameWithType: Ports.OpenSerialPort(String,Int32)
  fullName: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(String,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Cria e abre um <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> objeto."
  remarks: "O `My.Computer.Ports.OpenSerialPort` método cria e abre um <xref:System.IO.Ports.SerialPort>objeto.</xref:System.IO.Ports.SerialPort> Os argumentos para o `OpenSerialPort` método determinar as definições do <xref:System.IO.Ports.SerialPort>objeto.</xref:System.IO.Ports.SerialPort>       O código deve fechar o <xref:System.IO.Ports.SerialPort>Quando terminar de objeto utilizando o objeto.</xref:System.IO.Ports.SerialPort> Pode utilizar o <xref:System.IO.Ports.SerialPort.Close%2A>método para fechar o objeto explicitamente ou `Using` declaração de para fechá-lo implicitamente.</xref:System.IO.Ports.SerialPort.Close%2A> Consulte o exemplo neste tópico para obter mais informações.       A tabela seguinte lista os exemplos de tarefas que envolvem o `My.Computer.Ports.OpenSerialPort` método.      |||   |-|-|   | Para | Consulte |   | Marcar um modem anexado a uma porta série | [Como: Marcar Modems ligados a portas série](~/add/includes/ajax-current-ext-md.md)|   | Enviar uma cadeia para a porta série | [Como: enviar cadeias a portas série](~/add/includes/ajax-current-ext-md.md)|   | Receber cadeias de uma porta série | [Como: receber cadeias de portas série](~/add/includes/ajax-current-ext-md.md)|      # # Disponibilidade por tipo de projeto |||   |-|-|   | O tipo de projeto | Disponível |   | Aplicação do Windows | **Yes**|   | Biblioteca de classe | **Yes**|   | Aplicação de consola | **Yes**|   | Biblioteca de controlo do Windows | **Yes**|   | Biblioteca de controlo de Web | Não |   | Serviço do Windows | **Yes**|   | Web Site | Não |"
  example:
  - "This example describes how to send strings to the computer's `COM1` serial port.  \n  \n The `Using` block allows the application to close the serial port even if it generates an exception. All code that manipulates the serial port should appear within this block, or within a `Try...Catch...Finally` block with a call to use the <xref:System.IO.Ports.SerialPort.Close%2A> method.  \n  \n The <xref:System.IO.Ports.SerialPort.WriteLine%2A> method sends the data to the serial port.  \n  \n [!code-vb[VbVbalrMyComputer#33](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#33)]  \n  \n For more information, see [How to: Send Strings to Serial Ports](../Topic/How%20to:%20Send%20Strings%20to%20Serial%20Ports%20in%20Visual%20Basic.md)."
  syntax:
    content: public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate);
    parameters:
    - id: portName
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Necessário. Nome da porta para abrir."
    - id: baudRate
      type: System.Int32
      description: "<xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>. Velocidade de transmissão da porta."
    return:
      type: System.IO.Ports.SerialPort
      description: "Uma abertura <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> objeto, configurado com os argumentos fornecidos."
  overload: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>portName</code>é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia vazia."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>baudRate</code>é menor ou igual a zero."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity)
  id: OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity)
  parent: Microsoft.VisualBasic.Devices.Ports
  langs:
  - csharp
  name: OpenSerialPort(String,Int32,Parity)
  nameWithType: Ports.OpenSerialPort(String,Int32,Parity)
  fullName: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(String,Int32,Parity)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Cria e abre um <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> objeto."
  remarks: "O `My.Computer.Ports.OpenSerialPort` método cria e abre um <xref:System.IO.Ports.SerialPort>objeto.</xref:System.IO.Ports.SerialPort> Os argumentos para o `OpenSerialPort` método determinar as definições do <xref:System.IO.Ports.SerialPort>objeto.</xref:System.IO.Ports.SerialPort>       O código deve fechar o <xref:System.IO.Ports.SerialPort>Quando terminar de objeto utilizando o objeto.</xref:System.IO.Ports.SerialPort> Pode utilizar o <xref:System.IO.Ports.SerialPort.Close%2A>método para fechar o objeto explicitamente ou `Using` declaração de para fechá-lo implicitamente.</xref:System.IO.Ports.SerialPort.Close%2A> Consulte o exemplo neste tópico para obter mais informações.       A tabela seguinte lista os exemplos de tarefas que envolvem o `My.Computer.Ports.OpenSerialPort` método.      |||   |-|-|   | Para | Consulte |   | Marcar um modem anexado a uma porta série | [Como: Marcar Modems ligados a portas série](~/add/includes/ajax-current-ext-md.md)|   | Enviar uma cadeia para a porta série | [Como: enviar cadeias a portas série](~/add/includes/ajax-current-ext-md.md)|   | Receber cadeias de uma porta série | [Como: receber cadeias de portas série](~/add/includes/ajax-current-ext-md.md)|      # # Disponibilidade por tipo de projeto |||   |-|-|   | O tipo de projeto | Disponível |   | Aplicação do Windows | **Yes**|   | Biblioteca de classe | **Yes**|   | Aplicação de consola | **Yes**|   | Biblioteca de controlo do Windows | **Yes**|   | Biblioteca de controlo de Web | Não |   | Serviço do Windows | **Yes**|   | Web Site | Não |"
  example:
  - "This example describes how to send strings to the computer's `COM1` serial port.  \n  \n The `Using` block allows the application to close the serial port even if it generates an exception. All code that manipulates the serial port should appear within this block, or within a `Try...Catch...Finally` block with a call to use the <xref:System.IO.Ports.SerialPort.Close%2A> method.  \n  \n The <xref:System.IO.Ports.SerialPort.WriteLine%2A> method sends the data to the serial port.  \n  \n [!code-vb[VbVbalrMyComputer#33](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#33)]  \n  \n For more information, see [How to: Send Strings to Serial Ports](../Topic/How%20to:%20Send%20Strings%20to%20Serial%20Ports%20in%20Visual%20Basic.md)."
  syntax:
    content: public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate, System.IO.Ports.Parity parity);
    parameters:
    - id: portName
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Necessário. Nome da porta para abrir."
    - id: baudRate
      type: System.Int32
      description: "<xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>. Velocidade de transmissão da porta."
    - id: parity
      type: System.IO.Ports.Parity
      description: "<xref href=&quot;System.IO.Ports.Parity&quot;></xref>. Paridade da porta."
    return:
      type: System.IO.Ports.SerialPort
      description: "Uma abertura <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> objeto, configurado com os argumentos fornecidos."
  overload: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>portName</code>é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia vazia."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>baudRate</code>é menor ou igual a zero."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>parity</code>Não é um do <xref href=&quot;System.IO.Ports.Parity&quot;> </xref> valores de enumeração."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)
  id: OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)
  parent: Microsoft.VisualBasic.Devices.Ports
  langs:
  - csharp
  name: OpenSerialPort(String,Int32,Parity,Int32)
  nameWithType: Ports.OpenSerialPort(String,Int32,Parity,Int32)
  fullName: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(String,Int32,Parity,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Cria e abre um <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> objeto."
  remarks: "O `My.Computer.Ports.OpenSerialPort` método cria e abre um <xref:System.IO.Ports.SerialPort>objeto.</xref:System.IO.Ports.SerialPort> Os argumentos para o `OpenSerialPort` método determinar as definições do <xref:System.IO.Ports.SerialPort>objeto.</xref:System.IO.Ports.SerialPort>       O código deve fechar o <xref:System.IO.Ports.SerialPort>Quando terminar de objeto utilizando o objeto.</xref:System.IO.Ports.SerialPort> Pode utilizar o <xref:System.IO.Ports.SerialPort.Close%2A>método para fechar o objeto explicitamente ou `Using` declaração de para fechá-lo implicitamente.</xref:System.IO.Ports.SerialPort.Close%2A> Consulte o exemplo neste tópico para obter mais informações.       A tabela seguinte lista os exemplos de tarefas que envolvem o `My.Computer.Ports.OpenSerialPort` método.      |||   |-|-|   | Para | Consulte |   | Marcar um modem anexado a uma porta série | [Como: Marcar Modems ligados a portas série](~/add/includes/ajax-current-ext-md.md)|   | Enviar uma cadeia para a porta série | [Como: enviar cadeias a portas série](~/add/includes/ajax-current-ext-md.md)|   | Receber cadeias de uma porta série | [Como: receber cadeias de portas série](~/add/includes/ajax-current-ext-md.md)|      # # Disponibilidade por tipo de projeto |||   |-|-|   | O tipo de projeto | Disponível |   | Aplicação do Windows | **Yes**|   | Biblioteca de classe | **Yes**|   | Aplicação de consola | **Yes**|   | Biblioteca de controlo do Windows | **Yes**|   | Biblioteca de controlo de Web | Não |   | Serviço do Windows | **Yes**|   | Web Site | Não |"
  example:
  - "This example describes how to send strings to the computer's `COM1` serial port.  \n  \n The `Using` block allows the application to close the serial port even if it generates an exception. All code that manipulates the serial port should appear within this block, or within a `Try...Catch...Finally` block with a call to use the <xref:System.IO.Ports.SerialPort.Close%2A> method.  \n  \n The <xref:System.IO.Ports.SerialPort.WriteLine%2A> method sends the data to the serial port.  \n  \n [!code-vb[VbVbalrMyComputer#33](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#33)]  \n  \n For more information, see [How to: Send Strings to Serial Ports](../Topic/How%20to:%20Send%20Strings%20to%20Serial%20Ports%20in%20Visual%20Basic.md)."
  syntax:
    content: public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits);
    parameters:
    - id: portName
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Necessário. Nome da porta para abrir."
    - id: baudRate
      type: System.Int32
      description: "<xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>. Velocidade de transmissão da porta."
    - id: parity
      type: System.IO.Ports.Parity
      description: "<xref href=&quot;System.IO.Ports.Parity&quot;></xref>. Paridade da porta."
    - id: dataBits
      type: System.Int32
      description: "<xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>. Bits de dados com uma definição da porta."
    return:
      type: System.IO.Ports.SerialPort
      description: "Uma abertura <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> objeto, configurado com os argumentos fornecidos."
  overload: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>portName</code>é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia vazia."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>dataBits</code>é menor ou igual a zero."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>parity</code>Não é um do <xref href=&quot;System.IO.Ports.Parity&quot;> </xref> valores de enumeração."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)
  id: OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)
  parent: Microsoft.VisualBasic.Devices.Ports
  langs:
  - csharp
  name: OpenSerialPort(String,Int32,Parity,Int32,StopBits)
  nameWithType: Ports.OpenSerialPort(String,Int32,Parity,Int32,StopBits)
  fullName: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(String,Int32,Parity,Int32,StopBits)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Cria e abre um <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> objeto."
  remarks: "O `My.Computer.Ports.OpenSerialPort` método cria e abre um <xref:System.IO.Ports.SerialPort>objeto.</xref:System.IO.Ports.SerialPort> Os argumentos para o `OpenSerialPort` método determinar as definições do <xref:System.IO.Ports.SerialPort>objeto.</xref:System.IO.Ports.SerialPort>       O código deve fechar o <xref:System.IO.Ports.SerialPort>Quando terminar de objeto utilizando o objeto.</xref:System.IO.Ports.SerialPort> Pode utilizar o <xref:System.IO.Ports.SerialPort.Close%2A>método para fechar o objeto explicitamente ou `Using` declaração de para fechá-lo implicitamente.</xref:System.IO.Ports.SerialPort.Close%2A> Consulte o exemplo neste tópico para obter mais informações.       A tabela seguinte lista os exemplos de tarefas que envolvem o `My.Computer.Ports.OpenSerialPort` método.      |||   |-|-|   | Para | Consulte |   | Marcar um modem anexado a uma porta série | [Como: Marcar Modems ligados a portas série](~/add/includes/ajax-current-ext-md.md)|   | Enviar uma cadeia para a porta série | [Como: enviar cadeias a portas série](~/add/includes/ajax-current-ext-md.md)|   | Receber cadeias de uma porta série | [Como: receber cadeias de portas série](~/add/includes/ajax-current-ext-md.md)|      # # Disponibilidade por tipo de projeto |||   |-|-|   | O tipo de projeto | Disponível |   | Aplicação do Windows | **Yes**|   | Biblioteca de classe | **Yes**|   | Aplicação de consola | **Yes**|   | Biblioteca de controlo do Windows | **Yes**|   | Biblioteca de controlo de Web | Não |   | Serviço do Windows | **Yes**|   | Web Site | Não |"
  example:
  - "This example describes how to send strings to the computer's `COM1` serial port.  \n  \n The `Using` block allows the application to close the serial port even if it generates an exception. All code that manipulates the serial port should appear within this block, or within a `Try...Catch...Finally` block with a call to use the <xref:System.IO.Ports.SerialPort.Close%2A> method.  \n  \n The <xref:System.IO.Ports.SerialPort.WriteLine%2A> method sends the data to the serial port.  \n  \n [!code-vb[VbVbalrMyComputer#33](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#33)]  \n  \n For more information, see [How to: Send Strings to Serial Ports](../Topic/How%20to:%20Send%20Strings%20to%20Serial%20Ports%20in%20Visual%20Basic.md)."
  syntax:
    content: public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits, System.IO.Ports.StopBits stopBits);
    parameters:
    - id: portName
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Necessário. Nome da porta para abrir."
    - id: baudRate
      type: System.Int32
      description: "<xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>. Velocidade de transmissão da porta."
    - id: parity
      type: System.IO.Ports.Parity
      description: "<xref href=&quot;System.IO.Ports.Parity&quot;></xref>. Paridade da porta."
    - id: dataBits
      type: System.Int32
      description: "<xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;></xref>. Bits de dados com uma definição da porta."
    - id: stopBits
      type: System.IO.Ports.StopBits
      description: "<xref href=&quot;System.IO.Ports.StopBits&quot;></xref>. Definição de bits de paragem da porta."
    return:
      type: System.IO.Ports.SerialPort
      description: "Uma abertura <xref href=&quot;System.IO.Ports.SerialPort&quot;> </xref> objeto, configurado com os argumentos fornecidos."
  overload: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>portName</code>é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia vazia."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>dataBits</code>é menor ou igual a zero."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>stopBits</code>Não é um do <xref href=&quot;System.IO.Ports.StopBits&quot;> </xref> valores de enumeração."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Ports.SerialPortNames
  id: SerialPortNames
  parent: Microsoft.VisualBasic.Devices.Ports
  langs:
  - csharp
  name: SerialPortNames
  nameWithType: Ports.SerialPortNames
  fullName: Microsoft.VisualBasic.Devices.Ports.SerialPortNames
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "Obtém uma coleção dos nomes das portas série no computador."
  remarks: "O `My.Computer.Ports.SerialPortNames` propriedade obtém uma coleção dos nomes das portas série no computador.      > [!NOTE] > Os nomes de porta devolvidos pelo `My.Computer.Ports.SerialPortNames` poderá estar incorreto quando executado no Windows 98. Para evitar erros de aplicações, utilize excepção a processar, tais como o `Try...Catch...Finally` instrução ou `Using` declaração, ao utilizar os nomes de porta para abrir portas.       A tabela seguinte apresenta um exemplo de uma tarefa que envolvem o `My.Computer.Ports.SerialPortNames` propriedade.      |||   |-|-|   | Para | Consulte |   | Mostrar a portas série disponíveis | [Como: Mostrar portas série disponíveis](~/add/includes/ajax-current-ext-md.md)|      # # Disponibilidade por tipo de projeto |||   |-|-|   | O tipo de projeto | Disponível |   | Aplicação do Windows | **Yes**|   | Biblioteca de classe | **Yes**|   | Aplicação de consola | **Yes**|   | Biblioteca de controlo do Windows | **Yes**|   | Biblioteca de controlo de Web | Não |   | Serviço do Windows | **Yes**|   | Web Site | Não |"
  example:
  - "This example loops over all the strings that the `My.Computer.Ports.SerialPortNames` property returns. These strings are the names of the available serial ports on the computer.  \n  \n Typically, a user selects which serial port the application should use from the list of available ports. In this example, the serial port names are stored in a <xref:System.Windows.Forms.ListBox> control. For more information, see [ListBox Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[VbVbalrMyComputer#45](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#45)]  \n  \n This example requires:  \n  \n-   A reference to the <xref:System?displayProperty=fullName> namespace.  \n  \n-   That your form have a <xref:System.Windows.Forms.ListBox> control named `ListBox1`.  \n  \n For more information, see [How to: Show Available Serial Ports](../Topic/How%20to:%20Show%20Available%20Serial%20Ports%20in%20Visual%20Basic.md)."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<string> SerialPortNames { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "Uma coleção dos nomes das portas série no computador."
  overload: Microsoft.VisualBasic.Devices.Ports.SerialPortNames*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: Microsoft.VisualBasic.Devices.Ports.#ctor
  parent: Microsoft.VisualBasic.Devices.Ports
  isExternal: false
  name: Ports()
  nameWithType: Ports.Ports()
  fullName: Microsoft.VisualBasic.Devices.Ports.Ports()
- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String)
  parent: Microsoft.VisualBasic.Devices.Ports
  isExternal: false
  name: OpenSerialPort(String)
  nameWithType: Ports.OpenSerialPort(String)
  fullName: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(String)
- uid: System.IO.Ports.SerialPort
  parent: System.IO.Ports
  isExternal: false
  name: SerialPort
  nameWithType: SerialPort
  fullName: System.IO.Ports.SerialPort
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32)
  parent: Microsoft.VisualBasic.Devices.Ports
  isExternal: false
  name: OpenSerialPort(String,Int32)
  nameWithType: Ports.OpenSerialPort(String,Int32)
  fullName: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(String,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity)
  parent: Microsoft.VisualBasic.Devices.Ports
  isExternal: false
  name: OpenSerialPort(String,Int32,Parity)
  nameWithType: Ports.OpenSerialPort(String,Int32,Parity)
  fullName: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(String,Int32,Parity)
- uid: System.IO.Ports.Parity
  parent: System.IO.Ports
  isExternal: false
  name: Parity
  nameWithType: Parity
  fullName: System.IO.Ports.Parity
- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)
  parent: Microsoft.VisualBasic.Devices.Ports
  isExternal: false
  name: OpenSerialPort(String,Int32,Parity,Int32)
  nameWithType: Ports.OpenSerialPort(String,Int32,Parity,Int32)
  fullName: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(String,Int32,Parity,Int32)
- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)
  parent: Microsoft.VisualBasic.Devices.Ports
  isExternal: false
  name: OpenSerialPort(String,Int32,Parity,Int32,StopBits)
  nameWithType: Ports.OpenSerialPort(String,Int32,Parity,Int32,StopBits)
  fullName: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(String,Int32,Parity,Int32,StopBits)
- uid: System.IO.Ports.StopBits
  parent: System.IO.Ports
  isExternal: false
  name: StopBits
  nameWithType: StopBits
  fullName: System.IO.Ports.StopBits
- uid: Microsoft.VisualBasic.Devices.Ports.SerialPortNames
  parent: Microsoft.VisualBasic.Devices.Ports
  isExternal: false
  name: SerialPortNames
  nameWithType: Ports.SerialPortNames
  fullName: Microsoft.VisualBasic.Devices.Ports.SerialPortNames
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<String>
  nameWithType: ReadOnlyCollection<String>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.String>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.VisualBasic.Devices.Ports.#ctor*
  parent: Microsoft.VisualBasic.Devices.Ports
  isExternal: false
  name: Ports
  nameWithType: Ports.Ports
- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort*
  parent: Microsoft.VisualBasic.Devices.Ports
  isExternal: false
  name: OpenSerialPort
  nameWithType: Ports.OpenSerialPort
- uid: Microsoft.VisualBasic.Devices.Ports.SerialPortNames*
  parent: Microsoft.VisualBasic.Devices.Ports
  isExternal: false
  name: SerialPortNames
  nameWithType: Ports.SerialPortNames
