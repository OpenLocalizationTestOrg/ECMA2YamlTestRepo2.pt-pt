### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices.HandleRef
  id: HandleRef
  children:
  - System.Runtime.InteropServices.HandleRef.#ctor(System.Object,System.IntPtr)
  - System.Runtime.InteropServices.HandleRef.Handle
  - System.Runtime.InteropServices.HandleRef.op_Explicit(System.Runtime.InteropServices.HandleRef to System.IntPtr)
  - System.Runtime.InteropServices.HandleRef.ToIntPtr(System.Runtime.InteropServices.HandleRef)
  - System.Runtime.InteropServices.HandleRef.Wrapper
  langs:
  - csharp
  name: HandleRef
  nameWithType: HandleRef
  fullName: System.Runtime.InteropServices.HandleRef
  type: Struct
  summary: "Um objeto gerido que contém um identificador a um recurso que é transmitido ao código não gerido utilizando plataforma encapsula num wrapper invocar."
  remarks: "> [!IMPORTANT]> Começando com o .NET Framework 2.0, a funcionalidade da classe HandleRef foi substituído pelo <xref:System.Runtime.InteropServices.SafeHandle>classe e respetivas classes derivadas, bem como através da <xref:System.Runtime.InteropServices.CriticalHandle>classe.</xref:System.Runtime.InteropServices.CriticalHandle> </xref:System.Runtime.InteropServices.SafeHandle>       Se utilizar plataforma invocar para chamar um objeto gerido e o objeto não é referenciado noutro local após a chamada de invocar a plataforma, é possível que o recoletor de lixo finalizar o objeto gerido. Esta ação liberta os recursos e invalida o identificador, fazendo com que a plataforma de invocar a chamada para falhar. Encapsulamento um identificador com HandleRef garante que o objeto gerido não está concluída libertados até que a plataforma de invocar a chamada. Para obter uma descrição da plataforma invocar serviços, consulte [consumir funções de DLL não gerido](~/add/includes/ajax-current-ext-md.md).       O HandleRef tipo, o valor como <xref:System.Runtime.InteropServices.GCHandle>, é um tipo especial reconhecido pelo empacotador de referências de interoperabilidade.</xref:System.Runtime.InteropServices.GCHandle> Normal, nonpinned <xref:System.Runtime.InteropServices.GCHandle>também impede que untimely libertação da memória, ainda HandleRef fornece um melhor desempenho.</xref:System.Runtime.InteropServices.GCHandle> Apesar de utilizar HandleRef para manter um objeto alive durante a duração de uma plataforma de invocar chamada é preferencial, também pode utilizar o <xref:System.GC.KeepAlive%2A?displayProperty=fullName>método para a mesma finalidade.</xref:System.GC.KeepAlive%2A?displayProperty=fullName>       O construtor de HandleRef demora dois parâmetros: um <xref:System.Object>que representa o wrapper e um <xref:System.IntPtr>que representa o identificador não gerido.</xref:System.IntPtr> </xref:System.Object> O empacotador de referências de interoperabilidade transmite apenas o identificador de código não gerido e garante que o wrapper de (transmitida como o primeiro parâmetro para o construtor do `HandleRef`) permanecerá ativo durante a duração da chamada."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public struct HandleRef
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.HandleRef.#ctor(System.Object,System.IntPtr)
  id: '#ctor(System.Object,System.IntPtr)'
  parent: System.Runtime.InteropServices.HandleRef
  langs:
  - csharp
  name: HandleRef(Object,IntPtr)
  nameWithType: HandleRef.HandleRef(Object,IntPtr)
  fullName: System.Runtime.InteropServices.HandleRef.HandleRef(Object,IntPtr)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Runtime.InteropServices.HandleRef&quot;> </xref> classe com o objeto a moldagem e um identificador de recurso utilizado pelo código não gerido."
  syntax:
    content: public HandleRef (object wrapper, IntPtr handle);
    parameters:
    - id: wrapper
      type: System.Object
      description: "Devolve um objeto gerido, que não deve ser finalizado até que a plataforma de invocar a chamada."
    - id: handle
      type: System.IntPtr
      description: "Um <xref:System.IntPtr>que indica um identificador a um recurso.</xref:System.IntPtr>"
  overload: System.Runtime.InteropServices.HandleRef.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.HandleRef.Handle
  id: Handle
  parent: System.Runtime.InteropServices.HandleRef
  langs:
  - csharp
  name: Handle
  nameWithType: HandleRef.Handle
  fullName: System.Runtime.InteropServices.HandleRef.Handle
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Obtém o identificador a um recurso."
  syntax:
    content: public IntPtr Handle { get; }
    return:
      type: System.IntPtr
      description: "O identificador a um recurso."
  overload: System.Runtime.InteropServices.HandleRef.Handle*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.HandleRef.op_Explicit(System.Runtime.InteropServices.HandleRef to System.IntPtr)
  id: op_Explicit(System.Runtime.InteropServices.HandleRef to System.IntPtr)
  parent: System.Runtime.InteropServices.HandleRef
  langs:
  - csharp
  name: op_Explicit(HandleRef)
  nameWithType: HandleRef.op_Explicit(HandleRef)
  fullName: System.Runtime.InteropServices.HandleRef.op_Explicit(HandleRef)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  syntax:
    content: public static IntPtr op_Explicit (System.Runtime.InteropServices.HandleRef value);
    parameters:
    - id: value
      type: System.Runtime.InteropServices.HandleRef
      description: "A adicionar."
    return:
      type: System.IntPtr
      description: "A adicionar."
  overload: System.Runtime.InteropServices.HandleRef.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.HandleRef.ToIntPtr(System.Runtime.InteropServices.HandleRef)
  id: ToIntPtr(System.Runtime.InteropServices.HandleRef)
  parent: System.Runtime.InteropServices.HandleRef
  langs:
  - csharp
  name: ToIntPtr(HandleRef)
  nameWithType: HandleRef.ToIntPtr(HandleRef)
  fullName: System.Runtime.InteropServices.HandleRef.ToIntPtr(HandleRef)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Devolve a representação de número inteiro interno de um <xref href=&quot;System.Runtime.InteropServices.HandleRef&quot;> </xref> objeto."
  syntax:
    content: public static IntPtr ToIntPtr (System.Runtime.InteropServices.HandleRef value);
    parameters:
    - id: value
      type: System.Runtime.InteropServices.HandleRef
      description: "A <xref href=&quot;System.Runtime.InteropServices.HandleRef&quot;> </xref> objeto para obter uma representação de número inteiro interno do."
    return:
      type: System.IntPtr
      description: "Um <xref:System.IntPtr>objeto que representa um <xref href=&quot;System.Runtime.InteropServices.HandleRef&quot;> </xref> objeto.</xref:System.IntPtr>"
  overload: System.Runtime.InteropServices.HandleRef.ToIntPtr*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.HandleRef.Wrapper
  id: Wrapper
  parent: System.Runtime.InteropServices.HandleRef
  langs:
  - csharp
  name: Wrapper
  nameWithType: HandleRef.Wrapper
  fullName: System.Runtime.InteropServices.HandleRef.Wrapper
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Obtém o objeto que contém o identificador a um recurso."
  syntax:
    content: public object Wrapper { get; }
    return:
      type: System.Object
      description: "O objeto que contém o identificador a um recurso."
  overload: System.Runtime.InteropServices.HandleRef.Wrapper*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Runtime.InteropServices.HandleRef.#ctor(System.Object,System.IntPtr)
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: HandleRef(Object,IntPtr)
  nameWithType: HandleRef.HandleRef(Object,IntPtr)
  fullName: System.Runtime.InteropServices.HandleRef.HandleRef(Object,IntPtr)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Runtime.InteropServices.HandleRef.Handle
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: Handle
  nameWithType: HandleRef.Handle
  fullName: System.Runtime.InteropServices.HandleRef.Handle
- uid: System.Runtime.InteropServices.HandleRef.op_Explicit(System.Runtime.InteropServices.HandleRef to System.IntPtr)
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: op_Explicit(HandleRef)
  nameWithType: HandleRef.op_Explicit(HandleRef)
  fullName: System.Runtime.InteropServices.HandleRef.op_Explicit(HandleRef)
- uid: System.Runtime.InteropServices.HandleRef
  parent: System.Runtime.InteropServices
  isExternal: false
  name: HandleRef
  nameWithType: HandleRef
  fullName: System.Runtime.InteropServices.HandleRef
- uid: System.Runtime.InteropServices.HandleRef.ToIntPtr(System.Runtime.InteropServices.HandleRef)
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: ToIntPtr(HandleRef)
  nameWithType: HandleRef.ToIntPtr(HandleRef)
  fullName: System.Runtime.InteropServices.HandleRef.ToIntPtr(HandleRef)
- uid: System.Runtime.InteropServices.HandleRef.Wrapper
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: Wrapper
  nameWithType: HandleRef.Wrapper
  fullName: System.Runtime.InteropServices.HandleRef.Wrapper
- uid: System.Runtime.InteropServices.HandleRef.#ctor*
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: HandleRef
  nameWithType: HandleRef.HandleRef
- uid: System.Runtime.InteropServices.HandleRef.Handle*
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: Handle
  nameWithType: HandleRef.Handle
- uid: System.Runtime.InteropServices.HandleRef.op_Explicit*
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: op_Explicit
  nameWithType: HandleRef.op_Explicit
- uid: System.Runtime.InteropServices.HandleRef.ToIntPtr*
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: ToIntPtr
  nameWithType: HandleRef.ToIntPtr
- uid: System.Runtime.InteropServices.HandleRef.Wrapper*
  parent: System.Runtime.InteropServices.HandleRef
  isExternal: false
  name: Wrapper
  nameWithType: HandleRef.Wrapper
