### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.UserNamePasswordServiceCredential
  id: UserNamePasswordServiceCredential
  children:
  - System.ServiceModel.Security.UserNamePasswordServiceCredential.CachedLogonTokenLifetime
  - System.ServiceModel.Security.UserNamePasswordServiceCredential.CacheLogonTokens
  - System.ServiceModel.Security.UserNamePasswordServiceCredential.CustomUserNamePasswordValidator
  - System.ServiceModel.Security.UserNamePasswordServiceCredential.IncludeWindowsGroups
  - System.ServiceModel.Security.UserNamePasswordServiceCredential.MaxCachedLogonTokens
  - System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider
  - System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode
  langs:
  - csharp
  name: UserNamePasswordServiceCredential
  nameWithType: UserNamePasswordServiceCredential
  fullName: System.ServiceModel.Security.UserNamePasswordServiceCredential
  type: Class
  summary: "Represents a class that is used to configure how the service authenticates users that use user name/password authentication and to configure the caching of logon tokens."
  remarks: "If none of the bindings used by a service is configured for user name/password-based authentication, the relevant properties for this class are ignored. These properties include the <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CustomUserNamePasswordValidator%2A>, <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.IncludeWindowsGroups%2A>, <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A>, and <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode%2A> properties.       If none of the bindings used by a service is configured to use Windows authentication for user name/password, the settings related to caching of logon tokens are ignored. These settings include the <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CachedLogonTokenLifetime%2A>, <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CacheLogonTokens%2A>, and <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MaxCachedLogonTokens%2A> properties."
  example:
  - "The following example prints the values of the UserNamePasswordServiceCredential properties for a service.  \n  \n [!code-cs[UserNamePasswordServiceCredential#1](~/add/codesnippet/csharp/t-system.servicemodel.se_7_1.cs)]\n [!code-vb[UserNamePasswordServiceCredential#1](~/add/codesnippet/visualbasic/t-system.servicemodel.se_7_1.vb)]"
  syntax:
    content: public sealed class UserNamePasswordServiceCredential
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Security.UserNamePasswordServiceCredential.CachedLogonTokenLifetime
  id: CachedLogonTokenLifetime
  parent: System.ServiceModel.Security.UserNamePasswordServiceCredential
  langs:
  - csharp
  name: CachedLogonTokenLifetime
  nameWithType: UserNamePasswordServiceCredential.CachedLogonTokenLifetime
  fullName: System.ServiceModel.Security.UserNamePasswordServiceCredential.CachedLogonTokenLifetime
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Gets or sets the maximum length of time that a token is cached."
  remarks: '[!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)] <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CacheLogonTokens%2A>.'
  example:
  - "The following example gets the value of this property.  \n  \n [!code-cs[UserNamePasswordServiceCredential#1](~/add/codesnippet/csharp/8bf03e02-af41-463c-8204-_1.cs)]\n [!code-vb[UserNamePasswordServiceCredential#1](~/add/codesnippet/visualbasic/8bf03e02-af41-463c-8204-_1.vb)]"
  syntax:
    content: public TimeSpan CachedLogonTokenLifetime { get; set; }
    return:
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan> that represents the maximum length of time that a token is cached`.` The default is 15 minutes."
  overload: System.ServiceModel.Security.UserNamePasswordServiceCredential.CachedLogonTokenLifetime*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.UserNamePasswordServiceCredential.CacheLogonTokens
  id: CacheLogonTokens
  parent: System.ServiceModel.Security.UserNamePasswordServiceCredential
  langs:
  - csharp
  name: CacheLogonTokens
  nameWithType: UserNamePasswordServiceCredential.CacheLogonTokens
  fullName: System.ServiceModel.Security.UserNamePasswordServiceCredential.CacheLogonTokens
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Gets or sets a value that indicates whether logon tokens are cached."
  remarks: "By default, [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] security asks the Windows security subsystem to create a logon token for every incoming user name/password security token if the user name is being mapped to a Windows account. This behavior can be changed by setting the <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode%2A> property.       For <xref:System.ServiceModel.Security.UserNamePasswordValidationMode> mode, the service uses Win32&quot;s `LogonUser` function for user name/password authentication. If the CacheLogonTokens is set to `true`, the resulting Windows token is cached and reused for the same user name/password pair. The cache is valid for <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CachedLogonTokenLifetime%2A>. The maximum number of caches is limited to <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MaxCachedLogonTokens%2A>."
  example:
  - "The following example gets the value of this property.  \n  \n [!code-cs[UserNamePasswordServiceCredential#1](~/add/codesnippet/csharp/e71feb9d-7988-4452-b8ad-_1.cs)]\n [!code-vb[UserNamePasswordServiceCredential#1](~/add/codesnippet/visualbasic/e71feb9d-7988-4452-b8ad-_1.vb)]"
  syntax:
    content: public bool CacheLogonTokens { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if logon tokens are cached; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.Security.UserNamePasswordServiceCredential.CacheLogonTokens*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.UserNamePasswordServiceCredential.CustomUserNamePasswordValidator
  id: CustomUserNamePasswordValidator
  parent: System.ServiceModel.Security.UserNamePasswordServiceCredential
  langs:
  - csharp
  name: CustomUserNamePasswordValidator
  nameWithType: UserNamePasswordServiceCredential.CustomUserNamePasswordValidator
  fullName: System.ServiceModel.Security.UserNamePasswordServiceCredential.CustomUserNamePasswordValidator
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Gets or sets a custom user name and password validator."
  remarks: "The <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode%2A> property must be set to <xref:System.ServiceModel.Security.UserNamePasswordValidationMode> for the <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A> to take effect. When the <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A> property is set and the <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode%2A> property is not, [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] uses Windows authentication and ignores the value of the <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A> property.       For <xref:System.ServiceModel.Security.UserNamePasswordValidationMode> mode, the service uses <xref:System.IdentityModel.Selectors.UserNamePasswordValidator> for user name/password authentication by calling the <xref:System.IdentityModel.Selectors.UserNamePasswordValidator.Validate%2A> method."
  syntax:
    content: public System.IdentityModel.Selectors.UserNamePasswordValidator CustomUserNamePasswordValidator { get; set; }
    return:
      type: System.IdentityModel.Selectors.UserNamePasswordValidator
      description: "A custom user name and password validator."
  overload: System.ServiceModel.Security.UserNamePasswordServiceCredential.CustomUserNamePasswordValidator*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.UserNamePasswordServiceCredential.IncludeWindowsGroups
  id: IncludeWindowsGroups
  parent: System.ServiceModel.Security.UserNamePasswordServiceCredential
  langs:
  - csharp
  name: IncludeWindowsGroups
  nameWithType: UserNamePasswordServiceCredential.IncludeWindowsGroups
  fullName: System.ServiceModel.Security.UserNamePasswordServiceCredential.IncludeWindowsGroups
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Gets or sets a value that indicates whether Windows groups are included in the security context."
  remarks: "In most scenarios when validating Windows user names and passwords, Windows groups in which users belong provide useful information for authorization decisions. However, if the Windows groups are not required, setting this property to `false` can improve performance by avoiding a full-group claim population."
  example:
  - "The following example gets the value of this property.  \n  \n [!code-cs[UserNamePasswordServiceCredential#1](~/add/codesnippet/csharp/31050e0e-9e17-4b4b-8449-_1.cs)]\n [!code-vb[UserNamePasswordServiceCredential#1](~/add/codesnippet/visualbasic/31050e0e-9e17-4b4b-8449-_1.vb)]"
  syntax:
    content: public bool IncludeWindowsGroups { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if Windows groups are included in the security context; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.ServiceModel.Security.UserNamePasswordServiceCredential.IncludeWindowsGroups*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.UserNamePasswordServiceCredential.MaxCachedLogonTokens
  id: MaxCachedLogonTokens
  parent: System.ServiceModel.Security.UserNamePasswordServiceCredential
  langs:
  - csharp
  name: MaxCachedLogonTokens
  nameWithType: UserNamePasswordServiceCredential.MaxCachedLogonTokens
  fullName: System.ServiceModel.Security.UserNamePasswordServiceCredential.MaxCachedLogonTokens
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Gets or sets the maximum number of logon tokens to cache."
  remarks: "The default value is 128. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]<xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CacheLogonTokens%2A>."
  example:
  - "The following example gets the value of this property.  \n  \n [!code-cs[UserNamePasswordServiceCredential#1](~/add/codesnippet/csharp/aa143f3c-624f-4ce6-9e71-_1.cs)]\n [!code-vb[UserNamePasswordServiceCredential#1](~/add/codesnippet/visualbasic/aa143f3c-624f-4ce6-9e71-_1.vb)]"
  syntax:
    content: public int MaxCachedLogonTokens { get; set; }
    return:
      type: System.Int32
      description: "The maximum number of logon tokens to cache."
  overload: System.ServiceModel.Security.UserNamePasswordServiceCredential.MaxCachedLogonTokens*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider
  id: MembershipProvider
  parent: System.ServiceModel.Security.UserNamePasswordServiceCredential
  langs:
  - csharp
  name: MembershipProvider
  nameWithType: UserNamePasswordServiceCredential.MembershipProvider
  fullName: System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Gets or sets the membership provider."
  remarks: "For <xref:System.ServiceModel.Security.UserNamePasswordValidationMode> mode, the service uses <xref:System.Web.Security.MembershipProvider> for user name/password authentication by calling the <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> method.      > [!NOTE] >  The <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode%2A> property must be set to <xref:System.ServiceModel.Security.UserNamePasswordValidationMode> for the MembershipProvider to take effect. When the MembershipProvider property is set and the <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode%2A> property is not, [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] uses Windows authentication and ignores the value of the MembershipProvider property.       If the <xref:System.ServiceModel.Security.UserNamePasswordValidationMode> property is set to `MembershipProvider` and the `MembershipProvider` property is not set to a value, the default is the <xref:System.Web.Security.SqlMembershipProvider> class."
  syntax:
    content: public System.Web.Security.MembershipProvider MembershipProvider { get; set; }
    return:
      type: System.Web.Security.MembershipProvider
      description: "The <xref:System.Web.Security.MembershipProvider> for this service. The default is the <xref href=&quot;System.Web.Security.SqlMembershipProvider&quot;></xref>."
  overload: System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "An attempt is made to set this property when the credential is read-only."
  platform:
  - net462
- uid: System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode
  id: UserNamePasswordValidationMode
  parent: System.ServiceModel.Security.UserNamePasswordServiceCredential
  langs:
  - csharp
  name: UserNamePasswordValidationMode
  nameWithType: UserNamePasswordServiceCredential.UserNamePasswordValidationMode
  fullName: System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Gets or sets the method of validating the user name and password."
  remarks: "Possible values are:      -   <xref:System.ServiceModel.Security.UserNamePasswordValidationMode>      -   <xref:System.ServiceModel.Security.UserNamePasswordValidationMode>      -   <xref:System.ServiceModel.Security.UserNamePasswordValidationMode>       If this property is set to <xref:System.ServiceModel.Security.UserNamePasswordValidationMode>, the service uses the object returned by <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CustomUserNamePasswordValidator%2A> to validate user names and passwords in incoming messages.      > [!NOTE] >  When a [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] service is hosted in Internet Information Services (IIS) using transport-level security and the UserNamePasswordValidationMode property is set to <xref:System.ServiceModel.Security.UserNamePasswordValidationMode>, the custom authentication scheme uses a subset of Windows authentication. That is because in this scenario, IIS performs Windows authentication prior to [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] invoking the custom authenticator.       When the value of this property is set to <xref:System.ServiceModel.Security.UserNamePasswordValidationMode>, specify the membership provider by setting the <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A> property, and then the membership provider instance specified by the <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A> property is used to validate the username and password in incoming messages."
  example:
  - "The following example gets the value of this property.  \n  \n [!code-cs[UserNamePasswordServiceCredential#1](~/add/codesnippet/csharp/59ff8c12-ad84-4bb4-a355-_1.cs)]\n [!code-vb[UserNamePasswordServiceCredential#1](~/add/codesnippet/visualbasic/59ff8c12-ad84-4bb4-a355-_1.vb)]"
  syntax:
    content: public System.ServiceModel.Security.UserNamePasswordValidationMode UserNamePasswordValidationMode { get; set; }
    return:
      type: System.ServiceModel.Security.UserNamePasswordValidationMode
      description: "A value from the enumeration in <xref href=&quot;System.ServiceModel.Security.UserNamePasswordValidationMode&quot;></xref>."
  overload: System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ServiceModel.Security.UserNamePasswordServiceCredential.CachedLogonTokenLifetime
  parent: System.ServiceModel.Security.UserNamePasswordServiceCredential
  isExternal: false
  name: CachedLogonTokenLifetime
  nameWithType: UserNamePasswordServiceCredential.CachedLogonTokenLifetime
  fullName: System.ServiceModel.Security.UserNamePasswordServiceCredential.CachedLogonTokenLifetime
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.Security.UserNamePasswordServiceCredential.CacheLogonTokens
  parent: System.ServiceModel.Security.UserNamePasswordServiceCredential
  isExternal: false
  name: CacheLogonTokens
  nameWithType: UserNamePasswordServiceCredential.CacheLogonTokens
  fullName: System.ServiceModel.Security.UserNamePasswordServiceCredential.CacheLogonTokens
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Security.UserNamePasswordServiceCredential.CustomUserNamePasswordValidator
  parent: System.ServiceModel.Security.UserNamePasswordServiceCredential
  isExternal: false
  name: CustomUserNamePasswordValidator
  nameWithType: UserNamePasswordServiceCredential.CustomUserNamePasswordValidator
  fullName: System.ServiceModel.Security.UserNamePasswordServiceCredential.CustomUserNamePasswordValidator
- uid: System.IdentityModel.Selectors.UserNamePasswordValidator
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: UserNamePasswordValidator
  nameWithType: UserNamePasswordValidator
  fullName: System.IdentityModel.Selectors.UserNamePasswordValidator
- uid: System.ServiceModel.Security.UserNamePasswordServiceCredential.IncludeWindowsGroups
  parent: System.ServiceModel.Security.UserNamePasswordServiceCredential
  isExternal: false
  name: IncludeWindowsGroups
  nameWithType: UserNamePasswordServiceCredential.IncludeWindowsGroups
  fullName: System.ServiceModel.Security.UserNamePasswordServiceCredential.IncludeWindowsGroups
- uid: System.ServiceModel.Security.UserNamePasswordServiceCredential.MaxCachedLogonTokens
  parent: System.ServiceModel.Security.UserNamePasswordServiceCredential
  isExternal: false
  name: MaxCachedLogonTokens
  nameWithType: UserNamePasswordServiceCredential.MaxCachedLogonTokens
  fullName: System.ServiceModel.Security.UserNamePasswordServiceCredential.MaxCachedLogonTokens
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider
  parent: System.ServiceModel.Security.UserNamePasswordServiceCredential
  isExternal: false
  name: MembershipProvider
  nameWithType: UserNamePasswordServiceCredential.MembershipProvider
  fullName: System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider
- uid: System.Web.Security.MembershipProvider
  parent: System.Web.Security
  isExternal: true
  name: MembershipProvider
  nameWithType: MembershipProvider
  fullName: System.Web.Security.MembershipProvider
- uid: System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode
  parent: System.ServiceModel.Security.UserNamePasswordServiceCredential
  isExternal: false
  name: UserNamePasswordValidationMode
  nameWithType: UserNamePasswordServiceCredential.UserNamePasswordValidationMode
  fullName: System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode
- uid: System.ServiceModel.Security.UserNamePasswordValidationMode
  parent: System.ServiceModel.Security
  isExternal: false
  name: UserNamePasswordValidationMode
  nameWithType: UserNamePasswordValidationMode
  fullName: System.ServiceModel.Security.UserNamePasswordValidationMode
- uid: System.ServiceModel.Security.UserNamePasswordServiceCredential.CachedLogonTokenLifetime*
  parent: System.ServiceModel.Security.UserNamePasswordServiceCredential
  isExternal: false
  name: CachedLogonTokenLifetime
  nameWithType: UserNamePasswordServiceCredential.CachedLogonTokenLifetime
- uid: System.ServiceModel.Security.UserNamePasswordServiceCredential.CacheLogonTokens*
  parent: System.ServiceModel.Security.UserNamePasswordServiceCredential
  isExternal: false
  name: CacheLogonTokens
  nameWithType: UserNamePasswordServiceCredential.CacheLogonTokens
- uid: System.ServiceModel.Security.UserNamePasswordServiceCredential.CustomUserNamePasswordValidator*
  parent: System.ServiceModel.Security.UserNamePasswordServiceCredential
  isExternal: false
  name: CustomUserNamePasswordValidator
  nameWithType: UserNamePasswordServiceCredential.CustomUserNamePasswordValidator
- uid: System.ServiceModel.Security.UserNamePasswordServiceCredential.IncludeWindowsGroups*
  parent: System.ServiceModel.Security.UserNamePasswordServiceCredential
  isExternal: false
  name: IncludeWindowsGroups
  nameWithType: UserNamePasswordServiceCredential.IncludeWindowsGroups
- uid: System.ServiceModel.Security.UserNamePasswordServiceCredential.MaxCachedLogonTokens*
  parent: System.ServiceModel.Security.UserNamePasswordServiceCredential
  isExternal: false
  name: MaxCachedLogonTokens
  nameWithType: UserNamePasswordServiceCredential.MaxCachedLogonTokens
- uid: System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider*
  parent: System.ServiceModel.Security.UserNamePasswordServiceCredential
  isExternal: false
  name: MembershipProvider
  nameWithType: UserNamePasswordServiceCredential.MembershipProvider
- uid: System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode*
  parent: System.ServiceModel.Security.UserNamePasswordServiceCredential
  isExternal: false
  name: UserNamePasswordValidationMode
  nameWithType: UserNamePasswordServiceCredential.UserNamePasswordValidationMode
