### YamlMime:ManagedReference
items:
- uid: System.Web.Security.FormsAuthentication
  id: FormsAuthentication
  children:
  - System.Web.Security.FormsAuthentication.#ctor
  - System.Web.Security.FormsAuthentication.Authenticate(System.String,System.String)
  - System.Web.Security.FormsAuthentication.CookieDomain
  - System.Web.Security.FormsAuthentication.CookieMode
  - System.Web.Security.FormsAuthentication.CookiesSupported
  - System.Web.Security.FormsAuthentication.Decrypt(System.String)
  - System.Web.Security.FormsAuthentication.DefaultUrl
  - System.Web.Security.FormsAuthentication.EnableCrossAppRedirects
  - System.Web.Security.FormsAuthentication.EnableFormsAuthentication(System.Collections.Specialized.NameValueCollection)
  - System.Web.Security.FormsAuthentication.Encrypt(System.Web.Security.FormsAuthenticationTicket)
  - System.Web.Security.FormsAuthentication.FormsCookieName
  - System.Web.Security.FormsAuthentication.FormsCookiePath
  - System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean)
  - System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean,System.String)
  - System.Web.Security.FormsAuthentication.GetRedirectUrl(System.String,System.Boolean)
  - System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(System.String,System.String)
  - System.Web.Security.FormsAuthentication.Initialize
  - System.Web.Security.FormsAuthentication.IsEnabled
  - System.Web.Security.FormsAuthentication.LoginUrl
  - System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean)
  - System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean,System.String)
  - System.Web.Security.FormsAuthentication.RedirectToLoginPage
  - System.Web.Security.FormsAuthentication.RedirectToLoginPage(System.String)
  - System.Web.Security.FormsAuthentication.RenewTicketIfOld(System.Web.Security.FormsAuthenticationTicket)
  - System.Web.Security.FormsAuthentication.RequireSSL
  - System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean)
  - System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean,System.String)
  - System.Web.Security.FormsAuthentication.SignOut
  - System.Web.Security.FormsAuthentication.SlidingExpiration
  - System.Web.Security.FormsAuthentication.TicketCompatibilityMode
  - System.Web.Security.FormsAuthentication.Timeout
  langs:
  - csharp
  name: FormsAuthentication
  nameWithType: FormsAuthentication
  fullName: System.Web.Security.FormsAuthentication
  type: Class
  summary: "Gere os serviços de autenticação de formulários para aplicações Web. Esta classe não pode ser herdada."
  remarks: "Permite a autenticação de formulários de utilizador e validação da palavra-passe para aplicações Web que não necessitam de autenticação do Windows. Com a autenticação de formulários, informações do utilizador são armazenadas numa origem de dados externos, como um <xref:System.Web.Security.Membership>base de dados, ou no ficheiro de configuração para uma aplicação.</xref:System.Web.Security.Membership> Depois de um utilizador ser autenticado, a autenticação de formulários mantém uma permissão de autenticação num cookie ou no URL, para que um utilizador autenticado não tem de fornecer credenciais com cada pedido.       Autenticação de formulários é ativada através da definição de `mode` atributo do elemento de configuração para `Forms`. Pode exigir que todos os pedidos para uma aplicação contém uma permissão de autenticação de utilizador válido utilizando o elemento de configuração para negar o pedido de qualquer utilizador desconhecida, conforme mostrado no exemplo seguinte.      ```   <system.web>     <authentication mode=&quot;Forms&quot;>       <forms loginUrl=&quot;login.aspx&quot; />     </authentication>     <authorization>       <deny users=&quot;?&quot; />     </authorization>   </system.web>   ```No exemplo anterior, qualquer pedido de uma página ASP.NET que faz parte da aplicação requer um nome de utilizador válido que é fornecido pela autenticação de formulários. Não existir nenhum nome de utilizador, em seguida, o pedido é redirecionado para o <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>.</xref:System.Web.Security.FormsAuthentication.LoginUrl%2A> configurado       A classe de FormsAuthentication fornece acesso aos métodos e propriedades que pode utilizar uma aplicação que autentica os utilizadores. O <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A>método redireciona um browser para configurada <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>para os utilizadores iniciem sessão numa aplicação.</xref:System.Web.Security.FormsAuthentication.LoginUrl%2A> </xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> O <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>método redireciona um utilizador autenticado ou novamente para o URL de protegido original que foi pedido <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> </xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> Também existem métodos que lhe permite gerir pedidos de autenticação de formulários, se necessário."
  example:
  - "The following code example shows the Web.config file for an ASP.NET application that uses the ASP.NET membership provider for forms authentication and requires all users to be authenticated.  \n  \n```  \n<configuration>  \n  <connectionStrings>  \n    <add name=\"SqlServices\" connectionString=\"Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;\" />  \n  </connectionStrings>  \n  <system.web>  \n    <membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n      <providers>  \n        <add name=\"SqlProvider\"  \n          type=\"System.Web.Security.SqlMembershipProvider\"  \n          connectionStringName=\"SqlServices\"  \n          enablePasswordRetrieval=\"false\"  \n          enablePasswordReset=\"true\"  \n          requiresQuestionAndAnswer=\"true\"  \n          passwordFormat=\"Hashed\"  \n          applicationName=\"/\" />  \n      </providers>  \n    </membership>  \n  </system.web>  \n</configuration>  \n```  \n  \n The following code example shows the login page for an ASP.NET application that uses forms authentication and ASP.NET membership.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/csharp/t-system.web.security.fo_5_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/visualbasic/t-system.web.security.fo_5_1.aspx)]"
  syntax:
    content: public sealed class FormsAuthentication
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.#ctor
  id: '#ctor'
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: FormsAuthentication()
  nameWithType: FormsAuthentication.FormsAuthentication()
  fullName: System.Web.Security.FormsAuthentication.FormsAuthentication()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.Security.FormsAuthentication&quot;> </xref> classe."
  remarks: "Este construtor não se destina a ser utilizado a partir do código."
  syntax:
    content: public FormsAuthentication ();
    parameters: []
  overload: System.Web.Security.FormsAuthentication.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.Authenticate(System.String,System.String)
  id: Authenticate(System.String,System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: Authenticate(String,String)
  nameWithType: FormsAuthentication.Authenticate(String,String)
  fullName: System.Web.Security.FormsAuthentication.Authenticate(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Valida um nome de utilizador e palavra-passe em relação às credenciais armazenadas no ficheiro de configuração para uma aplicação."
  remarks: "O método Authenticate verifica as credenciais de utilizador que estão armazenadas na secção do ficheiro de configuração de aplicação. Em alternativa, pode utilizar a associação do ASP.NET para armazenar credenciais de utilizador e a chamada de <xref:System.Web.Security.MembershipProvider.ValidateUser%2A>para verificar as credenciais.</xref:System.Web.Security.MembershipProvider.ValidateUser%2A> Para obter mais informações, consulte [gerir utilizadores ao utilizar a associação](~/add/includes/ajax-current-ext-md.md).       Para segurança melhorada, pode encriptar as palavras-passe armazenadas no ficheiro de configuração para uma aplicação utilizando o <xref:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile%2A>método.</xref:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile%2A>"
  example:
  - "The following code example shows user credentials stored in the Web.config file for an application. The password values have been hashed using the <xref:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile%2A> method.  \n  \n `<authentication mode=\"Forms\">`  \n  \n `<forms loginUrl=\"login.aspx\">`  \n  \n `<credentials passwordFormat=\"SHA1\">`  \n  \n `<user name=\"user1\"   password=\"27CE4CA7FBF00685AF2F617E3F5BBCAFF7B7403C\" />`  \n  \n `<user name=\"user2\"   password=\"D108F80936F78DFDD333141EBC985B0233A30C7A\" />`  \n  \n `<user name=\"user3\" password=\"7BDB09781A3F23885CD43177C0508B375CB1B7E9\"/>`  \n  \n `</credentials>`  \n  \n `</forms>`  \n  \n `</authentication>`  \n  \n The following code example shows a login page that uses the Authenticate method to validate user credentials.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.FormsAuthentication#1](~/add/codesnippet/visualbasic/5b51c766-1819-4817-a951-_1.aspx)]\n [!code-cs[System.Web.Security.FormsAuthentication#1](~/add/codesnippet/csharp/5b51c766-1819-4817-a951-_1.aspx)]"
  syntax:
    content: public static bool Authenticate (string name, string password);
    parameters:
    - id: name
      type: System.String
      description: "O nome de utilizador."
    - id: password
      type: System.String
      description: "A palavra-passe para o utilizador."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o nome de utilizador e palavra-passe são válidos; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.Authenticate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.CookieDomain
  id: CookieDomain
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: CookieDomain
  nameWithType: FormsAuthentication.CookieDomain
  fullName: System.Web.Security.FormsAuthentication.CookieDomain
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém o valor de domínio do cookie de autenticação de formulários."
  remarks: "O valor da propriedade CookieDomain está definido no ficheiro de configuração para uma aplicação ASP.NET, utilizando o `domain` atributo do elemento de configuração. O valor da propriedade CookieDomain determina <xref:System.Web.HttpCookie.Domain%2A>que o cookie será for. utilizado</xref:System.Web.HttpCookie.Domain%2A>"
  example:
  - "The following code example sets the `domain` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseCookies\"  \n    domain=\"contoso.com\" />  \n</authentication>  \n```"
  syntax:
    content: public static string CookieDomain { get; }
    return:
      type: System.String
      description: "O <xref:System.Web.HttpCookie.Domain*>do cookie de autenticação de formulários.</xref:System.Web.HttpCookie.Domain*> A predefinição é uma cadeia vazia (&quot;&quot;)."
  overload: System.Web.Security.FormsAuthentication.CookieDomain*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.CookieMode
  id: CookieMode
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: CookieMode
  nameWithType: FormsAuthentication.CookieMode
  fullName: System.Web.Security.FormsAuthentication.CookieMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém um valor que indica se a aplicação está configurada para autenticação de formulários cookieless."
  remarks: "A propriedade CookieMode reflete o valor para o `cookieless` atributo do elemento de configuração. A propriedade CookieMode determina se o <xref:System.Web.Security.FormsAuthenticationTicket>será armazenado num cookie de sessão no browser ou armazenado no valor o <xref:System.Web.HttpRequest.QueryString%2A>propriedade.</xref:System.Web.HttpRequest.QueryString%2A> </xref:System.Web.Security.FormsAuthenticationTicket>      > [!NOTE] > Quando o <xref:System.Web.Security.FormsAuthenticationTicket>valor é armazenado no URI, o comprimento do URI gerado pode ser superior ao comprimento máximo permitido.</xref:System.Web.Security.FormsAuthenticationTicket> Este é mais provável ocorrer quando o <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A>propriedade está definida como o nome da aplicação e o nome de aplicação é muito (40 ou mais carateres), quando os nomes de utilizador da aplicação são longos ou quando longos <xref:System.Web.Security.FormsAuthenticationTicket.UserData%2A>cadeias são armazenadas no <xref:System.Web.Security.FormsAuthenticationTicket>valor.</xref:System.Web.Security.FormsAuthenticationTicket> </xref:System.Web.Security.FormsAuthenticationTicket.UserData%2A> </xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A> Se o URI gerado é demasiado longo, o servidor Web irá devolver um `400 - Bad Request` erro."
  example:
  - "The following code example sets the `cookieless` attribute to `AutoDetect` in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"AutoDetect\" />  \n</authentication>  \n```"
  syntax:
    content: public static System.Web.HttpCookieMode CookieMode { get; }
    return:
      type: System.Web.HttpCookieMode
      description: "Um do <xref href=&quot;System.Web.HttpCookieMode&quot;> </xref> valores que indica se a aplicação está configurada para autenticação de formulários cookieless. A predefinição é <xref href=&quot;System.Web.HttpCookieMode&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.CookieMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.CookiesSupported
  id: CookiesSupported
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: CookiesSupported
  nameWithType: FormsAuthentication.CookiesSupported
  fullName: System.Web.Security.FormsAuthentication.CookiesSupported
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém um valor que indica se a aplicação está configurada para suportar a autenticação de formulários cookieless."
  remarks: "A propriedade CookiesSupported devolve um valor com base no <xref:System.Web.Security.FormsAuthentication.CookieMode%2A>valor e as capacidades do browser.</xref:System.Web.Security.FormsAuthentication.CookieMode%2A>      -Se a <xref:System.Web.Security.FormsAuthentication.CookieMode%2A>propriedade está definida como <xref:System.Web.HttpCookieMode>, irá devolver a propriedade CookiesSupported `true`.</xref:System.Web.HttpCookieMode> </xref:System.Web.Security.FormsAuthentication.CookieMode%2A>      -Se a <xref:System.Web.Security.FormsAuthentication.CookieMode%2A>propriedade está definida como <xref:System.Web.HttpCookieMode>, irá devolver a propriedade CookiesSupported `false`.</xref:System.Web.HttpCookieMode> </xref:System.Web.Security.FormsAuthentication.CookieMode%2A>      -Se a <xref:System.Web.Security.FormsAuthentication.CookieMode%2A>propriedade está definida como <xref:System.Web.HttpCookieMode>, irá devolver a propriedade CookiesSupported `true` se o browser suportar cookies e os cookies estão ativados; caso contrário, a propriedade CookiesSupported devolverá `false`.</xref:System.Web.HttpCookieMode> </xref:System.Web.Security.FormsAuthentication.CookieMode%2A>      -Se a <xref:System.Web.Security.FormsAuthentication.CookieMode%2A>propriedade está definida como <xref:System.Web.HttpCookieMode>, irá devolver a propriedade CookiesSupported `true` se o <xref:System.Web.HttpRequest.Browser%2A>para atual <xref:System.Web.HttpContext.Request%2A>suporta cookies e redirecionar o cookies; caso contrário, irá devolver a propriedade CookiesSupported `false`.</xref:System.Web.HttpContext.Request%2A> </xref:System.Web.HttpRequest.Browser%2A> </xref:System.Web.HttpCookieMode> </xref:System.Web.Security.FormsAuthentication.CookieMode%2A>"
  example:
  - "The following code example sets the `cookieless` attribute to <xref:System.Web.HttpCookieMode> in the Web.config file. This configuration will result in the CookiesSupported property returning `false`.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseUri\" />  \n</authentication>  \n```"
  syntax:
    content: public static bool CookiesSupported { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Se a aplicação está configurada para suportar a autenticação de formulários cookieless; caso contrário, <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.CookiesSupported*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.Decrypt(System.String)
  id: Decrypt(System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: Decrypt(String)
  nameWithType: FormsAuthentication.Decrypt(String)
  fullName: System.Web.Security.FormsAuthentication.Decrypt(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Cria um <xref href=&quot;System.Web.Security.FormsAuthenticationTicket&quot;> </xref> objeto com base na permissão de autenticação de formulários encriptados transmitida ao método."
  syntax:
    content: public static System.Web.Security.FormsAuthenticationTicket Decrypt (string encryptedTicket);
    parameters:
    - id: encryptedTicket
      type: System.String
      description: "A permissão de autenticação encriptada."
    return:
      type: System.Web.Security.FormsAuthenticationTicket
      description: "A <xref href=&quot;System.Web.Security.FormsAuthenticationTicket&quot;></xref> object. Se o <code> encryptedTicket </code> parâmetro não é uma permissão válida, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> é devolvido."
  overload: System.Web.Security.FormsAuthentication.Decrypt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>encryptedTicket</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>encryptedTicket</code> is an empty string (\"\").  \n  \n \\- or -  \n  \n The length of <code>encryptedTicket</code> is greater than 4096 characters.  \n  \n \\- or -  \n  \n <code>encryptedTicket</code> is of an invalid format."
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.DefaultUrl
  id: DefaultUrl
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: DefaultUrl
  nameWithType: FormsAuthentication.DefaultUrl
  fullName: System.Web.Security.FormsAuthentication.DefaultUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém o URL que o <xref href=&quot;System.Web.Security.FormsAuthentication&quot;> </xref> classe irá redirecionar para se não for especificado o URL de redirecionamento."
  remarks: "O valor da propriedade DefaultUrl está definido no ficheiro de configuração para uma aplicação ASP.NET, utilizando o `defaultUrl` atributo do elemento de configuração. A propriedade DefaultUrl é utilizada pelo <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>método se nenhum URL de retorno está incluído no pedido.</xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> Da mesma forma, o <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A>método irá devolver o DefaultUrl se nenhum URL de retorno está incluído no pedido.</xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A>"
  example:
  - "The following code example sets the `defaultUrl` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    defaultUrl=\"index.aspx\" />  \n</authentication>  \n```"
  syntax:
    content: public static string DefaultUrl { get; }
    return:
      type: System.String
      description: "O URL que o <xref href=&quot;System.Web.Security.FormsAuthentication&quot;> </xref> classe irá redirecionar para se não for especificado o URL de redirecionamento. A predefinição é &quot;default.aspx.&quot;"
  overload: System.Web.Security.FormsAuthentication.DefaultUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects
  id: EnableCrossAppRedirects
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: EnableCrossAppRedirects
  nameWithType: FormsAuthentication.EnableCrossAppRedirects
  fullName: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém um valor que indica se os utilizadores autenticados podem ser redirecionados para os URLs em outras aplicações Web."
  remarks: "O valor da propriedade EnableCrossAppRedirects está definido com o `enableCrossAppRedirects` atributo do elemento de configuração.       A propriedade EnableCrossAppRedirects é verificada dentro de <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>método quando o redirecionamento do URL não aponta para uma página na aplicação atual.</xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> Se EnableCrossAppRedirects `true`, em seguida, o redirecionamento é efetuado; se for EnableCrossAppRedirects `false`, o browser é redirecionado para a página definida no <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>propriedade.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>      > [!NOTE] > Quando redirecionar páginas em todas as aplicações, tem de se certificar de que atributos específicos no elemento de configuração estão duplicados entre as aplicações autenticadas. Para obter mais informações e um exemplo, consulte [formulários autenticação em todas as aplicações](~/add/includes/ajax-current-ext-md.md).      > [!IMPORTANT] > Ao redirecionamentos entre aplicações são permitidos, o site é vulnerável a uma exploração que direciona os utilizadores a um Web site malicioso, mas utiliza a página de início de sessão para o seu site. Verifique sempre se o URL de redirecionamento é devolvido pelo <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A>método é um URL que pretende para que, pode certificar-se de que permitem redirecionamentos apenas em sites aprovados.</xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> Também deve verificar que o URL de redirecionamento utiliza o protocolo apropriado (HTTP ou HTTPS). Para efetuar estas verificações, pode adicionar um processador de eventos de nova colocação à sua página de início de sessão ou, pode adicionar um processador para o <xref:System.Web.UI.WebControls.Login.LoggedIn>eventos do <xref:System.Web.UI.WebControls.Login>controlo.</xref:System.Web.UI.WebControls.Login> </xref:System.Web.UI.WebControls.Login.LoggedIn>"
  example:
  - "The following code example sets the `enableCrossAppRedirects` attribute to `true` in the Web.config file for an ASP.NET application.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseUri\"  \n    requireSSL=\"true\"   \n    enableCrossAppRedirects=\"true\" />  \n</authentication>  \n```"
  syntax:
    content: public static bool EnableCrossAppRedirects { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os utilizadores autenticados podem ser redirecionados para os URLs em outras aplicações Web; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.EnableFormsAuthentication(System.Collections.Specialized.NameValueCollection)
  id: EnableFormsAuthentication(System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: EnableFormsAuthentication(NameValueCollection)
  nameWithType: FormsAuthentication.EnableFormsAuthentication(NameValueCollection)
  fullName: System.Web.Security.FormsAuthentication.EnableFormsAuthentication(NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Permite a autenticação de formulários."
  remarks: "Se o <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>propriedade é `null`, que a propriedade está definida para o valor de URL predefinido do `configurationData` parâmetro.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> Se o <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>propriedade é `null`, se for definida como o valor do URL de início de sessão do `configurationData` parâmetro.</xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>"
  syntax:
    content: public static void EnableFormsAuthentication (System.Collections.Specialized.NameValueCollection configurationData);
    parameters:
    - id: configurationData
      type: System.Collections.Specialized.NameValueCollection
      description: "Uma coleção de nome-valor contém valores para &quot;defaultUrl&quot; e/ou &quot;loginUrl&quot;. O parâmetro pode ser nulo se existirem valores para o URL predefinido ou o URL de início de sessão."
  overload: System.Web.Security.FormsAuthentication.EnableFormsAuthentication*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A aplicação não está na fase de inicialização do pré-carregamento."
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.Encrypt(System.Web.Security.FormsAuthenticationTicket)
  id: Encrypt(System.Web.Security.FormsAuthenticationTicket)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: Encrypt(FormsAuthenticationTicket)
  nameWithType: FormsAuthentication.Encrypt(FormsAuthenticationTicket)
  fullName: System.Web.Security.FormsAuthentication.Encrypt(FormsAuthenticationTicket)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Cria uma cadeia contendo uma permissão de autenticação de formulários encriptados adequada para utilização num HTTP cookie."
  remarks: ''
  example:
  - "The following code example stores the result of the Encrypt method in a cookie by using the <xref:System.Web.Security.FormsAuthentication.FormsCookieName%2A> property and redirects the user to the URL returned from the <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> method.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[FormsAuthenticationTicketClass#1](~/add/codesnippet/csharp/d209d6db-e50b-4c64-961a-_1.aspx)]\n [!code-vb[FormsAuthenticationTicketClass#1](~/add/codesnippet/visualbasic/d209d6db-e50b-4c64-961a-_1.aspx)]"
  syntax:
    content: public static string Encrypt (System.Web.Security.FormsAuthenticationTicket ticket);
    parameters:
    - id: ticket
      type: System.Web.Security.FormsAuthenticationTicket
      description: "O <xref href=&quot;System.Web.Security.FormsAuthenticationTicket&quot;> </xref> objeto com o qual pretende criar a permissão de autenticação de formulários encriptados."
    return:
      type: System.String
      description: "Uma cadeia contendo uma permissão de autenticação de formulários encriptados."
  overload: System.Web.Security.FormsAuthentication.Encrypt*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>ticket</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.FormsCookieName
  id: FormsCookieName
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: FormsCookieName
  nameWithType: FormsAuthentication.FormsCookieName
  fullName: System.Web.Security.FormsAuthentication.FormsCookieName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém o nome do cookie usado para guardar os bilhetes de autenticação de formulários."
  remarks: "O valor da propriedade FormsCookieName está definido no ficheiro de configuração para uma aplicação ASP.NET, utilizando o `name` atributo do elemento de configuração. O FormsCookieName é utilizado para referenciar o cookie que armazena o <xref:System.Web.Security.FormsAuthenticationTicket>informações.</xref:System.Web.Security.FormsAuthenticationTicket>"
  example:
  - "The following code example sets the FormsCookieName property value by using the `name` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseCookies\"  \n    name=\".ASPXFORMSAUTH\" />  \n</authentication>  \n```"
  syntax:
    content: public static string FormsCookieName { get; }
    return:
      type: System.String
      description: "O nome do cookie usado para guardar os bilhetes de autenticação de formulários. A predefinição é &quot;. ASPXAUTH&quot;."
  overload: System.Web.Security.FormsAuthentication.FormsCookieName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.FormsCookiePath
  id: FormsCookiePath
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: FormsCookiePath
  nameWithType: FormsAuthentication.FormsCookiePath
  fullName: System.Web.Security.FormsAuthentication.FormsCookiePath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém o caminho para o cookie de autenticação de formulários."
  remarks: "O valor da propriedade FormsCookiePath está definido no ficheiro de configuração para uma aplicação de ASP.NET utilizando o `path` atributo do elemento de configuração. Especifica o FormsCookiePath o <xref:System.Web.HttpCookie.Path%2A>para o cookie que armazena o <xref:System.Web.Security.FormsAuthenticationTicket>informações.</xref:System.Web.Security.FormsAuthenticationTicket> </xref:System.Web.HttpCookie.Path%2A>"
  example:
  - "The following code example sets the FormsCookiePath property value by using the `path` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseCookies\"  \n    path=\"/MyApplication\" />  \n</authentication>  \n```"
  syntax:
    content: public static string FormsCookiePath { get; }
    return:
      type: System.String
      description: "O caminho do cookie onde as informações de permissão de autenticação de formulários são armazenadas. A predefinição é &quot;/&quot;."
  overload: System.Web.Security.FormsAuthentication.FormsCookiePath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean)
  id: GetAuthCookie(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: GetAuthCookie(String,Boolean)
  nameWithType: FormsAuthentication.GetAuthCookie(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.GetAuthCookie(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Cria um cookie de autenticação para um nome de utilizador especificadas. Isto não define o cookie como parte das respostas a enviar, para que uma aplicação pode ter mais controlo sobre a forma como o cookie é emitido."
  remarks: "O caminho do cookie é determinado pelo <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A>propriedade.</xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A>"
  syntax:
    content: public static System.Web.HttpCookie GetAuthCookie (string userName, bool createPersistentCookie);
    parameters:
    - id: userName
      type: System.String
      description: "O nome do utilizador autenticado."
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para criar um cookie durável (um que é guardado entre sessões do browser); caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Web.HttpCookie
      description: "Um <xref href=&quot;System.Web.HttpCookie&quot;> </xref> que contém informações de permissão de autenticação de formulários encriptados. O valor predefinido para o <xref:System.Web.Security.FormsAuthentication.FormsCookiePath*>propriedade é utilizada.</xref:System.Web.Security.FormsAuthentication.FormsCookiePath*>"
  overload: System.Web.Security.FormsAuthentication.GetAuthCookie*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean,System.String)
  id: GetAuthCookie(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: GetAuthCookie(String,Boolean,String)
  nameWithType: FormsAuthentication.GetAuthCookie(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.GetAuthCookie(String,Boolean,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Cria um cookie de autenticação para um nome de utilizador especificadas. Isto não define o cookie como parte das respostas a enviar."
  syntax:
    content: public static System.Web.HttpCookie GetAuthCookie (string userName, bool createPersistentCookie, string strCookiePath);
    parameters:
    - id: userName
      type: System.String
      description: "O nome do utilizador autenticado."
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para criar um cookie durável (um que é guardado entre sessões do browser); caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: strCookiePath
      type: System.String
      description: "O <xref:System.Web.HttpCookie.Path*>do cookie de autenticação.</xref:System.Web.HttpCookie.Path*>"
    return:
      type: System.Web.HttpCookie
      description: "Um <xref href=&quot;System.Web.HttpCookie&quot;> </xref> que contém informações de permissão de autenticação de formulários encriptados."
  overload: System.Web.Security.FormsAuthentication.GetAuthCookie*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.GetRedirectUrl(System.String,System.Boolean)
  id: GetRedirectUrl(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: GetRedirectUrl(String,Boolean)
  nameWithType: FormsAuthentication.GetRedirectUrl(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.GetRedirectUrl(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Devolve o URL de redirecionamento para o pedido original que causou o redirecionamento para a página de início de sessão."
  remarks: "Pode utilizar este método quando pretender efetuar o redirecionamento no código da aplicação em vez de utilizar o <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>método.</xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>       O método de GetRedirectUrl devolve o URL especificado na cadeia de consulta utilizando o `ReturnURL` nome da variável. Por exemplo, no URL `http://www.contoso.com/login.aspx?ReturnUrl=caller.aspx`, o método GetRedirectUrl devolve o URL de retorno `caller.aspx`. Se o `ReturnURL` variável não existe, o método de GetRedirectUrl devolve o URL no <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>propriedade.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>       ASP.NET adiciona automaticamente o URL de retorno quando o browser é redirecionado para a página de início de sessão.       Por predefinição, o `ReturnUrl` variável tem de fazer referência a uma página na aplicação atual. Se `ReturnUrl` refere-se a uma página numa aplicação diferente ou no servidor diferente, os métodos de GetRedirectUrl devolve o URL no <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>propriedade.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> Se pretender permitir que o URL de retorno fazer referência a uma página fora da aplicação atual, tem de definir o <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>propriedade `true` utilizando o `enableCrossAppRedirects` atributo do elemento de configuração.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>      > [!IMPORTANT] > Definição o <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>propriedade `true` para permitir que redireciona cruzado aplicação é uma potencial ameaça de segurança.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> Para obter mais informações, consulte o <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>propriedade.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>"
  example:
  - "The following code example redirects authenticated users to the URL returned from the GetRedirectUrl method.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[FormsAuthenticationTicketClass#1](~/add/codesnippet/csharp/41a9cd2e-33ed-4156-8c31-_1.aspx)]\n [!code-vb[FormsAuthenticationTicketClass#1](~/add/codesnippet/visualbasic/41a9cd2e-33ed-4156-8c31-_1.aspx)]"
  syntax:
    content: public static string GetRedirectUrl (string userName, bool createPersistentCookie);
    parameters:
    - id: userName
      type: System.String
      description: "O nome do utilizador autenticado."
    - id: createPersistentCookie
      type: System.Boolean
      description: "Este parâmetro é ignorado."
    return:
      type: System.String
      description: "Uma cadeia que contém o URL de redirecionamento."
  overload: System.Web.Security.FormsAuthentication.GetRedirectUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(System.String,System.String)
  id: HashPasswordForStoringInConfigFile(System.String,System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: HashPasswordForStoringInConfigFile(String,String)
  nameWithType: FormsAuthentication.HashPasswordForStoringInConfigFile(String,String)
  fullName: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Produz uma palavra-passe hash adequada para armazenar num ficheiro de configuração com base na palavra-passe especificada e algoritmo hash."
  remarks: "O método HashPasswordForStoringInConfigFile cria um valor hash da palavra-passe que pode ser utilizado ao armazenar credenciais de autenticação de formulários no ficheiro de configuração para uma aplicação.       As credenciais de autenticação armazenadas no ficheiro de configuração para uma aplicação são utilizadas pelo <xref:System.Web.Security.FormsAuthentication.Authenticate%2A>método para verificar as palavras-passe para os utilizadores de uma aplicação.</xref:System.Web.Security.FormsAuthentication.Authenticate%2A> Em alternativa, pode utilizar a associação do ASP.NET para armazenar as credenciais do utilizador. Para obter mais informações, consulte [gerir utilizadores ao utilizar a associação](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example takes a user name, password, and hash type and displays the  section of the configuration that includes the user definition and hashed password.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[FormsAuthenticationHashPassword#1](~/add/codesnippet/visualbasic/60863efe-d1c9-47ee-90e6-_1.aspx)]\n [!code-cs[FormsAuthenticationHashPassword#1](~/add/codesnippet/csharp/60863efe-d1c9-47ee-90e6-_1.aspx)]"
  syntax:
    content: public static string HashPasswordForStoringInConfigFile (string password, string passwordFormat);
    parameters:
    - id: password
      type: System.String
      description: "A palavra-passe hash."
    - id: passwordFormat
      type: System.String
      description: "O algoritmo de hash para utilizar. `passwordFormat`é um <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> que representa uma do <xref href=&quot;System.Web.Configuration.FormsAuthPasswordFormat&quot;> </xref> valores de enumeração."
    return:
      type: System.String
      description: "A palavra-passe com hash."
  overload: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>password</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>       -or-       <code>passwordFormat</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>passwordFormat</code>Não é um <xref href=&quot;System.Web.Configuration.FormsAuthPasswordFormat&quot;> </xref> valor."
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.Initialize
  id: Initialize
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: Initialize()
  nameWithType: FormsAuthentication.Initialize()
  fullName: System.Web.Security.FormsAuthentication.Initialize()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Inicializa a <xref href=&quot;System.Web.Security.FormsAuthentication&quot;> </xref> objeto com base nas definições de configuração para a aplicação."
  remarks: "O método de inicialização é chamado quando <xref:System.Web.Security.FormsAuthenticationModule>cria uma instância de <xref:System.Web.Security.FormsAuthentication>classe.</xref:System.Web.Security.FormsAuthentication> </xref:System.Web.Security.FormsAuthenticationModule> Este método não se destina a ser chamado a partir do código."
  syntax:
    content: public static void Initialize ();
    parameters: []
  overload: System.Web.Security.FormsAuthentication.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.IsEnabled
  id: IsEnabled
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: IsEnabled
  nameWithType: FormsAuthentication.IsEnabled
  fullName: System.Web.Security.FormsAuthentication.IsEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém um valor que indica se a autenticação de formulários está ativada."
  syntax:
    content: public static bool IsEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a autenticação de formulários está ativada; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.IsEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.LoginUrl
  id: LoginUrl
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: LoginUrl
  nameWithType: FormsAuthentication.LoginUrl
  fullName: System.Web.Security.FormsAuthentication.LoginUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém o URL para o início de sessão página que o <xref href=&quot;System.Web.Security.FormsAuthentication&quot;> </xref> classe irá redirecionar para."
  remarks: "O valor da propriedade LoginUrl está definido no ficheiro de configuração para uma aplicação ASP.NET, utilizando o `loginUrl` atributo do elemento de configuração. O LoginUrl é utilizado pelo <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A>método.</xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A>"
  example:
  - "The following code example sets the `loginUrl` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    defaultUrl=\"index.aspx\" />  \n</authentication>  \n```"
  syntax:
    content: public static string LoginUrl { get; }
    return:
      type: System.String
      description: "O URL para o início de sessão página que o <xref href=&quot;System.Web.Security.FormsAuthentication&quot;> </xref> classe irá redirecionar para. A predefinição é &quot;login.aspx.&quot;"
  overload: System.Web.Security.FormsAuthentication.LoginUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean)
  id: RedirectFromLoginPage(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RedirectFromLoginPage(String,Boolean)
  nameWithType: FormsAuthentication.RedirectFromLoginPage(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Redireciona um utilizador autenticado para o URL pedido inicialmente ou o URL predefinido."
  remarks: "O método RedirectFromLoginPage redireciona para o URL especificado na cadeia de consulta utilizando o `ReturnURL` nome da variável. Por exemplo, no URL `http://www.contoso.com/login.aspx?ReturnUrl=caller.aspx`, o método RedirectFromLoginPage redireciona para o URL de retorno `caller.aspx`. Se o `ReturnURL` variável não existe, o método RedirectFromLoginPage redireciona para o URL a <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>propriedade.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>       ASP.NET adiciona automaticamente o URL de retorno quando o browser é redirecionado para a página de início de sessão.       Por predefinição, o `ReturnUrl` variável tem de fazer referência a uma página na aplicação atual. Se `ReturnUrl` refere-se a uma página numa aplicação diferente ou num servidor diferente, os métodos de RedirectFromLoginPage redireciona para o URL a <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>propriedade.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> Se pretender permitir que o redireciona para uma página fora da aplicação atual, tem de definir o <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>propriedade `true` utilizando o `enableCrossAppRedirects` atributo do elemento de configuração.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>      > [!IMPORTANT] > Definição o <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>propriedade `true` para permitir que redireciona cruzado aplicação é uma potencial ameaça de segurança.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> Para obter mais informações, consulte o <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>propriedade.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>       Se o <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>propriedade é `true`e o `ReturnUrl` variável está na aplicação atual ou o <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>propriedade é `true`, em seguida, o método de RedirectFromLoginPage emite uma permissão de autenticação e coloca em predefinido cookie, utilizando o <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A>método.</xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> </xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> </xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>       Se <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>é `false` e o caminho de redireccionamento é um URL na aplicação atual, o pedido de suporte é emitido como parte do URL de redirecionamento.</xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> Se <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>é `false`, <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>é `true`, e o URL não se refere a uma página na aplicação atual de redirecionamento, o método RedirectFromLoginPage emite uma permissão de autenticação e coloca-lo no <xref:System.Web.HttpRequest.QueryString%2A>propriedade.</xref:System.Web.HttpRequest.QueryString%2A> </xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> </xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>"
  example:
  - "The following code example redirects validated users to either the originally requested URL or the <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>. The code example uses ASP.NET membership to validate users. For more information about ASP.NET membership, see [Managing Users by Using Membership](~/add/includes/ajax-current-ext-md.md).  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/csharp/1b30741b-7340-4c63-b342-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/visualbasic/1b30741b-7340-4c63-b342-_1.aspx)]"
  syntax:
    content: public static void RedirectFromLoginPage (string userName, bool createPersistentCookie);
    parameters:
    - id: userName
      type: System.String
      description: "O nome de utilizador autenticado."
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para criar um cookie durável (um que é guardado entre sessões do browser); caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.RedirectFromLoginPage*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: 'O URL de regresso especificado na cadeia de consulta contém um protocolo diferente HTTP: ou HTTPS:.'
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean,System.String)
  id: RedirectFromLoginPage(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RedirectFromLoginPage(String,Boolean,String)
  nameWithType: FormsAuthentication.RedirectFromLoginPage(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(String,Boolean,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Redireciona um utilizador autenticado para o URL pedido inicialmente ou o URL predefinido utilizando o caminho de cookie especificada para o cookie de autenticação de formulários."
  remarks: "O método RedirectFromLoginPage redireciona para o URL de regresso especificado na cadeia de consulta utilizando o `ReturnURL` nome da variável. Por exemplo, no URL `http://www.contoso.com/login.aspx?ReturnUrl=caller.aspx`, o método RedirectFromLoginPage redireciona para o URL de retorno `caller.aspx`. Se o `ReturnURL` variável não existe, o método RedirectFromLoginPage redireciona para o URL a <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>propriedade.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>       ASP.NET adiciona automaticamente o URL de retorno quando o browser é redirecionado para a página de início de sessão.       Por predefinição, o `ReturnUrl` variável tem de fazer referência a uma página na aplicação atual. Se `ReturnUrl` refere-se a uma página numa aplicação diferente ou num servidor diferente, RedirectFromLoginPage método redireciona para o URL a <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>propriedade.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> Se pretender permitir que o redireciona para uma página fora da aplicação atual, tem de definir o <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>propriedade `true` utilizando o `enableCrossAppRedirects` atributo do elemento de configuração.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>      > [!IMPORTANT] > Definição o <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>propriedade `true` para permitir que redireciona cruzado aplicação é uma potencial ameaça de segurança.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> Para obter mais informações, consulte o <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>propriedade.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>       Se o <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>propriedade é `true`e o `ReturnUrl` variável está na aplicação atual ou o <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>propriedade é `true`, em seguida, o método de RedirectFromLoginPage emite uma permissão de autenticação e coloca o cookie especificado pelo `strCookiePath` parâmetro utilizando o <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A>método.</xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> </xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> </xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>       Se <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>é `false` e o caminho de redireccionamento é um URL na aplicação atual, o pedido de suporte é emitido como parte do URL de redirecionamento.</xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> Se <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>é `false`, <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>é `true`, e o URL não se refere a uma página na aplicação atual de redirecionamento, o método RedirectFromLoginPage emite uma permissão de autenticação e coloca-lo no <xref:System.Web.HttpRequest.QueryString%2A>propriedade.</xref:System.Web.HttpRequest.QueryString%2A> </xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> </xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>"
  syntax:
    content: public static void RedirectFromLoginPage (string userName, bool createPersistentCookie, string strCookiePath);
    parameters:
    - id: userName
      type: System.String
      description: "O nome de utilizador autenticado."
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para criar um cookie durável (um que é guardado entre sessões do browser); caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: strCookiePath
      type: System.String
      description: "O caminho de cookie para a permissão de autenticação de formulários."
  overload: System.Web.Security.FormsAuthentication.RedirectFromLoginPage*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: 'O URL de regresso especificado na cadeia de consulta contém um protocolo diferente HTTP: ou HTTPS:.'
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RedirectToLoginPage
  id: RedirectToLoginPage
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RedirectToLoginPage()
  nameWithType: FormsAuthentication.RedirectToLoginPage()
  fullName: System.Web.Security.FormsAuthentication.RedirectToLoginPage()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Redireciona o browser para o URL de início de sessão."
  remarks: "O método RedirectToLoginPage redireciona o browser para <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>.</xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>       O método RedirectToLoginPage desmarque o cookie de autenticação de formulários. Pode utilizar o método de RedirectToLoginPage em conjunto com o <xref:System.Web.Security.FormsAuthentication.SignOut%2A>método para um utilizador de limite de registo e permitir que outro utilizador iniciar sessão.</xref:System.Web.Security.FormsAuthentication.SignOut%2A>"
  example:
  - "The following code example clears the forms-authentication cookie using the <xref:System.Web.Security.FormsAuthentication.SignOut%2A> method and redirects the user to the login page using the RedirectToLoginPage method.  \n  \n [!code-cs[System.Web.Security.FormsAuthentication#2](~/add/codesnippet/csharp/m-system.web.security.fo_0_1.aspx)]\n [!code-vb[System.Web.Security.FormsAuthentication#2](~/add/codesnippet/visualbasic/m-system.web.security.fo_0_1.aspx)]"
  syntax:
    content: public static void RedirectToLoginPage ();
    parameters: []
  overload: System.Web.Security.FormsAuthentication.RedirectToLoginPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RedirectToLoginPage(System.String)
  id: RedirectToLoginPage(System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RedirectToLoginPage(String)
  nameWithType: FormsAuthentication.RedirectToLoginPage(String)
  fullName: System.Web.Security.FormsAuthentication.RedirectToLoginPage(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Redireciona o browser para o URL de início de sessão com a cadeia de consulta especificada."
  remarks: "O método RedirectToLoginPage redireciona o browser para o <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>e inclui o `extraQueryString` valor como o <xref:System.Management.ManagementQuery.QueryString%2A>para o URL redirecionado.</xref:System.Management.ManagementQuery.QueryString%2A> </xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>       O método RedirectToLoginPage desmarque o cookie de autenticação de formulários. Pode utilizar o método de RedirectToLoginPage em conjunto com o <xref:System.Web.Security.FormsAuthentication.SignOut%2A>método para um utilizador de limite de registo e permitir que outro utilizador iniciar sessão.</xref:System.Web.Security.FormsAuthentication.SignOut%2A>"
  example:
  - "The following code example clears the forms-authentication cookie using the <xref:System.Web.Security.FormsAuthentication.SignOut%2A> method and redirects the user to the login page using the RedirectToLoginPage method.  \n  \n [!code-cs[System.Web.Security.FormsAuthentication#3](~/add/codesnippet/csharp/m-system.web.security.fo_1_1.aspx)]\n [!code-vb[System.Web.Security.FormsAuthentication#3](~/add/codesnippet/visualbasic/m-system.web.security.fo_1_1.aspx)]"
  syntax:
    content: public static void RedirectToLoginPage (string extraQueryString);
    parameters:
    - id: extraQueryString
      type: System.String
      description: "A cadeia de consulta para incluir o URL de redirecionamento."
  overload: System.Web.Security.FormsAuthentication.RedirectToLoginPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RenewTicketIfOld(System.Web.Security.FormsAuthenticationTicket)
  id: RenewTicketIfOld(System.Web.Security.FormsAuthenticationTicket)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RenewTicketIfOld(FormsAuthenticationTicket)
  nameWithType: FormsAuthentication.RenewTicketIfOld(FormsAuthenticationTicket)
  fullName: System.Web.Security.FormsAuthentication.RenewTicketIfOld(FormsAuthenticationTicket)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Condicionalmente atualiza o problema data e hora e data de expiração e hora para um <xref href=&quot;System.Web.Security.FormsAuthenticationTicket&quot;> </xref>."
  remarks: "O método RenewTicketIfOld atualiza a data de expiração e hora de fornecido <xref:System.Web.Security.FormsAuthenticationTicket>se a data e hora atuais menos o <xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A>valor é maior do que o <xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A>valor menos a data e hora atuais.</xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> </xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A> </xref:System.Web.Security.FormsAuthenticationTicket>       O pedido de suporte é atualizado com o <xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A>propriedade definida para a data e hora atuais e o <xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A>propriedade definida para a data atual e a hora mais original <xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A>valor menos original <xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A>valor.</xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A> </xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> </xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> </xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A>"
  syntax:
    content: public static System.Web.Security.FormsAuthenticationTicket RenewTicketIfOld (System.Web.Security.FormsAuthenticationTicket tOld);
    parameters:
    - id: tOld
      type: System.Web.Security.FormsAuthenticationTicket
      description: "A permissão de autenticação de formulários para atualizar."
    return:
      type: System.Web.Security.FormsAuthenticationTicket
      description: "A atualização <xref href=&quot;System.Web.Security.FormsAuthenticationTicket&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.RenewTicketIfOld*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RequireSSL
  id: RequireSSL
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RequireSSL
  nameWithType: FormsAuthentication.RequireSSL
  fullName: System.Web.Security.FormsAuthentication.RequireSSL
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém um valor que indica se o cookie de autenticação de formulários requer SSL para ser reencaminhado para o servidor."
  remarks: "O valor da propriedade RequireSSL está definido no ficheiro de configuração para uma aplicação ASP.NET, utilizando o `requireSSL` atributo do elemento de configuração. Pode especificar o ficheiro Web. config para a sua aplicação ASP.NET se é necessário o SSL (Secure Sockets Layer) para devolver o cookie de autenticação de formulários para o servidor ao definir o `requireSSL` atributo. Para obter mais informações, consulte <xref:System.Web.HttpCookie.Secure%2A>.</xref:System.Web.HttpCookie.Secure%2A>       É recomendado que se configurar `requireSSL` como `false`, também configurar `slidingExpiration` como `false`, para reduzir a quantidade de tempo para que um pedido é válido."
  example:
  - "The following code example sets the `requireSSL` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseCookies\"  \n    requireSSL=\"true\"  \n    path=\"/MyApplication\" />  \n</authentication>  \n```"
  syntax:
    content: public static bool RequireSSL { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o SSL é necessário para devolver o cookie de autenticação de formulários para o servidor; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.RequireSSL*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean)
  id: SetAuthCookie(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: SetAuthCookie(String,Boolean)
  nameWithType: FormsAuthentication.SetAuthCookie(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.SetAuthCookie(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Cria uma permissão de autenticação para o nome de utilizador fornecido e adiciona-o para a coleção de cookies da resposta ou para o URL se estiver a utilizar autenticação cookieless."
  remarks: "O método SetAuthCookie adiciona uma permissão de autenticação de formulários para a coleção de cookies ou para o URL se <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>é `false`.</xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> A permissão de autenticação de formulários fornece informações de autenticação de formulários para o seguinte pedido efetuado pelo browser. Com a autenticação de formulários, pode utilizar o método SetAuthCookie quando pretender autenticar um utilizador, mas ainda manter o controlo de painel de navegação com redirecionamentos."
  syntax:
    content: public static void SetAuthCookie (string userName, bool createPersistentCookie);
    parameters:
    - id: userName
      type: System.String
      description: "O nome de um utilizador autenticado. Isto não tem de mapear para uma conta do Windows."
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para criar um cookie persistente (um que é guardado entre sessões do browser); caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.SetAuthCookie*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<>*> is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> and <>*> is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean,System.String)
  id: SetAuthCookie(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: SetAuthCookie(String,Boolean,String)
  nameWithType: FormsAuthentication.SetAuthCookie(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.SetAuthCookie(String,Boolean,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Cria uma permissão de autenticação para o nome de utilizador fornecido e adiciona-o para a coleção de cookies de resposta, utilizando o caminho fornecido cookie ou utilizando o URL, se estiver a utilizar autenticação cookieless."
  remarks: "O método SetAuthCookie adiciona uma permissão de autenticação de formulários para a coleção de cookies ou o URL, se <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>é `false`.</xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> A permissão de autenticação de formulários fornece informações de autenticação de formulários para o seguinte pedido efetuado pelo browser. Com a autenticação de formulários, pode utilizar o método SetAuthCookie quando pretender autenticar um utilizador, mas ainda manter o controlo de painel de navegação com redirecionamentos."
  syntax:
    content: public static void SetAuthCookie (string userName, bool createPersistentCookie, string strCookiePath);
    parameters:
    - id: userName
      type: System.String
      description: "O nome de um utilizador autenticado."
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para criar um cookie durável (um que é guardado entre sessões do browser); caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: strCookiePath
      type: System.String
      description: "O caminho de cookie para a permissão de autenticação de formulários."
  overload: System.Web.Security.FormsAuthentication.SetAuthCookie*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<>*> is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> and <>*> is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.SignOut
  id: SignOut
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: SignOut()
  nameWithType: FormsAuthentication.SignOut()
  fullName: System.Web.Security.FormsAuthentication.SignOut()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Remove a permissão de autenticação de formulários no browser."
  remarks: "O método SignOut remove as informações de permissão de autenticação de formulários o cookie ou o URL se <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>é `false`.</xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> Pode utilizar o método SignOut em conjunto com o <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A>método para um utilizador de limite de registo e permitir que outro utilizador iniciar sessão.</xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A>       Se executar exclusivamente no modo cookieless ou se a suportar os utilizadores autenticados e anónimos, deve explicitamente controla o redirecionamento para a página de início de sessão se necessitar de lógica de negócio especiais para executar em resultado de remover o identificador anónimo.       Quando se chama o método SignOut, um redirecionamento para a página de início de sessão da aplicação é efetuado ao chamar o <xref:System.Web.HttpResponse.Redirect%2A>método com o `endResponse` parâmetro definido como `false`.</xref:System.Web.HttpResponse.Redirect%2A> O redirecionamento não ocorrer até que a página atual terminou a execução, pelo que podem ser executado códigos adicionais. Se o código não contém um redirecionamento explícito para outra página, o utilizador é redirecionado para a página de início de sessão configurada no ficheiro de configuração da aplicação.       Apenas chamar o método SignOut remove o cookie de autenticação de formulários. O servidor Web não armazena pedidos de autenticação válidos e expiradas para comparação posterior. Isto torna o seu site vulneráveis a ataque uma repetição se um utilizador mal intencionado obtiver um cookie de autenticação de formulários válido. Para melhorar a segurança ao utilizar um cookie de autenticação de formulários, deve fazer o seguinte:-utilizar absoluta expiração de cookies de autenticação de formulários, definindo o <xref:System.Web.Security.FormsAuthentication.SlidingExpiration%2A>propriedade `false`.</xref:System.Web.Security.FormsAuthentication.SlidingExpiration%2A> Isto limita a janela em que um cookie hijacked pode ser reproduzido.      -Apenas emitir e aceite cookies de autenticação através de Secure Sockets Layer (SSL), definindo o <xref:System.Web.Security.FormsAuthentication.RequireSSL%2A>propriedade `true` e executando o Web site completo em SSL.</xref:System.Web.Security.FormsAuthentication.RequireSSL%2A> Definir o <xref:System.Web.Security.FormsAuthentication.RequireSSL%2A>propriedade `true` assegura que o ASP.NET nunca enviará um cookie de autenticação para o browser através de uma ligação não SSL; no entanto, o cliente não poderá honrar a definição segura no cookie.</xref:System.Web.Security.FormsAuthentication.RequireSSL%2A> Isto significa que o cliente poderá enviar o cookie de autenticação de formulários através de uma ligação não SSL, deste modo, mantendo-os vulneráveis a apoderar-se. Pode impedir que um cliente a enviar o cookie de autenticação de formulários na limpar executando o Web site completo em SSL.      -Utilize o armazenamento persistente no servidor para registar quando um utilizador inicia sessão fora do Web site e, em seguida, utilize um evento de aplicação, tais como <xref:System.Web.HttpApplication.PostAuthenticateRequest>evento para determinar se o utilizador atual foi autenticado com autenticação de formulários.</xref:System.Web.HttpApplication.PostAuthenticateRequest> Se o utilizador foi autenticado com autenticação de formulários e se as informações no armazenamento persistente indica o utilizador é terminar sessão, imediatamente limpe o cookie de autenticação e redirecionar o browser novamente para a página de início de sessão. Depois de um início de sessão com êxito, atualize o armazenamento para refletir que o utilizador inicia sessão. Quando utiliza este método, a aplicação tem de controlar o estado de sessão do utilizador e tem de forçar utilizadores Inativos para terminar sessão."
  example:
  - "The following code example clears the forms-authentication cookie using the SignOut method and redirects the user to the login page using the <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> method.  \n  \n [!code-cs[System.Web.Security.FormsAuthentication#2](~/add/codesnippet/csharp/m-system.web.security.fo_2_1.aspx)]\n [!code-vb[System.Web.Security.FormsAuthentication#2](~/add/codesnippet/visualbasic/m-system.web.security.fo_2_1.aspx)]"
  syntax:
    content: public static void SignOut ();
    parameters: []
  overload: System.Web.Security.FormsAuthentication.SignOut*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.SlidingExpiration
  id: SlidingExpiration
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: SlidingExpiration
  nameWithType: FormsAuthentication.SlidingExpiration
  fullName: System.Web.Security.FormsAuthentication.SlidingExpiration
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém um valor que indica se a expiração deslizante está ativada."
  remarks: "O valor da propriedade SlidingExpiration está definido com o `slidingExpiration` atributo do elemento de configuração.       A expiração deslizante repõe a hora de expiração para um cookie de autenticação válido se é efetuado um pedido e mais de metade de intervalo de tempo limite expirou. Se o cookie expira, o utilizador é novamente autenticado. Definir a propriedade SlidingExpiration como `false` pode melhorar a segurança de uma aplicação ao limitar o tempo para que um cookie de autenticação for válido, com base no configurada `timeout` valor.       Recomendamos que se configurar `requireSSL` como `false`, também configurar `slidingExpiration` como `false`, para reduzir a quantidade de tempo para que um pedido é válido."
  example:
  - "The following code example sets the `slidingExpiration` attribute to `false` in the Web.config file for an ASP.NET application.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    name=\".ASPXFORMSAUTH\"  \n    cookieless=\"UseCookies\"  \n    requireSSL=\"true\"   \n    slidingExpiration=\"false\" />  \n</authentication>  \n```"
  syntax:
    content: public static bool SlidingExpiration { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a expiração deslizante está ativada; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.SlidingExpiration*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.TicketCompatibilityMode
  id: TicketCompatibilityMode
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: TicketCompatibilityMode
  nameWithType: FormsAuthentication.TicketCompatibilityMode
  fullName: System.Web.Security.FormsAuthentication.TicketCompatibilityMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém um valor que indica se deve utilizar a hora Universal Coordenada (UTC) ou a hora local para a data de expiração de permissão."
  syntax:
    content: public static System.Web.Configuration.TicketCompatibilityMode TicketCompatibilityMode { get; }
    return:
      type: System.Web.Configuration.TicketCompatibilityMode
      description: "Um valor que indica se deve utilizar a hora Universal Coordenada (UTC) ou a hora local para a data de expiração de permissão."
  overload: System.Web.Security.FormsAuthentication.TicketCompatibilityMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.Timeout
  id: Timeout
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: Timeout
  nameWithType: FormsAuthentication.Timeout
  fullName: System.Web.Security.FormsAuthentication.Timeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém a quantidade de tempo antes de uma permissão de autenticação expira."
  syntax:
    content: public static TimeSpan Timeout { get; }
    return:
      type: System.TimeSpan
      description: "A quantidade de tempo antes de uma permissão de autenticação expira."
  overload: System.Web.Security.FormsAuthentication.Timeout*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.Security.FormsAuthentication.#ctor
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsAuthentication()
  nameWithType: FormsAuthentication.FormsAuthentication()
  fullName: System.Web.Security.FormsAuthentication.FormsAuthentication()
- uid: System.Web.Security.FormsAuthentication.Authenticate(System.String,System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Authenticate(String,String)
  nameWithType: FormsAuthentication.Authenticate(String,String)
  fullName: System.Web.Security.FormsAuthentication.Authenticate(String,String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.FormsAuthentication.CookieDomain
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookieDomain
  nameWithType: FormsAuthentication.CookieDomain
  fullName: System.Web.Security.FormsAuthentication.CookieDomain
- uid: System.Web.Security.FormsAuthentication.CookieMode
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookieMode
  nameWithType: FormsAuthentication.CookieMode
  fullName: System.Web.Security.FormsAuthentication.CookieMode
- uid: System.Web.HttpCookieMode
  parent: System.Web
  isExternal: false
  name: HttpCookieMode
  nameWithType: HttpCookieMode
  fullName: System.Web.HttpCookieMode
- uid: System.Web.Security.FormsAuthentication.CookiesSupported
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookiesSupported
  nameWithType: FormsAuthentication.CookiesSupported
  fullName: System.Web.Security.FormsAuthentication.CookiesSupported
- uid: System.Web.Security.FormsAuthentication.Decrypt(System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Decrypt(String)
  nameWithType: FormsAuthentication.Decrypt(String)
  fullName: System.Web.Security.FormsAuthentication.Decrypt(String)
- uid: System.Web.Security.FormsAuthenticationTicket
  parent: System.Web.Security
  isExternal: false
  name: FormsAuthenticationTicket
  nameWithType: FormsAuthenticationTicket
  fullName: System.Web.Security.FormsAuthenticationTicket
- uid: System.Web.Security.FormsAuthentication.DefaultUrl
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: DefaultUrl
  nameWithType: FormsAuthentication.DefaultUrl
  fullName: System.Web.Security.FormsAuthentication.DefaultUrl
- uid: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: EnableCrossAppRedirects
  nameWithType: FormsAuthentication.EnableCrossAppRedirects
  fullName: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects
- uid: System.Web.Security.FormsAuthentication.EnableFormsAuthentication(System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: EnableFormsAuthentication(NameValueCollection)
  nameWithType: FormsAuthentication.EnableFormsAuthentication(NameValueCollection)
  fullName: System.Web.Security.FormsAuthentication.EnableFormsAuthentication(NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.Security.FormsAuthentication.Encrypt(System.Web.Security.FormsAuthenticationTicket)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Encrypt(FormsAuthenticationTicket)
  nameWithType: FormsAuthentication.Encrypt(FormsAuthenticationTicket)
  fullName: System.Web.Security.FormsAuthentication.Encrypt(FormsAuthenticationTicket)
- uid: System.Web.Security.FormsAuthentication.FormsCookieName
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsCookieName
  nameWithType: FormsAuthentication.FormsCookieName
  fullName: System.Web.Security.FormsAuthentication.FormsCookieName
- uid: System.Web.Security.FormsAuthentication.FormsCookiePath
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsCookiePath
  nameWithType: FormsAuthentication.FormsCookiePath
  fullName: System.Web.Security.FormsAuthentication.FormsCookiePath
- uid: System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: GetAuthCookie(String,Boolean)
  nameWithType: FormsAuthentication.GetAuthCookie(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.GetAuthCookie(String,Boolean)
- uid: System.Web.HttpCookie
  parent: System.Web
  isExternal: false
  name: HttpCookie
  nameWithType: HttpCookie
  fullName: System.Web.HttpCookie
- uid: System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: GetAuthCookie(String,Boolean,String)
  nameWithType: FormsAuthentication.GetAuthCookie(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.GetAuthCookie(String,Boolean,String)
- uid: System.Web.Security.FormsAuthentication.GetRedirectUrl(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: GetRedirectUrl(String,Boolean)
  nameWithType: FormsAuthentication.GetRedirectUrl(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.GetRedirectUrl(String,Boolean)
- uid: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(System.String,System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: HashPasswordForStoringInConfigFile(String,String)
  nameWithType: FormsAuthentication.HashPasswordForStoringInConfigFile(String,String)
  fullName: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(String,String)
- uid: System.Web.Security.FormsAuthentication.Initialize
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Initialize()
  nameWithType: FormsAuthentication.Initialize()
  fullName: System.Web.Security.FormsAuthentication.Initialize()
- uid: System.Web.Security.FormsAuthentication.IsEnabled
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: IsEnabled
  nameWithType: FormsAuthentication.IsEnabled
  fullName: System.Web.Security.FormsAuthentication.IsEnabled
- uid: System.Web.Security.FormsAuthentication.LoginUrl
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: LoginUrl
  nameWithType: FormsAuthentication.LoginUrl
  fullName: System.Web.Security.FormsAuthentication.LoginUrl
- uid: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectFromLoginPage(String,Boolean)
  nameWithType: FormsAuthentication.RedirectFromLoginPage(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(String,Boolean)
- uid: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectFromLoginPage(String,Boolean,String)
  nameWithType: FormsAuthentication.RedirectFromLoginPage(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(String,Boolean,String)
- uid: System.Web.Security.FormsAuthentication.RedirectToLoginPage
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectToLoginPage()
  nameWithType: FormsAuthentication.RedirectToLoginPage()
  fullName: System.Web.Security.FormsAuthentication.RedirectToLoginPage()
- uid: System.Web.Security.FormsAuthentication.RedirectToLoginPage(System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectToLoginPage(String)
  nameWithType: FormsAuthentication.RedirectToLoginPage(String)
  fullName: System.Web.Security.FormsAuthentication.RedirectToLoginPage(String)
- uid: System.Web.Security.FormsAuthentication.RenewTicketIfOld(System.Web.Security.FormsAuthenticationTicket)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RenewTicketIfOld(FormsAuthenticationTicket)
  nameWithType: FormsAuthentication.RenewTicketIfOld(FormsAuthenticationTicket)
  fullName: System.Web.Security.FormsAuthentication.RenewTicketIfOld(FormsAuthenticationTicket)
- uid: System.Web.Security.FormsAuthentication.RequireSSL
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RequireSSL
  nameWithType: FormsAuthentication.RequireSSL
  fullName: System.Web.Security.FormsAuthentication.RequireSSL
- uid: System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SetAuthCookie(String,Boolean)
  nameWithType: FormsAuthentication.SetAuthCookie(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.SetAuthCookie(String,Boolean)
- uid: System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SetAuthCookie(String,Boolean,String)
  nameWithType: FormsAuthentication.SetAuthCookie(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.SetAuthCookie(String,Boolean,String)
- uid: System.Web.Security.FormsAuthentication.SignOut
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SignOut()
  nameWithType: FormsAuthentication.SignOut()
  fullName: System.Web.Security.FormsAuthentication.SignOut()
- uid: System.Web.Security.FormsAuthentication.SlidingExpiration
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SlidingExpiration
  nameWithType: FormsAuthentication.SlidingExpiration
  fullName: System.Web.Security.FormsAuthentication.SlidingExpiration
- uid: System.Web.Security.FormsAuthentication.TicketCompatibilityMode
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: TicketCompatibilityMode
  nameWithType: FormsAuthentication.TicketCompatibilityMode
  fullName: System.Web.Security.FormsAuthentication.TicketCompatibilityMode
- uid: System.Web.Configuration.TicketCompatibilityMode
  parent: System.Web.Configuration
  isExternal: false
  name: TicketCompatibilityMode
  nameWithType: TicketCompatibilityMode
  fullName: System.Web.Configuration.TicketCompatibilityMode
- uid: System.Web.Security.FormsAuthentication.Timeout
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Timeout
  nameWithType: FormsAuthentication.Timeout
  fullName: System.Web.Security.FormsAuthentication.Timeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Web.Security.FormsAuthentication.#ctor*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsAuthentication
  nameWithType: FormsAuthentication.FormsAuthentication
- uid: System.Web.Security.FormsAuthentication.Authenticate*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Authenticate
  nameWithType: FormsAuthentication.Authenticate
- uid: System.Web.Security.FormsAuthentication.CookieDomain*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookieDomain
  nameWithType: FormsAuthentication.CookieDomain
- uid: System.Web.Security.FormsAuthentication.CookieMode*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookieMode
  nameWithType: FormsAuthentication.CookieMode
- uid: System.Web.Security.FormsAuthentication.CookiesSupported*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookiesSupported
  nameWithType: FormsAuthentication.CookiesSupported
- uid: System.Web.Security.FormsAuthentication.Decrypt*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Decrypt
  nameWithType: FormsAuthentication.Decrypt
- uid: System.Web.Security.FormsAuthentication.DefaultUrl*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: DefaultUrl
  nameWithType: FormsAuthentication.DefaultUrl
- uid: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: EnableCrossAppRedirects
  nameWithType: FormsAuthentication.EnableCrossAppRedirects
- uid: System.Web.Security.FormsAuthentication.EnableFormsAuthentication*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: EnableFormsAuthentication
  nameWithType: FormsAuthentication.EnableFormsAuthentication
- uid: System.Web.Security.FormsAuthentication.Encrypt*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Encrypt
  nameWithType: FormsAuthentication.Encrypt
- uid: System.Web.Security.FormsAuthentication.FormsCookieName*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsCookieName
  nameWithType: FormsAuthentication.FormsCookieName
- uid: System.Web.Security.FormsAuthentication.FormsCookiePath*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsCookiePath
  nameWithType: FormsAuthentication.FormsCookiePath
- uid: System.Web.Security.FormsAuthentication.GetAuthCookie*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: GetAuthCookie
  nameWithType: FormsAuthentication.GetAuthCookie
- uid: System.Web.Security.FormsAuthentication.GetRedirectUrl*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: GetRedirectUrl
  nameWithType: FormsAuthentication.GetRedirectUrl
- uid: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: HashPasswordForStoringInConfigFile
  nameWithType: FormsAuthentication.HashPasswordForStoringInConfigFile
- uid: System.Web.Security.FormsAuthentication.Initialize*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Initialize
  nameWithType: FormsAuthentication.Initialize
- uid: System.Web.Security.FormsAuthentication.IsEnabled*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: IsEnabled
  nameWithType: FormsAuthentication.IsEnabled
- uid: System.Web.Security.FormsAuthentication.LoginUrl*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: LoginUrl
  nameWithType: FormsAuthentication.LoginUrl
- uid: System.Web.Security.FormsAuthentication.RedirectFromLoginPage*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectFromLoginPage
  nameWithType: FormsAuthentication.RedirectFromLoginPage
- uid: System.Web.Security.FormsAuthentication.RedirectToLoginPage*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectToLoginPage
  nameWithType: FormsAuthentication.RedirectToLoginPage
- uid: System.Web.Security.FormsAuthentication.RenewTicketIfOld*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RenewTicketIfOld
  nameWithType: FormsAuthentication.RenewTicketIfOld
- uid: System.Web.Security.FormsAuthentication.RequireSSL*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RequireSSL
  nameWithType: FormsAuthentication.RequireSSL
- uid: System.Web.Security.FormsAuthentication.SetAuthCookie*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SetAuthCookie
  nameWithType: FormsAuthentication.SetAuthCookie
- uid: System.Web.Security.FormsAuthentication.SignOut*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SignOut
  nameWithType: FormsAuthentication.SignOut
- uid: System.Web.Security.FormsAuthentication.SlidingExpiration*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SlidingExpiration
  nameWithType: FormsAuthentication.SlidingExpiration
- uid: System.Web.Security.FormsAuthentication.TicketCompatibilityMode*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: TicketCompatibilityMode
  nameWithType: FormsAuthentication.TicketCompatibilityMode
- uid: System.Web.Security.FormsAuthentication.Timeout*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Timeout
  nameWithType: FormsAuthentication.Timeout
