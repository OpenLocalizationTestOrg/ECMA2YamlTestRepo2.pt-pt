### YamlMime:ManagedReference
items:
- uid: System.IO.Log.FileRecordSequence
  id: FileRecordSequence
  children:
  - System.IO.Log.FileRecordSequence.#ctor(System.String)
  - System.IO.Log.FileRecordSequence.#ctor(System.String,System.IO.FileAccess)
  - System.IO.Log.FileRecordSequence.#ctor(System.String,System.IO.FileAccess,System.Int32)
  - System.IO.Log.FileRecordSequence.AdvanceBaseSequenceNumber(System.IO.Log.SequenceNumber)
  - System.IO.Log.FileRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)
  - System.IO.Log.FileRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)
  - System.IO.Log.FileRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)
  - System.IO.Log.FileRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)
  - System.IO.Log.FileRecordSequence.BaseSequenceNumber
  - System.IO.Log.FileRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)
  - System.IO.Log.FileRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)
  - System.IO.Log.FileRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)
  - System.IO.Log.FileRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)
  - System.IO.Log.FileRecordSequence.BeginFlush(System.IO.Log.SequenceNumber,System.AsyncCallback,System.Object)
  - System.IO.Log.FileRecordSequence.BeginReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)
  - System.IO.Log.FileRecordSequence.BeginReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)
  - System.IO.Log.FileRecordSequence.BeginWriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)
  - System.IO.Log.FileRecordSequence.BeginWriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)
  - System.IO.Log.FileRecordSequence.CreateReservationCollection
  - System.IO.Log.FileRecordSequence.Dispose
  - System.IO.Log.FileRecordSequence.EndAppend(System.IAsyncResult)
  - System.IO.Log.FileRecordSequence.EndFlush(System.IAsyncResult)
  - System.IO.Log.FileRecordSequence.EndReserveAndAppend(System.IAsyncResult)
  - System.IO.Log.FileRecordSequence.EndWriteRestartArea(System.IAsyncResult)
  - System.IO.Log.FileRecordSequence.Flush
  - System.IO.Log.FileRecordSequence.Flush(System.IO.Log.SequenceNumber)
  - System.IO.Log.FileRecordSequence.LastSequenceNumber
  - System.IO.Log.FileRecordSequence.MaximumRecordLength
  - System.IO.Log.FileRecordSequence.ReadLogRecords(System.IO.Log.SequenceNumber,System.IO.Log.LogRecordEnumeratorType)
  - System.IO.Log.FileRecordSequence.ReadRestartAreas
  - System.IO.Log.FileRecordSequence.ReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])
  - System.IO.Log.FileRecordSequence.ReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])
  - System.IO.Log.FileRecordSequence.ReservedBytes
  - System.IO.Log.FileRecordSequence.RestartSequenceNumber
  - System.IO.Log.FileRecordSequence.RetryAppend
  - System.IO.Log.FileRecordSequence.TailPinned
  - System.IO.Log.FileRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte})
  - System.IO.Log.FileRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})
  - System.IO.Log.FileRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber)
  - System.IO.Log.FileRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber)
  - System.IO.Log.FileRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)
  - System.IO.Log.FileRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)
  langs:
  - csharp
  name: FileRecordSequence
  nameWithType: FileRecordSequence
  fullName: System.IO.Log.FileRecordSequence
  type: Class
  summary: "Implementa um <xref href=&quot;System.IO.Log.IRecordSequence&quot;> </xref> por cima de um ficheiro. Esta classe não pode ser herdada."
  remarks: "O FileRecordSequence é uma sequência de registo com base num único ficheiro de registo no sistema de ficheiros. É uma implementação simple da <xref:System.IO.Log.IRecordSequence>interface, por cima de uma baseado no ficheiro de registo simples.</xref:System.IO.Log.IRecordSequence>       Manipular um registo baseados em ficheiros, a conta que a aplicação está em execução no tem de ter privilégios suficientes, conforme ditado pela segurança do sistema de ficheiros no momento que o FileRecordSequence é construído. Além disso, uma pedido para FullTrust é efetuada durante a construção. Os resultados de verificação da permissão são colocadas em cache após in keeping with o modelo de segurança do Windows. Deve certificar-se de que expõe acidentalmente o conteúdo da sequência de registo para um utilizador não autorizado."
  example:
  - "The following example creates a record sequence, appends record to it, and finally reads the records.  \n  \n [!code-vb[IRecordSequence#1](~/add/codesnippet/visualbasic/t-system.io.log.filereco_1.vb)]\n [!code-cs[IRecordSequence#1](~/add/codesnippet/csharp/t-system.io.log.filereco_1.cs)]"
  syntax:
    content: 'public sealed class FileRecordSequence : IDisposable, System.IO.Log.IRecordSequence'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.IO.Log.IRecordSequence
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Log.FileRecordSequence.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.IO.Log.FileRecordSequence
  langs:
  - csharp
  name: FileRecordSequence(String)
  nameWithType: FileRecordSequence.FileRecordSequence(String)
  fullName: System.IO.Log.FileRecordSequence.FileRecordSequence(String)
  type: Constructor
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Inicializa uma nova instância do <xref href=&quot;System.IO.Log.FileRecordSequence&quot;> </xref> classe com um ficheiro especificado."
  remarks: "Este construtor cria o acesso de leitura/escrita para o ficheiro e abre o ficheiro com a partilha de acesso de leitura. Isto significa que os pedidos para abrir o ficheiro para escrita por este ou outro processo falhar até que este <xref:System.IO.Log.FileRecordSequence>foi eliminada da instância, mas leitura tenta será concluída com êxito.</xref:System.IO.Log.FileRecordSequence> Se `path` não for encontrado, é criado um novo ficheiro com um tamanho de 0 bytes."
  example:
  - "The following example creates a record sequence, appends record to it, reads the records, and finally diposes the sequence.  \n  \n [!code-vb[IRecordSequence#1](~/add/codesnippet/visualbasic/m-system.io.log.filereco_1.vb)]\n [!code-cs[IRecordSequence#1](~/add/codesnippet/csharp/m-system.io.log.filereco_1.cs)]"
  syntax:
    content: public FileRecordSequence (string path);
    parameters:
    - id: path
      type: System.String
      description: "Um caminho relativo ou absoluto para o ficheiro que este <xref href=&quot;System.IO.Log.FileRecordSequence&quot;> </xref> instância irá encapsular."
  overload: System.IO.Log.FileRecordSequence.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O ficheiro especificado pelo <code> path </code> não é válido."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro especificado pelo <code> path </code> não é possível encontrar."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Não é possível efetuar o pedido devido a uma exceção de e/s inesperada."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Não há memória suficiente para continuar a execução do programa."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Acesso para o arquivo de registo especificado é negado pelo sistema operativo."
  platform:
  - net462
- uid: System.IO.Log.FileRecordSequence.#ctor(System.String,System.IO.FileAccess)
  id: '#ctor(System.String,System.IO.FileAccess)'
  parent: System.IO.Log.FileRecordSequence
  langs:
  - csharp
  name: FileRecordSequence(String,FileAccess)
  nameWithType: FileRecordSequence.FileRecordSequence(String,FileAccess)
  fullName: System.IO.Log.FileRecordSequence.FileRecordSequence(String,FileAccess)
  type: Constructor
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Inicializa uma nova instância do <xref href=&quot;System.IO.Log.FileRecordSequence&quot;> </xref> classe com um modo de acesso e de um ficheiro especificado."
  syntax:
    content: public FileRecordSequence (string path, System.IO.FileAccess access);
    parameters:
    - id: path
      type: System.String
      description: "Um caminho relativo ou absoluto para o ficheiro que este <xref href=&quot;System.IO.Log.FileRecordSequence&quot;> </xref> instância irá encapsular."
    - id: access
      type: System.IO.FileAccess
      description: "Um <xref href=&quot;System.IO.FileAccess&quot;> </xref> valor que controla o tipo de acesso, os utilizadores têm de um ficheiro de registo."
  overload: System.IO.Log.FileRecordSequence.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O ficheiro especificado pelo <code> path </code> não é válido."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro especificado pelo <code> path </code> não é possível encontrar."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Não é possível efetuar o pedido devido a uma exceção de e/s inesperada."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Não há memória suficiente para continuar a execução do programa."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Acesso para o arquivo de registo especificado é negado pelo sistema operativo."
  platform:
  - net462
- uid: System.IO.Log.FileRecordSequence.#ctor(System.String,System.IO.FileAccess,System.Int32)
  id: '#ctor(System.String,System.IO.FileAccess,System.Int32)'
  parent: System.IO.Log.FileRecordSequence
  langs:
  - csharp
  name: FileRecordSequence(String,FileAccess,Int32)
  nameWithType: FileRecordSequence.FileRecordSequence(String,FileAccess,Int32)
  fullName: System.IO.Log.FileRecordSequence.FileRecordSequence(String,FileAccess,Int32)
  type: Constructor
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Inicializa uma nova instância do <xref href=&quot;System.IO.Log.FileRecordSequence&quot;> </xref> classe com um ficheiro especificado, um modo de acesso e um tamanho de ficheiro."
  syntax:
    content: public FileRecordSequence (string path, System.IO.FileAccess access, int size);
    parameters:
    - id: path
      type: System.String
      description: "Um caminho relativo ou absoluto para o ficheiro que este <xref href=&quot;System.IO.Log.FileRecordSequence&quot;> </xref> instância irá encapsular."
    - id: access
      type: System.IO.FileAccess
      description: "Um <xref href=&quot;System.IO.FileAccess&quot;> </xref> valor que controla o tipo de acesso, os utilizadores têm de um ficheiro de registo."
    - id: size
      type: System.Int32
      description: "O tamanho do ficheiro de registo para ser aberto."
  overload: System.IO.Log.FileRecordSequence.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Um ou mais dos parâmetros estão fora do intervalo válido."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O ficheiro especificado pelo <code> path </code> não é válido."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O ficheiro especificado pelo <code> path </code> não é possível encontrar."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Não é possível efetuar o pedido devido a uma exceção de e/s inesperada."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Não há memória suficiente para continuar a execução do programa."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Acesso para o arquivo de registo especificado é negado pelo sistema operativo."
  platform:
  - net462
- uid: System.IO.Log.FileRecordSequence.AdvanceBaseSequenceNumber(System.IO.Log.SequenceNumber)
  id: AdvanceBaseSequenceNumber(System.IO.Log.SequenceNumber)
  parent: System.IO.Log.FileRecordSequence
  langs:
  - csharp
  name: AdvanceBaseSequenceNumber(SequenceNumber)
  nameWithType: FileRecordSequence.AdvanceBaseSequenceNumber(SequenceNumber)
  fullName: System.IO.Log.FileRecordSequence.AdvanceBaseSequenceNumber(SequenceNumber)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Move o número de sequência base do registo de reencaminhar. Este método não pode ser herdado."
  syntax:
    content: public void AdvanceBaseSequenceNumber (System.IO.Log.SequenceNumber newBaseSequenceNumber);
    parameters:
    - id: newBaseSequenceNumber
      type: System.IO.Log.SequenceNumber
      description: "O novo número de sequência base da sequência de registo."
  overload: System.IO.Log.FileRecordSequence.AdvanceBaseSequenceNumber*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>newBaseSequenceNumber</code>Não é válido."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>newBaseSequenceNumber</code>não se encontra entre os números de sequência base e final desta sequência."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao modificar a sequência."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O método foi chamado depois da sequência foi eliminada do."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Não há memória suficiente para continuar a execução do programa."
  platform:
  - net462
- uid: System.IO.Log.FileRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)
  id: Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)
  parent: System.IO.Log.FileRecordSequence
  langs:
  - csharp
  name: Append(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions)
  nameWithType: FileRecordSequence.Append(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions)
  fullName: System.IO.Log.FileRecordSequence.Append(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Escreve um registo para o <xref href=&quot;System.IO.Log.FileRecordSequence&quot;> </xref>. Este método não pode ser herdado."
  remarks: "Dados contidos no `data` parâmetro será CONCATENAR para uma matriz de bytes único para acrescentar como o registo. No entanto, nenhum aprovisionar é efetuada para dividir os dados no segmentos de matriz quando o registo de leitura.       Normalmente, este método é concluída antes do registo foi escrito. Para se certificar de que foi escrito um registo, especifique o <xref:System.IO.Log.RecordAppendOptions>sinalizador utilizando o `recordAppendOptions` parâmetro ou chamada de <xref:System.IO.Log.FileRecordSequence.Flush%2A>método.</xref:System.IO.Log.FileRecordSequence.Flush%2A> </xref:System.IO.Log.RecordAppendOptions>"
  example:
  - "The following example creates a record sequence, appends record to it, and finally reads the records.  \n  \n [!code-cs[FileRecordSequence#0](~/add/codesnippet/csharp/10554b85-231e-4dbf-ad02-_1.cs)]"
  syntax:
    content: public System.IO.Log.SequenceNumber Append (ArraySegment<byte> data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions);
    parameters:
    - id: data
      type: System.ArraySegment{System.Byte}
      description: "Uma lista de segmentos de matriz de bytes que será concatenado e acrescentado como o registo."
    - id: nextUndoRecord
      type: System.IO.Log.SequenceNumber
      description: "O número de sequência de registo seguinte na ordem de utilizador especificado."
    - id: previousRecord
      type: System.IO.Log.SequenceNumber
      description: "O número de sequência de registo seguinte na ordem de anterior."
    - id: recordAppendOptions
      type: System.IO.Log.RecordAppendOptions
      description: "Um valor válido de <xref href=&quot;System.IO.Log.RecordAppendOptions&quot;> </xref> que especifica a forma como os dados devem ser escritos."
    return:
      type: System.IO.Log.SequenceNumber
      description: "O número de sequência de registo registo anexado."
  overload: System.IO.Log.FileRecordSequence.Append*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Um ou mais dos argumentos são <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Um ou mais dos argumentos estão fora do intervalo."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não é possível efetuar a operação porque a sequência de registos foi aberta com acesso só de leitura."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Não foi possível efetuar o pedido devido a uma exceção de e/s inesperada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O método foi chamado depois da sequência foi eliminada do."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Não há memória suficiente para continuar a execução do programa."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "A sequência de registos está cheia."
  platform:
  - net462
- uid: System.IO.Log.FileRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)
  id: Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)
  parent: System.IO.Log.FileRecordSequence
  langs:
  - csharp
  name: Append(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions)
  nameWithType: FileRecordSequence.Append(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions)
  fullName: System.IO.Log.FileRecordSequence.Append(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Escreve um registo para o <xref href=&quot;System.IO.Log.FileRecordSequence&quot;> </xref>. Este método não pode ser herdado."
  remarks: "Dados contidos no `data` parâmetro será CONCATENAR para uma matriz de bytes único para acrescentar como o registo. No entanto, nenhum aprovisionar é efetuada para dividir os dados no segmentos de matriz quando o registo de leitura.       Normalmente, este método é concluída antes do registo foi escrito. Para se certificar de que foi escrito um registo, especifique o <xref:System.IO.Log.RecordAppendOptions>sinalizador utilizando o `recordAppendOptions` parâmetro ou chamada de <xref:System.IO.Log.FileRecordSequence.Flush%2A>método.</xref:System.IO.Log.FileRecordSequence.Flush%2A> </xref:System.IO.Log.RecordAppendOptions>"
  example:
  - "The following example shows how you can create a record sequence with this method.  \n  \n [!code-vb[IRecordSequence#3](~/add/codesnippet/visualbasic/5cdfd57c-5dff-4f9a-a7e0-_1.vb)]\n [!code-cs[IRecordSequence#3](~/add/codesnippet/csharp/5cdfd57c-5dff-4f9a-a7e0-_1.cs)]"
  syntax:
    content: public System.IO.Log.SequenceNumber Append (System.Collections.Generic.IList<ArraySegment<byte>> data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions);
    parameters:
    - id: data
      type: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}
      description: "Uma lista de segmentos de matriz de bytes que será concatenado e acrescentado como o registo."
    - id: nextUndoRecord
      type: System.IO.Log.SequenceNumber
      description: "O número de sequência de registo seguinte na ordem de utilizador especificado."
    - id: previousRecord
      type: System.IO.Log.SequenceNumber
      description: "O número de sequência de registo seguinte na ordem de anterior."
    - id: recordAppendOptions
      type: System.IO.Log.RecordAppendOptions
      description: "Um valor válido de <xref href=&quot;System.IO.Log.RecordAppendOptions&quot;> </xref> que especifica a forma como os dados devem ser escritos."
    return:
      type: System.IO.Log.SequenceNumber
      description: "O número de sequência de registo registo anexado."
  overload: System.IO.Log.FileRecordSequence.Append*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Um ou mais dos argumentos são <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Um ou mais dos argumentos estão fora do intervalo."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não é possível efetuar a operação porque a sequência de registos foi aberta com acesso só de leitura."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Não foi possível efetuar o pedido devido a uma exceção de e/s inesperada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O método foi chamado depois da sequência foi eliminada do."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Não há memória suficiente para continuar a execução do programa."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "A sequência de registos está cheia."
  platform:
  - net462
- uid: System.IO.Log.FileRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)
  id: Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)
  parent: System.IO.Log.FileRecordSequence
  langs:
  - csharp
  name: Append(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection)
  nameWithType: FileRecordSequence.Append(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection)
  fullName: System.IO.Log.FileRecordSequence.Append(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Escreve um registo para o <xref href=&quot;System.IO.Log.FileRecordSequence&quot;> </xref>, utilizar espaço reservado anteriormente na sequência. Este método não pode ser herdado."
  remarks: "Dados contidos no `data` parâmetro será CONCATENAR para uma matriz de bytes único para acrescentar como o registo. No entanto, nenhum aprovisionar é efetuada para dividir os dados no segmentos de matriz quando o registo de leitura.       O registo anexado irá consumir o espaço que foi anteriormente reservado, utilizando uma reserva especificada pelo `reservations` parâmetro. Se a acrescentar for bem sucedida, irá consumir a área de reserva menor, que pode conter os dados e de que a área de reserva será removida da coleção.       Normalmente, este método é concluída antes do registo foi escrito. Para se certificar de que foi escrito um registo, especifique o <xref:System.IO.Log.RecordAppendOptions>sinalizador utilizando o `recordAppendOptions` parâmetro ou chamada de <xref:System.IO.Log.FileRecordSequence.Flush%2A>método.</xref:System.IO.Log.FileRecordSequence.Flush%2A> </xref:System.IO.Log.RecordAppendOptions>"
  syntax:
    content: public System.IO.Log.SequenceNumber Append (ArraySegment<byte> data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations);
    parameters:
    - id: data
      type: System.ArraySegment{System.Byte}
      description: "Uma lista de segmentos de matriz de bytes que será concatenado e acrescentado como o registo."
    - id: nextUndoRecord
      type: System.IO.Log.SequenceNumber
      description: "O número de sequência de registo seguinte na ordem de utilizador especificado."
    - id: previousRecord
      type: System.IO.Log.SequenceNumber
      description: "O número de sequência de registo seguinte na ordem de anterior."
    - id: recordAppendOptions
      type: System.IO.Log.RecordAppendOptions
      description: "Um valor válido de <xref href=&quot;System.IO.Log.RecordAppendOptions&quot;> </xref> que especifica a forma como os dados devem ser escritos."
    - id: reservations
      type: System.IO.Log.ReservationCollection
      description: "A <xref href=&quot;System.IO.Log.ReservationCollection&quot;> </xref> que contém a reserva que deve ser utilizada para este registo."
    return:
      type: System.IO.Log.SequenceNumber
      description: "O número de sequência de registo registo anexado."
  overload: System.IO.Log.FileRecordSequence.Append*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Um ou mais dos argumentos são <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Um ou mais dos argumentos estão fora do intervalo."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>reservations</code>Não foi criada por esta sequência de registo..."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não é possível efetuar a operação porque a sequência de registos foi aberta com acesso só de leitura."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Não foi possível efetuar o pedido devido a uma exceção de e/s inesperada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O método foi chamado depois da sequência foi eliminada do."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Não há memória suficiente para continuar a execução do programa."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "A sequência de registos está cheia."
  - type: System.IO.Log.ReservationNotFoundException
    commentId: T:System.IO.Log.ReservationNotFoundException
    description: "Nenhuma reserva suficientemente grande para caber <code> data </code> pode ser encontrado na <code> reservations </code>."
  platform:
  - net462
- uid: System.IO.Log.FileRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)
  id: Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)
  parent: System.IO.Log.FileRecordSequence
  langs:
  - csharp
  name: Append(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection)
  nameWithType: FileRecordSequence.Append(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection)
  fullName: System.IO.Log.FileRecordSequence.Append(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Escreve um registo para o <xref href=&quot;System.IO.Log.FileRecordSequence&quot;> </xref>, utilizar espaço reservado anteriormente na sequência. Este método não pode ser herdado."
  remarks: "Dados contidos no `data` parâmetro será CONCATENAR para uma matriz de bytes único para acrescentar como o registo. No entanto, nenhum aprovisionar é efetuada para dividir os dados no segmentos de matriz quando o registo de leitura.       O registo anexado irá consumir o espaço que foi anteriormente reservado, utilizando uma reserva especificada pelo `reservations` parâmetro. Se a acrescentar for bem sucedida, irá consumir a área de reserva menor, que pode conter os dados e de que a área de reserva será removida da coleção.       Normalmente, este método é concluída antes do registo foi escrito. Para se certificar de que foi escrito um registo, especifique o <xref:System.IO.Log.RecordAppendOptions>sinalizador utilizando o `recordAppendOptions` parâmetro ou chamada de <xref:System.IO.Log.FileRecordSequence.Flush%2A>método.</xref:System.IO.Log.FileRecordSequence.Flush%2A> </xref:System.IO.Log.RecordAppendOptions>"
  syntax:
    content: public System.IO.Log.SequenceNumber Append (System.Collections.Generic.IList<ArraySegment<byte>> data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations);
    parameters:
    - id: data
      type: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}
      description: "Uma lista de segmentos de matriz de bytes que será concatenado e acrescentado como o registo."
    - id: nextUndoRecord
      type: System.IO.Log.SequenceNumber
      description: "O número de sequência de registo seguinte na ordem de utilizador especificado."
    - id: previousRecord
      type: System.IO.Log.SequenceNumber
      description: "O número de sequência de registo seguinte na ordem de anterior."
    - id: recordAppendOptions
      type: System.IO.Log.RecordAppendOptions
      description: "Um valor válido de <xref href=&quot;System.IO.Log.RecordAppendOptions&quot;> </xref> que especifica a forma como os dados devem ser escritos."
    - id: reservations
      type: System.IO.Log.ReservationCollection
      description: "A <xref href=&quot;System.IO.Log.ReservationCollection&quot;> </xref> que contém a reserva que deve ser utilizada para este registo."
    return:
      type: System.IO.Log.SequenceNumber
      description: "O número de sequência de registo registo anexado."
  overload: System.IO.Log.FileRecordSequence.Append*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Um ou mais dos argumentos são <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Um ou mais dos argumentos estão fora do intervalo."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>reservations</code>Não foi criada por esta sequência de registo..."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não é possível efetuar a operação porque a sequência de registos foi aberta com acesso só de leitura."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Não foi possível efetuar o pedido devido a uma exceção de e/s inesperada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O método foi chamado depois da sequência foi eliminada do."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Não há memória suficiente para continuar a execução do programa."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "A sequência de registos está cheia."
  - type: System.IO.Log.ReservationNotFoundException
    commentId: T:System.IO.Log.ReservationNotFoundException
    description: "Nenhuma reserva suficientemente grande para caber <code> data </code> pode ser encontrado na <code> reservations </code>."
  platform:
  - net462
- uid: System.IO.Log.FileRecordSequence.BaseSequenceNumber
  id: BaseSequenceNumber
  parent: System.IO.Log.FileRecordSequence
  langs:
  - csharp
  name: BaseSequenceNumber
  nameWithType: FileRecordSequence.BaseSequenceNumber
  fullName: System.IO.Log.FileRecordSequence.BaseSequenceNumber
  type: Property
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Obtém o número de sequência de registo válido primeiro na atual <xref href=&quot;System.IO.Log.FileRecordSequence&quot;> </xref>."
  remarks: "Números de sequência válido são maior que ou igual a BaseSequenceNumber e inferior ao <xref:System.IO.Log.FileRecordSequence.LastSequenceNumber%2A>.</xref:System.IO.Log.FileRecordSequence.LastSequenceNumber%2A> Todos os outros números de sequência são inválidos.       O valor desta propriedade pode ser alterado ao chamar o <xref:System.IO.Log.FileRecordSequence.WriteRestartArea%2A>ou <xref:System.IO.Log.FileRecordSequence.AdvanceBaseSequenceNumber%2A>método.</xref:System.IO.Log.FileRecordSequence.AdvanceBaseSequenceNumber%2A> </xref:System.IO.Log.FileRecordSequence.WriteRestartArea%2A>"
  example:
  - "The following example shows using BaseSequenceNumber in a loop:  \n  \n [!code-vb[IRecordSequence#2](~/add/codesnippet/visualbasic/p-system.io.log.filereco_1.vb)]\n [!code-cs[IRecordSequence#2](~/add/codesnippet/csharp/p-system.io.log.filereco_1.cs)]"
  syntax:
    content: public System.IO.Log.SequenceNumber BaseSequenceNumber { get; }
    return:
      type: System.IO.Log.SequenceNumber
      description: "O menor número de sequência que corresponde a um registo válido no <xref href=&quot;System.IO.Log.FileRecordSequence&quot;> </xref>."
  overload: System.IO.Log.FileRecordSequence.BaseSequenceNumber*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A propriedade foi acedida depois da sequência foi eliminada do."
  platform:
  - net462
- uid: System.IO.Log.FileRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)
  id: BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)
  parent: System.IO.Log.FileRecordSequence
  langs:
  - csharp
  name: BeginAppend(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,AsyncCallback,Object)
  nameWithType: FileRecordSequence.BeginAppend(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,AsyncCallback,Object)
  fullName: System.IO.Log.FileRecordSequence.BeginAppend(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Começa uma assíncrona acrescentar a operação. Este método não pode ser herdado."
  remarks: "Deverá passar a <xref:System.IAsyncResult>devolvido por este método para o <xref:System.IO.Log.FileRecordSequence.EndAppend%2A>método, certifique-se de que concluiu a operação de acréscimo e de recursos podem ser libertados adequadamente.</xref:System.IO.Log.FileRecordSequence.EndAppend%2A> </xref:System.IAsyncResult> Se tiver ocorrido um erro durante uma acrescentar assíncrona, não é emitida uma exceção até o <xref:System.IO.Log.FileRecordSequence.EndAppend%2A>método for chamado com o <xref:System.IAsyncResult>devolvido por este método.</xref:System.IAsyncResult> </xref:System.IO.Log.FileRecordSequence.EndAppend%2A>       Dados contidos no `data` parâmetro será CONCATENAR para uma matriz de bytes único para acrescentar como o registo. No entanto, nenhum aprovisionar é efetuada para dividir os dados no segmentos de matriz quando o registo de leitura.       Normalmente, este método é concluída antes do registo foi escrito. Para se certificar de que foi escrito um registo, especifique o <xref:System.IO.Log.RecordAppendOptions>sinalizador utilizando o `recordAppendOptions` parâmetro ou chamada de <xref:System.IO.Log.FileRecordSequence.Flush%2A>método.</xref:System.IO.Log.FileRecordSequence.Flush%2A> </xref:System.IO.Log.RecordAppendOptions>"
  syntax:
    content: public IAsyncResult BeginAppend (ArraySegment<byte> data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, AsyncCallback callback, object state);
    parameters:
    - id: data
      type: System.ArraySegment{System.Byte}
      description: "Uma lista de segmentos de matriz de bytes que será concatenado e acrescentado como o registo."
    - id: nextUndoRecord
      type: System.IO.Log.SequenceNumber
      description: "O número de sequência de registo seguinte na ordem de utilizador especificado."
    - id: previousRecord
      type: System.IO.Log.SequenceNumber
      description: "O número de sequência de registo seguinte na ordem de anterior."
    - id: recordAppendOptions
      type: System.IO.Log.RecordAppendOptions
      description: "Um valor válido de <xref href=&quot;System.IO.Log.RecordAppendOptions&quot;> </xref> que especifica a forma como os dados devem ser escritos."
    - id: callback
      type: System.AsyncCallback
      description: "Uma opcional chamada de retorno assíncrona, ser chamado quando a acrescentar estiver concluída."
    - id: state
      type: System.Object
      description: "Um objeto fornecidos pelo utilizador que distingue este determinado assíncrona acrescentar pedido a partir de outros pedidos."
    return:
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>que representa a acrescentar assíncrono, o que pode ainda estar pendentes.</xref:System.IAsyncResult>"
  overload: System.IO.Log.FileRecordSequence.BeginAppend*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Um ou mais dos argumentos são <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Um ou mais dos argumentos estão fora do intervalo."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não é possível efetuar a operação porque a sequência de registos foi aberta com acesso só de leitura."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Não é possível efetuar o pedido devido a uma exceção de e/s inesperada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O método foi chamado depois da sequência foi eliminada do."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Não há memória suficiente para continuar a execução do programa."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "A sequência de registos está cheia."
  platform:
  - net462
- uid: System.IO.Log.FileRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)
  id: BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)
  parent: System.IO.Log.FileRecordSequence
  langs:
  - csharp
  name: BeginAppend(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,AsyncCallback,Object)
  nameWithType: FileRecordSequence.BeginAppend(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,AsyncCallback,Object)
  fullName: System.IO.Log.FileRecordSequence.BeginAppend(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Começa uma assíncrona acrescentar a operação. Este método não pode ser herdado."
  remarks: "Deverá passar a <xref:System.IAsyncResult>devolvido por este método para o <xref:System.IO.Log.FileRecordSequence.EndAppend%2A>método, certifique-se de que concluiu a operação de acréscimo e de recursos podem ser libertados adequadamente.</xref:System.IO.Log.FileRecordSequence.EndAppend%2A> </xref:System.IAsyncResult> Se tiver ocorrido um erro durante uma acrescentar assíncrona, não é emitida uma exceção até o <xref:System.IO.Log.FileRecordSequence.EndAppend%2A>método for chamado com o <xref:System.IAsyncResult>devolvido por este método.</xref:System.IAsyncResult> </xref:System.IO.Log.FileRecordSequence.EndAppend%2A>       Dados contidos no `data` parâmetro será CONCATENAR para uma matriz de bytes único para acrescentar como o registo. No entanto, nenhum aprovisionar é efetuada para dividir os dados no segmentos de matriz quando o registo de leitura.       Normalmente, este método é concluída antes do registo foi escrito. Para se certificar de que foi escrito um registo, especifique o <xref:System.IO.Log.RecordAppendOptions>sinalizador utilizando o `recordAppendOptions` parâmetro ou chamada de <xref:System.IO.Log.FileRecordSequence.Flush%2A>método.</xref:System.IO.Log.FileRecordSequence.Flush%2A> </xref:System.IO.Log.RecordAppendOptions>"
  syntax:
    content: public IAsyncResult BeginAppend (System.Collections.Generic.IList<ArraySegment<byte>> data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, AsyncCallback callback, object state);
    parameters:
    - id: data
      type: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}
      description: "Uma lista de segmentos de matriz de bytes que será concatenado e acrescentado como o registo."
    - id: nextUndoRecord
      type: System.IO.Log.SequenceNumber
      description: "O número de sequência de registo seguinte na ordem de utilizador especificado."
    - id: previousRecord
      type: System.IO.Log.SequenceNumber
      description: "O número de sequência de registo seguinte na ordem de anterior."
    - id: recordAppendOptions
      type: System.IO.Log.RecordAppendOptions
      description: "Um valor válido de <xref href=&quot;System.IO.Log.RecordAppendOptions&quot;> </xref> que especifica a forma como os dados devem ser escritos."
    - id: callback
      type: System.AsyncCallback
      description: "Uma opcional chamada de retorno assíncrona, ser chamado quando a acrescentar estiver concluída."
    - id: state
      type: System.Object
      description: "Um objeto fornecidos pelo utilizador que distingue este determinado assíncrona acrescentar pedido a partir de outros pedidos."
    return:
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>que representa a acrescentar assíncrono, o que pode ainda estar pendentes.</xref:System.IAsyncResult>"
  overload: System.IO.Log.FileRecordSequence.BeginAppend*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Um ou mais dos argumentos são <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Um ou mais dos argumentos estão fora do intervalo."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não é possível efetuar a operação porque a sequência de registos foi aberta com acesso só de leitura."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Não é possível efetuar o pedido devido a uma exceção de e/s inesperada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O método foi chamado depois da sequência foi eliminada do."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Não há memória suficiente para continuar a execução do programa."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "A sequência de registos está cheia."
  platform:
  - net462
- uid: System.IO.Log.FileRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)
  id: BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)
  parent: System.IO.Log.FileRecordSequence
  langs:
  - csharp
  name: BeginAppend(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,AsyncCallback,Object)
  nameWithType: FileRecordSequence.BeginAppend(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,AsyncCallback,Object)
  fullName: System.IO.Log.FileRecordSequence.BeginAppend(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Começa uma assíncrona acrescentar operação utilizando espaço reservado anteriormente na sequência. Este método não pode ser herdado."
  remarks: "Deverá passar a <xref:System.IAsyncResult>devolvido por este método para o <xref:System.IO.Log.FileRecordSequence.EndAppend%2A>método, certifique-se de que concluiu a operação de acréscimo e de recursos podem ser libertados adequadamente.</xref:System.IO.Log.FileRecordSequence.EndAppend%2A> </xref:System.IAsyncResult> Se tiver ocorrido um erro durante uma acrescentar assíncrona, não é emitida uma exceção até o <xref:System.IO.Log.FileRecordSequence.EndAppend%2A>método for chamado com o <xref:System.IAsyncResult>devolvido por este método.</xref:System.IAsyncResult> </xref:System.IO.Log.FileRecordSequence.EndAppend%2A>       Dados contidos no `data` parâmetro será CONCATENAR para uma matriz de bytes único para acrescentar como o registo. No entanto, nenhum aprovisionar é efetuada para dividir os dados no segmentos de matriz quando o registo de leitura.       O registo anexado irá consumir o espaço que foi anteriormente reservado, utilizando uma reserva especificada pelo `reservations` parâmetro. Se a acrescentar for bem sucedida, irá consumir a área de reserva menor, que pode conter os dados e de que a área de reserva será removida da coleção.       Normalmente, este método é concluída antes do registo foi escrito. Para se certificar de que foi escrito um registo, especifique o <xref:System.IO.Log.RecordAppendOptions>sinalizador utilizando o `recordAppendOptions` parâmetro ou chamada de <xref:System.IO.Log.FileRecordSequence.Flush%2A>método.</xref:System.IO.Log.FileRecordSequence.Flush%2A> </xref:System.IO.Log.RecordAppendOptions>"
  syntax:
    content: public IAsyncResult BeginAppend (ArraySegment<byte> data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations, AsyncCallback callback, object state);
    parameters:
    - id: data
      type: System.ArraySegment{System.Byte}
      description: "Uma lista de segmentos de matriz de bytes que será concatenado e acrescentado como o registo."
    - id: nextUndoRecord
      type: System.IO.Log.SequenceNumber
      description: "O número de sequência de registo seguinte na ordem de utilizador especificado."
    - id: previousRecord
      type: System.IO.Log.SequenceNumber
      description: "O número de sequência de registo seguinte na ordem de anterior."
    - id: recordAppendOptions
      type: System.IO.Log.RecordAppendOptions
      description: "Um valor válido de <xref href=&quot;System.IO.Log.RecordAppendOptions&quot;> </xref> que especifica a forma como os dados devem ser escritos."
    - id: reservations
      type: System.IO.Log.ReservationCollection
      description: "A <xref href=&quot;System.IO.Log.ReservationCollection&quot;> </xref> que contém a reserva que deve ser utilizada para este registo."
    - id: callback
      type: System.AsyncCallback
      description: "Uma opcional chamada de retorno assíncrona, ser chamado quando a acrescentar estiver concluída."
    - id: state
      type: System.Object
      description: "Um objeto fornecidos pelo utilizador que distingue este determinado assíncrona acrescentar pedido a partir de outros pedidos."
    return:
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>que representa a acrescentar assíncrono, o que pode ainda estar pendentes.</xref:System.IAsyncResult>"
  overload: System.IO.Log.FileRecordSequence.BeginAppend*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Um ou mais dos argumentos são <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Um ou mais dos argumentos estão fora do intervalo."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>reservations</code>Não foi criada por esta sequência de registo."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não é possível efetuar a operação porque a sequência de registos foi aberta com acesso só de leitura."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Não é possível efetuar o pedido devido a uma exceção de e/s inesperada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O método foi chamado depois da sequência foi eliminada do."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Não há memória suficiente para continuar a execução do programa."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "A sequência de registos está cheia."
  - type: System.IO.Log.ReservationNotFoundException
    commentId: T:System.IO.Log.ReservationNotFoundException
    description: "Nenhuma reserva suficientemente grande para caber <code> data </code> pode ser encontrado na <code> reservations </code>."
  platform:
  - net462
- uid: System.IO.Log.FileRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)
  id: BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)
  parent: System.IO.Log.FileRecordSequence
  langs:
  - csharp
  name: BeginAppend(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,AsyncCallback,Object)
  nameWithType: FileRecordSequence.BeginAppend(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,AsyncCallback,Object)
  fullName: System.IO.Log.FileRecordSequence.BeginAppend(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Começa uma assíncrona acrescentar operação utilizando espaço reservado anteriormente na sequência. Este método não pode ser herdado."
  remarks: "Deverá passar a <xref:System.IAsyncResult>devolvido por este método para o <xref:System.IO.Log.FileRecordSequence.EndAppend%2A>método, certifique-se de que concluiu a operação de acréscimo e de recursos podem ser libertados adequadamente.</xref:System.IO.Log.FileRecordSequence.EndAppend%2A> </xref:System.IAsyncResult> Se tiver ocorrido um erro durante uma acrescentar assíncrona, não é emitida uma exceção até o <xref:System.IO.Log.FileRecordSequence.EndAppend%2A>método for chamado com o <xref:System.IAsyncResult>devolvido por este método.</xref:System.IAsyncResult> </xref:System.IO.Log.FileRecordSequence.EndAppend%2A>       Dados contidos no `data` parâmetro será CONCATENAR para uma matriz de bytes único para acrescentar como o registo. No entanto, nenhum aprovisionar é efetuada para dividir os dados no segmentos de matriz quando o registo de leitura.       O registo anexado irá consumir o espaço que foi anteriormente reservado, utilizando uma reserva especificada pelo `reservations` parâmetro. Se a acrescentar for bem sucedida, irá consumir a área de reserva menor, que pode conter os dados e de que a área de reserva será removida da coleção.       Normalmente, este método é concluída antes do registo foi escrito. Para se certificar de que foi escrito um registo, especifique o <xref:System.IO.Log.RecordAppendOptions>sinalizador utilizando o `recordAppendOptions` parâmetro ou chamada de <xref:System.IO.Log.FileRecordSequence.Flush%2A>método.</xref:System.IO.Log.FileRecordSequence.Flush%2A> </xref:System.IO.Log.RecordAppendOptions>"
  syntax:
    content: public IAsyncResult BeginAppend (System.Collections.Generic.IList<ArraySegment<byte>> data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservations, AsyncCallback callback, object state);
    parameters:
    - id: data
      type: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}
      description: "Uma lista de segmentos de matriz de bytes que será concatenado e acrescentado como o registo."
    - id: nextUndoRecord
      type: System.IO.Log.SequenceNumber
      description: "O número de sequência de registo seguinte na ordem de utilizador especificado."
    - id: previousRecord
      type: System.IO.Log.SequenceNumber
      description: "O número de sequência de registo seguinte na ordem de anterior."
    - id: recordAppendOptions
      type: System.IO.Log.RecordAppendOptions
      description: "Um valor válido de <xref href=&quot;System.IO.Log.RecordAppendOptions&quot;> </xref> que especifica a forma como os dados devem ser escritos."
    - id: reservations
      type: System.IO.Log.ReservationCollection
      description: "A <xref href=&quot;System.IO.Log.ReservationCollection&quot;> </xref> que contém a reserva que deve ser utilizada para este registo."
    - id: callback
      type: System.AsyncCallback
      description: "Uma opcional chamada de retorno assíncrona, ser chamado quando a acrescentar estiver concluída."
    - id: state
      type: System.Object
      description: "Um objeto fornecidos pelo utilizador que distingue este determinado assíncrona acrescentar pedido a partir de outros pedidos."
    return:
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>que representa a acrescentar assíncrono, o que pode ainda estar pendentes.</xref:System.IAsyncResult>"
  overload: System.IO.Log.FileRecordSequence.BeginAppend*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Um ou mais dos argumentos são <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Um ou mais dos argumentos estão fora do intervalo."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>reservations</code>Não foi criada por esta sequência de registo."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não é possível efetuar a operação porque a sequência de registos foi aberta com acesso só de leitura."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Não é possível efetuar o pedido devido a uma exceção de e/s inesperada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O método foi chamado depois da sequência foi eliminada do."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Não há memória suficiente para continuar a execução do programa."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "A sequência de registos está cheia."
  - type: System.IO.Log.ReservationNotFoundException
    commentId: T:System.IO.Log.ReservationNotFoundException
    description: "Nenhuma reserva suficientemente grande para caber <code> data </code> pode ser encontrado na <code> reservations </code>."
  platform:
  - net462
- uid: System.IO.Log.FileRecordSequence.BeginFlush(System.IO.Log.SequenceNumber,System.AsyncCallback,System.Object)
  id: BeginFlush(System.IO.Log.SequenceNumber,System.AsyncCallback,System.Object)
  parent: System.IO.Log.FileRecordSequence
  langs:
  - csharp
  name: BeginFlush(SequenceNumber,AsyncCallback,Object)
  nameWithType: FileRecordSequence.BeginFlush(SequenceNumber,AsyncCallback,Object)
  fullName: System.IO.Log.FileRecordSequence.BeginFlush(SequenceNumber,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Começa uma operação assíncrona libertação, utilizar espaço reservado anteriormente na sequência. Este método não pode ser herdado."
  remarks: "Deverá passar a <xref:System.IAsyncResult>devolvido pelo método atual para o <xref:System.IO.Log.FileRecordSequence.EndFlush%2A>método para se certificar de que o esvaziamento terminar e de recursos são libertados adequadamente.</xref:System.IO.Log.FileRecordSequence.EndFlush%2A> </xref:System.IAsyncResult> Se ocorrer um erro durante um esvaziamento assíncrono, não é emitida uma exceção até o <xref:System.IO.Log.FileRecordSequence.EndFlush%2A>método for chamado com o <xref:System.IAsyncResult>devolvido por este método.</xref:System.IAsyncResult> </xref:System.IO.Log.FileRecordSequence.EndFlush%2A>       Chamar este método garante que todos os registos que foi anexado ao <xref:System.IO.Log.FileRecordSequence>são escritos de forma durável.</xref:System.IO.Log.FileRecordSequence>       Se foi eliminada uma sequência de registo de, ou se obtiver um argumento inválido, as exceções forem emitidas imediatamente dentro esta operação. Erros que ocorreram durante um pedido de libertação assíncrono, por exemplo, uma falha de disco durante o pedido de e/s, irão resultar em exceções a ser geradas quando o <xref:System.IO.Log.FileRecordSequence.EndFlush%2A>método é chamado.</xref:System.IO.Log.FileRecordSequence.EndFlush%2A>"
  syntax:
    content: public IAsyncResult BeginFlush (System.IO.Log.SequenceNumber sequenceNumber, AsyncCallback callback, object state);
    parameters:
    - id: sequenceNumber
      type: System.IO.Log.SequenceNumber
      description: "O número de sequência do registo mais recente que deve ser escrito. Se <xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref> é inválido, em seguida, todos os registos devem ser escritos."
    - id: callback
      type: System.AsyncCallback
      description: "Uma opcional chamada de retorno assíncrona, ser chamado quando a remoção estiver concluída."
    - id: state
      type: System.Object
      description: "Um objeto de fornecidos pelo utilizador que distingue este pedido de libertação assíncrono específico de outros pedidos."
    return:
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>que representa o assíncrona esvaziar operação, o que pode ainda estar pendentes.</xref:System.IAsyncResult>"
  overload: System.IO.Log.FileRecordSequence.BeginFlush*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Um ou mais dos argumentos são inválido.       <code>sequenceNumber</code>Não é válido para esta sequência."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>sequenceNumber</code>não se encontra entre os números de sequência base e final desta sequência."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao limpar os dados."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O método foi chamado depois da sequência foi eliminada do."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Não há memória suficiente para continuar a execução do programa."
  platform:
  - net462
- uid: System.IO.Log.FileRecordSequence.BeginReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)
  id: BeginReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)
  parent: System.IO.Log.FileRecordSequence
  langs:
  - csharp
  name: BeginReserveAndAppend(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,Int64[],AsyncCallback,Object)
  nameWithType: FileRecordSequence.BeginReserveAndAppend(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,Int64[],AsyncCallback,Object)
  fullName: System.IO.Log.FileRecordSequence.BeginReserveAndAppend(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,Int64[],AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Começa uma reserva assíncrona e acrescentar a operação. Este método não pode ser herdado."
  remarks: "Deverá passar a <xref:System.IAsyncResult>devolvido por este método para o <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A>método, certifique-se de que concluiu a operação de acréscimo e de recursos podem ser libertados adequadamente.</xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> </xref:System.IAsyncResult> Se tiver ocorrido um erro durante uma acrescentar assíncrona, não é emitida uma exceção até o <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A>método for chamado com o <xref:System.IAsyncResult>devolvido por este método.</xref:System.IAsyncResult> </xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A>       Dados contidos no `data` parâmetro será CONCATENAR para uma matriz de bytes único para acrescentar como o registo. No entanto, nenhum aprovisionar é efetuada para dividir os dados no segmentos de matriz quando o registo de leitura.       As reservas especificadas são adicionadas para a reserva fornecida coleção numa operação atómica com um registo acrescentar a operação. Se a acrescentar falhar, não existe espaço está reservado.       Normalmente, este método pode concluir antes do registo foi escrito. Para se certificar de que foi escrito um registo, especifique o <xref:System.IO.Log.RecordAppendOptions>sinalizador utilizando o `recordAppendOptions` parâmetro ou chamada de <xref:System.IO.Log.FileRecordSequence.Flush%2A>método.</xref:System.IO.Log.FileRecordSequence.Flush%2A> </xref:System.IO.Log.RecordAppendOptions>       Se foi eliminada uma sequência de registo de, ou se obtiver um argumento inválido, as exceções forem emitidas imediatamente dentro esta operação. Erros que ocorreram durante um pedido de acréscimo assíncrona, por exemplo, uma falha de disco durante o pedido de e/s, irão resultar em exceções a ser geradas quando o <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A>método é chamado.</xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A>"
  syntax:
    content: public IAsyncResult BeginReserveAndAppend (ArraySegment<byte> data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, long[] reservations, AsyncCallback callback, object state);
    parameters:
    - id: data
      type: System.ArraySegment{System.Byte}
      description: "Uma lista de segmentos de matriz de bytes que será concatenado e acrescentado como o registo."
    - id: nextUndoRecord
      type: System.IO.Log.SequenceNumber
      description: "O número de sequência de registo seguinte na ordem de utilizador especificado."
    - id: previousRecord
      type: System.IO.Log.SequenceNumber
      description: "O número de sequência de registo seguinte na ordem de anterior."
    - id: recordAppendOptions
      type: System.IO.Log.RecordAppendOptions
      description: "Um valor válido de <xref href=&quot;System.IO.Log.RecordAppendOptions&quot;> </xref> que especifica a forma como os dados devem ser escritos."
    - id: reservationCollection
      type: System.IO.Log.ReservationCollection
      description: "A coleção de reserva para tornar as reservas no."
    - id: reservations
      type: System.Int64[]
      description: "As reservas para que, em bytes."
    - id: callback
      type: System.AsyncCallback
      description: "Uma opcional chamada de retorno assíncrona, ser chamado quando a acrescentar estiver concluída."
    - id: state
      type: System.Object
      description: "Um objeto fornecidos pelo utilizador que distingue este determinado assíncrona acrescentar pedido a partir de outros pedidos."
    return:
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>que representa esta operação assíncrona, que foi ainda estar pendente.</xref:System.IAsyncResult>"
  overload: System.IO.Log.FileRecordSequence.BeginReserveAndAppend*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Um ou mais dos argumentos são <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Um ou mais dos argumentos estão fora do intervalo."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>reservations</code>Não foi criada por esta sequência de registo."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não é possível efetuar a operação porque a sequência de registos foi aberta com acesso só de leitura."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Não foi possível efetuar o pedido devido a uma exceção de e/s inesperada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O método foi chamado depois da sequência foi eliminada do."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Não há memória suficiente para continuar a execução do programa."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "A sequência de registos está cheia."
  - type: System.IO.Log.ReservationNotFoundException
    commentId: T:System.IO.Log.ReservationNotFoundException
    description: "Nenhuma reserva suficientemente grande para caber <code> data </code> pode ser encontrado na <code> reservations </code>."
  platform:
  - net462
- uid: System.IO.Log.FileRecordSequence.BeginReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)
  id: BeginReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)
  parent: System.IO.Log.FileRecordSequence
  langs:
  - csharp
  name: BeginReserveAndAppend(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,Int64[],AsyncCallback,Object)
  nameWithType: FileRecordSequence.BeginReserveAndAppend(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,Int64[],AsyncCallback,Object)
  fullName: System.IO.Log.FileRecordSequence.BeginReserveAndAppend(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,Int64[],AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Começa uma reserva assíncrona e acrescentar a operação. Este método não pode ser herdado."
  remarks: "Deverá passar a <xref:System.IAsyncResult>devolvido por este método para o <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A>método, certifique-se de que concluiu a operação de acréscimo e de recursos podem ser libertados adequadamente.</xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A> </xref:System.IAsyncResult> Se tiver ocorrido um erro durante uma acrescentar assíncrona, não é emitida uma exceção até o <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A>método for chamado com o <xref:System.IAsyncResult>devolvido por este método.</xref:System.IAsyncResult> </xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A>       Dados contidos no `data` parâmetro será CONCATENAR para uma matriz de bytes único para acrescentar como o registo. No entanto, nenhum aprovisionar é efetuada para dividir os dados no segmentos de matriz quando o registo de leitura.       As reservas especificadas são adicionadas para a reserva fornecida coleção numa operação atómica com um registo acrescentar a operação. Se a acrescentar falhar, não existe espaço está reservado.       Normalmente, este método pode concluir antes do registo foi escrito. Para se certificar de que foi escrito um registo, especifique o <xref:System.IO.Log.RecordAppendOptions>sinalizador utilizando o `recordAppendOptions` parâmetro ou chamada de <xref:System.IO.Log.FileRecordSequence.Flush%2A>método.</xref:System.IO.Log.FileRecordSequence.Flush%2A> </xref:System.IO.Log.RecordAppendOptions>       Se foi eliminada uma sequência de registo de, ou se obtiver um argumento inválido, as exceções forem emitidas imediatamente dentro esta operação. Erros que ocorreram durante um pedido de acréscimo assíncrona, por exemplo, uma falha de disco durante o pedido de e/s, irão resultar em exceções a ser geradas quando o <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A>método é chamado.</xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A>"
  syntax:
    content: public IAsyncResult BeginReserveAndAppend (System.Collections.Generic.IList<ArraySegment<byte>> data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, long[] reservations, AsyncCallback callback, object state);
    parameters:
    - id: data
      type: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}
      description: "Uma lista de segmentos de matriz de bytes que será concatenado e acrescentado como o registo."
    - id: nextUndoRecord
      type: System.IO.Log.SequenceNumber
      description: "O número de sequência de registo seguinte na ordem de utilizador especificado."
    - id: previousRecord
      type: System.IO.Log.SequenceNumber
      description: "O número de sequência de registo seguinte na ordem de anterior."
    - id: recordAppendOptions
      type: System.IO.Log.RecordAppendOptions
      description: "Um valor válido de <xref href=&quot;System.IO.Log.RecordAppendOptions&quot;> </xref> que especifica a forma como os dados devem ser escritos."
    - id: reservationCollection
      type: System.IO.Log.ReservationCollection
      description: "A coleção de reserva para tornar as reservas no."
    - id: reservations
      type: System.Int64[]
      description: "As reservas para que, em bytes."
    - id: callback
      type: System.AsyncCallback
      description: "Uma opcional chamada de retorno assíncrona, ser chamado quando a acrescentar estiver concluída."
    - id: state
      type: System.Object
      description: "Um objeto fornecidos pelo utilizador que distingue este determinado assíncrona acrescentar pedido a partir de outros pedidos."
    return:
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>que representa esta operação assíncrona, que foi ainda estar pendente.</xref:System.IAsyncResult>"
  overload: System.IO.Log.FileRecordSequence.BeginReserveAndAppend*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Um ou mais dos argumentos são <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Um ou mais dos argumentos estão fora do intervalo."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>reservations</code>Não foi criada por esta sequência de registo."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não é possível efetuar a operação porque a sequência de registos foi aberta com acesso só de leitura."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Não foi possível efetuar o pedido devido a uma exceção de e/s inesperada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O método foi chamado depois da sequência foi eliminada do."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Não há memória suficiente para continuar a execução do programa."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "A sequência de registos está cheia."
  - type: System.IO.Log.ReservationNotFoundException
    commentId: T:System.IO.Log.ReservationNotFoundException
    description: "Nenhuma reserva suficientemente grande para caber <code> data </code> pode ser encontrado na <code> reservations </code>."
  platform:
  - net462
- uid: System.IO.Log.FileRecordSequence.BeginWriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)
  id: BeginWriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)
  parent: System.IO.Log.FileRecordSequence
  langs:
  - csharp
  name: BeginWriteRestartArea(ArraySegment<Byte>,SequenceNumber,ReservationCollection,AsyncCallback,Object)
  nameWithType: FileRecordSequence.BeginWriteRestartArea(ArraySegment<Byte>,SequenceNumber,ReservationCollection,AsyncCallback,Object)
  fullName: System.IO.Log.FileRecordSequence.BeginWriteRestartArea(ArraySegment<Byte>,SequenceNumber,ReservationCollection,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Começa uma operação de escrita de área reinício assíncrona, utilizar espaço reservado anteriormente na sequência. Este método não pode ser herdado."
  remarks: "Deverá passar a <xref:System.IAsyncResult>devolvido por este método para o <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A>método, para garantir que a operação de escrita de área de reinício foi concluída e recursos que podem ser libertados adequadamente.</xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> </xref:System.IAsyncResult> Se tiver ocorrido um erro durante uma operação de escrita de área de reinício assíncrona, não é emitida uma exceção até o <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A>método for chamado com o <xref:System.IAsyncResult>devolvido por este método.</xref:System.IAsyncResult> </xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A>       Dados contidos no `data` parâmetro será CONCATENAR para uma matriz de bytes único para acrescentar como o registo. No entanto, nenhum aprovisionar é efetuada para dividir os dados no segmentos de matriz quando o registo de leitura.       Quando a operação for concluída com êxito, o número de sequência base foi atualizado. Todos os registos com números de sequência de menor que o novo número de sequência base não estão acessíveis.       Se um <xref:System.IO.Log.ReservationCollection>for especificado, a área de reinício escrito irá consumir o espaço que foi anteriormente reservado, utilizando uma reserva contida na coleção.</xref:System.IO.Log.ReservationCollection> Se o método for bem sucedida, consumirá a reserva de menor que pode conter os dados e de que a reserva será removida da coleção.       Se foi eliminada uma sequência de registo de, ou se obtiver um argumento inválido, as exceções forem emitidas imediatamente dentro esta operação. Erros que ocorreram durante um pedido de acréscimo assíncrona, por exemplo, uma falha de disco durante o pedido de e/s, irão resultar em exceções a ser geradas quando o <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A>método é chamado.</xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A>"
  syntax:
    content: public IAsyncResult BeginWriteRestartArea (ArraySegment<byte> data, System.IO.Log.SequenceNumber newBaseSeqNum, System.IO.Log.ReservationCollection reservation, AsyncCallback callback, object state);
    parameters:
    - id: data
      type: System.ArraySegment{System.Byte}
      description: "Uma lista de segmentos de matriz de bytes que será concatenado e acrescentado como o registo."
    - id: newBaseSeqNum
      type: System.IO.Log.SequenceNumber
      description: "O novo número de sequência base. O número sequencial especificado tem de ser maior que ou igual ao número de sequência base atual."
    - id: reservation
      type: System.IO.Log.ReservationCollection
      description: "A <xref href=&quot;System.IO.Log.ReservationCollection&quot;> </xref> que contém a reserva que deve ser utilizada para esta área de reinício."
    - id: callback
      type: System.AsyncCallback
      description: "Uma opcional chamada de retorno assíncrona, ser chamado quando a operação de escrita de área de reinício estiver concluída."
    - id: state
      type: System.Object
      description: "Um objeto de fornecidos pelo utilizador que distingue este pedido de escrita de área específica de reinício assíncrona de outros pedidos."
    return:
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>que representa o assíncrona reiniciar operação de escrita de área, pode ainda estar pendentes.</xref:System.IAsyncResult>"
  overload: System.IO.Log.FileRecordSequence.BeginWriteRestartArea*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Um ou mais dos argumentos são <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>newBaseSeqNum</code>não se encontra entre os números de sequência base e final desta sequência.       - ou - um arquivo novo ou existente caudo ou base do registo ativo é inválido."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>reservations</code>Não foi criada por esta sequência de registo.       - ou - <code>newBaseSeqNum</code> não é válido para esta sequência."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não é possível efetuar a operação porque a sequência de registos foi aberta com acesso só de leitura."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Não é possível efetuar o pedido devido a uma exceção de e/s inesperada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O método foi chamado depois da sequência foi eliminada do."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Não há memória suficiente para continuar a execução do programa."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "A sequência de registos está cheia."
  - type: System.IO.Log.ReservationNotFoundException
    commentId: T:System.IO.Log.ReservationNotFoundException
    description: "Nenhuma reserva suficientemente grande para caber <code> data </code> pode ser encontrado na <code> reservations </code>."
  platform:
  - net462
- uid: System.IO.Log.FileRecordSequence.BeginWriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)
  id: BeginWriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)
  parent: System.IO.Log.FileRecordSequence
  langs:
  - csharp
  name: BeginWriteRestartArea(IList<ArraySegment<Byte>>,SequenceNumber,ReservationCollection,AsyncCallback,Object)
  nameWithType: FileRecordSequence.BeginWriteRestartArea(IList<ArraySegment<Byte>>,SequenceNumber,ReservationCollection,AsyncCallback,Object)
  fullName: System.IO.Log.FileRecordSequence.BeginWriteRestartArea(IList<ArraySegment<Byte>>,SequenceNumber,ReservationCollection,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Começa uma operação de escrita de área reinício assíncrona, utilizar espaço reservado anteriormente na sequência. Este método não pode ser herdado."
  remarks: "Deverá passar a <xref:System.IAsyncResult>devolvido por este método para o <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A>método, para garantir que a operação de escrita de área de reinício foi concluída e recursos que podem ser libertados adequadamente.</xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A> </xref:System.IAsyncResult> Se tiver ocorrido um erro durante uma operação de escrita de área de reinício assíncrona, não é emitida uma exceção até o <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A>método for chamado com o <xref:System.IAsyncResult>devolvido por este método.</xref:System.IAsyncResult> </xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A>       Dados contidos no `data` parâmetro será CONCATENAR para uma matriz de bytes único para acrescentar como o registo. No entanto, nenhum aprovisionar é efetuada para dividir os dados no segmentos de matriz quando o registo de leitura.       Quando a operação for concluída com êxito, o número de sequência base foi atualizado. Todos os registos com números de sequência de menor que o novo número de sequência base não estão acessíveis.       Se um <xref:System.IO.Log.ReservationCollection>for especificado, a área de reinício escrito irá consumir o espaço que foi anteriormente reservado, utilizando uma reserva contida na coleção.</xref:System.IO.Log.ReservationCollection> Se o método for bem sucedida, consumirá a reserva de menor que pode conter os dados e de que a reserva será removida da coleção.       Se foi eliminada uma sequência de registo de, ou se obtiver um argumento inválido, as exceções forem emitidas imediatamente dentro esta operação. Erros que ocorreram durante um pedido de acréscimo assíncrona, por exemplo, uma falha de disco durante o pedido de e/s, irão resultar em exceções a ser geradas quando o <xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A>método é chamado.</xref:System.IO.Log.FileRecordSequence.EndWriteRestartArea%2A>"
  syntax:
    content: public IAsyncResult BeginWriteRestartArea (System.Collections.Generic.IList<ArraySegment<byte>> data, System.IO.Log.SequenceNumber newBaseSeqNum, System.IO.Log.ReservationCollection reservation, AsyncCallback callback, object state);
    parameters:
    - id: data
      type: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}
      description: "Uma lista de segmentos de matriz de bytes que será concatenado e acrescentado como o registo."
    - id: newBaseSeqNum
      type: System.IO.Log.SequenceNumber
      description: "O novo número de sequência base. O número sequencial especificado tem de ser maior que ou igual ao número de sequência base atual."
    - id: reservation
      type: System.IO.Log.ReservationCollection
      description: "A <xref href=&quot;System.IO.Log.ReservationCollection&quot;> </xref> que contém a reserva que deve ser utilizada para esta área de reinício."
    - id: callback
      type: System.AsyncCallback
      description: "Uma opcional chamada de retorno assíncrona, ser chamado quando a operação de escrita de área de reinício estiver concluída."
    - id: state
      type: System.Object
      description: "Um objeto de fornecidos pelo utilizador que distingue este pedido de escrita de área específica de reinício assíncrona de outros pedidos."
    return:
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>que representa o assíncrona reiniciar operação de escrita de área, pode ainda estar pendentes.</xref:System.IAsyncResult>"
  overload: System.IO.Log.FileRecordSequence.BeginWriteRestartArea*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Um ou mais dos argumentos são <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>newBaseSeqNum</code>não se encontra entre os números de sequência base e final desta sequência.       - ou - um arquivo novo ou existente caudo ou base do registo ativo é inválido."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>reservations</code>Não foi criada por esta sequência de registo.       - ou - <code>newBaseSeqNum</code> não é válido para esta sequência."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não é possível efetuar a operação porque a sequência de registos foi aberta com acesso só de leitura."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Não é possível efetuar o pedido devido a uma exceção de e/s inesperada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O método foi chamado depois da sequência foi eliminada do."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Não há memória suficiente para continuar a execução do programa."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "A sequência de registos está cheia."
  - type: System.IO.Log.ReservationNotFoundException
    commentId: T:System.IO.Log.ReservationNotFoundException
    description: "Nenhuma reserva suficientemente grande para caber <code> data </code> pode ser encontrado na <code> reservations </code>."
  platform:
  - net462
- uid: System.IO.Log.FileRecordSequence.CreateReservationCollection
  id: CreateReservationCollection
  parent: System.IO.Log.FileRecordSequence
  langs:
  - csharp
  name: CreateReservationCollection()
  nameWithType: FileRecordSequence.CreateReservationCollection()
  fullName: System.IO.Log.FileRecordSequence.CreateReservationCollection()
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Cria uma nova <xref href=&quot;System.IO.Log.ReservationCollection&quot;> </xref>. Este método não pode ser herdado."
  syntax:
    content: public System.IO.Log.ReservationCollection CreateReservationCollection ();
    parameters: []
    return:
      type: System.IO.Log.ReservationCollection
      description: "Criado recentemente <xref href=&quot;System.IO.Log.ReservationCollection&quot;> </xref>."
  overload: System.IO.Log.FileRecordSequence.CreateReservationCollection*
  exceptions:
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Não há memória suficiente para continuar a execução do programa."
  platform:
  - net462
- uid: System.IO.Log.FileRecordSequence.Dispose
  id: Dispose
  parent: System.IO.Log.FileRecordSequence
  langs:
  - csharp
  name: Dispose()
  nameWithType: FileRecordSequence.Dispose()
  fullName: System.IO.Log.FileRecordSequence.Dispose()
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Versões imediatamente os recursos não geridos utilizados por um objeto."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.IO.Log.FileRecordSequence.Dispose*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao limpar os dados."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O método foi chamado depois da sequência foi eliminada do."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Não há memória suficiente para continuar a execução do programa."
  platform:
  - net462
- uid: System.IO.Log.FileRecordSequence.EndAppend(System.IAsyncResult)
  id: EndAppend(System.IAsyncResult)
  parent: System.IO.Log.FileRecordSequence
  langs:
  - csharp
  name: EndAppend(IAsyncResult)
  nameWithType: FileRecordSequence.EndAppend(IAsyncResult)
  fullName: System.IO.Log.FileRecordSequence.EndAppend(IAsyncResult)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Terminar uma assíncrona acrescentar a operação. Este método não pode ser herdado."
  remarks: "Este método bloqueia enquanto a operação de e/s tiver sido concluída. Erros ocorridos durante um pedido de escrita assíncrona, tais como uma falha de disco durante o pedido de e/s ficam visíveis quando EndAppend é chamado.       Este método tem de ser chamado exatamente uma vez em cada <xref:System.IAsyncResult>devolvido pelo <xref:System.IO.Log.FileRecordSequence.BeginAppend%2A>método.</xref:System.IO.Log.FileRecordSequence.BeginAppend%2A> </xref:System.IAsyncResult>"
  syntax:
    content: public System.IO.Log.SequenceNumber EndAppend (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Uma referência para o pedido de e/s assíncrona pendente."
    return:
      type: System.IO.Log.SequenceNumber
      description: "O número de sequência de registo registo anexado."
  overload: System.IO.Log.FileRecordSequence.EndAppend*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>result</code>Não é válido."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref uid=&quot;langword_csharp_End&quot; name=&quot;End&quot; href=&quot;&quot;></xref>já foi chamado para esta operação assíncrona."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Não é possível efetuar o pedido devido a uma exceção de e/s inesperada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O método foi chamado depois da sequência foi eliminada do."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Não há memória suficiente para continuar a execução do programa."
  platform:
  - net462
- uid: System.IO.Log.FileRecordSequence.EndFlush(System.IAsyncResult)
  id: EndFlush(System.IAsyncResult)
  parent: System.IO.Log.FileRecordSequence
  langs:
  - csharp
  name: EndFlush(IAsyncResult)
  nameWithType: FileRecordSequence.EndFlush(IAsyncResult)
  fullName: System.IO.Log.FileRecordSequence.EndFlush(IAsyncResult)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Termina uma operação assíncrona. Este método não pode ser herdado."
  remarks: "Este método bloqueia enquanto a operação de e/s tiver sido concluída. Erros ocorridos durante um pedido de libertação assíncrono, tais como uma falha de disco durante o pedido de e/s ficam visíveis quando EndFlush é chamado.       Este método tem de ser chamado exatamente uma vez em cada <xref:System.IAsyncResult>devolvido pelo <xref:System.IO.Log.FileRecordSequence.BeginFlush%2A>método.</xref:System.IO.Log.FileRecordSequence.BeginFlush%2A> </xref:System.IAsyncResult>"
  syntax:
    content: public System.IO.Log.SequenceNumber EndFlush (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Uma referência para o pedido de e/s assíncrona pendente."
    return:
      type: System.IO.Log.SequenceNumber
      description: "O número de sequência do último registo escrito."
  overload: System.IO.Log.FileRecordSequence.EndFlush*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>result</code>Não é válido."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref uid=&quot;langword_csharp_End&quot; name=&quot;End&quot; href=&quot;&quot;></xref>já foi chamado para esta operação assíncrona."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Não é possível efetuar o pedido devido a uma exceção de e/s inesperada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O método foi chamado depois da sequência foi eliminada do."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Não há memória suficiente para continuar a execução do programa."
  platform:
  - net462
- uid: System.IO.Log.FileRecordSequence.EndReserveAndAppend(System.IAsyncResult)
  id: EndReserveAndAppend(System.IAsyncResult)
  parent: System.IO.Log.FileRecordSequence
  langs:
  - csharp
  name: EndReserveAndAppend(IAsyncResult)
  nameWithType: FileRecordSequence.EndReserveAndAppend(IAsyncResult)
  fullName: System.IO.Log.FileRecordSequence.EndReserveAndAppend(IAsyncResult)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Terminar uma assíncrona reserva e acrescentar a operação. Este método não pode ser herdado."
  remarks: "Este método bloqueia enquanto a operação de e/s tiver sido concluída. Erros ocorridos durante um pedido de escrita assíncrona, tais como uma falha de disco durante o pedido de e/s ficam visíveis quando EndReserveAndAppend é chamado.       Este método tem de ser chamado exatamente uma vez em cada <xref:System.IAsyncResult>devolvido pelo <xref:System.IO.Log.FileRecordSequence.BeginReserveAndAppend%2A>método.</xref:System.IO.Log.FileRecordSequence.BeginReserveAndAppend%2A> </xref:System.IAsyncResult>"
  syntax:
    content: public System.IO.Log.SequenceNumber EndReserveAndAppend (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Uma referência para o pedido de e/s assíncrona pendente."
    return:
      type: System.IO.Log.SequenceNumber
      description: "O número de sequência de registo registo anexado."
  overload: System.IO.Log.FileRecordSequence.EndReserveAndAppend*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>result</code>Não é válido."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref uid=&quot;langword_csharp_End&quot; name=&quot;End&quot; href=&quot;&quot;></xref>já foi chamado para esta operação assíncrona."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Não é possível efetuar o pedido devido a uma exceção de e/s inesperada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O método foi chamado depois da sequência foi eliminada do."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Não há memória suficiente para continuar a execução do programa."
  platform:
  - net462
- uid: System.IO.Log.FileRecordSequence.EndWriteRestartArea(System.IAsyncResult)
  id: EndWriteRestartArea(System.IAsyncResult)
  parent: System.IO.Log.FileRecordSequence
  langs:
  - csharp
  name: EndWriteRestartArea(IAsyncResult)
  nameWithType: FileRecordSequence.EndWriteRestartArea(IAsyncResult)
  fullName: System.IO.Log.FileRecordSequence.EndWriteRestartArea(IAsyncResult)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Termina uma operação de escrita de área de reinício assíncrona. Este método não pode ser herdado."
  remarks: "Este método bloqueia enquanto a operação de e/s tiver sido concluída. Erros ocorridos durante um pedido de escrita assíncrona, tais como uma falha de disco durante o pedido de e/s ficam visíveis quando EndWriteRestartArea é chamado.       Este método tem de ser chamado exatamente uma vez em cada <xref:System.IAsyncResult>devolvido pelo <xref:System.IO.Log.FileRecordSequence.BeginWriteRestartArea%2A>método.</xref:System.IO.Log.FileRecordSequence.BeginWriteRestartArea%2A> </xref:System.IAsyncResult>"
  syntax:
    content: public System.IO.Log.SequenceNumber EndWriteRestartArea (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Uma referência para o pedido de e/s assíncrona pendente."
    return:
      type: System.IO.Log.SequenceNumber
      description: "O número de sequência do registo escrito do registo."
  overload: System.IO.Log.FileRecordSequence.EndWriteRestartArea*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>result</code>Não é válido."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref uid=&quot;langword_csharp_End&quot; name=&quot;End&quot; href=&quot;&quot;></xref>já foi chamado para esta operação assíncrona."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Não é possível efetuar o pedido devido a uma exceção de e/s inesperada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O método foi chamado depois da sequência foi eliminada do."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Não há memória suficiente para continuar a execução do programa."
  platform:
  - net462
- uid: System.IO.Log.FileRecordSequence.Flush
  id: Flush
  parent: System.IO.Log.FileRecordSequence
  langs:
  - csharp
  name: Flush()
  nameWithType: FileRecordSequence.Flush()
  fullName: System.IO.Log.FileRecordSequence.Flush()
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Garante que todos os registos anexados escritos. Este método não pode ser herdado."
  remarks: "Chamar este método garante que todos os registos que foi anexado ao <xref:System.IO.Log.FileRecordSequence>escritos forma durável.</xref:System.IO.Log.FileRecordSequence>"
  syntax:
    content: public System.IO.Log.SequenceNumber Flush ();
    parameters: []
    return:
      type: System.IO.Log.SequenceNumber
      description: "O número de sequência do último registo escrito."
  overload: System.IO.Log.FileRecordSequence.Flush*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao limpar os dados."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O método foi chamado depois da sequência foi eliminada do."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Não há memória suficiente para continuar a execução do programa."
  platform:
  - net462
- uid: System.IO.Log.FileRecordSequence.Flush(System.IO.Log.SequenceNumber)
  id: Flush(System.IO.Log.SequenceNumber)
  parent: System.IO.Log.FileRecordSequence
  langs:
  - csharp
  name: Flush(SequenceNumber)
  nameWithType: FileRecordSequence.Flush(SequenceNumber)
  fullName: System.IO.Log.FileRecordSequence.Flush(SequenceNumber)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Garante que todos os registos anexados escritos. Este método não pode ser herdado."
  remarks: "Chamar que este método garante que todos os registos de sequência de números até e incluindo o número sequencial especificado forma durável escritos."
  syntax:
    content: public System.IO.Log.SequenceNumber Flush (System.IO.Log.SequenceNumber sequenceNumber);
    parameters:
    - id: sequenceNumber
      type: System.IO.Log.SequenceNumber
      description: "O número de sequência do registo mais recente que deve ser escrito. Se esta <xref href=&quot;System.IO.Log.SequenceNumber&quot;> </xref> é inválido, em seguida, todos os registos devem ser escritos."
    return:
      type: System.IO.Log.SequenceNumber
      description: "O número de sequência do último registo escrito."
  overload: System.IO.Log.FileRecordSequence.Flush*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>sequenceNumber</code>não se encontra entre os números de sequência base e final desta sequência."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sequenceNumber</code>Não é válido para esta sequência."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s ao limpar os dados."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O método foi chamado depois da sequência foi eliminada do."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Não há memória suficiente para continuar a execução do programa."
  platform:
  - net462
- uid: System.IO.Log.FileRecordSequence.LastSequenceNumber
  id: LastSequenceNumber
  parent: System.IO.Log.FileRecordSequence
  langs:
  - csharp
  name: LastSequenceNumber
  nameWithType: FileRecordSequence.LastSequenceNumber
  fullName: System.IO.Log.FileRecordSequence.LastSequenceNumber
  type: Property
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Obtém o número de sequência que é maior do que o último registo anexado."
  remarks: "Esta propriedade contém um número de sequência é assegurado para ser maior do que o número de sequência do último anexado registo. Números de sequência válido são maior que ou igual a <xref:System.IO.Log.FileRecordSequence.BaseSequenceNumber%2A>e inferior ao LastSequenceNumber.</xref:System.IO.Log.FileRecordSequence.BaseSequenceNumber%2A> Todos os outros números de sequência são inválidos."
  syntax:
    content: public System.IO.Log.SequenceNumber LastSequenceNumber { get; }
    return:
      type: System.IO.Log.SequenceNumber
      description: "Número de uma sequência que é maior do que o último registo anexado."
  overload: System.IO.Log.FileRecordSequence.LastSequenceNumber*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A propriedade foi acedida depois da sequência foi eliminada do."
  platform:
  - net462
- uid: System.IO.Log.FileRecordSequence.MaximumRecordLength
  id: MaximumRecordLength
  parent: System.IO.Log.FileRecordSequence
  langs:
  - csharp
  name: MaximumRecordLength
  nameWithType: FileRecordSequence.MaximumRecordLength
  fullName: System.IO.Log.FileRecordSequence.MaximumRecordLength
  type: Property
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Obtém o tamanho do registo maior que pode ser anexado a ou lida esta sequência, em bytes."
  syntax:
    content: public long MaximumRecordLength { get; }
    return:
      type: System.Int64
      description: "O tamanho do registo de maior que pode ser anexado a ou lida esta sequência, em bytes."
  overload: System.IO.Log.FileRecordSequence.MaximumRecordLength*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A propriedade foi acedida depois da sequência foi eliminada do."
  platform:
  - net462
- uid: System.IO.Log.FileRecordSequence.ReadLogRecords(System.IO.Log.SequenceNumber,System.IO.Log.LogRecordEnumeratorType)
  id: ReadLogRecords(System.IO.Log.SequenceNumber,System.IO.Log.LogRecordEnumeratorType)
  parent: System.IO.Log.FileRecordSequence
  langs:
  - csharp
  name: ReadLogRecords(SequenceNumber,LogRecordEnumeratorType)
  nameWithType: FileRecordSequence.ReadLogRecords(SequenceNumber,LogRecordEnumeratorType)
  fullName: System.IO.Log.FileRecordSequence.ReadLogRecords(SequenceNumber,LogRecordEnumeratorType)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Devolve uma coleção enumeráveis de registos na sequência. Este método não pode ser herdado."
  remarks: "Este método devolve uma coleção enumeráveis de registos na sequência. A ordem dos registos enumerados depende do valor da `logRecordEnum` parâmetro."
  example:
  - "The following example shows how you can use this method to read the records in a log sequence.  \n  \n [!code-vb[IRecordSequence#2](~/add/codesnippet/visualbasic/5d31b2a4-d7cf-41cf-80bb-_1.vb)]\n [!code-cs[IRecordSequence#2](~/add/codesnippet/csharp/5d31b2a4-d7cf-41cf-80bb-_1.cs)]"
  syntax:
    content: public System.Collections.Generic.IEnumerable<System.IO.Log.LogRecord> ReadLogRecords (System.IO.Log.SequenceNumber start, System.IO.Log.LogRecordEnumeratorType logRecordEnum);
    parameters:
    - id: start
      type: System.IO.Log.SequenceNumber
      description: "O número de sequência do registo primeiro onde começa a leitura."
    - id: logRecordEnum
      type: System.IO.Log.LogRecordEnumeratorType
      description: "Um <xref href=&quot;System.IO.Log.LogRecordEnumeratorType&quot;> </xref> valor que especifica a forma (ou seja, reencaminhar ou trás) em que regista deve ser lida a partir de um <xref href=&quot;System.IO.Log.LogRecordSequence&quot;> </xref>."
    return:
      type: System.Collections.Generic.IEnumerable{System.IO.Log.LogRecord}
      description: "Uma coleção enumeráveis de registos na sequência."
  overload: System.IO.Log.FileRecordSequence.ReadLogRecords*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Um ou mais dos argumentos estão fora do intervalo."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não é possível efetuar a operação porque a sequência de registos foi aberta com acesso só de escrita."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "A sequência de registos está danificada.       - ou - o registo foi escrito com uma versão incompatível da sequência de registo."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A enumeração terminou.       - ou - a enumeração não foi iniciada. Uma chamada para <xref:System.Collections.IEnumerator.MoveNext*>têm de ser efetuadas.</xref:System.Collections.IEnumerator.MoveNext*>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O método foi chamado depois da sequência foi eliminada do."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Não há memória suficiente para continuar a execução do programa."
  platform:
  - net462
- uid: System.IO.Log.FileRecordSequence.ReadRestartAreas
  id: ReadRestartAreas
  parent: System.IO.Log.FileRecordSequence
  langs:
  - csharp
  name: ReadRestartAreas()
  nameWithType: FileRecordSequence.ReadRestartAreas()
  fullName: System.IO.Log.FileRecordSequence.ReadRestartAreas()
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Devolve uma coleção de áreas de reinício enumeráveis na sequência. Este método não pode ser herdado."
  remarks: "As áreas de reinício são enumeradas na ordem de número de sequência inversa, ou seja, do número de sequência maior para o menor número de sequência. Reinicie apenas áreas com números de sequência entre o último número de sequência e o número de sequência base são enumerados."
  syntax:
    content: public System.Collections.Generic.IEnumerable<System.IO.Log.LogRecord> ReadRestartAreas ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.IO.Log.LogRecord}
      description: "Uma coleção enumeráveis de áreas de reinício na sequência."
  overload: System.IO.Log.FileRecordSequence.ReadRestartAreas*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não é possível efetuar a operação porque a sequência de registos foi aberta com acesso só de escrita."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "A sequência de registos está danificada.       - ou - o registo foi escrito com uma versão incompatível da sequência de registo."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A enumeração terminou.       - ou - a enumeração não foi iniciada. Uma chamada para <xref:System.Collections.IEnumerator.MoveNext*>têm de ser efetuadas.</xref:System.Collections.IEnumerator.MoveNext*>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O método foi chamado depois da sequência foi eliminada do."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Não há memória suficiente para continuar a execução do programa."
  platform:
  - net462
- uid: System.IO.Log.FileRecordSequence.ReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])
  id: ReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])
  parent: System.IO.Log.FileRecordSequence
  langs:
  - csharp
  name: ReserveAndAppend(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,Int64[])
  nameWithType: FileRecordSequence.ReserveAndAppend(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,Int64[])
  fullName: System.IO.Log.FileRecordSequence.ReserveAndAppend(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,Int64[])
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Faz uma reserva único e acrescenta um registo para a sequência automaticamente. Este método não pode ser herdado."
  remarks: "Dados contidos no `data` parâmetro será CONCATENAR para uma matriz de bytes único para acrescentar como o registo. No entanto, nenhum aprovisionar é efetuada para dividir os dados no segmentos de matriz quando o registo de leitura.       As reservas especificadas são adicionadas para a reserva fornecida coleção numa operação atómica com um registo acrescentar a operação. Se a acrescentar falhar, não existe espaço está reservado.       Normalmente, este método pode concluir antes do registo foi escrito. Para se certificar de que foi escrito um registo, especifique o <xref:System.IO.Log.RecordAppendOptions>sinalizador utilizando o `recordAppendOptions` parâmetro ou chamada de <xref:System.IO.Log.FileRecordSequence.Flush%2A>método.</xref:System.IO.Log.FileRecordSequence.Flush%2A> </xref:System.IO.Log.RecordAppendOptions>"
  syntax:
    content: public System.IO.Log.SequenceNumber ReserveAndAppend (ArraySegment<byte> data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, long[] reservations);
    parameters:
    - id: data
      type: System.ArraySegment{System.Byte}
      description: "Uma lista de segmentos de matriz de bytes que será concatenado e acrescentado como o registo."
    - id: nextUndoRecord
      type: System.IO.Log.SequenceNumber
      description: "O número de sequência de registo seguinte na ordem de utilizador especificado."
    - id: previousRecord
      type: System.IO.Log.SequenceNumber
      description: "O número de sequência de registo seguinte na ordem de anterior."
    - id: recordAppendOptions
      type: System.IO.Log.RecordAppendOptions
      description: "Um valor válido de <xref href=&quot;System.IO.Log.RecordAppendOptions&quot;> </xref> que especifica a forma como os dados devem ser escritos."
    - id: reservationCollection
      type: System.IO.Log.ReservationCollection
      description: "A <xref href=&quot;System.IO.Log.ReservationCollection&quot;> </xref> que contém a coleção para tornar as reservas no."
    - id: reservations
      type: System.Int64[]
      description: "As reservas para que, em bytes."
    return:
      type: System.IO.Log.SequenceNumber
      description: "O número de sequência de registo registo anexado."
  overload: System.IO.Log.FileRecordSequence.ReserveAndAppend*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Um ou mais dos argumentos são <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Um ou mais dos argumentos estão fora do intervalo."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>reservations</code>Não foi criada por esta sequência de registo..."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não é possível efetuar a operação porque a sequência de registos foi aberta com acesso só de leitura."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Não foi possível efetuar o pedido devido a uma exceção de e/s inesperada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O método foi chamado depois da sequência foi eliminada do."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Não há memória suficiente para continuar a execução do programa."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "A sequência de registos está cheia."
  platform:
  - net462
- uid: System.IO.Log.FileRecordSequence.ReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])
  id: ReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])
  parent: System.IO.Log.FileRecordSequence
  langs:
  - csharp
  name: ReserveAndAppend(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,Int64[])
  nameWithType: FileRecordSequence.ReserveAndAppend(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,Int64[])
  fullName: System.IO.Log.FileRecordSequence.ReserveAndAppend(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,Int64[])
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Faz uma reserva único e acrescenta um registo para a sequência automaticamente. Este método não pode ser herdado."
  remarks: "Dados contidos no `data` parâmetro será CONCATENAR para uma matriz de bytes único para acrescentar como o registo. No entanto, nenhum aprovisionar é efetuada para dividir os dados no segmentos de matriz quando o registo de leitura.       As reservas especificadas são adicionadas para a reserva fornecida coleção numa operação atómica com um registo acrescentar a operação. Se a acrescentar falhar, não existe espaço está reservado.       Normalmente, este método pode concluir antes do registo foi escrito. Para se certificar de que foi escrito um registo, especifique o <xref:System.IO.Log.RecordAppendOptions>sinalizador utilizando o `recordAppendOptions` parâmetro ou chamada de <xref:System.IO.Log.FileRecordSequence.Flush%2A>método.</xref:System.IO.Log.FileRecordSequence.Flush%2A> </xref:System.IO.Log.RecordAppendOptions>"
  syntax:
    content: public System.IO.Log.SequenceNumber ReserveAndAppend (System.Collections.Generic.IList<ArraySegment<byte>> data, System.IO.Log.SequenceNumber nextUndoRecord, System.IO.Log.SequenceNumber previousRecord, System.IO.Log.RecordAppendOptions recordAppendOptions, System.IO.Log.ReservationCollection reservationCollection, long[] reservations);
    parameters:
    - id: data
      type: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}
      description: "Uma lista de segmentos de matriz de bytes que será concatenado e acrescentado como o registo."
    - id: nextUndoRecord
      type: System.IO.Log.SequenceNumber
      description: "O número de sequência de registo seguinte na ordem de utilizador especificado."
    - id: previousRecord
      type: System.IO.Log.SequenceNumber
      description: "O número de sequência de registo seguinte na ordem de anterior."
    - id: recordAppendOptions
      type: System.IO.Log.RecordAppendOptions
      description: "Um valor válido de <xref href=&quot;System.IO.Log.RecordAppendOptions&quot;> </xref> que especifica a forma como os dados devem ser escritos."
    - id: reservationCollection
      type: System.IO.Log.ReservationCollection
      description: "A coleção de reserva para tornar as reservas no."
    - id: reservations
      type: System.Int64[]
      description: "As reservas para que, em bytes."
    return:
      type: System.IO.Log.SequenceNumber
      description: "O número de sequência de registo registo anexado."
  overload: System.IO.Log.FileRecordSequence.ReserveAndAppend*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Um ou mais dos argumentos são <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Um ou mais dos argumentos estão fora do intervalo."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>reservations</code>Não foi criada por esta sequência de registo..."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não é possível efetuar a operação porque a sequência de registos foi aberta com acesso só de leitura."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Não foi possível efetuar o pedido devido a uma exceção de e/s inesperada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O método foi chamado depois da sequência foi eliminada do."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Não há memória suficiente para continuar a execução do programa."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "A sequência de registos está cheia."
  platform:
  - net462
- uid: System.IO.Log.FileRecordSequence.ReservedBytes
  id: ReservedBytes
  parent: System.IO.Log.FileRecordSequence
  langs:
  - csharp
  name: ReservedBytes
  nameWithType: FileRecordSequence.ReservedBytes
  fullName: System.IO.Log.FileRecordSequence.ReservedBytes
  type: Property
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Obtém o número total de bytes que tenham sido reservado."
  syntax:
    content: public long ReservedBytes { get; }
    return:
      type: System.Int64
      description: "O tamanho total de todas as reservas efetuadas nesta sequência de registo."
  overload: System.IO.Log.FileRecordSequence.ReservedBytes*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A propriedade foi acedida depois da sequência foi eliminada do."
  platform:
  - net462
- uid: System.IO.Log.FileRecordSequence.RestartSequenceNumber
  id: RestartSequenceNumber
  parent: System.IO.Log.FileRecordSequence
  langs:
  - csharp
  name: RestartSequenceNumber
  nameWithType: FileRecordSequence.RestartSequenceNumber
  fullName: System.IO.Log.FileRecordSequence.RestartSequenceNumber
  type: Property
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Obtém o número de sequência da área do reinício escrito mais recentemente."
  remarks: "Uma área de reinício é utilizada para armazenar temporariamente as informações que contém a última operação de ponto de verificação do cliente. O sistema de ficheiro de registo (CLFS) comuns mantém que reiniciar duas áreas para garantir que, pelo menos, uma área válida está sempre disponível. Quando for necessária uma recuperação, o CLFS lê respectiva área de reinício e todos os dados a partir a última operação de ponto de verificação. Estes dados inicializa a tabela de transação, a tabela de páginas com falhas e a tabela de ficheiro aberto para que possam ser utilizados no processo de recuperação."
  syntax:
    content: public System.IO.Log.SequenceNumber RestartSequenceNumber { get; }
    return:
      type: System.IO.Log.SequenceNumber
      description: "O número de sequência de mais recentemente gravadas reiniciar área."
  overload: System.IO.Log.FileRecordSequence.RestartSequenceNumber*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A propriedade foi acedida depois da sequência foi eliminada do."
  platform:
  - net462
- uid: System.IO.Log.FileRecordSequence.RetryAppend
  id: RetryAppend
  parent: System.IO.Log.FileRecordSequence
  langs:
  - csharp
  name: RetryAppend
  nameWithType: FileRecordSequence.RetryAppend
  fullName: System.IO.Log.FileRecordSequence.RetryAppend
  type: Property
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Obtém ou define um valor que indica se pretende ou não acrescenta automaticamente tentada novamente se o registo está cheio."
  remarks: "Se o valor desta propriedade é `true`e um <xref:System.IO.Log.FileRecordSequence.Append%2A>chamada falha porque não existe espaço suficiente na sequência, a sequência de registos irá tentar efetuar a espaço livre e repita a acrescentar.</xref:System.IO.Log.FileRecordSequence.Append%2A>"
  syntax:
    content: public bool RetryAppend { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>se acrescenta automaticamente tentada novamente se o registo está cheio; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A predefinição é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Log.FileRecordSequence.RetryAppend*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A propriedade foi acedida depois da sequência foi eliminada do."
  platform:
  - net462
- uid: System.IO.Log.FileRecordSequence.TailPinned
  id: TailPinned
  parent: System.IO.Log.FileRecordSequence
  langs:
  - csharp
  name: TailPinned
  nameWithType: FileRecordSequence.TailPinned
  fullName: System.IO.Log.FileRecordSequence.TailPinned
  type: Event
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Ocorre quando a sequência de registo determina que a cauda têm de ser movida de reencaminhar. Este método não pode ser herdado."
  remarks: "Pode acionados este evento quando a sequência de registos ficou sem espaço. Quando este evento é desencadeado, seguimento da sequência (ou seja, o número de sequência base) é movido reencaminhar para libertar espaço."
  syntax:
    content: public event EventHandler<System.IO.Log.TailPinnedEventArgs> TailPinned;
    return:
      type: System.EventHandler{System.IO.Log.TailPinnedEventArgs}
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.IO.Log.FileRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte})
  id: WriteRestartArea(System.ArraySegment{System.Byte})
  parent: System.IO.Log.FileRecordSequence
  langs:
  - csharp
  name: WriteRestartArea(ArraySegment<Byte>)
  nameWithType: FileRecordSequence.WriteRestartArea(ArraySegment<Byte>)
  fullName: System.IO.Log.FileRecordSequence.WriteRestartArea(ArraySegment<Byte>)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Escreve uma área de reinício para a <xref href=&quot;System.IO.Log.FileRecordSequence&quot;> </xref>. Este método não pode ser herdado."
  remarks: "Uma área de reinício pode ser utilizada para armazenar temporariamente as informações que contém a última operação de ponto de verificação do cliente. Quando for necessária uma recuperação, pode ler uma área de reinício e obter todos os dados da último ponto de verificação a operação. Estes dados inicializa a tabela de transação, a tabela de páginas com falhas e a tabela de ficheiro aberto para que possam ser utilizados no processo de recuperação.       Uma área de reinício pode ser lidos utilizando o <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A>método.</xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A>       Os dados nos segmentos de matriz de bytes serão CONCATENAR para uma matriz de bytes único para acrescentar como o registo. Não existem aprovisionar é efetuada para dividir os dados no segmentos de matriz ao ler a área de reinício."
  syntax:
    content: public System.IO.Log.SequenceNumber WriteRestartArea (ArraySegment<byte> data);
    parameters:
    - id: data
      type: System.ArraySegment{System.Byte}
      description: "Uma lista de segmentos de matriz de bytes que será concatenado e acrescentado como o registo."
    return:
      type: System.IO.Log.SequenceNumber
      description: "O número de sequência de escrita de reiniciar área."
  overload: System.IO.Log.FileRecordSequence.WriteRestartArea*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Um ou mais dos argumentos são <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não é possível efetuar a operação porque a sequência de registos foi aberta com acesso só de leitura."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Não é possível efetuar o pedido devido a uma exceção de e/s inesperada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O método foi chamado depois da sequência foi eliminada do."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Não há memória suficiente para continuar a execução do programa."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "A sequência de registos está cheia."
  platform:
  - net462
- uid: System.IO.Log.FileRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})
  id: WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})
  parent: System.IO.Log.FileRecordSequence
  langs:
  - csharp
  name: WriteRestartArea(IList<ArraySegment<Byte>>)
  nameWithType: FileRecordSequence.WriteRestartArea(IList<ArraySegment<Byte>>)
  fullName: System.IO.Log.FileRecordSequence.WriteRestartArea(IList<ArraySegment<Byte>>)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Escreve uma área de reinício para a <xref href=&quot;System.IO.Log.FileRecordSequence&quot;> </xref>. Este método não pode ser herdado."
  remarks: "Uma área de reinício pode ser utilizada para armazenar temporariamente as informações que contém a última operação de ponto de verificação do cliente. Quando for necessária uma recuperação, pode ler uma área de reinício e obter todos os dados da último ponto de verificação a operação. Estes dados inicializa a tabela de transação, a tabela de páginas com falhas e a tabela de ficheiro aberto para que possam ser utilizados no processo de recuperação.       Uma área de reinício pode ser lidos utilizando o <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A>método.</xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A>       Os dados nos segmentos de matriz de bytes serão CONCATENAR para uma matriz de bytes único para acrescentar como o registo. Não existem aprovisionar é efetuada para dividir os dados no segmentos de matriz ao ler a área de reinício."
  syntax:
    content: public System.IO.Log.SequenceNumber WriteRestartArea (System.Collections.Generic.IList<ArraySegment<byte>> data);
    parameters:
    - id: data
      type: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}
      description: "Uma lista de segmentos de matriz de bytes que será concatenado e acrescentado como o registo."
    return:
      type: System.IO.Log.SequenceNumber
      description: "O número de sequência de escrita de reiniciar área."
  overload: System.IO.Log.FileRecordSequence.WriteRestartArea*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Um ou mais dos argumentos são <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não é possível efetuar a operação porque a sequência de registos foi aberta com acesso só de leitura."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Não é possível efetuar o pedido devido a uma exceção de e/s inesperada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O método foi chamado depois da sequência foi eliminada do."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Não há memória suficiente para continuar a execução do programa."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "A sequência de registos está cheia."
  platform:
  - net462
- uid: System.IO.Log.FileRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber)
  id: WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber)
  parent: System.IO.Log.FileRecordSequence
  langs:
  - csharp
  name: WriteRestartArea(ArraySegment<Byte>,SequenceNumber)
  nameWithType: FileRecordSequence.WriteRestartArea(ArraySegment<Byte>,SequenceNumber)
  fullName: System.IO.Log.FileRecordSequence.WriteRestartArea(ArraySegment<Byte>,SequenceNumber)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Escreve uma área de reinício para a <xref href=&quot;System.IO.Log.FileRecordSequence&quot;> </xref>. Este método não pode ser herdado."
  remarks: "Uma área de reinício pode ser utilizada para armazenar temporariamente as informações que contém a última operação de ponto de verificação do cliente. Quando for necessária uma recuperação, pode ler uma área de reinício e obter todos os dados da último ponto de verificação a operação. Estes dados inicializa a tabela de transação, a tabela de páginas com falhas e a tabela de ficheiro aberto para que possam ser utilizados no processo de recuperação.       Uma área de reinício pode ser lidos utilizando o <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A>método.</xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A>       Quando uma área de reinício é escrito na, os dados nos segmentos de matriz de bytes são concatenados para uma matriz de bytes único para acrescentar como o registo. Não existem aprovisionar é efetuada para dividir os dados no segmentos de matriz ao ler a área de reinício.       Quando concluir com êxito este método, o número de sequência base foi atualizado. Todos os registos com números de sequência de menor que o novo número de sequência base não estão acessíveis."
  syntax:
    content: public System.IO.Log.SequenceNumber WriteRestartArea (ArraySegment<byte> data, System.IO.Log.SequenceNumber newBaseSeqNum);
    parameters:
    - id: data
      type: System.ArraySegment{System.Byte}
      description: "Uma lista de segmentos de matriz de bytes que será concatenado e acrescentado como o registo."
    - id: newBaseSeqNum
      type: System.IO.Log.SequenceNumber
      description: "O novo número de sequência base. O número sequencial especificado tem de ser maior que ou igual ao número de sequência base atual."
    return:
      type: System.IO.Log.SequenceNumber
      description: "O número de sequência de escrita de reiniciar área."
  overload: System.IO.Log.FileRecordSequence.WriteRestartArea*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Um ou mais dos argumentos são <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>newBaseSeqNum</code>não se encontra entre os números de sequência base e final desta sequência.       - ou - um arquivo novo ou existente caudo ou base do registo ativo é inválido."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>newBaseSeqNum</code>Não é válido para esta sequência."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não é possível efetuar a operação porque a sequência de registos foi aberta com acesso só de leitura."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Não é possível efetuar o pedido devido a uma exceção de e/s inesperada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O método foi chamado depois da sequência foi eliminada do."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Não há memória suficiente para continuar a execução do programa."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "A sequência de registos está cheia."
  platform:
  - net462
- uid: System.IO.Log.FileRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber)
  id: WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber)
  parent: System.IO.Log.FileRecordSequence
  langs:
  - csharp
  name: WriteRestartArea(IList<ArraySegment<Byte>>,SequenceNumber)
  nameWithType: FileRecordSequence.WriteRestartArea(IList<ArraySegment<Byte>>,SequenceNumber)
  fullName: System.IO.Log.FileRecordSequence.WriteRestartArea(IList<ArraySegment<Byte>>,SequenceNumber)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Escreve uma área de reinício para a <xref href=&quot;System.IO.Log.FileRecordSequence&quot;> </xref>. Este método não pode ser herdado."
  remarks: "Uma área de reinício pode ser utilizada para armazenar temporariamente as informações que contém a última operação de ponto de verificação do cliente. Quando for necessária uma recuperação, pode ler uma área de reinício e obter todos os dados da último ponto de verificação a operação. Estes dados inicializa a tabela de transação, a tabela de páginas com falhas e a tabela de ficheiro aberto para que possam ser utilizados no processo de recuperação.       Uma área de reinício pode ser lidos utilizando o <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A>método.</xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A>       Quando uma área de reinício é escrito na, os dados nos segmentos de matriz de bytes são concatenados para uma matriz de bytes único para acrescentar como o registo. Não existem aprovisionar é efetuada para dividir os dados no segmentos de matriz ao ler a área de reinício.       Quando concluir com êxito este método, o número de sequência base foi atualizado. Todos os registos com números de sequência de menor que o novo número de sequência base não estão acessíveis."
  syntax:
    content: public System.IO.Log.SequenceNumber WriteRestartArea (System.Collections.Generic.IList<ArraySegment<byte>> data, System.IO.Log.SequenceNumber newBaseSeqNum);
    parameters:
    - id: data
      type: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}
      description: "Uma lista de segmentos de matriz de bytes que será concatenado e acrescentado como o registo."
    - id: newBaseSeqNum
      type: System.IO.Log.SequenceNumber
      description: "O novo número de sequência base. O número sequencial especificado tem de ser maior que ou igual ao número de sequência base atual."
    return:
      type: System.IO.Log.SequenceNumber
      description: "O número de sequência de escrita de reiniciar área."
  overload: System.IO.Log.FileRecordSequence.WriteRestartArea*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Um ou mais dos argumentos são <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>newBaseSeqNum</code>não se encontra entre os números de sequência base e final desta sequência.       - ou - um arquivo novo ou existente caudo ou base do registo ativo é inválido."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>newBaseSeqNum</code>Não é válido para esta sequência."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não é possível efetuar a operação porque a sequência de registos foi aberta com acesso só de leitura."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Não é possível efetuar o pedido devido a uma exceção de e/s inesperada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O método foi chamado depois da sequência foi eliminada do."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Não há memória suficiente para continuar a execução do programa."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "A sequência de registos está cheia."
  platform:
  - net462
- uid: System.IO.Log.FileRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)
  id: WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)
  parent: System.IO.Log.FileRecordSequence
  langs:
  - csharp
  name: WriteRestartArea(ArraySegment<Byte>,SequenceNumber,ReservationCollection)
  nameWithType: FileRecordSequence.WriteRestartArea(ArraySegment<Byte>,SequenceNumber,ReservationCollection)
  fullName: System.IO.Log.FileRecordSequence.WriteRestartArea(ArraySegment<Byte>,SequenceNumber,ReservationCollection)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Escreve uma área de reinício para a <xref href=&quot;System.IO.Log.FileRecordSequence&quot;> </xref>. Este método não pode ser herdado."
  remarks: "Uma área de reinício pode ser utilizada para armazenar temporariamente as informações que contém a última operação de ponto de verificação do cliente. Quando for necessária uma recuperação, pode ler uma área de reinício e obter todos os dados da último ponto de verificação a operação. Estes dados inicializa a tabela de transação, a tabela de páginas com falhas e a tabela de ficheiro aberto para que possam ser utilizados no processo de recuperação.       Uma área de reinício pode ser lidos utilizando o <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A>método.</xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A>       Quando uma área de reinício é escrito na, os dados nos segmentos de matriz de bytes são concatenados para uma matriz de bytes único para acrescentar como o registo. Não existem aprovisionar é efetuada para dividir os dados no segmentos de matriz ao ler a área de reinício.       Se não for especificada uma reserva, a área de reinício escrito irá consumir espaço que foi anteriormente reservado, utilizando uma reserva contida na coleção. Se o método for bem sucedida, consumirá a reserva de menor que pode conter os dados e de que a reserva será removida da coleção.       Quando concluir com êxito este método, o número de sequência base foi atualizado. Todos os registos com números de sequência de menor que o novo número de sequência base não estão acessíveis.       Se foi eliminada uma sequência de registo de, ou se obtiver um argumento inválido, as exceções forem emitidas imediatamente dentro esta operação. Erros que ocorreram durante um pedido de acréscimo assíncrona, por exemplo, uma falha de disco durante o pedido de e/s, irão resultar em exceções a ser geradas quando o <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A>método é chamado.</xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A>"
  syntax:
    content: public System.IO.Log.SequenceNumber WriteRestartArea (ArraySegment<byte> data, System.IO.Log.SequenceNumber newBaseSeqNum, System.IO.Log.ReservationCollection reservations);
    parameters:
    - id: data
      type: System.ArraySegment{System.Byte}
      description: "Uma lista de segmentos de matriz de bytes que será concatenado e acrescentado como o registo."
    - id: newBaseSeqNum
      type: System.IO.Log.SequenceNumber
      description: "O novo número de sequência base. O número sequencial especificado tem de ser maior que ou igual ao número de sequência base atual."
    - id: reservations
      type: System.IO.Log.ReservationCollection
      description: "A <xref href=&quot;System.IO.Log.ReservationCollection&quot;> </xref> que contém a reserva que deve ser utilizada para esta área de reinício."
    return:
      type: System.IO.Log.SequenceNumber
      description: "O número de sequência de escrita de reiniciar área."
  overload: System.IO.Log.FileRecordSequence.WriteRestartArea*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Um ou mais dos argumentos são <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>newBaseSeqNum</code>não se encontra entre os números de sequência base e final desta sequência.       - ou - um arquivo novo ou existente caudo ou base do registo ativo é inválido."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>reservations</code>Não foi criada por esta sequência de registo.       - ou - <code>newBaseSeqNum</code> não é válido para esta sequência."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não é possível efetuar a operação porque a sequência de registos foi aberta com acesso só de leitura."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Não é possível efetuar o pedido devido a uma exceção de e/s inesperada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O método foi chamado depois da sequência foi eliminada do."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Não há memória suficiente para continuar a execução do programa."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "A sequência de registos está cheia."
  - type: System.IO.Log.ReservationNotFoundException
    commentId: T:System.IO.Log.ReservationNotFoundException
    description: "Nenhuma reserva suficientemente grande para caber <code> data </code> pode ser encontrado na <code> reservations </code>."
  platform:
  - net462
- uid: System.IO.Log.FileRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)
  id: WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)
  parent: System.IO.Log.FileRecordSequence
  langs:
  - csharp
  name: WriteRestartArea(IList<ArraySegment<Byte>>,SequenceNumber,ReservationCollection)
  nameWithType: FileRecordSequence.WriteRestartArea(IList<ArraySegment<Byte>>,SequenceNumber,ReservationCollection)
  fullName: System.IO.Log.FileRecordSequence.WriteRestartArea(IList<ArraySegment<Byte>>,SequenceNumber,ReservationCollection)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "Escreve uma área de reinício para a <xref href=&quot;System.IO.Log.FileRecordSequence&quot;> </xref>. Este método não pode ser herdado."
  remarks: "Uma área de reinício pode ser utilizada para armazenar temporariamente as informações que contém a última operação de ponto de verificação do cliente. Quando for necessária uma recuperação, pode ler uma área de reinício e obter todos os dados da último ponto de verificação a operação. Estes dados inicializa a tabela de transação, a tabela de páginas com falhas e a tabela de ficheiro aberto para que possam ser utilizados no processo de recuperação.       Uma área de reinício pode ser lidos utilizando o <xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A>método.</xref:System.IO.Log.FileRecordSequence.ReadRestartAreas%2A>       Quando uma área de reinício é escrito na, os dados nos segmentos de matriz de bytes são concatenados para uma matriz de bytes único para acrescentar como o registo. Não existem aprovisionar é efetuada para dividir os dados no segmentos de matriz ao ler a área de reinício.       Se não for especificada uma reserva, a área de reinício escrito irá consumir espaço que foi anteriormente reservado, utilizando uma reserva contida na coleção. Se o método for bem sucedida, consumirá a reserva de menor que pode conter os dados e de que a reserva será removida da coleção.       Quando concluir com êxito este método, o número de sequência base foi atualizado. Todos os registos com números de sequência de menor que o novo número de sequência base não estão acessíveis.       Se foi eliminada uma sequência de registo de, ou se obtiver um argumento inválido, as exceções forem emitidas imediatamente dentro esta operação. Erros que ocorreram durante um pedido de acréscimo assíncrona, por exemplo, uma falha de disco durante o pedido de e/s, irão resultar em exceções a ser geradas quando o <xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A>método é chamado.</xref:System.IO.Log.FileRecordSequence.EndReserveAndAppend%2A>"
  syntax:
    content: public System.IO.Log.SequenceNumber WriteRestartArea (System.Collections.Generic.IList<ArraySegment<byte>> data, System.IO.Log.SequenceNumber newBaseSeqNum, System.IO.Log.ReservationCollection reservations);
    parameters:
    - id: data
      type: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}
      description: "Uma lista de segmentos de matriz de bytes que será concatenado e acrescentado como o registo."
    - id: newBaseSeqNum
      type: System.IO.Log.SequenceNumber
      description: "O novo número de sequência base. O número sequencial especificado tem de ser maior que ou igual ao número de sequência base atual."
    - id: reservations
      type: System.IO.Log.ReservationCollection
      description: "A <xref href=&quot;System.IO.Log.ReservationCollection&quot;> </xref> que contém a reserva que deve ser utilizada para esta área de reinício."
    return:
      type: System.IO.Log.SequenceNumber
      description: "O número de sequência de escrita de reiniciar área."
  overload: System.IO.Log.FileRecordSequence.WriteRestartArea*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Um ou mais dos argumentos são <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>newBaseSeqNum</code>não se encontra entre os números de sequência base e final desta sequência.       - ou - um arquivo novo ou existente caudo ou base do registo ativo é inválido."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>reservations</code>Não foi criada por esta sequência de registo.       - ou - <code>newBaseSeqNum</code> não é válido para esta sequência."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não é possível efetuar a operação porque a sequência de registos foi aberta com acesso só de leitura."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Não é possível efetuar o pedido devido a uma exceção de e/s inesperada."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O método foi chamado depois da sequência foi eliminada do."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Não há memória suficiente para continuar a execução do programa."
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "A sequência de registos está cheia."
  - type: System.IO.Log.ReservationNotFoundException
    commentId: T:System.IO.Log.ReservationNotFoundException
    description: "Nenhuma reserva suficientemente grande para caber <code> data </code> pode ser encontrado na <code> reservations </code>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.OutOfMemoryException
  isExternal: true
  name: System.OutOfMemoryException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.IO.Log.SequenceFullException
  parent: System.IO.Log
  isExternal: false
  name: SequenceFullException
  nameWithType: SequenceFullException
  fullName: System.IO.Log.SequenceFullException
- uid: System.IO.Log.ReservationNotFoundException
  parent: System.IO.Log
  isExternal: false
  name: ReservationNotFoundException
  nameWithType: ReservationNotFoundException
  fullName: System.IO.Log.ReservationNotFoundException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IO.Log.FileRecordSequence.#ctor(System.String)
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: FileRecordSequence(String)
  nameWithType: FileRecordSequence.FileRecordSequence(String)
  fullName: System.IO.Log.FileRecordSequence.FileRecordSequence(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Log.FileRecordSequence.#ctor(System.String,System.IO.FileAccess)
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: FileRecordSequence(String,FileAccess)
  nameWithType: FileRecordSequence.FileRecordSequence(String,FileAccess)
  fullName: System.IO.Log.FileRecordSequence.FileRecordSequence(String,FileAccess)
- uid: System.IO.FileAccess
  parent: System.IO
  isExternal: false
  name: FileAccess
  nameWithType: FileAccess
  fullName: System.IO.FileAccess
- uid: System.IO.Log.FileRecordSequence.#ctor(System.String,System.IO.FileAccess,System.Int32)
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: FileRecordSequence(String,FileAccess,Int32)
  nameWithType: FileRecordSequence.FileRecordSequence(String,FileAccess,Int32)
  fullName: System.IO.Log.FileRecordSequence.FileRecordSequence(String,FileAccess,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.Log.FileRecordSequence.AdvanceBaseSequenceNumber(System.IO.Log.SequenceNumber)
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: AdvanceBaseSequenceNumber(SequenceNumber)
  nameWithType: FileRecordSequence.AdvanceBaseSequenceNumber(SequenceNumber)
  fullName: System.IO.Log.FileRecordSequence.AdvanceBaseSequenceNumber(SequenceNumber)
- uid: System.IO.Log.SequenceNumber
  parent: System.IO.Log
  isExternal: false
  name: SequenceNumber
  nameWithType: SequenceNumber
  fullName: System.IO.Log.SequenceNumber
- uid: System.IO.Log.FileRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: Append(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions)
  nameWithType: FileRecordSequence.Append(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions)
  fullName: System.IO.Log.FileRecordSequence.Append(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions)
- uid: System.ArraySegment{System.Byte}
  parent: System
  isExternal: true
  name: ArraySegment<Byte>
  nameWithType: ArraySegment<Byte>
  fullName: System.ArraySegment<System.Byte>
  spec.csharp:
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: ArraySegment<System.Byte>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IO.Log.RecordAppendOptions
  parent: System.IO.Log
  isExternal: false
  name: RecordAppendOptions
  nameWithType: RecordAppendOptions
  fullName: System.IO.Log.RecordAppendOptions
- uid: System.IO.Log.FileRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions)
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: Append(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions)
  nameWithType: FileRecordSequence.Append(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions)
  fullName: System.IO.Log.FileRecordSequence.Append(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions)
- uid: System.Collections.Generic.IList{System.ArraySegment{System.Byte}}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<ArraySegment<Byte>>
  nameWithType: IList<ArraySegment<Byte>>
  fullName: System.Collections.Generic.IList<System.ArraySegment<System.Byte>>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.ArraySegment<System.Byte>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ArraySegment`1
    name: ArraySegment
    nameWithType: ArraySegment
    fullName: ArraySegment<System.Byte>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IO.Log.FileRecordSequence.Append(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: Append(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection)
  nameWithType: FileRecordSequence.Append(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection)
  fullName: System.IO.Log.FileRecordSequence.Append(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection)
- uid: System.IO.Log.ReservationCollection
  parent: System.IO.Log
  isExternal: false
  name: ReservationCollection
  nameWithType: ReservationCollection
  fullName: System.IO.Log.ReservationCollection
- uid: System.IO.Log.FileRecordSequence.Append(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection)
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: Append(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection)
  nameWithType: FileRecordSequence.Append(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection)
  fullName: System.IO.Log.FileRecordSequence.Append(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection)
- uid: System.IO.Log.FileRecordSequence.BaseSequenceNumber
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: BaseSequenceNumber
  nameWithType: FileRecordSequence.BaseSequenceNumber
  fullName: System.IO.Log.FileRecordSequence.BaseSequenceNumber
- uid: System.IO.Log.FileRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: BeginAppend(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,AsyncCallback,Object)
  nameWithType: FileRecordSequence.BeginAppend(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,AsyncCallback,Object)
  fullName: System.IO.Log.FileRecordSequence.BeginAppend(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.IO.Log.FileRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.AsyncCallback,System.Object)
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: BeginAppend(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,AsyncCallback,Object)
  nameWithType: FileRecordSequence.BeginAppend(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,AsyncCallback,Object)
  fullName: System.IO.Log.FileRecordSequence.BeginAppend(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,AsyncCallback,Object)
- uid: System.IO.Log.FileRecordSequence.BeginAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: BeginAppend(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,AsyncCallback,Object)
  nameWithType: FileRecordSequence.BeginAppend(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,AsyncCallback,Object)
  fullName: System.IO.Log.FileRecordSequence.BeginAppend(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,AsyncCallback,Object)
- uid: System.IO.Log.FileRecordSequence.BeginAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: BeginAppend(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,AsyncCallback,Object)
  nameWithType: FileRecordSequence.BeginAppend(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,AsyncCallback,Object)
  fullName: System.IO.Log.FileRecordSequence.BeginAppend(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,AsyncCallback,Object)
- uid: System.IO.Log.FileRecordSequence.BeginFlush(System.IO.Log.SequenceNumber,System.AsyncCallback,System.Object)
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: BeginFlush(SequenceNumber,AsyncCallback,Object)
  nameWithType: FileRecordSequence.BeginFlush(SequenceNumber,AsyncCallback,Object)
  fullName: System.IO.Log.FileRecordSequence.BeginFlush(SequenceNumber,AsyncCallback,Object)
- uid: System.IO.Log.FileRecordSequence.BeginReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: BeginReserveAndAppend(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,Int64[],AsyncCallback,Object)
  nameWithType: FileRecordSequence.BeginReserveAndAppend(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,Int64[],AsyncCallback,Object)
  fullName: System.IO.Log.FileRecordSequence.BeginReserveAndAppend(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,Int64[],AsyncCallback,Object)
- uid: System.Int64[]
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64[]
  spec.csharp:
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: Int64[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.Log.FileRecordSequence.BeginReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[],System.AsyncCallback,System.Object)
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: BeginReserveAndAppend(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,Int64[],AsyncCallback,Object)
  nameWithType: FileRecordSequence.BeginReserveAndAppend(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,Int64[],AsyncCallback,Object)
  fullName: System.IO.Log.FileRecordSequence.BeginReserveAndAppend(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,Int64[],AsyncCallback,Object)
- uid: System.IO.Log.FileRecordSequence.BeginWriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: BeginWriteRestartArea(ArraySegment<Byte>,SequenceNumber,ReservationCollection,AsyncCallback,Object)
  nameWithType: FileRecordSequence.BeginWriteRestartArea(ArraySegment<Byte>,SequenceNumber,ReservationCollection,AsyncCallback,Object)
  fullName: System.IO.Log.FileRecordSequence.BeginWriteRestartArea(ArraySegment<Byte>,SequenceNumber,ReservationCollection,AsyncCallback,Object)
- uid: System.IO.Log.FileRecordSequence.BeginWriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection,System.AsyncCallback,System.Object)
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: BeginWriteRestartArea(IList<ArraySegment<Byte>>,SequenceNumber,ReservationCollection,AsyncCallback,Object)
  nameWithType: FileRecordSequence.BeginWriteRestartArea(IList<ArraySegment<Byte>>,SequenceNumber,ReservationCollection,AsyncCallback,Object)
  fullName: System.IO.Log.FileRecordSequence.BeginWriteRestartArea(IList<ArraySegment<Byte>>,SequenceNumber,ReservationCollection,AsyncCallback,Object)
- uid: System.IO.Log.FileRecordSequence.CreateReservationCollection
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: CreateReservationCollection()
  nameWithType: FileRecordSequence.CreateReservationCollection()
  fullName: System.IO.Log.FileRecordSequence.CreateReservationCollection()
- uid: System.IO.Log.FileRecordSequence.Dispose
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: Dispose()
  nameWithType: FileRecordSequence.Dispose()
  fullName: System.IO.Log.FileRecordSequence.Dispose()
- uid: System.IO.Log.FileRecordSequence.EndAppend(System.IAsyncResult)
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: EndAppend(IAsyncResult)
  nameWithType: FileRecordSequence.EndAppend(IAsyncResult)
  fullName: System.IO.Log.FileRecordSequence.EndAppend(IAsyncResult)
- uid: System.IO.Log.FileRecordSequence.EndFlush(System.IAsyncResult)
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: EndFlush(IAsyncResult)
  nameWithType: FileRecordSequence.EndFlush(IAsyncResult)
  fullName: System.IO.Log.FileRecordSequence.EndFlush(IAsyncResult)
- uid: System.IO.Log.FileRecordSequence.EndReserveAndAppend(System.IAsyncResult)
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: EndReserveAndAppend(IAsyncResult)
  nameWithType: FileRecordSequence.EndReserveAndAppend(IAsyncResult)
  fullName: System.IO.Log.FileRecordSequence.EndReserveAndAppend(IAsyncResult)
- uid: System.IO.Log.FileRecordSequence.EndWriteRestartArea(System.IAsyncResult)
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: EndWriteRestartArea(IAsyncResult)
  nameWithType: FileRecordSequence.EndWriteRestartArea(IAsyncResult)
  fullName: System.IO.Log.FileRecordSequence.EndWriteRestartArea(IAsyncResult)
- uid: System.IO.Log.FileRecordSequence.Flush
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: Flush()
  nameWithType: FileRecordSequence.Flush()
  fullName: System.IO.Log.FileRecordSequence.Flush()
- uid: System.IO.Log.FileRecordSequence.Flush(System.IO.Log.SequenceNumber)
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: Flush(SequenceNumber)
  nameWithType: FileRecordSequence.Flush(SequenceNumber)
  fullName: System.IO.Log.FileRecordSequence.Flush(SequenceNumber)
- uid: System.IO.Log.FileRecordSequence.LastSequenceNumber
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: LastSequenceNumber
  nameWithType: FileRecordSequence.LastSequenceNumber
  fullName: System.IO.Log.FileRecordSequence.LastSequenceNumber
- uid: System.IO.Log.FileRecordSequence.MaximumRecordLength
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: MaximumRecordLength
  nameWithType: FileRecordSequence.MaximumRecordLength
  fullName: System.IO.Log.FileRecordSequence.MaximumRecordLength
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.Log.FileRecordSequence.ReadLogRecords(System.IO.Log.SequenceNumber,System.IO.Log.LogRecordEnumeratorType)
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: ReadLogRecords(SequenceNumber,LogRecordEnumeratorType)
  nameWithType: FileRecordSequence.ReadLogRecords(SequenceNumber,LogRecordEnumeratorType)
  fullName: System.IO.Log.FileRecordSequence.ReadLogRecords(SequenceNumber,LogRecordEnumeratorType)
- uid: System.Collections.Generic.IEnumerable{System.IO.Log.LogRecord}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<LogRecord>
  nameWithType: IEnumerable<LogRecord>
  fullName: System.Collections.Generic.IEnumerable<System.IO.Log.LogRecord>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.IO.Log.LogRecord>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.Log.LogRecord
    name: LogRecord
    nameWithType: LogRecord
    fullName: LogRecord
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IO.Log.LogRecordEnumeratorType
  parent: System.IO.Log
  isExternal: false
  name: LogRecordEnumeratorType
  nameWithType: LogRecordEnumeratorType
  fullName: System.IO.Log.LogRecordEnumeratorType
- uid: System.IO.Log.FileRecordSequence.ReadRestartAreas
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: ReadRestartAreas()
  nameWithType: FileRecordSequence.ReadRestartAreas()
  fullName: System.IO.Log.FileRecordSequence.ReadRestartAreas()
- uid: System.IO.Log.FileRecordSequence.ReserveAndAppend(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: ReserveAndAppend(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,Int64[])
  nameWithType: FileRecordSequence.ReserveAndAppend(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,Int64[])
  fullName: System.IO.Log.FileRecordSequence.ReserveAndAppend(ArraySegment<Byte>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,Int64[])
- uid: System.IO.Log.FileRecordSequence.ReserveAndAppend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.SequenceNumber,System.IO.Log.RecordAppendOptions,System.IO.Log.ReservationCollection,System.Int64[])
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: ReserveAndAppend(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,Int64[])
  nameWithType: FileRecordSequence.ReserveAndAppend(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,Int64[])
  fullName: System.IO.Log.FileRecordSequence.ReserveAndAppend(IList<ArraySegment<Byte>>,SequenceNumber,SequenceNumber,RecordAppendOptions,ReservationCollection,Int64[])
- uid: System.IO.Log.FileRecordSequence.ReservedBytes
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: ReservedBytes
  nameWithType: FileRecordSequence.ReservedBytes
  fullName: System.IO.Log.FileRecordSequence.ReservedBytes
- uid: System.IO.Log.FileRecordSequence.RestartSequenceNumber
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: RestartSequenceNumber
  nameWithType: FileRecordSequence.RestartSequenceNumber
  fullName: System.IO.Log.FileRecordSequence.RestartSequenceNumber
- uid: System.IO.Log.FileRecordSequence.RetryAppend
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: RetryAppend
  nameWithType: FileRecordSequence.RetryAppend
  fullName: System.IO.Log.FileRecordSequence.RetryAppend
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Log.FileRecordSequence.TailPinned
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: TailPinned
  nameWithType: FileRecordSequence.TailPinned
  fullName: System.IO.Log.FileRecordSequence.TailPinned
- uid: System.EventHandler{System.IO.Log.TailPinnedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<TailPinnedEventArgs>
  nameWithType: EventHandler<TailPinnedEventArgs>
  fullName: System.EventHandler<System.IO.Log.TailPinnedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.IO.Log.TailPinnedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.Log.TailPinnedEventArgs
    name: TailPinnedEventArgs
    nameWithType: TailPinnedEventArgs
    fullName: TailPinnedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IO.Log.FileRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte})
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: WriteRestartArea(ArraySegment<Byte>)
  nameWithType: FileRecordSequence.WriteRestartArea(ArraySegment<Byte>)
  fullName: System.IO.Log.FileRecordSequence.WriteRestartArea(ArraySegment<Byte>)
- uid: System.IO.Log.FileRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: WriteRestartArea(IList<ArraySegment<Byte>>)
  nameWithType: FileRecordSequence.WriteRestartArea(IList<ArraySegment<Byte>>)
  fullName: System.IO.Log.FileRecordSequence.WriteRestartArea(IList<ArraySegment<Byte>>)
- uid: System.IO.Log.FileRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber)
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: WriteRestartArea(ArraySegment<Byte>,SequenceNumber)
  nameWithType: FileRecordSequence.WriteRestartArea(ArraySegment<Byte>,SequenceNumber)
  fullName: System.IO.Log.FileRecordSequence.WriteRestartArea(ArraySegment<Byte>,SequenceNumber)
- uid: System.IO.Log.FileRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber)
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: WriteRestartArea(IList<ArraySegment<Byte>>,SequenceNumber)
  nameWithType: FileRecordSequence.WriteRestartArea(IList<ArraySegment<Byte>>,SequenceNumber)
  fullName: System.IO.Log.FileRecordSequence.WriteRestartArea(IList<ArraySegment<Byte>>,SequenceNumber)
- uid: System.IO.Log.FileRecordSequence.WriteRestartArea(System.ArraySegment{System.Byte},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: WriteRestartArea(ArraySegment<Byte>,SequenceNumber,ReservationCollection)
  nameWithType: FileRecordSequence.WriteRestartArea(ArraySegment<Byte>,SequenceNumber,ReservationCollection)
  fullName: System.IO.Log.FileRecordSequence.WriteRestartArea(ArraySegment<Byte>,SequenceNumber,ReservationCollection)
- uid: System.IO.Log.FileRecordSequence.WriteRestartArea(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.IO.Log.SequenceNumber,System.IO.Log.ReservationCollection)
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: WriteRestartArea(IList<ArraySegment<Byte>>,SequenceNumber,ReservationCollection)
  nameWithType: FileRecordSequence.WriteRestartArea(IList<ArraySegment<Byte>>,SequenceNumber,ReservationCollection)
  fullName: System.IO.Log.FileRecordSequence.WriteRestartArea(IList<ArraySegment<Byte>>,SequenceNumber,ReservationCollection)
- uid: System.IO.Log.FileRecordSequence.#ctor*
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: FileRecordSequence
  nameWithType: FileRecordSequence.FileRecordSequence
- uid: System.IO.Log.FileRecordSequence.AdvanceBaseSequenceNumber*
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: AdvanceBaseSequenceNumber
  nameWithType: FileRecordSequence.AdvanceBaseSequenceNumber
- uid: System.IO.Log.FileRecordSequence.Append*
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: Append
  nameWithType: FileRecordSequence.Append
- uid: System.IO.Log.FileRecordSequence.BaseSequenceNumber*
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: BaseSequenceNumber
  nameWithType: FileRecordSequence.BaseSequenceNumber
- uid: System.IO.Log.FileRecordSequence.BeginAppend*
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: BeginAppend
  nameWithType: FileRecordSequence.BeginAppend
- uid: System.IO.Log.FileRecordSequence.BeginFlush*
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: BeginFlush
  nameWithType: FileRecordSequence.BeginFlush
- uid: System.IO.Log.FileRecordSequence.BeginReserveAndAppend*
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: BeginReserveAndAppend
  nameWithType: FileRecordSequence.BeginReserveAndAppend
- uid: System.IO.Log.FileRecordSequence.BeginWriteRestartArea*
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: BeginWriteRestartArea
  nameWithType: FileRecordSequence.BeginWriteRestartArea
- uid: System.IO.Log.FileRecordSequence.CreateReservationCollection*
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: CreateReservationCollection
  nameWithType: FileRecordSequence.CreateReservationCollection
- uid: System.IO.Log.FileRecordSequence.Dispose*
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: Dispose
  nameWithType: FileRecordSequence.Dispose
- uid: System.IO.Log.FileRecordSequence.EndAppend*
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: EndAppend
  nameWithType: FileRecordSequence.EndAppend
- uid: System.IO.Log.FileRecordSequence.EndFlush*
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: EndFlush
  nameWithType: FileRecordSequence.EndFlush
- uid: System.IO.Log.FileRecordSequence.EndReserveAndAppend*
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: EndReserveAndAppend
  nameWithType: FileRecordSequence.EndReserveAndAppend
- uid: System.IO.Log.FileRecordSequence.EndWriteRestartArea*
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: EndWriteRestartArea
  nameWithType: FileRecordSequence.EndWriteRestartArea
- uid: System.IO.Log.FileRecordSequence.Flush*
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: Flush
  nameWithType: FileRecordSequence.Flush
- uid: System.IO.Log.FileRecordSequence.LastSequenceNumber*
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: LastSequenceNumber
  nameWithType: FileRecordSequence.LastSequenceNumber
- uid: System.IO.Log.FileRecordSequence.MaximumRecordLength*
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: MaximumRecordLength
  nameWithType: FileRecordSequence.MaximumRecordLength
- uid: System.IO.Log.FileRecordSequence.ReadLogRecords*
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: ReadLogRecords
  nameWithType: FileRecordSequence.ReadLogRecords
- uid: System.IO.Log.FileRecordSequence.ReadRestartAreas*
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: ReadRestartAreas
  nameWithType: FileRecordSequence.ReadRestartAreas
- uid: System.IO.Log.FileRecordSequence.ReserveAndAppend*
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: ReserveAndAppend
  nameWithType: FileRecordSequence.ReserveAndAppend
- uid: System.IO.Log.FileRecordSequence.ReservedBytes*
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: ReservedBytes
  nameWithType: FileRecordSequence.ReservedBytes
- uid: System.IO.Log.FileRecordSequence.RestartSequenceNumber*
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: RestartSequenceNumber
  nameWithType: FileRecordSequence.RestartSequenceNumber
- uid: System.IO.Log.FileRecordSequence.RetryAppend*
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: RetryAppend
  nameWithType: FileRecordSequence.RetryAppend
- uid: System.IO.Log.FileRecordSequence.WriteRestartArea*
  parent: System.IO.Log.FileRecordSequence
  isExternal: false
  name: WriteRestartArea
  nameWithType: FileRecordSequence.WriteRestartArea
