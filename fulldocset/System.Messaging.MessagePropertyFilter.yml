### YamlMime:ManagedReference
items:
- uid: System.Messaging.MessagePropertyFilter
  id: MessagePropertyFilter
  children:
  - System.Messaging.MessagePropertyFilter.#ctor
  - System.Messaging.MessagePropertyFilter.AcknowledgeType
  - System.Messaging.MessagePropertyFilter.Acknowledgment
  - System.Messaging.MessagePropertyFilter.AdministrationQueue
  - System.Messaging.MessagePropertyFilter.AppSpecific
  - System.Messaging.MessagePropertyFilter.ArrivedTime
  - System.Messaging.MessagePropertyFilter.AttachSenderId
  - System.Messaging.MessagePropertyFilter.Authenticated
  - System.Messaging.MessagePropertyFilter.AuthenticationProviderName
  - System.Messaging.MessagePropertyFilter.AuthenticationProviderType
  - System.Messaging.MessagePropertyFilter.Body
  - System.Messaging.MessagePropertyFilter.ClearAll
  - System.Messaging.MessagePropertyFilter.Clone
  - System.Messaging.MessagePropertyFilter.ConnectorType
  - System.Messaging.MessagePropertyFilter.CorrelationId
  - System.Messaging.MessagePropertyFilter.DefaultBodySize
  - System.Messaging.MessagePropertyFilter.DefaultExtensionSize
  - System.Messaging.MessagePropertyFilter.DefaultLabelSize
  - System.Messaging.MessagePropertyFilter.DestinationQueue
  - System.Messaging.MessagePropertyFilter.DestinationSymmetricKey
  - System.Messaging.MessagePropertyFilter.DigitalSignature
  - System.Messaging.MessagePropertyFilter.EncryptionAlgorithm
  - System.Messaging.MessagePropertyFilter.Extension
  - System.Messaging.MessagePropertyFilter.HashAlgorithm
  - System.Messaging.MessagePropertyFilter.Id
  - System.Messaging.MessagePropertyFilter.IsFirstInTransaction
  - System.Messaging.MessagePropertyFilter.IsLastInTransaction
  - System.Messaging.MessagePropertyFilter.Label
  - System.Messaging.MessagePropertyFilter.LookupId
  - System.Messaging.MessagePropertyFilter.MessageType
  - System.Messaging.MessagePropertyFilter.Priority
  - System.Messaging.MessagePropertyFilter.Recoverable
  - System.Messaging.MessagePropertyFilter.ResponseQueue
  - System.Messaging.MessagePropertyFilter.SenderCertificate
  - System.Messaging.MessagePropertyFilter.SenderId
  - System.Messaging.MessagePropertyFilter.SenderVersion
  - System.Messaging.MessagePropertyFilter.SentTime
  - System.Messaging.MessagePropertyFilter.SetAll
  - System.Messaging.MessagePropertyFilter.SetDefaults
  - System.Messaging.MessagePropertyFilter.SourceMachine
  - System.Messaging.MessagePropertyFilter.TimeToBeReceived
  - System.Messaging.MessagePropertyFilter.TimeToReachQueue
  - System.Messaging.MessagePropertyFilter.TransactionId
  - System.Messaging.MessagePropertyFilter.TransactionStatusQueue
  - System.Messaging.MessagePropertyFilter.UseAuthentication
  - System.Messaging.MessagePropertyFilter.UseDeadLetterQueue
  - System.Messaging.MessagePropertyFilter.UseEncryption
  - System.Messaging.MessagePropertyFilter.UseJournalQueue
  - System.Messaging.MessagePropertyFilter.UseTracing
  langs:
  - csharp
  name: MessagePropertyFilter
  nameWithType: MessagePropertyFilter
  fullName: System.Messaging.MessagePropertyFilter
  type: Class
  summary: "Controls and selects the properties that are retrieved when peeking or receiving messages from a message queue."
  remarks: "Setting the MessagePropertyFilter on a <xref:System.Messaging.MessageQueue> instance controls the set of properties that are retrieved when peeking or receiving a message. The filter is set on the instance of <xref:System.Messaging.MessageQueue> that retrieves the message information. When you set a MessagePropertyFilter Boolean-valued member to `false`, you prevent the information of the associated <xref:System.Messaging.Message> property from being retrieved by the <xref:System.Messaging.MessageQueue>.       There are several filter properties that are not Boolean values. They are integer values that get or set the default sizes of the <xref:System.Messaging.Message.Body%2A?displayProperty=fullName>, <xref:System.Messaging.Message.Extension%2A?displayProperty=fullName>, or <xref:System.Messaging.Message.Label%2A?displayProperty=fullName>.       Retrieving a limited set of properties helps improve performance because smaller amounts of data are transferred from the queue.       When setting a property on MessagePropertyFilter, you are only indicating whether that property is retrieved when a message is received or peeked. You are not changing the associated property value for the <xref:System.Messaging.Message>.       The <xref:System.Messaging.MessagePropertyFilter.%23ctor%2A> constructor sets all filter properties to their default values, which for the Boolean values is `false`. See the constructor topic for the defaults assigned to the integer-valued properties."
  example:
  - "The following code example sends two messages of different priorities to the queue, and retrieves them subsequently.  \n  \n [!code-cpp[Message.DefaultPropertiesToSend#1](~/add/codesnippet/cpp/t-system.messaging.messa_1_1.cpp)]\n [!code-vb[Message.DefaultPropertiesToSend#1](~/add/codesnippet/visualbasic/t-system.messaging.messa_1_1.vb)]\n [!code-cs[Message.DefaultPropertiesToSend#1](~/add/codesnippet/csharp/t-system.messaging.messa_1_1.cs)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ExpandableObjectConverter))]

      public class MessagePropertyFilter : ICloneable
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.#ctor
  id: '#ctor'
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: MessagePropertyFilter()
  nameWithType: MessagePropertyFilter.MessagePropertyFilter()
  fullName: System.Messaging.MessagePropertyFilter.MessagePropertyFilter()
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Initializes a new instance of the <xref href=&quot;System.Messaging.MessagePropertyFilter&quot;></xref> class and sets default values for all properties."
  remarks: "The MessagePropertyFilter constructor sets all Boolean values to `false` and sets the integer-valued properties to the default values shown in the following table.      |Property|Default value|   |--------------|-------------------|   |<xref:System.Messaging.MessagePropertyFilter.DefaultBodySize%2A>|1024|   |<xref:System.Messaging.MessagePropertyFilter.DefaultExtensionSize%2A>|255|   |<xref:System.Messaging.MessagePropertyFilter.DefaultLabelSize%2A>|255|"
  example:
  - "The following code example demonstrates the use of the <xref:System.Messaging.MessagePropertyFilter> constructor.  \n  \n [!code-cpp[MessagePropertyFilter#40](~/add/codesnippet/cpp/m-system.messaging.messa_23_1.cpp)]\n [!code-cs[MessagePropertyFilter#40](~/add/codesnippet/csharp/m-system.messaging.messa_23_1.cs)]"
  syntax:
    content: public MessagePropertyFilter ();
    parameters: []
  overload: System.Messaging.MessagePropertyFilter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.AcknowledgeType
  id: AcknowledgeType
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: AcknowledgeType
  nameWithType: MessagePropertyFilter.AcknowledgeType
  fullName: System.Messaging.MessagePropertyFilter.AcknowledgeType
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets a value that indicates whether to retrieve &lt;xref:System.Messaging.Message.AcknowledgeType%2A?displayProperty=fullName&gt; property information when receiving or peeking a message."
  remarks: "The <xref:System.Messaging.Message.AcknowledgeType%2A> property of the <xref:System.Messaging.Message> class specifies the type of acknowledgment messages requested by the sending application. The type of acknowledgment defines when acknowledgments are returned. Set the <xref:System.Messaging.Message.AcknowledgeType%2A?displayProperty=fullName> property before sending the message to request a specific type of acknowledgment."
  example:
  - "The following code example demonstrates the use of the AcknowledgeType property.  \n  \n [!code-cpp[MessagePropertyFilter#1](~/add/codesnippet/cpp/p-system.messaging.messa_82_1.cpp)]\n [!code-cs[MessagePropertyFilter#1](~/add/codesnippet/csharp/p-system.messaging.messa_82_1.cs)]"
  syntax:
    content: public bool AcknowledgeType { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to receive &lt;xref:System.Messaging.Message.AcknowledgeType%2A?displayProperty=fullName&gt; information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.MessagePropertyFilter.AcknowledgeType*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.Acknowledgment
  id: Acknowledgment
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: Acknowledgment
  nameWithType: MessagePropertyFilter.Acknowledgment
  fullName: System.Messaging.MessagePropertyFilter.Acknowledgment
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets a value that indicates whether to retrieve &lt;xref:System.Messaging.Message.Acknowledgment%2A?displayProperty=fullName&gt; property information when receiving or peeking a message."
  remarks: "The <xref:System.Messaging.Message.Acknowledgment%2A?displayProperty=fullName> property of the <xref:System.Messaging.Message> class specifies the type of acknowledgment messages the system posts in the administration queue, which determines when acknowledgments are generated.       Acknowledgments are returned from the destination queue and posted as messages to the <xref:System.Messaging.Message.AdministrationQueue%2A> specified by the original message. The type of acknowledgment generated depends on what was requested.       Read the <xref:System.Messaging.Message.Acknowledgment%2A?displayProperty=fullName> property when receiving a message from an administration queue to verify the status of the message originally sent to the message queue."
  example:
  - "The following code example sends and receives a message that contains an order to and from a queue. It specifically requests a positive acknowledgment when the original message reaches or is retrieved from the queue.  \n  \n [!code-cs[Message.Acknowledgment#1](~/add/codesnippet/csharp/p-system.messaging.messa_20_1.cs)]\n [!code-cpp[Message.Acknowledgment#1](~/add/codesnippet/cpp/p-system.messaging.messa_20_1.cpp)]\n [!code-vb[Message.Acknowledgment#1](~/add/codesnippet/visualbasic/p-system.messaging.messa_20_1.vb)]"
  syntax:
    content: public bool Acknowledgment { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to receive &lt;xref:System.Messaging.Message.Acknowledgment%2A?displayProperty=fullName&gt; information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.MessagePropertyFilter.Acknowledgment*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.AdministrationQueue
  id: AdministrationQueue
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: AdministrationQueue
  nameWithType: MessagePropertyFilter.AdministrationQueue
  fullName: System.Messaging.MessagePropertyFilter.AdministrationQueue
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets a value that indicates whether to retrieve &lt;xref:System.Messaging.Message.AdministrationQueue%2A?displayProperty=fullName&gt; property information when receiving or peeking a message."
  remarks: "The <xref:System.Messaging.Message.AdministrationQueue%2A> property of the <xref:System.Messaging.Message> class specifies the name of the queue that receives system-generated acknowledgments."
  example:
  - "The following code example demonstrates the use of the AdministrationQueue property.  \n  \n [!code-cpp[MessagePropertyFilter#2](~/add/codesnippet/cpp/p-system.messaging.messa_48_1.cpp)]\n [!code-cs[MessagePropertyFilter#2](~/add/codesnippet/csharp/p-system.messaging.messa_48_1.cs)]"
  syntax:
    content: public bool AdministrationQueue { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to receive &lt;xref:System.Messaging.Message.AdministrationQueue%2A?displayProperty=fullName&gt; information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.MessagePropertyFilter.AdministrationQueue*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.AppSpecific
  id: AppSpecific
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: AppSpecific
  nameWithType: MessagePropertyFilter.AppSpecific
  fullName: System.Messaging.MessagePropertyFilter.AppSpecific
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets a value that indicates whether to retrieve &lt;xref:System.Messaging.Message.AppSpecific%2A?displayProperty=fullName&gt; property information when receiving or peeking a message."
  remarks: "The <xref:System.Messaging.Message.AppSpecific%2A> property of the <xref:System.Messaging.Message> class contains additional, application-specific information."
  example:
  - "The following code example demonstrates the use of the AppSpecific property.  \n  \n [!code-cpp[MessagePropertyFilter#3](~/add/codesnippet/cpp/p-system.messaging.messa_69_1.cpp)]\n [!code-cs[MessagePropertyFilter#3](~/add/codesnippet/csharp/p-system.messaging.messa_69_1.cs)]"
  syntax:
    content: public bool AppSpecific { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to receive &lt;xref:System.Messaging.Message.AppSpecific%2A?displayProperty=fullName&gt; information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.MessagePropertyFilter.AppSpecific*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.ArrivedTime
  id: ArrivedTime
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: ArrivedTime
  nameWithType: MessagePropertyFilter.ArrivedTime
  fullName: System.Messaging.MessagePropertyFilter.ArrivedTime
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets a value that indicates whether to retrieve &lt;xref:System.Messaging.Message.ArrivedTime%2A?displayProperty=fullName&gt; property information when receiving or peeking a message."
  remarks: "The <xref:System.Messaging.Message.ArrivedTime%2A> property of the <xref:System.Messaging.Message> class indicates when the message arrived at the destination queue. This is local time, adjusted from GMT, of the computer on which the message is retrieved."
  example:
  - "The following code example demonstrates the use of the ArrivedTime property.  \n  \n [!code-cpp[MessagePropertyFilter#4](~/add/codesnippet/cpp/p-system.messaging.messa_96_1.cpp)]\n [!code-cs[MessagePropertyFilter#4](~/add/codesnippet/csharp/p-system.messaging.messa_96_1.cs)]"
  syntax:
    content: public bool ArrivedTime { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to receive &lt;xref:System.Messaging.Message.ArrivedTime%2A?displayProperty=fullName&gt; information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.MessagePropertyFilter.ArrivedTime*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.AttachSenderId
  id: AttachSenderId
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: AttachSenderId
  nameWithType: MessagePropertyFilter.AttachSenderId
  fullName: System.Messaging.MessagePropertyFilter.AttachSenderId
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets a value that indicates whether to retrieve &lt;xref:System.Messaging.Message.AttachSenderId%2A?displayProperty=fullName&gt; property information when receiving or peeking a message."
  remarks: "The <xref:System.Messaging.Message.AttachSenderId%2A> property of the <xref:System.Messaging.Message> class specifies whether the <xref:System.Messaging.Message.SenderId%2A?displayProperty=fullName> should be or has been attached to the message. The <xref:System.Messaging.Message.SenderId%2A?displayProperty=fullName> is set by Message Queuing and is used by the receiving Queue Manager to verify whether the sender has access rights to a queue."
  example:
  - "The following code example demonstrates the use of the AttachSenderId property.  \n  \n [!code-cpp[MessagePropertyFilter#5](~/add/codesnippet/cpp/p-system.messaging.messa_80_1.cpp)]\n [!code-cs[MessagePropertyFilter#5](~/add/codesnippet/csharp/p-system.messaging.messa_80_1.cs)]"
  syntax:
    content: public bool AttachSenderId { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to receive &lt;xref:System.Messaging.Message.AttachSenderId%2A?displayProperty=fullName&gt; information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.MessagePropertyFilter.AttachSenderId*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.Authenticated
  id: Authenticated
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: Authenticated
  nameWithType: MessagePropertyFilter.Authenticated
  fullName: System.Messaging.MessagePropertyFilter.Authenticated
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets a value that indicates whether to retrieve &lt;xref:System.Messaging.Message.Authenticated%2A?displayProperty=fullName&gt; property information when receiving or peeking a message."
  remarks: "The <xref:System.Messaging.Message.Authenticated%2A> property of the <xref:System.Messaging.Message> class is used by the receiving application to determine if authentication was requested. If authentication was requested and the message is in the queue, then the message is authenticated.       It is not possible to look at the properties of a message and determine whether a message failed authentication. Messages that fail authentication are discarded and are not delivered to the queue."
  example:
  - "The following code example demonstrates the use of the Authenticated property.  \n  \n [!code-cpp[MessagePropertyFilter#6](~/add/codesnippet/cpp/p-system.messaging.messa_57_1.cpp)]\n [!code-cs[MessagePropertyFilter#6](~/add/codesnippet/csharp/p-system.messaging.messa_57_1.cs)]"
  syntax:
    content: public bool Authenticated { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to receive &lt;xref:System.Messaging.Message.Authenticated%2A?displayProperty=fullName&gt; information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.MessagePropertyFilter.Authenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.AuthenticationProviderName
  id: AuthenticationProviderName
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: AuthenticationProviderName
  nameWithType: MessagePropertyFilter.AuthenticationProviderName
  fullName: System.Messaging.MessagePropertyFilter.AuthenticationProviderName
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets a value that indicates whether to retrieve &lt;xref:System.Messaging.Message.AuthenticationProviderName%2A?displayProperty=fullName&gt; property information when receiving or peeking a message."
  remarks: "The <xref:System.Messaging.Message.AuthenticationProviderName%2A> property of the <xref:System.Messaging.Message> class specifies the name of the cryptographic provider used to generate the digital signature of the message. <xref:System.Messaging.Message.AuthenticationProviderName%2A?displayProperty=fullName> is typically used when working with foreign queues.       A foreign queue exists in a queuing system other than Microsoft Message Queuing. Microsoft Message Queuing communicates with such queues through a connector application."
  example:
  - "The following code example demonstrates the use of the AuthenticationProviderName property.  \n  \n [!code-cpp[MessagePropertyFilter#7](~/add/codesnippet/cpp/p-system.messaging.messa_70_1.cpp)]\n [!code-cs[MessagePropertyFilter#7](~/add/codesnippet/csharp/p-system.messaging.messa_70_1.cs)]"
  syntax:
    content: public bool AuthenticationProviderName { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to receive &lt;xref:System.Messaging.Message.AuthenticationProviderName%2A?displayProperty=fullName&gt; information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.MessagePropertyFilter.AuthenticationProviderName*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.AuthenticationProviderType
  id: AuthenticationProviderType
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: AuthenticationProviderType
  nameWithType: MessagePropertyFilter.AuthenticationProviderType
  fullName: System.Messaging.MessagePropertyFilter.AuthenticationProviderType
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets a value that indicates whether to retrieve &lt;xref:System.Messaging.Message.AuthenticationProviderType%2A?displayProperty=fullName&gt; property information when receiving or peeking a message."
  remarks: "The <xref:System.Messaging.Message.AuthenticationProviderType%2A> property of the <xref:System.Messaging.Message> class specifies the type of cryptographic provider used to generate the digital signature of the message. <xref:System.Messaging.Message.AuthenticationProviderType%2A> is typically used when working with foreign queues.       A foreign queue exists in a queuing system other than Microsoft Message Queuing. Microsoft Message Queuing communicates with such queues through a connector application."
  example:
  - "The following code example demonstrates the use of the AuthenticationProviderType property.  \n  \n [!code-cpp[MessagePropertyFilter#8](~/add/codesnippet/cpp/p-system.messaging.messa_38_1.cpp)]\n [!code-cs[MessagePropertyFilter#8](~/add/codesnippet/csharp/p-system.messaging.messa_38_1.cs)]"
  syntax:
    content: public bool AuthenticationProviderType { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to receive &lt;xref:System.Messaging.Message.AuthenticationProviderType%2A?displayProperty=fullName&gt; information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.MessagePropertyFilter.AuthenticationProviderType*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.Body
  id: Body
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: Body
  nameWithType: MessagePropertyFilter.Body
  fullName: System.Messaging.MessagePropertyFilter.Body
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets a value that indicates whether to retrieve &lt;xref:System.Messaging.Message.Body%2A?displayProperty=fullName&gt; property information when receiving or peeking a message."
  remarks: "The <xref:System.Messaging.Message.Body%2A> property of the <xref:System.Messaging.Message> class represents the serialized contents of the message. The body can contain up to 4 MB of data."
  example:
  - "The following code example demonstrates the use of the Body property.  \n  \n [!code-cpp[MessagePropertyFilter#9](~/add/codesnippet/cpp/p-system.messaging.messa_91_1.cpp)]\n [!code-cs[MessagePropertyFilter#9](~/add/codesnippet/csharp/p-system.messaging.messa_91_1.cs)]"
  syntax:
    content: public bool Body { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to receive &lt;xref:System.Messaging.Message.Body%2A?displayProperty=fullName&gt; information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.MessagePropertyFilter.Body*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.ClearAll
  id: ClearAll
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: ClearAll()
  nameWithType: MessagePropertyFilter.ClearAll()
  fullName: System.Messaging.MessagePropertyFilter.ClearAll()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Sets all Boolean filter values to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>, so that no message properties are retrieved when receiving a message."
  remarks: "Use ClearAll to set all <xref:System.Messaging.MessagePropertyFilter> Boolean properties to `false`. This causes no message properties to be retrieved when receiving messages. ClearAll does not affect the values for <xref:System.Messaging.MessagePropertyFilter.DefaultBodySize%2A>, <xref:System.Messaging.MessagePropertyFilter.DefaultExtensionSize%2A>, or <xref:System.Messaging.MessagePropertyFilter.DefaultLabelSize%2A>.       After calling ClearAll, it is necessary to set at least one filter property to `true` in order to receive data related to a message. You can either set individual properties to `true`, or you can call <xref:System.Messaging.MessagePropertyFilter.SetDefaults%2A> or <xref:System.Messaging.MessagePropertyFilter.SetAll%2A>."
  example:
  - "The following code example calls the ClearAll method.  \n  \n [!code-cpp[MessagePropertyFilter#37](~/add/codesnippet/cpp/m-system.messaging.messa_12_1.cpp)]\n [!code-cs[MessagePropertyFilter#37](~/add/codesnippet/csharp/m-system.messaging.messa_12_1.cs)]"
  syntax:
    content: public void ClearAll ();
    parameters: []
  overload: System.Messaging.MessagePropertyFilter.ClearAll*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.Clone
  id: Clone
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: Clone()
  nameWithType: MessagePropertyFilter.Clone()
  fullName: System.Messaging.MessagePropertyFilter.Clone()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Creates a shallow copy of the object."
  syntax:
    content: public virtual object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "A <xref:System.Object> that represents an instance of the <xref href=&quot;System.Messaging.MessagePropertyFilter&quot;></xref> class."
  overload: System.Messaging.MessagePropertyFilter.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.ConnectorType
  id: ConnectorType
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: ConnectorType
  nameWithType: MessagePropertyFilter.ConnectorType
  fullName: System.Messaging.MessagePropertyFilter.ConnectorType
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets a value that indicates whether to retrieve &lt;xref:System.Messaging.Message.ConnectorType%2A?displayProperty=fullName&gt; property information when receiving or peeking a message."
  remarks: "The <xref:System.Messaging.Message.ConnectorType%2A> property of the <xref:System.Messaging.Message> class is required when an application sets a message property that is typically set by Message Queuing. It is used in the following two instances:      -   When a message is passed by a connector application, the <xref:System.Messaging.Message.ConnectorType%2A?displayProperty=fullName> is required for the sending and receiving applications to interpret the security and acknowledgment properties of the message.      -   When sending application-encrypted messages, the <xref:System.Messaging.Message.ConnectorType%2A?displayProperty=fullName> property informs Message Queuing to use the symmetric key."
  example:
  - "The following code example demonstrates the use of the ConnectorType property.  \n  \n [!code-cpp[MessagePropertyFilter#10](~/add/codesnippet/cpp/p-system.messaging.messa_36_1.cpp)]\n [!code-cs[MessagePropertyFilter#10](~/add/codesnippet/csharp/p-system.messaging.messa_36_1.cs)]"
  syntax:
    content: public bool ConnectorType { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to receive &lt;xref:System.Messaging.Message.ConnectorType%2A?displayProperty=fullName&gt; information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.MessagePropertyFilter.ConnectorType*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.CorrelationId
  id: CorrelationId
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: CorrelationId
  nameWithType: MessagePropertyFilter.CorrelationId
  fullName: System.Messaging.MessagePropertyFilter.CorrelationId
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets a value that indicates whether to retrieve &lt;xref:System.Messaging.Message.CorrelationId%2A?displayProperty=fullName&gt; property information when receiving or peeking a message."
  remarks: "The <xref:System.Messaging.Message.CorrelationId%2A> property of the <xref:System.Messaging.Message> class specifies a message identifier that is used by acknowledgment and report messages to reference the original message. It provides an application-defined identifier that the receiving application can use to sort messages."
  example:
  - "The following code example sends and receives a message containing an order to and from a queue. It specifically requests a positive acknowledgment when the original message reaches or is retrieved from the queue.  \n  \n [!code-cs[Message.Acknowledgment#1](~/add/codesnippet/csharp/p-system.messaging.messa_81_1.cs)]\n [!code-cpp[Message.Acknowledgment#1](~/add/codesnippet/cpp/p-system.messaging.messa_81_1.cpp)]\n [!code-vb[Message.Acknowledgment#1](~/add/codesnippet/visualbasic/p-system.messaging.messa_81_1.vb)]"
  syntax:
    content: public bool CorrelationId { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to receive &lt;xref:System.Messaging.Message.CorrelationId%2A?displayProperty=fullName&gt; information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.MessagePropertyFilter.CorrelationId*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.DefaultBodySize
  id: DefaultBodySize
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: DefaultBodySize
  nameWithType: MessagePropertyFilter.DefaultBodySize
  fullName: System.Messaging.MessagePropertyFilter.DefaultBodySize
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets the size, in bytes, of the default body buffer."
  remarks: "The default body size specifies the number of bytes to allocate for the message&quot;s body contents. The <xref:System.Messaging.Message.Body%2A> property of the <xref:System.Messaging.Message> class represents the serialized contents of the message. The body can contain up to 4 MB of data. Restricting the body size can improve performance."
  example:
  - "The following code example demonstrates the use of the DefaultBodySize property.  \n  \n [!code-cpp[MessagePropertyFilter#11](~/add/codesnippet/cpp/p-system.messaging.messa_83_1.cpp)]\n [!code-cs[MessagePropertyFilter#11](~/add/codesnippet/csharp/p-system.messaging.messa_83_1.cs)]"
  syntax:
    content: public int DefaultBodySize { get; set; }
    return:
      type: System.Int32
      description: "The default body buffer size to create when the message is received. The default is 1024 bytes."
  overload: System.Messaging.MessagePropertyFilter.DefaultBodySize*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The assigned value is negative."
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.DefaultExtensionSize
  id: DefaultExtensionSize
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: DefaultExtensionSize
  nameWithType: MessagePropertyFilter.DefaultExtensionSize
  fullName: System.Messaging.MessagePropertyFilter.DefaultExtensionSize
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets the size, in bytes, of the default extension buffer."
  remarks: "The default extension size specifies the number of bytes to allocate for the message&quot;s extension. The <xref:System.Messaging.Message.Extension%2A> property of the <xref:System.Messaging.Message> class represents the additional, application-defined information associated with the message, such as a binary large object. It is the responsibility of the application to interpret the contents of the <xref:System.Messaging.Message.Extension%2A>."
  example:
  - "The following code example demonstrates the use of the DefaultExtensionSize property.  \n  \n [!code-cpp[MessagePropertyFilter#12](~/add/codesnippet/cpp/p-system.messaging.messa_94_1.cpp)]\n [!code-cs[MessagePropertyFilter#12](~/add/codesnippet/csharp/p-system.messaging.messa_94_1.cs)]"
  syntax:
    content: public int DefaultExtensionSize { get; set; }
    return:
      type: System.Int32
      description: "The default extension buffer size to create when the message is received. The default is 255 bytes."
  overload: System.Messaging.MessagePropertyFilter.DefaultExtensionSize*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The assigned value is negative."
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.DefaultLabelSize
  id: DefaultLabelSize
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: DefaultLabelSize
  nameWithType: MessagePropertyFilter.DefaultLabelSize
  fullName: System.Messaging.MessagePropertyFilter.DefaultLabelSize
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets the size, in bytes, of the default label buffer."
  remarks: "The default label size specifies the number of bytes to allocate for the message&quot;s label. The <xref:System.Messaging.Message.Label%2A> property of the <xref:System.Messaging.Message> class specifies the label of the message."
  example:
  - "The following code example demonstrates the use of the DefaultLabelSize property.  \n  \n [!code-cpp[MessagePropertyFilter#13](~/add/codesnippet/cpp/p-system.messaging.messa_15_1.cpp)]\n [!code-cs[MessagePropertyFilter#13](~/add/codesnippet/csharp/p-system.messaging.messa_15_1.cs)]"
  syntax:
    content: public int DefaultLabelSize { get; set; }
    return:
      type: System.Int32
      description: "The default label buffer size to create when the message is received. The default is 255 bytes."
  overload: System.Messaging.MessagePropertyFilter.DefaultLabelSize*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The assigned value is negative."
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.DestinationQueue
  id: DestinationQueue
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: DestinationQueue
  nameWithType: MessagePropertyFilter.DestinationQueue
  fullName: System.Messaging.MessagePropertyFilter.DestinationQueue
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets a value that indicates whether to retrieve &lt;xref:System.Messaging.Message.DestinationQueue%2A?displayProperty=fullName&gt; property information when receiving or peeking a message."
  remarks: "The <xref:System.Messaging.Message.DestinationQueue%2A> property of the <xref:System.Messaging.Message> class identifies the original destination queue of the message. It is typically used to determine the original destination of a message that is in a journal or dead-letter queue. It can also be used when sending a response message back to a response queue."
  example:
  - "The following code example demonstrates the use of the DestinationQueue property.  \n  \n [!code-cpp[MessagePropertyFilter#14](~/add/codesnippet/cpp/p-system.messaging.messa_65_1.cpp)]\n [!code-cs[MessagePropertyFilter#14](~/add/codesnippet/csharp/p-system.messaging.messa_65_1.cs)]"
  syntax:
    content: public bool DestinationQueue { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to receive &lt;xref:System.Messaging.Message.DestinationQueue%2A?displayProperty=fullName&gt; information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.MessagePropertyFilter.DestinationQueue*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.DestinationSymmetricKey
  id: DestinationSymmetricKey
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: DestinationSymmetricKey
  nameWithType: MessagePropertyFilter.DestinationSymmetricKey
  fullName: System.Messaging.MessagePropertyFilter.DestinationSymmetricKey
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets a value that indicates whether to retrieve &lt;xref:System.Messaging.Message.DestinationSymmetricKey%2A?displayProperty=fullName&gt; property information when receiving or peeking a message."
  remarks: "The <xref:System.Messaging.Message.DestinationSymmetricKey%2A> property of the <xref:System.Messaging.Message> class specifies the symmetric key used to encrypt the message. It is required when you send application-encrypted messages, or when you send encrypted messages to a foreign queue.       A foreign queue exists in a queuing system other than Microsoft Message Queuing. Microsoft Message Queuing communicates with such queues through a connector application."
  example:
  - "The following code example demonstrates the use of the DestinationSymmetricKey property.  \n  \n [!code-cpp[MessagePropertyFilter#15](~/add/codesnippet/cpp/p-system.messaging.messa_72_1.cpp)]\n [!code-cs[MessagePropertyFilter#15](~/add/codesnippet/csharp/p-system.messaging.messa_72_1.cs)]"
  syntax:
    content: public bool DestinationSymmetricKey { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to receive &lt;xref:System.Messaging.Message.DestinationSymmetricKey%2A?displayProperty=fullName&gt; information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.MessagePropertyFilter.DestinationSymmetricKey*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.DigitalSignature
  id: DigitalSignature
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: DigitalSignature
  nameWithType: MessagePropertyFilter.DigitalSignature
  fullName: System.Messaging.MessagePropertyFilter.DigitalSignature
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets a value that indicates whether to retrieve &lt;xref:System.Messaging.Message.DigitalSignature%2A?displayProperty=fullName&gt; property information when receiving or peeking a message."
  remarks: "The <xref:System.Messaging.Message.DigitalSignature%2A> property of the <xref:System.Messaging.Message> class specifies the digital signature used to authenticate the message. In most cases, it is generated and set by Message Queuing when the sending application requests authentication."
  example:
  - "The following code example demonstrates the use of the DigitalSignature property.  \n  \n [!code-cpp[MessagePropertyFilter#16](~/add/codesnippet/cpp/p-system.messaging.messa_1_1.cpp)]\n [!code-cs[MessagePropertyFilter#16](~/add/codesnippet/csharp/p-system.messaging.messa_1_1.cs)]"
  syntax:
    content: public bool DigitalSignature { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to receive &lt;xref:System.Messaging.Message.DigitalSignature%2A?displayProperty=fullName&gt; information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.MessagePropertyFilter.DigitalSignature*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.EncryptionAlgorithm
  id: EncryptionAlgorithm
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: EncryptionAlgorithm
  nameWithType: MessagePropertyFilter.EncryptionAlgorithm
  fullName: System.Messaging.MessagePropertyFilter.EncryptionAlgorithm
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets a value that indicates whether to retrieve &lt;xref:System.Messaging.Message.EncryptionAlgorithm%2A?displayProperty=fullName&gt; property information when receiving or peeking a message."
  remarks: "If a message is private, it is encrypted before it is sent and decrypted when it is received. The <xref:System.Messaging.Message.EncryptionAlgorithm%2A> property of the <xref:System.Messaging.Message> class specifies the algorithm used to encrypt the message body of a private message."
  example:
  - "The following code example demonstrates the use of the EncryptionAlgorithm property.  \n  \n [!code-cpp[MessagePropertyFilter#17](~/add/codesnippet/cpp/p-system.messaging.messa_27_1.cpp)]\n [!code-cs[MessagePropertyFilter#17](~/add/codesnippet/csharp/p-system.messaging.messa_27_1.cs)]"
  syntax:
    content: public bool EncryptionAlgorithm { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to receive &lt;xref:System.Messaging.Message.EncryptionAlgorithm%2A?displayProperty=fullName&gt; information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.MessagePropertyFilter.EncryptionAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.Extension
  id: Extension
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: Extension
  nameWithType: MessagePropertyFilter.Extension
  fullName: System.Messaging.MessagePropertyFilter.Extension
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets a value that indicates whether to retrieve &lt;xref:System.Messaging.Message.Extension%2A?displayProperty=fullName&gt; property information when receiving or peeking a message."
  remarks: "The <xref:System.Messaging.Message.Extension%2A> property of the <xref:System.Messaging.Message> class provides for additional application-defined information that is associated with the message, like a large binary object. It is the responsibility of the receiving application to interpret the contents of the <xref:System.Messaging.Message.Extension%2A>."
  example:
  - "The following code example demonstrates the use of the Extension property.  \n  \n [!code-cpp[MessagePropertyFilter#18](~/add/codesnippet/cpp/p-system.messaging.messa_37_1.cpp)]\n [!code-cs[MessagePropertyFilter#18](~/add/codesnippet/csharp/p-system.messaging.messa_37_1.cs)]"
  syntax:
    content: public bool Extension { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to receive &lt;xref:System.Messaging.Message.Extension%2A?displayProperty=fullName&gt; information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.MessagePropertyFilter.Extension*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.HashAlgorithm
  id: HashAlgorithm
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: HashAlgorithm
  nameWithType: MessagePropertyFilter.HashAlgorithm
  fullName: System.Messaging.MessagePropertyFilter.HashAlgorithm
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets a value that indicates whether to retrieve &lt;xref:System.Messaging.Message.HashAlgorithm%2A?displayProperty=fullName&gt; property information when receiving or peeking a message."
  remarks: "The <xref:System.Messaging.Message.HashAlgorithm%2A> property of the <xref:System.Messaging.Message> class identifies the hashing algorithm Message Queuing uses when authenticating messages. The hashing algorithm is also used when creating a digital signature for a message."
  example:
  - "The following code example demonstrates the use of the HashAlgorithm property.  \n  \n [!code-cpp[MessagePropertyFilter#19](~/add/codesnippet/cpp/p-system.messaging.messa_21_1.cpp)]\n [!code-cs[MessagePropertyFilter#19](~/add/codesnippet/csharp/p-system.messaging.messa_21_1.cs)]"
  syntax:
    content: public bool HashAlgorithm { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to receive &lt;xref:System.Messaging.Message.HashAlgorithm%2A?displayProperty=fullName&gt; information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.MessagePropertyFilter.HashAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.Id
  id: Id
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: Id
  nameWithType: MessagePropertyFilter.Id
  fullName: System.Messaging.MessagePropertyFilter.Id
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets a value that indicates whether to retrieve &lt;xref:System.Messaging.Message.Id%2A?displayProperty=fullName&gt; property information when receiving or peeking a message."
  remarks: "The <xref:System.Messaging.Message.Id%2A> property of the <xref:System.Messaging.Message> class indicates the Message Queuing-generated unique identifier of the message. This identifier is generated when the message is sent."
  example:
  - "The following code example demonstrates the use of the Id property.  \n  \n [!code-cpp[MessagePropertyFilter#20](~/add/codesnippet/cpp/p-system.messaging.messa_6_1.cpp)]\n [!code-cs[MessagePropertyFilter#20](~/add/codesnippet/csharp/p-system.messaging.messa_6_1.cs)]"
  syntax:
    content: public bool Id { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to receive &lt;xref:System.Messaging.Message.Id%2A?displayProperty=fullName&gt; information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.MessagePropertyFilter.Id*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.IsFirstInTransaction
  id: IsFirstInTransaction
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: IsFirstInTransaction
  nameWithType: MessagePropertyFilter.IsFirstInTransaction
  fullName: System.Messaging.MessagePropertyFilter.IsFirstInTransaction
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets a value that indicates whether to retrieve &lt;xref:System.Messaging.Message.IsFirstInTransaction%2A?displayProperty=fullName&gt; property information when receiving or peeking a message."
  remarks: "The <xref:System.Messaging.Message.IsFirstInTransaction%2A> property of the <xref:System.Messaging.Message> class is used by receiving applications to verify whether a message is the first message sent in a single transaction to a single queue."
  example:
  - "The following code example demonstrates the use of the IsFirstInTransaction property.  \n  \n [!code-cpp[MessagePropertyFilter#50](~/add/codesnippet/cpp/p-system.messaging.messa_16_1.cpp)]\n [!code-cs[MessagePropertyFilter#50](~/add/codesnippet/csharp/p-system.messaging.messa_16_1.cs)]"
  syntax:
    content: public bool IsFirstInTransaction { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to receive &lt;xref:System.Messaging.Message.IsFirstInTransaction%2A?displayProperty=fullName&gt; information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.MessagePropertyFilter.IsFirstInTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.IsLastInTransaction
  id: IsLastInTransaction
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: IsLastInTransaction
  nameWithType: MessagePropertyFilter.IsLastInTransaction
  fullName: System.Messaging.MessagePropertyFilter.IsLastInTransaction
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets a value that indicates whether to retrieve &lt;xref:System.Messaging.Message.IsLastInTransaction%2A?displayProperty=fullName&gt; property information when receiving or peeking a message."
  remarks: "The <xref:System.Messaging.Message.IsLastInTransaction%2A> property of the <xref:System.Messaging.Message> class is used by receiving applications to verify whether a message is the last message sent from a single transaction to a single queue."
  example:
  - "The following code example demonstrates the use of the IsLastInTransaction property.  \n  \n [!code-cpp[MessagePropertyFilter#51](~/add/codesnippet/cpp/p-system.messaging.messa_89_1.cpp)]\n [!code-cs[MessagePropertyFilter#51](~/add/codesnippet/csharp/p-system.messaging.messa_89_1.cs)]"
  syntax:
    content: public bool IsLastInTransaction { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to receive &lt;xref:System.Messaging.Message.IsLastInTransaction%2A?displayProperty=fullName&gt; information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.MessagePropertyFilter.IsLastInTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.Label
  id: Label
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: Label
  nameWithType: MessagePropertyFilter.Label
  fullName: System.Messaging.MessagePropertyFilter.Label
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets a value that indicates whether to retrieve &lt;xref:System.Messaging.Message.Label%2A?displayProperty=fullName&gt; property information when receiving or peeking a message."
  remarks: "The <xref:System.Messaging.Message.Label%2A> property of the <xref:System.Messaging.Message> class specifies the label of the message."
  example:
  - "The following code example demonstrates the use of the Label property.  \n  \n [!code-cpp[MessagePropertyFilter#21](~/add/codesnippet/cpp/p-system.messaging.messa_99_1.cpp)]\n [!code-cs[MessagePropertyFilter#21](~/add/codesnippet/csharp/p-system.messaging.messa_99_1.cs)]"
  syntax:
    content: public bool Label { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to receive &lt;xref:System.Messaging.Message.Label%2A?displayProperty=fullName&gt; information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.MessagePropertyFilter.Label*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.LookupId
  id: LookupId
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: LookupId
  nameWithType: MessagePropertyFilter.LookupId
  fullName: System.Messaging.MessagePropertyFilter.LookupId
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets a value that indicates whether to retrieve <xref:System.Messaging.Message.LookupId*> property information when receiving or peeking a message."
  remarks: "The <xref:System.Messaging.Message.LookupId%2A> property of the <xref:System.Messaging.Message> class specifies the lookup identifier of the message."
  syntax:
    content: public bool LookupId { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to receive <xref:System.Messaging.Message.LookupId*> property information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.MessagePropertyFilter.LookupId*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.MessageType
  id: MessageType
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: MessageType
  nameWithType: MessagePropertyFilter.MessageType
  fullName: System.Messaging.MessagePropertyFilter.MessageType
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets a value that indicates whether to retrieve &lt;xref:System.Messaging.Message.MessageType%2A?displayProperty=fullName&gt; property information when receiving or peeking a message."
  remarks: "The <xref:System.Messaging.Message.MessageType%2A> property of the <xref:System.Messaging.Message> class identifies the type of the message. A message can be a normal message, a positive or negative acknowledgment message, or a report message."
  example:
  - "The following code example demonstrates the use of the MessageType property.  \n  \n [!code-cpp[MessagePropertyFilter#22](~/add/codesnippet/cpp/p-system.messaging.messa_39_1.cpp)]\n [!code-cs[MessagePropertyFilter#22](~/add/codesnippet/csharp/p-system.messaging.messa_39_1.cs)]"
  syntax:
    content: public bool MessageType { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to receive &lt;xref:System.Messaging.Message.MessageType%2A?displayProperty=fullName&gt; information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.MessagePropertyFilter.MessageType*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.Priority
  id: Priority
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: Priority
  nameWithType: MessagePropertyFilter.Priority
  fullName: System.Messaging.MessagePropertyFilter.Priority
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets a value that indicates whether to retrieve &lt;xref:System.Messaging.Message.Priority%2A?displayProperty=fullName&gt; property information when receiving or peeking a message."
  remarks: "The <xref:System.Messaging.Message.Priority%2A> property of the <xref:System.Messaging.Message> class affects how Message Queuing handles the message while it is en route, as well as where the message is placed in the queue when it reaches its destination.       Message priority can only be set meaningfully for non-transactional messages. The priority for transactional messages is automatically set to zero, which causes transactional message priority to be ignored."
  example:
  - "The following code example sends two messages of different priorities to the queue, and retrieves them subsequently.  \n  \n [!code-cpp[Message.DefaultPropertiesToSend#1](~/add/codesnippet/cpp/p-system.messaging.messa_49_1.cpp)]\n [!code-vb[Message.DefaultPropertiesToSend#1](~/add/codesnippet/visualbasic/p-system.messaging.messa_49_1.vb)]\n [!code-cs[Message.DefaultPropertiesToSend#1](~/add/codesnippet/csharp/p-system.messaging.messa_49_1.cs)]"
  syntax:
    content: public bool Priority { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to receive &lt;xref:System.Messaging.Message.Priority%2A?displayProperty=fullName&gt; information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.MessagePropertyFilter.Priority*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.Recoverable
  id: Recoverable
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: Recoverable
  nameWithType: MessagePropertyFilter.Recoverable
  fullName: System.Messaging.MessagePropertyFilter.Recoverable
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets a value that indicates whether to retrieve &lt;xref:System.Messaging.Message.Recoverable%2A?displayProperty=fullName&gt; property information when receiving or peeking a message."
  remarks: "The <xref:System.Messaging.Message.Recoverable%2A> property of the <xref:System.Messaging.Message> class indicates whether delivery of a message is guaranteed, even if a computer crashes while the message is en route to the destination queue.       If delivery of a message is guaranteed, the message is stored locally at every step until the message is successfully forwarded to the next computer. Setting <xref:System.Messaging.Message.Recoverable%2A?displayProperty=fullName> to `true` on the message could affect the throughput."
  example:
  - "The following code example demonstrates the use of the Recoverable property.  \n  \n [!code-cpp[MessagePropertyFilter#23](~/add/codesnippet/cpp/p-system.messaging.messa_62_1.cpp)]\n [!code-cs[MessagePropertyFilter#23](~/add/codesnippet/csharp/p-system.messaging.messa_62_1.cs)]"
  syntax:
    content: public bool Recoverable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to receive &lt;xref:System.Messaging.Message.Recoverable%2A?displayProperty=fullName&gt; information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.MessagePropertyFilter.Recoverable*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.ResponseQueue
  id: ResponseQueue
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: ResponseQueue
  nameWithType: MessagePropertyFilter.ResponseQueue
  fullName: System.Messaging.MessagePropertyFilter.ResponseQueue
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets a value that indicates whether to retrieve &lt;xref:System.Messaging.Message.ResponseQueue%2A?displayProperty=fullName&gt; property information when receiving or peeking a message."
  remarks: "The <xref:System.Messaging.Message.ResponseQueue%2A> property of the <xref:System.Messaging.Message> class identifies the queue that receives application-generated response messages that are sent back to the sending application by the receiving application. Response queues are specified by the sending application when the application sends its messages. Any available queue can be specified as a response queue.       Messages returned to the response queue are application-specific. The application must define what is in the messages as well as what is to be done when a message is received."
  example:
  - "The following code example demonstrates the use of the ResponseQueue property.  \n  \n [!code-cpp[MessagePropertyFilter#24](~/add/codesnippet/cpp/p-system.messaging.messa_64_1.cpp)]\n [!code-cs[MessagePropertyFilter#24](~/add/codesnippet/csharp/p-system.messaging.messa_64_1.cs)]"
  syntax:
    content: public bool ResponseQueue { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to receive &lt;xref:System.Messaging.Message.ResponseQueue%2A?displayProperty=fullName&gt; information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.MessagePropertyFilter.ResponseQueue*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.SenderCertificate
  id: SenderCertificate
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: SenderCertificate
  nameWithType: MessagePropertyFilter.SenderCertificate
  fullName: System.Messaging.MessagePropertyFilter.SenderCertificate
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets a value that indicates whether to retrieve &lt;xref:System.Messaging.Message.SenderCertificate%2A?displayProperty=fullName&gt; property information when receiving or peeking a message."
  remarks: "The <xref:System.Messaging.Message.SenderCertificate%2A> property of the <xref:System.Messaging.Message> class specifies the security certificate used to authenticate messages."
  example:
  - "The following code example demonstrates the use of the SenderCertificate property.  \n  \n [!code-cpp[MessagePropertyFilter#25](~/add/codesnippet/cpp/p-system.messaging.messa_60_1.cpp)]\n [!code-cs[MessagePropertyFilter#25](~/add/codesnippet/csharp/p-system.messaging.messa_60_1.cs)]"
  syntax:
    content: public bool SenderCertificate { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to receive &lt;xref:System.Messaging.Message.SenderCertificate%2A?displayProperty=fullName&gt; information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.MessagePropertyFilter.SenderCertificate*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.SenderId
  id: SenderId
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: SenderId
  nameWithType: MessagePropertyFilter.SenderId
  fullName: System.Messaging.MessagePropertyFilter.SenderId
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets a value that indicates whether to retrieve &lt;xref:System.Messaging.Message.SenderId%2A?displayProperty=fullName&gt; property information when receiving or peeking a message."
  remarks: "The <xref:System.Messaging.Message.SenderId%2A> property of the <xref:System.Messaging.Message> class is used primarily by the receiving queue manager when authenticating a message. The property is set by Message Queuing and is used by the queue manager to verify who sent the message and that the sender has access rights to the receiving queue."
  example:
  - "The following code example demonstrates the use of the SenderId property.  \n  \n [!code-cpp[MessagePropertyFilter#26](~/add/codesnippet/cpp/p-system.messaging.messa_24_1.cpp)]\n [!code-cs[MessagePropertyFilter#26](~/add/codesnippet/csharp/p-system.messaging.messa_24_1.cs)]"
  syntax:
    content: public bool SenderId { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to receive &lt;xref:System.Messaging.Message.SenderId%2A?displayProperty=fullName&gt; information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.MessagePropertyFilter.SenderId*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.SenderVersion
  id: SenderVersion
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: SenderVersion
  nameWithType: MessagePropertyFilter.SenderVersion
  fullName: System.Messaging.MessagePropertyFilter.SenderVersion
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets a value that indicates whether to retrieve &lt;xref:System.Messaging.Message.SenderVersion%2A?displayProperty=fullName&gt; property information when receiving or peeking a message."
  remarks: "The <xref:System.Messaging.Message.SenderVersion%2A> property of the <xref:System.Messaging.Message> class specifies the version of Message Queuing used to send the message. The property is important to be aware of when using features like transaction processing, which is only supported by Message Queuing version 2.0 and later, or digital signatures, which are used to authenticate messages sent by version 1.0.       <xref:System.Messaging.Message.SenderVersion%2A?displayProperty=fullName> is set by the sending queue manager when the message is sent."
  example:
  - "The following code example demonstrates the use of the SenderVersion property.  \n  \n [!code-cpp[MessagePropertyFilter#27](~/add/codesnippet/cpp/p-system.messaging.messa_102_1.cpp)]\n [!code-cs[MessagePropertyFilter#27](~/add/codesnippet/csharp/p-system.messaging.messa_102_1.cs)]"
  syntax:
    content: public bool SenderVersion { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to receive &lt;xref:System.Messaging.Message.SenderVersion%2A?displayProperty=fullName&gt; information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.MessagePropertyFilter.SenderVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.SentTime
  id: SentTime
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: SentTime
  nameWithType: MessagePropertyFilter.SentTime
  fullName: System.Messaging.MessagePropertyFilter.SentTime
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets a value that indicates whether to retrieve &lt;xref:System.Messaging.Message.SentTime%2A?displayProperty=fullName&gt; property information when receiving or peeking a message."
  remarks: "The <xref:System.Messaging.Message.SentTime%2A> property of the <xref:System.Messaging.Message> class indicates the sending machine&quot;s date and time when the message was sent by the source Queue Manager."
  example:
  - "The following code example demonstrates the use of the SentTime property.  \n  \n [!code-cpp[MessagePropertyFilter#28](~/add/codesnippet/cpp/p-system.messaging.messa_97_1.cpp)]\n [!code-cs[MessagePropertyFilter#28](~/add/codesnippet/csharp/p-system.messaging.messa_97_1.cs)]"
  syntax:
    content: public bool SentTime { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to receive &lt;xref:System.Messaging.Message.SentTime%2A?displayProperty=fullName&gt; information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.MessagePropertyFilter.SentTime*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.SetAll
  id: SetAll
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: SetAll()
  nameWithType: MessagePropertyFilter.SetAll()
  fullName: System.Messaging.MessagePropertyFilter.SetAll()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Specifies to retrieve all message properties when receiving a message."
  remarks: "Use SetAll to set all Boolean <xref:System.Messaging.MessagePropertyFilter> properties to `true`. This causes all message properties to be retrieved when receiving messages. SetAll does not affect the values for <xref:System.Messaging.MessagePropertyFilter.DefaultBodySize%2A>, <xref:System.Messaging.MessagePropertyFilter.DefaultExtensionSize%2A>, or <xref:System.Messaging.MessagePropertyFilter.DefaultLabelSize%2A>.       After calling SetAll, you can set individual filter values to `false` in order to restrict the properties retrieved when the message is received."
  example:
  - "The following code example calls the SetAll method.  \n  \n [!code-cpp[MessagePropertyFilter#39](~/add/codesnippet/cpp/m-system.messaging.messa_48_1.cpp)]\n [!code-cs[MessagePropertyFilter#39](~/add/codesnippet/csharp/m-system.messaging.messa_48_1.cs)]"
  syntax:
    content: public void SetAll ();
    parameters: []
  overload: System.Messaging.MessagePropertyFilter.SetAll*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.SetDefaults
  id: SetDefaults
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: SetDefaults()
  nameWithType: MessagePropertyFilter.SetDefaults()
  fullName: System.Messaging.MessagePropertyFilter.SetDefaults()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Sets the filter values of common Message Queuing properties to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> and the integer-valued properties to their default values."
  remarks: "Use SetDefaults to set the following <xref:System.Messaging.MessagePropertyFilter> Boolean-valued properties to `true`. These are the most common properties a <xref:System.Messaging.MessageQueue> will typically interact with the following:      -   <xref:System.Messaging.MessagePropertyFilter.AcknowledgeType%2A>      -   <xref:System.Messaging.MessagePropertyFilter.Acknowledgment%2A>      -   <xref:System.Messaging.MessagePropertyFilter.AdministrationQueue%2A>      -   <xref:System.Messaging.MessagePropertyFilter.Body%2A>      -   <xref:System.Messaging.MessagePropertyFilter.Id%2A>      -   <xref:System.Messaging.MessagePropertyFilter.Label%2A>      -   <xref:System.Messaging.MessagePropertyFilter.LookupId%2A>      -   <xref:System.Messaging.MessagePropertyFilter.MessageType%2A>      -   <xref:System.Messaging.MessagePropertyFilter.ResponseQueue%2A>      -   <xref:System.Messaging.MessagePropertyFilter.UseDeadLetterQueue%2A>      -   <xref:System.Messaging.MessagePropertyFilter.UseJournalQueue%2A>       SetDefaults sets the properties in the following table to their default values.      |Property|Default value|   |--------------|-------------------|   |<xref:System.Messaging.MessagePropertyFilter.DefaultBodySize%2A>|1024|   |<xref:System.Messaging.MessagePropertyFilter.DefaultExtensionSize%2A>|255|   |<xref:System.Messaging.MessagePropertyFilter.DefaultLabelSize%2A>|255|       The <xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A?displayProperty=fullName> property represents a <xref:System.Messaging.MessagePropertyFilter> on which SetDefaults has been called."
  example:
  - "The following code example calls the SetDefaults method.  \n  \n [!code-cpp[MessagePropertyFilter#38](~/add/codesnippet/cpp/m-system.messaging.messa_45_1.cpp)]\n [!code-cs[MessagePropertyFilter#38](~/add/codesnippet/csharp/m-system.messaging.messa_45_1.cs)]"
  syntax:
    content: public void SetDefaults ();
    parameters: []
  overload: System.Messaging.MessagePropertyFilter.SetDefaults*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.SourceMachine
  id: SourceMachine
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: SourceMachine
  nameWithType: MessagePropertyFilter.SourceMachine
  fullName: System.Messaging.MessagePropertyFilter.SourceMachine
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets a value that indicates whether to retrieve &lt;xref:System.Messaging.Message.SourceMachine%2A?displayProperty=fullName&gt; property information when receiving or peeking a message."
  remarks: "The <xref:System.Messaging.Message.SourceMachine%2A> property of the <xref:System.Messaging.Message> class specifies the computer where the message originated."
  example:
  - "The following code example demonstrates the use of the SourceMachine property.  \n  \n [!code-cpp[MessagePropertyFilter#29](~/add/codesnippet/cpp/p-system.messaging.messa_40_1.cpp)]\n [!code-cs[MessagePropertyFilter#29](~/add/codesnippet/csharp/p-system.messaging.messa_40_1.cs)]"
  syntax:
    content: public bool SourceMachine { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to receive &lt;xref:System.Messaging.Message.SourceMachine%2A?displayProperty=fullName&gt; information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.MessagePropertyFilter.SourceMachine*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.TimeToBeReceived
  id: TimeToBeReceived
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: TimeToBeReceived
  nameWithType: MessagePropertyFilter.TimeToBeReceived
  fullName: System.Messaging.MessagePropertyFilter.TimeToBeReceived
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets a value that indicates whether to retrieve &lt;xref:System.Messaging.Message.TimeToBeReceived%2A?displayProperty=fullName&gt; property information when receiving or peeking a message."
  remarks: "The <xref:System.Messaging.Message.TimeToBeReceived%2A> property of the <xref:System.Messaging.Message> class specifies the total time in seconds for a sent message to be received from the destination queue. The time limit for the message to be retrieved from the target queue includes the time spent getting to the destination queue, plus the time spent waiting in the queue before the message is retrieved by an application."
  example:
  - "The following code example demonstrates the use of the TimeToBeReceived property.  \n  \n [!code-cpp[MessagePropertyFilter#30](~/add/codesnippet/cpp/p-system.messaging.messa_0_1.cpp)]\n [!code-cs[MessagePropertyFilter#30](~/add/codesnippet/csharp/p-system.messaging.messa_0_1.cs)]"
  syntax:
    content: public bool TimeToBeReceived { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to receive &lt;xref:System.Messaging.Message.TimeToBeReceived%2A?displayProperty=fullName&gt; information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.MessagePropertyFilter.TimeToBeReceived*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.TimeToReachQueue
  id: TimeToReachQueue
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: TimeToReachQueue
  nameWithType: MessagePropertyFilter.TimeToReachQueue
  fullName: System.Messaging.MessagePropertyFilter.TimeToReachQueue
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets a value that indicates whether to retrieve &lt;xref:System.Messaging.Message.TimeToReachQueue%2A?displayProperty=fullName&gt; property information when receiving or peeking a message."
  remarks: "The <xref:System.Messaging.Message.TimeToReachQueue%2A> property of the <xref:System.Messaging.Message> class specifies a time limit in seconds from the time the message is sent for it to reach the destination queue."
  example:
  - "The following code example demonstrates the use of the TimeToReachQueue property.  \n  \n [!code-cpp[MessagePropertyFilter#31](~/add/codesnippet/cpp/p-system.messaging.messa_51_1.cpp)]\n [!code-cs[MessagePropertyFilter#31](~/add/codesnippet/csharp/p-system.messaging.messa_51_1.cs)]"
  syntax:
    content: public bool TimeToReachQueue { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to receive &lt;xref:System.Messaging.Message.TimeToReachQueue%2A?displayProperty=fullName&gt; information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.MessagePropertyFilter.TimeToReachQueue*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.TransactionId
  id: TransactionId
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: TransactionId
  nameWithType: MessagePropertyFilter.TransactionId
  fullName: System.Messaging.MessagePropertyFilter.TransactionId
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets a value that indicates whether to retrieve &lt;xref:System.Messaging.Message.TransactionId%2A?displayProperty=fullName&gt; property information when receiving or peeking a message."
  remarks: "The <xref:System.Messaging.Message.TransactionId%2A> property of the <xref:System.Messaging.Message> class identifies the transaction that sent the message. Use this property within a receiving application to verify that a message was sent as part of a specific transaction."
  example:
  - "The following code example demonstrates the use of the TransactionId property.  \n  \n [!code-cpp[MessagePropertyFilter#52](~/add/codesnippet/cpp/p-system.messaging.messa_46_1.cpp)]\n [!code-cs[MessagePropertyFilter#52](~/add/codesnippet/csharp/p-system.messaging.messa_46_1.cs)]"
  syntax:
    content: public bool TransactionId { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to receive &lt;xref:System.Messaging.Message.TransactionId%2A?displayProperty=fullName&gt; information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.MessagePropertyFilter.TransactionId*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.TransactionStatusQueue
  id: TransactionStatusQueue
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: TransactionStatusQueue
  nameWithType: MessagePropertyFilter.TransactionStatusQueue
  fullName: System.Messaging.MessagePropertyFilter.TransactionStatusQueue
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets a value that indicates whether to retrieve &lt;xref:System.Messaging.Message.TransactionStatusQueue%2A?displayProperty=fullName&gt; property information when receiving or peeking a message."
  remarks: "The <xref:System.Messaging.Message.TransactionStatusQueue%2A> property of the <xref:System.Messaging.Message> class identifies the transaction status queue on the source computer. The property is used for sending acknowledgment messages back to the sending application. The transaction status queue is used by connector applications when receiving transactional messages sent to a foreign queue.       A foreign queue exists in a queuing system other than Microsoft Message Queuing. Microsoft Message Queuing communicates with such queues through a connector application."
  example:
  - "The following code example demonstrates the use of the TransactionStatusQueue property.  \n  \n [!code-cpp[MessagePropertyFilter#53](~/add/codesnippet/cpp/p-system.messaging.messa_29_1.cpp)]\n [!code-cs[MessagePropertyFilter#53](~/add/codesnippet/csharp/p-system.messaging.messa_29_1.cs)]"
  syntax:
    content: public bool TransactionStatusQueue { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to receive &lt;xref:System.Messaging.Message.TransactionStatusQueue%2A?displayProperty=fullName&gt; information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.MessagePropertyFilter.TransactionStatusQueue*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.UseAuthentication
  id: UseAuthentication
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: UseAuthentication
  nameWithType: MessagePropertyFilter.UseAuthentication
  fullName: System.Messaging.MessagePropertyFilter.UseAuthentication
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets a value that indicates whether to retrieve &lt;xref:System.Messaging.Message.UseAuthentication%2A?displayProperty=fullName&gt; property information when receiving or peeking a message."
  remarks: "The <xref:System.Messaging.Message.UseAuthentication%2A> property of the <xref:System.Messaging.Message> class specifies whether the message needs to be authenticated.       It is not possible to look at the properties of a message and determine whether a message failed authentication. Messages that fail authentication are discarded and are not delivered to the queue."
  example:
  - "The following code example demonstrates the use of the UseAuthentication property.  \n  \n [!code-cpp[MessagePropertyFilter#32](~/add/codesnippet/cpp/p-system.messaging.messa_34_1.cpp)]\n [!code-cs[MessagePropertyFilter#32](~/add/codesnippet/csharp/p-system.messaging.messa_34_1.cs)]"
  syntax:
    content: public bool UseAuthentication { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to receive &lt;xref:System.Messaging.Message.UseAuthentication%2A?displayProperty=fullName&gt; information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.MessagePropertyFilter.UseAuthentication*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.UseDeadLetterQueue
  id: UseDeadLetterQueue
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: UseDeadLetterQueue
  nameWithType: MessagePropertyFilter.UseDeadLetterQueue
  fullName: System.Messaging.MessagePropertyFilter.UseDeadLetterQueue
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets a value that indicates whether to retrieve &lt;xref:System.Messaging.Message.UseDeadLetterQueue%2A?displayProperty=fullName&gt; property information when receiving or peeking a message."
  remarks: "The <xref:System.Messaging.Message.UseDeadLetterQueue%2A> property of the <xref:System.Messaging.Message> class specifies whether a copy of a message that could not be delivered should be sent to a dead-letter queue."
  example:
  - "The following code example demonstrates the use of the UseDeadLetterQueue property.  \n  \n [!code-cpp[MessagePropertyFilter#33](~/add/codesnippet/cpp/p-system.messaging.messa_58_1.cpp)]\n [!code-cs[MessagePropertyFilter#33](~/add/codesnippet/csharp/p-system.messaging.messa_58_1.cs)]"
  syntax:
    content: public bool UseDeadLetterQueue { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to receive &lt;xref:System.Messaging.Message.UseDeadLetterQueue%2A?displayProperty=fullName&gt; information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.MessagePropertyFilter.UseDeadLetterQueue*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.UseEncryption
  id: UseEncryption
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: UseEncryption
  nameWithType: MessagePropertyFilter.UseEncryption
  fullName: System.Messaging.MessagePropertyFilter.UseEncryption
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets a value that indicates whether to retrieve &lt;xref:System.Messaging.Message.UseEncryption%2A?displayProperty=fullName&gt; property information when receiving or peeking a message."
  remarks: "The <xref:System.Messaging.Message.UseEncryption%2A> property of the <xref:System.Messaging.Message> class specifies whether to encrypt a message."
  example:
  - "The following code example demonstrates the use of the UseEncryption property.  \n  \n [!code-cpp[MessagePropertyFilter#34](~/add/codesnippet/cpp/p-system.messaging.messa_35_1.cpp)]\n [!code-cs[MessagePropertyFilter#34](~/add/codesnippet/csharp/p-system.messaging.messa_35_1.cs)]"
  syntax:
    content: public bool UseEncryption { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to receive &lt;xref:System.Messaging.Message.UseEncryption%2A?displayProperty=fullName&gt; information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.MessagePropertyFilter.UseEncryption*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.UseJournalQueue
  id: UseJournalQueue
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: UseJournalQueue
  nameWithType: MessagePropertyFilter.UseJournalQueue
  fullName: System.Messaging.MessagePropertyFilter.UseJournalQueue
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets a value that indicates whether to retrieve &lt;xref:System.Messaging.Message.UseJournalQueue%2A?displayProperty=fullName&gt; property information when receiving or peeking a message."
  remarks: "The <xref:System.Messaging.Message.UseJournalQueue%2A> property of the <xref:System.Messaging.Message> class specifies whether a copy of the message should be kept in a machine journal on the originating computer."
  example:
  - "The following code example demonstrates the use of the UseJournalQueue property.  \n  \n [!code-cpp[MessagePropertyFilter#35](~/add/codesnippet/cpp/p-system.messaging.messa_44_1.cpp)]\n [!code-cs[MessagePropertyFilter#35](~/add/codesnippet/csharp/p-system.messaging.messa_44_1.cs)]"
  syntax:
    content: public bool UseJournalQueue { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to receive &lt;xref:System.Messaging.Message.UseJournalQueue%2A?displayProperty=fullName&gt; information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.MessagePropertyFilter.UseJournalQueue*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.MessagePropertyFilter.UseTracing
  id: UseTracing
  parent: System.Messaging.MessagePropertyFilter
  langs:
  - csharp
  name: UseTracing
  nameWithType: MessagePropertyFilter.UseTracing
  fullName: System.Messaging.MessagePropertyFilter.UseTracing
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Gets or sets a value that indicates whether to retrieve &lt;xref:System.Messaging.Message.UseTracing%2A?displayProperty=fullName&gt; property information when receiving or peeking a message."
  remarks: "The <xref:System.Messaging.Message.UseTracing%2A> property of the <xref:System.Messaging.Message> class specifies whether to track the route of a message as it moves toward its destination queue. If `true`, each time the original message passes through a Message Queuing routing server, a Message Queuing-generated report message is sent to the system report queue.       Using tracing involves setting up Active Directory and specifying a report queue for the Message Queuing enterprise. These settings are configured by the administrator."
  example:
  - "The following code example demonstrates the use of the UseTracing property.  \n  \n [!code-cpp[MessagePropertyFilter#36](~/add/codesnippet/cpp/p-system.messaging.messa_14_1.cpp)]\n [!code-cs[MessagePropertyFilter#36](~/add/codesnippet/csharp/p-system.messaging.messa_14_1.cs)]"
  syntax:
    content: public bool UseTracing { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> to receive &lt;xref:System.Messaging.Message.UseTracing%2A?displayProperty=fullName&gt; information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Messaging.MessagePropertyFilter.UseTracing*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Messaging.MessagePropertyFilter.#ctor
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: MessagePropertyFilter()
  nameWithType: MessagePropertyFilter.MessagePropertyFilter()
  fullName: System.Messaging.MessagePropertyFilter.MessagePropertyFilter()
- uid: System.Messaging.MessagePropertyFilter.AcknowledgeType
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: AcknowledgeType
  nameWithType: MessagePropertyFilter.AcknowledgeType
  fullName: System.Messaging.MessagePropertyFilter.AcknowledgeType
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Messaging.MessagePropertyFilter.Acknowledgment
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Acknowledgment
  nameWithType: MessagePropertyFilter.Acknowledgment
  fullName: System.Messaging.MessagePropertyFilter.Acknowledgment
- uid: System.Messaging.MessagePropertyFilter.AdministrationQueue
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: AdministrationQueue
  nameWithType: MessagePropertyFilter.AdministrationQueue
  fullName: System.Messaging.MessagePropertyFilter.AdministrationQueue
- uid: System.Messaging.MessagePropertyFilter.AppSpecific
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: AppSpecific
  nameWithType: MessagePropertyFilter.AppSpecific
  fullName: System.Messaging.MessagePropertyFilter.AppSpecific
- uid: System.Messaging.MessagePropertyFilter.ArrivedTime
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: ArrivedTime
  nameWithType: MessagePropertyFilter.ArrivedTime
  fullName: System.Messaging.MessagePropertyFilter.ArrivedTime
- uid: System.Messaging.MessagePropertyFilter.AttachSenderId
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: AttachSenderId
  nameWithType: MessagePropertyFilter.AttachSenderId
  fullName: System.Messaging.MessagePropertyFilter.AttachSenderId
- uid: System.Messaging.MessagePropertyFilter.Authenticated
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Authenticated
  nameWithType: MessagePropertyFilter.Authenticated
  fullName: System.Messaging.MessagePropertyFilter.Authenticated
- uid: System.Messaging.MessagePropertyFilter.AuthenticationProviderName
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: AuthenticationProviderName
  nameWithType: MessagePropertyFilter.AuthenticationProviderName
  fullName: System.Messaging.MessagePropertyFilter.AuthenticationProviderName
- uid: System.Messaging.MessagePropertyFilter.AuthenticationProviderType
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: AuthenticationProviderType
  nameWithType: MessagePropertyFilter.AuthenticationProviderType
  fullName: System.Messaging.MessagePropertyFilter.AuthenticationProviderType
- uid: System.Messaging.MessagePropertyFilter.Body
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Body
  nameWithType: MessagePropertyFilter.Body
  fullName: System.Messaging.MessagePropertyFilter.Body
- uid: System.Messaging.MessagePropertyFilter.ClearAll
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: ClearAll()
  nameWithType: MessagePropertyFilter.ClearAll()
  fullName: System.Messaging.MessagePropertyFilter.ClearAll()
- uid: System.Messaging.MessagePropertyFilter.Clone
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Clone()
  nameWithType: MessagePropertyFilter.Clone()
  fullName: System.Messaging.MessagePropertyFilter.Clone()
- uid: System.Messaging.MessagePropertyFilter.ConnectorType
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: ConnectorType
  nameWithType: MessagePropertyFilter.ConnectorType
  fullName: System.Messaging.MessagePropertyFilter.ConnectorType
- uid: System.Messaging.MessagePropertyFilter.CorrelationId
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: CorrelationId
  nameWithType: MessagePropertyFilter.CorrelationId
  fullName: System.Messaging.MessagePropertyFilter.CorrelationId
- uid: System.Messaging.MessagePropertyFilter.DefaultBodySize
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: DefaultBodySize
  nameWithType: MessagePropertyFilter.DefaultBodySize
  fullName: System.Messaging.MessagePropertyFilter.DefaultBodySize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Messaging.MessagePropertyFilter.DefaultExtensionSize
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: DefaultExtensionSize
  nameWithType: MessagePropertyFilter.DefaultExtensionSize
  fullName: System.Messaging.MessagePropertyFilter.DefaultExtensionSize
- uid: System.Messaging.MessagePropertyFilter.DefaultLabelSize
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: DefaultLabelSize
  nameWithType: MessagePropertyFilter.DefaultLabelSize
  fullName: System.Messaging.MessagePropertyFilter.DefaultLabelSize
- uid: System.Messaging.MessagePropertyFilter.DestinationQueue
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: DestinationQueue
  nameWithType: MessagePropertyFilter.DestinationQueue
  fullName: System.Messaging.MessagePropertyFilter.DestinationQueue
- uid: System.Messaging.MessagePropertyFilter.DestinationSymmetricKey
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: DestinationSymmetricKey
  nameWithType: MessagePropertyFilter.DestinationSymmetricKey
  fullName: System.Messaging.MessagePropertyFilter.DestinationSymmetricKey
- uid: System.Messaging.MessagePropertyFilter.DigitalSignature
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: DigitalSignature
  nameWithType: MessagePropertyFilter.DigitalSignature
  fullName: System.Messaging.MessagePropertyFilter.DigitalSignature
- uid: System.Messaging.MessagePropertyFilter.EncryptionAlgorithm
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: EncryptionAlgorithm
  nameWithType: MessagePropertyFilter.EncryptionAlgorithm
  fullName: System.Messaging.MessagePropertyFilter.EncryptionAlgorithm
- uid: System.Messaging.MessagePropertyFilter.Extension
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Extension
  nameWithType: MessagePropertyFilter.Extension
  fullName: System.Messaging.MessagePropertyFilter.Extension
- uid: System.Messaging.MessagePropertyFilter.HashAlgorithm
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: HashAlgorithm
  nameWithType: MessagePropertyFilter.HashAlgorithm
  fullName: System.Messaging.MessagePropertyFilter.HashAlgorithm
- uid: System.Messaging.MessagePropertyFilter.Id
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Id
  nameWithType: MessagePropertyFilter.Id
  fullName: System.Messaging.MessagePropertyFilter.Id
- uid: System.Messaging.MessagePropertyFilter.IsFirstInTransaction
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: IsFirstInTransaction
  nameWithType: MessagePropertyFilter.IsFirstInTransaction
  fullName: System.Messaging.MessagePropertyFilter.IsFirstInTransaction
- uid: System.Messaging.MessagePropertyFilter.IsLastInTransaction
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: IsLastInTransaction
  nameWithType: MessagePropertyFilter.IsLastInTransaction
  fullName: System.Messaging.MessagePropertyFilter.IsLastInTransaction
- uid: System.Messaging.MessagePropertyFilter.Label
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Label
  nameWithType: MessagePropertyFilter.Label
  fullName: System.Messaging.MessagePropertyFilter.Label
- uid: System.Messaging.MessagePropertyFilter.LookupId
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: LookupId
  nameWithType: MessagePropertyFilter.LookupId
  fullName: System.Messaging.MessagePropertyFilter.LookupId
- uid: System.Messaging.MessagePropertyFilter.MessageType
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: MessageType
  nameWithType: MessagePropertyFilter.MessageType
  fullName: System.Messaging.MessagePropertyFilter.MessageType
- uid: System.Messaging.MessagePropertyFilter.Priority
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Priority
  nameWithType: MessagePropertyFilter.Priority
  fullName: System.Messaging.MessagePropertyFilter.Priority
- uid: System.Messaging.MessagePropertyFilter.Recoverable
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Recoverable
  nameWithType: MessagePropertyFilter.Recoverable
  fullName: System.Messaging.MessagePropertyFilter.Recoverable
- uid: System.Messaging.MessagePropertyFilter.ResponseQueue
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: ResponseQueue
  nameWithType: MessagePropertyFilter.ResponseQueue
  fullName: System.Messaging.MessagePropertyFilter.ResponseQueue
- uid: System.Messaging.MessagePropertyFilter.SenderCertificate
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: SenderCertificate
  nameWithType: MessagePropertyFilter.SenderCertificate
  fullName: System.Messaging.MessagePropertyFilter.SenderCertificate
- uid: System.Messaging.MessagePropertyFilter.SenderId
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: SenderId
  nameWithType: MessagePropertyFilter.SenderId
  fullName: System.Messaging.MessagePropertyFilter.SenderId
- uid: System.Messaging.MessagePropertyFilter.SenderVersion
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: SenderVersion
  nameWithType: MessagePropertyFilter.SenderVersion
  fullName: System.Messaging.MessagePropertyFilter.SenderVersion
- uid: System.Messaging.MessagePropertyFilter.SentTime
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: SentTime
  nameWithType: MessagePropertyFilter.SentTime
  fullName: System.Messaging.MessagePropertyFilter.SentTime
- uid: System.Messaging.MessagePropertyFilter.SetAll
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: SetAll()
  nameWithType: MessagePropertyFilter.SetAll()
  fullName: System.Messaging.MessagePropertyFilter.SetAll()
- uid: System.Messaging.MessagePropertyFilter.SetDefaults
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: SetDefaults()
  nameWithType: MessagePropertyFilter.SetDefaults()
  fullName: System.Messaging.MessagePropertyFilter.SetDefaults()
- uid: System.Messaging.MessagePropertyFilter.SourceMachine
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: SourceMachine
  nameWithType: MessagePropertyFilter.SourceMachine
  fullName: System.Messaging.MessagePropertyFilter.SourceMachine
- uid: System.Messaging.MessagePropertyFilter.TimeToBeReceived
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: TimeToBeReceived
  nameWithType: MessagePropertyFilter.TimeToBeReceived
  fullName: System.Messaging.MessagePropertyFilter.TimeToBeReceived
- uid: System.Messaging.MessagePropertyFilter.TimeToReachQueue
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: TimeToReachQueue
  nameWithType: MessagePropertyFilter.TimeToReachQueue
  fullName: System.Messaging.MessagePropertyFilter.TimeToReachQueue
- uid: System.Messaging.MessagePropertyFilter.TransactionId
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: TransactionId
  nameWithType: MessagePropertyFilter.TransactionId
  fullName: System.Messaging.MessagePropertyFilter.TransactionId
- uid: System.Messaging.MessagePropertyFilter.TransactionStatusQueue
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: TransactionStatusQueue
  nameWithType: MessagePropertyFilter.TransactionStatusQueue
  fullName: System.Messaging.MessagePropertyFilter.TransactionStatusQueue
- uid: System.Messaging.MessagePropertyFilter.UseAuthentication
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: UseAuthentication
  nameWithType: MessagePropertyFilter.UseAuthentication
  fullName: System.Messaging.MessagePropertyFilter.UseAuthentication
- uid: System.Messaging.MessagePropertyFilter.UseDeadLetterQueue
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: UseDeadLetterQueue
  nameWithType: MessagePropertyFilter.UseDeadLetterQueue
  fullName: System.Messaging.MessagePropertyFilter.UseDeadLetterQueue
- uid: System.Messaging.MessagePropertyFilter.UseEncryption
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: UseEncryption
  nameWithType: MessagePropertyFilter.UseEncryption
  fullName: System.Messaging.MessagePropertyFilter.UseEncryption
- uid: System.Messaging.MessagePropertyFilter.UseJournalQueue
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: UseJournalQueue
  nameWithType: MessagePropertyFilter.UseJournalQueue
  fullName: System.Messaging.MessagePropertyFilter.UseJournalQueue
- uid: System.Messaging.MessagePropertyFilter.UseTracing
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: UseTracing
  nameWithType: MessagePropertyFilter.UseTracing
  fullName: System.Messaging.MessagePropertyFilter.UseTracing
- uid: System.Messaging.MessagePropertyFilter.#ctor*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: MessagePropertyFilter
  nameWithType: MessagePropertyFilter.MessagePropertyFilter
- uid: System.Messaging.MessagePropertyFilter.AcknowledgeType*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: AcknowledgeType
  nameWithType: MessagePropertyFilter.AcknowledgeType
- uid: System.Messaging.MessagePropertyFilter.Acknowledgment*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Acknowledgment
  nameWithType: MessagePropertyFilter.Acknowledgment
- uid: System.Messaging.MessagePropertyFilter.AdministrationQueue*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: AdministrationQueue
  nameWithType: MessagePropertyFilter.AdministrationQueue
- uid: System.Messaging.MessagePropertyFilter.AppSpecific*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: AppSpecific
  nameWithType: MessagePropertyFilter.AppSpecific
- uid: System.Messaging.MessagePropertyFilter.ArrivedTime*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: ArrivedTime
  nameWithType: MessagePropertyFilter.ArrivedTime
- uid: System.Messaging.MessagePropertyFilter.AttachSenderId*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: AttachSenderId
  nameWithType: MessagePropertyFilter.AttachSenderId
- uid: System.Messaging.MessagePropertyFilter.Authenticated*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Authenticated
  nameWithType: MessagePropertyFilter.Authenticated
- uid: System.Messaging.MessagePropertyFilter.AuthenticationProviderName*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: AuthenticationProviderName
  nameWithType: MessagePropertyFilter.AuthenticationProviderName
- uid: System.Messaging.MessagePropertyFilter.AuthenticationProviderType*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: AuthenticationProviderType
  nameWithType: MessagePropertyFilter.AuthenticationProviderType
- uid: System.Messaging.MessagePropertyFilter.Body*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Body
  nameWithType: MessagePropertyFilter.Body
- uid: System.Messaging.MessagePropertyFilter.ClearAll*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: ClearAll
  nameWithType: MessagePropertyFilter.ClearAll
- uid: System.Messaging.MessagePropertyFilter.Clone*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Clone
  nameWithType: MessagePropertyFilter.Clone
- uid: System.Messaging.MessagePropertyFilter.ConnectorType*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: ConnectorType
  nameWithType: MessagePropertyFilter.ConnectorType
- uid: System.Messaging.MessagePropertyFilter.CorrelationId*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: CorrelationId
  nameWithType: MessagePropertyFilter.CorrelationId
- uid: System.Messaging.MessagePropertyFilter.DefaultBodySize*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: DefaultBodySize
  nameWithType: MessagePropertyFilter.DefaultBodySize
- uid: System.Messaging.MessagePropertyFilter.DefaultExtensionSize*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: DefaultExtensionSize
  nameWithType: MessagePropertyFilter.DefaultExtensionSize
- uid: System.Messaging.MessagePropertyFilter.DefaultLabelSize*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: DefaultLabelSize
  nameWithType: MessagePropertyFilter.DefaultLabelSize
- uid: System.Messaging.MessagePropertyFilter.DestinationQueue*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: DestinationQueue
  nameWithType: MessagePropertyFilter.DestinationQueue
- uid: System.Messaging.MessagePropertyFilter.DestinationSymmetricKey*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: DestinationSymmetricKey
  nameWithType: MessagePropertyFilter.DestinationSymmetricKey
- uid: System.Messaging.MessagePropertyFilter.DigitalSignature*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: DigitalSignature
  nameWithType: MessagePropertyFilter.DigitalSignature
- uid: System.Messaging.MessagePropertyFilter.EncryptionAlgorithm*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: EncryptionAlgorithm
  nameWithType: MessagePropertyFilter.EncryptionAlgorithm
- uid: System.Messaging.MessagePropertyFilter.Extension*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Extension
  nameWithType: MessagePropertyFilter.Extension
- uid: System.Messaging.MessagePropertyFilter.HashAlgorithm*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: HashAlgorithm
  nameWithType: MessagePropertyFilter.HashAlgorithm
- uid: System.Messaging.MessagePropertyFilter.Id*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Id
  nameWithType: MessagePropertyFilter.Id
- uid: System.Messaging.MessagePropertyFilter.IsFirstInTransaction*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: IsFirstInTransaction
  nameWithType: MessagePropertyFilter.IsFirstInTransaction
- uid: System.Messaging.MessagePropertyFilter.IsLastInTransaction*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: IsLastInTransaction
  nameWithType: MessagePropertyFilter.IsLastInTransaction
- uid: System.Messaging.MessagePropertyFilter.Label*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Label
  nameWithType: MessagePropertyFilter.Label
- uid: System.Messaging.MessagePropertyFilter.LookupId*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: LookupId
  nameWithType: MessagePropertyFilter.LookupId
- uid: System.Messaging.MessagePropertyFilter.MessageType*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: MessageType
  nameWithType: MessagePropertyFilter.MessageType
- uid: System.Messaging.MessagePropertyFilter.Priority*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Priority
  nameWithType: MessagePropertyFilter.Priority
- uid: System.Messaging.MessagePropertyFilter.Recoverable*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: Recoverable
  nameWithType: MessagePropertyFilter.Recoverable
- uid: System.Messaging.MessagePropertyFilter.ResponseQueue*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: ResponseQueue
  nameWithType: MessagePropertyFilter.ResponseQueue
- uid: System.Messaging.MessagePropertyFilter.SenderCertificate*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: SenderCertificate
  nameWithType: MessagePropertyFilter.SenderCertificate
- uid: System.Messaging.MessagePropertyFilter.SenderId*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: SenderId
  nameWithType: MessagePropertyFilter.SenderId
- uid: System.Messaging.MessagePropertyFilter.SenderVersion*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: SenderVersion
  nameWithType: MessagePropertyFilter.SenderVersion
- uid: System.Messaging.MessagePropertyFilter.SentTime*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: SentTime
  nameWithType: MessagePropertyFilter.SentTime
- uid: System.Messaging.MessagePropertyFilter.SetAll*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: SetAll
  nameWithType: MessagePropertyFilter.SetAll
- uid: System.Messaging.MessagePropertyFilter.SetDefaults*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: SetDefaults
  nameWithType: MessagePropertyFilter.SetDefaults
- uid: System.Messaging.MessagePropertyFilter.SourceMachine*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: SourceMachine
  nameWithType: MessagePropertyFilter.SourceMachine
- uid: System.Messaging.MessagePropertyFilter.TimeToBeReceived*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: TimeToBeReceived
  nameWithType: MessagePropertyFilter.TimeToBeReceived
- uid: System.Messaging.MessagePropertyFilter.TimeToReachQueue*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: TimeToReachQueue
  nameWithType: MessagePropertyFilter.TimeToReachQueue
- uid: System.Messaging.MessagePropertyFilter.TransactionId*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: TransactionId
  nameWithType: MessagePropertyFilter.TransactionId
- uid: System.Messaging.MessagePropertyFilter.TransactionStatusQueue*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: TransactionStatusQueue
  nameWithType: MessagePropertyFilter.TransactionStatusQueue
- uid: System.Messaging.MessagePropertyFilter.UseAuthentication*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: UseAuthentication
  nameWithType: MessagePropertyFilter.UseAuthentication
- uid: System.Messaging.MessagePropertyFilter.UseDeadLetterQueue*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: UseDeadLetterQueue
  nameWithType: MessagePropertyFilter.UseDeadLetterQueue
- uid: System.Messaging.MessagePropertyFilter.UseEncryption*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: UseEncryption
  nameWithType: MessagePropertyFilter.UseEncryption
- uid: System.Messaging.MessagePropertyFilter.UseJournalQueue*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: UseJournalQueue
  nameWithType: MessagePropertyFilter.UseJournalQueue
- uid: System.Messaging.MessagePropertyFilter.UseTracing*
  parent: System.Messaging.MessagePropertyFilter
  isExternal: false
  name: UseTracing
  nameWithType: MessagePropertyFilter.UseTracing
