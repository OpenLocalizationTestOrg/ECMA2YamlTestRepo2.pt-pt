### YamlMime:ManagedReference
items:
- uid: System.Activities.DynamicUpdate.UpdateMapMetadata
  id: UpdateMapMetadata
  children:
  - System.Activities.DynamicUpdate.UpdateMapMetadata.AddMatch(System.Activities.Activity,System.Activities.Activity)
  - System.Activities.DynamicUpdate.UpdateMapMetadata.AddMatch(System.Activities.Variable,System.Activities.Variable)
  - System.Activities.DynamicUpdate.UpdateMapMetadata.AllowUpdateInsideThisActivity
  - System.Activities.DynamicUpdate.UpdateMapMetadata.DisallowUpdateInsideThisActivity(System.String)
  - System.Activities.DynamicUpdate.UpdateMapMetadata.GetMatch(System.Activities.Activity)
  - System.Activities.DynamicUpdate.UpdateMapMetadata.GetMatch(System.Activities.Variable)
  - System.Activities.DynamicUpdate.UpdateMapMetadata.IsReferenceToImportedChild(System.Activities.Activity)
  langs:
  - csharp
  name: UpdateMapMetadata
  nameWithType: UpdateMapMetadata
  fullName: System.Activities.DynamicUpdate.UpdateMapMetadata
  type: Class
  summary: "Specifies options for update map metadata."
  remarks: "This class supports the versioning and dynamic update functionality of Windows Workflow Foundation. [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)] workflow versioning, workflow identity, and dynamic update, see the following topics.       [Workflow Versioning](http://go.microsoft.com/fwlink/?LinkID=271561)    Describes the workflow versioning functionality introduced in [!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)].       [Dynamic Update](http://go.microsoft.com/fwlink/?LinkId=271563)    Describes how to update the workflow definition of a persisted workflow instance by using dynamic update.       [Using WorkflowApplication Identity and Versioning](http://go.microsoft.com/fwlink/?LinkId=271564)    Describes how to use <xref:System.Activities.WorkflowIdentity> to host multiple versions of a workflow side-by-side.       [Side by Side Versioning in WorkflowServiceHost](http://go.microsoft.com/fwlink/?LinkId=271565)    Describes how to host multiple versions of a workflow on a single endpoint.       [How to: Host Multiple Versions of a Workflow Side-by-Side](http://go.microsoft.com/fwlink/?LinkId=271566)    This step in the [Getting Started Tutorial](http://go.microsoft.com/fwlink/?LinkId=271570) demonstrates updating a workflow definition, and hosting workflows using both the old and new definition at the same time.       [How to: Update the Definition of a Running Workflow Instance](http://go.microsoft.com/fwlink/?LinkId=271567)    This step in the [Getting Started Tutorial](http://go.microsoft.com/fwlink/?LinkId=271570) demonstrates updating persisted workflow instances to use a new workflow definition."
  syntax:
    content: public class UpdateMapMetadata
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.DynamicUpdate.UpdateMapMetadata.AddMatch(System.Activities.Activity,System.Activities.Activity)
  id: AddMatch(System.Activities.Activity,System.Activities.Activity)
  parent: System.Activities.DynamicUpdate.UpdateMapMetadata
  langs:
  - csharp
  name: AddMatch(Activity,Activity)
  nameWithType: UpdateMapMetadata.AddMatch(Activity,Activity)
  fullName: System.Activities.DynamicUpdate.UpdateMapMetadata.AddMatch(Activity,Activity)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.DynamicUpdate
  summary: "Adds a match for <xref href=&quot;System.Activities.DynamicUpdate.UpdateMapMetadata&quot;></xref> with specified child."
  syntax:
    content: public void AddMatch (System.Activities.Activity updatedChild, System.Activities.Activity originalChild);
    parameters:
    - id: updatedChild
      type: System.Activities.Activity
      description: "The updated child."
    - id: originalChild
      type: System.Activities.Activity
      description: "The original child."
  overload: System.Activities.DynamicUpdate.UpdateMapMetadata.AddMatch*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.DynamicUpdate.UpdateMapMetadata.AddMatch(System.Activities.Variable,System.Activities.Variable)
  id: AddMatch(System.Activities.Variable,System.Activities.Variable)
  parent: System.Activities.DynamicUpdate.UpdateMapMetadata
  langs:
  - csharp
  name: AddMatch(Variable,Variable)
  nameWithType: UpdateMapMetadata.AddMatch(Variable,Variable)
  fullName: System.Activities.DynamicUpdate.UpdateMapMetadata.AddMatch(Variable,Variable)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.DynamicUpdate
  summary: "Adds a match for <xref href=&quot;System.Activities.DynamicUpdate.UpdateMapMetadata&quot;></xref> with specified variable."
  syntax:
    content: public void AddMatch (System.Activities.Variable updatedVariable, System.Activities.Variable originalVariable);
    parameters:
    - id: updatedVariable
      type: System.Activities.Variable
      description: "The updated variable."
    - id: originalVariable
      type: System.Activities.Variable
      description: "The original variable."
  overload: System.Activities.DynamicUpdate.UpdateMapMetadata.AddMatch*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.DynamicUpdate.UpdateMapMetadata.AllowUpdateInsideThisActivity
  id: AllowUpdateInsideThisActivity
  parent: System.Activities.DynamicUpdate.UpdateMapMetadata
  langs:
  - csharp
  name: AllowUpdateInsideThisActivity()
  nameWithType: UpdateMapMetadata.AllowUpdateInsideThisActivity()
  fullName: System.Activities.DynamicUpdate.UpdateMapMetadata.AllowUpdateInsideThisActivity()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.DynamicUpdate
  summary: "Allows updating of map metadata within the current activity."
  syntax:
    content: public void AllowUpdateInsideThisActivity ();
    parameters: []
  overload: System.Activities.DynamicUpdate.UpdateMapMetadata.AllowUpdateInsideThisActivity*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.DynamicUpdate.UpdateMapMetadata.DisallowUpdateInsideThisActivity(System.String)
  id: DisallowUpdateInsideThisActivity(System.String)
  parent: System.Activities.DynamicUpdate.UpdateMapMetadata
  langs:
  - csharp
  name: DisallowUpdateInsideThisActivity(String)
  nameWithType: UpdateMapMetadata.DisallowUpdateInsideThisActivity(String)
  fullName: System.Activities.DynamicUpdate.UpdateMapMetadata.DisallowUpdateInsideThisActivity(String)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.DynamicUpdate
  summary: "Disallows updating of map metadata within the current activity."
  syntax:
    content: public void DisallowUpdateInsideThisActivity (string reason);
    parameters:
    - id: reason
      type: System.String
      description: "The reason of disallowing."
  overload: System.Activities.DynamicUpdate.UpdateMapMetadata.DisallowUpdateInsideThisActivity*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.DynamicUpdate.UpdateMapMetadata.GetMatch(System.Activities.Activity)
  id: GetMatch(System.Activities.Activity)
  parent: System.Activities.DynamicUpdate.UpdateMapMetadata
  langs:
  - csharp
  name: GetMatch(Activity)
  nameWithType: UpdateMapMetadata.GetMatch(Activity)
  fullName: System.Activities.DynamicUpdate.UpdateMapMetadata.GetMatch(Activity)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.DynamicUpdate
  summary: "Gets a match for <xref href=&quot;System.Activities.DynamicUpdate.UpdateMapMetadata&quot;></xref> with specified child."
  syntax:
    content: public System.Activities.Activity GetMatch (System.Activities.Activity updatedChild);
    parameters:
    - id: updatedChild
      type: System.Activities.Activity
      description: "The updated child."
    return:
      type: System.Activities.Activity
      description: "The match for <xref href=&quot;System.Activities.DynamicUpdate.UpdateMapMetadata&quot;></xref>."
  overload: System.Activities.DynamicUpdate.UpdateMapMetadata.GetMatch*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.DynamicUpdate.UpdateMapMetadata.GetMatch(System.Activities.Variable)
  id: GetMatch(System.Activities.Variable)
  parent: System.Activities.DynamicUpdate.UpdateMapMetadata
  langs:
  - csharp
  name: GetMatch(Variable)
  nameWithType: UpdateMapMetadata.GetMatch(Variable)
  fullName: System.Activities.DynamicUpdate.UpdateMapMetadata.GetMatch(Variable)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.DynamicUpdate
  summary: "Gets a match for <xref href=&quot;System.Activities.DynamicUpdate.UpdateMapMetadata&quot;></xref> with specified variable."
  syntax:
    content: public System.Activities.Variable GetMatch (System.Activities.Variable updatedVariable);
    parameters:
    - id: updatedVariable
      type: System.Activities.Variable
      description: "The updated variable."
    return:
      type: System.Activities.Variable
      description: "The match for <xref href=&quot;System.Activities.DynamicUpdate.UpdateMapMetadata&quot;></xref>."
  overload: System.Activities.DynamicUpdate.UpdateMapMetadata.GetMatch*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.DynamicUpdate.UpdateMapMetadata.IsReferenceToImportedChild(System.Activities.Activity)
  id: IsReferenceToImportedChild(System.Activities.Activity)
  parent: System.Activities.DynamicUpdate.UpdateMapMetadata
  langs:
  - csharp
  name: IsReferenceToImportedChild(Activity)
  nameWithType: UpdateMapMetadata.IsReferenceToImportedChild(Activity)
  fullName: System.Activities.DynamicUpdate.UpdateMapMetadata.IsReferenceToImportedChild(Activity)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.DynamicUpdate
  summary: "Indicates whether the <xref href=&quot;System.Activities.DynamicUpdate.UpdateMapMetadata&quot;></xref> is a reference to imported child."
  syntax:
    content: public bool IsReferenceToImportedChild (System.Activities.Activity childActivity);
    parameters:
    - id: childActivity
      type: System.Activities.Activity
      description: "The child activity."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref> if the <xref href=&quot;System.Activities.DynamicUpdate.UpdateMapMetadata&quot;></xref> is a reference to imported child; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Activities.DynamicUpdate.UpdateMapMetadata.IsReferenceToImportedChild*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Activities.DynamicUpdate.UpdateMapMetadata.AddMatch(System.Activities.Activity,System.Activities.Activity)
  parent: System.Activities.DynamicUpdate.UpdateMapMetadata
  isExternal: false
  name: AddMatch(Activity,Activity)
  nameWithType: UpdateMapMetadata.AddMatch(Activity,Activity)
  fullName: System.Activities.DynamicUpdate.UpdateMapMetadata.AddMatch(Activity,Activity)
- uid: System.Activities.Activity
  parent: System.Activities
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Activities.Activity
- uid: System.Activities.DynamicUpdate.UpdateMapMetadata.AddMatch(System.Activities.Variable,System.Activities.Variable)
  parent: System.Activities.DynamicUpdate.UpdateMapMetadata
  isExternal: false
  name: AddMatch(Variable,Variable)
  nameWithType: UpdateMapMetadata.AddMatch(Variable,Variable)
  fullName: System.Activities.DynamicUpdate.UpdateMapMetadata.AddMatch(Variable,Variable)
- uid: System.Activities.Variable
  parent: System.Activities
  isExternal: false
  name: Variable
  nameWithType: Variable
  fullName: System.Activities.Variable
- uid: System.Activities.DynamicUpdate.UpdateMapMetadata.AllowUpdateInsideThisActivity
  parent: System.Activities.DynamicUpdate.UpdateMapMetadata
  isExternal: false
  name: AllowUpdateInsideThisActivity()
  nameWithType: UpdateMapMetadata.AllowUpdateInsideThisActivity()
  fullName: System.Activities.DynamicUpdate.UpdateMapMetadata.AllowUpdateInsideThisActivity()
- uid: System.Activities.DynamicUpdate.UpdateMapMetadata.DisallowUpdateInsideThisActivity(System.String)
  parent: System.Activities.DynamicUpdate.UpdateMapMetadata
  isExternal: false
  name: DisallowUpdateInsideThisActivity(String)
  nameWithType: UpdateMapMetadata.DisallowUpdateInsideThisActivity(String)
  fullName: System.Activities.DynamicUpdate.UpdateMapMetadata.DisallowUpdateInsideThisActivity(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.DynamicUpdate.UpdateMapMetadata.GetMatch(System.Activities.Activity)
  parent: System.Activities.DynamicUpdate.UpdateMapMetadata
  isExternal: false
  name: GetMatch(Activity)
  nameWithType: UpdateMapMetadata.GetMatch(Activity)
  fullName: System.Activities.DynamicUpdate.UpdateMapMetadata.GetMatch(Activity)
- uid: System.Activities.DynamicUpdate.UpdateMapMetadata.GetMatch(System.Activities.Variable)
  parent: System.Activities.DynamicUpdate.UpdateMapMetadata
  isExternal: false
  name: GetMatch(Variable)
  nameWithType: UpdateMapMetadata.GetMatch(Variable)
  fullName: System.Activities.DynamicUpdate.UpdateMapMetadata.GetMatch(Variable)
- uid: System.Activities.DynamicUpdate.UpdateMapMetadata.IsReferenceToImportedChild(System.Activities.Activity)
  parent: System.Activities.DynamicUpdate.UpdateMapMetadata
  isExternal: false
  name: IsReferenceToImportedChild(Activity)
  nameWithType: UpdateMapMetadata.IsReferenceToImportedChild(Activity)
  fullName: System.Activities.DynamicUpdate.UpdateMapMetadata.IsReferenceToImportedChild(Activity)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.DynamicUpdate.UpdateMapMetadata.AddMatch*
  parent: System.Activities.DynamicUpdate.UpdateMapMetadata
  isExternal: false
  name: AddMatch
  nameWithType: UpdateMapMetadata.AddMatch
- uid: System.Activities.DynamicUpdate.UpdateMapMetadata.AllowUpdateInsideThisActivity*
  parent: System.Activities.DynamicUpdate.UpdateMapMetadata
  isExternal: false
  name: AllowUpdateInsideThisActivity
  nameWithType: UpdateMapMetadata.AllowUpdateInsideThisActivity
- uid: System.Activities.DynamicUpdate.UpdateMapMetadata.DisallowUpdateInsideThisActivity*
  parent: System.Activities.DynamicUpdate.UpdateMapMetadata
  isExternal: false
  name: DisallowUpdateInsideThisActivity
  nameWithType: UpdateMapMetadata.DisallowUpdateInsideThisActivity
- uid: System.Activities.DynamicUpdate.UpdateMapMetadata.GetMatch*
  parent: System.Activities.DynamicUpdate.UpdateMapMetadata
  isExternal: false
  name: GetMatch
  nameWithType: UpdateMapMetadata.GetMatch
- uid: System.Activities.DynamicUpdate.UpdateMapMetadata.IsReferenceToImportedChild*
  parent: System.Activities.DynamicUpdate.UpdateMapMetadata
  isExternal: false
  name: IsReferenceToImportedChild
  nameWithType: UpdateMapMetadata.IsReferenceToImportedChild
