### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.SoapMessage
  id: SoapMessage
  children:
  - System.Web.Services.Protocols.SoapMessage.Action
  - System.Web.Services.Protocols.SoapMessage.ContentEncoding
  - System.Web.Services.Protocols.SoapMessage.ContentType
  - System.Web.Services.Protocols.SoapMessage.EnsureInStage
  - System.Web.Services.Protocols.SoapMessage.EnsureOutStage
  - System.Web.Services.Protocols.SoapMessage.EnsureStage(System.Web.Services.Protocols.SoapMessageStage)
  - System.Web.Services.Protocols.SoapMessage.Exception
  - System.Web.Services.Protocols.SoapMessage.GetInParameterValue(System.Int32)
  - System.Web.Services.Protocols.SoapMessage.GetOutParameterValue(System.Int32)
  - System.Web.Services.Protocols.SoapMessage.GetReturnValue
  - System.Web.Services.Protocols.SoapMessage.Headers
  - System.Web.Services.Protocols.SoapMessage.MethodInfo
  - System.Web.Services.Protocols.SoapMessage.OneWay
  - System.Web.Services.Protocols.SoapMessage.SoapVersion
  - System.Web.Services.Protocols.SoapMessage.Stage
  - System.Web.Services.Protocols.SoapMessage.Stream
  - System.Web.Services.Protocols.SoapMessage.Url
  langs:
  - csharp
  name: SoapMessage
  nameWithType: SoapMessage
  fullName: System.Web.Services.Protocols.SoapMessage
  type: Class
  summary: "Represents the data in a SOAP request or SOAP response at a specific <xref href=&quot;System.Web.Services.Protocols.SoapMessageStage&quot;></xref>."
  remarks: "The primary use of the SoapMessage class is for SOAP extensions, representing the data in a SOAP request or SOAP response. When the <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> method is called, a <xref:System.Web.Services.Protocols.SoapExtension> receives a SoapMessage at each <xref:System.Web.Services.Protocols.SoapMessageStage>. It is up to the particular SOAP extension to choose how to process the SoapMessage. Common SOAP extensions include encryption and compression.       SOAP extensions can be applied to either or both an XML Web service method created using ASP.NET or an XML Web service client. When a SOAP extension is applied to an XML Web service method, the <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> method receives an instance of <xref:System.Web.Services.Protocols.SoapServerMessage>, which derives from SoapMessage. Likewise, when a SOAP extension is applied to an XML Web service client, <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> receives an instance of <xref:System.Web.Services.Protocols.SoapClientMessage>."
  example:
  - >-
    [!code-cs[SoapMessage#1](~/add/codesnippet/csharp/t-system.web.services.pr_2_1.cs)]
     [!code-cpp[SoapMessage#1](~/add/codesnippet/cpp/t-system.web.services.pr_2_1.cpp)]
     [!code-vb[SoapMessage#1](~/add/codesnippet/visualbasic/t-system.web.services.pr_2_1.vb)]
  syntax:
    content: public abstract class SoapMessage
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapMessage.Action
  id: Action
  parent: System.Web.Services.Protocols.SoapMessage
  langs:
  - csharp
  name: Action
  nameWithType: SoapMessage.Action
  fullName: System.Web.Services.Protocols.SoapMessage.Action
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "When overridden in a derived class, gets the SOAPAction HTTP request header field for the SOAP request or SOAP response."
  remarks: "The Action property can be accessed during any <xref:System.Web.Services.Protocols.SoapMessageStage>."
  example:
  - >-
    [!code-cs[SoapMessage#2](~/add/codesnippet/csharp/p-system.web.services.pr_22_1.cs)]
     [!code-cpp[SoapMessage#2](~/add/codesnippet/cpp/p-system.web.services.pr_22_1.cpp)]
     [!code-vb[SoapMessage#2](~/add/codesnippet/visualbasic/p-system.web.services.pr_22_1.vb)]
  syntax:
    content: public abstract string Action { get; }
    return:
      type: System.String
      description: "The SOAPAction HTTP request header field for the SOAP request or SOAP response."
  overload: System.Web.Services.Protocols.SoapMessage.Action*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapMessage.ContentEncoding
  id: ContentEncoding
  parent: System.Web.Services.Protocols.SoapMessage
  langs:
  - csharp
  name: ContentEncoding
  nameWithType: SoapMessage.ContentEncoding
  fullName: System.Web.Services.Protocols.SoapMessage.ContentEncoding
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Gets or sets the contents of the <xref uid=&quot;langword_csharp_Content-Encoding&quot; name=&quot;Content-Encoding&quot; href=&quot;&quot;></xref> HTTP header."
  remarks: "A SOAP extension can set the ContentEncoding property to provide supplementary information about the encoding of a SOAP message without changing the media type as expressed in the `Content-Type` HTTP header."
  syntax:
    content: public string ContentEncoding { get; set; }
    return:
      type: System.String
      description: "The contents of the <xref uid=&quot;langword_csharp_Content-Encoding&quot; name=&quot;Content-Encoding&quot; href=&quot;&quot;></xref> HTTP header."
  overload: System.Web.Services.Protocols.SoapMessage.ContentEncoding*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The current <xref href=&quot;System.Web.Services.Protocols.SoapMessageStage&quot;></xref> is <xref href=&quot;System.Web.Services.Protocols.SoapMessageStage&quot;></xref> or <xref href=&quot;System.Web.Services.Protocols.SoapMessageStage&quot;></xref> stages."
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapMessage.ContentType
  id: ContentType
  parent: System.Web.Services.Protocols.SoapMessage
  langs:
  - csharp
  name: ContentType
  nameWithType: SoapMessage.ContentType
  fullName: System.Web.Services.Protocols.SoapMessage.ContentType
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Gets or sets the HTTP <xref uid=&quot;langword_csharp_Content-Type&quot; name=&quot;Content-Type&quot; href=&quot;&quot;></xref> of the SOAP request or SOAP response."
  remarks: "The ContentType property can only be accessed in the <xref:System.Web.Services.Protocols.SoapMessageStage> and <xref:System.Web.Services.Protocols.SoapMessageStage> stages; otherwise, an <xref:System.InvalidOperationException> is thrown.       Use the <xref:System.Web.Services.Protocols.SoapMessage.ContentEncoding%2A> property, instead of the ContentType property to provide supplementary information about the encoding of a SOAP message."
  example:
  - >-
    [!code-cs[SoapMessage#3](~/add/codesnippet/csharp/p-system.web.services.pr_60_1.cs)]
     [!code-cpp[SoapMessage#3](~/add/codesnippet/cpp/p-system.web.services.pr_60_1.cpp)]
     [!code-vb[SoapMessage#3](~/add/codesnippet/visualbasic/p-system.web.services.pr_60_1.vb)]
  syntax:
    content: public string ContentType { get; set; }
    return:
      type: System.String
      description: "The HTTP <xref uid=&quot;langword_csharp_Content-Type&quot; name=&quot;Content-Type&quot; href=&quot;&quot;></xref> of the SOAP request or SOAP response. The default is &quot;text/xml&quot;."
  overload: System.Web.Services.Protocols.SoapMessage.ContentType*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "ContentType is accessed <xref href=&quot;System.Web.Services.Protocols.SoapMessageStage&quot;></xref> or <xref href=&quot;System.Web.Services.Protocols.SoapMessageStage&quot;></xref> stages."
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapMessage.EnsureInStage
  id: EnsureInStage
  parent: System.Web.Services.Protocols.SoapMessage
  langs:
  - csharp
  name: EnsureInStage()
  nameWithType: SoapMessage.EnsureInStage()
  fullName: System.Web.Services.Protocols.SoapMessage.EnsureInStage()
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "When overridden in a derived class, asserts that the current <xref href=&quot;System.Web.Services.Protocols.SoapMessageStage&quot;></xref> is a stage where in parameters are available."
  remarks: "The asserted stage is different for XML Web service clients and XML Web service methods. An XML Web service method&quot;s in parameters are available after the SOAP request is deserialized in the <xref:System.Web.Services.Protocols.SoapMessageStage> stage. For an XML Web service client, the in parameters are available prior to the SOAP request serialization process in the <xref:System.Web.Services.Protocols.SoapMessageStage> stage.       EnsureInStage can be called during any <xref:System.Web.Services.Protocols.SoapMessageStage>, however an <xref:System.InvalidOperationException> is thrown when in parameters are not available."
  syntax:
    content: protected abstract void EnsureInStage ();
    parameters: []
  overload: System.Web.Services.Protocols.SoapMessage.EnsureInStage*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "In parameters are not available."
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapMessage.EnsureOutStage
  id: EnsureOutStage
  parent: System.Web.Services.Protocols.SoapMessage
  langs:
  - csharp
  name: EnsureOutStage()
  nameWithType: SoapMessage.EnsureOutStage()
  fullName: System.Web.Services.Protocols.SoapMessage.EnsureOutStage()
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "When overridden in a derived class, asserts that the current <xref href=&quot;System.Web.Services.Protocols.SoapMessageStage&quot;></xref> stage is a stage where out parameters are available."
  remarks: "The asserted stage is different for XML Web service clients and XML Web service methods. An XML Web service method&quot;s out parameters are available prior to the SOAP response serialization process in the <xref:System.Web.Services.Protocols.SoapMessageStage> stage. In an XML Web service client, the out parameters are available after the SOAP response deserialization process in the <xref:System.Web.Services.Protocols.SoapMessageStage> stage.       EnsureOutStage can be called during any <xref:System.Web.Services.Protocols.SoapMessageStage>, however an <xref:System.InvalidOperationException> is thrown when out parameters are not available."
  syntax:
    content: protected abstract void EnsureOutStage ();
    parameters: []
  overload: System.Web.Services.Protocols.SoapMessage.EnsureOutStage*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Out parameters are not available."
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapMessage.EnsureStage(System.Web.Services.Protocols.SoapMessageStage)
  id: EnsureStage(System.Web.Services.Protocols.SoapMessageStage)
  parent: System.Web.Services.Protocols.SoapMessage
  langs:
  - csharp
  name: EnsureStage(SoapMessageStage)
  nameWithType: SoapMessage.EnsureStage(SoapMessageStage)
  fullName: System.Web.Services.Protocols.SoapMessage.EnsureStage(SoapMessageStage)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Ensures that the <xref href=&quot;System.Web.Services.Protocols.SoapMessageStage&quot;></xref> of the call to the XML Web service method is the stage or stages passed in. If the current processing stage is not one of the stages passed in, an exception is thrown."
  remarks: "Multiple stages can be asserted by performing a bitwise OR operation on multiple instances of the <xref:System.Web.Services.Protocols.SoapMessageStage> class.       EnsureStage can be called during any <xref:System.Web.Services.Protocols.SoapMessageStage>."
  example:
  - "The following example asserts that the current <xref:System.Web.Services.Protocols.SoapMessageStage> is either <xref:System.Web.Services.Protocols.SoapMessageStage> or <xref:System.Web.Services.Protocols.SoapMessageStage>; if it is not, an exception is thrown.  \n  \n [!code-cpp[Classic SoapMessage.EnsureStage Example#1](~/add/codesnippet/cpp/8a23e765-c3f0-4605-99e0-_1.cpp)]\n [!code-vb[Classic SoapMessage.EnsureStage Example#1](~/add/codesnippet/visualbasic/8a23e765-c3f0-4605-99e0-_1.vb)]\n [!code-cs[Classic SoapMessage.EnsureStage Example#1](~/add/codesnippet/csharp/8a23e765-c3f0-4605-99e0-_1.cs)]"
  syntax:
    content: protected void EnsureStage (System.Web.Services.Protocols.SoapMessageStage stage);
    parameters:
    - id: stage
      type: System.Web.Services.Protocols.SoapMessageStage
      description: "The <xref href=&quot;System.Web.Services.Protocols.SoapMessageStage&quot;></xref> asserted."
  overload: System.Web.Services.Protocols.SoapMessage.EnsureStage*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The current <xref href=&quot;System.Web.Services.Protocols.SoapMessageStage&quot;></xref> is not the asserted stage or stages."
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapMessage.Exception
  id: Exception
  parent: System.Web.Services.Protocols.SoapMessage
  langs:
  - csharp
  name: Exception
  nameWithType: SoapMessage.Exception
  fullName: System.Web.Services.Protocols.SoapMessage.Exception
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Gets the <xref href=&quot;System.Web.Services.Protocols.SoapException&quot;></xref> from the call to the XML Web service method."
  remarks: "The Exception property can be accessed during any <xref:System.Web.Services.Protocols.SoapMessageStage>."
  example:
  - '[!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]'
  syntax:
    content: public System.Web.Services.Protocols.SoapException Exception { get; set; }
    return:
      type: System.Web.Services.Protocols.SoapException
      description: "The <xref href=&quot;System.Web.Services.Protocols.SoapException&quot;></xref> that occurred in the call to the XML Web service method. <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if no <xref href=&quot;System.Web.Services.Protocols.SoapException&quot;></xref> has occurred during the call to the Web Sevice method."
  overload: System.Web.Services.Protocols.SoapMessage.Exception*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapMessage.GetInParameterValue(System.Int32)
  id: GetInParameterValue(System.Int32)
  parent: System.Web.Services.Protocols.SoapMessage
  langs:
  - csharp
  name: GetInParameterValue(Int32)
  nameWithType: SoapMessage.GetInParameterValue(Int32)
  fullName: System.Web.Services.Protocols.SoapMessage.GetInParameterValue(Int32)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Gets the parameter passed into the XML Web service method at the specified index."
  remarks: "The GetInParameterValue property is only accessible when in parameters are available. ASP.NET throws <xref:System.InvalidOperationException> when accessing the GetInParameterValue property if in parameters are not available.       In a <xref:System.Web.Services.Protocols.SoapClientMessage> the in parameters are available in the <xref:System.Web.Services.Protocols.SoapMessageStage><xref:System.Web.Services.Protocols.SoapMessageStage>. In a <xref:System.Web.Services.Protocols.SoapServerMessage> the in parameters are available in the <xref:System.Web.Services.Protocols.SoapMessageStage><xref:System.Web.Services.Protocols.SoapMessageStage>."
  example:
  - >-
    [!code-cs[SoapMessage#6](~/add/codesnippet/csharp/m-system.web.services.pr_7_1.cs)]
     [!code-cpp[SoapMessage#6](~/add/codesnippet/cpp/m-system.web.services.pr_7_1.cpp)]
     [!code-vb[SoapMessage#6](~/add/codesnippet/visualbasic/m-system.web.services.pr_7_1.vb)]
  syntax:
    content: public object GetInParameterValue (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based index of the parameter in the array of parameters."
    return:
      type: System.Object
      description: "An <xref:System.Object> representing the parameter at the specified index."
  overload: System.Web.Services.Protocols.SoapMessage.GetInParameterValue*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "The <code>index</code> parameter is less than 0 or greater than the length of the parameters array."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Accessing this property when in parameters are not available. For details see the Remarks section."
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapMessage.GetOutParameterValue(System.Int32)
  id: GetOutParameterValue(System.Int32)
  parent: System.Web.Services.Protocols.SoapMessage
  langs:
  - csharp
  name: GetOutParameterValue(Int32)
  nameWithType: SoapMessage.GetOutParameterValue(Int32)
  fullName: System.Web.Services.Protocols.SoapMessage.GetOutParameterValue(Int32)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Gets the out parameter passed into the XML Web service method at the specified index."
  remarks: "If out parameters are not available, ASP.NET throws an <xref:System.InvalidOperationException> when accessing the GetOutParameterValue property.       In a <xref:System.Web.Services.Protocols.SoapClientMessage> the out parameters are available in the <xref:System.Web.Services.Protocols.SoapMessageStage><xref:System.Web.Services.Protocols.SoapMessageStage>. In a <xref:System.Web.Services.Protocols.SoapServerMessage> the out parameters are available in the <xref:System.Web.Services.Protocols.SoapMessageStage> of the <xref:System.Web.Services.Protocols.SoapMessageStage>."
  example:
  - >-
    [!code-cs[SoapMessage#8](~/add/codesnippet/csharp/m-system.web.services.pr_1_1.cs)]
     [!code-cpp[SoapMessage#8](~/add/codesnippet/cpp/m-system.web.services.pr_1_1.cpp)]
     [!code-vb[SoapMessage#8](~/add/codesnippet/visualbasic/m-system.web.services.pr_1_1.vb)]
  syntax:
    content: public object GetOutParameterValue (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based index of the parameter in the array of parameters."
    return:
      type: System.Object
      description: "An <xref:System.Object> representing the parameter at the specified index."
  overload: System.Web.Services.Protocols.SoapMessage.GetOutParameterValue*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "The <code>index</code> parameter is greater than the length of the parameters array."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Accessing this property when out parameters are not available. For details see the Remarks section."
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapMessage.GetReturnValue
  id: GetReturnValue
  parent: System.Web.Services.Protocols.SoapMessage
  langs:
  - csharp
  name: GetReturnValue()
  nameWithType: SoapMessage.GetReturnValue()
  fullName: System.Web.Services.Protocols.SoapMessage.GetReturnValue()
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Gets the return value of an XML Web service method."
  remarks: "If a return value is not available, ASP.NET throws <xref:System.InvalidOperationException> when accessing the GetReturnValue property.       In a <xref:System.Web.Services.Protocols.SoapClientMessage> the return value is available when the <xref:System.Web.Services.Protocols.SoapMessageStage> value is <xref:System.Web.Services.Protocols.SoapMessageStage>. In a <xref:System.Web.Services.Protocols.SoapServerMessage> the return value is available when <xref:System.Web.Services.Protocols.SoapMessageStage> value is <xref:System.Web.Services.Protocols.SoapMessageStage>."
  example:
  - >-
    [!code-cs[SoapMessage#9](~/add/codesnippet/csharp/m-system.web.services.pr_4_1.cs)]
     [!code-cpp[SoapMessage#9](~/add/codesnippet/cpp/m-system.web.services.pr_4_1.cpp)]
     [!code-vb[SoapMessage#9](~/add/codesnippet/visualbasic/m-system.web.services.pr_4_1.vb)]
  syntax:
    content: public object GetReturnValue ();
    parameters: []
    return:
      type: System.Object
      description: "An <xref:System.Object> representing the return value of the XML Web service method."
  overload: System.Web.Services.Protocols.SoapMessage.GetReturnValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The XML Web service method does not have a return value.       OR       The return value is not available. For details see the Remarks section"
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapMessage.Headers
  id: Headers
  parent: System.Web.Services.Protocols.SoapMessage
  langs:
  - csharp
  name: Headers
  nameWithType: SoapMessage.Headers
  fullName: System.Web.Services.Protocols.SoapMessage.Headers
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "A collection of the SOAP headers applied to the current SOAP request or SOAP response."
  remarks: "SOAP headers are an optional portion of a SOAP request or SOAP response. For more details on using SOAP headers in XML Web services created using ASP.NET and their clients, see the <xref:System.Web.Services.Protocols.SoapHeader> class.       Although the Headers property can be accessed at any stage, it is only populated with the SOAP header information in the <xref:System.Web.Services.Protocols.SoapMessageStage> and <xref:System.Web.Services.Protocols.SoapMessageStage> stages."
  syntax:
    content: public System.Web.Services.Protocols.SoapHeaderCollection Headers { get; }
    return:
      type: System.Web.Services.Protocols.SoapHeaderCollection
      description: "A <xref href=&quot;System.Web.Services.Protocols.SoapHeaderCollection&quot;></xref> of the SOAP headers applied to the current SOAP request or SOAP response. <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, if there are no SOAP headers."
  overload: System.Web.Services.Protocols.SoapMessage.Headers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapMessage.MethodInfo
  id: MethodInfo
  parent: System.Web.Services.Protocols.SoapMessage
  langs:
  - csharp
  name: MethodInfo
  nameWithType: SoapMessage.MethodInfo
  fullName: System.Web.Services.Protocols.SoapMessage.MethodInfo
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "When overridden in a derived class, gets a representation of the method prototype for the XML Web service method for which the SOAP request is intended."
  remarks: "Although MethodInfo can be accessed during any <xref:System.Web.Services.Protocols.SoapMessageStage>, it only has data during <xref:System.Web.Services.Protocols.SoapMessageStage> and <xref:System.Web.Services.Protocols.SoapMessageStage>."
  example:
  - >-
    [!code-cs[SoapMessage#7](~/add/codesnippet/csharp/p-system.web.services.pr_10_1.cs)]
     [!code-cpp[SoapMessage#7](~/add/codesnippet/cpp/p-system.web.services.pr_10_1.cpp)]
     [!code-vb[SoapMessage#7](~/add/codesnippet/visualbasic/p-system.web.services.pr_10_1.vb)]
  syntax:
    content: public abstract System.Web.Services.Protocols.LogicalMethodInfo MethodInfo { get; }
    return:
      type: System.Web.Services.Protocols.LogicalMethodInfo
      description: "A <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;></xref> representing the XML Web service method for which the SOAP request is intended."
  overload: System.Web.Services.Protocols.SoapMessage.MethodInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapMessage.OneWay
  id: OneWay
  parent: System.Web.Services.Protocols.SoapMessage
  langs:
  - csharp
  name: OneWay
  nameWithType: SoapMessage.OneWay
  fullName: System.Web.Services.Protocols.SoapMessage.OneWay
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Gets a value indicating the &lt;xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A?displayProperty=fullName&gt; property of either the <xref href=&quot;System.Web.Services.Protocols.SoapDocumentMethodAttribute&quot;></xref> or the <xref href=&quot;System.Web.Services.Protocols.SoapRpcMethodAttribute&quot;></xref> attribute applied to the XML Web service method."
  remarks: "See the <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A?displayProperty=fullName> property of <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> or <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> for details about one-way XML Web service methods.       The OneWay property is accessible in all stages of <xref:System.Web.Services.Protocols.SoapMessageStage>."
  example:
  - >-
    [!code-cs[SoapMessage#4](~/add/codesnippet/csharp/p-system.web.services.pr_12_1.cs)]
     [!code-cpp[SoapMessage#4](~/add/codesnippet/cpp/p-system.web.services.pr_12_1.cpp)]
     [!code-vb[SoapMessage#4](~/add/codesnippet/visualbasic/p-system.web.services.pr_12_1.vb)]
  syntax:
    content: public abstract bool OneWay { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay*> property of the <xref href=&quot;System.Web.Services.Protocols.SoapDocumentMethodAttribute&quot;></xref> or <xref href=&quot;System.Web.Services.Protocols.SoapRpcMethodAttribute&quot;></xref> applied to the XML Web service method is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Services.Protocols.SoapMessage.OneWay*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapMessage.SoapVersion
  id: SoapVersion
  parent: System.Web.Services.Protocols.SoapMessage
  langs:
  - csharp
  name: SoapVersion
  nameWithType: SoapMessage.SoapVersion
  fullName: System.Web.Services.Protocols.SoapMessage.SoapVersion
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Gets the version of the SOAP protocol used to communicate with the XML Web service."
  remarks: "For a <xref:System.Web.Services.Protocols.SoapServerMessage>, the <xref:System.Web.Services.Protocols.SoapServerMessage.SoapVersion%2A> property is guaranteed to be valid after the <xref:System.Web.Services.Protocols.SoapMessageStage> stage. In the <xref:System.Web.Services.Protocols.SoapMessageStage> stage the property is available, however the SOAP message has not been completely processed and SOAP extensions that may alter the contents of the SOAP message have not run."
  syntax:
    content: public virtual System.Web.Services.Protocols.SoapProtocolVersion SoapVersion { get; }
    return:
      type: System.Web.Services.Protocols.SoapProtocolVersion
      description: "One of the <xref href=&quot;System.Web.Services.Protocols.SoapProtocolVersion&quot;></xref> values. The default is <xref href=&quot;System.Web.Services.Protocols.SoapProtocolVersion&quot;></xref>."
  overload: System.Web.Services.Protocols.SoapMessage.SoapVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapMessage.Stage
  id: Stage
  parent: System.Web.Services.Protocols.SoapMessage
  langs:
  - csharp
  name: Stage
  nameWithType: SoapMessage.Stage
  fullName: System.Web.Services.Protocols.SoapMessage.Stage
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Gets the <xref href=&quot;System.Web.Services.Protocols.SoapMessageStage&quot;></xref> of the <xref href=&quot;System.Web.Services.Protocols.SoapMessage&quot;></xref>."
  remarks: "The Stage property can be accessed at any <xref:System.Web.Services.Protocols.SoapMessageStage>."
  example:
  - "The following code example demonstrates how to determine the <xref:System.Web.Services.Protocols.SoapMessageStage> within the <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A?displayProperty=fullName> method.  \n  \n [!code-cpp[Classic SoapExtension.ProcessMessage Example#1](~/add/codesnippet/cpp/p-system.web.services.pr_0_1.cpp)]\n [!code-cs[Classic SoapExtension.ProcessMessage Example#1](~/add/codesnippet/csharp/p-system.web.services.pr_0_1.cs)]\n [!code-vb[Classic SoapExtension.ProcessMessage Example#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_0_1.vb)]"
  syntax:
    content: public System.Web.Services.Protocols.SoapMessageStage Stage { get; }
    return:
      type: System.Web.Services.Protocols.SoapMessageStage
      description: "The <xref href=&quot;System.Web.Services.Protocols.SoapMessageStage&quot;></xref> of the <xref href=&quot;System.Web.Services.Protocols.SoapMessage&quot;></xref>."
  overload: System.Web.Services.Protocols.SoapMessage.Stage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapMessage.Stream
  id: Stream
  parent: System.Web.Services.Protocols.SoapMessage
  langs:
  - csharp
  name: Stream
  nameWithType: SoapMessage.Stream
  fullName: System.Web.Services.Protocols.SoapMessage.Stream
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Gets the data representing the SOAP request or SOAP response in the form of a <xref:System.IO.Stream>."
  remarks: "SOAP extensions that inspect the data representing a SOAP request or SOAP response, such as a logging SOAP extension, can use the `Stream` property to view the data at each <xref:System.Web.Services.Protocols.SoapMessageStage>.       SOAP extensions that modify the data representing a SOAP request or SOAP response, such as encryption or compression SOAP extensions, should do so with the <xref:System.IO.Stream> passed into the <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> method of <xref:System.Web.Services.Protocols.SoapExtension>. The Stream property of <xref:System.Web.Services.Protocols.SoapMessage> passed into <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> is read-only.       For more information on modifying the data representing a SOAP request or SOAP response, see <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A>."
  example:
  - >-
    [!code-cpp[SoapMessage_Headers#2](~/add/codesnippet/cpp/p-system.web.services.pr_67_1.cpp)]
     [!code-vb[SoapMessage_Headers#2](~/add/codesnippet/visualbasic/p-system.web.services.pr_67_1.vb)]
     [!code-cs[SoapMessage_Headers#2](~/add/codesnippet/csharp/p-system.web.services.pr_67_1.cs)]
  syntax:
    content: public System.IO.Stream Stream { get; }
    return:
      type: System.IO.Stream
      description: "A read-only instance of the <xref:System.IO.Stream> class."
  overload: System.Web.Services.Protocols.SoapMessage.Stream*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapMessage.Url
  id: Url
  parent: System.Web.Services.Protocols.SoapMessage
  langs:
  - csharp
  name: Url
  nameWithType: SoapMessage.Url
  fullName: System.Web.Services.Protocols.SoapMessage.Url
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "When overridden in a derived class, gets the base URL of the XML Web service."
  remarks: "The Url property can be accessed during any <xref:System.Web.Services.Protocols.SoapMessageStage>."
  example:
  - >-
    [!code-cs[SoapMessage#5](~/add/codesnippet/csharp/p-system.web.services.pr_40_1.cs)]
     [!code-cpp[SoapMessage#5](~/add/codesnippet/cpp/p-system.web.services.pr_40_1.cpp)]
     [!code-vb[SoapMessage#5](~/add/codesnippet/visualbasic/p-system.web.services.pr_40_1.vb)]
  syntax:
    content: public abstract string Url { get; }
    return:
      type: System.String
      description: "The base URL of the XML Web service."
  overload: System.Web.Services.Protocols.SoapMessage.Url*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Web.Services.Protocols.SoapMessage.Action
  parent: System.Web.Services.Protocols.SoapMessage
  isExternal: false
  name: Action
  nameWithType: SoapMessage.Action
  fullName: System.Web.Services.Protocols.SoapMessage.Action
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Services.Protocols.SoapMessage.ContentEncoding
  parent: System.Web.Services.Protocols.SoapMessage
  isExternal: false
  name: ContentEncoding
  nameWithType: SoapMessage.ContentEncoding
  fullName: System.Web.Services.Protocols.SoapMessage.ContentEncoding
- uid: System.Web.Services.Protocols.SoapMessage.ContentType
  parent: System.Web.Services.Protocols.SoapMessage
  isExternal: false
  name: ContentType
  nameWithType: SoapMessage.ContentType
  fullName: System.Web.Services.Protocols.SoapMessage.ContentType
- uid: System.Web.Services.Protocols.SoapMessage.EnsureInStage
  parent: System.Web.Services.Protocols.SoapMessage
  isExternal: false
  name: EnsureInStage()
  nameWithType: SoapMessage.EnsureInStage()
  fullName: System.Web.Services.Protocols.SoapMessage.EnsureInStage()
- uid: System.Web.Services.Protocols.SoapMessage.EnsureOutStage
  parent: System.Web.Services.Protocols.SoapMessage
  isExternal: false
  name: EnsureOutStage()
  nameWithType: SoapMessage.EnsureOutStage()
  fullName: System.Web.Services.Protocols.SoapMessage.EnsureOutStage()
- uid: System.Web.Services.Protocols.SoapMessage.EnsureStage(System.Web.Services.Protocols.SoapMessageStage)
  parent: System.Web.Services.Protocols.SoapMessage
  isExternal: false
  name: EnsureStage(SoapMessageStage)
  nameWithType: SoapMessage.EnsureStage(SoapMessageStage)
  fullName: System.Web.Services.Protocols.SoapMessage.EnsureStage(SoapMessageStage)
- uid: System.Web.Services.Protocols.SoapMessageStage
  parent: System.Web.Services.Protocols
  isExternal: false
  name: SoapMessageStage
  nameWithType: SoapMessageStage
  fullName: System.Web.Services.Protocols.SoapMessageStage
- uid: System.Web.Services.Protocols.SoapMessage.Exception
  parent: System.Web.Services.Protocols.SoapMessage
  isExternal: false
  name: Exception
  nameWithType: SoapMessage.Exception
  fullName: System.Web.Services.Protocols.SoapMessage.Exception
- uid: System.Web.Services.Protocols.SoapException
  parent: System.Web.Services.Protocols
  isExternal: false
  name: SoapException
  nameWithType: SoapException
  fullName: System.Web.Services.Protocols.SoapException
- uid: System.Web.Services.Protocols.SoapMessage.GetInParameterValue(System.Int32)
  parent: System.Web.Services.Protocols.SoapMessage
  isExternal: false
  name: GetInParameterValue(Int32)
  nameWithType: SoapMessage.GetInParameterValue(Int32)
  fullName: System.Web.Services.Protocols.SoapMessage.GetInParameterValue(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Services.Protocols.SoapMessage.GetOutParameterValue(System.Int32)
  parent: System.Web.Services.Protocols.SoapMessage
  isExternal: false
  name: GetOutParameterValue(Int32)
  nameWithType: SoapMessage.GetOutParameterValue(Int32)
  fullName: System.Web.Services.Protocols.SoapMessage.GetOutParameterValue(Int32)
- uid: System.Web.Services.Protocols.SoapMessage.GetReturnValue
  parent: System.Web.Services.Protocols.SoapMessage
  isExternal: false
  name: GetReturnValue()
  nameWithType: SoapMessage.GetReturnValue()
  fullName: System.Web.Services.Protocols.SoapMessage.GetReturnValue()
- uid: System.Web.Services.Protocols.SoapMessage.Headers
  parent: System.Web.Services.Protocols.SoapMessage
  isExternal: false
  name: Headers
  nameWithType: SoapMessage.Headers
  fullName: System.Web.Services.Protocols.SoapMessage.Headers
- uid: System.Web.Services.Protocols.SoapHeaderCollection
  parent: System.Web.Services.Protocols
  isExternal: false
  name: SoapHeaderCollection
  nameWithType: SoapHeaderCollection
  fullName: System.Web.Services.Protocols.SoapHeaderCollection
- uid: System.Web.Services.Protocols.SoapMessage.MethodInfo
  parent: System.Web.Services.Protocols.SoapMessage
  isExternal: false
  name: MethodInfo
  nameWithType: SoapMessage.MethodInfo
  fullName: System.Web.Services.Protocols.SoapMessage.MethodInfo
- uid: System.Web.Services.Protocols.LogicalMethodInfo
  parent: System.Web.Services.Protocols
  isExternal: false
  name: LogicalMethodInfo
  nameWithType: LogicalMethodInfo
  fullName: System.Web.Services.Protocols.LogicalMethodInfo
- uid: System.Web.Services.Protocols.SoapMessage.OneWay
  parent: System.Web.Services.Protocols.SoapMessage
  isExternal: false
  name: OneWay
  nameWithType: SoapMessage.OneWay
  fullName: System.Web.Services.Protocols.SoapMessage.OneWay
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Services.Protocols.SoapMessage.SoapVersion
  parent: System.Web.Services.Protocols.SoapMessage
  isExternal: false
  name: SoapVersion
  nameWithType: SoapMessage.SoapVersion
  fullName: System.Web.Services.Protocols.SoapMessage.SoapVersion
- uid: System.Web.Services.Protocols.SoapProtocolVersion
  parent: System.Web.Services.Protocols
  isExternal: false
  name: SoapProtocolVersion
  nameWithType: SoapProtocolVersion
  fullName: System.Web.Services.Protocols.SoapProtocolVersion
- uid: System.Web.Services.Protocols.SoapMessage.Stage
  parent: System.Web.Services.Protocols.SoapMessage
  isExternal: false
  name: Stage
  nameWithType: SoapMessage.Stage
  fullName: System.Web.Services.Protocols.SoapMessage.Stage
- uid: System.Web.Services.Protocols.SoapMessage.Stream
  parent: System.Web.Services.Protocols.SoapMessage
  isExternal: false
  name: Stream
  nameWithType: SoapMessage.Stream
  fullName: System.Web.Services.Protocols.SoapMessage.Stream
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Web.Services.Protocols.SoapMessage.Url
  parent: System.Web.Services.Protocols.SoapMessage
  isExternal: false
  name: Url
  nameWithType: SoapMessage.Url
  fullName: System.Web.Services.Protocols.SoapMessage.Url
- uid: System.Web.Services.Protocols.SoapMessage.Action*
  parent: System.Web.Services.Protocols.SoapMessage
  isExternal: false
  name: Action
  nameWithType: SoapMessage.Action
- uid: System.Web.Services.Protocols.SoapMessage.ContentEncoding*
  parent: System.Web.Services.Protocols.SoapMessage
  isExternal: false
  name: ContentEncoding
  nameWithType: SoapMessage.ContentEncoding
- uid: System.Web.Services.Protocols.SoapMessage.ContentType*
  parent: System.Web.Services.Protocols.SoapMessage
  isExternal: false
  name: ContentType
  nameWithType: SoapMessage.ContentType
- uid: System.Web.Services.Protocols.SoapMessage.EnsureInStage*
  parent: System.Web.Services.Protocols.SoapMessage
  isExternal: false
  name: EnsureInStage
  nameWithType: SoapMessage.EnsureInStage
- uid: System.Web.Services.Protocols.SoapMessage.EnsureOutStage*
  parent: System.Web.Services.Protocols.SoapMessage
  isExternal: false
  name: EnsureOutStage
  nameWithType: SoapMessage.EnsureOutStage
- uid: System.Web.Services.Protocols.SoapMessage.EnsureStage*
  parent: System.Web.Services.Protocols.SoapMessage
  isExternal: false
  name: EnsureStage
  nameWithType: SoapMessage.EnsureStage
- uid: System.Web.Services.Protocols.SoapMessage.Exception*
  parent: System.Web.Services.Protocols.SoapMessage
  isExternal: false
  name: Exception
  nameWithType: SoapMessage.Exception
- uid: System.Web.Services.Protocols.SoapMessage.GetInParameterValue*
  parent: System.Web.Services.Protocols.SoapMessage
  isExternal: false
  name: GetInParameterValue
  nameWithType: SoapMessage.GetInParameterValue
- uid: System.Web.Services.Protocols.SoapMessage.GetOutParameterValue*
  parent: System.Web.Services.Protocols.SoapMessage
  isExternal: false
  name: GetOutParameterValue
  nameWithType: SoapMessage.GetOutParameterValue
- uid: System.Web.Services.Protocols.SoapMessage.GetReturnValue*
  parent: System.Web.Services.Protocols.SoapMessage
  isExternal: false
  name: GetReturnValue
  nameWithType: SoapMessage.GetReturnValue
- uid: System.Web.Services.Protocols.SoapMessage.Headers*
  parent: System.Web.Services.Protocols.SoapMessage
  isExternal: false
  name: Headers
  nameWithType: SoapMessage.Headers
- uid: System.Web.Services.Protocols.SoapMessage.MethodInfo*
  parent: System.Web.Services.Protocols.SoapMessage
  isExternal: false
  name: MethodInfo
  nameWithType: SoapMessage.MethodInfo
- uid: System.Web.Services.Protocols.SoapMessage.OneWay*
  parent: System.Web.Services.Protocols.SoapMessage
  isExternal: false
  name: OneWay
  nameWithType: SoapMessage.OneWay
- uid: System.Web.Services.Protocols.SoapMessage.SoapVersion*
  parent: System.Web.Services.Protocols.SoapMessage
  isExternal: false
  name: SoapVersion
  nameWithType: SoapMessage.SoapVersion
- uid: System.Web.Services.Protocols.SoapMessage.Stage*
  parent: System.Web.Services.Protocols.SoapMessage
  isExternal: false
  name: Stage
  nameWithType: SoapMessage.Stage
- uid: System.Web.Services.Protocols.SoapMessage.Stream*
  parent: System.Web.Services.Protocols.SoapMessage
  isExternal: false
  name: Stream
  nameWithType: SoapMessage.Stream
- uid: System.Web.Services.Protocols.SoapMessage.Url*
  parent: System.Web.Services.Protocols.SoapMessage
  isExternal: false
  name: Url
  nameWithType: SoapMessage.Url
