### YamlMime:ManagedReference
items:
- uid: System.Messaging.AccessControlEntry
  id: AccessControlEntry
  children:
  - System.Messaging.AccessControlEntry.#ctor
  - System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee)
  - System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.GenericAccessRights,System.Messaging.StandardAccessRights,System.Messaging.AccessControlEntryType)
  - System.Messaging.AccessControlEntry.CustomAccessRights
  - System.Messaging.AccessControlEntry.EntryType
  - System.Messaging.AccessControlEntry.GenericAccessRights
  - System.Messaging.AccessControlEntry.StandardAccessRights
  - System.Messaging.AccessControlEntry.Trustee
  langs:
  - csharp
  name: AccessControlEntry
  nameWithType: AccessControlEntry
  fullName: System.Messaging.AccessControlEntry
  type: Class
  summary: "Especifica os direitos de acesso para uma trustee (utilizador, grupo ou computador) para efetuar implementações específicas da aplicação de tarefas comuns."
  remarks: "Muitas aplicações tem operações semelhantes para o qual uma trustee pode ser atribuída direitos, por exemplo, ler, escrever e eliminar objetos. Quando atribui direitos para estas operações gerais, a aplicação interpreta-los de forma específica para essa aplicação. Por exemplo, a colocação de mensagens em fila interpreta a operação de leitura como receber ou leitura mensagens numa fila. A classe de AccessControlEntry fornece acesso a estes direitos comuns.       Ao trabalhar com as entradas de controlo de acesso, especifique uma trustee ao qual está a atribuir os direitos. Tem de definir, pelo menos, um do <xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A>, <xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A>, ou <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A>Propriedades para indicar que direitos para atribuir a entidade fidedigna.</xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> </xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A> </xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A> Pode definir o <xref:System.Messaging.AccessControlEntry.EntryType%2A>propriedade para especificar se os direitos que indica devem ser concedeu ou negou.</xref:System.Messaging.AccessControlEntry.EntryType%2A> O tipo de entrada predefinido é permitir que direitos."
  syntax:
    content: public class AccessControlEntry
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Messaging.AccessControlEntry.#ctor
  id: '#ctor'
  parent: System.Messaging.AccessControlEntry
  langs:
  - csharp
  name: AccessControlEntry()
  nameWithType: AccessControlEntry.AccessControlEntry()
  fullName: System.Messaging.AccessControlEntry.AccessControlEntry()
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Messaging.AccessControlEntry&quot;> </xref> classe que especifica não fidedigno nem é o conjunto de direitos para aplicar."
  remarks: "Definir o <xref:System.Messaging.AccessControlEntry.Trustee%2A>propriedade e pelo menos uma do <xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A>, <xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A>, ou <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A>propriedades antes de utilizar este <xref:System.Messaging.AccessControlEntry>instância ao definir direitos de acesso para uma trustee.</xref:System.Messaging.AccessControlEntry> </xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> </xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A> </xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A> </xref:System.Messaging.AccessControlEntry.Trustee%2A>       Opcionalmente, pode definir o <xref:System.Messaging.AccessControlEntry.EntryType%2A>propriedade, embora assume como `Allow` caso não pretenda fazê-lo.</xref:System.Messaging.AccessControlEntry.EntryType%2A>"
  syntax:
    content: public AccessControlEntry ();
    parameters: []
  overload: System.Messaging.AccessControlEntry.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee)
  id: '#ctor(System.Messaging.Trustee)'
  parent: System.Messaging.AccessControlEntry
  langs:
  - csharp
  name: AccessControlEntry(Trustee)
  nameWithType: AccessControlEntry.AccessControlEntry(Trustee)
  fullName: System.Messaging.AccessControlEntry.AccessControlEntry(Trustee)
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Messaging.AccessControlEntry&quot;> </xref> classe que especifica uma trustee que são concedeu ou negou direitos."
  remarks: "Definir o <xref:System.Messaging.AccessControlEntry.EntryType%2A>propriedade e pelo menos uma do <xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A>, <xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A>, ou <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A>propriedades antes de utilizar este <xref:System.Messaging.AccessControlEntry>instância ao definir direitos de acesso para uma trustee.</xref:System.Messaging.AccessControlEntry> </xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> </xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A> </xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A> </xref:System.Messaging.AccessControlEntry.EntryType%2A>"
  syntax:
    content: public AccessControlEntry (System.Messaging.Trustee trustee);
    parameters:
    - id: trustee
      type: System.Messaging.Trustee
      description: "A <xref href=&quot;System.Messaging.Trustee&quot;> </xref> que especifica um utilizador, grupo, computador, domínio ou alias."
  overload: System.Messaging.AccessControlEntry.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>trustee</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.GenericAccessRights,System.Messaging.StandardAccessRights,System.Messaging.AccessControlEntryType)
  id: '#ctor(System.Messaging.Trustee,System.Messaging.GenericAccessRights,System.Messaging.StandardAccessRights,System.Messaging.AccessControlEntryType)'
  parent: System.Messaging.AccessControlEntry
  langs:
  - csharp
  name: AccessControlEntry(Trustee,GenericAccessRights,StandardAccessRights,AccessControlEntryType)
  nameWithType: AccessControlEntry.AccessControlEntry(Trustee,GenericAccessRights,StandardAccessRights,AccessControlEntryType)
  fullName: System.Messaging.AccessControlEntry.AccessControlEntry(Trustee,GenericAccessRights,StandardAccessRights,AccessControlEntryType)
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Messaging.AccessControlEntry&quot;> </xref> classe que especifica uma trustee, os direitos para atribuir e se pretende conceder ou negar estes direitos."
  remarks: "Esta sobrecarga dos conjuntos de construtor de <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A>propriedade como uma combinação bit a bit do `genericAccessRights` e `standardAccessRights` parâmetros que especificou.</xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A>"
  syntax:
    content: public AccessControlEntry (System.Messaging.Trustee trustee, System.Messaging.GenericAccessRights genericAccessRights, System.Messaging.StandardAccessRights standardAccessRights, System.Messaging.AccessControlEntryType entryType);
    parameters:
    - id: trustee
      type: System.Messaging.Trustee
      description: "A <xref href=&quot;System.Messaging.Trustee&quot;> </xref> que especifica um utilizador, grupo, computador, domínio ou alias."
    - id: genericAccessRights
      type: System.Messaging.GenericAccessRights
      description: "Uma combinação bit a bit do <xref href=&quot;System.Messaging.GenericAccessRights&quot;> </xref> valores."
    - id: standardAccessRights
      type: System.Messaging.StandardAccessRights
      description: "Uma combinação bit a bit do <xref href=&quot;System.Messaging.StandardAccessRights&quot;> </xref> valores."
    - id: entryType
      type: System.Messaging.AccessControlEntryType
      description: "Um do <xref href=&quot;System.Messaging.AccessControlEntryType&quot;> </xref> valores, que especifica se pretende permitir, negar, definir ou revogar os direitos especificados."
  overload: System.Messaging.AccessControlEntry.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>trustee</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "O <code> genericAccessRights </code>, <code> standardAccessRights </code>, ou <code> entryType </code> parâmetros não são valores de enumeração válidos."
  platform:
  - net462
- uid: System.Messaging.AccessControlEntry.CustomAccessRights
  id: CustomAccessRights
  parent: System.Messaging.AccessControlEntry
  langs:
  - csharp
  name: CustomAccessRights
  nameWithType: AccessControlEntry.CustomAccessRights
  fullName: System.Messaging.AccessControlEntry.CustomAccessRights
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Obtém ou define direitos de acesso personalizado."
  syntax:
    content: protected int CustomAccessRights { get; set; }
    return:
      type: System.Int32
      description: "Direitos de acesso específicas da aplicação, normalmente, definidos como um bitflag."
  overload: System.Messaging.AccessControlEntry.CustomAccessRights*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.AccessControlEntry.EntryType
  id: EntryType
  parent: System.Messaging.AccessControlEntry
  langs:
  - csharp
  name: EntryType
  nameWithType: AccessControlEntry.EntryType
  fullName: System.Messaging.AccessControlEntry.EntryType
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Obtém ou define um valor que indica a forma como os direitos de acesso aplicam-se a entidade fidedigna."
  syntax:
    content: public System.Messaging.AccessControlEntryType EntryType { get; set; }
    return:
      type: System.Messaging.AccessControlEntryType
      description: "Um do <xref href=&quot;System.Messaging.AccessControlEntryType&quot;> </xref> valores, que especifica se pretende permitir, negar, definir ou revogar os direitos especificados. A predefinição é <xref uid=&quot;langword_csharp_Allow&quot; name=&quot;Allow&quot; href=&quot;&quot;> </xref>."
  overload: System.Messaging.AccessControlEntry.EntryType*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "O tipo de entrada não é um <xref href=&quot;System.Messaging.AccessControlEntryType&quot;> </xref> valor de enumeração."
  platform:
  - net462
- uid: System.Messaging.AccessControlEntry.GenericAccessRights
  id: GenericAccessRights
  parent: System.Messaging.AccessControlEntry
  langs:
  - csharp
  name: GenericAccessRights
  nameWithType: AccessControlEntry.GenericAccessRights
  fullName: System.Messaging.AccessControlEntry.GenericAccessRights
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Obtém ou define um conjunto comum de direitos de acesso que mapeiam para ambos os direitos de acesso padrão e específicos do objeto para ler, escrever e executar."
  remarks: "Objetos com capacidade de segurança utilizam os bits de ordem de alta quatro do formato de máscara de acesso Windows 2000 e do Windows NT para especificar os direitos de acesso genérico. Cada tipo de objeto com capacidade de segurança mapeia estes bits para um conjunto de respetivos direitos de acesso padrão e específicos do objeto. As aplicações que definem objetos com capacidade de segurança privados também podem utilizar os direitos de acesso genérico."
  syntax:
    content: public System.Messaging.GenericAccessRights GenericAccessRights { get; set; }
    return:
      type: System.Messaging.GenericAccessRights
      description: "Uma combinação bit a bit do <xref href=&quot;System.Messaging.GenericAccessRights&quot;> </xref> valores."
  overload: System.Messaging.AccessControlEntry.GenericAccessRights*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "O valor definido não é uma combinação válida de <xref href=&quot;System.Messaging.GenericAccessRights&quot;> </xref> bitflag membros."
  platform:
  - net462
- uid: System.Messaging.AccessControlEntry.StandardAccessRights
  id: StandardAccessRights
  parent: System.Messaging.AccessControlEntry
  langs:
  - csharp
  name: StandardAccessRights
  nameWithType: AccessControlEntry.StandardAccessRights
  fullName: System.Messaging.AccessControlEntry.StandardAccessRights
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Obtém ou define um conjunto padrão de direitos de acesso que correspondem às operações comuns a maioria dos tipos de objetos com capacidade de segurança."
  remarks: "O formato da máscara de acesso de Windows 2000 e do Windows NT inclui um conjunto de bits para os direitos de acesso padrão. Cada tipo de objeto com capacidade de segurança tem um conjunto de direitos de acesso que correspondem às operações específicas para esse tipo de objeto. Para além destes direitos de acesso de objeto específico, há um conjunto padrão de direitos de acesso que correspondem às operações comuns a maioria dos tipos de objetos com capacidade de segurança."
  syntax:
    content: public System.Messaging.StandardAccessRights StandardAccessRights { get; set; }
    return:
      type: System.Messaging.StandardAccessRights
      description: "Uma combinação bit a bit do <xref href=&quot;System.Messaging.StandardAccessRights&quot;> </xref> valores."
  overload: System.Messaging.AccessControlEntry.StandardAccessRights*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "O valor definido não é uma combinação válida de <xref href=&quot;System.Messaging.StandardAccessRights&quot;> </xref> bitflag membros."
  platform:
  - net462
- uid: System.Messaging.AccessControlEntry.Trustee
  id: Trustee
  parent: System.Messaging.AccessControlEntry
  langs:
  - csharp
  name: Trustee
  nameWithType: AccessControlEntry.Trustee
  fullName: System.Messaging.AccessControlEntry.Trustee
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Obtém ou define o utilizador, grupo, domínio ou alias para a qual está a atribuir direitos de acesso."
  remarks: "Os utilizadores e programas, como os serviços de Win32, utilizam contas de utilizador para iniciar sessão no computador local. As contas de grupo não pode ser utilizadas para iniciar sessão no computador, mas são úteis em <xref:System.Messaging.AccessControlEntry>direitos a um ou mais contas de utilizador de acesso de instâncias para permitir ou negar um conjunto de.</xref:System.Messaging.AccessControlEntry>"
  syntax:
    content: public System.Messaging.Trustee Trustee { get; set; }
    return:
      type: System.Messaging.Trustee
      description: "A <xref href=&quot;System.Messaging.Trustee&quot;> </xref> que especifica uma conta de utilizador, a conta de grupo ou o início de sessão ao qual um <xref href=&quot;System.Messaging.AccessControlEntry&quot;> </xref> aplica-se."
  overload: System.Messaging.AccessControlEntry.Trustee*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A propriedade Trustee é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.Messaging.AccessControlEntry.#ctor
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: AccessControlEntry()
  nameWithType: AccessControlEntry.AccessControlEntry()
  fullName: System.Messaging.AccessControlEntry.AccessControlEntry()
- uid: System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee)
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: AccessControlEntry(Trustee)
  nameWithType: AccessControlEntry.AccessControlEntry(Trustee)
  fullName: System.Messaging.AccessControlEntry.AccessControlEntry(Trustee)
- uid: System.Messaging.Trustee
  parent: System.Messaging
  isExternal: false
  name: Trustee
  nameWithType: Trustee
  fullName: System.Messaging.Trustee
- uid: System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.GenericAccessRights,System.Messaging.StandardAccessRights,System.Messaging.AccessControlEntryType)
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: AccessControlEntry(Trustee,GenericAccessRights,StandardAccessRights,AccessControlEntryType)
  nameWithType: AccessControlEntry.AccessControlEntry(Trustee,GenericAccessRights,StandardAccessRights,AccessControlEntryType)
  fullName: System.Messaging.AccessControlEntry.AccessControlEntry(Trustee,GenericAccessRights,StandardAccessRights,AccessControlEntryType)
- uid: System.Messaging.GenericAccessRights
  parent: System.Messaging
  isExternal: false
  name: GenericAccessRights
  nameWithType: GenericAccessRights
  fullName: System.Messaging.GenericAccessRights
- uid: System.Messaging.StandardAccessRights
  parent: System.Messaging
  isExternal: false
  name: StandardAccessRights
  nameWithType: StandardAccessRights
  fullName: System.Messaging.StandardAccessRights
- uid: System.Messaging.AccessControlEntryType
  parent: System.Messaging
  isExternal: false
  name: AccessControlEntryType
  nameWithType: AccessControlEntryType
  fullName: System.Messaging.AccessControlEntryType
- uid: System.Messaging.AccessControlEntry.CustomAccessRights
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: CustomAccessRights
  nameWithType: AccessControlEntry.CustomAccessRights
  fullName: System.Messaging.AccessControlEntry.CustomAccessRights
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Messaging.AccessControlEntry.EntryType
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: EntryType
  nameWithType: AccessControlEntry.EntryType
  fullName: System.Messaging.AccessControlEntry.EntryType
- uid: System.Messaging.AccessControlEntry.GenericAccessRights
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: GenericAccessRights
  nameWithType: AccessControlEntry.GenericAccessRights
  fullName: System.Messaging.AccessControlEntry.GenericAccessRights
- uid: System.Messaging.AccessControlEntry.StandardAccessRights
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: StandardAccessRights
  nameWithType: AccessControlEntry.StandardAccessRights
  fullName: System.Messaging.AccessControlEntry.StandardAccessRights
- uid: System.Messaging.AccessControlEntry.Trustee
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: Trustee
  nameWithType: AccessControlEntry.Trustee
  fullName: System.Messaging.AccessControlEntry.Trustee
- uid: System.Messaging.AccessControlEntry.#ctor*
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: AccessControlEntry
  nameWithType: AccessControlEntry.AccessControlEntry
- uid: System.Messaging.AccessControlEntry.CustomAccessRights*
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: CustomAccessRights
  nameWithType: AccessControlEntry.CustomAccessRights
- uid: System.Messaging.AccessControlEntry.EntryType*
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: EntryType
  nameWithType: AccessControlEntry.EntryType
- uid: System.Messaging.AccessControlEntry.GenericAccessRights*
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: GenericAccessRights
  nameWithType: AccessControlEntry.GenericAccessRights
- uid: System.Messaging.AccessControlEntry.StandardAccessRights*
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: StandardAccessRights
  nameWithType: AccessControlEntry.StandardAccessRights
- uid: System.Messaging.AccessControlEntry.Trustee*
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: Trustee
  nameWithType: AccessControlEntry.Trustee
