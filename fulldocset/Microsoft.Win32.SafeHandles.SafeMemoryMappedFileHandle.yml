### YamlMime:ManagedReference
items:
- uid: Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle
  id: SafeMemoryMappedFileHandle
  children:
  - Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle.ReleaseHandle
  langs:
  - csharp
  name: SafeMemoryMappedFileHandle
  nameWithType: SafeMemoryMappedFileHandle
  fullName: Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle
  type: Class
  summary: "Provides a safe handle that represents a memory-mapped file for sequential access."
  remarks: "Use the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle%2A?displayProperty=fullName> property to obtain the safe handle.      > [!IMPORTANT] >  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the “Using an Object that Implements IDisposable” section in the <xref:System.IDisposable> interface topic."
  syntax:
    content: >-
      [System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]

      public sealed class SafeMemoryMappedFileHandle : Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
  inheritance:
  - System.Runtime.InteropServices.SafeHandle
  - Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
  implements: []
  inheritedMembers:
  - Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid
  platform:
  - net462
- uid: Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle.ReleaseHandle
  id: ReleaseHandle
  parent: Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle
  langs:
  - csharp
  name: ReleaseHandle()
  nameWithType: SafeMemoryMappedFileHandle.ReleaseHandle()
  fullName: Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle.ReleaseHandle()
  type: Method
  assemblies:
  - System.Core
  namespace: Microsoft.Win32.SafeHandles
  syntax:
    content: protected override bool ReleaseHandle ();
    parameters: []
    return:
      type: System.Boolean
      description: "To be added."
  overload: Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle.ReleaseHandle*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
  isExternal: false
  name: Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
- uid: Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle.ReleaseHandle
  parent: Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle
  isExternal: false
  name: ReleaseHandle()
  nameWithType: SafeMemoryMappedFileHandle.ReleaseHandle()
  fullName: Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle.ReleaseHandle()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle.ReleaseHandle*
  parent: Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle
  isExternal: false
  name: ReleaseHandle
  nameWithType: SafeMemoryMappedFileHandle.ReleaseHandle
