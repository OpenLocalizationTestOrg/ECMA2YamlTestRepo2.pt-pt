### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.DataTemplateSelector
  id: DataTemplateSelector
  children:
  - System.Windows.Controls.DataTemplateSelector.#ctor
  - System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)
  langs:
  - csharp
  name: DataTemplateSelector
  nameWithType: DataTemplateSelector
  fullName: System.Windows.Controls.DataTemplateSelector
  type: Class
  summary: "Fornece uma forma para escolher um <xref href=&quot;System.Windows.DataTemplate&quot;> </xref> com base no objeto de dados e o elemento de dados vinculados."
  remarks: "Normalmente, cria um DataTemplateSelector quando tem mais do que um <xref:System.Windows.DataTemplate>para o mesmo tipo de objetos e de pretende fornecer a suas próprias lógica para escolher um <xref:System.Windows.DataTemplate>a aplicar com base nas propriedades de cada objeto de dados.</xref:System.Windows.DataTemplate> </xref:System.Windows.DataTemplate> Tenha em atenção que se tiver objetos de diferentes tipos, pode definir a <xref:System.Windows.DataTemplate.DataType%2A>propriedade <xref:System.Windows.DataTemplate>.</xref:System.Windows.DataTemplate> </xref:System.Windows.DataTemplate.DataType%2A> Se o fizer que é necessário para criar um DataTemplateSelector. Além disso, se tiver de objetos do mesmo tipo, mas com propriedades diferentes, pode também considerar a utilização de um <xref:System.Windows.DataTrigger>ou um conversor de dados.</xref:System.Windows.DataTrigger> Para obter mais informações, consulte [descrição geral de Templating dados](~/add/includes/ajax-current-ext-md.md).       Para criar um Seletor de modelo, crie uma classe que herda de DataTemplateSelector e ignorar o <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A>método.</xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> Quando a classe está definida, pode atribuir uma instância da classe para a propriedade de Seletor de modelo do seu elemento."
  example:
  - "In this example, the binding source is a list of `Task` objects. One of the properties of a `Task` object is `Priority`. There are two data templates defined, `myTaskTemplate` and `importantTaskTemplate`.  \n  \n To supply logic to choose which <xref:System.Windows.DataTemplate> to use based on the `Priority` value of the data object, create a subclass of DataTemplateSelector and override the <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> method. In the following example, the <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> method provides logic to return the appropriate template based on the value of the `Priority` property. The template to return is found in the resources of the enveloping <xref:System.Windows.Window> element.  \n  \n [!code-cs[DataTemplatingIntro_snip#DTSClass](~/add/codesnippet/csharp/DataTemplatingSample/TaskListDataTemplateSelector.cs#dtsclass)]\n [!code-vb[DataTemplatingIntro_snip#DTSClass](~/add/codesnippet/visualbasic/datatemplatingsample/tasklistdatatemplateselector.vb#dtsclass)]  \n  \n We can then declare the `TaskListDataTemplateSelector` as a resource:  \n  \n [!code-xml[DataTemplatingIntro_snip#R1](~/add/codesnippet/xaml/DataTemplatingSample/Window1.xaml#r1)]  \n[!code-xml[DataTemplatingIntro_snip#DTS](~/add/codesnippet/xaml/DataTemplatingSample/Window1.xaml#dts)]  \n[!code-xml[DataTemplatingIntro_snip#R2](~/add/codesnippet/xaml/DataTemplatingSample/Window1.xaml#r2)]  \n  \n To use the template selector resource, assign it to the <xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A> property of the <xref:System.Windows.Controls.ListBox>. The <xref:System.Windows.Controls.ListBox> calls the <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> method of the `TaskListDataTemplateSelector` for each of the items in the underlying collection. The call passes the data object as the item parameter. The <xref:System.Windows.DataTemplate> that is returned by the method is then applied to that data object.  \n  \n [!code-xml[DataTemplatingIntro_snip#ItemTemplateSelector](~/add/codesnippet/xaml/DataTemplatingSample/Window1.xaml#itemtemplateselector)]  \n  \n For the complete sample, see [Introduction to Data Templating Sample](http://go.microsoft.com/fwlink/?LinkID=160009)."
  syntax:
    content: public class DataTemplateSelector
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Controls.DataTemplateSelector.#ctor
  id: '#ctor'
  parent: System.Windows.Controls.DataTemplateSelector
  langs:
  - csharp
  name: DataTemplateSelector()
  nameWithType: DataTemplateSelector.DataTemplateSelector()
  fullName: System.Windows.Controls.DataTemplateSelector.DataTemplateSelector()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.Controls.DataTemplateSelector&quot;> </xref> classe."
  syntax:
    content: public DataTemplateSelector ();
    parameters: []
  overload: System.Windows.Controls.DataTemplateSelector.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)
  id: SelectTemplate(System.Object,System.Windows.DependencyObject)
  parent: System.Windows.Controls.DataTemplateSelector
  langs:
  - csharp
  name: SelectTemplate(Object,DependencyObject)
  nameWithType: DataTemplateSelector.SelectTemplate(Object,DependencyObject)
  fullName: System.Windows.Controls.DataTemplateSelector.SelectTemplate(Object,DependencyObject)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Quando substituí-lo de uma classe derivada, devolve uma <xref href=&quot;System.Windows.DataTemplate&quot;> </xref> com base na lógica personalizada."
  remarks: "Normalmente, utiliza um Seletor de modelo quando tem mais do que um modelo de dados definido para o mesmo tipo de objetos. Por exemplo, se a origem de enlace for lista uma lista de objetos do estudante e pretende aplicar um modelo específico para os estudantes part-time. Pode fazê-lo através da criação de uma classe que herda de <xref:System.Windows.Controls.DataTemplateSelector>e a substituir o método SelectTemplate.</xref:System.Windows.Controls.DataTemplateSelector> Quando a classe está definida, pode atribuir uma instância da classe para a propriedade de Seletor de modelo do seu elemento."
  example:
  - "In this example, the binding source is a list of `Task` objects. One of the properties of a `Task` object is `Priority`. There are two data templates defined, `myTaskTemplate` and `importantTaskTemplate`.  \n  \n To supply logic to choose which <xref:System.Windows.DataTemplate> to use based on the `Priority` value of the data object, create a subclass of <xref:System.Windows.Controls.DataTemplateSelector> and override the SelectTemplate method. In the following example, the SelectTemplate method provides logic to return the appropriate template based on the value of the `Priority` property. The template to return is found in the resources of the enveloping <xref:System.Windows.Window> element.  \n  \n [!code-cs[DataTemplatingIntro_snip#DTSClass](~/add/codesnippet/csharp/DataTemplatingSample/TaskListDataTemplateSelector.cs#dtsclass)]\n [!code-vb[DataTemplatingIntro_snip#DTSClass](~/add/codesnippet/visualbasic/datatemplatingsample/tasklistdatatemplateselector.vb#dtsclass)]  \n  \n We can then declare the `TaskListDataTemplateSelector` as a resource:  \n  \n [!code-xml[DataTemplatingIntro_snip#R1](~/add/codesnippet/xaml/DataTemplatingSample/Window1.xaml#r1)]  \n[!code-xml[DataTemplatingIntro_snip#DTS](~/add/codesnippet/xaml/DataTemplatingSample/Window1.xaml#dts)]  \n[!code-xml[DataTemplatingIntro_snip#R2](~/add/codesnippet/xaml/DataTemplatingSample/Window1.xaml#r2)]  \n  \n To use the template selector resource, assign it to the <xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A> property of the <xref:System.Windows.Controls.ListBox>. The <xref:System.Windows.Controls.ListBox> calls the SelectTemplate method of the `TaskListDataTemplateSelector` for each of the items in the underlying collection. The call passes the data object as the item parameter. The <xref:System.Windows.DataTemplate> that is returned by the method is then applied to that data object.  \n  \n [!code-xml[DataTemplatingIntro_snip#ItemTemplateSelector](~/add/codesnippet/xaml/DataTemplatingSample/Window1.xaml#itemtemplateselector)]  \n  \n For the complete sample, see [Introduction to Data Templating Sample](http://go.microsoft.com/fwlink/?LinkID=160009)."
  syntax:
    content: public virtual System.Windows.DataTemplate SelectTemplate (object item, System.Windows.DependencyObject container);
    parameters:
    - id: item
      type: System.Object
      description: "O objecto de dados para o qual selecionar o modelo."
    - id: container
      type: System.Windows.DependencyObject
      description: "O objeto vinculado a dados."
    return:
      type: System.Windows.DataTemplate
      description: "Returns a <xref href=&quot;System.Windows.DataTemplate&quot;></xref> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>. O valor predefinido é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Controls.DataTemplateSelector.SelectTemplate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Controls.DataTemplateSelector.#ctor
  parent: System.Windows.Controls.DataTemplateSelector
  isExternal: false
  name: DataTemplateSelector()
  nameWithType: DataTemplateSelector.DataTemplateSelector()
  fullName: System.Windows.Controls.DataTemplateSelector.DataTemplateSelector()
- uid: System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)
  parent: System.Windows.Controls.DataTemplateSelector
  isExternal: false
  name: SelectTemplate(Object,DependencyObject)
  nameWithType: DataTemplateSelector.SelectTemplate(Object,DependencyObject)
  fullName: System.Windows.Controls.DataTemplateSelector.SelectTemplate(Object,DependencyObject)
- uid: System.Windows.DataTemplate
  parent: System.Windows
  isExternal: false
  name: DataTemplate
  nameWithType: DataTemplate
  fullName: System.Windows.DataTemplate
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.Controls.DataTemplateSelector.#ctor*
  parent: System.Windows.Controls.DataTemplateSelector
  isExternal: false
  name: DataTemplateSelector
  nameWithType: DataTemplateSelector.DataTemplateSelector
- uid: System.Windows.Controls.DataTemplateSelector.SelectTemplate*
  parent: System.Windows.Controls.DataTemplateSelector
  isExternal: false
  name: SelectTemplate
  nameWithType: DataTemplateSelector.SelectTemplate
