### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.AccountManagement.PrincipalSearcher
  id: PrincipalSearcher
  children:
  - System.DirectoryServices.AccountManagement.PrincipalSearcher.#ctor
  - System.DirectoryServices.AccountManagement.PrincipalSearcher.#ctor(System.DirectoryServices.AccountManagement.Principal)
  - System.DirectoryServices.AccountManagement.PrincipalSearcher.Context
  - System.DirectoryServices.AccountManagement.PrincipalSearcher.Dispose
  - System.DirectoryServices.AccountManagement.PrincipalSearcher.FindAll
  - System.DirectoryServices.AccountManagement.PrincipalSearcher.FindOne
  - System.DirectoryServices.AccountManagement.PrincipalSearcher.GetUnderlyingSearcher
  - System.DirectoryServices.AccountManagement.PrincipalSearcher.GetUnderlyingSearcherType
  - System.DirectoryServices.AccountManagement.PrincipalSearcher.QueryFilter
  langs:
  - csharp
  name: PrincipalSearcher
  nameWithType: PrincipalSearcher
  fullName: System.DirectoryServices.AccountManagement.PrincipalSearcher
  type: Class
  summary: "Encapsulates the methods and search patterns used to execute a query against the underlying principal store."
  remarks: "The default page size of 256 KB is used when the PrincipalSearcher class performs a query for domain principals. The application may override the default value by setting the <xref:System.DirectoryServices.DirectorySearcher.PageSize%2A> property in the underlying <xref:System.DirectoryServices.DirectorySearcher> object that is returned from the <xref:System.DirectoryServices.AccountManagement.PrincipalSearcher.GetUnderlyingSearcher%2A> method."
  syntax:
    content: 'public class PrincipalSearcher : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.PrincipalSearcher.#ctor
  id: '#ctor'
  parent: System.DirectoryServices.AccountManagement.PrincipalSearcher
  langs:
  - csharp
  name: PrincipalSearcher()
  nameWithType: PrincipalSearcher.PrincipalSearcher()
  fullName: System.DirectoryServices.AccountManagement.PrincipalSearcher.PrincipalSearcher()
  type: Constructor
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Initializes a new instance of the <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalSearcher&quot;></xref> class. The <xref:System.DirectoryServices.AccountManagement.PrincipalSearcher.QueryFilter*> property must be set before the Principal searcher object can be used to perform a search."
  syntax:
    content: public PrincipalSearcher ();
    parameters: []
  overload: System.DirectoryServices.AccountManagement.PrincipalSearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.PrincipalSearcher.#ctor(System.DirectoryServices.AccountManagement.Principal)
  id: '#ctor(System.DirectoryServices.AccountManagement.Principal)'
  parent: System.DirectoryServices.AccountManagement.PrincipalSearcher
  langs:
  - csharp
  name: PrincipalSearcher(Principal)
  nameWithType: PrincipalSearcher.PrincipalSearcher(Principal)
  fullName: System.DirectoryServices.AccountManagement.PrincipalSearcher.PrincipalSearcher(Principal)
  type: Constructor
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Initializes a new instance of the <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalSearcher&quot;></xref> class with the specified query filter."
  syntax:
    content: public PrincipalSearcher (System.DirectoryServices.AccountManagement.Principal queryFilter);
    parameters:
    - id: queryFilter
      type: System.DirectoryServices.AccountManagement.Principal
      description: "The <xref href=&quot;System.DirectoryServices.AccountManagement.Principal&quot;></xref> object that specifies the filter to use for the search. The <xref:System.DirectoryServices.AccountManagement.PrincipalSearcher.QueryFilter*> property is initialized to this value."
  overload: System.DirectoryServices.AccountManagement.PrincipalSearcher.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Persisted principal objects can not be used as the <xref:System.DirectoryServices.AccountManagement.PrincipalSearcher.QueryFilter*>.       The <code>queryFilter</code> parameter cannot be null or empty."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.PrincipalSearcher.Context
  id: Context
  parent: System.DirectoryServices.AccountManagement.PrincipalSearcher
  langs:
  - csharp
  name: Context
  nameWithType: PrincipalSearcher.Context
  fullName: System.DirectoryServices.AccountManagement.PrincipalSearcher.Context
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Gets that principal context that is used to perform the query. The context specifies the server or domain against which search operations are performed."
  remarks: "The <xref:System.DirectoryServices.AccountManagement.PrincipalContext> object contained in this property is obtained from the context property of the principal object set in the <xref:System.DirectoryServices.AccountManagement.PrincipalSearcher.QueryFilter%2A> property. Queries are performed using the credentials specified in the principal context object and the container specified in the <xref:System.DirectoryServices.AccountManagement%2CPrincipalContext.Container%2A> property. For <xref:System.DirectoryServices.AccountManagement.ContextType> and <xref:System.DirectoryServices.AccountManagement.ContextType> context types, the container is the Distinguished Name (DN) of a container object."
  syntax:
    content: public System.DirectoryServices.AccountManagement.PrincipalContext Context { get; }
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: "The <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalContext&quot;></xref> object that specifies the server or domain against which operations are performed."
  overload: System.DirectoryServices.AccountManagement.PrincipalSearcher.Context*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.PrincipalSearcher.Dispose
  id: Dispose
  parent: System.DirectoryServices.AccountManagement.PrincipalSearcher
  langs:
  - csharp
  name: Dispose()
  nameWithType: PrincipalSearcher.Dispose()
  fullName: System.DirectoryServices.AccountManagement.PrincipalSearcher.Dispose()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Disposes the current instance of the <xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalSearcher&quot;></xref> object."
  syntax:
    content: public virtual void Dispose ();
    parameters: []
  overload: System.DirectoryServices.AccountManagement.PrincipalSearcher.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.PrincipalSearcher.FindAll
  id: FindAll
  parent: System.DirectoryServices.AccountManagement.PrincipalSearcher
  langs:
  - csharp
  name: FindAll()
  nameWithType: PrincipalSearcher.FindAll()
  fullName: System.DirectoryServices.AccountManagement.PrincipalSearcher.FindAll()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Returns a principal search result that contains a collection of all the principal objects that match the principal specified in the query filter property."
  remarks: "The principal objects returned in the principal search result match the type of object contained in the <xref:System.DirectoryServices.AccountManagement.PrincipalSearcher.QueryFilter%2A> property. The search is conducted in the context specified in the <xref:System.DirectoryServices.AccountManagement.PrincipalSearcher.Context%2A> property. For more information, see the Query by Example overview topic."
  syntax:
    content: public System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.Principal> FindAll ();
    parameters: []
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.Principal}
      description: "A &lt;xref:System.DirectoryServices.AccountManagement.PrincipalSearchResult%271&gt; object that matches the query filter or an empty collection if no results are found."
  overload: System.DirectoryServices.AccountManagement.PrincipalSearcher.FindAll*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.DirectoryServices.AccountManagement.PrincipalSearcher.QueryFilter*> contains referential properties. For more information, see the Query by Example overview topic.       The <xref:System.DirectoryServices.AccountManagement.PrincipalSearcher.QueryFilter*> is a persisted principal."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A <xref:System.DirectoryServices.AccountManagement.PrincipalSearcher.QueryFilter*> must first be assigned to the principal searcher before the query can be performed."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.PrincipalSearcher.FindOne
  id: FindOne
  parent: System.DirectoryServices.AccountManagement.PrincipalSearcher
  langs:
  - csharp
  name: FindOne()
  nameWithType: PrincipalSearcher.FindOne()
  fullName: System.DirectoryServices.AccountManagement.PrincipalSearcher.FindOne()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Returns a principal search result that contains the first principal object found that matches the principal specified in the <xref:System.DirectoryServices.AccountManagement.PrincipalSearcher.QueryFilter*> property."
  remarks: "If there is exactly one match of the object specified in the <xref:System.DirectoryServices.AccountManagement.PrincipalSearcher.QueryFilter%2A>, this method returns that object. If there are multiple matches of the <xref:System.DirectoryServices.AccountManagement.PrincipalSearcher.QueryFilter%2A> object, this method arbitrarily returns one of the matching principals.       The <xref:System.DirectoryServices.AccountManagement.Principal> object returned from this method matches the type of object contained in the <xref:System.DirectoryServices.AccountManagement.PrincipalSearcher.QueryFilter%2A> property. The search is conducted in the context specified in the <xref:System.DirectoryServices.AccountManagement.PrincipalSearcher.Context%2A> property. For more information, see the [Query by Example](http://msdn.microsoft.com/en-us/84ac40bb-04c4-4d0b-adaf-0ddb9253599e) overview topic."
  syntax:
    content: public System.DirectoryServices.AccountManagement.Principal FindOne ();
    parameters: []
    return:
      type: System.DirectoryServices.AccountManagement.Principal
      description: "A  <xref href=&quot;System.DirectoryServices.AccountManagement.Principal&quot;></xref> object that contains the principal object that matches the query filter or null if no results are found."
  overload: System.DirectoryServices.AccountManagement.PrincipalSearcher.FindOne*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.DirectoryServices.AccountManagement.PrincipalSearcher.QueryFilter*> contains referential properties. For more information, see the [Query by Example](http://msdn.microsoft.com/en-us/84ac40bb-04c4-4d0b-adaf-0ddb9253599e) overview topic.       The <xref:System.DirectoryServices.AccountManagement.PrincipalSearcher.QueryFilter*> is a persisted principal."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A <xref:System.DirectoryServices.AccountManagement.PrincipalSearcher.QueryFilter*> must first be assigned to the principal searcher before the query can be performed."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.PrincipalSearcher.GetUnderlyingSearcher
  id: GetUnderlyingSearcher
  parent: System.DirectoryServices.AccountManagement.PrincipalSearcher
  langs:
  - csharp
  name: GetUnderlyingSearcher()
  nameWithType: PrincipalSearcher.GetUnderlyingSearcher()
  fullName: System.DirectoryServices.AccountManagement.PrincipalSearcher.GetUnderlyingSearcher()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Returns the underlying search object that is used by the Account Management API to perform the search."
  remarks: "The application can modify the properties directly on the <xref:System.DirectoryServices.DirectorySearcher> object before executing the query. The query will then execute using the modified properties. For example, the default page size of 256 KB is used when the <xref:System.DirectoryServices.AccountManagement.PrincipalSearcher> class performs a query for <xref:System.DirectoryServices.AccountManagement.ContextType.Domain> principals. The application may override the default value by setting the <xref:System.DirectoryServices.DirectorySearcher.PageSize%2A> property in the underlying <xref:System.DirectoryServices.DirectorySearcher> object that is returned from this method."
  syntax:
    content: public object GetUnderlyingSearcher ();
    parameters: []
    return:
      type: System.Object
      description: "A <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;></xref> object."
  overload: System.DirectoryServices.AccountManagement.PrincipalSearcher.GetUnderlyingSearcher*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A <xref:System.DirectoryServices.AccountManagement.PrincipalSearcher.QueryFilter*> must first be assigned to the principal searcher before the query can be performed.       The <xref:System.DirectoryServices.AccountManagement.PrincipalSearcher.QueryFilter*> contains referential properties. For more information, see the [Query by Example](http://msdn.microsoft.com/en-us/84ac40bb-04c4-4d0b-adaf-0ddb9253599e) overview topic.       The <xref:System.DirectoryServices.AccountManagement.PrincipalSearcher.QueryFilter*> is a persisted principal."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.PrincipalSearcher.GetUnderlyingSearcherType
  id: GetUnderlyingSearcherType
  parent: System.DirectoryServices.AccountManagement.PrincipalSearcher
  langs:
  - csharp
  name: GetUnderlyingSearcherType()
  nameWithType: PrincipalSearcher.GetUnderlyingSearcherType()
  fullName: System.DirectoryServices.AccountManagement.PrincipalSearcher.GetUnderlyingSearcherType()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Returns the type of the object returned from the <xref:System.DirectoryServices.AccountManagement.PrincipalSearcher.GetUnderlyingSearcher*> method."
  syntax:
    content: public Type GetUnderlyingSearcherType ();
    parameters: []
    return:
      type: System.Type
      description: "A <xref:System.Type> that specifies the type of object returned from the <xref:System.DirectoryServices.AccountManagement.PrincipalSearcher.GetUnderlyingSearcher*> method."
  overload: System.DirectoryServices.AccountManagement.PrincipalSearcher.GetUnderlyingSearcherType*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A <xref:System.DirectoryServices.AccountManagement.PrincipalSearcher.QueryFilter*> must first be assigned to the principal searcher before the query can be performed."
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.PrincipalSearcher.QueryFilter
  id: QueryFilter
  parent: System.DirectoryServices.AccountManagement.PrincipalSearcher
  langs:
  - csharp
  name: QueryFilter
  nameWithType: PrincipalSearcher.QueryFilter
  fullName: System.DirectoryServices.AccountManagement.PrincipalSearcher.QueryFilter
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "Gets or sets the query filter that is used to locate matching principals."
  remarks: "The principal object contained in this property can be any type of object derived from the principal class; computer, user, or group. The QueryFilter can also be an extended principal type that is defined by extending either <xref:System.DirectoryServices.AccountManagement.Principal>, <xref:System.DirectoryServices.AccountManagement.UserPrincipal>, <xref:System.DirectoryServices.AccountManagement.GroupPrincipal> or <xref:System.DirectoryServices.AccountManagement.ComputerPrincipal>. The type of the derived class object that is passed to this property determines the type of object that is queried. The resulting query contains a logical AND of all the properties set on the specified principal object. For more information, see the Query by Example overview topic. For more information on the extended classes, see the [Principal Extensions](http://msdn.microsoft.com/en-us/49d1b257-d652-4224-bdae-2edabced8f00) overview topic."
  syntax:
    content: public System.DirectoryServices.AccountManagement.Principal QueryFilter { get; set; }
    return:
      type: System.DirectoryServices.AccountManagement.Principal
      description: "The <xref href=&quot;System.DirectoryServices.AccountManagement.Principal&quot;></xref> object that is used for the query or null if no filter is set."
  overload: System.DirectoryServices.AccountManagement.PrincipalSearcher.QueryFilter*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Persisted Principal objects can not be used as the QueryFilter.       The QueryFilter cannot be null or empty."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.DirectoryServices.AccountManagement.PrincipalSearcher.#ctor
  parent: System.DirectoryServices.AccountManagement.PrincipalSearcher
  isExternal: false
  name: PrincipalSearcher()
  nameWithType: PrincipalSearcher.PrincipalSearcher()
  fullName: System.DirectoryServices.AccountManagement.PrincipalSearcher.PrincipalSearcher()
- uid: System.DirectoryServices.AccountManagement.PrincipalSearcher.#ctor(System.DirectoryServices.AccountManagement.Principal)
  parent: System.DirectoryServices.AccountManagement.PrincipalSearcher
  isExternal: false
  name: PrincipalSearcher(Principal)
  nameWithType: PrincipalSearcher.PrincipalSearcher(Principal)
  fullName: System.DirectoryServices.AccountManagement.PrincipalSearcher.PrincipalSearcher(Principal)
- uid: System.DirectoryServices.AccountManagement.Principal
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: Principal
  nameWithType: Principal
  fullName: System.DirectoryServices.AccountManagement.Principal
- uid: System.DirectoryServices.AccountManagement.PrincipalSearcher.Context
  parent: System.DirectoryServices.AccountManagement.PrincipalSearcher
  isExternal: false
  name: Context
  nameWithType: PrincipalSearcher.Context
  fullName: System.DirectoryServices.AccountManagement.PrincipalSearcher.Context
- uid: System.DirectoryServices.AccountManagement.PrincipalContext
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalContext
  nameWithType: PrincipalContext
  fullName: System.DirectoryServices.AccountManagement.PrincipalContext
- uid: System.DirectoryServices.AccountManagement.PrincipalSearcher.Dispose
  parent: System.DirectoryServices.AccountManagement.PrincipalSearcher
  isExternal: false
  name: Dispose()
  nameWithType: PrincipalSearcher.Dispose()
  fullName: System.DirectoryServices.AccountManagement.PrincipalSearcher.Dispose()
- uid: System.DirectoryServices.AccountManagement.PrincipalSearcher.FindAll
  parent: System.DirectoryServices.AccountManagement.PrincipalSearcher
  isExternal: false
  name: FindAll()
  nameWithType: PrincipalSearcher.FindAll()
  fullName: System.DirectoryServices.AccountManagement.PrincipalSearcher.FindAll()
- uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.Principal}
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalSearchResult<Principal>
  nameWithType: PrincipalSearchResult<Principal>
  fullName: System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.Principal>
  spec.csharp:
  - uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1
    name: PrincipalSearchResult
    nameWithType: PrincipalSearchResult
    fullName: PrincipalSearchResult<System.DirectoryServices.AccountManagement.Principal>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DirectoryServices.AccountManagement.Principal
    name: Principal
    nameWithType: Principal
    fullName: Principal
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.DirectoryServices.AccountManagement.PrincipalSearcher.FindOne
  parent: System.DirectoryServices.AccountManagement.PrincipalSearcher
  isExternal: false
  name: FindOne()
  nameWithType: PrincipalSearcher.FindOne()
  fullName: System.DirectoryServices.AccountManagement.PrincipalSearcher.FindOne()
- uid: System.DirectoryServices.AccountManagement.PrincipalSearcher.GetUnderlyingSearcher
  parent: System.DirectoryServices.AccountManagement.PrincipalSearcher
  isExternal: false
  name: GetUnderlyingSearcher()
  nameWithType: PrincipalSearcher.GetUnderlyingSearcher()
  fullName: System.DirectoryServices.AccountManagement.PrincipalSearcher.GetUnderlyingSearcher()
- uid: System.DirectoryServices.AccountManagement.PrincipalSearcher.GetUnderlyingSearcherType
  parent: System.DirectoryServices.AccountManagement.PrincipalSearcher
  isExternal: false
  name: GetUnderlyingSearcherType()
  nameWithType: PrincipalSearcher.GetUnderlyingSearcherType()
  fullName: System.DirectoryServices.AccountManagement.PrincipalSearcher.GetUnderlyingSearcherType()
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.DirectoryServices.AccountManagement.PrincipalSearcher.QueryFilter
  parent: System.DirectoryServices.AccountManagement.PrincipalSearcher
  isExternal: false
  name: QueryFilter
  nameWithType: PrincipalSearcher.QueryFilter
  fullName: System.DirectoryServices.AccountManagement.PrincipalSearcher.QueryFilter
- uid: System.DirectoryServices.AccountManagement.PrincipalSearcher.#ctor*
  parent: System.DirectoryServices.AccountManagement.PrincipalSearcher
  isExternal: false
  name: PrincipalSearcher
  nameWithType: PrincipalSearcher.PrincipalSearcher
- uid: System.DirectoryServices.AccountManagement.PrincipalSearcher.Context*
  parent: System.DirectoryServices.AccountManagement.PrincipalSearcher
  isExternal: false
  name: Context
  nameWithType: PrincipalSearcher.Context
- uid: System.DirectoryServices.AccountManagement.PrincipalSearcher.Dispose*
  parent: System.DirectoryServices.AccountManagement.PrincipalSearcher
  isExternal: false
  name: Dispose
  nameWithType: PrincipalSearcher.Dispose
- uid: System.DirectoryServices.AccountManagement.PrincipalSearcher.FindAll*
  parent: System.DirectoryServices.AccountManagement.PrincipalSearcher
  isExternal: false
  name: FindAll
  nameWithType: PrincipalSearcher.FindAll
- uid: System.DirectoryServices.AccountManagement.PrincipalSearcher.FindOne*
  parent: System.DirectoryServices.AccountManagement.PrincipalSearcher
  isExternal: false
  name: FindOne
  nameWithType: PrincipalSearcher.FindOne
- uid: System.DirectoryServices.AccountManagement.PrincipalSearcher.GetUnderlyingSearcher*
  parent: System.DirectoryServices.AccountManagement.PrincipalSearcher
  isExternal: false
  name: GetUnderlyingSearcher
  nameWithType: PrincipalSearcher.GetUnderlyingSearcher
- uid: System.DirectoryServices.AccountManagement.PrincipalSearcher.GetUnderlyingSearcherType*
  parent: System.DirectoryServices.AccountManagement.PrincipalSearcher
  isExternal: false
  name: GetUnderlyingSearcherType
  nameWithType: PrincipalSearcher.GetUnderlyingSearcherType
- uid: System.DirectoryServices.AccountManagement.PrincipalSearcher.QueryFilter*
  parent: System.DirectoryServices.AccountManagement.PrincipalSearcher
  isExternal: false
  name: QueryFilter
  nameWithType: PrincipalSearcher.QueryFilter
