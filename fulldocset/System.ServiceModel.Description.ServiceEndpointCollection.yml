### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Description.ServiceEndpointCollection
  id: ServiceEndpointCollection
  children:
  - System.ServiceModel.Description.ServiceEndpointCollection.Find(System.Type)
  - System.ServiceModel.Description.ServiceEndpointCollection.Find(System.Uri)
  - System.ServiceModel.Description.ServiceEndpointCollection.Find(System.Xml.XmlQualifiedName)
  - System.ServiceModel.Description.ServiceEndpointCollection.Find(System.Type,System.Xml.XmlQualifiedName)
  - System.ServiceModel.Description.ServiceEndpointCollection.Find(System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)
  - System.ServiceModel.Description.ServiceEndpointCollection.FindAll(System.Type)
  - System.ServiceModel.Description.ServiceEndpointCollection.FindAll(System.Xml.XmlQualifiedName)
  - System.ServiceModel.Description.ServiceEndpointCollection.InsertItem(System.Int32,System.ServiceModel.Description.ServiceEndpoint)
  - System.ServiceModel.Description.ServiceEndpointCollection.SetItem(System.Int32,System.ServiceModel.Description.ServiceEndpoint)
  langs:
  - csharp
  name: ServiceEndpointCollection
  nameWithType: ServiceEndpointCollection
  fullName: System.ServiceModel.Description.ServiceEndpointCollection
  type: Class
  summary: "A collection that contains the endpoints for a service."
  remarks: "This collection of endpoints for a service is used by the metadata API to manage services with multiple endpoints. ServiceEndpointCollection is returned, for example, by the <xref:System.ServiceModel.Description.ServiceDescription.Endpoints%2A> property and by the <xref:System.ServiceModel.Description.WsdlImporter.ImportAllEndpoints%2A> method when creating service endpoints from WSDL port types.       The collection provides the functionality to <xref:System.ServiceModel.Description.ServiceEndpointCollection.Find%2A> the endpoints of a particular type, that have a specific name or address, or to <xref:System.ServiceModel.Description.ServiceEndpointCollection.FindAll%2A> of the endpoints for a service that meet a specified contract type or name criteria."
  example:
  - "The following example illustrates the use of the <xref:System.ServiceModel.Description.ServiceEndpointCollection.Find%2A> and <xref:System.ServiceModel.Description.ServiceEndpointCollection.FindAll%2A> methods to enumerate <xref:System.ServiceModel.Description.ServiceEndpoint> objects that satisfy various search criteria.  \n  \n [!code-cs[ServiceEndpointCollection#1](~/add/codesnippet/csharp/t-system.servicemodel.de_17_1.cs)]\n [!code-cs[ServiceEndpointCollection#1](~/add/codesnippet/csharp/t-system.servicemodel.de_17_1.cs)]"
  syntax:
    content: 'public class ServiceEndpointCollection : System.Collections.ObjectModel.Collection<System.ServiceModel.Description.ServiceEndpoint>'
  inheritance:
  - System.Collections.ObjectModel.Collection`1
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceEndpointCollection.Find(System.Type)
  id: Find(System.Type)
  parent: System.ServiceModel.Description.ServiceEndpointCollection
  langs:
  - csharp
  name: Find(Type)
  nameWithType: ServiceEndpointCollection.Find(Type)
  fullName: System.ServiceModel.Description.ServiceEndpointCollection.Find(Type)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Returns the first service endpoint found that satisfies the specified contract type from the collection of service endpoints."
  remarks: "This Find overload is specific to the [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] programming model. It looks at the <xref:System.ServiceModel.Description.ContractDescription.ContractType%2A> property for each endpoint. The <xref:System.ServiceModel.Description.ContractDescription.ContractType%2A> may be `null` if the <xref:System.ServiceModel.Description.ContractDescription> was not created from the [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] programming model (types with *Contract attributes).       There are potentially multiple endpoints that could satisfy the criteria. The method returns the first one encountered in the collection. If you need to find all of the <xref:System.ServiceModel.Description.ServiceEndpoint> objects that satisfy the specified criteria, use one of the <xref:System.ServiceModel.Description.ServiceEndpointCollection.FindAll%2A> methods instead."
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint Find (Type contractType);
    parameters:
    - id: contractType
      type: System.Type
      description: "The <xref:System.Type> of contract for the service endpoint."
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "The first <xref:System.ServiceModel.Description.ServiceEndpoint> of the specified contract type or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if none was found."
  overload: System.ServiceModel.Description.ServiceEndpointCollection.Find*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>contractType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceEndpointCollection.Find(System.Uri)
  id: Find(System.Uri)
  parent: System.ServiceModel.Description.ServiceEndpointCollection
  langs:
  - csharp
  name: Find(Uri)
  nameWithType: ServiceEndpointCollection.Find(Uri)
  fullName: System.ServiceModel.Description.ServiceEndpointCollection.Find(Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Returns a service endpoint with a specified address from the collection of service endpoints."
  remarks: "There are potentially multiple endpoints that could satisfy the criteria. The method returns the first one encountered in the collection. If you need to find all of the <xref:System.ServiceModel.Description.ServiceEndpoint> objects that satisfy the specified criteria, use one of the <xref:System.ServiceModel.Description.ServiceEndpointCollection.FindAll%2A> methods instead."
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint Find (Uri address);
    parameters:
    - id: address
      type: System.Uri
      description: "The <xref:System.Uri> for the service endpoint."
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "The first <xref:System.ServiceModel.Description.ServiceEndpoint> of the specified address or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if none was found."
  overload: System.ServiceModel.Description.ServiceEndpointCollection.Find*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceEndpointCollection.Find(System.Xml.XmlQualifiedName)
  id: Find(System.Xml.XmlQualifiedName)
  parent: System.ServiceModel.Description.ServiceEndpointCollection
  langs:
  - csharp
  name: Find(XmlQualifiedName)
  nameWithType: ServiceEndpointCollection.Find(XmlQualifiedName)
  fullName: System.ServiceModel.Description.ServiceEndpointCollection.Find(XmlQualifiedName)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Returns a service endpoint with a specified namespace and contract name from the collection of service endpoints."
  remarks: "There are potentially multiple endpoints that could satisfy the criteria. The method returns the first one encountered in the collection. If you need to find all of the <xref:System.ServiceModel.Description.ServiceEndpoint> objects that satisfy the specified criteria, use one of the <xref:System.ServiceModel.Description.ServiceEndpointCollection.FindAll%2A> methods instead."
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint Find (System.Xml.XmlQualifiedName contractName);
    parameters:
    - id: contractName
      type: System.Xml.XmlQualifiedName
      description: "The <xref:System.Xml.XmlQualifiedName> for the contract of the service."
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "The first <xref:System.ServiceModel.Description.ServiceEndpoint> with the specified namespace and contract name or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if none was found."
  overload: System.ServiceModel.Description.ServiceEndpointCollection.Find*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceEndpointCollection.Find(System.Type,System.Xml.XmlQualifiedName)
  id: Find(System.Type,System.Xml.XmlQualifiedName)
  parent: System.ServiceModel.Description.ServiceEndpointCollection
  langs:
  - csharp
  name: Find(Type,XmlQualifiedName)
  nameWithType: ServiceEndpointCollection.Find(Type,XmlQualifiedName)
  fullName: System.ServiceModel.Description.ServiceEndpointCollection.Find(Type,XmlQualifiedName)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Returns a service endpoint of a specified contract type and with a specified binding name and namespace from the collection of service endpoints."
  remarks: "There are potentially multiple endpoints that could satisfy the criteria. The method returns the first one encountered in the collection. If you need to find all of the <xref:System.ServiceModel.Description.ServiceEndpoint> objects that satisfy the specified criteria, use one of the <xref:System.ServiceModel.Description.ServiceEndpointCollection.FindAll%2A> methods instead."
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint Find (Type contractType, System.Xml.XmlQualifiedName bindingName);
    parameters:
    - id: contractType
      type: System.Type
      description: "The <xref:System.Type> of contract for the service endpoint."
    - id: bindingName
      type: System.Xml.XmlQualifiedName
      description: "The <xref:System.Xml.XmlQualifiedName> for the binding of the service."
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "The first <xref:System.ServiceModel.Description.ServiceEndpoint> of the specified contract type and binding name and namespace or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if none was found."
  overload: System.ServiceModel.Description.ServiceEndpointCollection.Find*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>contractType</code> or <code>bindingName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceEndpointCollection.Find(System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)
  id: Find(System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)
  parent: System.ServiceModel.Description.ServiceEndpointCollection
  langs:
  - csharp
  name: Find(XmlQualifiedName,XmlQualifiedName)
  nameWithType: ServiceEndpointCollection.Find(XmlQualifiedName,XmlQualifiedName)
  fullName: System.ServiceModel.Description.ServiceEndpointCollection.Find(XmlQualifiedName,XmlQualifiedName)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Returns the first service endpoint with the specified contract name and namespace and binding name and namespace from the collection of service endpoints."
  remarks: "There are potentially multiple endpoints that could satisfy the criteria. The method returns the first one encountered in the collection. If you need to find all of the <xref:System.ServiceModel.Description.ServiceEndpoint> objects that satisfy the specified criteria, use one of the <xref:System.ServiceModel.Description.ServiceEndpointCollection.FindAll%2A> methods instead."
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint Find (System.Xml.XmlQualifiedName contractName, System.Xml.XmlQualifiedName bindingName);
    parameters:
    - id: contractName
      type: System.Xml.XmlQualifiedName
      description: "The <xref:System.Xml.XmlQualifiedName> for the contract of the service."
    - id: bindingName
      type: System.Xml.XmlQualifiedName
      description: "The <xref:System.Xml.XmlQualifiedName> for the binding of the service."
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "The first <xref:System.ServiceModel.Description.ServiceEndpoint> with the specified binding and contract names and namespaces."
  overload: System.ServiceModel.Description.ServiceEndpointCollection.Find*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>contractName</code> or <code>bindingName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceEndpointCollection.FindAll(System.Type)
  id: FindAll(System.Type)
  parent: System.ServiceModel.Description.ServiceEndpointCollection
  langs:
  - csharp
  name: FindAll(Type)
  nameWithType: ServiceEndpointCollection.FindAll(Type)
  fullName: System.ServiceModel.Description.ServiceEndpointCollection.FindAll(Type)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Returns a collection of all the service endpoints for a specified type of service."
  remarks: "If you only need to find the first <xref:System.ServiceModel.Description.ServiceEndpoint> that satisfies the specified criteria, use one of the <xref:System.ServiceModel.Description.ServiceEndpointCollection.Find%2A> methods instead."
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.ServiceModel.Description.ServiceEndpoint> FindAll (Type contractType);
    parameters:
    - id: contractType
      type: System.Type
      description: "The <xref:System.Type> of contract for the service endpoint."
    return:
      type: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint}
      description: "The &lt;xref:System.Collections.ObjectModel.Collection%601&gt; of type <xref:System.ServiceModel.Description.ServiceEndpoint> that contains service endpoints of the specified type or the empty collection if none is found."
  overload: System.ServiceModel.Description.ServiceEndpointCollection.FindAll*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>contractType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceEndpointCollection.FindAll(System.Xml.XmlQualifiedName)
  id: FindAll(System.Xml.XmlQualifiedName)
  parent: System.ServiceModel.Description.ServiceEndpointCollection
  langs:
  - csharp
  name: FindAll(XmlQualifiedName)
  nameWithType: ServiceEndpointCollection.FindAll(XmlQualifiedName)
  fullName: System.ServiceModel.Description.ServiceEndpointCollection.FindAll(XmlQualifiedName)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Returns a collection of all the service endpoints for a specified service name."
  remarks: "If you only need to find the first <xref:System.ServiceModel.Description.ServiceEndpoint> that satisfies the specified criteria, use one of the <xref:System.ServiceModel.Description.ServiceEndpointCollection.Find%2A> methods instead."
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.ServiceModel.Description.ServiceEndpoint> FindAll (System.Xml.XmlQualifiedName contractName);
    parameters:
    - id: contractName
      type: System.Xml.XmlQualifiedName
      description: "The <xref:System.Xml.XmlQualifiedName> for the service."
    return:
      type: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint}
      description: "The &lt;xref:System.Collections.ObjectModel.Collection%601&gt; of type <xref:System.ServiceModel.Description.ServiceEndpoint> that contains service endpoints with the specified contract name and namespace or the empty collection if none is found."
  overload: System.ServiceModel.Description.ServiceEndpointCollection.FindAll*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>contractName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceEndpointCollection.InsertItem(System.Int32,System.ServiceModel.Description.ServiceEndpoint)
  id: InsertItem(System.Int32,System.ServiceModel.Description.ServiceEndpoint)
  parent: System.ServiceModel.Description.ServiceEndpointCollection
  langs:
  - csharp
  name: InsertItem(Int32,ServiceEndpoint)
  nameWithType: ServiceEndpointCollection.InsertItem(Int32,ServiceEndpoint)
  fullName: System.ServiceModel.Description.ServiceEndpointCollection.InsertItem(Int32,ServiceEndpoint)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Inserts an item into the collection at the specified index."
  remarks: "This method overrides the virtual <xref:System.Collections.ObjectModel.Collection%601.InsertItem%28System.Int32%2C%600%29> method defined in the base class and is provided to do input validation that ensures `null` values are not inserted into the collection. It is not intended to be called by users."
  syntax:
    content: protected override void InsertItem (int index, System.ServiceModel.Description.ServiceEndpoint item);
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based index at which the item should be inserted."
    - id: item
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "The <xref:System.ServiceModel.Description.ServiceEndpoint> item to insert at the specified `index`."
  overload: System.ServiceModel.Description.ServiceEndpointCollection.InsertItem*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code> is less than zero.       -or-       <code>index</code> is greater than the number of items contained in the collection."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>item</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceEndpointCollection.SetItem(System.Int32,System.ServiceModel.Description.ServiceEndpoint)
  id: SetItem(System.Int32,System.ServiceModel.Description.ServiceEndpoint)
  parent: System.ServiceModel.Description.ServiceEndpointCollection
  langs:
  - csharp
  name: SetItem(Int32,ServiceEndpoint)
  nameWithType: ServiceEndpointCollection.SetItem(Int32,ServiceEndpoint)
  fullName: System.ServiceModel.Description.ServiceEndpointCollection.SetItem(Int32,ServiceEndpoint)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Replaces the element in the collection at the specified index."
  remarks: "This method overrides the virtual <xref:System.Collections.ObjectModel.Collection%601.SetItem%28System.Int32%2C%600%29> method defined in the base class and is provided to do input validation that ensures `null` values are not inserted into the collection. It is not intended to be called by users."
  syntax:
    content: protected override void SetItem (int index, System.ServiceModel.Description.ServiceEndpoint item);
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based index of the element to replace."
    - id: item
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "The new value for <xref:System.ServiceModel.Description.ServiceEndpoint> item at the specified `index`."
  overload: System.ServiceModel.Description.ServiceEndpointCollection.SetItem*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code> is less than zero.       -or-       <code>index</code> is greater than the number of items contained in the collection."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>item</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Collections.ObjectModel.Collection`1
  isExternal: false
  name: System.Collections.ObjectModel.Collection<System.ServiceModel.Description.ServiceEndpoint>
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ServiceModel.Description.ServiceEndpointCollection.Find(System.Type)
  parent: System.ServiceModel.Description.ServiceEndpointCollection
  isExternal: false
  name: Find(Type)
  nameWithType: ServiceEndpointCollection.Find(Type)
  fullName: System.ServiceModel.Description.ServiceEndpointCollection.Find(Type)
- uid: System.ServiceModel.Description.ServiceEndpoint
  parent: System.ServiceModel.Description
  isExternal: true
  name: ServiceEndpoint
  nameWithType: ServiceEndpoint
  fullName: System.ServiceModel.Description.ServiceEndpoint
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.Description.ServiceEndpointCollection.Find(System.Uri)
  parent: System.ServiceModel.Description.ServiceEndpointCollection
  isExternal: false
  name: Find(Uri)
  nameWithType: ServiceEndpointCollection.Find(Uri)
  fullName: System.ServiceModel.Description.ServiceEndpointCollection.Find(Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.Description.ServiceEndpointCollection.Find(System.Xml.XmlQualifiedName)
  parent: System.ServiceModel.Description.ServiceEndpointCollection
  isExternal: false
  name: Find(XmlQualifiedName)
  nameWithType: ServiceEndpointCollection.Find(XmlQualifiedName)
  fullName: System.ServiceModel.Description.ServiceEndpointCollection.Find(XmlQualifiedName)
- uid: System.Xml.XmlQualifiedName
  parent: System.Xml
  isExternal: true
  name: XmlQualifiedName
  nameWithType: XmlQualifiedName
  fullName: System.Xml.XmlQualifiedName
- uid: System.ServiceModel.Description.ServiceEndpointCollection.Find(System.Type,System.Xml.XmlQualifiedName)
  parent: System.ServiceModel.Description.ServiceEndpointCollection
  isExternal: false
  name: Find(Type,XmlQualifiedName)
  nameWithType: ServiceEndpointCollection.Find(Type,XmlQualifiedName)
  fullName: System.ServiceModel.Description.ServiceEndpointCollection.Find(Type,XmlQualifiedName)
- uid: System.ServiceModel.Description.ServiceEndpointCollection.Find(System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)
  parent: System.ServiceModel.Description.ServiceEndpointCollection
  isExternal: false
  name: Find(XmlQualifiedName,XmlQualifiedName)
  nameWithType: ServiceEndpointCollection.Find(XmlQualifiedName,XmlQualifiedName)
  fullName: System.ServiceModel.Description.ServiceEndpointCollection.Find(XmlQualifiedName,XmlQualifiedName)
- uid: System.ServiceModel.Description.ServiceEndpointCollection.FindAll(System.Type)
  parent: System.ServiceModel.Description.ServiceEndpointCollection
  isExternal: false
  name: FindAll(Type)
  nameWithType: ServiceEndpointCollection.FindAll(Type)
  fullName: System.ServiceModel.Description.ServiceEndpointCollection.FindAll(Type)
- uid: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ServiceEndpoint>
  nameWithType: Collection<ServiceEndpoint>
  fullName: System.Collections.ObjectModel.Collection<System.ServiceModel.Description.ServiceEndpoint>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.ServiceModel.Description.ServiceEndpoint>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Description.ServiceEndpoint
    name: ServiceEndpoint
    nameWithType: ServiceEndpoint
    fullName: ServiceEndpoint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Description.ServiceEndpointCollection.FindAll(System.Xml.XmlQualifiedName)
  parent: System.ServiceModel.Description.ServiceEndpointCollection
  isExternal: false
  name: FindAll(XmlQualifiedName)
  nameWithType: ServiceEndpointCollection.FindAll(XmlQualifiedName)
  fullName: System.ServiceModel.Description.ServiceEndpointCollection.FindAll(XmlQualifiedName)
- uid: System.ServiceModel.Description.ServiceEndpointCollection.InsertItem(System.Int32,System.ServiceModel.Description.ServiceEndpoint)
  parent: System.ServiceModel.Description.ServiceEndpointCollection
  isExternal: false
  name: InsertItem(Int32,ServiceEndpoint)
  nameWithType: ServiceEndpointCollection.InsertItem(Int32,ServiceEndpoint)
  fullName: System.ServiceModel.Description.ServiceEndpointCollection.InsertItem(Int32,ServiceEndpoint)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.Description.ServiceEndpointCollection.SetItem(System.Int32,System.ServiceModel.Description.ServiceEndpoint)
  parent: System.ServiceModel.Description.ServiceEndpointCollection
  isExternal: false
  name: SetItem(Int32,ServiceEndpoint)
  nameWithType: ServiceEndpointCollection.SetItem(Int32,ServiceEndpoint)
  fullName: System.ServiceModel.Description.ServiceEndpointCollection.SetItem(Int32,ServiceEndpoint)
- uid: System.ServiceModel.Description.ServiceEndpointCollection.Find*
  parent: System.ServiceModel.Description.ServiceEndpointCollection
  isExternal: false
  name: Find
  nameWithType: ServiceEndpointCollection.Find
- uid: System.ServiceModel.Description.ServiceEndpointCollection.FindAll*
  parent: System.ServiceModel.Description.ServiceEndpointCollection
  isExternal: false
  name: FindAll
  nameWithType: ServiceEndpointCollection.FindAll
- uid: System.ServiceModel.Description.ServiceEndpointCollection.InsertItem*
  parent: System.ServiceModel.Description.ServiceEndpointCollection
  isExternal: false
  name: InsertItem
  nameWithType: ServiceEndpointCollection.InsertItem
- uid: System.ServiceModel.Description.ServiceEndpointCollection.SetItem*
  parent: System.ServiceModel.Description.ServiceEndpointCollection
  isExternal: false
  name: SetItem
  nameWithType: ServiceEndpointCollection.SetItem
