### YamlMime:ManagedReference
items:
- uid: System.Configuration.ConfigurationProperty
  id: ConfigurationProperty
  children:
  - System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type)
  - System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object)
  - System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.Configuration.ConfigurationPropertyOptions)
  - System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions)
  - System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions,System.String)
  - System.Configuration.ConfigurationProperty.Converter
  - System.Configuration.ConfigurationProperty.DefaultValue
  - System.Configuration.ConfigurationProperty.Description
  - System.Configuration.ConfigurationProperty.IsAssemblyStringTransformationRequired
  - System.Configuration.ConfigurationProperty.IsDefaultCollection
  - System.Configuration.ConfigurationProperty.IsKey
  - System.Configuration.ConfigurationProperty.IsRequired
  - System.Configuration.ConfigurationProperty.IsTypeStringTransformationRequired
  - System.Configuration.ConfigurationProperty.IsVersionCheckRequired
  - System.Configuration.ConfigurationProperty.Name
  - System.Configuration.ConfigurationProperty.Type
  - System.Configuration.ConfigurationProperty.Validator
  langs:
  - csharp
  name: ConfigurationProperty
  nameWithType: ConfigurationProperty
  fullName: System.Configuration.ConfigurationProperty
  type: Class
  summary: "Represents an attribute or a child of a configuration element. This class cannot be inherited."
  remarks: "In the case of a simple <xref:System.Configuration.ConfigurationElement>, such as the `CustomSection` shown in the next example, the ConfigurationProperty objects represent attributes such as `fileName`.       In the case of more complex configuration elements such as a section containing subsections, for instance `authentication`, the ConfigurationProperty objects can represent <xref:System.Configuration.ConfigurationElement> objects as well as attributes.       The <xref:System.Configuration.ConfigurationPropertyCollection> class represents the collection of the ConfigurationProperty objects that can be either attributes or <xref:System.Configuration.ConfigurationElement> objects of a configuration element.       The ConfigurationProperty class represents an individual configuration setting. This class allows you to get or set the name, type, and default value for a particular configuration entity (attribute or element) and specify whether the attribute is required, is an element key, or represents a default element collection."
  example:
  - "1.  The following code example shows how to use the ConfigurationProperty when you create a custom section.  \n  \n [!code-vb[System.Configuration.ConfigurationProperty#1](~/add/codesnippet/visualbasic/t-system.configuration.c_18_1.vb)]\n [!code-cs[System.Configuration.ConfigurationProperty#1](~/add/codesnippet/csharp/t-system.configuration.c_18_1.cs)]  \n  \n The following is an excerpt of the configuration file used by the code in the previous example.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The following example shows how to create the previous section in code.  \n  \n [!code-vb[System.Configuration.ConfigurationProperty#30](~/add/codesnippet/visualbasic/t-system.configuration.c_18_3.vb)]\n [!code-cs[System.Configuration.ConfigurationProperty#30](~/add/codesnippet/csharp/t-system.configuration.c_18_3.cs)]"
  syntax:
    content: public sealed class ConfigurationProperty
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type)
  id: '#ctor(System.String,System.Type)'
  parent: System.Configuration.ConfigurationProperty
  langs:
  - csharp
  name: ConfigurationProperty(String,Type)
  nameWithType: ConfigurationProperty.ConfigurationProperty(String,Type)
  fullName: System.Configuration.ConfigurationProperty.ConfigurationProperty(String,Type)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Initializes a new instance of the <xref href=&quot;System.Configuration.ConfigurationProperty&quot;></xref> class."
  syntax:
    content: public ConfigurationProperty (string name, Type type);
    parameters:
    - id: name
      type: System.String
      description: "The name of the configuration entity."
    - id: type
      type: System.Type
      description: "The type of the configuration entity."
  overload: System.Configuration.ConfigurationProperty.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object)
  id: '#ctor(System.String,System.Type,System.Object)'
  parent: System.Configuration.ConfigurationProperty
  langs:
  - csharp
  name: ConfigurationProperty(String,Type,Object)
  nameWithType: ConfigurationProperty.ConfigurationProperty(String,Type,Object)
  fullName: System.Configuration.ConfigurationProperty.ConfigurationProperty(String,Type,Object)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Initializes a new instance of the <xref href=&quot;System.Configuration.ConfigurationProperty&quot;></xref> class."
  remarks: "When you instantiate a <xref:System.Configuration.ConfigurationProperty> object using this constructor, the <xref:System.Configuration.ConfigurationProperty.IsRequired%2A> and <xref:System.Configuration.ConfigurationProperty.IsKey%2A> properties are set to `false`. Additionally, an instance made with this constructor will not function as a default collection-key property."
  example:
  - "The following code example shows how to use the ConfigurationProperty constructor to instantiate a configuration-property object.  \n  \n [!code-vb[System.Configuration.ConfigurationProperty#2](~/add/codesnippet/visualbasic/ad22ccbe-6482-48fd-9ae7-_1.vb)]\n [!code-cs[System.Configuration.ConfigurationProperty#2](~/add/codesnippet/csharp/ad22ccbe-6482-48fd-9ae7-_1.cs)]"
  syntax:
    content: public ConfigurationProperty (string name, Type type, object defaultValue);
    parameters:
    - id: name
      type: System.String
      description: "The name of the configuration entity."
    - id: type
      type: System.Type
      description: "The type of the configuration entity."
    - id: defaultValue
      type: System.Object
      description: "The default value of the configuration entity."
  overload: System.Configuration.ConfigurationProperty.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.Configuration.ConfigurationPropertyOptions)
  id: '#ctor(System.String,System.Type,System.Object,System.Configuration.ConfigurationPropertyOptions)'
  parent: System.Configuration.ConfigurationProperty
  langs:
  - csharp
  name: ConfigurationProperty(String,Type,Object,ConfigurationPropertyOptions)
  nameWithType: ConfigurationProperty.ConfigurationProperty(String,Type,Object,ConfigurationPropertyOptions)
  fullName: System.Configuration.ConfigurationProperty.ConfigurationProperty(String,Type,Object,ConfigurationPropertyOptions)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Initializes a new instance of the <xref href=&quot;System.Configuration.ConfigurationProperty&quot;></xref> class."
  remarks: ''
  example:
  - "The following code example shows how to use ConfigurationProperty constructor to instantiate a configuration-property object.  \n  \n [!code-vb[System.Configuration.ConfigurationProperty#3](~/add/codesnippet/visualbasic/a0692de7-6e52-4b5f-8022-_1.vb)]\n [!code-cs[System.Configuration.ConfigurationProperty#3](~/add/codesnippet/csharp/a0692de7-6e52-4b5f-8022-_1.cs)]"
  syntax:
    content: public ConfigurationProperty (string name, Type type, object defaultValue, System.Configuration.ConfigurationPropertyOptions options);
    parameters:
    - id: name
      type: System.String
      description: "The name of the configuration entity."
    - id: type
      type: System.Type
      description: "The type of the configuration entity."
    - id: defaultValue
      type: System.Object
      description: "The default value of the configuration entity."
    - id: options
      type: System.Configuration.ConfigurationPropertyOptions
      description: "One of the <xref href=&quot;System.Configuration.ConfigurationPropertyOptions&quot;></xref> enumeration values."
  overload: System.Configuration.ConfigurationProperty.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions)
  id: '#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions)'
  parent: System.Configuration.ConfigurationProperty
  langs:
  - csharp
  name: ConfigurationProperty(String,Type,Object,TypeConverter,ConfigurationValidatorBase,ConfigurationPropertyOptions)
  nameWithType: ConfigurationProperty.ConfigurationProperty(String,Type,Object,TypeConverter,ConfigurationValidatorBase,ConfigurationPropertyOptions)
  fullName: System.Configuration.ConfigurationProperty.ConfigurationProperty(String,Type,Object,TypeConverter,ConfigurationValidatorBase,ConfigurationPropertyOptions)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Initializes a new instance of the <xref href=&quot;System.Configuration.ConfigurationProperty&quot;></xref> class."
  remarks: ''
  example:
  - "The following code example shows the kind of parameters to use when calling the ConfigurationProperty constructor.  \n  \n [!code-vb[System.Configuration.ConfigurationProperty#4](~/add/codesnippet/visualbasic/de7073e5-8450-4110-b4ea-_1.vb)]\n [!code-cs[System.Configuration.ConfigurationProperty#4](~/add/codesnippet/csharp/de7073e5-8450-4110-b4ea-_1.cs)]"
  syntax:
    content: public ConfigurationProperty (string name, Type type, object defaultValue, System.ComponentModel.TypeConverter typeConverter, System.Configuration.ConfigurationValidatorBase validator, System.Configuration.ConfigurationPropertyOptions options);
    parameters:
    - id: name
      type: System.String
      description: "The name of the configuration entity."
    - id: type
      type: System.Type
      description: "The type of the configuration entity."
    - id: defaultValue
      type: System.Object
      description: "The default value of the configuration entity."
    - id: typeConverter
      type: System.ComponentModel.TypeConverter
      description: "The type of the converter to apply."
    - id: validator
      type: System.Configuration.ConfigurationValidatorBase
      description: "The validator to use."
    - id: options
      type: System.Configuration.ConfigurationPropertyOptions
      description: "One of the <xref href=&quot;System.Configuration.ConfigurationPropertyOptions&quot;></xref> enumeration values."
  overload: System.Configuration.ConfigurationProperty.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions,System.String)
  id: '#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions,System.String)'
  parent: System.Configuration.ConfigurationProperty
  langs:
  - csharp
  name: ConfigurationProperty(String,Type,Object,TypeConverter,ConfigurationValidatorBase,ConfigurationPropertyOptions,String)
  nameWithType: ConfigurationProperty.ConfigurationProperty(String,Type,Object,TypeConverter,ConfigurationValidatorBase,ConfigurationPropertyOptions,String)
  fullName: System.Configuration.ConfigurationProperty.ConfigurationProperty(String,Type,Object,TypeConverter,ConfigurationValidatorBase,ConfigurationPropertyOptions,String)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Initializes a new instance of the <xref href=&quot;System.Configuration.ConfigurationProperty&quot;></xref> class."
  remarks: ''
  example:
  - "The following code example shows how to use the ConfigurationProperty constructor to instantiate a configuration-property object.  \n  \n [!code-vb[System.Configuration.ConfigurationProperty#4](~/add/codesnippet/visualbasic/bcd69442-9320-41b3-8024-_1.vb)]\n [!code-cs[System.Configuration.ConfigurationProperty#4](~/add/codesnippet/csharp/bcd69442-9320-41b3-8024-_1.cs)]"
  syntax:
    content: public ConfigurationProperty (string name, Type type, object defaultValue, System.ComponentModel.TypeConverter typeConverter, System.Configuration.ConfigurationValidatorBase validator, System.Configuration.ConfigurationPropertyOptions options, string description);
    parameters:
    - id: name
      type: System.String
      description: "The name of the configuration entity."
    - id: type
      type: System.Type
      description: "The type of the configuration entity."
    - id: defaultValue
      type: System.Object
      description: "The default value of the configuration entity."
    - id: typeConverter
      type: System.ComponentModel.TypeConverter
      description: "The type of the converter to apply."
    - id: validator
      type: System.Configuration.ConfigurationValidatorBase
      description: "The validator to use."
    - id: options
      type: System.Configuration.ConfigurationPropertyOptions
      description: "One of the <xref href=&quot;System.Configuration.ConfigurationPropertyOptions&quot;></xref> enumeration values."
    - id: description
      type: System.String
      description: "The description of the configuration entity."
  overload: System.Configuration.ConfigurationProperty.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationProperty.Converter
  id: Converter
  parent: System.Configuration.ConfigurationProperty
  langs:
  - csharp
  name: Converter
  nameWithType: ConfigurationProperty.Converter
  fullName: System.Configuration.ConfigurationProperty.Converter
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Gets the <xref href=&quot;System.ComponentModel.TypeConverter&quot;></xref> used to convert this <xref href=&quot;System.Configuration.ConfigurationProperty&quot;></xref> into an XML representation for writing to the configuration file."
  remarks: ''
  example:
  - "The following code example shows how to use the Converter property to get the <xref:System.ComponentModel.TypeConverter> for a specified configuration-property object.  \n  \n [!code-vb[System.Configuration.ConfigurationProperty#5](~/add/codesnippet/visualbasic/p-system.configuration.c_43_1.vb)]\n [!code-cs[System.Configuration.ConfigurationProperty#5](~/add/codesnippet/csharp/p-system.configuration.c_43_1.cs)]"
  syntax:
    content: public System.ComponentModel.TypeConverter Converter { get; }
    return:
      type: System.ComponentModel.TypeConverter
      description: "A <xref href=&quot;System.ComponentModel.TypeConverter&quot;></xref> used to convert this <xref href=&quot;System.Configuration.ConfigurationProperty&quot;></xref> into an XML representation for writing to the configuration file."
  overload: System.Configuration.ConfigurationProperty.Converter*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "This <xref href=&quot;System.Configuration.ConfigurationProperty&quot;></xref> cannot be converted."
  platform:
  - net462
- uid: System.Configuration.ConfigurationProperty.DefaultValue
  id: DefaultValue
  parent: System.Configuration.ConfigurationProperty
  langs:
  - csharp
  name: DefaultValue
  nameWithType: ConfigurationProperty.DefaultValue
  fullName: System.Configuration.ConfigurationProperty.DefaultValue
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Gets the default value for this <xref href=&quot;System.Configuration.ConfigurationProperty&quot;></xref> property."
  remarks: "The default value of a new <xref:System.Configuration.ConfigurationProperty> object is passed into its constructor. That same object will be returned by the DefaultValue property."
  example:
  - "The following code example shows how to get the DefaultValue for a specified property.  \n  \n [!code-vb[System.Configuration.ConfigurationProperty#6](~/add/codesnippet/visualbasic/p-system.configuration.c_24_1.vb)]\n [!code-cs[System.Configuration.ConfigurationProperty#6](~/add/codesnippet/csharp/p-system.configuration.c_24_1.cs)]"
  syntax:
    content: public object DefaultValue { get; }
    return:
      type: System.Object
      description: "An <xref:System.Object> that can be cast to the type specified by the <xref:System.Configuration.ConfigurationProperty.Type*> property."
  overload: System.Configuration.ConfigurationProperty.DefaultValue*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationProperty.Description
  id: Description
  parent: System.Configuration.ConfigurationProperty
  langs:
  - csharp
  name: Description
  nameWithType: ConfigurationProperty.Description
  fullName: System.Configuration.ConfigurationProperty.Description
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Gets the description associated with the <xref href=&quot;System.Configuration.ConfigurationProperty&quot;></xref>."
  remarks: ''
  example:
  - "The following code example shows how to get the Description for a specified property.  \n  \n [!code-vb[System.Configuration.ConfigurationProperty#11](~/add/codesnippet/visualbasic/p-system.configuration.c_32_1.vb)]\n [!code-cs[System.Configuration.ConfigurationProperty#11](~/add/codesnippet/csharp/p-system.configuration.c_32_1.cs)]"
  syntax:
    content: public string Description { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref> value that describes the property."
  overload: System.Configuration.ConfigurationProperty.Description*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationProperty.IsAssemblyStringTransformationRequired
  id: IsAssemblyStringTransformationRequired
  parent: System.Configuration.ConfigurationProperty
  langs:
  - csharp
  name: IsAssemblyStringTransformationRequired
  nameWithType: ConfigurationProperty.IsAssemblyStringTransformationRequired
  fullName: System.Configuration.ConfigurationProperty.IsAssemblyStringTransformationRequired
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Indicates whether the assembly name for the configuration property requires transformation when it is serialized for an earlier version of the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]."
  remarks: "You use <xref:System.Configuration.ConfigurationPropertyOptions> to set this property when you call a constructor that includes a <xref:System.Configuration.ConfigurationPropertyOptions> parameter. This value is ignored if the property does not contain an assembly name string."
  syntax:
    content: public bool IsAssemblyStringTransformationRequired { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the property requires assembly name transformation; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Configuration.ConfigurationProperty.IsAssemblyStringTransformationRequired*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationProperty.IsDefaultCollection
  id: IsDefaultCollection
  parent: System.Configuration.ConfigurationProperty
  langs:
  - csharp
  name: IsDefaultCollection
  nameWithType: ConfigurationProperty.IsDefaultCollection
  fullName: System.Configuration.ConfigurationProperty.IsDefaultCollection
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Gets a value that indicates whether the property is the default collection of an element."
  remarks: "This value is ignored if the property is not a collection."
  syntax:
    content: public bool IsDefaultCollection { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the property is the default collection of an element; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Configuration.ConfigurationProperty.IsDefaultCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationProperty.IsKey
  id: IsKey
  parent: System.Configuration.ConfigurationProperty
  langs:
  - csharp
  name: IsKey
  nameWithType: ConfigurationProperty.IsKey
  fullName: System.Configuration.ConfigurationProperty.IsKey
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Gets a value indicating whether this <xref href=&quot;System.Configuration.ConfigurationProperty&quot;></xref> is the key for the containing <xref href=&quot;System.Configuration.ConfigurationElement&quot;></xref> object."
  remarks: "You can define a new <xref:System.Configuration.ConfigurationProperty> object to be the key for the containing element when implementing the <xref:System.Configuration.ConfigurationElement> element. If this flag is not used, the IsKey property will return `false`."
  example:
  - "The following code example shows how to get the IsKey property for a specified property.  \n  \n [!code-vb[System.Configuration.ConfigurationProperty#7](~/add/codesnippet/visualbasic/p-system.configuration.c_30_1.vb)]\n [!code-cs[System.Configuration.ConfigurationProperty#7](~/add/codesnippet/csharp/p-system.configuration.c_30_1.cs)]"
  syntax:
    content: public bool IsKey { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if this <xref href=&quot;System.Configuration.ConfigurationProperty&quot;></xref> object is the key for the containing element; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Configuration.ConfigurationProperty.IsKey*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationProperty.IsRequired
  id: IsRequired
  parent: System.Configuration.ConfigurationProperty
  langs:
  - csharp
  name: IsRequired
  nameWithType: ConfigurationProperty.IsRequired
  fullName: System.Configuration.ConfigurationProperty.IsRequired
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Gets a value indicating whether this <xref href=&quot;System.Configuration.ConfigurationProperty&quot;></xref> is required."
  remarks: ''
  example:
  - "The following code example shows how to get the IsRequired property value for a specified configuration-property object.  \n  \n [!code-vb[System.Configuration.ConfigurationProperty#8](~/add/codesnippet/visualbasic/p-system.configuration.c_14_1.vb)]\n [!code-cs[System.Configuration.ConfigurationProperty#8](~/add/codesnippet/csharp/p-system.configuration.c_14_1.cs)]"
  syntax:
    content: public bool IsRequired { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref href=&quot;System.Configuration.ConfigurationProperty&quot;></xref> is required; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>. The default is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Configuration.ConfigurationProperty.IsRequired*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationProperty.IsTypeStringTransformationRequired
  id: IsTypeStringTransformationRequired
  parent: System.Configuration.ConfigurationProperty
  langs:
  - csharp
  name: IsTypeStringTransformationRequired
  nameWithType: ConfigurationProperty.IsTypeStringTransformationRequired
  fullName: System.Configuration.ConfigurationProperty.IsTypeStringTransformationRequired
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Indicates whether the type name for the configuration property requires transformation when it is serialized for an earlier version of the [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]."
  remarks: "You use <xref:System.Configuration.ConfigurationPropertyOptions> to set this property when you call a constructor that includes a <xref:System.Configuration.ConfigurationPropertyOptions> parameter. This value is ignored if the property does not contain a type-name string."
  syntax:
    content: public bool IsTypeStringTransformationRequired { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the property requires type-name transformation; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Configuration.ConfigurationProperty.IsTypeStringTransformationRequired*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationProperty.IsVersionCheckRequired
  id: IsVersionCheckRequired
  parent: System.Configuration.ConfigurationProperty
  langs:
  - csharp
  name: IsVersionCheckRequired
  nameWithType: ConfigurationProperty.IsVersionCheckRequired
  fullName: System.Configuration.ConfigurationProperty.IsVersionCheckRequired
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Indicates whether the configuration property&quot;s parent configuration section is queried at serialization time to determine whether the configuration property should be serialized into XML."
  remarks: "If you are creating a configuration property for the [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)] or later versions, and if the property value should not be serialized to XML when an earlier version of the framework is targeted, set this property to `true`.       You use <xref:System.Configuration.ConfigurationPropertyOptions> to set this property when you call a constructor that includes a <xref:System.Configuration.ConfigurationPropertyOptions> parameter."
  syntax:
    content: public bool IsVersionCheckRequired { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the parent configuration section should be queried; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Configuration.ConfigurationProperty.IsVersionCheckRequired*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationProperty.Name
  id: Name
  parent: System.Configuration.ConfigurationProperty
  langs:
  - csharp
  name: Name
  nameWithType: ConfigurationProperty.Name
  fullName: System.Configuration.ConfigurationProperty.Name
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Gets the name of this <xref href=&quot;System.Configuration.ConfigurationProperty&quot;></xref>."
  remarks: "If an instance of a <xref:System.Configuration.ConfigurationProperty> is a default collection, its name will be automatically defined to be an empty string."
  example:
  - "The following code example shows how to get the Name for a specified property.  \n  \n [!code-vb[System.Configuration.ConfigurationProperty#9](~/add/codesnippet/visualbasic/p-system.configuration.c_21_1.vb)]\n [!code-cs[System.Configuration.ConfigurationProperty#9](~/add/codesnippet/csharp/p-system.configuration.c_21_1.cs)]"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "The name of the <xref href=&quot;System.Configuration.ConfigurationProperty&quot;></xref>."
  overload: System.Configuration.ConfigurationProperty.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationProperty.Type
  id: Type
  parent: System.Configuration.ConfigurationProperty
  langs:
  - csharp
  name: Type
  nameWithType: ConfigurationProperty.Type
  fullName: System.Configuration.ConfigurationProperty.Type
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Gets the type of this <xref href=&quot;System.Configuration.ConfigurationProperty&quot;></xref> object."
  remarks: "Use `Type` to determine the fully qualified namespace and class name for this derived instance of <xref:System.Configuration.ConfigurationProperty>."
  example:
  - "The following example shows how to get the Type property value for a specified configuration-property object.  \n  \n [!code-vb[System.Configuration.ConfigurationProperty#10](~/add/codesnippet/visualbasic/p-system.configuration.c_50_1.vb)]\n [!code-cs[System.Configuration.ConfigurationProperty#10](~/add/codesnippet/csharp/p-system.configuration.c_50_1.cs)]"
  syntax:
    content: public Type Type { get; }
    return:
      type: System.Type
      description: "A <xref:System.Type> representing the type of this <xref href=&quot;System.Configuration.ConfigurationProperty&quot;></xref> object."
  overload: System.Configuration.ConfigurationProperty.Type*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationProperty.Validator
  id: Validator
  parent: System.Configuration.ConfigurationProperty
  langs:
  - csharp
  name: Validator
  nameWithType: ConfigurationProperty.Validator
  fullName: System.Configuration.ConfigurationProperty.Validator
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Gets the <xref href=&quot;System.Configuration.ConfigurationValidatorAttribute&quot;></xref>, which is used to validate this <xref href=&quot;System.Configuration.ConfigurationProperty&quot;></xref> object."
  remarks: ''
  example:
  - "The following code example shows how to get the Validator for a specified property.  \n  \n [!code-vb[System.Configuration.ConfigurationProperty#12](~/add/codesnippet/visualbasic/p-system.configuration.c_49_1.vb)]\n [!code-cs[System.Configuration.ConfigurationProperty#12](~/add/codesnippet/csharp/p-system.configuration.c_49_1.cs)]"
  syntax:
    content: public System.Configuration.ConfigurationValidatorBase Validator { get; }
    return:
      type: System.Configuration.ConfigurationValidatorBase
      description: "The <xref href=&quot;System.Configuration.ConfigurationValidatorBase&quot;></xref> validator, which is used to validate this <xref href=&quot;System.Configuration.ConfigurationProperty&quot;></xref>."
  overload: System.Configuration.ConfigurationProperty.Validator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type)
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: ConfigurationProperty(String,Type)
  nameWithType: ConfigurationProperty.ConfigurationProperty(String,Type)
  fullName: System.Configuration.ConfigurationProperty.ConfigurationProperty(String,Type)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object)
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: ConfigurationProperty(String,Type,Object)
  nameWithType: ConfigurationProperty.ConfigurationProperty(String,Type,Object)
  fullName: System.Configuration.ConfigurationProperty.ConfigurationProperty(String,Type,Object)
- uid: System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.Configuration.ConfigurationPropertyOptions)
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: ConfigurationProperty(String,Type,Object,ConfigurationPropertyOptions)
  nameWithType: ConfigurationProperty.ConfigurationProperty(String,Type,Object,ConfigurationPropertyOptions)
  fullName: System.Configuration.ConfigurationProperty.ConfigurationProperty(String,Type,Object,ConfigurationPropertyOptions)
- uid: System.Configuration.ConfigurationPropertyOptions
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyOptions
  nameWithType: ConfigurationPropertyOptions
  fullName: System.Configuration.ConfigurationPropertyOptions
- uid: System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions)
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: ConfigurationProperty(String,Type,Object,TypeConverter,ConfigurationValidatorBase,ConfigurationPropertyOptions)
  nameWithType: ConfigurationProperty.ConfigurationProperty(String,Type,Object,TypeConverter,ConfigurationValidatorBase,ConfigurationPropertyOptions)
  fullName: System.Configuration.ConfigurationProperty.ConfigurationProperty(String,Type,Object,TypeConverter,ConfigurationValidatorBase,ConfigurationPropertyOptions)
- uid: System.ComponentModel.TypeConverter
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter
  nameWithType: TypeConverter
  fullName: System.ComponentModel.TypeConverter
- uid: System.Configuration.ConfigurationValidatorBase
  parent: System.Configuration
  isExternal: false
  name: ConfigurationValidatorBase
  nameWithType: ConfigurationValidatorBase
  fullName: System.Configuration.ConfigurationValidatorBase
- uid: System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions,System.String)
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: ConfigurationProperty(String,Type,Object,TypeConverter,ConfigurationValidatorBase,ConfigurationPropertyOptions,String)
  nameWithType: ConfigurationProperty.ConfigurationProperty(String,Type,Object,TypeConverter,ConfigurationValidatorBase,ConfigurationPropertyOptions,String)
  fullName: System.Configuration.ConfigurationProperty.ConfigurationProperty(String,Type,Object,TypeConverter,ConfigurationValidatorBase,ConfigurationPropertyOptions,String)
- uid: System.Configuration.ConfigurationProperty.Converter
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: Converter
  nameWithType: ConfigurationProperty.Converter
  fullName: System.Configuration.ConfigurationProperty.Converter
- uid: System.Configuration.ConfigurationProperty.DefaultValue
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: DefaultValue
  nameWithType: ConfigurationProperty.DefaultValue
  fullName: System.Configuration.ConfigurationProperty.DefaultValue
- uid: System.Configuration.ConfigurationProperty.Description
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: Description
  nameWithType: ConfigurationProperty.Description
  fullName: System.Configuration.ConfigurationProperty.Description
- uid: System.Configuration.ConfigurationProperty.IsAssemblyStringTransformationRequired
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: IsAssemblyStringTransformationRequired
  nameWithType: ConfigurationProperty.IsAssemblyStringTransformationRequired
  fullName: System.Configuration.ConfigurationProperty.IsAssemblyStringTransformationRequired
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.ConfigurationProperty.IsDefaultCollection
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: IsDefaultCollection
  nameWithType: ConfigurationProperty.IsDefaultCollection
  fullName: System.Configuration.ConfigurationProperty.IsDefaultCollection
- uid: System.Configuration.ConfigurationProperty.IsKey
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: IsKey
  nameWithType: ConfigurationProperty.IsKey
  fullName: System.Configuration.ConfigurationProperty.IsKey
- uid: System.Configuration.ConfigurationProperty.IsRequired
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: IsRequired
  nameWithType: ConfigurationProperty.IsRequired
  fullName: System.Configuration.ConfigurationProperty.IsRequired
- uid: System.Configuration.ConfigurationProperty.IsTypeStringTransformationRequired
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: IsTypeStringTransformationRequired
  nameWithType: ConfigurationProperty.IsTypeStringTransformationRequired
  fullName: System.Configuration.ConfigurationProperty.IsTypeStringTransformationRequired
- uid: System.Configuration.ConfigurationProperty.IsVersionCheckRequired
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: IsVersionCheckRequired
  nameWithType: ConfigurationProperty.IsVersionCheckRequired
  fullName: System.Configuration.ConfigurationProperty.IsVersionCheckRequired
- uid: System.Configuration.ConfigurationProperty.Name
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: Name
  nameWithType: ConfigurationProperty.Name
  fullName: System.Configuration.ConfigurationProperty.Name
- uid: System.Configuration.ConfigurationProperty.Type
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: Type
  nameWithType: ConfigurationProperty.Type
  fullName: System.Configuration.ConfigurationProperty.Type
- uid: System.Configuration.ConfigurationProperty.Validator
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: Validator
  nameWithType: ConfigurationProperty.Validator
  fullName: System.Configuration.ConfigurationProperty.Validator
- uid: System.Configuration.ConfigurationProperty.#ctor*
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: ConfigurationProperty
  nameWithType: ConfigurationProperty.ConfigurationProperty
- uid: System.Configuration.ConfigurationProperty.Converter*
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: Converter
  nameWithType: ConfigurationProperty.Converter
- uid: System.Configuration.ConfigurationProperty.DefaultValue*
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: DefaultValue
  nameWithType: ConfigurationProperty.DefaultValue
- uid: System.Configuration.ConfigurationProperty.Description*
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: Description
  nameWithType: ConfigurationProperty.Description
- uid: System.Configuration.ConfigurationProperty.IsAssemblyStringTransformationRequired*
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: IsAssemblyStringTransformationRequired
  nameWithType: ConfigurationProperty.IsAssemblyStringTransformationRequired
- uid: System.Configuration.ConfigurationProperty.IsDefaultCollection*
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: IsDefaultCollection
  nameWithType: ConfigurationProperty.IsDefaultCollection
- uid: System.Configuration.ConfigurationProperty.IsKey*
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: IsKey
  nameWithType: ConfigurationProperty.IsKey
- uid: System.Configuration.ConfigurationProperty.IsRequired*
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: IsRequired
  nameWithType: ConfigurationProperty.IsRequired
- uid: System.Configuration.ConfigurationProperty.IsTypeStringTransformationRequired*
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: IsTypeStringTransformationRequired
  nameWithType: ConfigurationProperty.IsTypeStringTransformationRequired
- uid: System.Configuration.ConfigurationProperty.IsVersionCheckRequired*
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: IsVersionCheckRequired
  nameWithType: ConfigurationProperty.IsVersionCheckRequired
- uid: System.Configuration.ConfigurationProperty.Name*
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: Name
  nameWithType: ConfigurationProperty.Name
- uid: System.Configuration.ConfigurationProperty.Type*
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: Type
  nameWithType: ConfigurationProperty.Type
- uid: System.Configuration.ConfigurationProperty.Validator*
  parent: System.Configuration.ConfigurationProperty
  isExternal: false
  name: Validator
  nameWithType: ConfigurationProperty.Validator
