### YamlMime:ManagedReference
items:
- uid: System.Data.SqlTypes.SqlSingle
  id: SqlSingle
  children:
  - System.Data.SqlTypes.SqlSingle.#ctor(System.Double)
  - System.Data.SqlTypes.SqlSingle.#ctor(System.Single)
  - System.Data.SqlTypes.SqlSingle.Add(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  - System.Data.SqlTypes.SqlSingle.CompareTo(System.Data.SqlTypes.SqlSingle)
  - System.Data.SqlTypes.SqlSingle.CompareTo(System.Object)
  - System.Data.SqlTypes.SqlSingle.Divide(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  - System.Data.SqlTypes.SqlSingle.Equals(System.Object)
  - System.Data.SqlTypes.SqlSingle.Equals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  - System.Data.SqlTypes.SqlSingle.GetHashCode
  - System.Data.SqlTypes.SqlSingle.GetXsdType(System.Xml.Schema.XmlSchemaSet)
  - System.Data.SqlTypes.SqlSingle.GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  - System.Data.SqlTypes.SqlSingle.GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  - System.Data.SqlTypes.SqlSingle.IsNull
  - System.Data.SqlTypes.SqlSingle.LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  - System.Data.SqlTypes.SqlSingle.LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  - System.Data.SqlTypes.SqlSingle.MaxValue
  - System.Data.SqlTypes.SqlSingle.MinValue
  - System.Data.SqlTypes.SqlSingle.Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  - System.Data.SqlTypes.SqlSingle.NotEquals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  - System.Data.SqlTypes.SqlSingle.Null
  - System.Data.SqlTypes.SqlSingle.op_Addition(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  - System.Data.SqlTypes.SqlSingle.op_Division(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  - System.Data.SqlTypes.SqlSingle.op_Equality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  - System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlSingle)
  - System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlSingle)
  - System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlSingle to System.Single)
  - System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlSingle)
  - System.Data.SqlTypes.SqlSingle.op_GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  - System.Data.SqlTypes.SqlSingle.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  - System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlByte)
  - System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlDecimal)
  - System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt16)
  - System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt32)
  - System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt64)
  - System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlMoney)
  - System.Data.SqlTypes.SqlSingle.op_Implicit(System.Single)
  - System.Data.SqlTypes.SqlSingle.op_Inequality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  - System.Data.SqlTypes.SqlSingle.op_LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  - System.Data.SqlTypes.SqlSingle.op_LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  - System.Data.SqlTypes.SqlSingle.op_Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  - System.Data.SqlTypes.SqlSingle.op_Subtraction(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  - System.Data.SqlTypes.SqlSingle.op_UnaryNegation(System.Data.SqlTypes.SqlSingle)
  - System.Data.SqlTypes.SqlSingle.Parse(System.String)
  - System.Data.SqlTypes.SqlSingle.Subtract(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  - System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#GetSchema
  - System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  - System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  - System.Data.SqlTypes.SqlSingle.ToSqlBoolean
  - System.Data.SqlTypes.SqlSingle.ToSqlByte
  - System.Data.SqlTypes.SqlSingle.ToSqlDecimal
  - System.Data.SqlTypes.SqlSingle.ToSqlDouble
  - System.Data.SqlTypes.SqlSingle.ToSqlInt16
  - System.Data.SqlTypes.SqlSingle.ToSqlInt32
  - System.Data.SqlTypes.SqlSingle.ToSqlInt64
  - System.Data.SqlTypes.SqlSingle.ToSqlMoney
  - System.Data.SqlTypes.SqlSingle.ToSqlString
  - System.Data.SqlTypes.SqlSingle.ToString
  - System.Data.SqlTypes.SqlSingle.Value
  - System.Data.SqlTypes.SqlSingle.Zero
  langs:
  - csharp
  name: SqlSingle
  nameWithType: SqlSingle
  fullName: System.Data.SqlTypes.SqlSingle
  type: Struct
  summary: "Representa um ponto de vírgula flutuante number dentro do intervalo de - 3.40E 3.40E através de +38 +38 ser armazenados na ou obtidos a partir de uma base de dados."
  remarks: "É mapeado para o tipo de dados reais do SQL Server. Para obter mais informações, consulte <xref:System.Data.SqlTypes>ou SQL Server Books Online.</xref:System.Data.SqlTypes>"
  syntax:
    content: >-
      [System.Xml.Serialization.XmlSchemaProvider("GetXsdType")]

      public struct SqlSingle : IComparable, System.Data.SqlTypes.INullable, System.Xml.Serialization.IXmlSerializable
  inheritance:
  - System.ValueType
  implements:
  - System.Data.SqlTypes.INullable
  - System.IComparable
  - System.Xml.Serialization.IXmlSerializable
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.#ctor(System.Double)
  id: '#ctor(System.Double)'
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: SqlSingle(Double)
  nameWithType: SqlSingle.SqlSingle(Double)
  fullName: System.Data.SqlTypes.SqlSingle.SqlSingle(Double)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura utilizando o parâmetro duplo fornecido."
  syntax:
    content: public SqlSingle (double value);
    parameters:
    - id: value
      type: System.Double
      description: "Um valor duplo que será utilizado como o <xref:System.Data.SqlTypes.SqlSingle.Value*>da nova <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura.</xref:System.Data.SqlTypes.SqlSingle.Value*>"
  overload: System.Data.SqlTypes.SqlSingle.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.#ctor(System.Single)
  id: '#ctor(System.Single)'
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: SqlSingle(Single)
  nameWithType: SqlSingle.SqlSingle(Single)
  fullName: System.Data.SqlTypes.SqlSingle.SqlSingle(Single)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura."
  syntax:
    content: public SqlSingle (float value);
    parameters:
    - id: value
      type: System.Single
      description: "Uma vírgula flutuante do ponto de número que será utilizado como o <xref:System.Data.SqlTypes.SqlSingle.Value*>da nova <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura.</xref:System.Data.SqlTypes.SqlSingle.Value*>"
  overload: System.Data.SqlTypes.SqlSingle.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.Add(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  id: Add(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: Add(SqlSingle,SqlSingle)
  nameWithType: SqlSingle.Add(SqlSingle,SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.Add(SqlSingle,SqlSingle)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Calcula a soma de dois especificado <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estruturas."
  syntax:
    content: public static System.Data.SqlTypes.SqlSingle Add (System.Data.SqlTypes.SqlSingle x, System.Data.SqlTypes.SqlSingle y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura."
    - id: y
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura."
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura que contém a soma de dois especificado <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estruturas."
  overload: System.Data.SqlTypes.SqlSingle.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.CompareTo(System.Data.SqlTypes.SqlSingle)
  id: CompareTo(System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: CompareTo(SqlSingle)
  nameWithType: SqlSingle.CompareTo(SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.CompareTo(SqlSingle)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Compara este <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> instância para o fornecido <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> e devolve uma indicação de que os respetivos valores relativos."
  syntax:
    content: public int CompareTo (System.Data.SqlTypes.SqlSingle value);
    parameters:
    - id: value
      type: System.Data.SqlTypes.SqlSingle
      description: "O <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> a ser comparada."
    return:
      type: System.Int32
      description: "Um número assinado que indica valores relativos da instância e o objeto.       <table><thead><tr><th> Valor devolvido       </th><th> Condição       </th></tr></thead><tbody><tr><td> Menor que zero       </td><td> Esta instância é menor que o objeto.       </td></tr><tr><td> Zero       </td><td> Esta instância é o mesmo que o objeto.       </td></tr><tr><td> Maior que zero       </td><td> Esta instância é maior do que o objeto - ou - o objeto é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)       </td></tr></tbody></table>"
  overload: System.Data.SqlTypes.SqlSingle.CompareTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: CompareTo(Object)
  nameWithType: SqlSingle.CompareTo(Object)
  fullName: System.Data.SqlTypes.SqlSingle.CompareTo(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Compara este <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> instância para o fornecido <xref:System.Object>e devolve uma indicação de que os respetivos valores relativos.</xref:System.Object>"
  syntax:
    content: public int CompareTo (object value);
    parameters:
    - id: value
      type: System.Object
      description: "O <xref:System.Object>a ser comparada.</xref:System.Object>"
    return:
      type: System.Int32
      description: "Um número assinado que indica valores relativos da instância e o objeto.       <table><thead><tr><th> Valor devolvido       </th><th> Condição       </th></tr></thead><tbody><tr><td> Menor que zero       </td><td> Esta instância é menor que o objeto.       </td></tr><tr><td> Zero       </td><td> Esta instância é o mesmo que o objeto.       </td></tr><tr><td> Maior que zero       </td><td> Esta instância é maior do que o objeto - ou - o objeto é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)       </td></tr></tbody></table>"
  overload: System.Data.SqlTypes.SqlSingle.CompareTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.Divide(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  id: Divide(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: Divide(SqlSingle,SqlSingle)
  nameWithType: SqlSingle.Divide(SqlSingle,SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.Divide(SqlSingle,SqlSingle)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Divide a primeira <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura pelo segundo."
  syntax:
    content: public static System.Data.SqlTypes.SqlSingle Divide (System.Data.SqlTypes.SqlSingle x, System.Data.SqlTypes.SqlSingle y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura."
    - id: y
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura."
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref uid=&quot;langword_csharp_SqlInt64&quot; name=&quot;SqlInt64&quot; href=&quot;&quot;> </xref> estrutura que contém o resultado da divisão."
  overload: System.Data.SqlTypes.SqlSingle.Divide*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: SqlSingle.Equals(Object)
  fullName: System.Data.SqlTypes.SqlSingle.Equals(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Compara o parâmetro de objeto fornecido para o <xref:System.Data.SqlTypes.SqlSingle.Value*>propriedade o <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> objeto.</xref:System.Data.SqlTypes.SqlSingle.Value*>"
  syntax:
    content: public override bool Equals (object value);
    parameters:
    - id: value
      type: System.Object
      description: "O objeto a ser comparada."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o objeto é uma instância de <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> e os dois são iguais. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlSingle.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.Equals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  id: Equals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: Equals(SqlSingle,SqlSingle)
  nameWithType: SqlSingle.Equals(SqlSingle,SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.Equals(SqlSingle,SqlSingle)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Efetua uma comparação dos dois lógica <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> parâmetros para determinar se estes são iguais."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean Equals (System.Data.SqlTypes.SqlSingle x, System.Data.SqlTypes.SqlSingle y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura."
    - id: y
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os dois valores são iguais. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Se qualquer instância for nula, o <xref uid=&quot;langword_csharp_SqlSingle&quot; name=&quot;SqlSingle&quot; href=&quot;&quot;> </xref> será nulo."
  overload: System.Data.SqlTypes.SqlSingle.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.GetHashCode
  id: GetHashCode
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: SqlSingle.GetHashCode()
  fullName: System.Data.SqlTypes.SqlSingle.GetHashCode()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Obtém o código hash para esta instância."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Um código hash de número inteiro com sinal de 32 bits."
  overload: System.Data.SqlTypes.SqlSingle.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.GetXsdType(System.Xml.Schema.XmlSchemaSet)
  id: GetXsdType(System.Xml.Schema.XmlSchemaSet)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: GetXsdType(XmlSchemaSet)
  nameWithType: SqlSingle.GetXsdType(XmlSchemaSet)
  fullName: System.Data.SqlTypes.SqlSingle.GetXsdType(XmlSchemaSet)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Devolve o idioma de definição de esquema XML (XSD) de especificado <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  syntax:
    content: public static System.Xml.XmlQualifiedName GetXsdType (System.Xml.Schema.XmlSchemaSet schemaSet);
    parameters:
    - id: schemaSet
      type: System.Xml.Schema.XmlSchemaSet
      description: "A <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;></xref>."
    return:
      type: System.Xml.XmlQualifiedName
      description: "A <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> valor que indica o XSD especificado de <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlSingle.GetXsdType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  id: GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: GreaterThan(SqlSingle,SqlSingle)
  nameWithType: SqlSingle.GreaterThan(SqlSingle,SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.GreaterThan(SqlSingle,SqlSingle)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Efetua uma comparação dos dois lógica <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> operandos para determinar se a primeira é maior do que o segundo."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean GreaterThan (System.Data.SqlTypes.SqlSingle x, System.Data.SqlTypes.SqlSingle y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura."
    - id: y
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> que <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> se a primeira instância for maior do que a segunda instância. Caso contrário, <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>. Se a instância do <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> é nulo, o <xref:System.Data.SqlTypes.SqlBoolean.Value*>do <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> será <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlSingle.GreaterThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  id: GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: GreaterThanOrEqual(SqlSingle,SqlSingle)
  nameWithType: SqlSingle.GreaterThanOrEqual(SqlSingle,SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.GreaterThanOrEqual(SqlSingle,SqlSingle)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Efetua uma comparação lógica dois <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estruturas para determinar se a primeira é igual ou superior para o segundo."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean GreaterThanOrEqual (System.Data.SqlTypes.SqlSingle x, System.Data.SqlTypes.SqlSingle y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura."
    - id: y
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> que <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> se a primeira instância é maior que ou igual a segunda instância. Caso contrário, <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>. Se a instância do <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> é nulo, o <xref:System.Data.SqlTypes.SqlBoolean.Value*>do <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> será <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlSingle.GreaterThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.IsNull
  id: IsNull
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: IsNull
  nameWithType: SqlSingle.IsNull
  fullName: System.Data.SqlTypes.SqlSingle.IsNull
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Indica se esta <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura é nula."
  remarks: "Para obter mais informações, consulte [processamento de valores nulos](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool IsNull { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>se nulo. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlSingle.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  id: LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: LessThan(SqlSingle,SqlSingle)
  nameWithType: SqlSingle.LessThan(SqlSingle,SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.LessThan(SqlSingle,SqlSingle)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Efetua uma comparação dos dois lógica <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> parâmetros para determinar se a primeira é menor que o segundo."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean LessThan (System.Data.SqlTypes.SqlSingle x, System.Data.SqlTypes.SqlSingle y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura."
    - id: y
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> que <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> se a primeira instância for menor do que a segunda instância. Caso contrário, <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>. Se a instância do <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> é nulo, o <xref:System.Data.SqlTypes.SqlBoolean.Value*>do <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> será <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlSingle.LessThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  id: LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: LessThanOrEqual(SqlSingle,SqlSingle)
  nameWithType: SqlSingle.LessThanOrEqual(SqlSingle,SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.LessThanOrEqual(SqlSingle,SqlSingle)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Efetua uma comparação dos dois lógica <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> parâmetros para determinar se a primeira é menor ou igual a segunda."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean LessThanOrEqual (System.Data.SqlTypes.SqlSingle x, System.Data.SqlTypes.SqlSingle y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura."
    - id: y
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> que <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> se a primeira instância é menor ou igual a segunda instância. Caso contrário, <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>. Se a instância do <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> é nulo, o <xref:System.Data.SqlTypes.SqlBoolean.Value*>do <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> será <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlSingle.LessThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.MaxValue
  id: MaxValue
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: MaxValue
  nameWithType: SqlSingle.MaxValue
  fullName: System.Data.SqlTypes.SqlSingle.MaxValue
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Representa o valor máximo que pode ser atribuído ao <xref:System.Data.SqlTypes.SqlSingle.Value*>propriedade de uma ocorrência da <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> classe</xref:System.Data.SqlTypes.SqlSingle.Value*>"
  remarks: "O valor deste constante é 3.40E + 38."
  syntax:
    content: public static readonly System.Data.SqlTypes.SqlSingle MaxValue;
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.MinValue
  id: MinValue
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: MinValue
  nameWithType: SqlSingle.MinValue
  fullName: System.Data.SqlTypes.SqlSingle.MinValue
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Representa o valor mínimo que pode ser atribuído a <xref:System.Data.SqlTypes.SqlSingle.Value*>propriedade de uma ocorrência da <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> classe</xref:System.Data.SqlTypes.SqlSingle.Value*>"
  remarks: "O valor deste constante é -&3;.40E +&38;."
  syntax:
    content: public static readonly System.Data.SqlTypes.SqlSingle MinValue;
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  id: Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: Multiply(SqlSingle,SqlSingle)
  nameWithType: SqlSingle.Multiply(SqlSingle,SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.Multiply(SqlSingle,SqlSingle)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Calcula o produto dos dois especificado <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estruturas."
  syntax:
    content: public static System.Data.SqlTypes.SqlSingle Multiply (System.Data.SqlTypes.SqlSingle x, System.Data.SqlTypes.SqlSingle y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura."
    - id: y
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura."
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura que contém o produto da multiplicação."
  overload: System.Data.SqlTypes.SqlSingle.Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.NotEquals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  id: NotEquals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: NotEquals(SqlSingle,SqlSingle)
  nameWithType: SqlSingle.NotEquals(SqlSingle,SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.NotEquals(SqlSingle,SqlSingle)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Efetua uma comparação dos dois lógica <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> parâmetros para determinar se estes não são iguais."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean NotEquals (System.Data.SqlTypes.SqlSingle x, System.Data.SqlTypes.SqlSingle y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura."
    - id: y
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> que <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> se duas instâncias não são iguais ou <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> se duas instâncias são iguais. Se a instância do <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> é nulo, o <xref:System.Data.SqlTypes.SqlBoolean.Value*>do <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> será <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlSingle.NotEquals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.Null
  id: "Null"
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: "Null"
  nameWithType: SqlSingle.Null
  fullName: System.Data.SqlTypes.SqlSingle.Null
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Representa um <xref href=&quot;System.DBNull&quot;> </xref> que podem ser atribuídas a esta instância do <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura."
  remarks: "Para obter mais informações, consulte [processamento de valores nulos](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static readonly System.Data.SqlTypes.SqlSingle Null;
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.op_Addition(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  id: op_Addition(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: op_Addition(SqlSingle,SqlSingle)
  nameWithType: SqlSingle.op_Addition(SqlSingle,SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.op_Addition(SqlSingle,SqlSingle)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Calcula a soma de dois especificado <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estruturas."
  syntax:
    content: public static System.Data.SqlTypes.SqlSingle op_Addition (System.Data.SqlTypes.SqlSingle x, System.Data.SqlTypes.SqlSingle y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura."
    - id: y
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura."
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura que contém a soma de dois especificado <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estruturas."
  overload: System.Data.SqlTypes.SqlSingle.op_Addition*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.op_Division(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  id: op_Division(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: op_Division(SqlSingle,SqlSingle)
  nameWithType: SqlSingle.op_Division(SqlSingle,SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.op_Division(SqlSingle,SqlSingle)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Divide a primeira <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura pelo segundo."
  syntax:
    content: public static System.Data.SqlTypes.SqlSingle op_Division (System.Data.SqlTypes.SqlSingle x, System.Data.SqlTypes.SqlSingle y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura."
    - id: y
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura."
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura que contém o resultado da divisão."
  overload: System.Data.SqlTypes.SqlSingle.op_Division*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.op_Equality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  id: op_Equality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: op_Equality(SqlSingle,SqlSingle)
  nameWithType: SqlSingle.op_Equality(SqlSingle,SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.op_Equality(SqlSingle,SqlSingle)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Efetua uma lógica comparação dos dois parâmetros SqlSingle para determinar se estes são iguais."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_Equality (System.Data.SqlTypes.SqlSingle x, System.Data.SqlTypes.SqlSingle y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura."
    - id: y
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> que <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> se duas instâncias são iguais ou <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> se duas instâncias não são iguais. Se a instância do <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> é nulo, o <xref:System.Data.SqlTypes.SqlBoolean.Value*>do <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> será <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlSingle.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlSingle)
  id: op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: op_Explicit(SqlBoolean)
  nameWithType: SqlSingle.op_Explicit(SqlBoolean)
  fullName: System.Data.SqlTypes.SqlSingle.op_Explicit(SqlBoolean)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlSingle op_Explicit (System.Data.SqlTypes.SqlBoolean x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBoolean
      description: "A adicionar."
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "A adicionar."
  overload: System.Data.SqlTypes.SqlSingle.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlSingle)
  id: op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: op_Explicit(SqlDouble)
  nameWithType: SqlSingle.op_Explicit(SqlDouble)
  fullName: System.Data.SqlTypes.SqlSingle.op_Explicit(SqlDouble)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlSingle op_Explicit (System.Data.SqlTypes.SqlDouble x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDouble
      description: "A adicionar."
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "A adicionar."
  overload: System.Data.SqlTypes.SqlSingle.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlSingle to System.Single)
  id: op_Explicit(System.Data.SqlTypes.SqlSingle to System.Single)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: op_Explicit(SqlSingle)
  nameWithType: SqlSingle.op_Explicit(SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.op_Explicit(SqlSingle)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static float op_Explicit (System.Data.SqlTypes.SqlSingle x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "A adicionar."
    return:
      type: System.Single
      description: "A adicionar."
  overload: System.Data.SqlTypes.SqlSingle.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlSingle)
  id: op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: op_Explicit(SqlString)
  nameWithType: SqlSingle.op_Explicit(SqlString)
  fullName: System.Data.SqlTypes.SqlSingle.op_Explicit(SqlString)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlSingle op_Explicit (System.Data.SqlTypes.SqlString x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlString
      description: "A adicionar."
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "A adicionar."
  overload: System.Data.SqlTypes.SqlSingle.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.op_GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  id: op_GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: op_GreaterThan(SqlSingle,SqlSingle)
  nameWithType: SqlSingle.op_GreaterThan(SqlSingle,SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.op_GreaterThan(SqlSingle,SqlSingle)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Efetua uma comparação dos dois lógica <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> operandos para determinar se a primeira é maior do que o segundo."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_GreaterThan (System.Data.SqlTypes.SqlSingle x, System.Data.SqlTypes.SqlSingle y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura."
    - id: y
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> que <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> se a primeira instância for maior do que a segunda instância. Caso contrário, <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>. Se a instância do <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> é nulo, o <xref:System.Data.SqlTypes.SqlBoolean.Value*>do <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> será <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlSingle.op_GreaterThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  id: op_GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: op_GreaterThanOrEqual(SqlSingle,SqlSingle)
  nameWithType: SqlSingle.op_GreaterThanOrEqual(SqlSingle,SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.op_GreaterThanOrEqual(SqlSingle,SqlSingle)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Efetua uma comparação lógica dois <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estruturas para determinar se a primeira é maior que ou equl para o segundo."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_GreaterThanOrEqual (System.Data.SqlTypes.SqlSingle x, System.Data.SqlTypes.SqlSingle y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura."
    - id: y
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> que <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> se a primeira instância é maior que ou igual a segunda instância. Caso contrário, <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>. Se a instância do <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> é nulo, o <xref:System.Data.SqlTypes.SqlBoolean.Value*>do <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> será <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlSingle.op_GreaterThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlByte)
  id: op_Implicit(System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: op_Implicit(SqlByte)
  nameWithType: SqlSingle.op_Implicit(SqlByte)
  fullName: System.Data.SqlTypes.SqlSingle.op_Implicit(SqlByte)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlSingle op_Implicit (System.Data.SqlTypes.SqlByte x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlByte
      description: "A adicionar."
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "A adicionar."
  overload: System.Data.SqlTypes.SqlSingle.op_Implicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlDecimal)
  id: op_Implicit(System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: op_Implicit(SqlDecimal)
  nameWithType: SqlSingle.op_Implicit(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlSingle.op_Implicit(SqlDecimal)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlSingle op_Implicit (System.Data.SqlTypes.SqlDecimal x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlDecimal
      description: "A adicionar."
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "A adicionar."
  overload: System.Data.SqlTypes.SqlSingle.op_Implicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt16)
  id: op_Implicit(System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: op_Implicit(SqlInt16)
  nameWithType: SqlSingle.op_Implicit(SqlInt16)
  fullName: System.Data.SqlTypes.SqlSingle.op_Implicit(SqlInt16)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlSingle op_Implicit (System.Data.SqlTypes.SqlInt16 x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt16
      description: "A adicionar."
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "A adicionar."
  overload: System.Data.SqlTypes.SqlSingle.op_Implicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt32)
  id: op_Implicit(System.Data.SqlTypes.SqlInt32)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: op_Implicit(SqlInt32)
  nameWithType: SqlSingle.op_Implicit(SqlInt32)
  fullName: System.Data.SqlTypes.SqlSingle.op_Implicit(SqlInt32)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlSingle op_Implicit (System.Data.SqlTypes.SqlInt32 x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt32
      description: "A adicionar."
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "A adicionar."
  overload: System.Data.SqlTypes.SqlSingle.op_Implicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt64)
  id: op_Implicit(System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: op_Implicit(SqlInt64)
  nameWithType: SqlSingle.op_Implicit(SqlInt64)
  fullName: System.Data.SqlTypes.SqlSingle.op_Implicit(SqlInt64)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlSingle op_Implicit (System.Data.SqlTypes.SqlInt64 x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlInt64
      description: "A adicionar."
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "A adicionar."
  overload: System.Data.SqlTypes.SqlSingle.op_Implicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlMoney)
  id: op_Implicit(System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: op_Implicit(SqlMoney)
  nameWithType: SqlSingle.op_Implicit(SqlMoney)
  fullName: System.Data.SqlTypes.SqlSingle.op_Implicit(SqlMoney)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlSingle op_Implicit (System.Data.SqlTypes.SqlMoney x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlMoney
      description: "A adicionar."
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "A adicionar."
  overload: System.Data.SqlTypes.SqlSingle.op_Implicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.op_Implicit(System.Single)
  id: op_Implicit(System.Single)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: op_Implicit(Single)
  nameWithType: SqlSingle.op_Implicit(Single)
  fullName: System.Data.SqlTypes.SqlSingle.op_Implicit(Single)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlSingle op_Implicit (float x);
    parameters:
    - id: x
      type: System.Single
      description: "A adicionar."
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "A adicionar."
  overload: System.Data.SqlTypes.SqlSingle.op_Implicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.op_Inequality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  id: op_Inequality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: op_Inequality(SqlSingle,SqlSingle)
  nameWithType: SqlSingle.op_Inequality(SqlSingle,SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.op_Inequality(SqlSingle,SqlSingle)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Efetua uma comparação dos dois lógica <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> parâmetros para determinar se estes não são iguais."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_Inequality (System.Data.SqlTypes.SqlSingle x, System.Data.SqlTypes.SqlSingle y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura."
    - id: y
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> que <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> se duas instâncias não são iguais ou <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> se duas instâncias são iguais. Se a instância do <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> é nulo, o <xref:System.Data.SqlTypes.SqlBoolean.Value*>do <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> será <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlSingle.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.op_LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  id: op_LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: op_LessThan(SqlSingle,SqlSingle)
  nameWithType: SqlSingle.op_LessThan(SqlSingle,SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.op_LessThan(SqlSingle,SqlSingle)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Efetua uma comparação dos dois lógica <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> parâmetros para determinar se a primeira é menor que o segundo."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_LessThan (System.Data.SqlTypes.SqlSingle x, System.Data.SqlTypes.SqlSingle y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura."
    - id: y
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> que <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> se a primeira instância for menor do que a segunda instância. Caso contrário, <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>. Se a instância do <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> é nulo, o <xref:System.Data.SqlTypes.SqlBoolean.Value*>do <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> será <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlSingle.op_LessThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.op_LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  id: op_LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: op_LessThanOrEqual(SqlSingle,SqlSingle)
  nameWithType: SqlSingle.op_LessThanOrEqual(SqlSingle,SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.op_LessThanOrEqual(SqlSingle,SqlSingle)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Efetua uma comparação dos dois lógica <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> parâmetros para determinar se a primeira é menor ou igual a segunda."
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_LessThanOrEqual (System.Data.SqlTypes.SqlSingle x, System.Data.SqlTypes.SqlSingle y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura."
    - id: y
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> que <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> se a primeira instância é menor ou igual a segunda instância. Caso contrário, <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>. Se a instância do <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> é nulo, o <xref:System.Data.SqlTypes.SqlBoolean.Value*>do <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref> será <xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref>.</xref:System.Data.SqlTypes.SqlBoolean.Value*>"
  overload: System.Data.SqlTypes.SqlSingle.op_LessThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.op_Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  id: op_Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: op_Multiply(SqlSingle,SqlSingle)
  nameWithType: SqlSingle.op_Multiply(SqlSingle,SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.op_Multiply(SqlSingle,SqlSingle)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Calcula o produto dos dois especificado <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estruturas."
  syntax:
    content: public static System.Data.SqlTypes.SqlSingle op_Multiply (System.Data.SqlTypes.SqlSingle x, System.Data.SqlTypes.SqlSingle y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura."
    - id: y
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura."
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura que contém o produto da multiplicação."
  overload: System.Data.SqlTypes.SqlSingle.op_Multiply*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.op_Subtraction(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  id: op_Subtraction(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: op_Subtraction(SqlSingle,SqlSingle)
  nameWithType: SqlSingle.op_Subtraction(SqlSingle,SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.op_Subtraction(SqlSingle,SqlSingle)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Subtrai o segundo <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura do primeiro."
  syntax:
    content: public static System.Data.SqlTypes.SqlSingle op_Subtraction (System.Data.SqlTypes.SqlSingle x, System.Data.SqlTypes.SqlSingle y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura."
    - id: y
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura."
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura que contém o resultado da subtração."
  overload: System.Data.SqlTypes.SqlSingle.op_Subtraction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.op_UnaryNegation(System.Data.SqlTypes.SqlSingle)
  id: op_UnaryNegation(System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: op_UnaryNegation(SqlSingle)
  nameWithType: SqlSingle.op_UnaryNegation(SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.op_UnaryNegation(SqlSingle)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Negates o <xref:System.Data.SqlTypes.SqlSingle.Value*>de especificado <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura.</xref:System.Data.SqlTypes.SqlSingle.Value*>"
  syntax:
    content: public static System.Data.SqlTypes.SqlSingle op_UnaryNegation (System.Data.SqlTypes.SqlSingle x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura."
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura que contém o valor negated."
  overload: System.Data.SqlTypes.SqlSingle.op_UnaryNegation*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.Parse(System.String)
  id: Parse(System.String)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: Parse(String)
  nameWithType: SqlSingle.Parse(String)
  fullName: System.Data.SqlTypes.SqlSingle.Parse(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Converte especificado <xref:System.String>para um <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura.</xref:System.String>"
  syntax:
    content: public static System.Data.SqlTypes.SqlSingle Parse (string s);
    parameters:
    - id: s
      type: System.String
      description: "O <xref:System.String>para ser analisada.</xref:System.String>"
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> equivalente para o valor que esteja contido <xref:System.String>.</xref:System.String> especificado"
  overload: System.Data.SqlTypes.SqlSingle.Parse*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.Subtract(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  id: Subtract(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: Subtract(SqlSingle,SqlSingle)
  nameWithType: SqlSingle.Subtract(SqlSingle,SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.Subtract(SqlSingle,SqlSingle)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Subtrai o segundo <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura do primeiro."
  syntax:
    content: public static System.Data.SqlTypes.SqlSingle Subtract (System.Data.SqlTypes.SqlSingle x, System.Data.SqlTypes.SqlSingle y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura."
    - id: y
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura."
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura que contém o resultado da subtração."
  overload: System.Data.SqlTypes.SqlSingle.Subtract*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#GetSchema
  id: System#Xml#Serialization#IXmlSerializable#GetSchema
  isEii: true
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: System.Xml.Serialization.IXmlSerializable.GetSchema()
  nameWithType: SqlSingle.System.Xml.Serialization.IXmlSerializable.GetSchema()
  fullName: System.Data.SqlTypes.SqlSingle.System.Xml.Serialization.IXmlSerializable.GetSchema()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Este membro suporta a infraestrutura do .NET Framework e não se destina a ser utilizado diretamente a partir do seu código."
  syntax:
    content: System.Xml.Schema.XmlSchema IXmlSerializable.GetSchema ();
    parameters: []
    return:
      type: System.Xml.Schema.XmlSchema
      description: "An <xref uid=&quot;langword_csharp_XmlSchema&quot; name=&quot;XmlSchema&quot; href=&quot;&quot;></xref>."
  overload: System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#GetSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  id: System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  isEii: true
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  nameWithType: SqlSingle.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  fullName: System.Data.SqlTypes.SqlSingle.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Este membro suporta a infraestrutura do .NET Framework e não se destina a ser utilizado diretamente a partir do seu código."
  syntax:
    content: void IXmlSerializable.ReadXml (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: <xref uid="langword_csharp_XmlReader " name="XmlReader " href=""></xref>
  overload: System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#ReadXml*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  id: System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  isEii: true
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  nameWithType: SqlSingle.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  fullName: System.Data.SqlTypes.SqlSingle.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Este membro suporta a infraestrutura do .NET Framework e não se destina a ser utilizado diretamente a partir do seu código."
  syntax:
    content: void IXmlSerializable.WriteXml (System.Xml.XmlWriter writer);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: <xref uid="langword_csharp_XmlWriter" name="XmlWriter" href=""></xref>
  overload: System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#WriteXml*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.ToSqlBoolean
  id: ToSqlBoolean
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: ToSqlBoolean()
  nameWithType: SqlSingle.ToSqlBoolean()
  fullName: System.Data.SqlTypes.SqlSingle.ToSqlBoolean()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Converte esta <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura para <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlBoolean ToSqlBoolean ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Data.SqlTypes.SqlSingle.Value*>é diferente de zero; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se zero; caso contrário nulo.</xref:System.Data.SqlTypes.SqlSingle.Value*>"
  overload: System.Data.SqlTypes.SqlSingle.ToSqlBoolean*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.ToSqlByte
  id: ToSqlByte
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: ToSqlByte()
  nameWithType: SqlSingle.ToSqlByte()
  fullName: System.Data.SqlTypes.SqlSingle.ToSqlByte()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Converte esta <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura para <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlByte ToSqlByte ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlByte
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref> estrutura cujos <xref uid=&quot;langword_csharp_Value&quot; name=&quot;Value&quot; href=&quot;&quot;> </xref> é igual a <xref uid=&quot;langword_csharp_Value&quot; name=&quot;Value&quot; href=&quot;&quot;> </xref> deste <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura. Se o <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> . o valor da estrutura é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, a <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref> da estrutura <xref uid=&quot;langword_csharp_Value&quot; name=&quot;Value&quot; href=&quot;&quot;> </xref> será 1. Caso contrário, o <xref href=&quot;System.Data.SqlTypes.SqlByte&quot;> </xref> da estrutura <xref uid=&quot;langword_csharp_Value&quot; name=&quot;Value&quot; href=&quot;&quot;> </xref> será 0."
  overload: System.Data.SqlTypes.SqlSingle.ToSqlByte*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.ToSqlDecimal
  id: ToSqlDecimal
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: ToSqlDecimal()
  nameWithType: SqlSingle.ToSqlDecimal()
  fullName: System.Data.SqlTypes.SqlSingle.ToSqlDecimal()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Converte esta <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura para <xref href=&quot;System.Data.SqlTypes.SqlDecimal&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlDecimal ToSqlDecimal ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlDecimal
      description: "Um novo <xref uid=&quot;langword_csharp_SqlDecimal&quot; name=&quot;SqlDecimal&quot; href=&quot;&quot;> </xref> igual ao valor deste <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlSingle.ToSqlDecimal*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.ToSqlDouble
  id: ToSqlDouble
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: ToSqlDouble()
  nameWithType: SqlSingle.ToSqlDouble()
  fullName: System.Data.SqlTypes.SqlSingle.ToSqlDouble()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Converte esta <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura para <xref href=&quot;System.Data.SqlTypes.SqlDouble&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlDouble ToSqlDouble ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlDouble
      description: "Um novo <xref uid=&quot;langword_csharp_SqlDouble &quot; name=&quot;SqlDouble &quot; href=&quot;&quot;> </xref>igual ao valor deste <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlSingle.ToSqlDouble*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.ToSqlInt16
  id: ToSqlInt16
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: ToSqlInt16()
  nameWithType: SqlSingle.ToSqlInt16()
  fullName: System.Data.SqlTypes.SqlSingle.ToSqlInt16()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Converte esta <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura para <xref href=&quot;System.Data.SqlTypes.SqlInt16&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlInt16 ToSqlInt16 ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlInt16
      description: "Um novo <xref uid=&quot;langword_csharp_SqlInt16&quot; name=&quot;SqlInt16&quot; href=&quot;&quot;> </xref> igual ao valor deste <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlSingle.ToSqlInt16*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.ToSqlInt32
  id: ToSqlInt32
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: ToSqlInt32()
  nameWithType: SqlSingle.ToSqlInt32()
  fullName: System.Data.SqlTypes.SqlSingle.ToSqlInt32()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Converte esta <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura para <xref href=&quot;System.Data.SqlTypes.SqlInt32&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlInt32 ToSqlInt32 ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlInt32
      description: "Um novo <xref href=&quot;System.Data.SqlTypes.SqlInt32&quot;> </xref> igual ao valor deste <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlSingle.ToSqlInt32*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.ToSqlInt64
  id: ToSqlInt64
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: ToSqlInt64()
  nameWithType: SqlSingle.ToSqlInt64()
  fullName: System.Data.SqlTypes.SqlSingle.ToSqlInt64()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Converte esta <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura para <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlInt64 ToSqlInt64 ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlInt64
      description: "Um novo <xref href=&quot;System.Data.SqlTypes.SqlInt64&quot;> </xref> igual ao valor deste <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlSingle.ToSqlInt64*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.ToSqlMoney
  id: ToSqlMoney
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: ToSqlMoney()
  nameWithType: SqlSingle.ToSqlMoney()
  fullName: System.Data.SqlTypes.SqlSingle.ToSqlMoney()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Converte esta <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura para <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlMoney ToSqlMoney ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlMoney
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlMoney&quot;> </xref> igual ao valor deste <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlSingle.ToSqlMoney*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.ToSqlString
  id: ToSqlString
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: ToSqlString()
  nameWithType: SqlSingle.ToSqlString()
  fullName: System.Data.SqlTypes.SqlSingle.ToSqlString()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Converte esta <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura para <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref>."
  syntax:
    content: public System.Data.SqlTypes.SqlString ToSqlString ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlString
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlString&quot;> </xref> representando o valor deste <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlSingle.ToSqlString*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.ToString
  id: ToString
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: ToString()
  nameWithType: SqlSingle.ToString()
  fullName: System.Data.SqlTypes.SqlSingle.ToString()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Converte esta <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura para <xref:System.String>.</xref:System.String>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> objeto que representa o valor deste <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlSingle.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.Value
  id: Value
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: Value
  nameWithType: SqlSingle.Value
  fullName: System.Data.SqlTypes.SqlSingle.Value
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Obtém o valor deste <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> estrutura. Esta propriedade é só de leitura."
  syntax:
    content: public float Value { get; }
    return:
      type: System.Single
      description: "Uma vírgula flutuante ponto valor no intervalo-3.40E + 38 através de 3.40E + 38."
  overload: System.Data.SqlTypes.SqlSingle.Value*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlSingle.Zero
  id: Zero
  parent: System.Data.SqlTypes.SqlSingle
  langs:
  - csharp
  name: Zero
  nameWithType: SqlSingle.Zero
  fullName: System.Data.SqlTypes.SqlSingle.Zero
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Representa o valor zero que pode ser atribuído ao <xref:System.Data.SqlTypes.SqlSingle.Value*>propriedade de uma ocorrência da <xref href=&quot;System.Data.SqlTypes.SqlSingle&quot;> </xref> classe</xref:System.Data.SqlTypes.SqlSingle.Value*>"
  remarks: '`Zero`funciona como uma constante para a <xref:System.Data.SqlTypes.SqlSingle>classe.</xref:System.Data.SqlTypes.SqlSingle>'
  syntax:
    content: public static readonly System.Data.SqlTypes.SqlSingle Zero;
    return:
      type: System.Data.SqlTypes.SqlSingle
      description: "A adicionar."
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Data.SqlTypes.SqlSingle.#ctor(System.Double)
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: SqlSingle(Double)
  nameWithType: SqlSingle.SqlSingle(Double)
  fullName: System.Data.SqlTypes.SqlSingle.SqlSingle(Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Data.SqlTypes.SqlSingle.#ctor(System.Single)
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: SqlSingle(Single)
  nameWithType: SqlSingle.SqlSingle(Single)
  fullName: System.Data.SqlTypes.SqlSingle.SqlSingle(Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Data.SqlTypes.SqlSingle.Add(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: Add(SqlSingle,SqlSingle)
  nameWithType: SqlSingle.Add(SqlSingle,SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.Add(SqlSingle,SqlSingle)
- uid: System.Data.SqlTypes.SqlSingle
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlSingle
  nameWithType: SqlSingle
  fullName: System.Data.SqlTypes.SqlSingle
- uid: System.Data.SqlTypes.SqlSingle.CompareTo(System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: CompareTo(SqlSingle)
  nameWithType: SqlSingle.CompareTo(SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.CompareTo(SqlSingle)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.SqlTypes.SqlSingle.CompareTo(System.Object)
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: CompareTo(Object)
  nameWithType: SqlSingle.CompareTo(Object)
  fullName: System.Data.SqlTypes.SqlSingle.CompareTo(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.SqlTypes.SqlSingle.Divide(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: Divide(SqlSingle,SqlSingle)
  nameWithType: SqlSingle.Divide(SqlSingle,SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.Divide(SqlSingle,SqlSingle)
- uid: System.Data.SqlTypes.SqlSingle.Equals(System.Object)
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: Equals(Object)
  nameWithType: SqlSingle.Equals(Object)
  fullName: System.Data.SqlTypes.SqlSingle.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlTypes.SqlSingle.Equals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: Equals(SqlSingle,SqlSingle)
  nameWithType: SqlSingle.Equals(SqlSingle,SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.Equals(SqlSingle,SqlSingle)
- uid: System.Data.SqlTypes.SqlBoolean
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlBoolean
  nameWithType: SqlBoolean
  fullName: System.Data.SqlTypes.SqlBoolean
- uid: System.Data.SqlTypes.SqlSingle.GetHashCode
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: GetHashCode()
  nameWithType: SqlSingle.GetHashCode()
  fullName: System.Data.SqlTypes.SqlSingle.GetHashCode()
- uid: System.Data.SqlTypes.SqlSingle.GetXsdType(System.Xml.Schema.XmlSchemaSet)
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: GetXsdType(XmlSchemaSet)
  nameWithType: SqlSingle.GetXsdType(XmlSchemaSet)
  fullName: System.Data.SqlTypes.SqlSingle.GetXsdType(XmlSchemaSet)
- uid: System.Xml.XmlQualifiedName
  parent: System.Xml
  isExternal: true
  name: XmlQualifiedName
  nameWithType: XmlQualifiedName
  fullName: System.Xml.XmlQualifiedName
- uid: System.Xml.Schema.XmlSchemaSet
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
- uid: System.Data.SqlTypes.SqlSingle.GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: GreaterThan(SqlSingle,SqlSingle)
  nameWithType: SqlSingle.GreaterThan(SqlSingle,SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.GreaterThan(SqlSingle,SqlSingle)
- uid: System.Data.SqlTypes.SqlSingle.GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: GreaterThanOrEqual(SqlSingle,SqlSingle)
  nameWithType: SqlSingle.GreaterThanOrEqual(SqlSingle,SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.GreaterThanOrEqual(SqlSingle,SqlSingle)
- uid: System.Data.SqlTypes.SqlSingle.IsNull
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: IsNull
  nameWithType: SqlSingle.IsNull
  fullName: System.Data.SqlTypes.SqlSingle.IsNull
- uid: System.Data.SqlTypes.SqlSingle.LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: LessThan(SqlSingle,SqlSingle)
  nameWithType: SqlSingle.LessThan(SqlSingle,SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.LessThan(SqlSingle,SqlSingle)
- uid: System.Data.SqlTypes.SqlSingle.LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: LessThanOrEqual(SqlSingle,SqlSingle)
  nameWithType: SqlSingle.LessThanOrEqual(SqlSingle,SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.LessThanOrEqual(SqlSingle,SqlSingle)
- uid: System.Data.SqlTypes.SqlSingle.MaxValue
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: MaxValue
  nameWithType: SqlSingle.MaxValue
  fullName: System.Data.SqlTypes.SqlSingle.MaxValue
- uid: System.Data.SqlTypes.SqlSingle.MinValue
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: MinValue
  nameWithType: SqlSingle.MinValue
  fullName: System.Data.SqlTypes.SqlSingle.MinValue
- uid: System.Data.SqlTypes.SqlSingle.Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: Multiply(SqlSingle,SqlSingle)
  nameWithType: SqlSingle.Multiply(SqlSingle,SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.Multiply(SqlSingle,SqlSingle)
- uid: System.Data.SqlTypes.SqlSingle.NotEquals(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: NotEquals(SqlSingle,SqlSingle)
  nameWithType: SqlSingle.NotEquals(SqlSingle,SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.NotEquals(SqlSingle,SqlSingle)
- uid: System.Data.SqlTypes.SqlSingle.Null
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: "Null"
  nameWithType: SqlSingle.Null
  fullName: System.Data.SqlTypes.SqlSingle.Null
- uid: System.Data.SqlTypes.SqlSingle.op_Addition(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: op_Addition(SqlSingle,SqlSingle)
  nameWithType: SqlSingle.op_Addition(SqlSingle,SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.op_Addition(SqlSingle,SqlSingle)
- uid: System.Data.SqlTypes.SqlSingle.op_Division(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: op_Division(SqlSingle,SqlSingle)
  nameWithType: SqlSingle.op_Division(SqlSingle,SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.op_Division(SqlSingle,SqlSingle)
- uid: System.Data.SqlTypes.SqlSingle.op_Equality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: op_Equality(SqlSingle,SqlSingle)
  nameWithType: SqlSingle.op_Equality(SqlSingle,SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.op_Equality(SqlSingle,SqlSingle)
- uid: System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlBoolean to System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: op_Explicit(SqlBoolean)
  nameWithType: SqlSingle.op_Explicit(SqlBoolean)
  fullName: System.Data.SqlTypes.SqlSingle.op_Explicit(SqlBoolean)
- uid: System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlDouble to System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: op_Explicit(SqlDouble)
  nameWithType: SqlSingle.op_Explicit(SqlDouble)
  fullName: System.Data.SqlTypes.SqlSingle.op_Explicit(SqlDouble)
- uid: System.Data.SqlTypes.SqlDouble
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDouble
  nameWithType: SqlDouble
  fullName: System.Data.SqlTypes.SqlDouble
- uid: System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlSingle to System.Single)
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: op_Explicit(SqlSingle)
  nameWithType: SqlSingle.op_Explicit(SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.op_Explicit(SqlSingle)
- uid: System.Data.SqlTypes.SqlSingle.op_Explicit(System.Data.SqlTypes.SqlString to System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: op_Explicit(SqlString)
  nameWithType: SqlSingle.op_Explicit(SqlString)
  fullName: System.Data.SqlTypes.SqlSingle.op_Explicit(SqlString)
- uid: System.Data.SqlTypes.SqlString
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlString
  nameWithType: SqlString
  fullName: System.Data.SqlTypes.SqlString
- uid: System.Data.SqlTypes.SqlSingle.op_GreaterThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: op_GreaterThan(SqlSingle,SqlSingle)
  nameWithType: SqlSingle.op_GreaterThan(SqlSingle,SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.op_GreaterThan(SqlSingle,SqlSingle)
- uid: System.Data.SqlTypes.SqlSingle.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: op_GreaterThanOrEqual(SqlSingle,SqlSingle)
  nameWithType: SqlSingle.op_GreaterThanOrEqual(SqlSingle,SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.op_GreaterThanOrEqual(SqlSingle,SqlSingle)
- uid: System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlByte)
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: op_Implicit(SqlByte)
  nameWithType: SqlSingle.op_Implicit(SqlByte)
  fullName: System.Data.SqlTypes.SqlSingle.op_Implicit(SqlByte)
- uid: System.Data.SqlTypes.SqlByte
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlByte
  nameWithType: SqlByte
  fullName: System.Data.SqlTypes.SqlByte
- uid: System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlDecimal)
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: op_Implicit(SqlDecimal)
  nameWithType: SqlSingle.op_Implicit(SqlDecimal)
  fullName: System.Data.SqlTypes.SqlSingle.op_Implicit(SqlDecimal)
- uid: System.Data.SqlTypes.SqlDecimal
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlDecimal
  nameWithType: SqlDecimal
  fullName: System.Data.SqlTypes.SqlDecimal
- uid: System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt16)
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: op_Implicit(SqlInt16)
  nameWithType: SqlSingle.op_Implicit(SqlInt16)
  fullName: System.Data.SqlTypes.SqlSingle.op_Implicit(SqlInt16)
- uid: System.Data.SqlTypes.SqlInt16
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt16
  nameWithType: SqlInt16
  fullName: System.Data.SqlTypes.SqlInt16
- uid: System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt32)
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: op_Implicit(SqlInt32)
  nameWithType: SqlSingle.op_Implicit(SqlInt32)
  fullName: System.Data.SqlTypes.SqlSingle.op_Implicit(SqlInt32)
- uid: System.Data.SqlTypes.SqlInt32
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt32
  nameWithType: SqlInt32
  fullName: System.Data.SqlTypes.SqlInt32
- uid: System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlInt64)
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: op_Implicit(SqlInt64)
  nameWithType: SqlSingle.op_Implicit(SqlInt64)
  fullName: System.Data.SqlTypes.SqlSingle.op_Implicit(SqlInt64)
- uid: System.Data.SqlTypes.SqlInt64
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlInt64
  nameWithType: SqlInt64
  fullName: System.Data.SqlTypes.SqlInt64
- uid: System.Data.SqlTypes.SqlSingle.op_Implicit(System.Data.SqlTypes.SqlMoney)
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: op_Implicit(SqlMoney)
  nameWithType: SqlSingle.op_Implicit(SqlMoney)
  fullName: System.Data.SqlTypes.SqlSingle.op_Implicit(SqlMoney)
- uid: System.Data.SqlTypes.SqlMoney
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlMoney
  nameWithType: SqlMoney
  fullName: System.Data.SqlTypes.SqlMoney
- uid: System.Data.SqlTypes.SqlSingle.op_Implicit(System.Single)
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: op_Implicit(Single)
  nameWithType: SqlSingle.op_Implicit(Single)
  fullName: System.Data.SqlTypes.SqlSingle.op_Implicit(Single)
- uid: System.Data.SqlTypes.SqlSingle.op_Inequality(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: op_Inequality(SqlSingle,SqlSingle)
  nameWithType: SqlSingle.op_Inequality(SqlSingle,SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.op_Inequality(SqlSingle,SqlSingle)
- uid: System.Data.SqlTypes.SqlSingle.op_LessThan(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: op_LessThan(SqlSingle,SqlSingle)
  nameWithType: SqlSingle.op_LessThan(SqlSingle,SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.op_LessThan(SqlSingle,SqlSingle)
- uid: System.Data.SqlTypes.SqlSingle.op_LessThanOrEqual(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: op_LessThanOrEqual(SqlSingle,SqlSingle)
  nameWithType: SqlSingle.op_LessThanOrEqual(SqlSingle,SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.op_LessThanOrEqual(SqlSingle,SqlSingle)
- uid: System.Data.SqlTypes.SqlSingle.op_Multiply(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: op_Multiply(SqlSingle,SqlSingle)
  nameWithType: SqlSingle.op_Multiply(SqlSingle,SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.op_Multiply(SqlSingle,SqlSingle)
- uid: System.Data.SqlTypes.SqlSingle.op_Subtraction(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: op_Subtraction(SqlSingle,SqlSingle)
  nameWithType: SqlSingle.op_Subtraction(SqlSingle,SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.op_Subtraction(SqlSingle,SqlSingle)
- uid: System.Data.SqlTypes.SqlSingle.op_UnaryNegation(System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: op_UnaryNegation(SqlSingle)
  nameWithType: SqlSingle.op_UnaryNegation(SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.op_UnaryNegation(SqlSingle)
- uid: System.Data.SqlTypes.SqlSingle.Parse(System.String)
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: Parse(String)
  nameWithType: SqlSingle.Parse(String)
  fullName: System.Data.SqlTypes.SqlSingle.Parse(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlTypes.SqlSingle.Subtract(System.Data.SqlTypes.SqlSingle,System.Data.SqlTypes.SqlSingle)
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: Subtract(SqlSingle,SqlSingle)
  nameWithType: SqlSingle.Subtract(SqlSingle,SqlSingle)
  fullName: System.Data.SqlTypes.SqlSingle.Subtract(SqlSingle,SqlSingle)
- uid: System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#GetSchema
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.GetSchema()
  nameWithType: SqlSingle.System.Xml.Serialization.IXmlSerializable.GetSchema()
  fullName: System.Data.SqlTypes.SqlSingle.System.Xml.Serialization.IXmlSerializable.GetSchema()
- uid: System.Xml.Schema.XmlSchema
  parent: System.Xml.Schema
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema
- uid: System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  nameWithType: SqlSingle.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  fullName: System.Data.SqlTypes.SqlSingle.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  nameWithType: SqlSingle.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  fullName: System.Data.SqlTypes.SqlSingle.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Data.SqlTypes.SqlSingle.ToSqlBoolean
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: ToSqlBoolean()
  nameWithType: SqlSingle.ToSqlBoolean()
  fullName: System.Data.SqlTypes.SqlSingle.ToSqlBoolean()
- uid: System.Data.SqlTypes.SqlSingle.ToSqlByte
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: ToSqlByte()
  nameWithType: SqlSingle.ToSqlByte()
  fullName: System.Data.SqlTypes.SqlSingle.ToSqlByte()
- uid: System.Data.SqlTypes.SqlSingle.ToSqlDecimal
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: ToSqlDecimal()
  nameWithType: SqlSingle.ToSqlDecimal()
  fullName: System.Data.SqlTypes.SqlSingle.ToSqlDecimal()
- uid: System.Data.SqlTypes.SqlSingle.ToSqlDouble
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: ToSqlDouble()
  nameWithType: SqlSingle.ToSqlDouble()
  fullName: System.Data.SqlTypes.SqlSingle.ToSqlDouble()
- uid: System.Data.SqlTypes.SqlSingle.ToSqlInt16
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: ToSqlInt16()
  nameWithType: SqlSingle.ToSqlInt16()
  fullName: System.Data.SqlTypes.SqlSingle.ToSqlInt16()
- uid: System.Data.SqlTypes.SqlSingle.ToSqlInt32
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: ToSqlInt32()
  nameWithType: SqlSingle.ToSqlInt32()
  fullName: System.Data.SqlTypes.SqlSingle.ToSqlInt32()
- uid: System.Data.SqlTypes.SqlSingle.ToSqlInt64
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: ToSqlInt64()
  nameWithType: SqlSingle.ToSqlInt64()
  fullName: System.Data.SqlTypes.SqlSingle.ToSqlInt64()
- uid: System.Data.SqlTypes.SqlSingle.ToSqlMoney
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: ToSqlMoney()
  nameWithType: SqlSingle.ToSqlMoney()
  fullName: System.Data.SqlTypes.SqlSingle.ToSqlMoney()
- uid: System.Data.SqlTypes.SqlSingle.ToSqlString
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: ToSqlString()
  nameWithType: SqlSingle.ToSqlString()
  fullName: System.Data.SqlTypes.SqlSingle.ToSqlString()
- uid: System.Data.SqlTypes.SqlSingle.ToString
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: ToString()
  nameWithType: SqlSingle.ToString()
  fullName: System.Data.SqlTypes.SqlSingle.ToString()
- uid: System.Data.SqlTypes.SqlSingle.Value
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: Value
  nameWithType: SqlSingle.Value
  fullName: System.Data.SqlTypes.SqlSingle.Value
- uid: System.Data.SqlTypes.SqlSingle.Zero
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: Zero
  nameWithType: SqlSingle.Zero
  fullName: System.Data.SqlTypes.SqlSingle.Zero
- uid: System.Data.SqlTypes.SqlSingle.#ctor*
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: SqlSingle
  nameWithType: SqlSingle.SqlSingle
- uid: System.Data.SqlTypes.SqlSingle.Add*
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: Add
  nameWithType: SqlSingle.Add
- uid: System.Data.SqlTypes.SqlSingle.CompareTo*
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: CompareTo
  nameWithType: SqlSingle.CompareTo
- uid: System.Data.SqlTypes.SqlSingle.Divide*
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: Divide
  nameWithType: SqlSingle.Divide
- uid: System.Data.SqlTypes.SqlSingle.Equals*
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: Equals
  nameWithType: SqlSingle.Equals
- uid: System.Data.SqlTypes.SqlSingle.GetHashCode*
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: GetHashCode
  nameWithType: SqlSingle.GetHashCode
- uid: System.Data.SqlTypes.SqlSingle.GetXsdType*
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: GetXsdType
  nameWithType: SqlSingle.GetXsdType
- uid: System.Data.SqlTypes.SqlSingle.GreaterThan*
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: GreaterThan
  nameWithType: SqlSingle.GreaterThan
- uid: System.Data.SqlTypes.SqlSingle.GreaterThanOrEqual*
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: GreaterThanOrEqual
  nameWithType: SqlSingle.GreaterThanOrEqual
- uid: System.Data.SqlTypes.SqlSingle.IsNull*
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: IsNull
  nameWithType: SqlSingle.IsNull
- uid: System.Data.SqlTypes.SqlSingle.LessThan*
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: LessThan
  nameWithType: SqlSingle.LessThan
- uid: System.Data.SqlTypes.SqlSingle.LessThanOrEqual*
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: LessThanOrEqual
  nameWithType: SqlSingle.LessThanOrEqual
- uid: System.Data.SqlTypes.SqlSingle.Multiply*
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: Multiply
  nameWithType: SqlSingle.Multiply
- uid: System.Data.SqlTypes.SqlSingle.NotEquals*
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: NotEquals
  nameWithType: SqlSingle.NotEquals
- uid: System.Data.SqlTypes.SqlSingle.op_Addition*
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: op_Addition
  nameWithType: SqlSingle.op_Addition
- uid: System.Data.SqlTypes.SqlSingle.op_Division*
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: op_Division
  nameWithType: SqlSingle.op_Division
- uid: System.Data.SqlTypes.SqlSingle.op_Equality*
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: op_Equality
  nameWithType: SqlSingle.op_Equality
- uid: System.Data.SqlTypes.SqlSingle.op_Explicit*
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: op_Explicit
  nameWithType: SqlSingle.op_Explicit
- uid: System.Data.SqlTypes.SqlSingle.op_GreaterThan*
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: op_GreaterThan
  nameWithType: SqlSingle.op_GreaterThan
- uid: System.Data.SqlTypes.SqlSingle.op_GreaterThanOrEqual*
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: op_GreaterThanOrEqual
  nameWithType: SqlSingle.op_GreaterThanOrEqual
- uid: System.Data.SqlTypes.SqlSingle.op_Implicit*
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: op_Implicit
  nameWithType: SqlSingle.op_Implicit
- uid: System.Data.SqlTypes.SqlSingle.op_Inequality*
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: op_Inequality
  nameWithType: SqlSingle.op_Inequality
- uid: System.Data.SqlTypes.SqlSingle.op_LessThan*
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: op_LessThan
  nameWithType: SqlSingle.op_LessThan
- uid: System.Data.SqlTypes.SqlSingle.op_LessThanOrEqual*
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: op_LessThanOrEqual
  nameWithType: SqlSingle.op_LessThanOrEqual
- uid: System.Data.SqlTypes.SqlSingle.op_Multiply*
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: op_Multiply
  nameWithType: SqlSingle.op_Multiply
- uid: System.Data.SqlTypes.SqlSingle.op_Subtraction*
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: op_Subtraction
  nameWithType: SqlSingle.op_Subtraction
- uid: System.Data.SqlTypes.SqlSingle.op_UnaryNegation*
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: op_UnaryNegation
  nameWithType: SqlSingle.op_UnaryNegation
- uid: System.Data.SqlTypes.SqlSingle.Parse*
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: Parse
  nameWithType: SqlSingle.Parse
- uid: System.Data.SqlTypes.SqlSingle.Subtract*
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: Subtract
  nameWithType: SqlSingle.Subtract
- uid: System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#GetSchema*
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.GetSchema
  nameWithType: SqlSingle.System.Xml.Serialization.IXmlSerializable.GetSchema
- uid: System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#ReadXml*
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.ReadXml
  nameWithType: SqlSingle.System.Xml.Serialization.IXmlSerializable.ReadXml
- uid: System.Data.SqlTypes.SqlSingle.System#Xml#Serialization#IXmlSerializable#WriteXml*
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.WriteXml
  nameWithType: SqlSingle.System.Xml.Serialization.IXmlSerializable.WriteXml
- uid: System.Data.SqlTypes.SqlSingle.ToSqlBoolean*
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: ToSqlBoolean
  nameWithType: SqlSingle.ToSqlBoolean
- uid: System.Data.SqlTypes.SqlSingle.ToSqlByte*
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: ToSqlByte
  nameWithType: SqlSingle.ToSqlByte
- uid: System.Data.SqlTypes.SqlSingle.ToSqlDecimal*
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: ToSqlDecimal
  nameWithType: SqlSingle.ToSqlDecimal
- uid: System.Data.SqlTypes.SqlSingle.ToSqlDouble*
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: ToSqlDouble
  nameWithType: SqlSingle.ToSqlDouble
- uid: System.Data.SqlTypes.SqlSingle.ToSqlInt16*
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: ToSqlInt16
  nameWithType: SqlSingle.ToSqlInt16
- uid: System.Data.SqlTypes.SqlSingle.ToSqlInt32*
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: ToSqlInt32
  nameWithType: SqlSingle.ToSqlInt32
- uid: System.Data.SqlTypes.SqlSingle.ToSqlInt64*
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: ToSqlInt64
  nameWithType: SqlSingle.ToSqlInt64
- uid: System.Data.SqlTypes.SqlSingle.ToSqlMoney*
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: ToSqlMoney
  nameWithType: SqlSingle.ToSqlMoney
- uid: System.Data.SqlTypes.SqlSingle.ToSqlString*
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: ToSqlString
  nameWithType: SqlSingle.ToSqlString
- uid: System.Data.SqlTypes.SqlSingle.ToString*
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: ToString
  nameWithType: SqlSingle.ToString
- uid: System.Data.SqlTypes.SqlSingle.Value*
  parent: System.Data.SqlTypes.SqlSingle
  isExternal: false
  name: Value
  nameWithType: SqlSingle.Value
