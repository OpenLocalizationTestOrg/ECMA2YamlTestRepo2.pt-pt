### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.TokenReplayCache
  id: TokenReplayCache
  children:
  - System.IdentityModel.Tokens.TokenReplayCache.#ctor
  - System.IdentityModel.Tokens.TokenReplayCache.AddOrUpdate(System.String,System.IdentityModel.Tokens.SecurityToken,System.DateTime)
  - System.IdentityModel.Tokens.TokenReplayCache.Contains(System.String)
  - System.IdentityModel.Tokens.TokenReplayCache.Get(System.String)
  - System.IdentityModel.Tokens.TokenReplayCache.LoadCustomConfiguration(System.Xml.XmlNodeList)
  - System.IdentityModel.Tokens.TokenReplayCache.Remove(System.String)
  langs:
  - csharp
  name: TokenReplayCache
  nameWithType: TokenReplayCache
  fullName: System.IdentityModel.Tokens.TokenReplayCache
  type: Class
  summary: "The abstract base class that defines methods for a cache used to detect replayed tokens."
  remarks: "When implemented, the cache should purge tokens on a scheduled time interval. The <xref:System.IdentityModel.Tokens.TokenReplayCache.AddOrUpdate%2A> method associates a security token with a key and an expiration time. The can be used to search the cache for the token or to remove the token from the cache. The expiration time indicates the time at which the token should be purged from the cache."
  syntax:
    content: 'public abstract class TokenReplayCache : System.IdentityModel.Configuration.ICustomIdentityConfiguration'
  inheritance:
  - System.Object
  implements:
  - System.IdentityModel.Configuration.ICustomIdentityConfiguration
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.TokenReplayCache.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Tokens.TokenReplayCache
  langs:
  - csharp
  name: TokenReplayCache()
  nameWithType: TokenReplayCache.TokenReplayCache()
  fullName: System.IdentityModel.Tokens.TokenReplayCache.TokenReplayCache()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Called from constructors in derived classes to initialize the <xref href=&quot;System.IdentityModel.Tokens.TokenReplayCache&quot;></xref>class."
  syntax:
    content: protected TokenReplayCache ();
    parameters: []
  overload: System.IdentityModel.Tokens.TokenReplayCache.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.TokenReplayCache.AddOrUpdate(System.String,System.IdentityModel.Tokens.SecurityToken,System.DateTime)
  id: AddOrUpdate(System.String,System.IdentityModel.Tokens.SecurityToken,System.DateTime)
  parent: System.IdentityModel.Tokens.TokenReplayCache
  langs:
  - csharp
  name: AddOrUpdate(String,SecurityToken,DateTime)
  nameWithType: TokenReplayCache.AddOrUpdate(String,SecurityToken,DateTime)
  fullName: System.IdentityModel.Tokens.TokenReplayCache.AddOrUpdate(String,SecurityToken,DateTime)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "When overridden in a derived class, attempts to add a new entry or update and existing entry."
  syntax:
    content: public abstract void AddOrUpdate (string key, System.IdentityModel.Tokens.SecurityToken securityToken, DateTime expirationTime);
    parameters:
    - id: key
      type: System.String
      description: "The key to use when adding the item."
    - id: securityToken
      type: System.IdentityModel.Tokens.SecurityToken
      description: "The token to add to the cache, can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: expirationTime
      type: System.DateTime
      description: "The time at which the entry expires."
  overload: System.IdentityModel.Tokens.TokenReplayCache.AddOrUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.TokenReplayCache.Contains(System.String)
  id: Contains(System.String)
  parent: System.IdentityModel.Tokens.TokenReplayCache
  langs:
  - csharp
  name: Contains(String)
  nameWithType: TokenReplayCache.Contains(String)
  fullName: System.IdentityModel.Tokens.TokenReplayCache.Contains(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "When overridden in a derived class, returns a value that indicates whether a matching entry exists in the cache."
  syntax:
    content: public abstract bool Contains (string key);
    parameters:
    - id: key
      type: System.String
      description: "The key for which to search."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if a matching entry is is found in the cache; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.IdentityModel.Tokens.TokenReplayCache.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.TokenReplayCache.Get(System.String)
  id: Get(System.String)
  parent: System.IdentityModel.Tokens.TokenReplayCache
  langs:
  - csharp
  name: Get(String)
  nameWithType: TokenReplayCache.Get(String)
  fullName: System.IdentityModel.Tokens.TokenReplayCache.Get(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "When overridden in a derived class, attempts to get the specified entry."
  syntax:
    content: public abstract System.IdentityModel.Tokens.SecurityToken Get (string key);
    parameters:
    - id: key
      type: System.String
      description: "The key for which to search."
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "The token that matches the key or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if no token is found."
  overload: System.IdentityModel.Tokens.TokenReplayCache.Get*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.TokenReplayCache.LoadCustomConfiguration(System.Xml.XmlNodeList)
  id: LoadCustomConfiguration(System.Xml.XmlNodeList)
  parent: System.IdentityModel.Tokens.TokenReplayCache
  langs:
  - csharp
  name: LoadCustomConfiguration(XmlNodeList)
  nameWithType: TokenReplayCache.LoadCustomConfiguration(XmlNodeList)
  fullName: System.IdentityModel.Tokens.TokenReplayCache.LoadCustomConfiguration(XmlNodeList)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "When overridden in a derived class, loads custom configuration from the specified XML."
  remarks: "By default, this method throws a <xref:System.NotImplementedException>"
  syntax:
    content: public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);
    parameters:
    - id: nodelist
      type: System.Xml.XmlNodeList
      description: "The custom configuration XML elements."
  overload: System.IdentityModel.Tokens.TokenReplayCache.LoadCustomConfiguration*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.TokenReplayCache.Remove(System.String)
  id: Remove(System.String)
  parent: System.IdentityModel.Tokens.TokenReplayCache
  langs:
  - csharp
  name: Remove(String)
  nameWithType: TokenReplayCache.Remove(String)
  fullName: System.IdentityModel.Tokens.TokenReplayCache.Remove(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "When overridden in a derived class, attempts to remove an entry from the cache."
  syntax:
    content: public abstract void Remove (string key);
    parameters:
    - id: key
      type: System.String
      description: "The key that identifies the entry to remove."
  overload: System.IdentityModel.Tokens.TokenReplayCache.Remove*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.Tokens.TokenReplayCache.#ctor
  parent: System.IdentityModel.Tokens.TokenReplayCache
  isExternal: false
  name: TokenReplayCache()
  nameWithType: TokenReplayCache.TokenReplayCache()
  fullName: System.IdentityModel.Tokens.TokenReplayCache.TokenReplayCache()
- uid: System.IdentityModel.Tokens.TokenReplayCache.AddOrUpdate(System.String,System.IdentityModel.Tokens.SecurityToken,System.DateTime)
  parent: System.IdentityModel.Tokens.TokenReplayCache
  isExternal: false
  name: AddOrUpdate(String,SecurityToken,DateTime)
  nameWithType: TokenReplayCache.AddOrUpdate(String,SecurityToken,DateTime)
  fullName: System.IdentityModel.Tokens.TokenReplayCache.AddOrUpdate(String,SecurityToken,DateTime)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.IdentityModel.Tokens.TokenReplayCache.Contains(System.String)
  parent: System.IdentityModel.Tokens.TokenReplayCache
  isExternal: false
  name: Contains(String)
  nameWithType: TokenReplayCache.Contains(String)
  fullName: System.IdentityModel.Tokens.TokenReplayCache.Contains(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.TokenReplayCache.Get(System.String)
  parent: System.IdentityModel.Tokens.TokenReplayCache
  isExternal: false
  name: Get(String)
  nameWithType: TokenReplayCache.Get(String)
  fullName: System.IdentityModel.Tokens.TokenReplayCache.Get(String)
- uid: System.IdentityModel.Tokens.TokenReplayCache.LoadCustomConfiguration(System.Xml.XmlNodeList)
  parent: System.IdentityModel.Tokens.TokenReplayCache
  isExternal: false
  name: LoadCustomConfiguration(XmlNodeList)
  nameWithType: TokenReplayCache.LoadCustomConfiguration(XmlNodeList)
  fullName: System.IdentityModel.Tokens.TokenReplayCache.LoadCustomConfiguration(XmlNodeList)
- uid: System.Xml.XmlNodeList
  parent: System.Xml
  isExternal: false
  name: XmlNodeList
  nameWithType: XmlNodeList
  fullName: System.Xml.XmlNodeList
- uid: System.IdentityModel.Tokens.TokenReplayCache.Remove(System.String)
  parent: System.IdentityModel.Tokens.TokenReplayCache
  isExternal: false
  name: Remove(String)
  nameWithType: TokenReplayCache.Remove(String)
  fullName: System.IdentityModel.Tokens.TokenReplayCache.Remove(String)
- uid: System.IdentityModel.Tokens.TokenReplayCache.#ctor*
  parent: System.IdentityModel.Tokens.TokenReplayCache
  isExternal: false
  name: TokenReplayCache
  nameWithType: TokenReplayCache.TokenReplayCache
- uid: System.IdentityModel.Tokens.TokenReplayCache.AddOrUpdate*
  parent: System.IdentityModel.Tokens.TokenReplayCache
  isExternal: false
  name: AddOrUpdate
  nameWithType: TokenReplayCache.AddOrUpdate
- uid: System.IdentityModel.Tokens.TokenReplayCache.Contains*
  parent: System.IdentityModel.Tokens.TokenReplayCache
  isExternal: false
  name: Contains
  nameWithType: TokenReplayCache.Contains
- uid: System.IdentityModel.Tokens.TokenReplayCache.Get*
  parent: System.IdentityModel.Tokens.TokenReplayCache
  isExternal: false
  name: Get
  nameWithType: TokenReplayCache.Get
- uid: System.IdentityModel.Tokens.TokenReplayCache.LoadCustomConfiguration*
  parent: System.IdentityModel.Tokens.TokenReplayCache
  isExternal: false
  name: LoadCustomConfiguration
  nameWithType: TokenReplayCache.LoadCustomConfiguration
- uid: System.IdentityModel.Tokens.TokenReplayCache.Remove*
  parent: System.IdentityModel.Tokens.TokenReplayCache
  isExternal: false
  name: Remove
  nameWithType: TokenReplayCache.Remove
