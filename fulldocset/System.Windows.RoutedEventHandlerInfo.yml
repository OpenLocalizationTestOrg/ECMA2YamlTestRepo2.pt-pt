### YamlMime:ManagedReference
items:
- uid: System.Windows.RoutedEventHandlerInfo
  id: RoutedEventHandlerInfo
  children:
  - System.Windows.RoutedEventHandlerInfo.Equals(System.Object)
  - System.Windows.RoutedEventHandlerInfo.Equals(System.Windows.RoutedEventHandlerInfo)
  - System.Windows.RoutedEventHandlerInfo.GetHashCode
  - System.Windows.RoutedEventHandlerInfo.Handler
  - System.Windows.RoutedEventHandlerInfo.InvokeHandledEventsToo
  - System.Windows.RoutedEventHandlerInfo.op_Equality(System.Windows.RoutedEventHandlerInfo,System.Windows.RoutedEventHandlerInfo)
  - System.Windows.RoutedEventHandlerInfo.op_Inequality(System.Windows.RoutedEventHandlerInfo,System.Windows.RoutedEventHandlerInfo)
  langs:
  - csharp
  name: RoutedEventHandlerInfo
  nameWithType: RoutedEventHandlerInfo
  fullName: System.Windows.RoutedEventHandlerInfo
  type: Struct
  summary: "Provides special handling information to inform event listeners whether specific handlers should be invoked."
  syntax:
    content: public struct RoutedEventHandlerInfo
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Windows.RoutedEventHandlerInfo.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.RoutedEventHandlerInfo
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: RoutedEventHandlerInfo.Equals(Object)
  fullName: System.Windows.RoutedEventHandlerInfo.Equals(Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Determines whether the specified object is equivalent to the current <xref href=&quot;System.Windows.RoutedEventHandlerInfo&quot;></xref>."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "The object to compare to the current <xref href=&quot;System.Windows.RoutedEventHandlerInfo&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the specified object is equivalent to the current <xref href=&quot;System.Windows.RoutedEventHandlerInfo&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.RoutedEventHandlerInfo.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEventHandlerInfo.Equals(System.Windows.RoutedEventHandlerInfo)
  id: Equals(System.Windows.RoutedEventHandlerInfo)
  parent: System.Windows.RoutedEventHandlerInfo
  langs:
  - csharp
  name: Equals(RoutedEventHandlerInfo)
  nameWithType: RoutedEventHandlerInfo.Equals(RoutedEventHandlerInfo)
  fullName: System.Windows.RoutedEventHandlerInfo.Equals(RoutedEventHandlerInfo)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Determines whether the specified <xref href=&quot;System.Windows.RoutedEventHandlerInfo&quot;></xref> is equivalent to the current <xref href=&quot;System.Windows.RoutedEventHandlerInfo&quot;></xref>."
  remarks: "This implementation relies on value equivalence of the <xref:System.Windows.RoutedEventHandlerInfo.Handler%2A><xref:System.Windows.RoutedEventHandlerInfo.InvokeHandledEventsToo%2A> properties. The <xref:System.Windows.RoutedEventHandlerInfo.Handler%2A> property is a delegate reference. Therefore, equivalence implies a duplicate reference to the same handler."
  syntax:
    content: public bool Equals (System.Windows.RoutedEventHandlerInfo handlerInfo);
    parameters:
    - id: handlerInfo
      type: System.Windows.RoutedEventHandlerInfo
      description: "The <xref href=&quot;System.Windows.RoutedEventHandlerInfo&quot;></xref> to compare to the current <xref href=&quot;System.Windows.RoutedEventHandlerInfo&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the specified <xref href=&quot;System.Windows.RoutedEventHandlerInfo&quot;></xref> is equivalent to the current <xref href=&quot;System.Windows.RoutedEventHandlerInfo&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.RoutedEventHandlerInfo.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEventHandlerInfo.GetHashCode
  id: GetHashCode
  parent: System.Windows.RoutedEventHandlerInfo
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: RoutedEventHandlerInfo.GetHashCode()
  fullName: System.Windows.RoutedEventHandlerInfo.GetHashCode()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Returns a hash code for the current <xref href=&quot;System.Windows.RoutedEventHandlerInfo&quot;></xref>."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "A hash code for the current <xref href=&quot;System.Windows.RoutedEventHandlerInfo&quot;></xref>."
  overload: System.Windows.RoutedEventHandlerInfo.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEventHandlerInfo.Handler
  id: Handler
  parent: System.Windows.RoutedEventHandlerInfo
  langs:
  - csharp
  name: Handler
  nameWithType: RoutedEventHandlerInfo.Handler
  fullName: System.Windows.RoutedEventHandlerInfo.Handler
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Gets the event handler."
  syntax:
    content: public Delegate Handler { get; }
    return:
      type: System.Delegate
      description: "The event handler."
  overload: System.Windows.RoutedEventHandlerInfo.Handler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEventHandlerInfo.InvokeHandledEventsToo
  id: InvokeHandledEventsToo
  parent: System.Windows.RoutedEventHandlerInfo
  langs:
  - csharp
  name: InvokeHandledEventsToo
  nameWithType: RoutedEventHandlerInfo.InvokeHandledEventsToo
  fullName: System.Windows.RoutedEventHandlerInfo.InvokeHandledEventsToo
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Gets a value that indicates whether the event handler is invoked when the routed event is marked handled."
  syntax:
    content: public bool InvokeHandledEventsToo { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the event handler is invoked when the routed event is marked handled; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.RoutedEventHandlerInfo.InvokeHandledEventsToo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEventHandlerInfo.op_Equality(System.Windows.RoutedEventHandlerInfo,System.Windows.RoutedEventHandlerInfo)
  id: op_Equality(System.Windows.RoutedEventHandlerInfo,System.Windows.RoutedEventHandlerInfo)
  parent: System.Windows.RoutedEventHandlerInfo
  langs:
  - csharp
  name: op_Equality(RoutedEventHandlerInfo,RoutedEventHandlerInfo)
  nameWithType: RoutedEventHandlerInfo.op_Equality(RoutedEventHandlerInfo,RoutedEventHandlerInfo)
  fullName: System.Windows.RoutedEventHandlerInfo.op_Equality(RoutedEventHandlerInfo,RoutedEventHandlerInfo)
  type: Operator
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Determines whether the specified objects are equivalent."
  syntax:
    content: public static bool op_Equality (System.Windows.RoutedEventHandlerInfo handlerInfo1, System.Windows.RoutedEventHandlerInfo handlerInfo2);
    parameters:
    - id: handlerInfo1
      type: System.Windows.RoutedEventHandlerInfo
      description: "The first object to compare."
    - id: handlerInfo2
      type: System.Windows.RoutedEventHandlerInfo
      description: "The second object to compare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the objects are equivalent; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.RoutedEventHandlerInfo.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEventHandlerInfo.op_Inequality(System.Windows.RoutedEventHandlerInfo,System.Windows.RoutedEventHandlerInfo)
  id: op_Inequality(System.Windows.RoutedEventHandlerInfo,System.Windows.RoutedEventHandlerInfo)
  parent: System.Windows.RoutedEventHandlerInfo
  langs:
  - csharp
  name: op_Inequality(RoutedEventHandlerInfo,RoutedEventHandlerInfo)
  nameWithType: RoutedEventHandlerInfo.op_Inequality(RoutedEventHandlerInfo,RoutedEventHandlerInfo)
  fullName: System.Windows.RoutedEventHandlerInfo.op_Inequality(RoutedEventHandlerInfo,RoutedEventHandlerInfo)
  type: Operator
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "Determines whether the specified objects are not equivalent."
  syntax:
    content: public static bool op_Inequality (System.Windows.RoutedEventHandlerInfo handlerInfo1, System.Windows.RoutedEventHandlerInfo handlerInfo2);
    parameters:
    - id: handlerInfo1
      type: System.Windows.RoutedEventHandlerInfo
      description: "The first object to compare."
    - id: handlerInfo2
      type: System.Windows.RoutedEventHandlerInfo
      description: "The second object to compare."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the objects are not equivalent; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.RoutedEventHandlerInfo.op_Inequality*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Windows.RoutedEventHandlerInfo.Equals(System.Object)
  parent: System.Windows.RoutedEventHandlerInfo
  isExternal: false
  name: Equals(Object)
  nameWithType: RoutedEventHandlerInfo.Equals(Object)
  fullName: System.Windows.RoutedEventHandlerInfo.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.RoutedEventHandlerInfo.Equals(System.Windows.RoutedEventHandlerInfo)
  parent: System.Windows.RoutedEventHandlerInfo
  isExternal: false
  name: Equals(RoutedEventHandlerInfo)
  nameWithType: RoutedEventHandlerInfo.Equals(RoutedEventHandlerInfo)
  fullName: System.Windows.RoutedEventHandlerInfo.Equals(RoutedEventHandlerInfo)
- uid: System.Windows.RoutedEventHandlerInfo
  parent: System.Windows
  isExternal: false
  name: RoutedEventHandlerInfo
  nameWithType: RoutedEventHandlerInfo
  fullName: System.Windows.RoutedEventHandlerInfo
- uid: System.Windows.RoutedEventHandlerInfo.GetHashCode
  parent: System.Windows.RoutedEventHandlerInfo
  isExternal: false
  name: GetHashCode()
  nameWithType: RoutedEventHandlerInfo.GetHashCode()
  fullName: System.Windows.RoutedEventHandlerInfo.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.RoutedEventHandlerInfo.Handler
  parent: System.Windows.RoutedEventHandlerInfo
  isExternal: false
  name: Handler
  nameWithType: RoutedEventHandlerInfo.Handler
  fullName: System.Windows.RoutedEventHandlerInfo.Handler
- uid: System.Delegate
  parent: System
  isExternal: true
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.Windows.RoutedEventHandlerInfo.InvokeHandledEventsToo
  parent: System.Windows.RoutedEventHandlerInfo
  isExternal: false
  name: InvokeHandledEventsToo
  nameWithType: RoutedEventHandlerInfo.InvokeHandledEventsToo
  fullName: System.Windows.RoutedEventHandlerInfo.InvokeHandledEventsToo
- uid: System.Windows.RoutedEventHandlerInfo.op_Equality(System.Windows.RoutedEventHandlerInfo,System.Windows.RoutedEventHandlerInfo)
  parent: System.Windows.RoutedEventHandlerInfo
  isExternal: false
  name: op_Equality(RoutedEventHandlerInfo,RoutedEventHandlerInfo)
  nameWithType: RoutedEventHandlerInfo.op_Equality(RoutedEventHandlerInfo,RoutedEventHandlerInfo)
  fullName: System.Windows.RoutedEventHandlerInfo.op_Equality(RoutedEventHandlerInfo,RoutedEventHandlerInfo)
- uid: System.Windows.RoutedEventHandlerInfo.op_Inequality(System.Windows.RoutedEventHandlerInfo,System.Windows.RoutedEventHandlerInfo)
  parent: System.Windows.RoutedEventHandlerInfo
  isExternal: false
  name: op_Inequality(RoutedEventHandlerInfo,RoutedEventHandlerInfo)
  nameWithType: RoutedEventHandlerInfo.op_Inequality(RoutedEventHandlerInfo,RoutedEventHandlerInfo)
  fullName: System.Windows.RoutedEventHandlerInfo.op_Inequality(RoutedEventHandlerInfo,RoutedEventHandlerInfo)
- uid: System.Windows.RoutedEventHandlerInfo.Equals*
  parent: System.Windows.RoutedEventHandlerInfo
  isExternal: false
  name: Equals
  nameWithType: RoutedEventHandlerInfo.Equals
- uid: System.Windows.RoutedEventHandlerInfo.GetHashCode*
  parent: System.Windows.RoutedEventHandlerInfo
  isExternal: false
  name: GetHashCode
  nameWithType: RoutedEventHandlerInfo.GetHashCode
- uid: System.Windows.RoutedEventHandlerInfo.Handler*
  parent: System.Windows.RoutedEventHandlerInfo
  isExternal: false
  name: Handler
  nameWithType: RoutedEventHandlerInfo.Handler
- uid: System.Windows.RoutedEventHandlerInfo.InvokeHandledEventsToo*
  parent: System.Windows.RoutedEventHandlerInfo
  isExternal: false
  name: InvokeHandledEventsToo
  nameWithType: RoutedEventHandlerInfo.InvokeHandledEventsToo
- uid: System.Windows.RoutedEventHandlerInfo.op_Equality*
  parent: System.Windows.RoutedEventHandlerInfo
  isExternal: false
  name: op_Equality
  nameWithType: RoutedEventHandlerInfo.op_Equality
- uid: System.Windows.RoutedEventHandlerInfo.op_Inequality*
  parent: System.Windows.RoutedEventHandlerInfo
  isExternal: false
  name: op_Inequality
  nameWithType: RoutedEventHandlerInfo.op_Inequality
