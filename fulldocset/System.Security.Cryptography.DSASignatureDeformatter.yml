### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.DSASignatureDeformatter
  id: DSASignatureDeformatter
  children:
  - System.Security.Cryptography.DSASignatureDeformatter.#ctor
  - System.Security.Cryptography.DSASignatureDeformatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)
  - System.Security.Cryptography.DSASignatureDeformatter.SetHashAlgorithm(System.String)
  - System.Security.Cryptography.DSASignatureDeformatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)
  - System.Security.Cryptography.DSASignatureDeformatter.VerifySignature(System.Byte[],System.Byte[])
  langs:
  - csharp
  name: DSASignatureDeformatter
  nameWithType: DSASignatureDeformatter
  fullName: System.Security.Cryptography.DSASignatureDeformatter
  type: Class
  summary: "Verifies a Digital Signature Algorithm (<xref href=&quot;System.Security.Cryptography.DSA&quot;></xref>) PKCS#1 v1.5 signature."
  remarks: ''
  example:
  - >-
    [!code-cs[System.Security.Cryptography.DSASignatureDeformatter#1](~/add/codesnippet/csharp/t-system.security.crypto_51_1.cs)]
     [!code-cpp[System.Security.Cryptography.DSASignatureDeformatter#1](~/add/codesnippet/cpp/t-system.security.crypto_51_1.cpp)]
     [!code-vb[System.Security.Cryptography.DSASignatureDeformatter#1](~/add/codesnippet/visualbasic/t-system.security.crypto_51_1.vb)]
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class DSASignatureDeformatter : System.Security.Cryptography.AsymmetricSignatureDeformatter
  inheritance:
  - System.Object
  - System.Security.Cryptography.AsymmetricSignatureDeformatter
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Security.Cryptography.HashAlgorithm,System.Byte[])
  platform:
  - net462
- uid: System.Security.Cryptography.DSASignatureDeformatter.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.DSASignatureDeformatter
  langs:
  - csharp
  name: DSASignatureDeformatter()
  nameWithType: DSASignatureDeformatter.DSASignatureDeformatter()
  fullName: System.Security.Cryptography.DSASignatureDeformatter.DSASignatureDeformatter()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initializes a new instance of the <xref href=&quot;System.Security.Cryptography.DSASignatureDeformatter&quot;></xref> class."
  remarks: ''
  example:
  - >-
    [!code-cs[System.Security.Cryptography.DSASignatureDeformatter#1](~/add/codesnippet/csharp/m-system.security.crypto_102_1.cs)]
     [!code-cpp[System.Security.Cryptography.DSASignatureDeformatter#1](~/add/codesnippet/cpp/m-system.security.crypto_102_1.cpp)]
     [!code-vb[System.Security.Cryptography.DSASignatureDeformatter#1](~/add/codesnippet/visualbasic/m-system.security.crypto_102_1.vb)]
  syntax:
    content: public DSASignatureDeformatter ();
    parameters: []
  overload: System.Security.Cryptography.DSASignatureDeformatter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.DSASignatureDeformatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)
  id: '#ctor(System.Security.Cryptography.AsymmetricAlgorithm)'
  parent: System.Security.Cryptography.DSASignatureDeformatter
  langs:
  - csharp
  name: DSASignatureDeformatter(AsymmetricAlgorithm)
  nameWithType: DSASignatureDeformatter.DSASignatureDeformatter(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.DSASignatureDeformatter.DSASignatureDeformatter(AsymmetricAlgorithm)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Initializes a new instance of the <xref href=&quot;System.Security.Cryptography.DSASignatureDeformatter&quot;></xref> class with the specified key."
  syntax:
    content: public DSASignatureDeformatter (System.Security.Cryptography.AsymmetricAlgorithm key);
    parameters:
    - id: key
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: "The instance of Digital Signature Algorithm (<xref href=&quot;System.Security.Cryptography.DSA&quot;></xref>) that holds the key."
  overload: System.Security.Cryptography.DSASignatureDeformatter.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.DSASignatureDeformatter.SetHashAlgorithm(System.String)
  id: SetHashAlgorithm(System.String)
  parent: System.Security.Cryptography.DSASignatureDeformatter
  langs:
  - csharp
  name: SetHashAlgorithm(String)
  nameWithType: DSASignatureDeformatter.SetHashAlgorithm(String)
  fullName: System.Security.Cryptography.DSASignatureDeformatter.SetHashAlgorithm(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Specifies the hash algorithm for the Digital Signature Algorithm (<xref href=&quot;System.Security.Cryptography.DSA&quot;></xref>) signature deformatter."
  remarks: ''
  example:
  - >-
    [!code-cs[System.Security.Cryptography.DSASignatureDeformatter#1](~/add/codesnippet/csharp/d7721c10-6dcf-468e-8cd2-_1.cs)]
     [!code-cpp[System.Security.Cryptography.DSASignatureDeformatter#1](~/add/codesnippet/cpp/d7721c10-6dcf-468e-8cd2-_1.cpp)]
     [!code-vb[System.Security.Cryptography.DSASignatureDeformatter#1](~/add/codesnippet/visualbasic/d7721c10-6dcf-468e-8cd2-_1.vb)]
  syntax:
    content: public override void SetHashAlgorithm (string strName);
    parameters:
    - id: strName
      type: System.String
      description: "The name of the hash algorithm to use for the signature deformatter."
  overload: System.Security.Cryptography.DSASignatureDeformatter.SetHashAlgorithm*
  exceptions:
  - type: System.Security.Cryptography.CryptographicUnexpectedOperationException
    commentId: T:System.Security.Cryptography.CryptographicUnexpectedOperationException
    description: "The <code>strName</code> parameter does not map to the <xref href=&quot;System.Security.Cryptography.SHA1&quot;></xref> hash algorithm."
  platform:
  - net462
- uid: System.Security.Cryptography.DSASignatureDeformatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)
  id: SetKey(System.Security.Cryptography.AsymmetricAlgorithm)
  parent: System.Security.Cryptography.DSASignatureDeformatter
  langs:
  - csharp
  name: SetKey(AsymmetricAlgorithm)
  nameWithType: DSASignatureDeformatter.SetKey(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.DSASignatureDeformatter.SetKey(AsymmetricAlgorithm)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Specifies the key to be used for the Digital Signature Algorithm (<xref href=&quot;System.Security.Cryptography.DSA&quot;></xref>) signature deformatter."
  syntax:
    content: public override void SetKey (System.Security.Cryptography.AsymmetricAlgorithm key);
    parameters:
    - id: key
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: "The instance of <xref href=&quot;System.Security.Cryptography.DSA&quot;></xref> that holds the key."
  overload: System.Security.Cryptography.DSASignatureDeformatter.SetKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.DSASignatureDeformatter.VerifySignature(System.Byte[],System.Byte[])
  id: VerifySignature(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.DSASignatureDeformatter
  langs:
  - csharp
  name: VerifySignature(Byte[],Byte[])
  nameWithType: DSASignatureDeformatter.VerifySignature(Byte[],Byte[])
  fullName: System.Security.Cryptography.DSASignatureDeformatter.VerifySignature(Byte[],Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Verifies the Digital Signature Algorithm (<xref href=&quot;System.Security.Cryptography.DSA&quot;></xref>) signature on the data."
  remarks: ''
  example:
  - >-
    [!code-cs[System.Security.Cryptography.DSASignatureDeformatter#1](~/add/codesnippet/csharp/19d138e4-9862-459e-90a1-_1.cs)]
     [!code-cpp[System.Security.Cryptography.DSASignatureDeformatter#1](~/add/codesnippet/cpp/19d138e4-9862-459e-90a1-_1.cpp)]
     [!code-vb[System.Security.Cryptography.DSASignatureDeformatter#1](~/add/codesnippet/visualbasic/19d138e4-9862-459e-90a1-_1.vb)]
  syntax:
    content: public override bool VerifySignature (byte[] rgbHash, byte[] rgbSignature);
    parameters:
    - id: rgbHash
      type: System.Byte[]
      description: "The data signed with `rgbSignature`."
    - id: rgbSignature
      type: System.Byte[]
      description: "The signature to be verified for `rgbHash`."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the signature is valid for the data; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Cryptography.DSASignatureDeformatter.VerifySignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>rgbHash</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>rgbSignature</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicUnexpectedOperationException
    commentId: T:System.Security.Cryptography.CryptographicUnexpectedOperationException
    description: "The DSA key is missing."
  platform:
  - net462
references:
- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter
  isExternal: false
  name: System.Security.Cryptography.AsymmetricSignatureDeformatter
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.CryptographicUnexpectedOperationException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicUnexpectedOperationException
  nameWithType: CryptographicUnexpectedOperationException
  fullName: System.Security.Cryptography.CryptographicUnexpectedOperationException
- uid: System.Security.Cryptography.DSASignatureDeformatter.#ctor
  parent: System.Security.Cryptography.DSASignatureDeformatter
  isExternal: false
  name: DSASignatureDeformatter()
  nameWithType: DSASignatureDeformatter.DSASignatureDeformatter()
  fullName: System.Security.Cryptography.DSASignatureDeformatter.DSASignatureDeformatter()
- uid: System.Security.Cryptography.DSASignatureDeformatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)
  parent: System.Security.Cryptography.DSASignatureDeformatter
  isExternal: false
  name: DSASignatureDeformatter(AsymmetricAlgorithm)
  nameWithType: DSASignatureDeformatter.DSASignatureDeformatter(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.DSASignatureDeformatter.DSASignatureDeformatter(AsymmetricAlgorithm)
- uid: System.Security.Cryptography.AsymmetricAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: AsymmetricAlgorithm
  nameWithType: AsymmetricAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm
- uid: System.Security.Cryptography.DSASignatureDeformatter.SetHashAlgorithm(System.String)
  parent: System.Security.Cryptography.DSASignatureDeformatter
  isExternal: false
  name: SetHashAlgorithm(String)
  nameWithType: DSASignatureDeformatter.SetHashAlgorithm(String)
  fullName: System.Security.Cryptography.DSASignatureDeformatter.SetHashAlgorithm(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.DSASignatureDeformatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)
  parent: System.Security.Cryptography.DSASignatureDeformatter
  isExternal: false
  name: SetKey(AsymmetricAlgorithm)
  nameWithType: DSASignatureDeformatter.SetKey(AsymmetricAlgorithm)
  fullName: System.Security.Cryptography.DSASignatureDeformatter.SetKey(AsymmetricAlgorithm)
- uid: System.Security.Cryptography.DSASignatureDeformatter.VerifySignature(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.DSASignatureDeformatter
  isExternal: false
  name: VerifySignature(Byte[],Byte[])
  nameWithType: DSASignatureDeformatter.VerifySignature(Byte[],Byte[])
  fullName: System.Security.Cryptography.DSASignatureDeformatter.VerifySignature(Byte[],Byte[])
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.DSASignatureDeformatter.#ctor*
  parent: System.Security.Cryptography.DSASignatureDeformatter
  isExternal: false
  name: DSASignatureDeformatter
  nameWithType: DSASignatureDeformatter.DSASignatureDeformatter
- uid: System.Security.Cryptography.DSASignatureDeformatter.SetHashAlgorithm*
  parent: System.Security.Cryptography.DSASignatureDeformatter
  isExternal: false
  name: SetHashAlgorithm
  nameWithType: DSASignatureDeformatter.SetHashAlgorithm
- uid: System.Security.Cryptography.DSASignatureDeformatter.SetKey*
  parent: System.Security.Cryptography.DSASignatureDeformatter
  isExternal: false
  name: SetKey
  nameWithType: DSASignatureDeformatter.SetKey
- uid: System.Security.Cryptography.DSASignatureDeformatter.VerifySignature*
  parent: System.Security.Cryptography.DSASignatureDeformatter
  isExternal: false
  name: VerifySignature
  nameWithType: DSASignatureDeformatter.VerifySignature
