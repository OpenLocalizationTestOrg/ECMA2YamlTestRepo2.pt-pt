### YamlMime:ManagedReference
items:
- uid: System.AddIn.Contract.IContract
  id: IContract
  children:
  - System.AddIn.Contract.IContract.AcquireLifetimeToken
  - System.AddIn.Contract.IContract.GetRemoteHashCode
  - System.AddIn.Contract.IContract.QueryContract(System.String)
  - System.AddIn.Contract.IContract.RemoteEquals(System.AddIn.Contract.IContract)
  - System.AddIn.Contract.IContract.RemoteToString
  - System.AddIn.Contract.IContract.RevokeLifetimeToken(System.Int32)
  langs:
  - csharp
  name: IContract
  nameWithType: IContract
  fullName: System.AddIn.Contract.IContract
  type: Interface
  summary: "Represents the base interface for all contracts that are used for communication between components that are updated independently."
  remarks: "The IContract interface defines a contract that independently updated components, such as an application and an add-in, can use to communicate. Components can use IContract to communicate across process or application domain boundaries, or to communicate with other components in the same process or application domain. IContract serves a similar purpose for components created using the .NET Framework as the `IUnknown` interface serves for components created using COM. To determine whether an object implements a particular contract, use the <xref:System.AddIn.Contract.IContract.QueryContract%2A> method."
  syntax:
    content: public interface IContract
  implements: []
  platform:
  - net462
- uid: System.AddIn.Contract.IContract.AcquireLifetimeToken
  id: AcquireLifetimeToken
  parent: System.AddIn.Contract.IContract
  langs:
  - csharp
  name: AcquireLifetimeToken()
  nameWithType: IContract.AcquireLifetimeToken()
  fullName: System.AddIn.Contract.IContract.AcquireLifetimeToken()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Specifies that the contract is accessible to a client until the client revokes the contract."
  remarks: "Clients of an object that implements <xref:System.AddIn.Contract.IContract> call the AcquireLifetimeToken method to notify the object that the client requires access to the contract. An <xref:System.AddIn.Contract.IContract> is guaranteed to be usable as long as at least one lifetime token that it passed to a client has not been revoked.       To revoke a contract, clients call the <xref:System.AddIn.Contract.IContract.RevokeLifetimeToken%2A> method."
  syntax:
    content: public int AcquireLifetimeToken ();
    parameters: []
    return:
      type: System.Int32
      description: "A value, also known as a lifetime token, that identifies the client that has acquired the contract."
  overload: System.AddIn.Contract.IContract.AcquireLifetimeToken*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.IContract.GetRemoteHashCode
  id: GetRemoteHashCode
  parent: System.AddIn.Contract.IContract
  langs:
  - csharp
  name: GetRemoteHashCode()
  nameWithType: IContract.GetRemoteHashCode()
  fullName: System.AddIn.Contract.IContract.GetRemoteHashCode()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Returns a hash code for the <xref href=&quot;System.AddIn.Contract.IContract&quot;></xref>."
  syntax:
    content: public int GetRemoteHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "A hash code for the <xref href=&quot;System.AddIn.Contract.IContract&quot;></xref>."
  overload: System.AddIn.Contract.IContract.GetRemoteHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.IContract.QueryContract(System.String)
  id: QueryContract(System.String)
  parent: System.AddIn.Contract.IContract
  langs:
  - csharp
  name: QueryContract(String)
  nameWithType: IContract.QueryContract(String)
  fullName: System.AddIn.Contract.IContract.QueryContract(String)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Returns a contract that is implemented by this contract."
  remarks: "The QueryContract method enables <xref:System.AddIn.Contract.IContract> objects to expose other contracts. QueryContract serves a purpose similar to that of the `IUnknown.QueryInterface` method in COM.       The format of the strings used to identify contracts is defined by the <xref:System.AddIn.Contract.IContract> implementation. It is recommended that you use the <xref:System.Type.AssemblyQualifiedName%2A> of the contract that is being queried."
  syntax:
    content: public System.AddIn.Contract.IContract QueryContract (string contractIdentifier);
    parameters:
    - id: contractIdentifier
      type: System.String
      description: "A string that identifies the contract that is being requested."
    return:
      type: System.AddIn.Contract.IContract
      description: "An <xref href=&quot;System.AddIn.Contract.IContract&quot;></xref> that represents a contract that a client is requesting from the current contract; <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if the current contract does not support the contract that is requested."
  overload: System.AddIn.Contract.IContract.QueryContract*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.IContract.RemoteEquals(System.AddIn.Contract.IContract)
  id: RemoteEquals(System.AddIn.Contract.IContract)
  parent: System.AddIn.Contract.IContract
  langs:
  - csharp
  name: RemoteEquals(IContract)
  nameWithType: IContract.RemoteEquals(IContract)
  fullName: System.AddIn.Contract.IContract.RemoteEquals(IContract)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Indicates whether the specified contract is equal to this <xref href=&quot;System.AddIn.Contract.IContract&quot;></xref>."
  syntax:
    content: public bool RemoteEquals (System.AddIn.Contract.IContract contract);
    parameters:
    - id: contract
      type: System.AddIn.Contract.IContract
      description: "The contract to compare with this <xref href=&quot;System.AddIn.Contract.IContract&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if <code>contract</code> is equal to this <xref href=&quot;System.AddIn.Contract.IContract&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.AddIn.Contract.IContract.RemoteEquals*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.IContract.RemoteToString
  id: RemoteToString
  parent: System.AddIn.Contract.IContract
  langs:
  - csharp
  name: RemoteToString()
  nameWithType: IContract.RemoteToString()
  fullName: System.AddIn.Contract.IContract.RemoteToString()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Returns a string representation of the current <xref href=&quot;System.AddIn.Contract.IContract&quot;></xref>."
  syntax:
    content: public string RemoteToString ();
    parameters: []
    return:
      type: System.String
      description: "A string representation of the current <xref href=&quot;System.AddIn.Contract.IContract&quot;></xref>."
  overload: System.AddIn.Contract.IContract.RemoteToString*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.IContract.RevokeLifetimeToken(System.Int32)
  id: RevokeLifetimeToken(System.Int32)
  parent: System.AddIn.Contract.IContract
  langs:
  - csharp
  name: RevokeLifetimeToken(Int32)
  nameWithType: IContract.RevokeLifetimeToken(Int32)
  fullName: System.AddIn.Contract.IContract.RevokeLifetimeToken(Int32)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: "Specifies that the contract is no longer accessible to a client."
  remarks: "Clients of an object that implements <xref:System.AddIn.Contract.IContract> call the RevokeLifetimeToken method to notify the object that the client no longer needs the contract. An <xref:System.AddIn.Contract.IContract> is guaranteed to be usable as long as at least one lifetime token that it passed to a client has not been revoked.       To acquire a contract, clients call the <xref:System.AddIn.Contract.IContract.AcquireLifetimeToken%2A> method."
  syntax:
    content: public void RevokeLifetimeToken (int token);
    parameters:
    - id: token
      type: System.Int32
      description: "A value, also known as a lifetime token, that identifies the client that is revoking the contract."
  overload: System.AddIn.Contract.IContract.RevokeLifetimeToken*
  exceptions: []
  platform:
  - net462
references:
- uid: System.AddIn.Contract.IContract.AcquireLifetimeToken
  parent: System.AddIn.Contract.IContract
  isExternal: false
  name: AcquireLifetimeToken()
  nameWithType: IContract.AcquireLifetimeToken()
  fullName: System.AddIn.Contract.IContract.AcquireLifetimeToken()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.AddIn.Contract.IContract.GetRemoteHashCode
  parent: System.AddIn.Contract.IContract
  isExternal: false
  name: GetRemoteHashCode()
  nameWithType: IContract.GetRemoteHashCode()
  fullName: System.AddIn.Contract.IContract.GetRemoteHashCode()
- uid: System.AddIn.Contract.IContract.QueryContract(System.String)
  parent: System.AddIn.Contract.IContract
  isExternal: false
  name: QueryContract(String)
  nameWithType: IContract.QueryContract(String)
  fullName: System.AddIn.Contract.IContract.QueryContract(String)
- uid: System.AddIn.Contract.IContract
  parent: System.AddIn.Contract
  isExternal: false
  name: IContract
  nameWithType: IContract
  fullName: System.AddIn.Contract.IContract
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.AddIn.Contract.IContract.RemoteEquals(System.AddIn.Contract.IContract)
  parent: System.AddIn.Contract.IContract
  isExternal: false
  name: RemoteEquals(IContract)
  nameWithType: IContract.RemoteEquals(IContract)
  fullName: System.AddIn.Contract.IContract.RemoteEquals(IContract)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.AddIn.Contract.IContract.RemoteToString
  parent: System.AddIn.Contract.IContract
  isExternal: false
  name: RemoteToString()
  nameWithType: IContract.RemoteToString()
  fullName: System.AddIn.Contract.IContract.RemoteToString()
- uid: System.AddIn.Contract.IContract.RevokeLifetimeToken(System.Int32)
  parent: System.AddIn.Contract.IContract
  isExternal: false
  name: RevokeLifetimeToken(Int32)
  nameWithType: IContract.RevokeLifetimeToken(Int32)
  fullName: System.AddIn.Contract.IContract.RevokeLifetimeToken(Int32)
- uid: System.AddIn.Contract.IContract.AcquireLifetimeToken*
  parent: System.AddIn.Contract.IContract
  isExternal: false
  name: AcquireLifetimeToken
  nameWithType: IContract.AcquireLifetimeToken
- uid: System.AddIn.Contract.IContract.GetRemoteHashCode*
  parent: System.AddIn.Contract.IContract
  isExternal: false
  name: GetRemoteHashCode
  nameWithType: IContract.GetRemoteHashCode
- uid: System.AddIn.Contract.IContract.QueryContract*
  parent: System.AddIn.Contract.IContract
  isExternal: false
  name: QueryContract
  nameWithType: IContract.QueryContract
- uid: System.AddIn.Contract.IContract.RemoteEquals*
  parent: System.AddIn.Contract.IContract
  isExternal: false
  name: RemoteEquals
  nameWithType: IContract.RemoteEquals
- uid: System.AddIn.Contract.IContract.RemoteToString*
  parent: System.AddIn.Contract.IContract
  isExternal: false
  name: RemoteToString
  nameWithType: IContract.RemoteToString
- uid: System.AddIn.Contract.IContract.RevokeLifetimeToken*
  parent: System.AddIn.Contract.IContract
  isExternal: false
  name: RevokeLifetimeToken
  nameWithType: IContract.RevokeLifetimeToken
