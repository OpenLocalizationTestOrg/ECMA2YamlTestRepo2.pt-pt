### YamlMime:ManagedReference
items:
- uid: System.Windows.Interop.WindowInteropHelper
  id: WindowInteropHelper
  children:
  - System.Windows.Interop.WindowInteropHelper.#ctor(System.Windows.Window)
  - System.Windows.Interop.WindowInteropHelper.EnsureHandle
  - System.Windows.Interop.WindowInteropHelper.Handle
  - System.Windows.Interop.WindowInteropHelper.Owner
  langs:
  - csharp
  name: WindowInteropHelper
  nameWithType: WindowInteropHelper
  fullName: System.Windows.Interop.WindowInteropHelper
  type: Class
  summary: "Ajuda a interoperacionalidade entre [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] e [!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)] código."
  remarks: "Os membros desta classe permite ao chamador tenham acesso interno para o [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] HWND e HWND principal de um [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] <xref:System.Windows.Window>.</xref:System.Windows.Window>  Os membros são efetuadas as verificações de segurança adequada.       Utilize esta classe sempre que precisar de um objeto mais específico com base no respetivo HWND.       Um cenário de exemplo é se de que necessita alojar um [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] caixa de diálogo num [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] aplicação. Inicializar o WindowInteropHelper com um [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] objeto de janela para a caixa de diálogo. Em seguida, pode obter o [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] identificador da janela (HWND) da <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A>propriedade e especifique o proprietário para o [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] janela com o <xref:System.Windows.Interop.WindowInteropHelper.Owner%2A>propriedade.</xref:System.Windows.Interop.WindowInteropHelper.Owner%2A> </xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> Exemplo de código seguinte mostra como utilizar WindowInteropHelper quando alojam um [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] caixa de diálogo num [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] aplicação.       [!code-cs[CorePseudocode #WindowInteropHelper](~/add/codesnippet/csharp/CorePseudocode/corepseudocode.cs#windowinterophelper)][!code-vb[CorePseudocode #WindowInteropHelper](~/add/codesnippet/visualbasic/corepseudocode/corepseudocode.vb#windowinterophelper) ] outro cenário suportado por esta classe é a obter um <xref:System.Windows.Interop.HwndSource>objeto a partir de um [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] <xref:System.Windows.Window>objeto.</xref:System.Windows.Window> </xref:System.Windows.Interop.HwndSource>   O <xref:System.Windows.Interop.HwndSource>permite direcionar o processamento de [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] mensagens através de <xref:System.Windows.Interop.HwndSource.AddHook%2A>método.</xref:System.Windows.Interop.HwndSource.AddHook%2A> </xref:System.Windows.Interop.HwndSource> Ao utilizar <xref:System.Windows.Interop.HwndSource>e <xref:System.Windows.Interop.HwndSource.AddHook%2A>em vez de um <xref:System.Windows.Window>ainda pode processar as mensagens com não equivalente ou processamento no [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)].</xref:System.Windows.Window> </xref:System.Windows.Interop.HwndSource.AddHook%2A> </xref:System.Windows.Interop.HwndSource> Criar um WindowInteropHelper com a <xref:System.Windows.Window>origem, em seguida, invoque <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A>o WindowInteropHelper para aproveitar HWND para <xref:System.Windows.Interop.HwndSource>.</xref:System.Windows.Interop.HwndSource> </xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> </xref:System.Windows.Window>"
  syntax:
    content: public sealed class WindowInteropHelper
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Interop.WindowInteropHelper.#ctor(System.Windows.Window)
  id: '#ctor(System.Windows.Window)'
  parent: System.Windows.Interop.WindowInteropHelper
  langs:
  - csharp
  name: WindowInteropHelper(Window)
  nameWithType: WindowInteropHelper.WindowInteropHelper(Window)
  fullName: System.Windows.Interop.WindowInteropHelper.WindowInteropHelper(Window)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Interop
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.Interop.WindowInteropHelper&quot;> </xref> classe para uma determinada [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] janela."
  remarks: "A janela pode ter uma caixa de diálogo, ou uma janela que caso contrário, não é adequada para a ser alojado dentro dos limites de um [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] aplicação."
  syntax:
    content: public WindowInteropHelper (System.Windows.Window window);
    parameters:
    - id: window
      type: System.Windows.Window
      description: "A [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] objeto de janela."
  overload: System.Windows.Interop.WindowInteropHelper.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Interop.WindowInteropHelper.EnsureHandle
  id: EnsureHandle
  parent: System.Windows.Interop.WindowInteropHelper
  langs:
  - csharp
  name: EnsureHandle()
  nameWithType: WindowInteropHelper.EnsureHandle()
  fullName: System.Windows.Interop.WindowInteropHelper.EnsureHandle()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Interop
  summary: "Cria o HWND da janela, se o HWND ainda não foi criado."
  remarks: "Utilize o método de EnsureHandle quando pretender separar janela identificador (HWND) a criação do apresentado real de gerido <xref:System.Windows.Window>.</xref:System.Windows.Window> Isto é útil quando tiver um cliente de automatização que pode realizar as respetivas tarefas sem a necessidade de que mostra uma janela.       Se a janela nativa ainda não tiver sido criada, este método cria a janela nativa, define o <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A>propriedade e devolve o HWND.</xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> Se a janela nativa já foi criada, é devolvido o identificador da janela nativo existente.       Se a janela nativa é criada como resultado de chamar este método, o <xref:System.Windows.Window.SourceInitialized>o evento é gerado.</xref:System.Windows.Window.SourceInitialized>       Consultar o <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A>propriedade depois do método EnsureHandle é chamado devolve o identificador de janela existente.</xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> A árvore visual não está ligada a janela até depois do <xref:System.Windows.Window.Show%2A>método é chamado.</xref:System.Windows.Window.Show%2A>       Chamar o método de EnsureHandle mais do que uma vez não criar novos identificadores de janela. Chamar o método de EnsureHandle quando o identificador já tiver sido criado por uma chamada para o <xref:System.Windows.Window.Show%2A>método não cria um novo identificador de janela.</xref:System.Windows.Window.Show%2A> Uma janela nativa só é criada quando nenhum identificador existe quando o método EnsureHandle é chamado.       Propriedades de janela que são definidas utilizando nativa janela APIs através de p/invoke não podem aparecer na janela gerida APIs. Por exemplo, se definir a janela para ser mais superiores ao utilizar o sinalizador MS_EX_TOPMOST nativo após o método EnsureHandle é chamado, o <xref:System.Windows.Window.Topmost%2A>propriedade não é assegurada para refletir a definição nativa.</xref:System.Windows.Window.Topmost%2A>"
  syntax:
    content: public IntPtr EnsureHandle ();
    parameters: []
    return:
      type: System.IntPtr
      description: "Um <xref:System.IntPtr>que representa o HWND.</xref:System.IntPtr>"
  overload: System.Windows.Interop.WindowInteropHelper.EnsureHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Interop.WindowInteropHelper.Handle
  id: Handle
  parent: System.Windows.Interop.WindowInteropHelper
  langs:
  - csharp
  name: Handle
  nameWithType: WindowInteropHelper.Handle
  fullName: System.Windows.Interop.WindowInteropHelper.Handle
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Interop
  summary: "Obtém o identificador de janela para um [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] janela que é utilizada para criar esta <xref href=&quot;System.Windows.Interop.WindowInteropHelper&quot;> </xref>."
  syntax:
    content: public IntPtr Handle { get; }
    return:
      type: System.IntPtr
      description: "O [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] identificador de janela (HWND)."
  overload: System.Windows.Interop.WindowInteropHelper.Handle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Interop.WindowInteropHelper.Owner
  id: Owner
  parent: System.Windows.Interop.WindowInteropHelper
  langs:
  - csharp
  name: Owner
  nameWithType: WindowInteropHelper.Owner
  fullName: System.Windows.Interop.WindowInteropHelper.Owner
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Interop
  summary: "Obtém ou define o identificador do [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] janela de proprietário."
  remarks: "Pode reparent windows ao definir esta propriedade. Como é verdadeiro para geral [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] de programação, não reparent windows que já estão em utilização."
  syntax:
    content: public IntPtr Owner { get; set; }
    return:
      type: System.IntPtr
      description: "O identificador de janela de proprietário (HWND)."
  overload: System.Windows.Interop.WindowInteropHelper.Owner*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Interop.WindowInteropHelper.#ctor(System.Windows.Window)
  parent: System.Windows.Interop.WindowInteropHelper
  isExternal: false
  name: WindowInteropHelper(Window)
  nameWithType: WindowInteropHelper.WindowInteropHelper(Window)
  fullName: System.Windows.Interop.WindowInteropHelper.WindowInteropHelper(Window)
- uid: System.Windows.Window
  parent: System.Windows
  isExternal: false
  name: Window
  nameWithType: Window
  fullName: System.Windows.Window
- uid: System.Windows.Interop.WindowInteropHelper.EnsureHandle
  parent: System.Windows.Interop.WindowInteropHelper
  isExternal: false
  name: EnsureHandle()
  nameWithType: WindowInteropHelper.EnsureHandle()
  fullName: System.Windows.Interop.WindowInteropHelper.EnsureHandle()
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Windows.Interop.WindowInteropHelper.Handle
  parent: System.Windows.Interop.WindowInteropHelper
  isExternal: false
  name: Handle
  nameWithType: WindowInteropHelper.Handle
  fullName: System.Windows.Interop.WindowInteropHelper.Handle
- uid: System.Windows.Interop.WindowInteropHelper.Owner
  parent: System.Windows.Interop.WindowInteropHelper
  isExternal: false
  name: Owner
  nameWithType: WindowInteropHelper.Owner
  fullName: System.Windows.Interop.WindowInteropHelper.Owner
- uid: System.Windows.Interop.WindowInteropHelper.#ctor*
  parent: System.Windows.Interop.WindowInteropHelper
  isExternal: false
  name: WindowInteropHelper
  nameWithType: WindowInteropHelper.WindowInteropHelper
- uid: System.Windows.Interop.WindowInteropHelper.EnsureHandle*
  parent: System.Windows.Interop.WindowInteropHelper
  isExternal: false
  name: EnsureHandle
  nameWithType: WindowInteropHelper.EnsureHandle
- uid: System.Windows.Interop.WindowInteropHelper.Handle*
  parent: System.Windows.Interop.WindowInteropHelper
  isExternal: false
  name: Handle
  nameWithType: WindowInteropHelper.Handle
- uid: System.Windows.Interop.WindowInteropHelper.Owner*
  parent: System.Windows.Interop.WindowInteropHelper
  isExternal: false
  name: Owner
  nameWithType: WindowInteropHelper.Owner
