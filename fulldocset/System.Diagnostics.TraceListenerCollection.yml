### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.TraceListenerCollection
  id: TraceListenerCollection
  children:
  - System.Diagnostics.TraceListenerCollection.Add(System.Diagnostics.TraceListener)
  - System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListener[])
  - System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListenerCollection)
  - System.Diagnostics.TraceListenerCollection.Clear
  - System.Diagnostics.TraceListenerCollection.Contains(System.Diagnostics.TraceListener)
  - System.Diagnostics.TraceListenerCollection.CopyTo(System.Diagnostics.TraceListener[],System.Int32)
  - System.Diagnostics.TraceListenerCollection.Count
  - System.Diagnostics.TraceListenerCollection.GetEnumerator
  - System.Diagnostics.TraceListenerCollection.IndexOf(System.Diagnostics.TraceListener)
  - System.Diagnostics.TraceListenerCollection.Insert(System.Int32,System.Diagnostics.TraceListener)
  - System.Diagnostics.TraceListenerCollection.Item(System.Int32)
  - System.Diagnostics.TraceListenerCollection.Item(System.String)
  - System.Diagnostics.TraceListenerCollection.Remove(System.Diagnostics.TraceListener)
  - System.Diagnostics.TraceListenerCollection.Remove(System.String)
  - System.Diagnostics.TraceListenerCollection.RemoveAt(System.Int32)
  - System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#IsSynchronized
  - System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#SyncRoot
  - System.Diagnostics.TraceListenerCollection.System#Collections#IList#Add(System.Object)
  - System.Diagnostics.TraceListenerCollection.System#Collections#IList#Contains(System.Object)
  - System.Diagnostics.TraceListenerCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Diagnostics.TraceListenerCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsFixedSize
  - System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsReadOnly
  - System.Diagnostics.TraceListenerCollection.System#Collections#IList#Item(System.Int32)
  - System.Diagnostics.TraceListenerCollection.System#Collections#IList#Remove(System.Object)
  langs:
  - csharp
  name: TraceListenerCollection
  nameWithType: TraceListenerCollection
  fullName: System.Diagnostics.TraceListenerCollection
  type: Class
  summary: "Provides a thread-safe list of <xref href=&quot;System.Diagnostics.TraceListener&quot;></xref> objects."
  remarks: "The TraceListenerCollection list is used to specify the output listeners for the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> and the <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=fullName> collections. You cannot create an instance of this class.       This list is thread-safe, however the methods used to access the list and the enumerator do not take synchronization locks. Instead, the collection is copied, the copy is modified, and a reference is set to the copy of the collection. Methods like <xref:System.Diagnostics.TraceListenerCollection.Add%2A>, <xref:System.Diagnostics.TraceListenerCollection.Remove%2A>, and <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> modify the elements in the collection.       The TraceListenerCollection class provides the <xref:System.Diagnostics.TraceListenerCollection.Count%2A> property for information about the list. It also provides the following methods: <xref:System.Diagnostics.TraceListenerCollection.Contains%2A>, <xref:System.Diagnostics.TraceListenerCollection.GetEnumerator%2A>, <xref:System.Diagnostics.TraceListenerCollection.IndexOf%2A>.       This class also provides the following methods to modify the list: <xref:System.Diagnostics.TraceListenerCollection.Add%2A>, <xref:System.Diagnostics.TraceListenerCollection.Clear%2A>, <xref:System.Diagnostics.TraceListenerCollection.Insert%2A>, and <xref:System.Diagnostics.TraceListenerCollection.Remove%2A>. The <xref:System.Diagnostics.TraceListenerCollection.CopyTo%2A> method copies a part of the list to an array. The <xref:System.Diagnostics.TraceListenerCollection.RemoveAt%2A> method deletes the list member at a specified index number."
  example:
  - "The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> that writes to the console screen. The code then adds the new listener to the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName>.  \n  \n [!code-cs[Classic Trace.Listeners Example#1](~/add/codesnippet/csharp/t-system.diagnostics.tra_1_1.cs)]\n [!code-vb[Classic Trace.Listeners Example#1](~/add/codesnippet/visualbasic/t-system.diagnostics.tra_1_1.vb)]\n [!code-cpp[Classic Trace.Listeners Example#1](~/add/codesnippet/cpp/t-system.diagnostics.tra_1_1.cpp)]"
  syntax:
    content: 'public class TraceListenerCollection : System.Collections.IList'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IList
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.Add(System.Diagnostics.TraceListener)
  id: Add(System.Diagnostics.TraceListener)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: Add(TraceListener)
  nameWithType: TraceListenerCollection.Add(TraceListener)
  fullName: System.Diagnostics.TraceListenerCollection.Add(TraceListener)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Adds a <xref href=&quot;System.Diagnostics.TraceListener&quot;></xref> to the list."
  remarks: ''
  example:
  - "The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> that outputs to the console screen. The code then adds the new listener to the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName>.  \n  \n [!code-cpp[Classic TraceListenerCollection.Add Example#1](~/add/codesnippet/cpp/06848b43-b480-461b-8d6e-_1.cpp)]\n [!code-vb[Classic TraceListenerCollection.Add Example#1](~/add/codesnippet/visualbasic/06848b43-b480-461b-8d6e-_1.vb)]\n [!code-cs[Classic TraceListenerCollection.Add Example#1](~/add/codesnippet/csharp/06848b43-b480-461b-8d6e-_1.cs)]"
  syntax:
    content: public int Add (System.Diagnostics.TraceListener listener);
    parameters:
    - id: listener
      type: System.Diagnostics.TraceListener
      description: "A <xref href=&quot;System.Diagnostics.TraceListener&quot;></xref> to add to the list."
    return:
      type: System.Int32
      description: "The position at which the new listener was inserted."
  overload: System.Diagnostics.TraceListenerCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListener[])
  id: AddRange(System.Diagnostics.TraceListener[])
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: AddRange(TraceListener[])
  nameWithType: TraceListenerCollection.AddRange(TraceListener[])
  fullName: System.Diagnostics.TraceListenerCollection.AddRange(TraceListener[])
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Adds an array of <xref href=&quot;System.Diagnostics.TraceListener&quot;></xref> objects to the list."
  syntax:
    content: public void AddRange (System.Diagnostics.TraceListener[] value);
    parameters:
    - id: value
      type: System.Diagnostics.TraceListener[]
      description: "An array of <xref href=&quot;System.Diagnostics.TraceListener&quot;></xref> objects to add to the list."
  overload: System.Diagnostics.TraceListenerCollection.AddRange*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListenerCollection)
  id: AddRange(System.Diagnostics.TraceListenerCollection)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: AddRange(TraceListenerCollection)
  nameWithType: TraceListenerCollection.AddRange(TraceListenerCollection)
  fullName: System.Diagnostics.TraceListenerCollection.AddRange(TraceListenerCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Adds the contents of another <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;></xref> to the list."
  syntax:
    content: public void AddRange (System.Diagnostics.TraceListenerCollection value);
    parameters:
    - id: value
      type: System.Diagnostics.TraceListenerCollection
      description: "Another <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;></xref> whose contents are added to the list."
  overload: System.Diagnostics.TraceListenerCollection.AddRange*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.Clear
  id: Clear
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: TraceListenerCollection.Clear()
  fullName: System.Diagnostics.TraceListenerCollection.Clear()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Clears all the listeners from the list."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Diagnostics.TraceListenerCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.Contains(System.Diagnostics.TraceListener)
  id: Contains(System.Diagnostics.TraceListener)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: Contains(TraceListener)
  nameWithType: TraceListenerCollection.Contains(TraceListener)
  fullName: System.Diagnostics.TraceListenerCollection.Contains(TraceListener)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Checks whether the list contains the specified listener."
  remarks: "The Contains method can confirm the existence of a <xref:System.Diagnostics.TraceListener> before you perform further operations."
  syntax:
    content: public bool Contains (System.Diagnostics.TraceListener listener);
    parameters:
    - id: listener
      type: System.Diagnostics.TraceListener
      description: "A <xref href=&quot;System.Diagnostics.TraceListener&quot;></xref> to find in the list."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the listener is in the list; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Diagnostics.TraceListenerCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.CopyTo(System.Diagnostics.TraceListener[],System.Int32)
  id: CopyTo(System.Diagnostics.TraceListener[],System.Int32)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: CopyTo(TraceListener[],Int32)
  nameWithType: TraceListenerCollection.CopyTo(TraceListener[],Int32)
  fullName: System.Diagnostics.TraceListenerCollection.CopyTo(TraceListener[],Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Copies a section of the current <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;></xref> list to the specified array at the specified index."
  syntax:
    content: public void CopyTo (System.Diagnostics.TraceListener[] listeners, int index);
    parameters:
    - id: listeners
      type: System.Diagnostics.TraceListener[]
      description: "An array of type <xref:System.Array> to copy the elements into."
    - id: index
      type: System.Int32
      description: "The starting index number in the current list to copy from."
  overload: System.Diagnostics.TraceListenerCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.Count
  id: Count
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: Count
  nameWithType: TraceListenerCollection.Count
  fullName: System.Diagnostics.TraceListenerCollection.Count
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Gets the number of listeners in the list."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "The number of listeners in the list."
  overload: System.Diagnostics.TraceListenerCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: TraceListenerCollection.GetEnumerator()
  fullName: System.Diagnostics.TraceListenerCollection.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Gets an enumerator for this list."
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "An enumerator of type <xref:System.Collections.IEnumerator>."
  overload: System.Diagnostics.TraceListenerCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.IndexOf(System.Diagnostics.TraceListener)
  id: IndexOf(System.Diagnostics.TraceListener)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: IndexOf(TraceListener)
  nameWithType: TraceListenerCollection.IndexOf(TraceListener)
  fullName: System.Diagnostics.TraceListenerCollection.IndexOf(TraceListener)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Gets the index of the specified listener."
  syntax:
    content: public int IndexOf (System.Diagnostics.TraceListener listener);
    parameters:
    - id: listener
      type: System.Diagnostics.TraceListener
      description: "A <xref href=&quot;System.Diagnostics.TraceListener&quot;></xref> to find in the list."
    return:
      type: System.Int32
      description: "The index of the listener, if it can be found in the list; otherwise, -1."
  overload: System.Diagnostics.TraceListenerCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.Insert(System.Int32,System.Diagnostics.TraceListener)
  id: Insert(System.Int32,System.Diagnostics.TraceListener)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: Insert(Int32,TraceListener)
  nameWithType: TraceListenerCollection.Insert(Int32,TraceListener)
  fullName: System.Diagnostics.TraceListenerCollection.Insert(Int32,TraceListener)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inserts the listener at the specified index."
  remarks: "If the index equals the number of items in the list, then the listener is appended to the end of the list.       The index is zero-based. Therefore, if you want to insert the listener into the third position, you must call `myTraceListenerColl.Insert(2, myNewListener)`."
  syntax:
    content: public void Insert (int index, System.Diagnostics.TraceListener listener);
    parameters:
    - id: index
      type: System.Int32
      description: "The position in the list to insert the new <xref href=&quot;System.Diagnostics.TraceListener&quot;></xref>."
    - id: listener
      type: System.Diagnostics.TraceListener
      description: "A <xref href=&quot;System.Diagnostics.TraceListener&quot;></xref> to insert in the list."
  overload: System.Diagnostics.TraceListenerCollection.Insert*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The <code>index</code> is not a valid index in the list."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>listener</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: TraceListenerCollection.Item(Int32)
  fullName: System.Diagnostics.TraceListenerCollection.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Gets or sets the <xref href=&quot;System.Diagnostics.TraceListener&quot;></xref> at the specified index."
  remarks: "The index is zero-based. Therefore, you must subtract one from the numerical position of a particular <xref:System.Diagnostics.TraceListener> to access that <xref:System.Diagnostics.TraceListener>. For example, to get the third <xref:System.Diagnostics.TraceListener>, you need to specify `myTraceListenerColl[2]`."
  syntax:
    content: public System.Diagnostics.TraceListener this[int i] { get; set; }
    parameters:
    - id: i
      type: System.Int32
      description: "The zero-based index of the <xref href=&quot;System.Diagnostics.TraceListener&quot;></xref> to get from the list."
    return:
      type: System.Diagnostics.TraceListener
      description: "A <xref href=&quot;System.Diagnostics.TraceListener&quot;></xref> with the specified index."
  overload: System.Diagnostics.TraceListenerCollection.Item*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: TraceListenerCollection.Item(String)
  fullName: System.Diagnostics.TraceListenerCollection.Item(String)
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Gets the first <xref href=&quot;System.Diagnostics.TraceListener&quot;></xref> in the list with the specified name."
  remarks: "The <xref:System.Diagnostics.TraceListenerCollection.Item%2A> property is case-sensitive when searching for names. That is, if two listeners exist with the names &quot;Lname&quot; and &quot;lname&quot;, <xref:System.Diagnostics.TraceListenerCollection.Item%2A> property will find only the <xref:System.Diagnostics.TraceListener> with the <xref:System.Diagnostics.TraceListener.Name%2A> that you specify, not both."
  syntax:
    content: public System.Diagnostics.TraceListener this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "The name of the <xref href=&quot;System.Diagnostics.TraceListener&quot;></xref> to get from the list."
    return:
      type: System.Diagnostics.TraceListener
      description: "The first <xref href=&quot;System.Diagnostics.TraceListener&quot;></xref> in the list with the given <xref:System.Diagnostics.TraceListener.Name*>. This item returns <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> if no <xref href=&quot;System.Diagnostics.TraceListener&quot;></xref> with the given name can be found."
  overload: System.Diagnostics.TraceListenerCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.Remove(System.Diagnostics.TraceListener)
  id: Remove(System.Diagnostics.TraceListener)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: Remove(TraceListener)
  nameWithType: TraceListenerCollection.Remove(TraceListener)
  fullName: System.Diagnostics.TraceListenerCollection.Remove(TraceListener)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Removes from the collection the specified <xref href=&quot;System.Diagnostics.TraceListener&quot;></xref>."
  syntax:
    content: public void Remove (System.Diagnostics.TraceListener listener);
    parameters:
    - id: listener
      type: System.Diagnostics.TraceListener
      description: "A <xref href=&quot;System.Diagnostics.TraceListener&quot;></xref> to remove from the list."
  overload: System.Diagnostics.TraceListenerCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: Remove(String)
  nameWithType: TraceListenerCollection.Remove(String)
  fullName: System.Diagnostics.TraceListenerCollection.Remove(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Removes from the collection the first <xref href=&quot;System.Diagnostics.TraceListener&quot;></xref> with the specified name."
  remarks: "The `name` parameter is case-sensitive. That is, if two listeners exist with the names &quot;Rname&quot; and &quot;rname&quot;, the <xref:System.Diagnostics.TraceListenerCollection.Remove%2A> method will find the specific listener you name."
  syntax:
    content: public void Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: "The name of the <xref href=&quot;System.Diagnostics.TraceListener&quot;></xref> to remove from the list."
  overload: System.Diagnostics.TraceListenerCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: TraceListenerCollection.RemoveAt(Int32)
  fullName: System.Diagnostics.TraceListenerCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Removes from the collection the <xref href=&quot;System.Diagnostics.TraceListener&quot;></xref> at the specified index."
  remarks: "The index is zero-based. Therefore, you must subtract one from the numerical position of a particular <xref:System.Diagnostics.TraceListener> to delete that <xref:System.Diagnostics.TraceListener>. For example, to remove the third <xref:System.Diagnostics.TraceListener>, you need to specify `myTraceListenerColl.RemoveAt(2)`."
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based index of the <xref href=&quot;System.Diagnostics.TraceListener&quot;></xref> to remove from the list."
  overload: System.Diagnostics.TraceListenerCollection.RemoveAt*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The <code>index</code> is not a valid index in the list."
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: TraceListenerCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Copies a section of the current <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;></xref> to the specified array of <xref href=&quot;System.Diagnostics.TraceListener&quot;></xref> objects."
  remarks: "Use the <xref:System.Diagnostics.TraceListenerCollection.CopyTo%2A> method of the <xref:System.Diagnostics.TraceListenerCollection> class to copy all or part of the collection to an array."
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "The one-dimensional array of <xref href=&quot;System.Diagnostics.TraceListener&quot;></xref> objects that is the destination of the elements copied from the <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;></xref>. The array must have zero-based indexing."
    - id: index
      type: System.Int32
      description: "The zero-based index in `array` at which copying begins."
  overload: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: TraceListenerCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Gets a value indicating whether access to the <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;></xref> is synchronized (thread safe)."
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: TraceListenerCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Gets an object that can be used to synchronize access to the <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;></xref>."
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "The current <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;></xref> object."
  overload: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: TraceListenerCollection.System.Collections.IList.Add(Object)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Adds a trace listener to the <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;></xref>."
  remarks: "Use the <xref:System.Diagnostics.TraceListenerCollection.Add%2A> method to add a new trace listener to the collection."
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: "The object to add to the <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;></xref>."
    return:
      type: System.Int32
      description: "The position into which the new trace listener was inserted."
  overload: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Add*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>value</code> is not a <xref href=&quot;System.Diagnostics.TraceListener&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: TraceListenerCollection.System.Collections.IList.Contains(Object)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Determines whether the <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;></xref> contains a specific object."
  remarks: "Use the <xref:System.Diagnostics.TraceListenerCollection.Contains%2A> method of the <xref:System.Diagnostics.TraceListenerCollection> class to determine whether the collection contains a specific <xref:System.Diagnostics.TraceListener> object."
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "The object to locate in the <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the <xref:System.Object> is found in the <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: TraceListenerCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Determines the index of a specific object in the <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;></xref>."
  remarks: "Use the <xref:System.Diagnostics.TraceListenerCollection.IndexOf%2A> method of the <xref:System.Diagnostics.TraceListenerCollection> class to determine the index of a <xref:System.Diagnostics.TraceListener> object in the collection."
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "The object to locate in the <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;></xref>."
    return:
      type: System.Int32
      description: "The index of <code>value</code> if found in the <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;></xref>; otherwise, -1."
  overload: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: TraceListenerCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inserts a <xref href=&quot;System.Diagnostics.TraceListener&quot;></xref> object at the specified position in the <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;></xref>."
  remarks: "Use the <xref:System.Diagnostics.TraceListenerCollection.Insert%2A> method of the <xref:System.Diagnostics.TraceListenerCollection> class to insert a <xref:System.Diagnostics.TraceListener> object into the collection."
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based index at which `value` should be inserted."
    - id: value
      type: System.Object
      description: "The <xref href=&quot;System.Diagnostics.TraceListener&quot;></xref> object to insert into the <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;></xref>."
  overload: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Insert*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code> is not a <xref href=&quot;System.Diagnostics.TraceListener&quot;></xref> object."
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: TraceListenerCollection.System.Collections.IList.IsFixedSize
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Gets a value indicating whether the <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;></xref> has a fixed size."
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: System.Collections.IList.IsReadOnly
  nameWithType: TraceListenerCollection.System.Collections.IList.IsReadOnly
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.IsReadOnly
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Gets a value indicating whether the <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;></xref> is read-only"
  syntax:
    content: bool System.Collections.IList.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: TraceListenerCollection.System.Collections.IList.Item(Int32)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Gets or sets the <xref href=&quot;System.Diagnostics.TraceListener&quot;></xref> at the specified index in the <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;></xref>."
  remarks: "Use the <xref:System.Diagnostics.TraceListenerCollection.Item%2A> property or the indexer of the <xref:System.Diagnostics.TraceListenerCollection> class to get or set a <xref:System.Diagnostics.TraceListener> in the collection."
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "The zero-based index of the `value` to get."
    return:
      type: System.Object
      description: "The <xref href=&quot;System.Diagnostics.TraceListener&quot;></xref> at the specified index."
  overload: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Item*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: TraceListenerCollection.System.Collections.IList.Remove(Object)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Removes an object from the <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;></xref>."
  remarks: "Use the <xref:System.Diagnostics.TraceListenerCollection.Remove%2A> method of the <xref:System.Diagnostics.TraceListenerCollection> class to remove a <xref:System.Diagnostics.TraceListener> from the collection."
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "The object to remove from the <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;></xref>."
  overload: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Remove*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Diagnostics.TraceListenerCollection.Add(System.Diagnostics.TraceListener)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Add(TraceListener)
  nameWithType: TraceListenerCollection.Add(TraceListener)
  fullName: System.Diagnostics.TraceListenerCollection.Add(TraceListener)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.TraceListener
  parent: System.Diagnostics
  isExternal: false
  name: TraceListener
  nameWithType: TraceListener
  fullName: System.Diagnostics.TraceListener
- uid: System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListener[])
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: AddRange(TraceListener[])
  nameWithType: TraceListenerCollection.AddRange(TraceListener[])
  fullName: System.Diagnostics.TraceListenerCollection.AddRange(TraceListener[])
- uid: System.Diagnostics.TraceListener[]
  parent: System.Diagnostics
  isExternal: false
  name: TraceListener
  nameWithType: TraceListener
  fullName: System.Diagnostics.TraceListener[]
  spec.csharp:
  - uid: System.Diagnostics.TraceListener
    name: TraceListener
    nameWithType: TraceListener
    fullName: TraceListener[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListenerCollection)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: AddRange(TraceListenerCollection)
  nameWithType: TraceListenerCollection.AddRange(TraceListenerCollection)
  fullName: System.Diagnostics.TraceListenerCollection.AddRange(TraceListenerCollection)
- uid: System.Diagnostics.TraceListenerCollection
  parent: System.Diagnostics
  isExternal: false
  name: TraceListenerCollection
  nameWithType: TraceListenerCollection
  fullName: System.Diagnostics.TraceListenerCollection
- uid: System.Diagnostics.TraceListenerCollection.Clear
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Clear()
  nameWithType: TraceListenerCollection.Clear()
  fullName: System.Diagnostics.TraceListenerCollection.Clear()
- uid: System.Diagnostics.TraceListenerCollection.Contains(System.Diagnostics.TraceListener)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Contains(TraceListener)
  nameWithType: TraceListenerCollection.Contains(TraceListener)
  fullName: System.Diagnostics.TraceListenerCollection.Contains(TraceListener)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.TraceListenerCollection.CopyTo(System.Diagnostics.TraceListener[],System.Int32)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: CopyTo(TraceListener[],Int32)
  nameWithType: TraceListenerCollection.CopyTo(TraceListener[],Int32)
  fullName: System.Diagnostics.TraceListenerCollection.CopyTo(TraceListener[],Int32)
- uid: System.Diagnostics.TraceListenerCollection.Count
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Count
  nameWithType: TraceListenerCollection.Count
  fullName: System.Diagnostics.TraceListenerCollection.Count
- uid: System.Diagnostics.TraceListenerCollection.GetEnumerator
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: TraceListenerCollection.GetEnumerator()
  fullName: System.Diagnostics.TraceListenerCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Diagnostics.TraceListenerCollection.IndexOf(System.Diagnostics.TraceListener)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: IndexOf(TraceListener)
  nameWithType: TraceListenerCollection.IndexOf(TraceListener)
  fullName: System.Diagnostics.TraceListenerCollection.IndexOf(TraceListener)
- uid: System.Diagnostics.TraceListenerCollection.Insert(System.Int32,System.Diagnostics.TraceListener)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Insert(Int32,TraceListener)
  nameWithType: TraceListenerCollection.Insert(Int32,TraceListener)
  fullName: System.Diagnostics.TraceListenerCollection.Insert(Int32,TraceListener)
- uid: System.Diagnostics.TraceListenerCollection.Item(System.Int32)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: TraceListenerCollection.Item(Int32)
  fullName: System.Diagnostics.TraceListenerCollection.Item(Int32)
- uid: System.Diagnostics.TraceListenerCollection.Item(System.String)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Item(String)
  nameWithType: TraceListenerCollection.Item(String)
  fullName: System.Diagnostics.TraceListenerCollection.Item(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.TraceListenerCollection.Remove(System.Diagnostics.TraceListener)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Remove(TraceListener)
  nameWithType: TraceListenerCollection.Remove(TraceListener)
  fullName: System.Diagnostics.TraceListenerCollection.Remove(TraceListener)
- uid: System.Diagnostics.TraceListenerCollection.Remove(System.String)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Remove(String)
  nameWithType: TraceListenerCollection.Remove(String)
  fullName: System.Diagnostics.TraceListenerCollection.Remove(String)
- uid: System.Diagnostics.TraceListenerCollection.RemoveAt(System.Int32)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: TraceListenerCollection.RemoveAt(Int32)
  fullName: System.Diagnostics.TraceListenerCollection.RemoveAt(Int32)
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: TraceListenerCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#IsSynchronized
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: TraceListenerCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#SyncRoot
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: TraceListenerCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.ICollection.SyncRoot
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Add(System.Object)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: TraceListenerCollection.System.Collections.IList.Add(Object)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Add(Object)
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Contains(System.Object)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: TraceListenerCollection.System.Collections.IList.Contains(Object)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Contains(Object)
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: TraceListenerCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.IndexOf(Object)
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: TraceListenerCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Insert(Int32,Object)
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsFixedSize
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: TraceListenerCollection.System.Collections.IList.IsFixedSize
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.IsFixedSize
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsReadOnly
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: TraceListenerCollection.System.Collections.IList.IsReadOnly
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.IsReadOnly
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Item(System.Int32)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: TraceListenerCollection.System.Collections.IList.Item(Int32)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Item(Int32)
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Remove(System.Object)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: TraceListenerCollection.System.Collections.IList.Remove(Object)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Remove(Object)
- uid: System.Diagnostics.TraceListenerCollection.Add*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Add
  nameWithType: TraceListenerCollection.Add
- uid: System.Diagnostics.TraceListenerCollection.AddRange*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: AddRange
  nameWithType: TraceListenerCollection.AddRange
- uid: System.Diagnostics.TraceListenerCollection.Clear*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Clear
  nameWithType: TraceListenerCollection.Clear
- uid: System.Diagnostics.TraceListenerCollection.Contains*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Contains
  nameWithType: TraceListenerCollection.Contains
- uid: System.Diagnostics.TraceListenerCollection.CopyTo*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: CopyTo
  nameWithType: TraceListenerCollection.CopyTo
- uid: System.Diagnostics.TraceListenerCollection.Count*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Count
  nameWithType: TraceListenerCollection.Count
- uid: System.Diagnostics.TraceListenerCollection.GetEnumerator*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: TraceListenerCollection.GetEnumerator
- uid: System.Diagnostics.TraceListenerCollection.IndexOf*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: IndexOf
  nameWithType: TraceListenerCollection.IndexOf
- uid: System.Diagnostics.TraceListenerCollection.Insert*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Insert
  nameWithType: TraceListenerCollection.Insert
- uid: System.Diagnostics.TraceListenerCollection.Item*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Item
  nameWithType: TraceListenerCollection.Item
- uid: System.Diagnostics.TraceListenerCollection.Remove*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Remove
  nameWithType: TraceListenerCollection.Remove
- uid: System.Diagnostics.TraceListenerCollection.RemoveAt*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: RemoveAt
  nameWithType: TraceListenerCollection.RemoveAt
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#CopyTo*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: TraceListenerCollection.System.Collections.ICollection.CopyTo
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#IsSynchronized*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: TraceListenerCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#SyncRoot*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: TraceListenerCollection.System.Collections.ICollection.SyncRoot
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Add*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: TraceListenerCollection.System.Collections.IList.Add
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Contains*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: TraceListenerCollection.System.Collections.IList.Contains
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IndexOf*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: TraceListenerCollection.System.Collections.IList.IndexOf
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Insert*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: TraceListenerCollection.System.Collections.IList.Insert
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsFixedSize*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: TraceListenerCollection.System.Collections.IList.IsFixedSize
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsReadOnly*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: TraceListenerCollection.System.Collections.IList.IsReadOnly
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Item*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: TraceListenerCollection.System.Collections.IList.Item
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Remove*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: TraceListenerCollection.System.Collections.IList.Remove
