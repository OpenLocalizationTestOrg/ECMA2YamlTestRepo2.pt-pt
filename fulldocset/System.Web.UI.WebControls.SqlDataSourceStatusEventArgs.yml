### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  id: SqlDataSourceStatusEventArgs
  children:
  - System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.#ctor(System.Data.Common.DbCommand,System.Int32,System.Exception)
  - System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows
  - System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command
  - System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception
  - System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled
  langs:
  - csharp
  name: SqlDataSourceStatusEventArgs
  nameWithType: SqlDataSourceStatusEventArgs
  fullName: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  type: Class
  summary: "Provides data for an event that is raised by the <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;></xref> control after a data operation has completed."
  remarks: "The SqlDataSourceStatusEventArgs class is used in the <xref:System.Web.UI.WebControls.SqlDataSource.Selected>, <xref:System.Web.UI.WebControls.SqlDataSource.Updated>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>, and <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> events to pass information about a database operation after it is performed by the data source control. This information includes the number of rows affected by the operation, the <xref:System.Data.Common.DbCommand> object that the data source used to perform the operation, and any exception information that resulted. By adding an event handler delegate to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Selected>, <xref:System.Web.UI.WebControls.SqlDataSource.Updated>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> or <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> events, you can examine this data and perform any additional post processing required.       The <xref:System.Web.UI.WebControls.SqlDataSource> control exposes many events that you can handle to work with the underlying data objects during the course of a data operation. The following table lists the events and associated <xref:System.EventArgs> and event handler classes, to better guide you to the various events that correspond to the life cycle of a data operation using the <xref:System.Web.UI.WebControls.SqlDataSource> control.      |Event|EventArgs|EventHandler|   |-----------|---------------|------------------|   |<xref:System.Web.UI.WebControls.SqlDataSource.Selecting> occurs before the data is retrieved.|<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler>|   |<xref:System.Web.UI.WebControls.SqlDataSource.Inserting>, <xref:System.Web.UI.WebControls.SqlDataSource.Updating>, <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> occur before an insert, update, or delete operation is performed.|<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventHandler>|   |<xref:System.Web.UI.WebControls.SqlDataSource.Selected>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>, <xref:System.Web.UI.WebControls.SqlDataSource.Updated>, <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> occur after the data retrieval, insert, update, or delete operations completes.|SqlDataSourceStatusEventArgs|<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler>|"
  example:
  - "The following code example demonstrates how to use the SqlDataSourceStatusEventArgs class to examine the return value and values of output parameters that are returned when using a <xref:System.Web.UI.WebControls.SqlDataSource> control with a stored procedure to populate a <xref:System.Web.UI.WebControls.GridView> control. The stored procedure selects data that is displayed in the <xref:System.Web.UI.WebControls.GridView>, but also passes other information back to the caller, such as an integer output parameter and a return value. The parameters that the <xref:System.Web.UI.WebControls.SqlDataSource> uses for the stored procedure are contained by the <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> collection, and consist of parameters that pass information from the Web form to the stored procedure as well as parameters that pass information back to the form. The <xref:System.Web.UI.WebControls.Parameter.Direction%2A> property of these parameters is set to <xref:System.Data.ParameterDirection> and <xref:System.Data.ParameterDirection>.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_146_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_146_1.aspx)]"
  syntax:
    content: 'public class SqlDataSourceStatusEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.#ctor(System.Data.Common.DbCommand,System.Int32,System.Exception)
  id: '#ctor(System.Data.Common.DbCommand,System.Int32,System.Exception)'
  parent: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  langs:
  - csharp
  name: SqlDataSourceStatusEventArgs(DbCommand,Int32,Exception)
  nameWithType: SqlDataSourceStatusEventArgs.SqlDataSourceStatusEventArgs(DbCommand,Int32,Exception)
  fullName: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.SqlDataSourceStatusEventArgs(DbCommand,Int32,Exception)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Initializes a new instance of the <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceStatusEventArgs&quot;></xref> class, using the specified output parameters, return value, and number of rows affected by the database operation."
  syntax:
    content: public SqlDataSourceStatusEventArgs (System.Data.Common.DbCommand command, int affectedRows, Exception exception);
    parameters:
    - id: command
      type: System.Data.Common.DbCommand
      description: "The <xref href=&quot;System.Data.Common.DbCommand&quot;></xref> that represents the database query, command, or stored procedure that is submitted to the database by the <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;></xref> control."
    - id: affectedRows
      type: System.Int32
      description: "The number of rows affected by the database operation, if applicable."
    - id: exception
      type: System.Exception
      description: "An <xref:System.Exception> thrown by the database operation, if applicable."
  overload: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows
  id: AffectedRows
  parent: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  langs:
  - csharp
  name: AffectedRows
  nameWithType: SqlDataSourceStatusEventArgs.AffectedRows
  fullName: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets the number of rows affected by a database operation."
  remarks: "All operations return the number of rows affected by the operation. The AffectedRows property has the same value as the return value of the <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>, <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>, and <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> methods.       When the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method is called and the data source is set to <xref:System.Web.UI.WebControls.SqlDataSourceMode> mode, the return value is 0 in all cases."
  syntax:
    content: public int AffectedRows { get; }
    return:
      type: System.Int32
      description: "The number of rows affected by a database operation. The default value is -1."
  overload: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command
  id: Command
  parent: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  langs:
  - csharp
  name: Command
  nameWithType: SqlDataSourceStatusEventArgs.Command
  fullName: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets the database command submitted to the database."
  remarks: "You can handle the <xref:System.Web.UI.WebControls.SqlDataSource.Selected>, <xref:System.Web.UI.WebControls.SqlDataSource.Updated>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>, or <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> event to examine and manipulate the properties of the <xref:System.Data.Common.DbCommand> after it is submitted by the <xref:System.Web.UI.WebControls.SqlDataSource> control to the database. The Command property enables you to access return values and values in any output parameters after the database operation is performed through its <xref:System.Data.Common.DbCommand.Parameters%2A> property, as well as the <xref:System.Data.Common.DbCommand.CommandText%2A> property, which represents the SQL query, command, or stored procedure name that was submitted to the database.       Any output parameters are specifically from parameters that have an  <xref:System.Data.ParameterDirection> or <xref:System.Data.ParameterDirection> value for the <xref:System.Web.UI.WebControls.Parameter.Direction%2A> property of the <xref:System.Web.UI.WebControls.Parameter> object. A return value is from a parameter that has a <xref:System.Data.ParameterDirection> value."
  example:
  - "The following code example demonstrates how to examine the values of output parameters when using a <xref:System.Web.UI.WebControls.SqlDataSource> control with a stored procedure. The <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> collection contains the parameters that the <xref:System.Web.UI.WebControls.SqlDataSource> uses for the stored procedure, and consists of parameters that pass information from the Web form to the stored procedure as well as parameters that pass information back to the form. This code example is part of a larger example provided for the <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> class.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_542_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_542_1.aspx)]"
  syntax:
    content: public System.Data.Common.DbCommand Command { get; }
    return:
      type: System.Data.Common.DbCommand
      description: "The <xref href=&quot;System.Data.Common.DbCommand&quot;></xref> object that represents the database command submitted to the database."
  overload: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception
  id: Exception
  parent: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  langs:
  - csharp
  name: Exception
  nameWithType: SqlDataSourceStatusEventArgs.Exception
  fullName: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets a wrapper for any exceptions thrown by the database during a data operation."
  remarks: "The <xref:System.Exception> property does not represent the actual exception thrown by the database operation. You can access the thrown exception using the <xref:System.Exception.InnerException%2A> property."
  syntax:
    content: public Exception Exception { get; }
    return:
      type: System.Exception
      description: "An <xref:System.Exception> that wraps any exceptions thrown by the database in its <xref:System.Exception.InnerException*> property."
  overload: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled
  id: ExceptionHandled
  parent: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  langs:
  - csharp
  name: ExceptionHandled
  nameWithType: SqlDataSourceStatusEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gets or sets a value indicating whether an exception thrown by the database has been handled."
  remarks: "If the database throws an exception, the ExceptionHandled property is set to `false` and the exception is wrapped by the <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception%2A> property. If you use an <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler>, you can check the <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A> property and handle the exception. If you handle the exception, set the ExceptionHandled property to `true` or the <xref:System.Web.UI.WebControls.SqlDataSource> control will throw an exception."
  syntax:
    content: public bool ExceptionHandled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if an exception thrown by the database has been handled and should not be thrown by the <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;></xref> control; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.#ctor(System.Data.Common.DbCommand,System.Int32,System.Exception)
  parent: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  isExternal: false
  name: SqlDataSourceStatusEventArgs(DbCommand,Int32,Exception)
  nameWithType: SqlDataSourceStatusEventArgs.SqlDataSourceStatusEventArgs(DbCommand,Int32,Exception)
  fullName: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.SqlDataSourceStatusEventArgs(DbCommand,Int32,Exception)
- uid: System.Data.Common.DbCommand
  parent: System.Data.Common
  isExternal: false
  name: DbCommand
  nameWithType: DbCommand
  fullName: System.Data.Common.DbCommand
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows
  parent: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  isExternal: false
  name: AffectedRows
  nameWithType: SqlDataSourceStatusEventArgs.AffectedRows
  fullName: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command
  parent: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  isExternal: false
  name: Command
  nameWithType: SqlDataSourceStatusEventArgs.Command
  fullName: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception
  parent: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  isExternal: false
  name: Exception
  nameWithType: SqlDataSourceStatusEventArgs.Exception
  fullName: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled
  parent: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: SqlDataSourceStatusEventArgs.ExceptionHandled
  fullName: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.#ctor*
  parent: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  isExternal: false
  name: SqlDataSourceStatusEventArgs
  nameWithType: SqlDataSourceStatusEventArgs.SqlDataSourceStatusEventArgs
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows*
  parent: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  isExternal: false
  name: AffectedRows
  nameWithType: SqlDataSourceStatusEventArgs.AffectedRows
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command*
  parent: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  isExternal: false
  name: Command
  nameWithType: SqlDataSourceStatusEventArgs.Command
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception*
  parent: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  isExternal: false
  name: Exception
  nameWithType: SqlDataSourceStatusEventArgs.Exception
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled*
  parent: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: SqlDataSourceStatusEventArgs.ExceptionHandled
