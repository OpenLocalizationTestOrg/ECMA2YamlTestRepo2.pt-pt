### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.TraceLevel
  id: TraceLevel
  children:
  - System.Diagnostics.TraceLevel.Error
  - System.Diagnostics.TraceLevel.Info
  - System.Diagnostics.TraceLevel.Off
  - System.Diagnostics.TraceLevel.Verbose
  - System.Diagnostics.TraceLevel.Warning
  langs:
  - csharp
  name: TraceLevel
  nameWithType: TraceLevel
  fullName: System.Diagnostics.TraceLevel
  type: Enum
  summary: "Specifies what messages to output for the <xref:System.Diagnostics.Debug>, <xref href=&quot;System.Diagnostics.Trace&quot;></xref> and <xref href=&quot;System.Diagnostics.TraceSwitch&quot;></xref> classes."
  remarks: "This enumeration is used by the <xref:System.Diagnostics.TraceSwitch> class.       You must enable tracing or debugging to use a switch. The following syntax is compiler specific. If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.      -   To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or you can add `#define DEBUG` to the top of your file. In Visual Basic, add the `/d:DEBUG=True` flag to the compiler command line.      -   To enable tracing in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file. In Visual Basic, add the `/d:TRACE=True` flag to the compiler command line.       For more information on instrumenting your application, see <xref:System.Diagnostics.Debug> and <xref:System.Diagnostics.Trace>.      > [!NOTE] >  In the .NET Framework version 2.0, you can use text to specify the value for a switch. For example, `true` for a <xref:System.Diagnostics.BooleanSwitch> or the text representing an enumeration value such as `Error` for a <xref:System.Diagnostics.TraceSwitch>. The line `<add name=&quot;mySwitch&quot; value=&quot;Error&quot; />` is equivalent to `<add name=&quot;mySwitch&quot; value=&quot;1&quot; />`.       In the .NET Framework versions 1.0 and 1.1, trace levels in configuration files are set using the integer value corresponding to the enumeration member, rather than the enumeration member itself, as the following example demonstrates.      ```   <configuration>       <system.diagnostics>          <switches>             <add name=&quot;mySwitch&quot; value=&quot;4&quot; />          </switches>       </system.diagnostics>   </configuration>   ```       In addition to setting trace levels using the integer value of the enumeration, the .NET Framework version 2.0 trace levels can be set using the text representation of the enumeration value. For example, `Verbose` for a <xref:System.Diagnostics.TraceSwitch>. The line `<add name=&quot;mySwitch&quot; value=&quot;Verbose&quot; />` is equivalent to `<add name=&quot;mySwitch&quot; value=&quot;4&quot; />`.       The following table shows the relationship between the TraceLevel enumeration members and their corresponding configuration file entries.      |Trace Level|Configuration File Value|   |-----------------|------------------------------|   |Off|0|   |Error|1|   |Warning|2|   |Info|3|   |Verbose|4|"
  syntax:
    content: public enum TraceLevel
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Diagnostics.TraceLevel.Error
  id: Error
  parent: System.Diagnostics.TraceLevel
  langs:
  - csharp
  name: Error
  nameWithType: TraceLevel.Error
  fullName: System.Diagnostics.TraceLevel.Error
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Output error-handling messages."
  syntax:
    content: Error
    return:
      type: System.Diagnostics.TraceLevel
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceLevel.Info
  id: Info
  parent: System.Diagnostics.TraceLevel
  langs:
  - csharp
  name: Info
  nameWithType: TraceLevel.Info
  fullName: System.Diagnostics.TraceLevel.Info
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Output informational messages, warnings, and error-handling messages."
  syntax:
    content: Info
    return:
      type: System.Diagnostics.TraceLevel
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceLevel.Off
  id: Off
  parent: System.Diagnostics.TraceLevel
  langs:
  - csharp
  name: Off
  nameWithType: TraceLevel.Off
  fullName: System.Diagnostics.TraceLevel.Off
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Output no tracing and debugging messages."
  syntax:
    content: Off
    return:
      type: System.Diagnostics.TraceLevel
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceLevel.Verbose
  id: Verbose
  parent: System.Diagnostics.TraceLevel
  langs:
  - csharp
  name: Verbose
  nameWithType: TraceLevel.Verbose
  fullName: System.Diagnostics.TraceLevel.Verbose
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Output all debugging and tracing messages."
  syntax:
    content: Verbose
    return:
      type: System.Diagnostics.TraceLevel
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceLevel.Warning
  id: Warning
  parent: System.Diagnostics.TraceLevel
  langs:
  - csharp
  name: Warning
  nameWithType: TraceLevel.Warning
  fullName: System.Diagnostics.TraceLevel.Warning
  type: Field
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Output warnings and error-handling messages."
  syntax:
    content: Warning
    return:
      type: System.Diagnostics.TraceLevel
      description: "To be added."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Diagnostics.TraceLevel.Error
  parent: System.Diagnostics.TraceLevel
  isExternal: false
  name: Error
  nameWithType: TraceLevel.Error
  fullName: System.Diagnostics.TraceLevel.Error
- uid: System.Diagnostics.TraceLevel
  parent: System.Diagnostics
  isExternal: false
  name: TraceLevel
  nameWithType: TraceLevel
  fullName: System.Diagnostics.TraceLevel
- uid: System.Diagnostics.TraceLevel.Info
  parent: System.Diagnostics.TraceLevel
  isExternal: false
  name: Info
  nameWithType: TraceLevel.Info
  fullName: System.Diagnostics.TraceLevel.Info
- uid: System.Diagnostics.TraceLevel.Off
  parent: System.Diagnostics.TraceLevel
  isExternal: false
  name: Off
  nameWithType: TraceLevel.Off
  fullName: System.Diagnostics.TraceLevel.Off
- uid: System.Diagnostics.TraceLevel.Verbose
  parent: System.Diagnostics.TraceLevel
  isExternal: false
  name: Verbose
  nameWithType: TraceLevel.Verbose
  fullName: System.Diagnostics.TraceLevel.Verbose
- uid: System.Diagnostics.TraceLevel.Warning
  parent: System.Diagnostics.TraceLevel
  isExternal: false
  name: Warning
  nameWithType: TraceLevel.Warning
  fullName: System.Diagnostics.TraceLevel.Warning
