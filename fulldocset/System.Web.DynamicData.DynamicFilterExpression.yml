### YamlMime:ManagedReference
items:
- uid: System.Web.DynamicData.DynamicFilterExpression
  id: DynamicFilterExpression
  children:
  - System.Web.DynamicData.DynamicFilterExpression.#ctor
  - System.Web.DynamicData.DynamicFilterExpression.ControlID
  - System.Web.DynamicData.DynamicFilterExpression.GetQueryable(System.Linq.IQueryable)
  - System.Web.DynamicData.DynamicFilterExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)
  langs:
  - csharp
  name: DynamicFilterExpression
  nameWithType: DynamicFilterExpression
  fullName: System.Web.DynamicData.DynamicFilterExpression
  type: Class
  summary: "Modifica uma consulta de base de dados utilizando um valor do controlo de filtro especificado."
  remarks: "A classe de DynamicFilterExpression permite-lhe modificar uma consulta de base de dados utilizando os valores que estão atribuídos num <xref:System.Web.DynamicData.DynamicFilter>controlo.</xref:System.Web.DynamicData.DynamicFilter> Este controlo delega a tarefa de criação do <xref:System.Linq.IQueryable>consultar a um controlo especializado, como <xref:System.Web.DynamicData.QueryableFilterRepeater>controlo ou <xref:System.Web.DynamicData.DynamicFilter>controlo.</xref:System.Web.DynamicData.DynamicFilter> </xref:System.Web.DynamicData.QueryableFilterRepeater> </xref:System.Linq.IQueryable>       Os controlos de filtro delegar, por sua vez, a criação da consulta para o modelo de filtro fizerem referência a. A consulta, em seguida, é executada pelo controlo de origem de dados que é referenciado pelo <xref:System.Web.UI.WebControls.QueryExtender>controlo.</xref:System.Web.UI.WebControls.QueryExtender>       Para utilizar a classe de DynamicFilterExpression numa página, siga estes passos:-adicionar uma <xref:System.Web.UI.WebControls.QueryExtender>controlo para a página.</xref:System.Web.UI.WebControls.QueryExtender>      -Definir a `TargetControlID` propriedade o <xref:System.Web.UI.WebControls.QueryExtender>controlo para o controlo de origem de dados de referência.</xref:System.Web.UI.WebControls.QueryExtender>      -Adicionar um objeto de DynamicFilterExpression como subordinado do <xref:System.Web.UI.WebControls.QueryExtender>controlo.</xref:System.Web.UI.WebControls.QueryExtender>      -Definir a `ControlID` propriedade do objeto DynamicFilterExpression para referenciar o controlo de filtro.       Nos passos anteriores presume-se que os controlos de filtro relacionados, controlos vinculados a dados e controlo de origem de dados são definidas na página."
  example:
  - "The following example shows how to use the DynamicFilterExpression control to select a filter template in a page. The filter template is selected by the <xref:System.Web.DynamicData.DynamicFilter> control that is identified by DynamicFilterExpression control through its `ControID` property.  \n  \n```  \n<asp:QueryExtender ID=\"QueryExtender1\"   \n    TargetControlID=\"GridDataSource\" runat=\"server\">  \n    <asp:DynamicFilterExpression ControlID=\"CategoryFilterID\" />  \n</asp:QueryExtender>  \n```"
  syntax:
    content: 'public class DynamicFilterExpression : System.Web.UI.WebControls.Expressions.DataSourceExpression'
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.Expressions.DataSourceExpression
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.Context
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.DataSource
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.IsTrackingViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.LoadViewState(System.Object)
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.Owner
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.SaveViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.SetDirty
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.TrackViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.ViewState
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicFilterExpression.#ctor
  id: '#ctor'
  parent: System.Web.DynamicData.DynamicFilterExpression
  langs:
  - csharp
  name: DynamicFilterExpression()
  nameWithType: DynamicFilterExpression.DynamicFilterExpression()
  fullName: System.Web.DynamicData.DynamicFilterExpression.DynamicFilterExpression()
  type: Constructor
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.DynamicData.DynamicFilterExpression&quot;> </xref> classe."
  syntax:
    content: public DynamicFilterExpression ();
    parameters: []
  overload: System.Web.DynamicData.DynamicFilterExpression.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicFilterExpression.ControlID
  id: ControlID
  parent: System.Web.DynamicData.DynamicFilterExpression
  langs:
  - csharp
  name: ControlID
  nameWithType: DynamicFilterExpression.ControlID
  fullName: System.Web.DynamicData.DynamicFilterExpression.ControlID
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Obtém ou define o identificador de controlo de filtro."
  remarks: "Este identificador de controlo é utilizado pelo <xref:System.Web.DynamicData.DynamicFilterExpression>classe para selecionar o filtro de controlo para o qual as TI delega a tarefa de criação da consulta, que por sua vez é executada pelo controlo de origem de dados.</xref:System.Web.DynamicData.DynamicFilterExpression>       O controlo de filtro delega a tarefa de criação da consulta para o modelo de filtro-referências. A consulta, em seguida, é executada pelo controlo de origem de dados que é referenciado pelo <xref:System.Web.UI.WebControls.QueryExtender>controlo.</xref:System.Web.UI.WebControls.QueryExtender>"
  example:
  - "The following example shows how to use the <xref:System.Web.DynamicData.DynamicFilterExpression> class to select a filter control in a page.  \n  \n```  \n<asp:QueryExtender ID=\"QueryExtender1\"   \n    TargetControlID=\"GridDataSource\" runat=\"server\">  \n    <asp:DynamicFilterExpression ControlID=\"CategoryFilterID\" />  \n</asp:QueryExtender>  \n```"
  syntax:
    content: public string ControlID { get; set; }
    return:
      type: System.String
      description: "O identificador de controlo de filtro."
  overload: System.Web.DynamicData.DynamicFilterExpression.ControlID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicFilterExpression.GetQueryable(System.Linq.IQueryable)
  id: GetQueryable(System.Linq.IQueryable)
  parent: System.Web.DynamicData.DynamicFilterExpression
  langs:
  - csharp
  name: GetQueryable(IQueryable)
  nameWithType: DynamicFilterExpression.GetQueryable(IQueryable)
  fullName: System.Web.DynamicData.DynamicFilterExpression.GetQueryable(IQueryable)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Obtém a consulta modificada utilizando o valor atual do filtro."
  remarks: "O método GetQueryable delega a tarefa de criação da consulta para o modelo de filtro referenciado pelo controlo de filtro especificado pelo <xref:System.Web.DynamicData.DynamicFilterExpression.ControlID%2A>propriedade.</xref:System.Web.DynamicData.DynamicFilterExpression.ControlID%2A>"
  syntax:
    content: public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);
    parameters:
    - id: source
      type: System.Linq.IQueryable
      description: "A consulta de origem de dados para modificar."
    return:
      type: System.Linq.IQueryable
      description: "A consulta de origem de dados é modificada utilizando o valor atual que está contido no <xref href=&quot;System.Web.DynamicData.DynamicFilterExpression&quot;> </xref> instância."
  overload: System.Web.DynamicData.DynamicFilterExpression.GetQueryable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicFilterExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)
  id: SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)
  parent: System.Web.DynamicData.DynamicFilterExpression
  langs:
  - csharp
  name: SetContext(Control,HttpContext,IQueryableDataSource)
  nameWithType: DynamicFilterExpression.SetContext(Control,HttpContext,IQueryableDataSource)
  fullName: System.Web.DynamicData.DynamicFilterExpression.SetContext(Control,HttpContext,IQueryableDataSource)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Inicializa a expressão com informações da origem de dados."
  syntax:
    content: public override void SetContext (System.Web.UI.Control owner, System.Web.HttpContext context, System.Web.UI.WebControls.IQueryableDataSource dataSource);
    parameters:
    - id: owner
      type: System.Web.UI.Control
      description: "O controlo que contém o <xref href=&quot;System.Web.DynamicData.DynamicFilterExpression&quot;> </xref> instância, tal como o <xref href=&quot;System.Web.UI.WebControls.QueryExtender&quot;> </xref> controlo."
    - id: context
      type: System.Web.HttpContext
      description: "Atual <xref href=&quot;System.Web.HttpContext&quot;> </xref> objeto."
    - id: dataSource
      type: System.Web.UI.WebControls.IQueryableDataSource
      description: "Os dados de destino de origem para o <xref href=&quot;System.Web.DynamicData.DynamicFilterExpression&quot;> </xref> instância."
  overload: System.Web.DynamicData.DynamicFilterExpression.SetContext*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.Expressions.DataSourceExpression
  isExternal: false
  name: System.Web.UI.WebControls.Expressions.DataSourceExpression
- uid: System.Web.DynamicData.DynamicFilterExpression.#ctor
  parent: System.Web.DynamicData.DynamicFilterExpression
  isExternal: false
  name: DynamicFilterExpression()
  nameWithType: DynamicFilterExpression.DynamicFilterExpression()
  fullName: System.Web.DynamicData.DynamicFilterExpression.DynamicFilterExpression()
- uid: System.Web.DynamicData.DynamicFilterExpression.ControlID
  parent: System.Web.DynamicData.DynamicFilterExpression
  isExternal: false
  name: ControlID
  nameWithType: DynamicFilterExpression.ControlID
  fullName: System.Web.DynamicData.DynamicFilterExpression.ControlID
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DynamicData.DynamicFilterExpression.GetQueryable(System.Linq.IQueryable)
  parent: System.Web.DynamicData.DynamicFilterExpression
  isExternal: false
  name: GetQueryable(IQueryable)
  nameWithType: DynamicFilterExpression.GetQueryable(IQueryable)
  fullName: System.Web.DynamicData.DynamicFilterExpression.GetQueryable(IQueryable)
- uid: System.Linq.IQueryable
  parent: System.Linq
  isExternal: true
  name: IQueryable
  nameWithType: IQueryable
  fullName: System.Linq.IQueryable
- uid: System.Web.DynamicData.DynamicFilterExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)
  parent: System.Web.DynamicData.DynamicFilterExpression
  isExternal: false
  name: SetContext(Control,HttpContext,IQueryableDataSource)
  nameWithType: DynamicFilterExpression.SetContext(Control,HttpContext,IQueryableDataSource)
  fullName: System.Web.DynamicData.DynamicFilterExpression.SetContext(Control,HttpContext,IQueryableDataSource)
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.UI.WebControls.IQueryableDataSource
  parent: System.Web.UI.WebControls
  isExternal: false
  name: IQueryableDataSource
  nameWithType: IQueryableDataSource
  fullName: System.Web.UI.WebControls.IQueryableDataSource
- uid: System.Web.DynamicData.DynamicFilterExpression.#ctor*
  parent: System.Web.DynamicData.DynamicFilterExpression
  isExternal: false
  name: DynamicFilterExpression
  nameWithType: DynamicFilterExpression.DynamicFilterExpression
- uid: System.Web.DynamicData.DynamicFilterExpression.ControlID*
  parent: System.Web.DynamicData.DynamicFilterExpression
  isExternal: false
  name: ControlID
  nameWithType: DynamicFilterExpression.ControlID
- uid: System.Web.DynamicData.DynamicFilterExpression.GetQueryable*
  parent: System.Web.DynamicData.DynamicFilterExpression
  isExternal: false
  name: GetQueryable
  nameWithType: DynamicFilterExpression.GetQueryable
- uid: System.Web.DynamicData.DynamicFilterExpression.SetContext*
  parent: System.Web.DynamicData.DynamicFilterExpression
  isExternal: false
  name: SetContext
  nameWithType: DynamicFilterExpression.SetContext
