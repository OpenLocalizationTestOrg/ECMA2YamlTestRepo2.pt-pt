### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler
  id: WebPartAddingEventHandler
  langs:
  - csharp
  name: WebPartAddingEventHandler
  nameWithType: WebPartAddingEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler
  type: Delegate
  summary: "Represents the method that handles the <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding&quot;></xref> event of a <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;></xref> object."
  remarks: "The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding> event is raised by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding%2A> method just before adding a control to a Web Parts zone. This event provides an opportunity to cancel the process before it is complete. The <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded> event is called after a control has been added to a Web Parts zone.       The method specified in the WebPartAddingEventHandler delegate is called when a <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding> event is raised.       Page developers can provide custom handlers for the event by adding the `OnWebPartAdding` attribute to the `<asp:webpartmanager>` element in a page, and assigning a custom method name to the attribute. A custom handler can also be assigned programmatically. For more information on programmatically assigning an event handler, see [NIB: How to: Connect Event Handler Methods to Events](http://msdn.microsoft.com/en-us/348e9600-22e3-49a2-8864-11c5bb3e98fc)."
  syntax:
    content: public delegate void WebPartAddingEventHandler(object sender, WebPartAddingEventArgs e);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
