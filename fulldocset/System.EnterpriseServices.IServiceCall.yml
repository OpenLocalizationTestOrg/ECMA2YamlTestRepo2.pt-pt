### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.IServiceCall
  id: IServiceCall
  children:
  - System.EnterpriseServices.IServiceCall.OnCall
  langs:
  - csharp
  name: IServiceCall
  nameWithType: IServiceCall
  fullName: System.EnterpriseServices.IServiceCall
  type: Interface
  summary: "Implements the batch work that is submitted through the activity created by <xref href=&quot;System.EnterpriseServices.Activity&quot;></xref>."
  remarks: "Use IServiceCall to perform batch work that uses COM+ services without creating a component specifically for using those services. Script environments such as Internet Information Services (IIS) and ASP.NET can use this interface to utilize COM+ services without the need to create a COM+ component."
  syntax:
    content: >-
      [System.Runtime.InteropServices.Guid("BD3E2E12-42DD-40f4-A09A-95A50C58304B")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      public interface IServiceCall
  implements: []
  platform:
  - net462
- uid: System.EnterpriseServices.IServiceCall.OnCall
  id: OnCall
  parent: System.EnterpriseServices.IServiceCall
  langs:
  - csharp
  name: OnCall()
  nameWithType: IServiceCall.OnCall()
  fullName: System.EnterpriseServices.IServiceCall.OnCall()
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Starts the execution of the batch work implemented in this method."
  remarks: "The batch work that is run in this method runs in the context and thread apartment of the activity created by the call to <xref:System.EnterpriseServices.Activity>. The batch work in this method is run by a call to either <xref:System.EnterpriseServices.Activity.SynchronousCall%2A?displayProperty=fullName> or <xref:System.EnterpriseServices.Activity.AsynchronousCall%2A?displayProperty=fullName>.      > [!CAUTION] >  You must ensure that this method is thread safe in situations where the activity object created by <xref:System.EnterpriseServices.Activity> is not created with a synchronized context, because in such situations many calls to OnCall can run at the same time.       To achieve the best performance from the system, the context configuration of the activity created by <xref:System.EnterpriseServices.Activity> should be matched to the batch work performed by the OnCall method. For example, if the batch work in the OnCall method uses poolable objects, the activity created by <xref:System.EnterpriseServices.Activity> should be configured to use the multithreaded apartment (MTA).       For information about poolable objects, see the topic &quot;Requirements for Poolable Objects&quot; in the Platform SDK in MSDN."
  syntax:
    content: public void OnCall ();
    parameters: []
  overload: System.EnterpriseServices.IServiceCall.OnCall*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EnterpriseServices.IServiceCall.OnCall
  parent: System.EnterpriseServices.IServiceCall
  isExternal: false
  name: OnCall()
  nameWithType: IServiceCall.OnCall()
  fullName: System.EnterpriseServices.IServiceCall.OnCall()
- uid: System.EnterpriseServices.IServiceCall.OnCall*
  parent: System.EnterpriseServices.IServiceCall
  isExternal: false
  name: OnCall
  nameWithType: IServiceCall.OnCall
