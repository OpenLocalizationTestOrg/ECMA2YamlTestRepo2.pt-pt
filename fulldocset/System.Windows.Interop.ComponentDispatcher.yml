### YamlMime:ManagedReference
items:
- uid: System.Windows.Interop.ComponentDispatcher
  id: ComponentDispatcher
  children:
  - System.Windows.Interop.ComponentDispatcher.CurrentKeyboardMessage
  - System.Windows.Interop.ComponentDispatcher.EnterThreadModal
  - System.Windows.Interop.ComponentDispatcher.IsThreadModal
  - System.Windows.Interop.ComponentDispatcher.LeaveThreadModal
  - System.Windows.Interop.ComponentDispatcher.PopModal
  - System.Windows.Interop.ComponentDispatcher.PushModal
  - System.Windows.Interop.ComponentDispatcher.RaiseIdle
  - System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)
  - System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage
  - System.Windows.Interop.ComponentDispatcher.ThreadIdle
  - System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage
  langs:
  - csharp
  name: ComponentDispatcher
  nameWithType: ComponentDispatcher
  fullName: System.Windows.Interop.ComponentDispatcher
  type: Class
  summary: "Enables shared control of the message pump between [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] and [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] in interoperation scenarios."
  remarks: "Although the class itself is static, all members of ComponentDispatcher are specific to a particular thread. For example, if you examine the value of <xref:System.Windows.Interop.ComponentDispatcher.IsThreadModal%2A> on two different threads, you might get different values.       The methods are static but they are backed by per-thread data structures.  The static methods allow singleton access but the ComponentDispatcher is sorting out the appropriate per-thread operations.       The owner of the message pump is defined by the code that calls the [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] function  [GetMessage](http://msdn.microsoft.com/library/ms644936.aspx). The owner calls <xref:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage%2A> for every keyboard message. This method raises the <xref:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage> event with the messages contained in the event data. If that event is not handled, the owner raises the <xref:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage> event with the messages contained in the event argument.      > [!NOTE] >  Only keyboard messages are supported."
  syntax:
    content: public static class ComponentDispatcher
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Interop.ComponentDispatcher.CurrentKeyboardMessage
  id: CurrentKeyboardMessage
  parent: System.Windows.Interop.ComponentDispatcher
  langs:
  - csharp
  name: CurrentKeyboardMessage
  nameWithType: ComponentDispatcher.CurrentKeyboardMessage
  fullName: System.Windows.Interop.ComponentDispatcher.CurrentKeyboardMessage
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Interop
  summary: "Gets the last message that was raised."
  syntax:
    content: public static System.Windows.Interop.MSG CurrentKeyboardMessage { get; }
    return:
      type: System.Windows.Interop.MSG
      description: "The last message."
  overload: System.Windows.Interop.ComponentDispatcher.CurrentKeyboardMessage*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Interop.ComponentDispatcher.EnterThreadModal
  id: EnterThreadModal
  parent: System.Windows.Interop.ComponentDispatcher
  langs:
  - csharp
  name: EnterThreadModal
  nameWithType: ComponentDispatcher.EnterThreadModal
  fullName: System.Windows.Interop.ComponentDispatcher.EnterThreadModal
  type: Event
  assemblies:
  - WindowsBase
  namespace: System.Windows.Interop
  summary: "Occurs when a thread becomes modal."
  syntax:
    content: public static event EventHandler EnterThreadModal;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Interop.ComponentDispatcher.IsThreadModal
  id: IsThreadModal
  parent: System.Windows.Interop.ComponentDispatcher
  langs:
  - csharp
  name: IsThreadModal
  nameWithType: ComponentDispatcher.IsThreadModal
  fullName: System.Windows.Interop.ComponentDispatcher.IsThreadModal
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Interop
  summary: "Gets a value that indicates whether the thread is modal."
  syntax:
    content: public static bool IsThreadModal { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> if the thread is modal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Interop.ComponentDispatcher.IsThreadModal*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Interop.ComponentDispatcher.LeaveThreadModal
  id: LeaveThreadModal
  parent: System.Windows.Interop.ComponentDispatcher
  langs:
  - csharp
  name: LeaveThreadModal
  nameWithType: ComponentDispatcher.LeaveThreadModal
  fullName: System.Windows.Interop.ComponentDispatcher.LeaveThreadModal
  type: Event
  assemblies:
  - WindowsBase
  namespace: System.Windows.Interop
  summary: "Occurs when a modal thread becomes nonmodal."
  syntax:
    content: public static event EventHandler LeaveThreadModal;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Interop.ComponentDispatcher.PopModal
  id: PopModal
  parent: System.Windows.Interop.ComponentDispatcher
  langs:
  - csharp
  name: PopModal()
  nameWithType: ComponentDispatcher.PopModal()
  fullName: System.Windows.Interop.ComponentDispatcher.PopModal()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Interop
  summary: "Called to indicate that a modal thread is no longer modal."
  syntax:
    content: public static void PopModal ();
    parameters: []
  overload: System.Windows.Interop.ComponentDispatcher.PopModal*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Interop.ComponentDispatcher.PushModal
  id: PushModal
  parent: System.Windows.Interop.ComponentDispatcher
  langs:
  - csharp
  name: PushModal()
  nameWithType: ComponentDispatcher.PushModal()
  fullName: System.Windows.Interop.ComponentDispatcher.PushModal()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Interop
  summary: "Called to indicate that the thread is modal."
  syntax:
    content: public static void PushModal ();
    parameters: []
  overload: System.Windows.Interop.ComponentDispatcher.PushModal*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Interop.ComponentDispatcher.RaiseIdle
  id: RaiseIdle
  parent: System.Windows.Interop.ComponentDispatcher
  langs:
  - csharp
  name: RaiseIdle()
  nameWithType: ComponentDispatcher.RaiseIdle()
  fullName: System.Windows.Interop.ComponentDispatcher.RaiseIdle()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Interop
  summary: "Called to indicate that a thread is idle."
  syntax:
    content: public static void RaiseIdle ();
    parameters: []
  overload: System.Windows.Interop.ComponentDispatcher.RaiseIdle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)
  id: RaiseThreadMessage(System.Windows.Interop.MSG@)
  parent: System.Windows.Interop.ComponentDispatcher
  langs:
  - csharp
  name: RaiseThreadMessage(MSG)
  nameWithType: ComponentDispatcher.RaiseThreadMessage(MSG)
  fullName: System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(MSG)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows.Interop
  summary: "Indicates that a new message is available for possible handling."
  remarks: "The owner of the message pump should call this method for every keyboard message."
  syntax:
    content: public static bool RaiseThreadMessage (ref System.Windows.Interop.MSG msg);
    parameters:
    - id: msg
      type: System.Windows.Interop.MSG
      description: "The message and its associated data."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, if one of the modules listening to the message loop processed the message. The owner of the message loop should ignore the message. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>, if the message was not processed. In this case, the owner of the message pump should call the [!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)] function [TranslateMessage](http://msdn.microsoft.com/library/ms644955.aspx) followed by [DispatchMessage](http://msdn.microsoft.com/library/ms644934.aspx)."
  overload: System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage
  id: ThreadFilterMessage
  parent: System.Windows.Interop.ComponentDispatcher
  langs:
  - csharp
  name: ThreadFilterMessage
  nameWithType: ComponentDispatcher.ThreadFilterMessage
  fullName: System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage
  type: Event
  assemblies:
  - WindowsBase
  namespace: System.Windows.Interop
  summary: "Occurs when the message pump receives a keyboard message."
  syntax:
    content: public static event System.Windows.Interop.ThreadMessageEventHandler ThreadFilterMessage;
    return:
      type: System.Windows.Interop.ThreadMessageEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Interop.ComponentDispatcher.ThreadIdle
  id: ThreadIdle
  parent: System.Windows.Interop.ComponentDispatcher
  langs:
  - csharp
  name: ThreadIdle
  nameWithType: ComponentDispatcher.ThreadIdle
  fullName: System.Windows.Interop.ComponentDispatcher.ThreadIdle
  type: Event
  assemblies:
  - WindowsBase
  namespace: System.Windows.Interop
  summary: "Occurs when the thread is idle."
  remarks: "If there are no messages in the queue, then the idle state announced by the ThreadIdle event is an efficient time to do processing."
  syntax:
    content: public static event EventHandler ThreadIdle;
    return:
      type: System.EventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage
  id: ThreadPreprocessMessage
  parent: System.Windows.Interop.ComponentDispatcher
  langs:
  - csharp
  name: ThreadPreprocessMessage
  nameWithType: ComponentDispatcher.ThreadPreprocessMessage
  fullName: System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage
  type: Event
  assemblies:
  - WindowsBase
  namespace: System.Windows.Interop
  summary: "Occurs when the message pump receives a keyboard message."
  remarks: "This event should be raised after <xref:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage>, if that event is not handled."
  syntax:
    content: public static event System.Windows.Interop.ThreadMessageEventHandler ThreadPreprocessMessage;
    return:
      type: System.Windows.Interop.ThreadMessageEventHandler
      description: "To be added."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Interop.ComponentDispatcher.CurrentKeyboardMessage
  parent: System.Windows.Interop.ComponentDispatcher
  isExternal: false
  name: CurrentKeyboardMessage
  nameWithType: ComponentDispatcher.CurrentKeyboardMessage
  fullName: System.Windows.Interop.ComponentDispatcher.CurrentKeyboardMessage
- uid: System.Windows.Interop.MSG
  parent: System.Windows.Interop
  isExternal: false
  name: MSG
  nameWithType: MSG
  fullName: System.Windows.Interop.MSG
- uid: System.Windows.Interop.ComponentDispatcher.EnterThreadModal
  parent: System.Windows.Interop.ComponentDispatcher
  isExternal: false
  name: EnterThreadModal
  nameWithType: ComponentDispatcher.EnterThreadModal
  fullName: System.Windows.Interop.ComponentDispatcher.EnterThreadModal
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Interop.ComponentDispatcher.IsThreadModal
  parent: System.Windows.Interop.ComponentDispatcher
  isExternal: false
  name: IsThreadModal
  nameWithType: ComponentDispatcher.IsThreadModal
  fullName: System.Windows.Interop.ComponentDispatcher.IsThreadModal
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Interop.ComponentDispatcher.LeaveThreadModal
  parent: System.Windows.Interop.ComponentDispatcher
  isExternal: false
  name: LeaveThreadModal
  nameWithType: ComponentDispatcher.LeaveThreadModal
  fullName: System.Windows.Interop.ComponentDispatcher.LeaveThreadModal
- uid: System.Windows.Interop.ComponentDispatcher.PopModal
  parent: System.Windows.Interop.ComponentDispatcher
  isExternal: false
  name: PopModal()
  nameWithType: ComponentDispatcher.PopModal()
  fullName: System.Windows.Interop.ComponentDispatcher.PopModal()
- uid: System.Windows.Interop.ComponentDispatcher.PushModal
  parent: System.Windows.Interop.ComponentDispatcher
  isExternal: false
  name: PushModal()
  nameWithType: ComponentDispatcher.PushModal()
  fullName: System.Windows.Interop.ComponentDispatcher.PushModal()
- uid: System.Windows.Interop.ComponentDispatcher.RaiseIdle
  parent: System.Windows.Interop.ComponentDispatcher
  isExternal: false
  name: RaiseIdle()
  nameWithType: ComponentDispatcher.RaiseIdle()
  fullName: System.Windows.Interop.ComponentDispatcher.RaiseIdle()
- uid: System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)
  parent: System.Windows.Interop.ComponentDispatcher
  isExternal: false
  name: RaiseThreadMessage(MSG)
  nameWithType: ComponentDispatcher.RaiseThreadMessage(MSG)
  fullName: System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(MSG)
- uid: System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage
  parent: System.Windows.Interop.ComponentDispatcher
  isExternal: false
  name: ThreadFilterMessage
  nameWithType: ComponentDispatcher.ThreadFilterMessage
  fullName: System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage
- uid: System.Windows.Interop.ThreadMessageEventHandler
  parent: System.Windows.Interop
  isExternal: false
  name: ThreadMessageEventHandler
  nameWithType: ThreadMessageEventHandler
  fullName: System.Windows.Interop.ThreadMessageEventHandler
- uid: System.Windows.Interop.ComponentDispatcher.ThreadIdle
  parent: System.Windows.Interop.ComponentDispatcher
  isExternal: false
  name: ThreadIdle
  nameWithType: ComponentDispatcher.ThreadIdle
  fullName: System.Windows.Interop.ComponentDispatcher.ThreadIdle
- uid: System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage
  parent: System.Windows.Interop.ComponentDispatcher
  isExternal: false
  name: ThreadPreprocessMessage
  nameWithType: ComponentDispatcher.ThreadPreprocessMessage
  fullName: System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage
- uid: System.Windows.Interop.ComponentDispatcher.CurrentKeyboardMessage*
  parent: System.Windows.Interop.ComponentDispatcher
  isExternal: false
  name: CurrentKeyboardMessage
  nameWithType: ComponentDispatcher.CurrentKeyboardMessage
- uid: System.Windows.Interop.ComponentDispatcher.IsThreadModal*
  parent: System.Windows.Interop.ComponentDispatcher
  isExternal: false
  name: IsThreadModal
  nameWithType: ComponentDispatcher.IsThreadModal
- uid: System.Windows.Interop.ComponentDispatcher.PopModal*
  parent: System.Windows.Interop.ComponentDispatcher
  isExternal: false
  name: PopModal
  nameWithType: ComponentDispatcher.PopModal
- uid: System.Windows.Interop.ComponentDispatcher.PushModal*
  parent: System.Windows.Interop.ComponentDispatcher
  isExternal: false
  name: PushModal
  nameWithType: ComponentDispatcher.PushModal
- uid: System.Windows.Interop.ComponentDispatcher.RaiseIdle*
  parent: System.Windows.Interop.ComponentDispatcher
  isExternal: false
  name: RaiseIdle
  nameWithType: ComponentDispatcher.RaiseIdle
- uid: System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage*
  parent: System.Windows.Interop.ComponentDispatcher
  isExternal: false
  name: RaiseThreadMessage
  nameWithType: ComponentDispatcher.RaiseThreadMessage
